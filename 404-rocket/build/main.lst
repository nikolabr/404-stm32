ARM GAS  /tmp/ccmk192Y.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB130:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccmk192Y.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** // Uncomment line below if BNO is connected and working
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** #define BNO_CONNECTED
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** // Uncomment line below to enable RPM regulation
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #define ENABLE_RPM_REGULATION
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  56:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** UART_HandleTypeDef huart2;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // SET PID VARIABLES HERE
  63:Core/Src/main.c **** static const float pid_variables[] =
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   // P, I and D for Servo X
  66:Core/Src/main.c ****   110.0, 0.0, 55.0,
  67:Core/Src/main.c ****   // 500.0, 0.0, 0.0,
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   // P, I and D for Servo Y
  70:Core/Src/main.c ****   // 270.0, 0.0, 40.0,
  71:Core/Src/main.c ****   271.0, 0.0, 40.0,
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   // P, I and D for ESC servo
  74:Core/Src/main.c ****   0.2, 0.0002, 0
  75:Core/Src/main.c **** };
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** HAL_StatusTypeDef ret;
  78:Core/Src/main.c **** struct bno055_t imu;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** uint32_t adc_value;
  81:Core/Src/main.c **** double esc_speed = 0.3;
  82:Core/Src/main.c **** double esc_rpm;
  83:Core/Src/main.c **** double esc_output = 0.0;
  84:Core/Src/main.c **** double xout, yout;
  85:Core/Src/main.c **** uint8_t serial_output[60] = {0};
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** double esc_measurements[8];
  88:Core/Src/main.c **** unsigned char cur_measurement;
ARM GAS  /tmp/ccmk192Y.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** uint32_t rpm_length;
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END PV */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  95:Core/Src/main.c **** void SystemClock_Config(void);
  96:Core/Src/main.c **** static void MX_GPIO_Init(void);
  97:Core/Src/main.c **** static void MX_TIM1_Init(void);
  98:Core/Src/main.c **** static void MX_I2C1_Init(void);
  99:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 100:Core/Src/main.c **** static void MX_SPI1_Init(void);
 101:Core/Src/main.c **** static void MX_TIM2_Init(void);
 102:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* USER CODE END PFP */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 107:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* USER CODE END 0 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /**
 112:Core/Src/main.c ****   * @brief  The application entry point.
 113:Core/Src/main.c ****   * @retval int
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c **** int main(void)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 118:Core/Src/main.c ****   long measurement_sum = 0;
 119:Core/Src/main.c **** 	uint32_t t = 0;
 120:Core/Src/main.c **** 	volatile HAL_StatusTypeDef stat;
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 1 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 127:Core/Src/main.c ****   HAL_Init();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE END Init */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Configure the system clock */
 135:Core/Src/main.c ****   SystemClock_Config();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE END SysInit */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* Initialize all configured peripherals */
 142:Core/Src/main.c ****   MX_GPIO_Init();
 143:Core/Src/main.c ****   MX_TIM1_Init();
 144:Core/Src/main.c ****   MX_I2C1_Init();
 145:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  /tmp/ccmk192Y.s 			page 4


 146:Core/Src/main.c ****   MX_SPI1_Init();
 147:Core/Src/main.c ****   MX_TIM2_Init();
 148:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 149:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
 150:Core/Src/main.c ****   struct bno055_euler_double_t orientation_data;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   imu.bus_read = BNO055_I2C_bus_read;
 153:Core/Src/main.c ****   imu.bus_write = BNO055_I2C_bus_write;
 154:Core/Src/main.c ****   imu.delay_msec = BNO055_delay_msek;
 155:Core/Src/main.c ****   imu.dev_addr = BNO055_I2C_ADDR1;
 156:Core/Src/main.c **** #ifdef BNO_CONNECTED
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   bno055_init(&imu);
 159:Core/Src/main.c ****   bno055_set_power_mode(BNO055_POWER_MODE_NORMAL);
 160:Core/Src/main.c ****   bno055_set_operation_mode(BNO055_OPERATION_MODE_NDOF);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   while (bno055_convert_double_euler_hpr_deg(&orientation_data) != BNO055_SUCCESS) {
 163:Core/Src/main.c ****   
 164:Core/Src/main.c ****   };
 165:Core/Src/main.c **** #endif
 166:Core/Src/main.c ****   
 167:Core/Src/main.c ****   //these are just absolute values, you have to correct directions in pid.c
 168:Core/Src/main.c ****   double Kpp = pid_variables[0];
 169:Core/Src/main.c ****   double Kip = pid_variables[1];
 170:Core/Src/main.c ****   double Kdp = pid_variables[2];
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   double Kpr = pid_variables[3];
 173:Core/Src/main.c ****   double Kir = pid_variables[4];
 174:Core/Src/main.c ****   double Kdr = pid_variables[5];
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   double Kpe = pid_variables[6];
 177:Core/Src/main.c ****   double Kie = pid_variables[7];
 178:Core/Src/main.c ****   double Kde = pid_variables[8];
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   PID_TypeDef escPID;
 181:Core/Src/main.c ****   PID_TypeDef xPID;
 182:Core/Src/main.c ****   PID_TypeDef yPID;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   double xSetpoint, ySetpoint;
 185:Core/Src/main.c ****   xSetpoint = fabs(orientation_data.p);
 186:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   PID(&xPID, &orientation_data.p, &xout, &xSetpoint, Kpp, Kip, Kdp, _PID_P_ON_E, _PID_CD_DIRECT);
 189:Core/Src/main.c ****   PID_SetMode(&xPID, _PID_MODE_AUTOMATIC);
 190:Core/Src/main.c ****   PID_SetSampleTime(&xPID, 10);
 191:Core/Src/main.c ****   PID_SetOutputLimits(&xPID, -10922.5, 10992.5);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   PID(&yPID, &orientation_data.r, &yout, &ySetpoint, Kpr, Kir, Kdr, _PID_P_ON_E, _PID_CD_DIRECT);
 194:Core/Src/main.c ****   PID_SetMode(&yPID, _PID_MODE_AUTOMATIC);
 195:Core/Src/main.c ****   PID_SetSampleTime(&yPID, 10);
 196:Core/Src/main.c ****   PID_SetOutputLimits(&yPID, -10922.5, 10922.5);
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /*
 199:Core/Src/main.c ****   esc_speed = 0.3;
 200:Core/Src/main.c ****   esc_rpm = esc_speed;
 201:Core/Src/main.c ****   PID(&escPID, &esc_rpm, &esc_output, &esc_speed, Kpe, Kie, Kde, _PID_P_ON_M, _PID_CD_DIRECT);
 202:Core/Src/main.c ****   PID_SetMode(&escPID, _PID_MODE_AUTOMATIC);
ARM GAS  /tmp/ccmk192Y.s 			page 5


 203:Core/Src/main.c ****   PID_SetSampleTime(&escPID, 10);
 204:Core/Src/main.c ****   PID_SetOutputLimits(&escPID, -1.0, 1.0);
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 208:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 209:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_2);
 210:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_3);
 211:Core/Src/main.c ****   //HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_4);
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   SimpleRegulatorStruct regulator =
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     .Ki = Kie,
 216:Core/Src/main.c ****     .input = &esc_rpm,
 217:Core/Src/main.c ****     .output = &esc_output,
 218:Core/Src/main.c ****     .reference = 0.4,
 219:Core/Src/main.c ****     .error = 0.0,
 220:Core/Src/main.c ****     .min = 0.3,
 221:Core/Src/main.c ****     .max = 0.7,
 222:Core/Src/main.c ****     .prev_time = HAL_GetTick()
 223:Core/Src/main.c ****   };
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   esc_speed = 0.3;
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   t = HAL_GetTick();
 228:Core/Src/main.c ****   TIM1->CCR3 = 0x5555;
 229:Core/Src/main.c ****   while (HAL_GetTick() - t < 3000) {
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   cur_measurement = 0;
 233:Core/Src/main.c ****   TIM1->CCR3 = 0x5555 + esc_speed * 0x5555;
 234:Core/Src/main.c ****   t = HAL_GetTick();
 235:Core/Src/main.c ****   while (HAL_GetTick() - t < 500) {
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* Infinite loop */
 242:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 243:Core/Src/main.c ****   while (1)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     #ifdef BNO_CONNECTED
 246:Core/Src/main.c **** 	  while (bno055_convert_double_euler_hpr_deg(&orientation_data) != BNO055_SUCCESS) {
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** 	  };
 249:Core/Src/main.c ****     orientation_data.p = fabs(orientation_data.p);
 250:Core/Src/main.c ****     #endif
 251:Core/Src/main.c ****     
 252:Core/Src/main.c ****     #ifdef ENABLE_RPM_REGULATION
 253:Core/Src/main.c ****     esc_measurements[cur_measurement] = rpm_length;
 254:Core/Src/main.c ****     cur_measurement++;
 255:Core/Src/main.c ****     
 256:Core/Src/main.c ****     // This section filters out some noise on the digital signal
 257:Core/Src/main.c ****     if (cur_measurement >= 8)
 258:Core/Src/main.c ****     {
 259:Core/Src/main.c ****       for (int i = 1; i < 8; i++ )
ARM GAS  /tmp/ccmk192Y.s 			page 6


 260:Core/Src/main.c ****       {
 261:Core/Src/main.c ****         for (int j = 0; j < i; j++ )
 262:Core/Src/main.c ****         {
 263:Core/Src/main.c ****           if (esc_measurements[j] > esc_measurements[j + 1])
 264:Core/Src/main.c ****           {
 265:Core/Src/main.c ****             long temp = esc_measurements[j + 1];
 266:Core/Src/main.c ****             esc_measurements[j + 1] = esc_measurements[j];
 267:Core/Src/main.c ****             esc_measurements[j] = temp;
 268:Core/Src/main.c ****           }
 269:Core/Src/main.c ****         }
 270:Core/Src/main.c ****       }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****       measurement_sum = 0;
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****       for (int i = 0; i < 4; i++)
 275:Core/Src/main.c ****       {
 276:Core/Src/main.c ****         measurement_sum += esc_measurements[i + 1];
 277:Core/Src/main.c ****       }
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****       esc_rpm = 500.0 / measurement_sum; 
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****       cur_measurement = 0;
 282:Core/Src/main.c ****       simple_regulator_update(&regulator);
 283:Core/Src/main.c ****       TIM1->CCR3 = esc_output * 0x5555 + 0x5555;
 284:Core/Src/main.c ****     }
 285:Core/Src/main.c ****     #endif
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 	  HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn);
 288:Core/Src/main.c **** 	  PID_Compute(&xPID);
 289:Core/Src/main.c **** 	  PID_Compute(&yPID);
 290:Core/Src/main.c ****     
 291:Core/Src/main.c ****     // snprintf(serial_output, 10, "%ld\r\n", rpm_length);
 292:Core/Src/main.c ****     // stat = HAL_UART_Transmit(&huart2, serial_output, 60, 1000);
 293:Core/Src/main.c ****     
 294:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 295:Core/Src/main.c ****     
 296:Core/Src/main.c ****     /* USER CODE END WHILE */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c ****   /* USER CODE END 3 */
 301:Core/Src/main.c **** }
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /**
 304:Core/Src/main.c ****   * @brief System Clock Configuration
 305:Core/Src/main.c ****   * @retval None
 306:Core/Src/main.c ****   */
 307:Core/Src/main.c **** void SystemClock_Config(void)
 308:Core/Src/main.c **** {
 309:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 310:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 311:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 314:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 315:Core/Src/main.c ****   */
 316:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
ARM GAS  /tmp/ccmk192Y.s 			page 7


 317:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 318:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL11;
 322:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 327:Core/Src/main.c ****   */
 328:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 329:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 330:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 331:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 333:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****     Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_TIM1;
 340:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 341:Core/Src/main.c ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 342:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
 345:Core/Src/main.c ****   }
 346:Core/Src/main.c **** }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 350:Core/Src/main.c ****   * @param None
 351:Core/Src/main.c ****   * @retval None
 352:Core/Src/main.c ****   */
 353:Core/Src/main.c **** static void MX_I2C1_Init(void)
 354:Core/Src/main.c **** {
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 363:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 364:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 365:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 366:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 367:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 368:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 369:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 370:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 371:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 372:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 373:Core/Src/main.c ****   {
ARM GAS  /tmp/ccmk192Y.s 			page 8


 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c ****   /** Configure Analogue filter
 377:Core/Src/main.c ****   */
 378:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     Error_Handler();
 381:Core/Src/main.c ****   }
 382:Core/Src/main.c ****   /** Configure Digital filter
 383:Core/Src/main.c ****   */
 384:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 385:Core/Src/main.c ****   {
 386:Core/Src/main.c ****     Error_Handler();
 387:Core/Src/main.c ****   }
 388:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** }
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** /**
 395:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 396:Core/Src/main.c ****   * @param None
 397:Core/Src/main.c ****   * @retval None
 398:Core/Src/main.c ****   */
 399:Core/Src/main.c **** static void MX_SPI1_Init(void)
 400:Core/Src/main.c **** {
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 409:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 410:Core/Src/main.c ****   hspi1.Instance = SPI1;
 411:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 412:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 413:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 414:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 415:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 416:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 417:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 418:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 419:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 420:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 421:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 422:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 423:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 424:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 425:Core/Src/main.c ****   {
 426:Core/Src/main.c ****     Error_Handler();
 427:Core/Src/main.c ****   }
 428:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
ARM GAS  /tmp/ccmk192Y.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** }
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** /**
 435:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 436:Core/Src/main.c ****   * @param None
 437:Core/Src/main.c ****   * @retval None
 438:Core/Src/main.c ****   */
 439:Core/Src/main.c **** static void MX_TIM1_Init(void)
 440:Core/Src/main.c **** {
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 447:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 448:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 449:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 454:Core/Src/main.c ****   htim1.Instance = TIM1;
 455:Core/Src/main.c ****   htim1.Init.Prescaler = 1;
 456:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 457:Core/Src/main.c ****   htim1.Init.Period = 65535;
 458:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 459:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 460:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 461:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****     Error_Handler();
 464:Core/Src/main.c ****   }
 465:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 466:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 467:Core/Src/main.c ****   {
 468:Core/Src/main.c ****     Error_Handler();
 469:Core/Src/main.c ****   }
 470:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 471:Core/Src/main.c ****   {
 472:Core/Src/main.c ****     Error_Handler();
 473:Core/Src/main.c ****   }
 474:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 475:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 476:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 477:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 478:Core/Src/main.c ****   {
 479:Core/Src/main.c ****     Error_Handler();
 480:Core/Src/main.c ****   }
 481:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 482:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 483:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 484:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 485:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 486:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 487:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
ARM GAS  /tmp/ccmk192Y.s 			page 10


 488:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 489:Core/Src/main.c ****   {
 490:Core/Src/main.c ****     Error_Handler();
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 493:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 494:Core/Src/main.c ****   {
 495:Core/Src/main.c ****     Error_Handler();
 496:Core/Src/main.c ****   }
 497:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 498:Core/Src/main.c ****   {
 499:Core/Src/main.c ****     Error_Handler();
 500:Core/Src/main.c ****   }
 501:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 502:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 503:Core/Src/main.c ****   {
 504:Core/Src/main.c ****     Error_Handler();
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 507:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 508:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 509:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 510:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 511:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 512:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 513:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 514:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 515:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 516:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 517:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 518:Core/Src/main.c ****   {
 519:Core/Src/main.c ****     Error_Handler();
 520:Core/Src/main.c ****   }
 521:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 522:Core/Src/main.c **** 
 523:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 524:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 530:Core/Src/main.c ****   * @param None
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** static void MX_TIM2_Init(void)
 534:Core/Src/main.c **** {
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 539:Core/Src/main.c **** 
 540:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 541:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 544:Core/Src/main.c **** 
ARM GAS  /tmp/ccmk192Y.s 			page 11


 545:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 546:Core/Src/main.c ****   htim2.Instance = TIM2;
 547:Core/Src/main.c ****   htim2.Init.Prescaler = 43;
 548:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 549:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 550:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 551:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 552:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 553:Core/Src/main.c ****   {
 554:Core/Src/main.c ****     Error_Handler();
 555:Core/Src/main.c ****   }
 556:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 557:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 558:Core/Src/main.c ****   {
 559:Core/Src/main.c ****     Error_Handler();
 560:Core/Src/main.c ****   }
 561:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 562:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 563:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 564:Core/Src/main.c ****   {
 565:Core/Src/main.c ****     Error_Handler();
 566:Core/Src/main.c ****   }
 567:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** }
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** /**
 574:Core/Src/main.c ****   * @brief USART2 Initialization Function
 575:Core/Src/main.c ****   * @param None
 576:Core/Src/main.c ****   * @retval None
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 579:Core/Src/main.c **** {
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 588:Core/Src/main.c ****   huart2.Instance = USART2;
 589:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 590:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 591:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 592:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 593:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 594:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 595:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 596:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 597:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 598:Core/Src/main.c ****   huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 599:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 600:Core/Src/main.c ****   {
 601:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccmk192Y.s 			page 12


 602:Core/Src/main.c ****   }
 603:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c **** }
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** /**
 610:Core/Src/main.c ****   * @brief GPIO Initialization Function
 611:Core/Src/main.c ****   * @param None
 612:Core/Src/main.c ****   * @retval None
 613:Core/Src/main.c ****   */
 614:Core/Src/main.c **** static void MX_GPIO_Init(void)
 615:Core/Src/main.c **** {
  28              		.loc 1 615 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 88B0     		sub	sp, sp, #32
  39              		.cfi_def_cfa_offset 48
 616:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 616 3 view .LVU1
  41              		.loc 1 616 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 619:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 619 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 619 3 view .LVU4
  51              		.loc 1 619 3 view .LVU5
  52 0010 1D4B     		ldr	r3, .L3
  53 0012 5A69     		ldr	r2, [r3, #20]
  54 0014 42F40032 		orr	r2, r2, #131072
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 619 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 02F40032 		and	r2, r2, #131072
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 619 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 619 3 view .LVU8
 620:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  64              		.loc 1 620 3 view .LVU9
  65              	.LBB5:
ARM GAS  /tmp/ccmk192Y.s 			page 13


  66              		.loc 1 620 3 view .LVU10
  67              		.loc 1 620 3 view .LVU11
  68 0024 5A69     		ldr	r2, [r3, #20]
  69 0026 42F48022 		orr	r2, r2, #262144
  70 002a 5A61     		str	r2, [r3, #20]
  71              		.loc 1 620 3 view .LVU12
  72 002c 5B69     		ldr	r3, [r3, #20]
  73 002e 03F48023 		and	r3, r3, #262144
  74 0032 0293     		str	r3, [sp, #8]
  75              		.loc 1 620 3 view .LVU13
  76 0034 029B     		ldr	r3, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 620 3 view .LVU14
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 623:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
  79              		.loc 1 623 3 view .LVU15
  80              		.loc 1 623 23 is_stmt 0 view .LVU16
  81 0036 0225     		movs	r5, #2
  82 0038 0395     		str	r5, [sp, #12]
 624:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  83              		.loc 1 624 3 is_stmt 1 view .LVU17
  84              		.loc 1 624 24 is_stmt 0 view .LVU18
  85 003a 0323     		movs	r3, #3
  86 003c 0493     		str	r3, [sp, #16]
 625:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  87              		.loc 1 625 3 is_stmt 1 view .LVU19
 626:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  88              		.loc 1 626 3 view .LVU20
  89 003e 03A9     		add	r1, sp, #12
  90 0040 4FF09040 		mov	r0, #1207959552
  91 0044 FFF7FEFF 		bl	HAL_GPIO_Init
  92              	.LVL0:
 627:Core/Src/main.c **** 
 628:Core/Src/main.c ****   /*Configure GPIO pins : PA3 PA4 */
 629:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
  93              		.loc 1 629 3 view .LVU21
  94              		.loc 1 629 23 is_stmt 0 view .LVU22
  95 0048 1823     		movs	r3, #24
  96 004a 0393     		str	r3, [sp, #12]
 630:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  97              		.loc 1 630 3 is_stmt 1 view .LVU23
  98              		.loc 1 630 24 is_stmt 0 view .LVU24
  99 004c 4FF48813 		mov	r3, #1114112
 100 0050 0493     		str	r3, [sp, #16]
 631:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 101              		.loc 1 631 3 is_stmt 1 view .LVU25
 102              		.loc 1 631 24 is_stmt 0 view .LVU26
 103 0052 0126     		movs	r6, #1
 104 0054 0596     		str	r6, [sp, #20]
 632:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 632 3 is_stmt 1 view .LVU27
 106 0056 03A9     		add	r1, sp, #12
 107 0058 4FF09040 		mov	r0, #1207959552
 108 005c FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
 633:Core/Src/main.c **** 
ARM GAS  /tmp/ccmk192Y.s 			page 14


 634:Core/Src/main.c ****   /*Configure GPIO pin : PB0 */
 635:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 110              		.loc 1 635 3 view .LVU28
 111              		.loc 1 635 23 is_stmt 0 view .LVU29
 112 0060 0396     		str	r6, [sp, #12]
 636:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 113              		.loc 1 636 3 is_stmt 1 view .LVU30
 114              		.loc 1 636 24 is_stmt 0 view .LVU31
 115 0062 4FF44413 		mov	r3, #3211264
 116 0066 0493     		str	r3, [sp, #16]
 637:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 117              		.loc 1 637 3 is_stmt 1 view .LVU32
 118              		.loc 1 637 24 is_stmt 0 view .LVU33
 119 0068 0595     		str	r5, [sp, #20]
 638:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 120              		.loc 1 638 3 is_stmt 1 view .LVU34
 121 006a 03A9     		add	r1, sp, #12
 122 006c 0748     		ldr	r0, .L3+4
 123 006e FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL2:
 639:Core/Src/main.c **** 
 640:Core/Src/main.c ****   /* EXTI interrupt init*/
 641:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 125              		.loc 1 641 3 view .LVU35
 126 0072 2246     		mov	r2, r4
 127 0074 2146     		mov	r1, r4
 128 0076 0620     		movs	r0, #6
 129 0078 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 130              	.LVL3:
 642:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 131              		.loc 1 642 3 view .LVU36
 132 007c 0620     		movs	r0, #6
 133 007e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 134              	.LVL4:
 643:Core/Src/main.c **** 
 644:Core/Src/main.c **** }
 135              		.loc 1 644 1 is_stmt 0 view .LVU37
 136 0082 08B0     		add	sp, sp, #32
 137              		.cfi_def_cfa_offset 16
 138              		@ sp needed
 139 0084 70BD     		pop	{r4, r5, r6, pc}
 140              	.L4:
 141 0086 00BF     		.align	2
 142              	.L3:
 143 0088 00100240 		.word	1073876992
 144 008c 00040048 		.word	1207960576
 145              		.cfi_endproc
 146              	.LFE130:
 148              		.section	.text.Error_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	Error_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	Error_Handler:
 156              	.LFB131:
 645:Core/Src/main.c **** 
ARM GAS  /tmp/ccmk192Y.s 			page 15


 646:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** /* USER CODE END 4 */
 649:Core/Src/main.c **** 
 650:Core/Src/main.c **** /**
 651:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 652:Core/Src/main.c ****   * @retval None
 653:Core/Src/main.c ****   */
 654:Core/Src/main.c **** void Error_Handler(void)
 655:Core/Src/main.c **** {
 157              		.loc 1 655 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 656:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 657:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 658:Core/Src/main.c ****   __disable_irq();
 163              		.loc 1 658 3 view .LVU39
 164              	.LBB6:
 165              	.LBI6:
 166              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  /tmp/ccmk192Y.s 			page 16


  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccmk192Y.s 			page 17


  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 167              		.loc 2 140 27 view .LVU40
 168              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 169              		.loc 2 142 3 view .LVU41
 170              		.syntax unified
 171              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 172 0000 72B6     		cpsid i
ARM GAS  /tmp/ccmk192Y.s 			page 18


 173              	@ 0 "" 2
 174              		.thumb
 175              		.syntax unified
 176              	.L6:
 177              	.LBE7:
 178              	.LBE6:
 659:Core/Src/main.c ****   while (1)
 179              		.loc 1 659 3 discriminator 1 view .LVU42
 660:Core/Src/main.c ****   {
 661:Core/Src/main.c ****   }
 180              		.loc 1 661 3 discriminator 1 view .LVU43
 659:Core/Src/main.c ****   while (1)
 181              		.loc 1 659 9 discriminator 1 view .LVU44
 182 0002 FEE7     		b	.L6
 183              		.cfi_endproc
 184              	.LFE131:
 186              		.section	.text.MX_TIM1_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	MX_TIM1_Init:
 193              	.LFB127:
 440:Core/Src/main.c **** 
 194              		.loc 1 440 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 104
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 9AB0     		sub	sp, sp, #104
 203              		.cfi_def_cfa_offset 112
 446:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 204              		.loc 1 446 3 view .LVU46
 446:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 205              		.loc 1 446 26 is_stmt 0 view .LVU47
 206 0004 0024     		movs	r4, #0
 207 0006 1694     		str	r4, [sp, #88]
 208 0008 1794     		str	r4, [sp, #92]
 209 000a 1894     		str	r4, [sp, #96]
 210 000c 1994     		str	r4, [sp, #100]
 447:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 211              		.loc 1 447 3 is_stmt 1 view .LVU48
 447:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 212              		.loc 1 447 27 is_stmt 0 view .LVU49
 213 000e 1394     		str	r4, [sp, #76]
 214 0010 1494     		str	r4, [sp, #80]
 215 0012 1594     		str	r4, [sp, #84]
 448:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 216              		.loc 1 448 3 is_stmt 1 view .LVU50
 448:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 217              		.loc 1 448 22 is_stmt 0 view .LVU51
 218 0014 0C94     		str	r4, [sp, #48]
 219 0016 0D94     		str	r4, [sp, #52]
 220 0018 0E94     		str	r4, [sp, #56]
ARM GAS  /tmp/ccmk192Y.s 			page 19


 221 001a 0F94     		str	r4, [sp, #60]
 222 001c 1094     		str	r4, [sp, #64]
 223 001e 1194     		str	r4, [sp, #68]
 224 0020 1294     		str	r4, [sp, #72]
 449:Core/Src/main.c **** 
 225              		.loc 1 449 3 is_stmt 1 view .LVU52
 449:Core/Src/main.c **** 
 226              		.loc 1 449 34 is_stmt 0 view .LVU53
 227 0022 2C22     		movs	r2, #44
 228 0024 2146     		mov	r1, r4
 229 0026 01A8     		add	r0, sp, #4
 230 0028 FFF7FEFF 		bl	memset
 231              	.LVL5:
 454:Core/Src/main.c ****   htim1.Init.Prescaler = 1;
 232              		.loc 1 454 3 is_stmt 1 view .LVU54
 454:Core/Src/main.c ****   htim1.Init.Prescaler = 1;
 233              		.loc 1 454 18 is_stmt 0 view .LVU55
 234 002c 3E48     		ldr	r0, .L27
 235 002e 3F4B     		ldr	r3, .L27+4
 236 0030 0360     		str	r3, [r0]
 455:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 237              		.loc 1 455 3 is_stmt 1 view .LVU56
 455:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 238              		.loc 1 455 24 is_stmt 0 view .LVU57
 239 0032 0123     		movs	r3, #1
 240 0034 4360     		str	r3, [r0, #4]
 456:Core/Src/main.c ****   htim1.Init.Period = 65535;
 241              		.loc 1 456 3 is_stmt 1 view .LVU58
 456:Core/Src/main.c ****   htim1.Init.Period = 65535;
 242              		.loc 1 456 26 is_stmt 0 view .LVU59
 243 0036 8460     		str	r4, [r0, #8]
 457:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 244              		.loc 1 457 3 is_stmt 1 view .LVU60
 457:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 245              		.loc 1 457 21 is_stmt 0 view .LVU61
 246 0038 4FF6FF73 		movw	r3, #65535
 247 003c C360     		str	r3, [r0, #12]
 458:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 248              		.loc 1 458 3 is_stmt 1 view .LVU62
 458:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 249              		.loc 1 458 28 is_stmt 0 view .LVU63
 250 003e 0461     		str	r4, [r0, #16]
 459:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 251              		.loc 1 459 3 is_stmt 1 view .LVU64
 459:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 252              		.loc 1 459 32 is_stmt 0 view .LVU65
 253 0040 4461     		str	r4, [r0, #20]
 460:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 254              		.loc 1 460 3 is_stmt 1 view .LVU66
 460:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 255              		.loc 1 460 32 is_stmt 0 view .LVU67
 256 0042 8461     		str	r4, [r0, #24]
 461:Core/Src/main.c ****   {
 257              		.loc 1 461 3 is_stmt 1 view .LVU68
 461:Core/Src/main.c ****   {
 258              		.loc 1 461 7 is_stmt 0 view .LVU69
 259 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
ARM GAS  /tmp/ccmk192Y.s 			page 20


 260              	.LVL6:
 461:Core/Src/main.c ****   {
 261              		.loc 1 461 6 view .LVU70
 262 0048 0028     		cmp	r0, #0
 263 004a 5BD1     		bne	.L18
 465:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 264              		.loc 1 465 3 is_stmt 1 view .LVU71
 465:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 265              		.loc 1 465 34 is_stmt 0 view .LVU72
 266 004c 4FF48053 		mov	r3, #4096
 267 0050 1693     		str	r3, [sp, #88]
 466:Core/Src/main.c ****   {
 268              		.loc 1 466 3 is_stmt 1 view .LVU73
 466:Core/Src/main.c ****   {
 269              		.loc 1 466 7 is_stmt 0 view .LVU74
 270 0052 16A9     		add	r1, sp, #88
 271 0054 3448     		ldr	r0, .L27
 272 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL7:
 466:Core/Src/main.c ****   {
 274              		.loc 1 466 6 view .LVU75
 275 005a 0028     		cmp	r0, #0
 276 005c 54D1     		bne	.L19
 470:Core/Src/main.c ****   {
 277              		.loc 1 470 3 is_stmt 1 view .LVU76
 470:Core/Src/main.c ****   {
 278              		.loc 1 470 7 is_stmt 0 view .LVU77
 279 005e 3248     		ldr	r0, .L27
 280 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 281              	.LVL8:
 470:Core/Src/main.c ****   {
 282              		.loc 1 470 6 view .LVU78
 283 0064 0028     		cmp	r0, #0
 284 0066 51D1     		bne	.L20
 474:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 285              		.loc 1 474 3 is_stmt 1 view .LVU79
 474:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 286              		.loc 1 474 37 is_stmt 0 view .LVU80
 287 0068 0023     		movs	r3, #0
 288 006a 1393     		str	r3, [sp, #76]
 475:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 289              		.loc 1 475 3 is_stmt 1 view .LVU81
 475:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 290              		.loc 1 475 38 is_stmt 0 view .LVU82
 291 006c 1493     		str	r3, [sp, #80]
 476:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 292              		.loc 1 476 3 is_stmt 1 view .LVU83
 476:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 293              		.loc 1 476 33 is_stmt 0 view .LVU84
 294 006e 1593     		str	r3, [sp, #84]
 477:Core/Src/main.c ****   {
 295              		.loc 1 477 3 is_stmt 1 view .LVU85
 477:Core/Src/main.c ****   {
 296              		.loc 1 477 7 is_stmt 0 view .LVU86
 297 0070 13A9     		add	r1, sp, #76
 298 0072 2D48     		ldr	r0, .L27
 299 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/ccmk192Y.s 			page 21


 300              	.LVL9:
 477:Core/Src/main.c ****   {
 301              		.loc 1 477 6 view .LVU87
 302 0078 0028     		cmp	r0, #0
 303 007a 49D1     		bne	.L21
 481:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 304              		.loc 1 481 3 is_stmt 1 view .LVU88
 481:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 305              		.loc 1 481 20 is_stmt 0 view .LVU89
 306 007c 6023     		movs	r3, #96
 307 007e 0C93     		str	r3, [sp, #48]
 482:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 308              		.loc 1 482 3 is_stmt 1 view .LVU90
 482:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309              		.loc 1 482 19 is_stmt 0 view .LVU91
 310 0080 45F25553 		movw	r3, #21845
 311 0084 0D93     		str	r3, [sp, #52]
 483:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 312              		.loc 1 483 3 is_stmt 1 view .LVU92
 483:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 313              		.loc 1 483 24 is_stmt 0 view .LVU93
 314 0086 0022     		movs	r2, #0
 315 0088 0E92     		str	r2, [sp, #56]
 484:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 316              		.loc 1 484 3 is_stmt 1 view .LVU94
 484:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 317              		.loc 1 484 25 is_stmt 0 view .LVU95
 318 008a 0F92     		str	r2, [sp, #60]
 485:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 319              		.loc 1 485 3 is_stmt 1 view .LVU96
 485:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 320              		.loc 1 485 24 is_stmt 0 view .LVU97
 321 008c 1092     		str	r2, [sp, #64]
 486:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 322              		.loc 1 486 3 is_stmt 1 view .LVU98
 486:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 323              		.loc 1 486 25 is_stmt 0 view .LVU99
 324 008e 1192     		str	r2, [sp, #68]
 487:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 325              		.loc 1 487 3 is_stmt 1 view .LVU100
 487:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 326              		.loc 1 487 26 is_stmt 0 view .LVU101
 327 0090 1292     		str	r2, [sp, #72]
 488:Core/Src/main.c ****   {
 328              		.loc 1 488 3 is_stmt 1 view .LVU102
 488:Core/Src/main.c ****   {
 329              		.loc 1 488 7 is_stmt 0 view .LVU103
 330 0092 0CA9     		add	r1, sp, #48
 331 0094 2448     		ldr	r0, .L27
 332 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 333              	.LVL10:
 488:Core/Src/main.c ****   {
 334              		.loc 1 488 6 view .LVU104
 335 009a 0028     		cmp	r0, #0
 336 009c 3AD1     		bne	.L22
 492:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 337              		.loc 1 492 3 is_stmt 1 view .LVU105
ARM GAS  /tmp/ccmk192Y.s 			page 22


 492:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 338              		.loc 1 492 19 is_stmt 0 view .LVU106
 339 009e 0023     		movs	r3, #0
 340 00a0 0D93     		str	r3, [sp, #52]
 493:Core/Src/main.c ****   {
 341              		.loc 1 493 3 is_stmt 1 view .LVU107
 493:Core/Src/main.c ****   {
 342              		.loc 1 493 7 is_stmt 0 view .LVU108
 343 00a2 0422     		movs	r2, #4
 344 00a4 0CA9     		add	r1, sp, #48
 345 00a6 2048     		ldr	r0, .L27
 346 00a8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 347              	.LVL11:
 493:Core/Src/main.c ****   {
 348              		.loc 1 493 6 view .LVU109
 349 00ac 0028     		cmp	r0, #0
 350 00ae 33D1     		bne	.L23
 497:Core/Src/main.c ****   {
 351              		.loc 1 497 3 is_stmt 1 view .LVU110
 497:Core/Src/main.c ****   {
 352              		.loc 1 497 7 is_stmt 0 view .LVU111
 353 00b0 0822     		movs	r2, #8
 354 00b2 0CA9     		add	r1, sp, #48
 355 00b4 1C48     		ldr	r0, .L27
 356 00b6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 357              	.LVL12:
 497:Core/Src/main.c ****   {
 358              		.loc 1 497 6 view .LVU112
 359 00ba 0028     		cmp	r0, #0
 360 00bc 2ED1     		bne	.L24
 501:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 361              		.loc 1 501 3 is_stmt 1 view .LVU113
 501:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 362              		.loc 1 501 19 is_stmt 0 view .LVU114
 363 00be 45F25553 		movw	r3, #21845
 364 00c2 0D93     		str	r3, [sp, #52]
 502:Core/Src/main.c ****   {
 365              		.loc 1 502 3 is_stmt 1 view .LVU115
 502:Core/Src/main.c ****   {
 366              		.loc 1 502 7 is_stmt 0 view .LVU116
 367 00c4 0C22     		movs	r2, #12
 368 00c6 0CA9     		add	r1, sp, #48
 369 00c8 1748     		ldr	r0, .L27
 370 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 371              	.LVL13:
 502:Core/Src/main.c ****   {
 372              		.loc 1 502 6 view .LVU117
 373 00ce 38BB     		cbnz	r0, .L25
 506:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 374              		.loc 1 506 3 is_stmt 1 view .LVU118
 506:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 375              		.loc 1 506 40 is_stmt 0 view .LVU119
 376 00d0 0023     		movs	r3, #0
 377 00d2 0193     		str	r3, [sp, #4]
 507:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 378              		.loc 1 507 3 is_stmt 1 view .LVU120
 507:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  /tmp/ccmk192Y.s 			page 23


 379              		.loc 1 507 41 is_stmt 0 view .LVU121
 380 00d4 0293     		str	r3, [sp, #8]
 508:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 381              		.loc 1 508 3 is_stmt 1 view .LVU122
 508:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 382              		.loc 1 508 34 is_stmt 0 view .LVU123
 383 00d6 0393     		str	r3, [sp, #12]
 509:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 384              		.loc 1 509 3 is_stmt 1 view .LVU124
 509:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 385              		.loc 1 509 33 is_stmt 0 view .LVU125
 386 00d8 0493     		str	r3, [sp, #16]
 510:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 387              		.loc 1 510 3 is_stmt 1 view .LVU126
 510:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 388              		.loc 1 510 35 is_stmt 0 view .LVU127
 389 00da 0593     		str	r3, [sp, #20]
 511:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 390              		.loc 1 511 3 is_stmt 1 view .LVU128
 511:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 391              		.loc 1 511 38 is_stmt 0 view .LVU129
 392 00dc 4FF40052 		mov	r2, #8192
 393 00e0 0692     		str	r2, [sp, #24]
 512:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 394              		.loc 1 512 3 is_stmt 1 view .LVU130
 512:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 395              		.loc 1 512 36 is_stmt 0 view .LVU131
 396 00e2 0793     		str	r3, [sp, #28]
 513:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 397              		.loc 1 513 3 is_stmt 1 view .LVU132
 513:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 398              		.loc 1 513 36 is_stmt 0 view .LVU133
 399 00e4 0893     		str	r3, [sp, #32]
 514:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 400              		.loc 1 514 3 is_stmt 1 view .LVU134
 514:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 401              		.loc 1 514 39 is_stmt 0 view .LVU135
 402 00e6 4FF00072 		mov	r2, #33554432
 403 00ea 0992     		str	r2, [sp, #36]
 515:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 404              		.loc 1 515 3 is_stmt 1 view .LVU136
 515:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 405              		.loc 1 515 37 is_stmt 0 view .LVU137
 406 00ec 0A93     		str	r3, [sp, #40]
 516:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 407              		.loc 1 516 3 is_stmt 1 view .LVU138
 516:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 408              		.loc 1 516 40 is_stmt 0 view .LVU139
 409 00ee 0B93     		str	r3, [sp, #44]
 517:Core/Src/main.c ****   {
 410              		.loc 1 517 3 is_stmt 1 view .LVU140
 517:Core/Src/main.c ****   {
 411              		.loc 1 517 7 is_stmt 0 view .LVU141
 412 00f0 01A9     		add	r1, sp, #4
 413 00f2 0D48     		ldr	r0, .L27
 414 00f4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 415              	.LVL14:
ARM GAS  /tmp/ccmk192Y.s 			page 24


 517:Core/Src/main.c ****   {
 416              		.loc 1 517 6 view .LVU142
 417 00f8 A0B9     		cbnz	r0, .L26
 524:Core/Src/main.c **** 
 418              		.loc 1 524 3 is_stmt 1 view .LVU143
 419 00fa 0B48     		ldr	r0, .L27
 420 00fc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 421              	.LVL15:
 526:Core/Src/main.c **** 
 422              		.loc 1 526 1 is_stmt 0 view .LVU144
 423 0100 1AB0     		add	sp, sp, #104
 424              		.cfi_remember_state
 425              		.cfi_def_cfa_offset 8
 426              		@ sp needed
 427 0102 10BD     		pop	{r4, pc}
 428              	.L18:
 429              		.cfi_restore_state
 463:Core/Src/main.c ****   }
 430              		.loc 1 463 5 is_stmt 1 view .LVU145
 431 0104 FFF7FEFF 		bl	Error_Handler
 432              	.LVL16:
 433              	.L19:
 468:Core/Src/main.c ****   }
 434              		.loc 1 468 5 view .LVU146
 435 0108 FFF7FEFF 		bl	Error_Handler
 436              	.LVL17:
 437              	.L20:
 472:Core/Src/main.c ****   }
 438              		.loc 1 472 5 view .LVU147
 439 010c FFF7FEFF 		bl	Error_Handler
 440              	.LVL18:
 441              	.L21:
 479:Core/Src/main.c ****   }
 442              		.loc 1 479 5 view .LVU148
 443 0110 FFF7FEFF 		bl	Error_Handler
 444              	.LVL19:
 445              	.L22:
 490:Core/Src/main.c ****   }
 446              		.loc 1 490 5 view .LVU149
 447 0114 FFF7FEFF 		bl	Error_Handler
 448              	.LVL20:
 449              	.L23:
 495:Core/Src/main.c ****   }
 450              		.loc 1 495 5 view .LVU150
 451 0118 FFF7FEFF 		bl	Error_Handler
 452              	.LVL21:
 453              	.L24:
 499:Core/Src/main.c ****   }
 454              		.loc 1 499 5 view .LVU151
 455 011c FFF7FEFF 		bl	Error_Handler
 456              	.LVL22:
 457              	.L25:
 504:Core/Src/main.c ****   }
 458              		.loc 1 504 5 view .LVU152
 459 0120 FFF7FEFF 		bl	Error_Handler
 460              	.LVL23:
 461              	.L26:
ARM GAS  /tmp/ccmk192Y.s 			page 25


 519:Core/Src/main.c ****   }
 462              		.loc 1 519 5 view .LVU153
 463 0124 FFF7FEFF 		bl	Error_Handler
 464              	.LVL24:
 465              	.L28:
 466              		.align	2
 467              	.L27:
 468 0128 00000000 		.word	htim1
 469 012c 002C0140 		.word	1073818624
 470              		.cfi_endproc
 471              	.LFE127:
 473              		.section	.text.MX_I2C1_Init,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 479              	MX_I2C1_Init:
 480              	.LFB125:
 354:Core/Src/main.c **** 
 481              		.loc 1 354 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 3, -8
 488              		.cfi_offset 14, -4
 363:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 489              		.loc 1 363 3 view .LVU155
 363:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 490              		.loc 1 363 18 is_stmt 0 view .LVU156
 491 0002 1148     		ldr	r0, .L37
 492 0004 114B     		ldr	r3, .L37+4
 493 0006 0360     		str	r3, [r0]
 364:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 494              		.loc 1 364 3 is_stmt 1 view .LVU157
 364:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 495              		.loc 1 364 21 is_stmt 0 view .LVU158
 496 0008 114B     		ldr	r3, .L37+8
 497 000a 4360     		str	r3, [r0, #4]
 365:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 498              		.loc 1 365 3 is_stmt 1 view .LVU159
 365:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 499              		.loc 1 365 26 is_stmt 0 view .LVU160
 500 000c 0023     		movs	r3, #0
 501 000e 8360     		str	r3, [r0, #8]
 366:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 502              		.loc 1 366 3 is_stmt 1 view .LVU161
 366:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 503              		.loc 1 366 29 is_stmt 0 view .LVU162
 504 0010 0122     		movs	r2, #1
 505 0012 C260     		str	r2, [r0, #12]
 367:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 506              		.loc 1 367 3 is_stmt 1 view .LVU163
 367:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 507              		.loc 1 367 30 is_stmt 0 view .LVU164
 508 0014 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/ccmk192Y.s 			page 26


 368:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 509              		.loc 1 368 3 is_stmt 1 view .LVU165
 368:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 510              		.loc 1 368 26 is_stmt 0 view .LVU166
 511 0016 4361     		str	r3, [r0, #20]
 369:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 512              		.loc 1 369 3 is_stmt 1 view .LVU167
 369:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 513              		.loc 1 369 31 is_stmt 0 view .LVU168
 514 0018 8361     		str	r3, [r0, #24]
 370:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 515              		.loc 1 370 3 is_stmt 1 view .LVU169
 370:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 516              		.loc 1 370 30 is_stmt 0 view .LVU170
 517 001a C361     		str	r3, [r0, #28]
 371:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 518              		.loc 1 371 3 is_stmt 1 view .LVU171
 371:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 519              		.loc 1 371 28 is_stmt 0 view .LVU172
 520 001c 0362     		str	r3, [r0, #32]
 372:Core/Src/main.c ****   {
 521              		.loc 1 372 3 is_stmt 1 view .LVU173
 372:Core/Src/main.c ****   {
 522              		.loc 1 372 7 is_stmt 0 view .LVU174
 523 001e FFF7FEFF 		bl	HAL_I2C_Init
 524              	.LVL25:
 372:Core/Src/main.c ****   {
 525              		.loc 1 372 6 view .LVU175
 526 0022 50B9     		cbnz	r0, .L34
 378:Core/Src/main.c ****   {
 527              		.loc 1 378 3 is_stmt 1 view .LVU176
 378:Core/Src/main.c ****   {
 528              		.loc 1 378 7 is_stmt 0 view .LVU177
 529 0024 0021     		movs	r1, #0
 530 0026 0848     		ldr	r0, .L37
 531 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 532              	.LVL26:
 378:Core/Src/main.c ****   {
 533              		.loc 1 378 6 view .LVU178
 534 002c 38B9     		cbnz	r0, .L35
 384:Core/Src/main.c ****   {
 535              		.loc 1 384 3 is_stmt 1 view .LVU179
 384:Core/Src/main.c ****   {
 536              		.loc 1 384 7 is_stmt 0 view .LVU180
 537 002e 0021     		movs	r1, #0
 538 0030 0548     		ldr	r0, .L37
 539 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 540              	.LVL27:
 384:Core/Src/main.c ****   {
 541              		.loc 1 384 6 view .LVU181
 542 0036 20B9     		cbnz	r0, .L36
 392:Core/Src/main.c **** 
 543              		.loc 1 392 1 view .LVU182
 544 0038 08BD     		pop	{r3, pc}
 545              	.L34:
 374:Core/Src/main.c ****   }
 546              		.loc 1 374 5 is_stmt 1 view .LVU183
ARM GAS  /tmp/ccmk192Y.s 			page 27


 547 003a FFF7FEFF 		bl	Error_Handler
 548              	.LVL28:
 549              	.L35:
 380:Core/Src/main.c ****   }
 550              		.loc 1 380 5 view .LVU184
 551 003e FFF7FEFF 		bl	Error_Handler
 552              	.LVL29:
 553              	.L36:
 386:Core/Src/main.c ****   }
 554              		.loc 1 386 5 view .LVU185
 555 0042 FFF7FEFF 		bl	Error_Handler
 556              	.LVL30:
 557              	.L38:
 558 0046 00BF     		.align	2
 559              	.L37:
 560 0048 00000000 		.word	hi2c1
 561 004c 00540040 		.word	1073763328
 562 0050 0E090020 		.word	536873230
 563              		.cfi_endproc
 564              	.LFE125:
 566              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 567              		.align	1
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	MX_USART2_UART_Init:
 573              	.LFB129:
 579:Core/Src/main.c **** 
 574              		.loc 1 579 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 3, -8
 581              		.cfi_offset 14, -4
 588:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 582              		.loc 1 588 3 view .LVU187
 588:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 583              		.loc 1 588 19 is_stmt 0 view .LVU188
 584 0002 0D48     		ldr	r0, .L43
 585 0004 0D4B     		ldr	r3, .L43+4
 586 0006 0360     		str	r3, [r0]
 589:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 587              		.loc 1 589 3 is_stmt 1 view .LVU189
 589:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 588              		.loc 1 589 24 is_stmt 0 view .LVU190
 589 0008 4FF41653 		mov	r3, #9600
 590 000c 4360     		str	r3, [r0, #4]
 590:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 591              		.loc 1 590 3 is_stmt 1 view .LVU191
 590:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 592              		.loc 1 590 26 is_stmt 0 view .LVU192
 593 000e 0023     		movs	r3, #0
 594 0010 8360     		str	r3, [r0, #8]
 591:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 595              		.loc 1 591 3 is_stmt 1 view .LVU193
ARM GAS  /tmp/ccmk192Y.s 			page 28


 591:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 596              		.loc 1 591 24 is_stmt 0 view .LVU194
 597 0012 C360     		str	r3, [r0, #12]
 592:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 598              		.loc 1 592 3 is_stmt 1 view .LVU195
 592:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 599              		.loc 1 592 22 is_stmt 0 view .LVU196
 600 0014 0361     		str	r3, [r0, #16]
 593:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 601              		.loc 1 593 3 is_stmt 1 view .LVU197
 593:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 602              		.loc 1 593 20 is_stmt 0 view .LVU198
 603 0016 0C22     		movs	r2, #12
 604 0018 4261     		str	r2, [r0, #20]
 594:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 605              		.loc 1 594 3 is_stmt 1 view .LVU199
 594:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 606              		.loc 1 594 25 is_stmt 0 view .LVU200
 607 001a 8361     		str	r3, [r0, #24]
 595:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 608              		.loc 1 595 3 is_stmt 1 view .LVU201
 595:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 609              		.loc 1 595 28 is_stmt 0 view .LVU202
 610 001c C361     		str	r3, [r0, #28]
 596:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 611              		.loc 1 596 3 is_stmt 1 view .LVU203
 596:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 612              		.loc 1 596 30 is_stmt 0 view .LVU204
 613 001e 0362     		str	r3, [r0, #32]
 597:Core/Src/main.c ****   huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 614              		.loc 1 597 3 is_stmt 1 view .LVU205
 597:Core/Src/main.c ****   huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 615              		.loc 1 597 38 is_stmt 0 view .LVU206
 616 0020 1023     		movs	r3, #16
 617 0022 4362     		str	r3, [r0, #36]
 598:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 618              		.loc 1 598 3 is_stmt 1 view .LVU207
 598:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 619              		.loc 1 598 38 is_stmt 0 view .LVU208
 620 0024 4FF48053 		mov	r3, #4096
 621 0028 8363     		str	r3, [r0, #56]
 599:Core/Src/main.c ****   {
 622              		.loc 1 599 3 is_stmt 1 view .LVU209
 599:Core/Src/main.c ****   {
 623              		.loc 1 599 7 is_stmt 0 view .LVU210
 624 002a FFF7FEFF 		bl	HAL_UART_Init
 625              	.LVL31:
 599:Core/Src/main.c ****   {
 626              		.loc 1 599 6 view .LVU211
 627 002e 00B9     		cbnz	r0, .L42
 607:Core/Src/main.c **** 
 628              		.loc 1 607 1 view .LVU212
 629 0030 08BD     		pop	{r3, pc}
 630              	.L42:
 601:Core/Src/main.c ****   }
 631              		.loc 1 601 5 is_stmt 1 view .LVU213
 632 0032 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccmk192Y.s 			page 29


 633              	.LVL32:
 634              	.L44:
 635 0036 00BF     		.align	2
 636              	.L43:
 637 0038 00000000 		.word	huart2
 638 003c 00440040 		.word	1073759232
 639              		.cfi_endproc
 640              	.LFE129:
 642              		.section	.text.MX_SPI1_Init,"ax",%progbits
 643              		.align	1
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 648              	MX_SPI1_Init:
 649              	.LFB126:
 400:Core/Src/main.c **** 
 650              		.loc 1 400 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654 0000 08B5     		push	{r3, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 3, -8
 657              		.cfi_offset 14, -4
 410:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 658              		.loc 1 410 3 view .LVU215
 410:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 659              		.loc 1 410 18 is_stmt 0 view .LVU216
 660 0002 1048     		ldr	r0, .L49
 661 0004 104B     		ldr	r3, .L49+4
 662 0006 0360     		str	r3, [r0]
 411:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 663              		.loc 1 411 3 is_stmt 1 view .LVU217
 411:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 664              		.loc 1 411 19 is_stmt 0 view .LVU218
 665 0008 4FF48273 		mov	r3, #260
 666 000c 4360     		str	r3, [r0, #4]
 412:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 667              		.loc 1 412 3 is_stmt 1 view .LVU219
 412:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 668              		.loc 1 412 24 is_stmt 0 view .LVU220
 669 000e 4FF48063 		mov	r3, #1024
 670 0012 8360     		str	r3, [r0, #8]
 413:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 671              		.loc 1 413 3 is_stmt 1 view .LVU221
 413:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 672              		.loc 1 413 23 is_stmt 0 view .LVU222
 673 0014 4FF44073 		mov	r3, #768
 674 0018 C360     		str	r3, [r0, #12]
 414:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 675              		.loc 1 414 3 is_stmt 1 view .LVU223
 414:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 676              		.loc 1 414 26 is_stmt 0 view .LVU224
 677 001a 0023     		movs	r3, #0
 678 001c 0361     		str	r3, [r0, #16]
 415:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 679              		.loc 1 415 3 is_stmt 1 view .LVU225
ARM GAS  /tmp/ccmk192Y.s 			page 30


 415:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 680              		.loc 1 415 23 is_stmt 0 view .LVU226
 681 001e 4361     		str	r3, [r0, #20]
 416:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 682              		.loc 1 416 3 is_stmt 1 view .LVU227
 416:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 683              		.loc 1 416 18 is_stmt 0 view .LVU228
 684 0020 4FF40072 		mov	r2, #512
 685 0024 8261     		str	r2, [r0, #24]
 417:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 686              		.loc 1 417 3 is_stmt 1 view .LVU229
 417:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 687              		.loc 1 417 32 is_stmt 0 view .LVU230
 688 0026 C361     		str	r3, [r0, #28]
 418:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 689              		.loc 1 418 3 is_stmt 1 view .LVU231
 418:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 690              		.loc 1 418 23 is_stmt 0 view .LVU232
 691 0028 0362     		str	r3, [r0, #32]
 419:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 692              		.loc 1 419 3 is_stmt 1 view .LVU233
 419:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 693              		.loc 1 419 21 is_stmt 0 view .LVU234
 694 002a 4362     		str	r3, [r0, #36]
 420:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 695              		.loc 1 420 3 is_stmt 1 view .LVU235
 420:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 696              		.loc 1 420 29 is_stmt 0 view .LVU236
 697 002c 8362     		str	r3, [r0, #40]
 421:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 698              		.loc 1 421 3 is_stmt 1 view .LVU237
 421:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 699              		.loc 1 421 28 is_stmt 0 view .LVU238
 700 002e 0722     		movs	r2, #7
 701 0030 C262     		str	r2, [r0, #44]
 422:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 702              		.loc 1 422 3 is_stmt 1 view .LVU239
 422:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 703              		.loc 1 422 24 is_stmt 0 view .LVU240
 704 0032 0363     		str	r3, [r0, #48]
 423:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 705              		.loc 1 423 3 is_stmt 1 view .LVU241
 423:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 706              		.loc 1 423 23 is_stmt 0 view .LVU242
 707 0034 0823     		movs	r3, #8
 708 0036 4363     		str	r3, [r0, #52]
 424:Core/Src/main.c ****   {
 709              		.loc 1 424 3 is_stmt 1 view .LVU243
 424:Core/Src/main.c ****   {
 710              		.loc 1 424 7 is_stmt 0 view .LVU244
 711 0038 FFF7FEFF 		bl	HAL_SPI_Init
 712              	.LVL33:
 424:Core/Src/main.c ****   {
 713              		.loc 1 424 6 view .LVU245
 714 003c 00B9     		cbnz	r0, .L48
 432:Core/Src/main.c **** 
 715              		.loc 1 432 1 view .LVU246
ARM GAS  /tmp/ccmk192Y.s 			page 31


 716 003e 08BD     		pop	{r3, pc}
 717              	.L48:
 426:Core/Src/main.c ****   }
 718              		.loc 1 426 5 is_stmt 1 view .LVU247
 719 0040 FFF7FEFF 		bl	Error_Handler
 720              	.LVL34:
 721              	.L50:
 722              		.align	2
 723              	.L49:
 724 0044 00000000 		.word	hspi1
 725 0048 00300140 		.word	1073819648
 726              		.cfi_endproc
 727              	.LFE126:
 729              		.section	.text.MX_TIM2_Init,"ax",%progbits
 730              		.align	1
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	MX_TIM2_Init:
 736              	.LFB128:
 534:Core/Src/main.c **** 
 737              		.loc 1 534 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 32
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741 0000 00B5     		push	{lr}
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 14, -4
 744 0002 89B0     		sub	sp, sp, #36
 745              		.cfi_def_cfa_offset 40
 540:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 746              		.loc 1 540 3 view .LVU249
 540:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 747              		.loc 1 540 26 is_stmt 0 view .LVU250
 748 0004 0023     		movs	r3, #0
 749 0006 0493     		str	r3, [sp, #16]
 750 0008 0593     		str	r3, [sp, #20]
 751 000a 0693     		str	r3, [sp, #24]
 752 000c 0793     		str	r3, [sp, #28]
 541:Core/Src/main.c **** 
 753              		.loc 1 541 3 is_stmt 1 view .LVU251
 541:Core/Src/main.c **** 
 754              		.loc 1 541 27 is_stmt 0 view .LVU252
 755 000e 0193     		str	r3, [sp, #4]
 756 0010 0293     		str	r3, [sp, #8]
 757 0012 0393     		str	r3, [sp, #12]
 546:Core/Src/main.c ****   htim2.Init.Prescaler = 43;
 758              		.loc 1 546 3 is_stmt 1 view .LVU253
 546:Core/Src/main.c ****   htim2.Init.Prescaler = 43;
 759              		.loc 1 546 18 is_stmt 0 view .LVU254
 760 0014 1348     		ldr	r0, .L59
 761 0016 4FF08042 		mov	r2, #1073741824
 762 001a 0260     		str	r2, [r0]
 547:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 763              		.loc 1 547 3 is_stmt 1 view .LVU255
 547:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 764              		.loc 1 547 24 is_stmt 0 view .LVU256
ARM GAS  /tmp/ccmk192Y.s 			page 32


 765 001c 2B22     		movs	r2, #43
 766 001e 4260     		str	r2, [r0, #4]
 548:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 767              		.loc 1 548 3 is_stmt 1 view .LVU257
 548:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 768              		.loc 1 548 26 is_stmt 0 view .LVU258
 769 0020 8360     		str	r3, [r0, #8]
 549:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 770              		.loc 1 549 3 is_stmt 1 view .LVU259
 549:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 771              		.loc 1 549 21 is_stmt 0 view .LVU260
 772 0022 4FF0FF32 		mov	r2, #-1
 773 0026 C260     		str	r2, [r0, #12]
 550:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 774              		.loc 1 550 3 is_stmt 1 view .LVU261
 550:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 775              		.loc 1 550 28 is_stmt 0 view .LVU262
 776 0028 0361     		str	r3, [r0, #16]
 551:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 777              		.loc 1 551 3 is_stmt 1 view .LVU263
 551:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 778              		.loc 1 551 32 is_stmt 0 view .LVU264
 779 002a 8361     		str	r3, [r0, #24]
 552:Core/Src/main.c ****   {
 780              		.loc 1 552 3 is_stmt 1 view .LVU265
 552:Core/Src/main.c ****   {
 781              		.loc 1 552 7 is_stmt 0 view .LVU266
 782 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 783              	.LVL35:
 552:Core/Src/main.c ****   {
 784              		.loc 1 552 6 view .LVU267
 785 0030 90B9     		cbnz	r0, .L56
 556:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 786              		.loc 1 556 3 is_stmt 1 view .LVU268
 556:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 787              		.loc 1 556 34 is_stmt 0 view .LVU269
 788 0032 4FF48053 		mov	r3, #4096
 789 0036 0493     		str	r3, [sp, #16]
 557:Core/Src/main.c ****   {
 790              		.loc 1 557 3 is_stmt 1 view .LVU270
 557:Core/Src/main.c ****   {
 791              		.loc 1 557 7 is_stmt 0 view .LVU271
 792 0038 04A9     		add	r1, sp, #16
 793 003a 0A48     		ldr	r0, .L59
 794 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 795              	.LVL36:
 557:Core/Src/main.c ****   {
 796              		.loc 1 557 6 view .LVU272
 797 0040 60B9     		cbnz	r0, .L57
 561:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 798              		.loc 1 561 3 is_stmt 1 view .LVU273
 561:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 799              		.loc 1 561 37 is_stmt 0 view .LVU274
 800 0042 0023     		movs	r3, #0
 801 0044 0193     		str	r3, [sp, #4]
 562:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 802              		.loc 1 562 3 is_stmt 1 view .LVU275
ARM GAS  /tmp/ccmk192Y.s 			page 33


 562:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 803              		.loc 1 562 33 is_stmt 0 view .LVU276
 804 0046 0393     		str	r3, [sp, #12]
 563:Core/Src/main.c ****   {
 805              		.loc 1 563 3 is_stmt 1 view .LVU277
 563:Core/Src/main.c ****   {
 806              		.loc 1 563 7 is_stmt 0 view .LVU278
 807 0048 01A9     		add	r1, sp, #4
 808 004a 0648     		ldr	r0, .L59
 809 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 810              	.LVL37:
 563:Core/Src/main.c ****   {
 811              		.loc 1 563 6 view .LVU279
 812 0050 30B9     		cbnz	r0, .L58
 571:Core/Src/main.c **** 
 813              		.loc 1 571 1 view .LVU280
 814 0052 09B0     		add	sp, sp, #36
 815              		.cfi_remember_state
 816              		.cfi_def_cfa_offset 4
 817              		@ sp needed
 818 0054 5DF804FB 		ldr	pc, [sp], #4
 819              	.L56:
 820              		.cfi_restore_state
 554:Core/Src/main.c ****   }
 821              		.loc 1 554 5 is_stmt 1 view .LVU281
 822 0058 FFF7FEFF 		bl	Error_Handler
 823              	.LVL38:
 824              	.L57:
 559:Core/Src/main.c ****   }
 825              		.loc 1 559 5 view .LVU282
 826 005c FFF7FEFF 		bl	Error_Handler
 827              	.LVL39:
 828              	.L58:
 565:Core/Src/main.c ****   }
 829              		.loc 1 565 5 view .LVU283
 830 0060 FFF7FEFF 		bl	Error_Handler
 831              	.LVL40:
 832              	.L60:
 833              		.align	2
 834              	.L59:
 835 0064 00000000 		.word	htim2
 836              		.cfi_endproc
 837              	.LFE128:
 839              		.section	.text.SystemClock_Config,"ax",%progbits
 840              		.align	1
 841              		.global	SystemClock_Config
 842              		.syntax unified
 843              		.thumb
 844              		.thumb_func
 846              	SystemClock_Config:
 847              	.LFB124:
 308:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 848              		.loc 1 308 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 88
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccmk192Y.s 			page 34


 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 14, -4
 855 0002 97B0     		sub	sp, sp, #92
 856              		.cfi_def_cfa_offset 96
 309:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 857              		.loc 1 309 3 view .LVU285
 309:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 858              		.loc 1 309 22 is_stmt 0 view .LVU286
 859 0004 2822     		movs	r2, #40
 860 0006 0021     		movs	r1, #0
 861 0008 0CA8     		add	r0, sp, #48
 862 000a FFF7FEFF 		bl	memset
 863              	.LVL41:
 310:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 864              		.loc 1 310 3 is_stmt 1 view .LVU287
 310:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 865              		.loc 1 310 22 is_stmt 0 view .LVU288
 866 000e 0023     		movs	r3, #0
 867 0010 0793     		str	r3, [sp, #28]
 868 0012 0893     		str	r3, [sp, #32]
 869 0014 0993     		str	r3, [sp, #36]
 870 0016 0A93     		str	r3, [sp, #40]
 871 0018 0B93     		str	r3, [sp, #44]
 311:Core/Src/main.c **** 
 872              		.loc 1 311 3 is_stmt 1 view .LVU289
 311:Core/Src/main.c **** 
 873              		.loc 1 311 28 is_stmt 0 view .LVU290
 874 001a 0193     		str	r3, [sp, #4]
 875 001c 0293     		str	r3, [sp, #8]
 876 001e 0393     		str	r3, [sp, #12]
 877 0020 0493     		str	r3, [sp, #16]
 878 0022 0593     		str	r3, [sp, #20]
 879 0024 0693     		str	r3, [sp, #24]
 316:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 880              		.loc 1 316 3 is_stmt 1 view .LVU291
 316:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 881              		.loc 1 316 36 is_stmt 0 view .LVU292
 882 0026 0223     		movs	r3, #2
 883 0028 0C93     		str	r3, [sp, #48]
 317:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 884              		.loc 1 317 3 is_stmt 1 view .LVU293
 317:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 885              		.loc 1 317 30 is_stmt 0 view .LVU294
 886 002a 0122     		movs	r2, #1
 887 002c 1092     		str	r2, [sp, #64]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 888              		.loc 1 318 3 is_stmt 1 view .LVU295
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 889              		.loc 1 318 41 is_stmt 0 view .LVU296
 890 002e 1022     		movs	r2, #16
 891 0030 1192     		str	r2, [sp, #68]
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 892              		.loc 1 319 3 is_stmt 1 view .LVU297
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 893              		.loc 1 319 34 is_stmt 0 view .LVU298
 894 0032 1393     		str	r3, [sp, #76]
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL11;
ARM GAS  /tmp/ccmk192Y.s 			page 35


 895              		.loc 1 320 3 is_stmt 1 view .LVU299
 321:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 896              		.loc 1 321 3 view .LVU300
 321:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 897              		.loc 1 321 32 is_stmt 0 view .LVU301
 898 0034 4FF41013 		mov	r3, #2359296
 899 0038 1593     		str	r3, [sp, #84]
 322:Core/Src/main.c ****   {
 900              		.loc 1 322 3 is_stmt 1 view .LVU302
 322:Core/Src/main.c ****   {
 901              		.loc 1 322 7 is_stmt 0 view .LVU303
 902 003a 0CA8     		add	r0, sp, #48
 903 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 904              	.LVL42:
 322:Core/Src/main.c ****   {
 905              		.loc 1 322 6 view .LVU304
 906 0040 D8B9     		cbnz	r0, .L66
 328:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 907              		.loc 1 328 3 is_stmt 1 view .LVU305
 328:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 908              		.loc 1 328 31 is_stmt 0 view .LVU306
 909 0042 0F23     		movs	r3, #15
 910 0044 0793     		str	r3, [sp, #28]
 330:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 911              		.loc 1 330 3 is_stmt 1 view .LVU307
 330:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 912              		.loc 1 330 34 is_stmt 0 view .LVU308
 913 0046 0223     		movs	r3, #2
 914 0048 0893     		str	r3, [sp, #32]
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 915              		.loc 1 331 3 is_stmt 1 view .LVU309
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 916              		.loc 1 331 35 is_stmt 0 view .LVU310
 917 004a 0023     		movs	r3, #0
 918 004c 0993     		str	r3, [sp, #36]
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 919              		.loc 1 332 3 is_stmt 1 view .LVU311
 332:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 920              		.loc 1 332 36 is_stmt 0 view .LVU312
 921 004e 4FF48063 		mov	r3, #1024
 922 0052 0A93     		str	r3, [sp, #40]
 333:Core/Src/main.c **** 
 923              		.loc 1 333 3 is_stmt 1 view .LVU313
 333:Core/Src/main.c **** 
 924              		.loc 1 333 36 is_stmt 0 view .LVU314
 925 0054 0B93     		str	r3, [sp, #44]
 335:Core/Src/main.c ****   {
 926              		.loc 1 335 3 is_stmt 1 view .LVU315
 335:Core/Src/main.c ****   {
 927              		.loc 1 335 7 is_stmt 0 view .LVU316
 928 0056 0121     		movs	r1, #1
 929 0058 07A8     		add	r0, sp, #28
 930 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 931              	.LVL43:
 335:Core/Src/main.c ****   {
 932              		.loc 1 335 6 view .LVU317
 933 005e 70B9     		cbnz	r0, .L67
ARM GAS  /tmp/ccmk192Y.s 			page 36


 339:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 934              		.loc 1 339 3 is_stmt 1 view .LVU318
 339:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 935              		.loc 1 339 38 is_stmt 0 view .LVU319
 936 0060 4FF48153 		mov	r3, #4128
 937 0064 0193     		str	r3, [sp, #4]
 340:Core/Src/main.c ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 938              		.loc 1 340 3 is_stmt 1 view .LVU320
 340:Core/Src/main.c ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 939              		.loc 1 340 36 is_stmt 0 view .LVU321
 940 0066 0023     		movs	r3, #0
 941 0068 0493     		str	r3, [sp, #16]
 341:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 942              		.loc 1 341 3 is_stmt 1 view .LVU322
 341:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 943              		.loc 1 341 36 is_stmt 0 view .LVU323
 944 006a 0693     		str	r3, [sp, #24]
 342:Core/Src/main.c ****   {
 945              		.loc 1 342 3 is_stmt 1 view .LVU324
 342:Core/Src/main.c ****   {
 946              		.loc 1 342 7 is_stmt 0 view .LVU325
 947 006c 01A8     		add	r0, sp, #4
 948 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 949              	.LVL44:
 342:Core/Src/main.c ****   {
 950              		.loc 1 342 6 view .LVU326
 951 0072 30B9     		cbnz	r0, .L68
 346:Core/Src/main.c **** 
 952              		.loc 1 346 1 view .LVU327
 953 0074 17B0     		add	sp, sp, #92
 954              		.cfi_remember_state
 955              		.cfi_def_cfa_offset 4
 956              		@ sp needed
 957 0076 5DF804FB 		ldr	pc, [sp], #4
 958              	.L66:
 959              		.cfi_restore_state
 324:Core/Src/main.c ****   }
 960              		.loc 1 324 5 is_stmt 1 view .LVU328
 961 007a FFF7FEFF 		bl	Error_Handler
 962              	.LVL45:
 963              	.L67:
 337:Core/Src/main.c ****   }
 964              		.loc 1 337 5 view .LVU329
 965 007e FFF7FEFF 		bl	Error_Handler
 966              	.LVL46:
 967              	.L68:
 344:Core/Src/main.c ****   }
 968              		.loc 1 344 5 view .LVU330
 969 0082 FFF7FEFF 		bl	Error_Handler
 970              	.LVL47:
 971              		.cfi_endproc
 972              	.LFE124:
 974              		.global	__aeabi_dmul
 975              		.global	__aeabi_dadd
 976              		.global	__aeabi_d2uiz
 977              		.global	__aeabi_ui2d
 978              		.global	__aeabi_dcmpgt
ARM GAS  /tmp/ccmk192Y.s 			page 37


 979              		.global	__aeabi_d2iz
 980              		.global	__aeabi_i2d
 981              		.global	__aeabi_ddiv
 982              		.section	.text.main,"ax",%progbits
 983              		.align	1
 984              		.global	main
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	main:
 990              	.LFB123:
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 991              		.loc 1 116 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 328
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 996              		.cfi_def_cfa_offset 32
 997              		.cfi_offset 4, -32
 998              		.cfi_offset 5, -28
 999              		.cfi_offset 6, -24
 1000              		.cfi_offset 7, -20
 1001              		.cfi_offset 8, -16
 1002              		.cfi_offset 9, -12
 1003              		.cfi_offset 10, -8
 1004              		.cfi_offset 14, -4
 1005 0004 2DED048B 		vpush.64	{d8, d9}
 1006              		.cfi_def_cfa_offset 48
 1007              		.cfi_offset 80, -48
 1008              		.cfi_offset 81, -44
 1009              		.cfi_offset 82, -40
 1010              		.cfi_offset 83, -36
 1011 0008 D4B0     		sub	sp, sp, #336
 1012              		.cfi_def_cfa_offset 384
 118:Core/Src/main.c **** 	uint32_t t = 0;
 1013              		.loc 1 118 3 view .LVU332
 1014              	.LVL48:
 119:Core/Src/main.c **** 	volatile HAL_StatusTypeDef stat;
 1015              		.loc 1 119 2 view .LVU333
 120:Core/Src/main.c **** 
 1016              		.loc 1 120 2 view .LVU334
 127:Core/Src/main.c **** 
 1017              		.loc 1 127 3 view .LVU335
 1018 000a FFF7FEFF 		bl	HAL_Init
 1019              	.LVL49:
 135:Core/Src/main.c **** 
 1020              		.loc 1 135 3 view .LVU336
 1021 000e FFF7FEFF 		bl	SystemClock_Config
 1022              	.LVL50:
 142:Core/Src/main.c ****   MX_TIM1_Init();
 1023              		.loc 1 142 3 view .LVU337
 1024 0012 FFF7FEFF 		bl	MX_GPIO_Init
 1025              	.LVL51:
 143:Core/Src/main.c ****   MX_I2C1_Init();
 1026              		.loc 1 143 3 view .LVU338
 1027 0016 FFF7FEFF 		bl	MX_TIM1_Init
 1028              	.LVL52:
ARM GAS  /tmp/ccmk192Y.s 			page 38


 144:Core/Src/main.c ****   MX_USART2_UART_Init();
 1029              		.loc 1 144 3 view .LVU339
 1030 001a FFF7FEFF 		bl	MX_I2C1_Init
 1031              	.LVL53:
 145:Core/Src/main.c ****   MX_SPI1_Init();
 1032              		.loc 1 145 3 view .LVU340
 1033 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 1034              	.LVL54:
 146:Core/Src/main.c ****   MX_TIM2_Init();
 1035              		.loc 1 146 3 view .LVU341
 1036 0022 FFF7FEFF 		bl	MX_SPI1_Init
 1037              	.LVL55:
 147:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1038              		.loc 1 147 3 view .LVU342
 1039 0026 FFF7FEFF 		bl	MX_TIM2_Init
 1040              	.LVL56:
 149:Core/Src/main.c ****   struct bno055_euler_double_t orientation_data;
 1041              		.loc 1 149 3 view .LVU343
 1042 002a 9548     		ldr	r0, .L89+104
 1043 002c FFF7FEFF 		bl	HAL_TIM_Base_Start
 1044              	.LVL57:
 150:Core/Src/main.c **** 
 1045              		.loc 1 150 3 view .LVU344
 152:Core/Src/main.c ****   imu.bus_write = BNO055_I2C_bus_write;
 1046              		.loc 1 152 3 view .LVU345
 152:Core/Src/main.c ****   imu.bus_write = BNO055_I2C_bus_write;
 1047              		.loc 1 152 16 is_stmt 0 view .LVU346
 1048 0030 9448     		ldr	r0, .L89+108
 1049 0032 954B     		ldr	r3, .L89+112
 1050 0034 0361     		str	r3, [r0, #16]
 153:Core/Src/main.c ****   imu.delay_msec = BNO055_delay_msek;
 1051              		.loc 1 153 3 is_stmt 1 view .LVU347
 153:Core/Src/main.c ****   imu.delay_msec = BNO055_delay_msek;
 1052              		.loc 1 153 17 is_stmt 0 view .LVU348
 1053 0036 954B     		ldr	r3, .L89+116
 1054 0038 C360     		str	r3, [r0, #12]
 154:Core/Src/main.c ****   imu.dev_addr = BNO055_I2C_ADDR1;
 1055              		.loc 1 154 3 is_stmt 1 view .LVU349
 154:Core/Src/main.c ****   imu.dev_addr = BNO055_I2C_ADDR1;
 1056              		.loc 1 154 18 is_stmt 0 view .LVU350
 1057 003a 954B     		ldr	r3, .L89+120
 1058 003c 4361     		str	r3, [r0, #20]
 155:Core/Src/main.c **** #ifdef BNO_CONNECTED
 1059              		.loc 1 155 3 is_stmt 1 view .LVU351
 155:Core/Src/main.c **** #ifdef BNO_CONNECTED
 1060              		.loc 1 155 16 is_stmt 0 view .LVU352
 1061 003e 2823     		movs	r3, #40
 1062 0040 4372     		strb	r3, [r0, #9]
 158:Core/Src/main.c ****   bno055_set_power_mode(BNO055_POWER_MODE_NORMAL);
 1063              		.loc 1 158 3 is_stmt 1 view .LVU353
 1064 0042 FFF7FEFF 		bl	bno055_init
 1065              	.LVL58:
 159:Core/Src/main.c ****   bno055_set_operation_mode(BNO055_OPERATION_MODE_NDOF);
 1066              		.loc 1 159 3 view .LVU354
 1067 0046 0020     		movs	r0, #0
 1068 0048 FFF7FEFF 		bl	bno055_set_power_mode
 1069              	.LVL59:
ARM GAS  /tmp/ccmk192Y.s 			page 39


 160:Core/Src/main.c **** 
 1070              		.loc 1 160 3 view .LVU355
 1071 004c 0C20     		movs	r0, #12
 1072 004e FFF7FEFF 		bl	bno055_set_operation_mode
 1073              	.LVL60:
 162:Core/Src/main.c ****   
 1074              		.loc 1 162 3 view .LVU356
 1075              	.L70:
 164:Core/Src/main.c **** #endif
 1076              		.loc 1 164 3 discriminator 1 view .LVU357
 162:Core/Src/main.c ****   
 1077              		.loc 1 162 65 discriminator 1 view .LVU358
 162:Core/Src/main.c ****   
 1078              		.loc 1 162 10 is_stmt 0 discriminator 1 view .LVU359
 1079 0052 4EA8     		add	r0, sp, #312
 1080 0054 FFF7FEFF 		bl	bno055_convert_double_euler_hpr_deg
 1081              	.LVL61:
 162:Core/Src/main.c ****   
 1082              		.loc 1 162 65 discriminator 1 view .LVU360
 1083 0058 0028     		cmp	r0, #0
 1084 005a FAD1     		bne	.L70
 164:Core/Src/main.c **** #endif
 1085              		.loc 1 164 4 is_stmt 1 view .LVU361
 168:Core/Src/main.c ****   double Kip = pid_variables[1];
 1086              		.loc 1 168 3 view .LVU362
 1087              	.LVL62:
 169:Core/Src/main.c ****   double Kdp = pid_variables[2];
 1088              		.loc 1 169 3 view .LVU363
 170:Core/Src/main.c **** 
 1089              		.loc 1 170 3 view .LVU364
 172:Core/Src/main.c ****   double Kir = pid_variables[4];
 1090              		.loc 1 172 3 view .LVU365
 173:Core/Src/main.c ****   double Kdr = pid_variables[5];
 1091              		.loc 1 173 3 view .LVU366
 174:Core/Src/main.c **** 
 1092              		.loc 1 174 3 view .LVU367
 176:Core/Src/main.c ****   double Kie = pid_variables[7];
 1093              		.loc 1 176 3 view .LVU368
 177:Core/Src/main.c ****   double Kde = pid_variables[8];
 1094              		.loc 1 177 3 view .LVU369
 178:Core/Src/main.c **** 
 1095              		.loc 1 178 3 view .LVU370
 180:Core/Src/main.c ****   PID_TypeDef xPID;
 1096              		.loc 1 180 3 view .LVU371
 181:Core/Src/main.c ****   PID_TypeDef yPID;
 1097              		.loc 1 181 3 view .LVU372
 182:Core/Src/main.c **** 
 1098              		.loc 1 182 3 view .LVU373
 184:Core/Src/main.c ****   xSetpoint = fabs(orientation_data.p);
 1099              		.loc 1 184 3 view .LVU374
 185:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1100              		.loc 1 185 3 view .LVU375
 185:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1101              		.loc 1 185 36 is_stmt 0 view .LVU376
 1102 005c DDE95223 		ldrd	r2, [sp, #328]
 185:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1103              		.loc 1 185 15 view .LVU377
ARM GAS  /tmp/ccmk192Y.s 			page 40


 1104 0060 1046     		mov	r0, r2
 1105 0062 23F00041 		bic	r1, r3, #-2147483648
 185:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1106              		.loc 1 185 13 view .LVU378
 1107 0066 CDE91401 		strd	r0, [sp, #80]
 186:Core/Src/main.c **** 
 1108              		.loc 1 186 3 is_stmt 1 view .LVU379
 186:Core/Src/main.c **** 
 1109              		.loc 1 186 31 is_stmt 0 view .LVU380
 1110 006a DDE95023 		ldrd	r2, [sp, #320]
 186:Core/Src/main.c **** 
 1111              		.loc 1 186 13 view .LVU381
 1112 006e CDE91223 		strd	r2, [sp, #72]
 188:Core/Src/main.c ****   PID_SetMode(&xPID, _PID_MODE_AUTOMATIC);
 1113              		.loc 1 188 3 is_stmt 1 view .LVU382
 1114 0072 9FED698B 		vldr.64	d8, .L89
 1115 0076 0025     		movs	r5, #0
 1116 0078 0195     		str	r5, [sp, #4]
 1117 007a 0124     		movs	r4, #1
 1118 007c 0094     		str	r4, [sp]
 1119 007e 9FED682B 		vldr.64	d2, .L89+8
 1120 0082 B0EE481A 		vmov.f32	s2, s16
 1121 0086 F0EE681A 		vmov.f32	s3, s17
 1122 008a 9FED670B 		vldr.64	d0, .L89+16
 1123 008e 14AB     		add	r3, sp, #80
 1124 0090 804A     		ldr	r2, .L89+124
 1125 0092 52A9     		add	r1, sp, #328
 1126 0094 32A8     		add	r0, sp, #200
 1127 0096 FFF7FEFF 		bl	PID
 1128              	.LVL63:
 189:Core/Src/main.c ****   PID_SetSampleTime(&xPID, 10);
 1129              		.loc 1 189 3 view .LVU383
 1130 009a 2146     		mov	r1, r4
 1131 009c 32A8     		add	r0, sp, #200
 1132 009e FFF7FEFF 		bl	PID_SetMode
 1133              	.LVL64:
 190:Core/Src/main.c ****   PID_SetOutputLimits(&xPID, -10922.5, 10992.5);
 1134              		.loc 1 190 3 view .LVU384
 1135 00a2 0A21     		movs	r1, #10
 1136 00a4 32A8     		add	r0, sp, #200
 1137 00a6 FFF7FEFF 		bl	PID_SetSampleTime
 1138              	.LVL65:
 191:Core/Src/main.c **** 
 1139              		.loc 1 191 3 view .LVU385
 1140 00aa 9FED619B 		vldr.64	d9, .L89+24
 1141 00ae 9FED621B 		vldr.64	d1, .L89+32
 1142 00b2 B0EE490A 		vmov.f32	s0, s18
 1143 00b6 F0EE690A 		vmov.f32	s1, s19
 1144 00ba 32A8     		add	r0, sp, #200
 1145 00bc FFF7FEFF 		bl	PID_SetOutputLimits
 1146              	.LVL66:
 193:Core/Src/main.c ****   PID_SetMode(&yPID, _PID_MODE_AUTOMATIC);
 1147              		.loc 1 193 3 view .LVU386
 1148 00c0 0195     		str	r5, [sp, #4]
 1149 00c2 0094     		str	r4, [sp]
 1150 00c4 9FED5E2B 		vldr.64	d2, .L89+40
 1151 00c8 B0EE481A 		vmov.f32	s2, s16
ARM GAS  /tmp/ccmk192Y.s 			page 41


 1152 00cc F0EE681A 		vmov.f32	s3, s17
 1153 00d0 9FED5D0B 		vldr.64	d0, .L89+48
 1154 00d4 12AB     		add	r3, sp, #72
 1155 00d6 704A     		ldr	r2, .L89+128
 1156 00d8 50A9     		add	r1, sp, #320
 1157 00da 16A8     		add	r0, sp, #88
 1158 00dc FFF7FEFF 		bl	PID
 1159              	.LVL67:
 194:Core/Src/main.c ****   PID_SetSampleTime(&yPID, 10);
 1160              		.loc 1 194 3 view .LVU387
 1161 00e0 2146     		mov	r1, r4
 1162 00e2 16A8     		add	r0, sp, #88
 1163 00e4 FFF7FEFF 		bl	PID_SetMode
 1164              	.LVL68:
 195:Core/Src/main.c ****   PID_SetOutputLimits(&yPID, -10922.5, 10922.5);
 1165              		.loc 1 195 3 view .LVU388
 1166 00e8 0A21     		movs	r1, #10
 1167 00ea 16A8     		add	r0, sp, #88
 1168 00ec FFF7FEFF 		bl	PID_SetSampleTime
 1169              	.LVL69:
 196:Core/Src/main.c **** 
 1170              		.loc 1 196 3 view .LVU389
 1171 00f0 9FED571B 		vldr.64	d1, .L89+56
 1172 00f4 B0EE490A 		vmov.f32	s0, s18
 1173 00f8 F0EE690A 		vmov.f32	s1, s19
 1174 00fc 16A8     		add	r0, sp, #88
 1175 00fe FFF7FEFF 		bl	PID_SetOutputLimits
 1176              	.LVL70:
 207:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 1177              		.loc 1 207 3 view .LVU390
 1178 0102 664C     		ldr	r4, .L89+132
 1179 0104 2046     		mov	r0, r4
 1180 0106 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1181              	.LVL71:
 208:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_2);
 1182              		.loc 1 208 3 view .LVU391
 1183 010a 2946     		mov	r1, r5
 1184 010c 2046     		mov	r0, r4
 1185 010e FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1186              	.LVL72:
 209:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_3);
 1187              		.loc 1 209 3 view .LVU392
 1188 0112 0421     		movs	r1, #4
 1189 0114 2046     		mov	r0, r4
 1190 0116 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1191              	.LVL73:
 210:Core/Src/main.c ****   //HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_4);
 1192              		.loc 1 210 3 view .LVU393
 1193 011a 0821     		movs	r1, #8
 1194 011c 2046     		mov	r0, r4
 1195 011e FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1196              	.LVL74:
 213:Core/Src/main.c ****   {
 1197              		.loc 1 213 3 view .LVU394
 213:Core/Src/main.c ****   {
 1198              		.loc 1 213 25 is_stmt 0 view .LVU395
 1199 0122 4DA3     		adr	r3, .L89+64
ARM GAS  /tmp/ccmk192Y.s 			page 42


 1200 0124 D3E90023 		ldrd	r2, [r3]
 1201 0128 CDE90423 		strd	r2, [sp, #16]
 1202 012c 5C4B     		ldr	r3, .L89+136
 1203 012e 0693     		str	r3, [sp, #24]
 1204 0130 5C4B     		ldr	r3, .L89+140
 1205 0132 0793     		str	r3, [sp, #28]
 1206 0134 4AA3     		adr	r3, .L89+72
 1207 0136 D3E90023 		ldrd	r2, [r3]
 1208 013a CDE90823 		strd	r2, [sp, #32]
 1209 013e 8DED0A8B 		vstr.64	d8, [sp, #40]
 1210 0142 49A5     		adr	r5, .L89+80
 1211 0144 D5E90045 		ldrd	r4, [r5]
 1212 0148 CDE90C45 		strd	r4, [sp, #48]
 1213 014c 48A3     		adr	r3, .L89+88
 1214 014e D3E90023 		ldrd	r2, [r3]
 1215 0152 CDE90E23 		strd	r2, [sp, #56]
 222:Core/Src/main.c ****   };
 1216              		.loc 1 222 18 view .LVU396
 1217 0156 FFF7FEFF 		bl	HAL_GetTick
 1218              	.LVL75:
 213:Core/Src/main.c ****   {
 1219              		.loc 1 213 25 view .LVU397
 1220 015a 1090     		str	r0, [sp, #64]
 225:Core/Src/main.c **** 
 1221              		.loc 1 225 3 is_stmt 1 view .LVU398
 225:Core/Src/main.c **** 
 1222              		.loc 1 225 13 is_stmt 0 view .LVU399
 1223 015c 524B     		ldr	r3, .L89+144
 1224 015e C3E90045 		strd	r4, [r3]
 227:Core/Src/main.c ****   TIM1->CCR3 = 0x5555;
 1225              		.loc 1 227 3 is_stmt 1 view .LVU400
 227:Core/Src/main.c ****   TIM1->CCR3 = 0x5555;
 1226              		.loc 1 227 7 is_stmt 0 view .LVU401
 1227 0162 FFF7FEFF 		bl	HAL_GetTick
 1228              	.LVL76:
 1229 0166 0446     		mov	r4, r0
 1230              	.LVL77:
 228:Core/Src/main.c ****   while (HAL_GetTick() - t < 3000) {
 1231              		.loc 1 228 3 is_stmt 1 view .LVU402
 228:Core/Src/main.c ****   while (HAL_GetTick() - t < 3000) {
 1232              		.loc 1 228 14 is_stmt 0 view .LVU403
 1233 0168 504B     		ldr	r3, .L89+148
 1234 016a 45F25552 		movw	r2, #21845
 1235 016e DA63     		str	r2, [r3, #60]
 229:Core/Src/main.c **** 
 1236              		.loc 1 229 3 is_stmt 1 view .LVU404
 1237              	.LVL78:
 1238              	.L71:
 231:Core/Src/main.c ****   cur_measurement = 0;
 1239              		.loc 1 231 3 discriminator 1 view .LVU405
 229:Core/Src/main.c **** 
 1240              		.loc 1 229 28 discriminator 1 view .LVU406
 229:Core/Src/main.c **** 
 1241              		.loc 1 229 10 is_stmt 0 discriminator 1 view .LVU407
 1242 0170 FFF7FEFF 		bl	HAL_GetTick
 1243              	.LVL79:
 229:Core/Src/main.c **** 
ARM GAS  /tmp/ccmk192Y.s 			page 43


 1244              		.loc 1 229 24 discriminator 1 view .LVU408
 1245 0174 031B     		subs	r3, r0, r4
 229:Core/Src/main.c **** 
 1246              		.loc 1 229 28 discriminator 1 view .LVU409
 1247 0176 40F6B732 		movw	r2, #2999
 1248 017a 9342     		cmp	r3, r2
 1249 017c F8D9     		bls	.L71
 232:Core/Src/main.c ****   TIM1->CCR3 = 0x5555 + esc_speed * 0x5555;
 1250              		.loc 1 232 3 is_stmt 1 view .LVU410
 232:Core/Src/main.c ****   TIM1->CCR3 = 0x5555 + esc_speed * 0x5555;
 1251              		.loc 1 232 19 is_stmt 0 view .LVU411
 1252 017e 4C4B     		ldr	r3, .L89+152
 1253 0180 0022     		movs	r2, #0
 1254 0182 1A70     		strb	r2, [r3]
 233:Core/Src/main.c ****   t = HAL_GetTick();
 1255              		.loc 1 233 3 is_stmt 1 view .LVU412
 233:Core/Src/main.c ****   t = HAL_GetTick();
 1256              		.loc 1 233 35 is_stmt 0 view .LVU413
 1257 0184 3CA3     		adr	r3, .L89+96
 1258 0186 D3E90023 		ldrd	r2, [r3]
 1259 018a 4749     		ldr	r1, .L89+144
 1260 018c D1E90001 		ldrd	r0, [r1]
 1261 0190 FFF7FEFF 		bl	__aeabi_dmul
 1262              	.LVL80:
 233:Core/Src/main.c ****   t = HAL_GetTick();
 1263              		.loc 1 233 23 view .LVU414
 1264 0194 38A3     		adr	r3, .L89+96
 1265 0196 D3E90023 		ldrd	r2, [r3]
 1266 019a FFF7FEFF 		bl	__aeabi_dadd
 1267              	.LVL81:
 233:Core/Src/main.c ****   t = HAL_GetTick();
 1268              		.loc 1 233 14 view .LVU415
 1269 019e FFF7FEFF 		bl	__aeabi_d2uiz
 1270              	.LVL82:
 1271 01a2 424A     		ldr	r2, .L89+148
 1272 01a4 D063     		str	r0, [r2, #60]
 234:Core/Src/main.c ****   while (HAL_GetTick() - t < 500) {
 1273              		.loc 1 234 3 is_stmt 1 view .LVU416
 234:Core/Src/main.c ****   while (HAL_GetTick() - t < 500) {
 1274              		.loc 1 234 7 is_stmt 0 view .LVU417
 1275 01a6 FFF7FEFF 		bl	HAL_GetTick
 1276              	.LVL83:
 1277 01aa 0446     		mov	r4, r0
 1278              	.LVL84:
 235:Core/Src/main.c **** 
 1279              		.loc 1 235 3 is_stmt 1 view .LVU418
 1280              	.L72:
 237:Core/Src/main.c **** 
 1281              		.loc 1 237 3 discriminator 1 view .LVU419
 235:Core/Src/main.c **** 
 1282              		.loc 1 235 28 discriminator 1 view .LVU420
 235:Core/Src/main.c **** 
 1283              		.loc 1 235 10 is_stmt 0 discriminator 1 view .LVU421
 1284 01ac FFF7FEFF 		bl	HAL_GetTick
 1285              	.LVL85:
 235:Core/Src/main.c **** 
 1286              		.loc 1 235 24 discriminator 1 view .LVU422
ARM GAS  /tmp/ccmk192Y.s 			page 44


 1287 01b0 031B     		subs	r3, r0, r4
 235:Core/Src/main.c **** 
 1288              		.loc 1 235 28 discriminator 1 view .LVU423
 1289 01b2 B3F5FA7F 		cmp	r3, #500
 1290 01b6 F9D3     		bcc	.L72
 1291 01b8 BCE0     		b	.L73
 1292              	.LVL86:
 1293              	.L76:
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1294              		.loc 1 116 1 discriminator 1 view .LVU424
 1295 01ba 2C46     		mov	r4, r5
 1296              	.LVL87:
 1297              	.L79:
 1298              	.LBB8:
 1299              	.LBB9:
 261:Core/Src/main.c ****         {
 1300              		.loc 1 261 27 is_stmt 1 discriminator 1 view .LVU425
 1301 01bc A245     		cmp	r10, r4
 1302 01be 21DD     		ble	.L87
 263:Core/Src/main.c ****           {
 1303              		.loc 1 263 11 view .LVU426
 263:Core/Src/main.c ****           {
 1304              		.loc 1 263 31 is_stmt 0 view .LVU427
 1305 01c0 3C4B     		ldr	r3, .L89+156
 1306 01c2 03EBC402 		add	r2, r3, r4, lsl #3
 1307 01c6 D2E90067 		ldrd	r6, [r2]
 263:Core/Src/main.c ****           {
 1308              		.loc 1 263 56 view .LVU428
 1309 01ca 651C     		adds	r5, r4, #1
 263:Core/Src/main.c ****           {
 1310              		.loc 1 263 53 view .LVU429
 1311 01cc 03EBC503 		add	r3, r3, r5, lsl #3
 1312 01d0 D3E90089 		ldrd	r8, [r3]
 263:Core/Src/main.c ****           {
 1313              		.loc 1 263 14 view .LVU430
 1314 01d4 4246     		mov	r2, r8
 1315 01d6 4B46     		mov	r3, r9
 1316 01d8 3046     		mov	r0, r6
 1317 01da 3946     		mov	r1, r7
 1318 01dc FFF7FEFF 		bl	__aeabi_dcmpgt
 1319              	.LVL88:
 1320 01e0 0028     		cmp	r0, #0
 1321 01e2 EAD0     		beq	.L76
 1322              	.LBB10:
 265:Core/Src/main.c ****             esc_measurements[j + 1] = esc_measurements[j];
 1323              		.loc 1 265 13 is_stmt 1 view .LVU431
 265:Core/Src/main.c ****             esc_measurements[j + 1] = esc_measurements[j];
 1324              		.loc 1 265 18 is_stmt 0 view .LVU432
 1325 01e4 4046     		mov	r0, r8
 1326 01e6 4946     		mov	r1, r9
 1327 01e8 FFF7FEFF 		bl	__aeabi_d2iz
 1328              	.LVL89:
 266:Core/Src/main.c ****             esc_measurements[j] = temp;
 1329              		.loc 1 266 13 is_stmt 1 view .LVU433
 266:Core/Src/main.c ****             esc_measurements[j] = temp;
 1330              		.loc 1 266 37 is_stmt 0 view .LVU434
 1331 01ec 314B     		ldr	r3, .L89+156
ARM GAS  /tmp/ccmk192Y.s 			page 45


 1332 01ee 03EBC502 		add	r2, r3, r5, lsl #3
 1333 01f2 C2E90067 		strd	r6, [r2]
 267:Core/Src/main.c ****           }
 1334              		.loc 1 267 13 is_stmt 1 view .LVU435
 267:Core/Src/main.c ****           }
 1335              		.loc 1 267 33 is_stmt 0 view .LVU436
 1336 01f6 03EBC404 		add	r4, r3, r4, lsl #3
 1337              	.LVL90:
 267:Core/Src/main.c ****           }
 1338              		.loc 1 267 33 view .LVU437
 1339 01fa FFF7FEFF 		bl	__aeabi_i2d
 1340              	.LVL91:
 267:Core/Src/main.c ****           }
 1341              		.loc 1 267 33 view .LVU438
 1342 01fe C4E90001 		strd	r0, [r4]
 1343 0202 DAE7     		b	.L76
 1344              	.LVL92:
 1345              	.L87:
 267:Core/Src/main.c ****           }
 1346              		.loc 1 267 33 view .LVU439
 1347              	.LBE10:
 1348              	.LBE9:
 259:Core/Src/main.c ****       {
 1349              		.loc 1 259 31 is_stmt 1 discriminator 2 view .LVU440
 1350 0204 0AF1010A 		add	r10, r10, #1
 1351              	.LVL93:
 1352              	.L74:
 259:Core/Src/main.c ****       {
 1353              		.loc 1 259 25 discriminator 1 view .LVU441
 1354 0208 BAF1070F 		cmp	r10, #7
 1355 020c 01DC     		bgt	.L88
 1356              	.LBB11:
 261:Core/Src/main.c ****         {
 1357              		.loc 1 261 18 is_stmt 0 view .LVU442
 1358 020e 0024     		movs	r4, #0
 1359 0210 D4E7     		b	.L79
 1360              	.L88:
 1361              	.LBE11:
 1362              	.LBE8:
 1363              	.LBB12:
 274:Core/Src/main.c ****       {
 1364              		.loc 1 274 16 view .LVU443
 1365 0212 0024     		movs	r4, #0
 1366              	.LBE12:
 272:Core/Src/main.c **** 
 1367              		.loc 1 272 23 view .LVU444
 1368 0214 2046     		mov	r0, r4
 1369 0216 5DE0     		b	.L80
 1370              	.L90:
 1371              		.align	3
 1372              	.L89:
 1373 0218 00000000 		.word	0
 1374 021c 00000000 		.word	0
 1375 0220 00000000 		.word	0
 1376 0224 00804B40 		.word	1078689792
 1377 0228 00000000 		.word	0
 1378 022c 00805B40 		.word	1079738368
ARM GAS  /tmp/ccmk192Y.s 			page 46


 1379 0230 00000000 		.word	0
 1380 0234 4055C5C0 		.word	-1060809408
 1381 0238 00000000 		.word	0
 1382 023c 4078C540 		.word	1086683200
 1383 0240 00000000 		.word	0
 1384 0244 00004440 		.word	1078198272
 1385 0248 00000000 		.word	0
 1386 024c 00F07040 		.word	1081143296
 1387 0250 00000000 		.word	0
 1388 0254 4055C540 		.word	1086674240
 1389 0258 000000E0 		.word	-536870912
 1390 025c E2362A3F 		.word	1059731170
 1391 0260 9A999999 		.word	-1717986918
 1392 0264 9999D93F 		.word	1071225241
 1393 0268 33333333 		.word	858993459
 1394 026c 3333D33F 		.word	1070805811
 1395 0270 66666666 		.word	1717986918
 1396 0274 6666E63F 		.word	1072064102
 1397 0278 00000000 		.word	0
 1398 027c 4055D540 		.word	1087722816
 1399 0280 00000000 		.word	htim2
 1400 0284 00000000 		.word	imu
 1401 0288 00000000 		.word	BNO055_I2C_bus_read
 1402 028c 00000000 		.word	BNO055_I2C_bus_write
 1403 0290 00000000 		.word	BNO055_delay_msek
 1404 0294 00000000 		.word	xout
 1405 0298 00000000 		.word	yout
 1406 029c 00000000 		.word	htim1
 1407 02a0 00000000 		.word	esc_rpm
 1408 02a4 00000000 		.word	esc_output
 1409 02a8 00000000 		.word	esc_speed
 1410 02ac 002C0140 		.word	1073818624
 1411 02b0 00000000 		.word	cur_measurement
 1412 02b4 00000000 		.word	esc_measurements
 1413              	.LVL94:
 1414              	.L81:
 1415              	.LBB13:
 276:Core/Src/main.c ****       }
 1416              		.loc 1 276 9 is_stmt 1 discriminator 3 view .LVU445
 276:Core/Src/main.c ****       }
 1417              		.loc 1 276 47 is_stmt 0 discriminator 3 view .LVU446
 1418 02b8 0134     		adds	r4, r4, #1
 1419              	.LVL95:
 276:Core/Src/main.c ****       }
 1420              		.loc 1 276 44 discriminator 3 view .LVU447
 1421 02ba 314B     		ldr	r3, .L91+8
 1422 02bc 03EBC403 		add	r3, r3, r4, lsl #3
 1423 02c0 D3E90067 		ldrd	r6, [r3]
 276:Core/Src/main.c ****       }
 1424              		.loc 1 276 25 discriminator 3 view .LVU448
 1425 02c4 FFF7FEFF 		bl	__aeabi_i2d
 1426              	.LVL96:
 276:Core/Src/main.c ****       }
 1427              		.loc 1 276 25 discriminator 3 view .LVU449
 1428 02c8 3246     		mov	r2, r6
 1429 02ca 3B46     		mov	r3, r7
 1430 02cc FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  /tmp/ccmk192Y.s 			page 47


 1431              	.LVL97:
 1432 02d0 FFF7FEFF 		bl	__aeabi_d2iz
 1433              	.LVL98:
 274:Core/Src/main.c ****       {
 1434              		.loc 1 274 31 is_stmt 1 discriminator 3 view .LVU450
 1435              	.L80:
 274:Core/Src/main.c ****       {
 1436              		.loc 1 274 25 discriminator 1 view .LVU451
 1437 02d4 032C     		cmp	r4, #3
 1438 02d6 EFDD     		ble	.L81
 1439              	.LBE13:
 279:Core/Src/main.c **** 
 1440              		.loc 1 279 7 view .LVU452
 279:Core/Src/main.c **** 
 1441              		.loc 1 279 23 is_stmt 0 view .LVU453
 1442 02d8 FFF7FEFF 		bl	__aeabi_i2d
 1443              	.LVL99:
 279:Core/Src/main.c **** 
 1444              		.loc 1 279 23 view .LVU454
 1445 02dc 0246     		mov	r2, r0
 1446 02de 0B46     		mov	r3, r1
 1447 02e0 0020     		movs	r0, #0
 1448 02e2 2849     		ldr	r1, .L91+12
 1449 02e4 FFF7FEFF 		bl	__aeabi_ddiv
 1450              	.LVL100:
 279:Core/Src/main.c **** 
 1451              		.loc 1 279 15 view .LVU455
 1452 02e8 274B     		ldr	r3, .L91+16
 1453 02ea C3E90001 		strd	r0, [r3]
 281:Core/Src/main.c ****       simple_regulator_update(&regulator);
 1454              		.loc 1 281 7 is_stmt 1 view .LVU456
 281:Core/Src/main.c ****       simple_regulator_update(&regulator);
 1455              		.loc 1 281 23 is_stmt 0 view .LVU457
 1456 02ee 274B     		ldr	r3, .L91+20
 1457 02f0 0022     		movs	r2, #0
 1458 02f2 1A70     		strb	r2, [r3]
 282:Core/Src/main.c ****       TIM1->CCR3 = esc_output * 0x5555 + 0x5555;
 1459              		.loc 1 282 7 is_stmt 1 view .LVU458
 1460 02f4 04A8     		add	r0, sp, #16
 1461 02f6 FFF7FEFF 		bl	simple_regulator_update
 1462              	.LVL101:
 283:Core/Src/main.c ****     }
 1463              		.loc 1 283 7 view .LVU459
 283:Core/Src/main.c ****     }
 1464              		.loc 1 283 31 is_stmt 0 view .LVU460
 1465 02fa 1FA3     		adr	r3, .L91
 1466 02fc D3E90023 		ldrd	r2, [r3]
 1467 0300 2349     		ldr	r1, .L91+24
 1468 0302 D1E90001 		ldrd	r0, [r1]
 1469 0306 FFF7FEFF 		bl	__aeabi_dmul
 1470              	.LVL102:
 283:Core/Src/main.c ****     }
 1471              		.loc 1 283 40 view .LVU461
 1472 030a 1BA3     		adr	r3, .L91
 1473 030c D3E90023 		ldrd	r2, [r3]
 1474 0310 FFF7FEFF 		bl	__aeabi_dadd
 1475              	.LVL103:
ARM GAS  /tmp/ccmk192Y.s 			page 48


 283:Core/Src/main.c ****     }
 1476              		.loc 1 283 18 view .LVU462
 1477 0314 FFF7FEFF 		bl	__aeabi_d2uiz
 1478              	.LVL104:
 1479 0318 1E4B     		ldr	r3, .L91+28
 1480 031a D863     		str	r0, [r3, #60]
 1481              	.LVL105:
 1482              	.L75:
 287:Core/Src/main.c **** 	  PID_Compute(&xPID);
 1483              		.loc 1 287 4 is_stmt 1 view .LVU463
 1484 031c 1920     		movs	r0, #25
 1485 031e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1486              	.LVL106:
 288:Core/Src/main.c **** 	  PID_Compute(&yPID);
 1487              		.loc 1 288 4 view .LVU464
 1488 0322 32A8     		add	r0, sp, #200
 1489 0324 FFF7FEFF 		bl	PID_Compute
 1490              	.LVL107:
 289:Core/Src/main.c ****     
 1491              		.loc 1 289 4 view .LVU465
 1492 0328 16A8     		add	r0, sp, #88
 1493 032a FFF7FEFF 		bl	PID_Compute
 1494              	.LVL108:
 294:Core/Src/main.c ****     
 1495              		.loc 1 294 4 view .LVU466
 1496 032e 1920     		movs	r0, #25
 1497 0330 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1498              	.LVL109:
 243:Core/Src/main.c ****   {
 1499              		.loc 1 243 9 view .LVU467
 1500              	.L73:
 248:Core/Src/main.c ****     orientation_data.p = fabs(orientation_data.p);
 1501              		.loc 1 248 4 discriminator 1 view .LVU468
 246:Core/Src/main.c **** 
 1502              		.loc 1 246 66 discriminator 1 view .LVU469
 246:Core/Src/main.c **** 
 1503              		.loc 1 246 11 is_stmt 0 discriminator 1 view .LVU470
 1504 0334 4EA8     		add	r0, sp, #312
 1505 0336 FFF7FEFF 		bl	bno055_convert_double_euler_hpr_deg
 1506              	.LVL110:
 246:Core/Src/main.c **** 
 1507              		.loc 1 246 66 discriminator 1 view .LVU471
 1508 033a 0028     		cmp	r0, #0
 1509 033c FAD1     		bne	.L73
 248:Core/Src/main.c ****     orientation_data.p = fabs(orientation_data.p);
 1510              		.loc 1 248 5 is_stmt 1 view .LVU472
 249:Core/Src/main.c ****     #endif
 1511              		.loc 1 249 5 view .LVU473
 249:Core/Src/main.c ****     #endif
 1512              		.loc 1 249 47 is_stmt 0 view .LVU474
 1513 033e DDE95223 		ldrd	r2, [sp, #328]
 249:Core/Src/main.c ****     #endif
 1514              		.loc 1 249 26 view .LVU475
 1515 0342 0292     		str	r2, [sp, #8]
 1516 0344 23F00043 		bic	r3, r3, #-2147483648
 1517 0348 0393     		str	r3, [sp, #12]
 249:Core/Src/main.c ****     #endif
ARM GAS  /tmp/ccmk192Y.s 			page 49


 1518              		.loc 1 249 24 view .LVU476
 1519 034a 9DED027B 		vldr.64	d7, [sp, #8]
 1520 034e 8DED527B 		vstr.64	d7, [sp, #328]
 253:Core/Src/main.c ****     cur_measurement++;
 1521              		.loc 1 253 5 is_stmt 1 view .LVU477
 253:Core/Src/main.c ****     cur_measurement++;
 1522              		.loc 1 253 21 is_stmt 0 view .LVU478
 1523 0352 0E4E     		ldr	r6, .L91+20
 1524 0354 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 253:Core/Src/main.c ****     cur_measurement++;
 1525              		.loc 1 253 39 view .LVU479
 1526 0356 0A4D     		ldr	r5, .L91+8
 1527 0358 05EBC405 		add	r5, r5, r4, lsl #3
 1528 035c 0E4B     		ldr	r3, .L91+32
 1529 035e 1868     		ldr	r0, [r3]
 1530 0360 FFF7FEFF 		bl	__aeabi_ui2d
 1531              	.LVL111:
 1532 0364 C5E90001 		strd	r0, [r5]
 254:Core/Src/main.c ****     
 1533              		.loc 1 254 5 is_stmt 1 view .LVU480
 254:Core/Src/main.c ****     
 1534              		.loc 1 254 20 is_stmt 0 view .LVU481
 1535 0368 0134     		adds	r4, r4, #1
 1536 036a E4B2     		uxtb	r4, r4
 1537 036c 3470     		strb	r4, [r6]
 257:Core/Src/main.c ****     {
 1538              		.loc 1 257 5 is_stmt 1 view .LVU482
 257:Core/Src/main.c ****     {
 1539              		.loc 1 257 8 is_stmt 0 view .LVU483
 1540 036e 072C     		cmp	r4, #7
 1541 0370 D4D9     		bls	.L75
 1542              	.LBB14:
 259:Core/Src/main.c ****       {
 1543              		.loc 1 259 16 view .LVU484
 1544 0372 4FF0010A 		mov	r10, #1
 1545 0376 47E7     		b	.L74
 1546              	.L92:
 1547              		.align	3
 1548              	.L91:
 1549 0378 00000000 		.word	0
 1550 037c 4055D540 		.word	1087722816
 1551 0380 00000000 		.word	esc_measurements
 1552 0384 00407F40 		.word	1082081280
 1553 0388 00000000 		.word	esc_rpm
 1554 038c 00000000 		.word	cur_measurement
 1555 0390 00000000 		.word	esc_output
 1556 0394 002C0140 		.word	1073818624
 1557 0398 00000000 		.word	rpm_length
 1558              	.LBE14:
 1559              		.cfi_endproc
 1560              	.LFE123:
 1562              		.global	rpm_length
 1563              		.section	.bss.rpm_length,"aw",%nobits
 1564              		.align	2
 1567              	rpm_length:
 1568 0000 00000000 		.space	4
 1569              		.global	cur_measurement
ARM GAS  /tmp/ccmk192Y.s 			page 50


 1570              		.section	.bss.cur_measurement,"aw",%nobits
 1573              	cur_measurement:
 1574 0000 00       		.space	1
 1575              		.global	esc_measurements
 1576              		.section	.bss.esc_measurements,"aw",%nobits
 1577              		.align	3
 1580              	esc_measurements:
 1581 0000 00000000 		.space	64
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1581      00000000 
 1582              		.global	serial_output
 1583              		.section	.bss.serial_output,"aw",%nobits
 1584              		.align	2
 1587              	serial_output:
 1588 0000 00000000 		.space	60
 1588      00000000 
 1588      00000000 
 1588      00000000 
 1588      00000000 
 1589              		.global	yout
 1590              		.section	.bss.yout,"aw",%nobits
 1591              		.align	3
 1594              	yout:
 1595 0000 00000000 		.space	8
 1595      00000000 
 1596              		.global	xout
 1597              		.section	.bss.xout,"aw",%nobits
 1598              		.align	3
 1601              	xout:
 1602 0000 00000000 		.space	8
 1602      00000000 
 1603              		.global	esc_output
 1604              		.section	.bss.esc_output,"aw",%nobits
 1605              		.align	3
 1608              	esc_output:
 1609 0000 00000000 		.space	8
 1609      00000000 
 1610              		.global	esc_rpm
 1611              		.section	.bss.esc_rpm,"aw",%nobits
 1612              		.align	3
 1615              	esc_rpm:
 1616 0000 00000000 		.space	8
 1616      00000000 
 1617              		.global	esc_speed
 1618              		.section	.data.esc_speed,"aw"
 1619              		.align	3
 1622              	esc_speed:
 1623 0000 33333333 		.word	858993459
 1624 0004 3333D33F 		.word	1070805811
 1625              		.global	adc_value
 1626              		.section	.bss.adc_value,"aw",%nobits
 1627              		.align	2
 1630              	adc_value:
 1631 0000 00000000 		.space	4
 1632              		.global	imu
ARM GAS  /tmp/ccmk192Y.s 			page 51


 1633              		.section	.bss.imu,"aw",%nobits
 1634              		.align	2
 1637              	imu:
 1638 0000 00000000 		.space	24
 1638      00000000 
 1638      00000000 
 1638      00000000 
 1638      00000000 
 1639              		.global	ret
 1640              		.section	.bss.ret,"aw",%nobits
 1643              	ret:
 1644 0000 00       		.space	1
 1645              		.global	huart2
 1646              		.section	.bss.huart2,"aw",%nobits
 1647              		.align	2
 1650              	huart2:
 1651 0000 00000000 		.space	132
 1651      00000000 
 1651      00000000 
 1651      00000000 
 1651      00000000 
 1652              		.global	htim2
 1653              		.section	.bss.htim2,"aw",%nobits
 1654              		.align	2
 1657              	htim2:
 1658 0000 00000000 		.space	76
 1658      00000000 
 1658      00000000 
 1658      00000000 
 1658      00000000 
 1659              		.global	htim1
 1660              		.section	.bss.htim1,"aw",%nobits
 1661              		.align	2
 1664              	htim1:
 1665 0000 00000000 		.space	76
 1665      00000000 
 1665      00000000 
 1665      00000000 
 1665      00000000 
 1666              		.global	hspi1
 1667              		.section	.bss.hspi1,"aw",%nobits
 1668              		.align	2
 1671              	hspi1:
 1672 0000 00000000 		.space	100
 1672      00000000 
 1672      00000000 
 1672      00000000 
 1672      00000000 
 1673              		.global	hi2c1
 1674              		.section	.bss.hi2c1,"aw",%nobits
 1675              		.align	2
 1678              	hi2c1:
 1679 0000 00000000 		.space	76
 1679      00000000 
 1679      00000000 
 1679      00000000 
 1679      00000000 
ARM GAS  /tmp/ccmk192Y.s 			page 52


 1680              		.text
 1681              	.Letext0:
 1682              		.file 3 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1683              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1684              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1685              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1686              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1687              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1688              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1689              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1690              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 1691              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1692              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1693              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1694              		.file 15 "Core/Inc/bno055.h"
 1695              		.file 16 "Core/Inc/pid.h"
 1696              		.file 17 "Core/Inc/simple_regulator.h"
 1697              		.file 18 "Core/Inc/main.h"
 1698              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c_ex.h"
 1699              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1700              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1701              		.file 22 "Core/Inc/bno055_support.h"
 1702              		.file 23 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1703              		.file 24 "<built-in>"
ARM GAS  /tmp/ccmk192Y.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccmk192Y.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccmk192Y.s:26     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccmk192Y.s:143    .text.MX_GPIO_Init:0000000000000088 $d
     /tmp/ccmk192Y.s:149    .text.Error_Handler:0000000000000000 $t
     /tmp/ccmk192Y.s:155    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccmk192Y.s:187    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccmk192Y.s:192    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccmk192Y.s:468    .text.MX_TIM1_Init:0000000000000128 $d
     /tmp/ccmk192Y.s:1664   .bss.htim1:0000000000000000 htim1
     /tmp/ccmk192Y.s:474    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccmk192Y.s:479    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccmk192Y.s:560    .text.MX_I2C1_Init:0000000000000048 $d
     /tmp/ccmk192Y.s:1678   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccmk192Y.s:567    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccmk192Y.s:572    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccmk192Y.s:637    .text.MX_USART2_UART_Init:0000000000000038 $d
     /tmp/ccmk192Y.s:1650   .bss.huart2:0000000000000000 huart2
     /tmp/ccmk192Y.s:643    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccmk192Y.s:648    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccmk192Y.s:724    .text.MX_SPI1_Init:0000000000000044 $d
     /tmp/ccmk192Y.s:1671   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccmk192Y.s:730    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccmk192Y.s:735    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccmk192Y.s:835    .text.MX_TIM2_Init:0000000000000064 $d
     /tmp/ccmk192Y.s:1657   .bss.htim2:0000000000000000 htim2
     /tmp/ccmk192Y.s:840    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccmk192Y.s:846    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccmk192Y.s:983    .text.main:0000000000000000 $t
     /tmp/ccmk192Y.s:989    .text.main:0000000000000000 main
     /tmp/ccmk192Y.s:1373   .text.main:0000000000000218 $d
     /tmp/ccmk192Y.s:1637   .bss.imu:0000000000000000 imu
     /tmp/ccmk192Y.s:1601   .bss.xout:0000000000000000 xout
     /tmp/ccmk192Y.s:1594   .bss.yout:0000000000000000 yout
     /tmp/ccmk192Y.s:1615   .bss.esc_rpm:0000000000000000 esc_rpm
     /tmp/ccmk192Y.s:1608   .bss.esc_output:0000000000000000 esc_output
     /tmp/ccmk192Y.s:1622   .data.esc_speed:0000000000000000 esc_speed
     /tmp/ccmk192Y.s:1573   .bss.cur_measurement:0000000000000000 cur_measurement
     /tmp/ccmk192Y.s:1580   .bss.esc_measurements:0000000000000000 esc_measurements
     /tmp/ccmk192Y.s:1418   .text.main:00000000000002b8 $t
     /tmp/ccmk192Y.s:1549   .text.main:0000000000000378 $d
     /tmp/ccmk192Y.s:1567   .bss.rpm_length:0000000000000000 rpm_length
     /tmp/ccmk192Y.s:1564   .bss.rpm_length:0000000000000000 $d
     /tmp/ccmk192Y.s:1574   .bss.cur_measurement:0000000000000000 $d
     /tmp/ccmk192Y.s:1577   .bss.esc_measurements:0000000000000000 $d
     /tmp/ccmk192Y.s:1587   .bss.serial_output:0000000000000000 serial_output
     /tmp/ccmk192Y.s:1584   .bss.serial_output:0000000000000000 $d
     /tmp/ccmk192Y.s:1591   .bss.yout:0000000000000000 $d
     /tmp/ccmk192Y.s:1598   .bss.xout:0000000000000000 $d
     /tmp/ccmk192Y.s:1605   .bss.esc_output:0000000000000000 $d
     /tmp/ccmk192Y.s:1612   .bss.esc_rpm:0000000000000000 $d
     /tmp/ccmk192Y.s:1619   .data.esc_speed:0000000000000000 $d
     /tmp/ccmk192Y.s:1630   .bss.adc_value:0000000000000000 adc_value
     /tmp/ccmk192Y.s:1627   .bss.adc_value:0000000000000000 $d
     /tmp/ccmk192Y.s:1634   .bss.imu:0000000000000000 $d
     /tmp/ccmk192Y.s:1643   .bss.ret:0000000000000000 ret
ARM GAS  /tmp/ccmk192Y.s 			page 54


     /tmp/ccmk192Y.s:1644   .bss.ret:0000000000000000 $d
     /tmp/ccmk192Y.s:1647   .bss.huart2:0000000000000000 $d
     /tmp/ccmk192Y.s:1654   .bss.htim2:0000000000000000 $d
     /tmp/ccmk192Y.s:1661   .bss.htim1:0000000000000000 $d
     /tmp/ccmk192Y.s:1668   .bss.hspi1:0000000000000000 $d
     /tmp/ccmk192Y.s:1675   .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dcmpgt
__aeabi_d2iz
__aeabi_i2d
__aeabi_ddiv
HAL_Init
HAL_TIM_Base_Start
bno055_init
bno055_set_power_mode
bno055_set_operation_mode
bno055_convert_double_euler_hpr_deg
PID
PID_SetMode
PID_SetSampleTime
PID_SetOutputLimits
HAL_TIM_Base_Start_IT
HAL_TIM_OC_Start_IT
HAL_GetTick
BNO055_I2C_bus_read
BNO055_I2C_bus_write
BNO055_delay_msek
simple_regulator_update
HAL_NVIC_DisableIRQ
PID_Compute
