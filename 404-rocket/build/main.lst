ARM GAS  /tmp/ccsN23rf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB130:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccsN23rf.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** // Uncomment line below if BNO is connected and working
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** #define BNO_CONNECTED
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  52:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** UART_HandleTypeDef huart2;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** // SET PID VARIABLES HERE
  59:Core/Src/main.c **** static const float pid_variables[] =
  60:Core/Src/main.c **** {
  61:Core/Src/main.c ****   // P, I and D for Servo X
  62:Core/Src/main.c ****   110.0, 0.0, 55.0,
  63:Core/Src/main.c ****   // 500.0, 0.0, 0.0,
  64:Core/Src/main.c **** 
  65:Core/Src/main.c ****   // P, I and D for Servo Y
  66:Core/Src/main.c ****   // 270.0, 0.0, 40.0,
  67:Core/Src/main.c ****   271.0, 0.0, 40.0,
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   // P, I and D for ESC servo
  70:Core/Src/main.c ****   0.2, 0.0002, 0
  71:Core/Src/main.c **** };
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** HAL_StatusTypeDef ret;
  74:Core/Src/main.c **** struct bno055_t imu;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** uint32_t adc_value;
  77:Core/Src/main.c **** double esc_speed = 0.3;
  78:Core/Src/main.c **** double esc_rpm;
  79:Core/Src/main.c **** double esc_output = 0.0;
  80:Core/Src/main.c **** double xout, yout;
  81:Core/Src/main.c **** uint8_t serial_output[60] = {0};
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** double esc_measurements[8];
  84:Core/Src/main.c **** unsigned char cur_measurement;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** uint32_t rpm_length;
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PV */
ARM GAS  /tmp/ccsN23rf.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  91:Core/Src/main.c **** void SystemClock_Config(void);
  92:Core/Src/main.c **** static void MX_GPIO_Init(void);
  93:Core/Src/main.c **** static void MX_TIM1_Init(void);
  94:Core/Src/main.c **** static void MX_I2C1_Init(void);
  95:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  96:Core/Src/main.c **** static void MX_SPI1_Init(void);
  97:Core/Src/main.c **** static void MX_TIM2_Init(void);
  98:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 103:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END 0 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief  The application entry point.
 109:Core/Src/main.c ****   * @retval int
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** int main(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 114:Core/Src/main.c ****   long measurement_sum = 0;
 115:Core/Src/main.c **** 	uint32_t t = 0;
 116:Core/Src/main.c **** 	volatile HAL_StatusTypeDef stat;
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 123:Core/Src/main.c ****   HAL_Init();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Configure the system clock */
 131:Core/Src/main.c ****   SystemClock_Config();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE END SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* Initialize all configured peripherals */
 138:Core/Src/main.c ****   MX_GPIO_Init();
 139:Core/Src/main.c ****   MX_TIM1_Init();
 140:Core/Src/main.c ****   MX_I2C1_Init();
 141:Core/Src/main.c ****   MX_USART2_UART_Init();
 142:Core/Src/main.c ****   MX_SPI1_Init();
 143:Core/Src/main.c ****   MX_TIM2_Init();
 144:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 145:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2);
ARM GAS  /tmp/ccsN23rf.s 			page 4


 146:Core/Src/main.c ****   struct bno055_euler_double_t orientation_data;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   imu.bus_read = BNO055_I2C_bus_read;
 149:Core/Src/main.c ****   imu.bus_write = BNO055_I2C_bus_write;
 150:Core/Src/main.c ****   imu.delay_msec = BNO055_delay_msek;
 151:Core/Src/main.c ****   imu.dev_addr = BNO055_I2C_ADDR1;
 152:Core/Src/main.c **** #ifdef BNO_CONNECTED
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   bno055_init(&imu);
 155:Core/Src/main.c ****   bno055_set_power_mode(BNO055_POWER_MODE_NORMAL);
 156:Core/Src/main.c ****   bno055_set_operation_mode(BNO055_OPERATION_MODE_NDOF);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   while (bno055_convert_double_euler_hpr_deg(&orientation_data) != BNO055_SUCCESS) {
 159:Core/Src/main.c ****   
 160:Core/Src/main.c ****   };
 161:Core/Src/main.c **** #endif
 162:Core/Src/main.c ****   
 163:Core/Src/main.c ****   //these are just absolute values, you have to correct directions in pid.c
 164:Core/Src/main.c ****   double Kpp = pid_variables[0];
 165:Core/Src/main.c ****   double Kip = pid_variables[1];
 166:Core/Src/main.c ****   double Kdp = pid_variables[2];
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   double Kpr = pid_variables[3];
 169:Core/Src/main.c ****   double Kir = pid_variables[4];
 170:Core/Src/main.c ****   double Kdr = pid_variables[5];
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   double Kpe = pid_variables[6];
 173:Core/Src/main.c ****   double Kie = pid_variables[7];
 174:Core/Src/main.c ****   double Kde = pid_variables[8];
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   PID_TypeDef escPID;
 177:Core/Src/main.c ****   PID_TypeDef xPID;
 178:Core/Src/main.c ****   PID_TypeDef yPID;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   double xSetpoint, ySetpoint;
 181:Core/Src/main.c ****   xSetpoint = fabs(orientation_data.p);
 182:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   PID(&xPID, &orientation_data.p, &xout, &xSetpoint, Kpp, Kip, Kdp, _PID_P_ON_E, _PID_CD_DIRECT);
 185:Core/Src/main.c ****   PID_SetMode(&xPID, _PID_MODE_AUTOMATIC);
 186:Core/Src/main.c ****   PID_SetSampleTime(&xPID, 10);
 187:Core/Src/main.c ****   PID_SetOutputLimits(&xPID, -10922.5, 10992.5);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   PID(&yPID, &orientation_data.r, &yout, &ySetpoint, Kpr, Kir, Kdr, _PID_P_ON_E, _PID_CD_DIRECT);
 190:Core/Src/main.c ****   PID_SetMode(&yPID, _PID_MODE_AUTOMATIC);
 191:Core/Src/main.c ****   PID_SetSampleTime(&yPID, 10);
 192:Core/Src/main.c ****   PID_SetOutputLimits(&yPID, -10922.5, 10922.5);
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /*
 195:Core/Src/main.c ****   esc_speed = 0.3;
 196:Core/Src/main.c ****   esc_rpm = esc_speed;
 197:Core/Src/main.c ****   PID(&escPID, &esc_rpm, &esc_output, &esc_speed, Kpe, Kie, Kde, _PID_P_ON_M, _PID_CD_DIRECT);
 198:Core/Src/main.c ****   PID_SetMode(&escPID, _PID_MODE_AUTOMATIC);
 199:Core/Src/main.c ****   PID_SetSampleTime(&escPID, 10);
 200:Core/Src/main.c ****   PID_SetOutputLimits(&escPID, -1.0, 1.0);
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccsN23rf.s 			page 5


 203:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 204:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 205:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_2);
 206:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_3);
 207:Core/Src/main.c ****   //HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_4);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   SimpleRegulatorStruct regulator =
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     .Ki = Kie,
 212:Core/Src/main.c ****     .input = &esc_rpm,
 213:Core/Src/main.c ****     .output = &esc_output,
 214:Core/Src/main.c ****     .reference = 0.4,
 215:Core/Src/main.c ****     .error = 0.0,
 216:Core/Src/main.c ****     .min = 0.3,
 217:Core/Src/main.c ****     .max = 0.7,
 218:Core/Src/main.c ****     .prev_time = HAL_GetTick()
 219:Core/Src/main.c ****   };
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   esc_speed = 0.5;
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   t = HAL_GetTick();
 224:Core/Src/main.c ****   TIM1->CCR3 = 0x5555;
 225:Core/Src/main.c ****   while (HAL_GetTick() - t < 3000) {
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   cur_measurement = 0;
 229:Core/Src/main.c ****   TIM1->CCR3 = 0x5555 + esc_speed * 0x5555;
 230:Core/Src/main.c ****   t = HAL_GetTick();
 231:Core/Src/main.c ****   while (HAL_GetTick() - t < 500) {
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI0_IRQn);
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* Infinite loop */
 239:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 240:Core/Src/main.c ****   while (1)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     #ifdef BNO_CONNECTED
 243:Core/Src/main.c **** 	  while (bno055_convert_double_euler_hpr_deg(&orientation_data) != BNO055_SUCCESS) {
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** 	  };
 246:Core/Src/main.c ****     orientation_data.p = fabs(orientation_data.p);
 247:Core/Src/main.c ****     #endif
 248:Core/Src/main.c ****     // esc_rpm = (1000000.0 / rpm_length) / 3000.0;
 249:Core/Src/main.c ****     
 250:Core/Src/main.c ****     /*
 251:Core/Src/main.c ****     esc_measurements[cur_measurement] = rpm_length;
 252:Core/Src/main.c ****     cur_measurement++;
 253:Core/Src/main.c ****     
 254:Core/Src/main.c ****     // This section filters out some noise on the digital signal
 255:Core/Src/main.c ****     if (cur_measurement >= 8)
 256:Core/Src/main.c ****     {
 257:Core/Src/main.c ****       for (int i = 1; i < 8; i++ )
 258:Core/Src/main.c ****       {
 259:Core/Src/main.c ****         for (int j = 0; j < i; j++ )
ARM GAS  /tmp/ccsN23rf.s 			page 6


 260:Core/Src/main.c ****         {
 261:Core/Src/main.c ****           if (esc_measurements[j] > esc_measurements[j + 1])
 262:Core/Src/main.c ****           {
 263:Core/Src/main.c ****             long temp = esc_measurements[j + 1];
 264:Core/Src/main.c ****             esc_measurements[j + 1] = esc_measurements[j];
 265:Core/Src/main.c ****             esc_measurements[j] = temp;
 266:Core/Src/main.c ****           }
 267:Core/Src/main.c ****         }
 268:Core/Src/main.c ****       }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****       measurement_sum = 0;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****       for (int i = 0; i < 4; i++)
 273:Core/Src/main.c ****       {
 274:Core/Src/main.c ****         measurement_sum += esc_measurements[i + 1];
 275:Core/Src/main.c ****       }
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****       esc_rpm = 500.0 / measurement_sum; 
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****       cur_measurement = 0;
 280:Core/Src/main.c ****       simple_regulator_update(&regulator);
 281:Core/Src/main.c ****       TIM1->CCR3 = esc_output * 0x5555 + 0x5555;
 282:Core/Src/main.c ****     }
 283:Core/Src/main.c ****     */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** 	  HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn);
 286:Core/Src/main.c **** 	  PID_Compute(&xPID);
 287:Core/Src/main.c **** 	  PID_Compute(&yPID);
 288:Core/Src/main.c ****     
 289:Core/Src/main.c ****     // snprintf(serial_output, 10, "%ld\r\n", rpm_length);
 290:Core/Src/main.c ****     // stat = HAL_UART_Transmit(&huart2, serial_output, 60, 1000);
 291:Core/Src/main.c ****     
 292:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 293:Core/Src/main.c ****     
 294:Core/Src/main.c ****     /* USER CODE END WHILE */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 297:Core/Src/main.c ****   }
 298:Core/Src/main.c ****   /* USER CODE END 3 */
 299:Core/Src/main.c **** }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****   * @brief System Clock Configuration
 303:Core/Src/main.c ****   * @retval None
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** void SystemClock_Config(void)
 306:Core/Src/main.c **** {
 307:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 308:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 309:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 312:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 316:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/ccsN23rf.s 			page 7


 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL11;
 320:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 325:Core/Src/main.c ****   */
 326:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 327:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 328:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 329:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 330:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 331:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 334:Core/Src/main.c ****   {
 335:Core/Src/main.c ****     Error_Handler();
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_TIM1;
 338:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 339:Core/Src/main.c ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 340:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c **** }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /**
 347:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 348:Core/Src/main.c ****   * @param None
 349:Core/Src/main.c ****   * @retval None
 350:Core/Src/main.c ****   */
 351:Core/Src/main.c **** static void MX_I2C1_Init(void)
 352:Core/Src/main.c **** {
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 361:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 362:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 363:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 364:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 365:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 366:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 367:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 368:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 369:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 370:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 371:Core/Src/main.c ****   {
 372:Core/Src/main.c ****     Error_Handler();
 373:Core/Src/main.c ****   }
ARM GAS  /tmp/ccsN23rf.s 			page 8


 374:Core/Src/main.c ****   /** Configure Analogue filter
 375:Core/Src/main.c ****   */
 376:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   /** Configure Digital filter
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 383:Core/Src/main.c ****   {
 384:Core/Src/main.c ****     Error_Handler();
 385:Core/Src/main.c ****   }
 386:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** }
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** /**
 393:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 394:Core/Src/main.c ****   * @param None
 395:Core/Src/main.c ****   * @retval None
 396:Core/Src/main.c ****   */
 397:Core/Src/main.c **** static void MX_SPI1_Init(void)
 398:Core/Src/main.c **** {
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 407:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 408:Core/Src/main.c ****   hspi1.Instance = SPI1;
 409:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 410:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 411:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 412:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 413:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 414:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 415:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 416:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 417:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 418:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 419:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 420:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 421:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 422:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 423:Core/Src/main.c ****   {
 424:Core/Src/main.c ****     Error_Handler();
 425:Core/Src/main.c ****   }
 426:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** }
ARM GAS  /tmp/ccsN23rf.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** /**
 433:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 434:Core/Src/main.c ****   * @param None
 435:Core/Src/main.c ****   * @retval None
 436:Core/Src/main.c ****   */
 437:Core/Src/main.c **** static void MX_TIM1_Init(void)
 438:Core/Src/main.c **** {
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 445:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 446:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 447:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 452:Core/Src/main.c ****   htim1.Instance = TIM1;
 453:Core/Src/main.c ****   htim1.Init.Prescaler = 1;
 454:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 455:Core/Src/main.c ****   htim1.Init.Period = 65535;
 456:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 457:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 458:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 459:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 460:Core/Src/main.c ****   {
 461:Core/Src/main.c ****     Error_Handler();
 462:Core/Src/main.c ****   }
 463:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 464:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 465:Core/Src/main.c ****   {
 466:Core/Src/main.c ****     Error_Handler();
 467:Core/Src/main.c ****   }
 468:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 469:Core/Src/main.c ****   {
 470:Core/Src/main.c ****     Error_Handler();
 471:Core/Src/main.c ****   }
 472:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 473:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 474:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 475:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 476:Core/Src/main.c ****   {
 477:Core/Src/main.c ****     Error_Handler();
 478:Core/Src/main.c ****   }
 479:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 480:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 481:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 482:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 483:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 484:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 485:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 486:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 487:Core/Src/main.c ****   {
ARM GAS  /tmp/ccsN23rf.s 			page 10


 488:Core/Src/main.c ****     Error_Handler();
 489:Core/Src/main.c ****   }
 490:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 491:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 492:Core/Src/main.c ****   {
 493:Core/Src/main.c ****     Error_Handler();
 494:Core/Src/main.c ****   }
 495:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 496:Core/Src/main.c ****   {
 497:Core/Src/main.c ****     Error_Handler();
 498:Core/Src/main.c ****   }
 499:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 500:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 501:Core/Src/main.c ****   {
 502:Core/Src/main.c ****     Error_Handler();
 503:Core/Src/main.c ****   }
 504:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 505:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 506:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 507:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 508:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 509:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 510:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 511:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 512:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 513:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 514:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 515:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 516:Core/Src/main.c ****   {
 517:Core/Src/main.c ****     Error_Handler();
 518:Core/Src/main.c ****   }
 519:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 522:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** }
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** /**
 527:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 528:Core/Src/main.c ****   * @param None
 529:Core/Src/main.c ****   * @retval None
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c **** static void MX_TIM2_Init(void)
 532:Core/Src/main.c **** {
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 539:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 544:Core/Src/main.c ****   htim2.Instance = TIM2;
ARM GAS  /tmp/ccsN23rf.s 			page 11


 545:Core/Src/main.c ****   htim2.Init.Prescaler = 43;
 546:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 547:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 548:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 549:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 550:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 551:Core/Src/main.c ****   {
 552:Core/Src/main.c ****     Error_Handler();
 553:Core/Src/main.c ****   }
 554:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 555:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c ****     Error_Handler();
 558:Core/Src/main.c ****   }
 559:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 560:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 561:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 562:Core/Src/main.c ****   {
 563:Core/Src/main.c ****     Error_Handler();
 564:Core/Src/main.c ****   }
 565:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** }
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** /**
 572:Core/Src/main.c ****   * @brief USART2 Initialization Function
 573:Core/Src/main.c ****   * @param None
 574:Core/Src/main.c ****   * @retval None
 575:Core/Src/main.c ****   */
 576:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 577:Core/Src/main.c **** {
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 586:Core/Src/main.c ****   huart2.Instance = USART2;
 587:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 588:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 589:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 590:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 591:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 592:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 593:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 594:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 595:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 596:Core/Src/main.c ****   huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 597:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 598:Core/Src/main.c ****   {
 599:Core/Src/main.c ****     Error_Handler();
 600:Core/Src/main.c ****   }
 601:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
ARM GAS  /tmp/ccsN23rf.s 			page 12


 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 604:Core/Src/main.c **** 
 605:Core/Src/main.c **** }
 606:Core/Src/main.c **** 
 607:Core/Src/main.c **** /**
 608:Core/Src/main.c ****   * @brief GPIO Initialization Function
 609:Core/Src/main.c ****   * @param None
 610:Core/Src/main.c ****   * @retval None
 611:Core/Src/main.c ****   */
 612:Core/Src/main.c **** static void MX_GPIO_Init(void)
 613:Core/Src/main.c **** {
  28              		.loc 1 613 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 88B0     		sub	sp, sp, #32
  39              		.cfi_def_cfa_offset 48
 614:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 614 3 view .LVU1
  41              		.loc 1 614 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 617:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 617 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 617 3 view .LVU4
  51              		.loc 1 617 3 view .LVU5
  52 0010 1D4B     		ldr	r3, .L3
  53 0012 5A69     		ldr	r2, [r3, #20]
  54 0014 42F40032 		orr	r2, r2, #131072
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 617 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 02F40032 		and	r2, r2, #131072
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 617 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 617 3 view .LVU8
 618:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  64              		.loc 1 618 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 618 3 view .LVU10
  67              		.loc 1 618 3 view .LVU11
ARM GAS  /tmp/ccsN23rf.s 			page 13


  68 0024 5A69     		ldr	r2, [r3, #20]
  69 0026 42F48022 		orr	r2, r2, #262144
  70 002a 5A61     		str	r2, [r3, #20]
  71              		.loc 1 618 3 view .LVU12
  72 002c 5B69     		ldr	r3, [r3, #20]
  73 002e 03F48023 		and	r3, r3, #262144
  74 0032 0293     		str	r3, [sp, #8]
  75              		.loc 1 618 3 view .LVU13
  76 0034 029B     		ldr	r3, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 618 3 view .LVU14
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 621:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
  79              		.loc 1 621 3 view .LVU15
  80              		.loc 1 621 23 is_stmt 0 view .LVU16
  81 0036 0225     		movs	r5, #2
  82 0038 0395     		str	r5, [sp, #12]
 622:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  83              		.loc 1 622 3 is_stmt 1 view .LVU17
  84              		.loc 1 622 24 is_stmt 0 view .LVU18
  85 003a 0323     		movs	r3, #3
  86 003c 0493     		str	r3, [sp, #16]
 623:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  87              		.loc 1 623 3 is_stmt 1 view .LVU19
 624:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  88              		.loc 1 624 3 view .LVU20
  89 003e 03A9     		add	r1, sp, #12
  90 0040 4FF09040 		mov	r0, #1207959552
  91 0044 FFF7FEFF 		bl	HAL_GPIO_Init
  92              	.LVL0:
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****   /*Configure GPIO pins : PA3 PA4 */
 627:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4;
  93              		.loc 1 627 3 view .LVU21
  94              		.loc 1 627 23 is_stmt 0 view .LVU22
  95 0048 1823     		movs	r3, #24
  96 004a 0393     		str	r3, [sp, #12]
 628:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  97              		.loc 1 628 3 is_stmt 1 view .LVU23
  98              		.loc 1 628 24 is_stmt 0 view .LVU24
  99 004c 4FF48813 		mov	r3, #1114112
 100 0050 0493     		str	r3, [sp, #16]
 629:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 101              		.loc 1 629 3 is_stmt 1 view .LVU25
 102              		.loc 1 629 24 is_stmt 0 view .LVU26
 103 0052 0126     		movs	r6, #1
 104 0054 0596     		str	r6, [sp, #20]
 630:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 630 3 is_stmt 1 view .LVU27
 106 0056 03A9     		add	r1, sp, #12
 107 0058 4FF09040 		mov	r0, #1207959552
 108 005c FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   /*Configure GPIO pin : PB0 */
 633:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
ARM GAS  /tmp/ccsN23rf.s 			page 14


 110              		.loc 1 633 3 view .LVU28
 111              		.loc 1 633 23 is_stmt 0 view .LVU29
 112 0060 0396     		str	r6, [sp, #12]
 634:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 113              		.loc 1 634 3 is_stmt 1 view .LVU30
 114              		.loc 1 634 24 is_stmt 0 view .LVU31
 115 0062 4FF44413 		mov	r3, #3211264
 116 0066 0493     		str	r3, [sp, #16]
 635:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 117              		.loc 1 635 3 is_stmt 1 view .LVU32
 118              		.loc 1 635 24 is_stmt 0 view .LVU33
 119 0068 0595     		str	r5, [sp, #20]
 636:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 120              		.loc 1 636 3 is_stmt 1 view .LVU34
 121 006a 03A9     		add	r1, sp, #12
 122 006c 0748     		ldr	r0, .L3+4
 123 006e FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL2:
 637:Core/Src/main.c **** 
 638:Core/Src/main.c ****   /* EXTI interrupt init*/
 639:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 125              		.loc 1 639 3 view .LVU35
 126 0072 2246     		mov	r2, r4
 127 0074 2146     		mov	r1, r4
 128 0076 0620     		movs	r0, #6
 129 0078 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 130              	.LVL3:
 640:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 131              		.loc 1 640 3 view .LVU36
 132 007c 0620     		movs	r0, #6
 133 007e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 134              	.LVL4:
 641:Core/Src/main.c **** 
 642:Core/Src/main.c **** }
 135              		.loc 1 642 1 is_stmt 0 view .LVU37
 136 0082 08B0     		add	sp, sp, #32
 137              		.cfi_def_cfa_offset 16
 138              		@ sp needed
 139 0084 70BD     		pop	{r4, r5, r6, pc}
 140              	.L4:
 141 0086 00BF     		.align	2
 142              	.L3:
 143 0088 00100240 		.word	1073876992
 144 008c 00040048 		.word	1207960576
 145              		.cfi_endproc
 146              	.LFE130:
 148              		.section	.text.Error_Handler,"ax",%progbits
 149              		.align	1
 150              		.global	Error_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	Error_Handler:
 156              	.LFB131:
 643:Core/Src/main.c **** 
 644:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 645:Core/Src/main.c **** 
ARM GAS  /tmp/ccsN23rf.s 			page 15


 646:Core/Src/main.c **** /* USER CODE END 4 */
 647:Core/Src/main.c **** 
 648:Core/Src/main.c **** /**
 649:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 650:Core/Src/main.c ****   * @retval None
 651:Core/Src/main.c ****   */
 652:Core/Src/main.c **** void Error_Handler(void)
 653:Core/Src/main.c **** {
 157              		.loc 1 653 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ Volatile: function does not return.
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 654:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 655:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 656:Core/Src/main.c ****   __disable_irq();
 163              		.loc 1 656 3 view .LVU39
 164              	.LBB6:
 165              	.LBI6:
 166              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/ccsN23rf.s 			page 16


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccsN23rf.s 			page 17


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 167              		.loc 2 140 27 view .LVU40
 168              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 169              		.loc 2 142 3 view .LVU41
 170              		.syntax unified
 171              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 172 0000 72B6     		cpsid i
 173              	@ 0 "" 2
 174              		.thumb
ARM GAS  /tmp/ccsN23rf.s 			page 18


 175              		.syntax unified
 176              	.L6:
 177              	.LBE7:
 178              	.LBE6:
 657:Core/Src/main.c ****   while (1)
 179              		.loc 1 657 3 discriminator 1 view .LVU42
 658:Core/Src/main.c ****   {
 659:Core/Src/main.c ****   }
 180              		.loc 1 659 3 discriminator 1 view .LVU43
 657:Core/Src/main.c ****   while (1)
 181              		.loc 1 657 9 discriminator 1 view .LVU44
 182 0002 FEE7     		b	.L6
 183              		.cfi_endproc
 184              	.LFE131:
 186              		.section	.text.MX_TIM1_Init,"ax",%progbits
 187              		.align	1
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	MX_TIM1_Init:
 193              	.LFB127:
 438:Core/Src/main.c **** 
 194              		.loc 1 438 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 104
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 9AB0     		sub	sp, sp, #104
 203              		.cfi_def_cfa_offset 112
 444:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 204              		.loc 1 444 3 view .LVU46
 444:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 205              		.loc 1 444 26 is_stmt 0 view .LVU47
 206 0004 0024     		movs	r4, #0
 207 0006 1694     		str	r4, [sp, #88]
 208 0008 1794     		str	r4, [sp, #92]
 209 000a 1894     		str	r4, [sp, #96]
 210 000c 1994     		str	r4, [sp, #100]
 445:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 211              		.loc 1 445 3 is_stmt 1 view .LVU48
 445:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 212              		.loc 1 445 27 is_stmt 0 view .LVU49
 213 000e 1394     		str	r4, [sp, #76]
 214 0010 1494     		str	r4, [sp, #80]
 215 0012 1594     		str	r4, [sp, #84]
 446:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 216              		.loc 1 446 3 is_stmt 1 view .LVU50
 446:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 217              		.loc 1 446 22 is_stmt 0 view .LVU51
 218 0014 0C94     		str	r4, [sp, #48]
 219 0016 0D94     		str	r4, [sp, #52]
 220 0018 0E94     		str	r4, [sp, #56]
 221 001a 0F94     		str	r4, [sp, #60]
 222 001c 1094     		str	r4, [sp, #64]
ARM GAS  /tmp/ccsN23rf.s 			page 19


 223 001e 1194     		str	r4, [sp, #68]
 224 0020 1294     		str	r4, [sp, #72]
 447:Core/Src/main.c **** 
 225              		.loc 1 447 3 is_stmt 1 view .LVU52
 447:Core/Src/main.c **** 
 226              		.loc 1 447 34 is_stmt 0 view .LVU53
 227 0022 2C22     		movs	r2, #44
 228 0024 2146     		mov	r1, r4
 229 0026 01A8     		add	r0, sp, #4
 230 0028 FFF7FEFF 		bl	memset
 231              	.LVL5:
 452:Core/Src/main.c ****   htim1.Init.Prescaler = 1;
 232              		.loc 1 452 3 is_stmt 1 view .LVU54
 452:Core/Src/main.c ****   htim1.Init.Prescaler = 1;
 233              		.loc 1 452 18 is_stmt 0 view .LVU55
 234 002c 3E48     		ldr	r0, .L27
 235 002e 3F4B     		ldr	r3, .L27+4
 236 0030 0360     		str	r3, [r0]
 453:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 237              		.loc 1 453 3 is_stmt 1 view .LVU56
 453:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 238              		.loc 1 453 24 is_stmt 0 view .LVU57
 239 0032 0123     		movs	r3, #1
 240 0034 4360     		str	r3, [r0, #4]
 454:Core/Src/main.c ****   htim1.Init.Period = 65535;
 241              		.loc 1 454 3 is_stmt 1 view .LVU58
 454:Core/Src/main.c ****   htim1.Init.Period = 65535;
 242              		.loc 1 454 26 is_stmt 0 view .LVU59
 243 0036 8460     		str	r4, [r0, #8]
 455:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 244              		.loc 1 455 3 is_stmt 1 view .LVU60
 455:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 245              		.loc 1 455 21 is_stmt 0 view .LVU61
 246 0038 4FF6FF73 		movw	r3, #65535
 247 003c C360     		str	r3, [r0, #12]
 456:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 248              		.loc 1 456 3 is_stmt 1 view .LVU62
 456:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 249              		.loc 1 456 28 is_stmt 0 view .LVU63
 250 003e 0461     		str	r4, [r0, #16]
 457:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 251              		.loc 1 457 3 is_stmt 1 view .LVU64
 457:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 252              		.loc 1 457 32 is_stmt 0 view .LVU65
 253 0040 4461     		str	r4, [r0, #20]
 458:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 254              		.loc 1 458 3 is_stmt 1 view .LVU66
 458:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 255              		.loc 1 458 32 is_stmt 0 view .LVU67
 256 0042 8461     		str	r4, [r0, #24]
 459:Core/Src/main.c ****   {
 257              		.loc 1 459 3 is_stmt 1 view .LVU68
 459:Core/Src/main.c ****   {
 258              		.loc 1 459 7 is_stmt 0 view .LVU69
 259 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 260              	.LVL6:
 459:Core/Src/main.c ****   {
ARM GAS  /tmp/ccsN23rf.s 			page 20


 261              		.loc 1 459 6 view .LVU70
 262 0048 0028     		cmp	r0, #0
 263 004a 5BD1     		bne	.L18
 463:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 264              		.loc 1 463 3 is_stmt 1 view .LVU71
 463:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 265              		.loc 1 463 34 is_stmt 0 view .LVU72
 266 004c 4FF48053 		mov	r3, #4096
 267 0050 1693     		str	r3, [sp, #88]
 464:Core/Src/main.c ****   {
 268              		.loc 1 464 3 is_stmt 1 view .LVU73
 464:Core/Src/main.c ****   {
 269              		.loc 1 464 7 is_stmt 0 view .LVU74
 270 0052 16A9     		add	r1, sp, #88
 271 0054 3448     		ldr	r0, .L27
 272 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 273              	.LVL7:
 464:Core/Src/main.c ****   {
 274              		.loc 1 464 6 view .LVU75
 275 005a 0028     		cmp	r0, #0
 276 005c 54D1     		bne	.L19
 468:Core/Src/main.c ****   {
 277              		.loc 1 468 3 is_stmt 1 view .LVU76
 468:Core/Src/main.c ****   {
 278              		.loc 1 468 7 is_stmt 0 view .LVU77
 279 005e 3248     		ldr	r0, .L27
 280 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 281              	.LVL8:
 468:Core/Src/main.c ****   {
 282              		.loc 1 468 6 view .LVU78
 283 0064 0028     		cmp	r0, #0
 284 0066 51D1     		bne	.L20
 472:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 285              		.loc 1 472 3 is_stmt 1 view .LVU79
 472:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 286              		.loc 1 472 37 is_stmt 0 view .LVU80
 287 0068 0023     		movs	r3, #0
 288 006a 1393     		str	r3, [sp, #76]
 473:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 289              		.loc 1 473 3 is_stmt 1 view .LVU81
 473:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 290              		.loc 1 473 38 is_stmt 0 view .LVU82
 291 006c 1493     		str	r3, [sp, #80]
 474:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 292              		.loc 1 474 3 is_stmt 1 view .LVU83
 474:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 293              		.loc 1 474 33 is_stmt 0 view .LVU84
 294 006e 1593     		str	r3, [sp, #84]
 475:Core/Src/main.c ****   {
 295              		.loc 1 475 3 is_stmt 1 view .LVU85
 475:Core/Src/main.c ****   {
 296              		.loc 1 475 7 is_stmt 0 view .LVU86
 297 0070 13A9     		add	r1, sp, #76
 298 0072 2D48     		ldr	r0, .L27
 299 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 300              	.LVL9:
 475:Core/Src/main.c ****   {
ARM GAS  /tmp/ccsN23rf.s 			page 21


 301              		.loc 1 475 6 view .LVU87
 302 0078 0028     		cmp	r0, #0
 303 007a 49D1     		bne	.L21
 479:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 304              		.loc 1 479 3 is_stmt 1 view .LVU88
 479:Core/Src/main.c ****   sConfigOC.Pulse = 0x5555;
 305              		.loc 1 479 20 is_stmt 0 view .LVU89
 306 007c 6023     		movs	r3, #96
 307 007e 0C93     		str	r3, [sp, #48]
 480:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 308              		.loc 1 480 3 is_stmt 1 view .LVU90
 480:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 309              		.loc 1 480 19 is_stmt 0 view .LVU91
 310 0080 45F25553 		movw	r3, #21845
 311 0084 0D93     		str	r3, [sp, #52]
 481:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 312              		.loc 1 481 3 is_stmt 1 view .LVU92
 481:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 313              		.loc 1 481 24 is_stmt 0 view .LVU93
 314 0086 0022     		movs	r2, #0
 315 0088 0E92     		str	r2, [sp, #56]
 482:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 316              		.loc 1 482 3 is_stmt 1 view .LVU94
 482:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 317              		.loc 1 482 25 is_stmt 0 view .LVU95
 318 008a 0F92     		str	r2, [sp, #60]
 483:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 319              		.loc 1 483 3 is_stmt 1 view .LVU96
 483:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 320              		.loc 1 483 24 is_stmt 0 view .LVU97
 321 008c 1092     		str	r2, [sp, #64]
 484:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 322              		.loc 1 484 3 is_stmt 1 view .LVU98
 484:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 323              		.loc 1 484 25 is_stmt 0 view .LVU99
 324 008e 1192     		str	r2, [sp, #68]
 485:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 325              		.loc 1 485 3 is_stmt 1 view .LVU100
 485:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 326              		.loc 1 485 26 is_stmt 0 view .LVU101
 327 0090 1292     		str	r2, [sp, #72]
 486:Core/Src/main.c ****   {
 328              		.loc 1 486 3 is_stmt 1 view .LVU102
 486:Core/Src/main.c ****   {
 329              		.loc 1 486 7 is_stmt 0 view .LVU103
 330 0092 0CA9     		add	r1, sp, #48
 331 0094 2448     		ldr	r0, .L27
 332 0096 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 333              	.LVL10:
 486:Core/Src/main.c ****   {
 334              		.loc 1 486 6 view .LVU104
 335 009a 0028     		cmp	r0, #0
 336 009c 3AD1     		bne	.L22
 490:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 337              		.loc 1 490 3 is_stmt 1 view .LVU105
 490:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 338              		.loc 1 490 19 is_stmt 0 view .LVU106
ARM GAS  /tmp/ccsN23rf.s 			page 22


 339 009e 0023     		movs	r3, #0
 340 00a0 0D93     		str	r3, [sp, #52]
 491:Core/Src/main.c ****   {
 341              		.loc 1 491 3 is_stmt 1 view .LVU107
 491:Core/Src/main.c ****   {
 342              		.loc 1 491 7 is_stmt 0 view .LVU108
 343 00a2 0422     		movs	r2, #4
 344 00a4 0CA9     		add	r1, sp, #48
 345 00a6 2048     		ldr	r0, .L27
 346 00a8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 347              	.LVL11:
 491:Core/Src/main.c ****   {
 348              		.loc 1 491 6 view .LVU109
 349 00ac 0028     		cmp	r0, #0
 350 00ae 33D1     		bne	.L23
 495:Core/Src/main.c ****   {
 351              		.loc 1 495 3 is_stmt 1 view .LVU110
 495:Core/Src/main.c ****   {
 352              		.loc 1 495 7 is_stmt 0 view .LVU111
 353 00b0 0822     		movs	r2, #8
 354 00b2 0CA9     		add	r1, sp, #48
 355 00b4 1C48     		ldr	r0, .L27
 356 00b6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 357              	.LVL12:
 495:Core/Src/main.c ****   {
 358              		.loc 1 495 6 view .LVU112
 359 00ba 0028     		cmp	r0, #0
 360 00bc 2ED1     		bne	.L24
 499:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 361              		.loc 1 499 3 is_stmt 1 view .LVU113
 499:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 362              		.loc 1 499 19 is_stmt 0 view .LVU114
 363 00be 45F25553 		movw	r3, #21845
 364 00c2 0D93     		str	r3, [sp, #52]
 500:Core/Src/main.c ****   {
 365              		.loc 1 500 3 is_stmt 1 view .LVU115
 500:Core/Src/main.c ****   {
 366              		.loc 1 500 7 is_stmt 0 view .LVU116
 367 00c4 0C22     		movs	r2, #12
 368 00c6 0CA9     		add	r1, sp, #48
 369 00c8 1748     		ldr	r0, .L27
 370 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 371              	.LVL13:
 500:Core/Src/main.c ****   {
 372              		.loc 1 500 6 view .LVU117
 373 00ce 38BB     		cbnz	r0, .L25
 504:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 374              		.loc 1 504 3 is_stmt 1 view .LVU118
 504:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 375              		.loc 1 504 40 is_stmt 0 view .LVU119
 376 00d0 0023     		movs	r3, #0
 377 00d2 0193     		str	r3, [sp, #4]
 505:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 378              		.loc 1 505 3 is_stmt 1 view .LVU120
 505:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 379              		.loc 1 505 41 is_stmt 0 view .LVU121
 380 00d4 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccsN23rf.s 			page 23


 506:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 381              		.loc 1 506 3 is_stmt 1 view .LVU122
 506:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 382              		.loc 1 506 34 is_stmt 0 view .LVU123
 383 00d6 0393     		str	r3, [sp, #12]
 507:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 384              		.loc 1 507 3 is_stmt 1 view .LVU124
 507:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 385              		.loc 1 507 33 is_stmt 0 view .LVU125
 386 00d8 0493     		str	r3, [sp, #16]
 508:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 387              		.loc 1 508 3 is_stmt 1 view .LVU126
 508:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 388              		.loc 1 508 35 is_stmt 0 view .LVU127
 389 00da 0593     		str	r3, [sp, #20]
 509:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 390              		.loc 1 509 3 is_stmt 1 view .LVU128
 509:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 391              		.loc 1 509 38 is_stmt 0 view .LVU129
 392 00dc 4FF40052 		mov	r2, #8192
 393 00e0 0692     		str	r2, [sp, #24]
 510:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 394              		.loc 1 510 3 is_stmt 1 view .LVU130
 510:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 395              		.loc 1 510 36 is_stmt 0 view .LVU131
 396 00e2 0793     		str	r3, [sp, #28]
 511:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 397              		.loc 1 511 3 is_stmt 1 view .LVU132
 511:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 398              		.loc 1 511 36 is_stmt 0 view .LVU133
 399 00e4 0893     		str	r3, [sp, #32]
 512:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 400              		.loc 1 512 3 is_stmt 1 view .LVU134
 512:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 401              		.loc 1 512 39 is_stmt 0 view .LVU135
 402 00e6 4FF00072 		mov	r2, #33554432
 403 00ea 0992     		str	r2, [sp, #36]
 513:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 404              		.loc 1 513 3 is_stmt 1 view .LVU136
 513:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 405              		.loc 1 513 37 is_stmt 0 view .LVU137
 406 00ec 0A93     		str	r3, [sp, #40]
 514:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 407              		.loc 1 514 3 is_stmt 1 view .LVU138
 514:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 408              		.loc 1 514 40 is_stmt 0 view .LVU139
 409 00ee 0B93     		str	r3, [sp, #44]
 515:Core/Src/main.c ****   {
 410              		.loc 1 515 3 is_stmt 1 view .LVU140
 515:Core/Src/main.c ****   {
 411              		.loc 1 515 7 is_stmt 0 view .LVU141
 412 00f0 01A9     		add	r1, sp, #4
 413 00f2 0D48     		ldr	r0, .L27
 414 00f4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 415              	.LVL14:
 515:Core/Src/main.c ****   {
 416              		.loc 1 515 6 view .LVU142
ARM GAS  /tmp/ccsN23rf.s 			page 24


 417 00f8 A0B9     		cbnz	r0, .L26
 522:Core/Src/main.c **** 
 418              		.loc 1 522 3 is_stmt 1 view .LVU143
 419 00fa 0B48     		ldr	r0, .L27
 420 00fc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 421              	.LVL15:
 524:Core/Src/main.c **** 
 422              		.loc 1 524 1 is_stmt 0 view .LVU144
 423 0100 1AB0     		add	sp, sp, #104
 424              		.cfi_remember_state
 425              		.cfi_def_cfa_offset 8
 426              		@ sp needed
 427 0102 10BD     		pop	{r4, pc}
 428              	.L18:
 429              		.cfi_restore_state
 461:Core/Src/main.c ****   }
 430              		.loc 1 461 5 is_stmt 1 view .LVU145
 431 0104 FFF7FEFF 		bl	Error_Handler
 432              	.LVL16:
 433              	.L19:
 466:Core/Src/main.c ****   }
 434              		.loc 1 466 5 view .LVU146
 435 0108 FFF7FEFF 		bl	Error_Handler
 436              	.LVL17:
 437              	.L20:
 470:Core/Src/main.c ****   }
 438              		.loc 1 470 5 view .LVU147
 439 010c FFF7FEFF 		bl	Error_Handler
 440              	.LVL18:
 441              	.L21:
 477:Core/Src/main.c ****   }
 442              		.loc 1 477 5 view .LVU148
 443 0110 FFF7FEFF 		bl	Error_Handler
 444              	.LVL19:
 445              	.L22:
 488:Core/Src/main.c ****   }
 446              		.loc 1 488 5 view .LVU149
 447 0114 FFF7FEFF 		bl	Error_Handler
 448              	.LVL20:
 449              	.L23:
 493:Core/Src/main.c ****   }
 450              		.loc 1 493 5 view .LVU150
 451 0118 FFF7FEFF 		bl	Error_Handler
 452              	.LVL21:
 453              	.L24:
 497:Core/Src/main.c ****   }
 454              		.loc 1 497 5 view .LVU151
 455 011c FFF7FEFF 		bl	Error_Handler
 456              	.LVL22:
 457              	.L25:
 502:Core/Src/main.c ****   }
 458              		.loc 1 502 5 view .LVU152
 459 0120 FFF7FEFF 		bl	Error_Handler
 460              	.LVL23:
 461              	.L26:
 517:Core/Src/main.c ****   }
 462              		.loc 1 517 5 view .LVU153
ARM GAS  /tmp/ccsN23rf.s 			page 25


 463 0124 FFF7FEFF 		bl	Error_Handler
 464              	.LVL24:
 465              	.L28:
 466              		.align	2
 467              	.L27:
 468 0128 00000000 		.word	htim1
 469 012c 002C0140 		.word	1073818624
 470              		.cfi_endproc
 471              	.LFE127:
 473              		.section	.text.MX_I2C1_Init,"ax",%progbits
 474              		.align	1
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 479              	MX_I2C1_Init:
 480              	.LFB125:
 352:Core/Src/main.c **** 
 481              		.loc 1 352 1 view -0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 3, -8
 488              		.cfi_offset 14, -4
 361:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 489              		.loc 1 361 3 view .LVU155
 361:Core/Src/main.c ****   hi2c1.Init.Timing = 0x2000090E;
 490              		.loc 1 361 18 is_stmt 0 view .LVU156
 491 0002 1148     		ldr	r0, .L37
 492 0004 114B     		ldr	r3, .L37+4
 493 0006 0360     		str	r3, [r0]
 362:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 494              		.loc 1 362 3 is_stmt 1 view .LVU157
 362:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 495              		.loc 1 362 21 is_stmt 0 view .LVU158
 496 0008 114B     		ldr	r3, .L37+8
 497 000a 4360     		str	r3, [r0, #4]
 363:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 498              		.loc 1 363 3 is_stmt 1 view .LVU159
 363:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 499              		.loc 1 363 26 is_stmt 0 view .LVU160
 500 000c 0023     		movs	r3, #0
 501 000e 8360     		str	r3, [r0, #8]
 364:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 502              		.loc 1 364 3 is_stmt 1 view .LVU161
 364:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 503              		.loc 1 364 29 is_stmt 0 view .LVU162
 504 0010 0122     		movs	r2, #1
 505 0012 C260     		str	r2, [r0, #12]
 365:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 506              		.loc 1 365 3 is_stmt 1 view .LVU163
 365:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 507              		.loc 1 365 30 is_stmt 0 view .LVU164
 508 0014 0361     		str	r3, [r0, #16]
 366:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 509              		.loc 1 366 3 is_stmt 1 view .LVU165
ARM GAS  /tmp/ccsN23rf.s 			page 26


 366:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 510              		.loc 1 366 26 is_stmt 0 view .LVU166
 511 0016 4361     		str	r3, [r0, #20]
 367:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 512              		.loc 1 367 3 is_stmt 1 view .LVU167
 367:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 513              		.loc 1 367 31 is_stmt 0 view .LVU168
 514 0018 8361     		str	r3, [r0, #24]
 368:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 515              		.loc 1 368 3 is_stmt 1 view .LVU169
 368:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 516              		.loc 1 368 30 is_stmt 0 view .LVU170
 517 001a C361     		str	r3, [r0, #28]
 369:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 518              		.loc 1 369 3 is_stmt 1 view .LVU171
 369:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 519              		.loc 1 369 28 is_stmt 0 view .LVU172
 520 001c 0362     		str	r3, [r0, #32]
 370:Core/Src/main.c ****   {
 521              		.loc 1 370 3 is_stmt 1 view .LVU173
 370:Core/Src/main.c ****   {
 522              		.loc 1 370 7 is_stmt 0 view .LVU174
 523 001e FFF7FEFF 		bl	HAL_I2C_Init
 524              	.LVL25:
 370:Core/Src/main.c ****   {
 525              		.loc 1 370 6 view .LVU175
 526 0022 50B9     		cbnz	r0, .L34
 376:Core/Src/main.c ****   {
 527              		.loc 1 376 3 is_stmt 1 view .LVU176
 376:Core/Src/main.c ****   {
 528              		.loc 1 376 7 is_stmt 0 view .LVU177
 529 0024 0021     		movs	r1, #0
 530 0026 0848     		ldr	r0, .L37
 531 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 532              	.LVL26:
 376:Core/Src/main.c ****   {
 533              		.loc 1 376 6 view .LVU178
 534 002c 38B9     		cbnz	r0, .L35
 382:Core/Src/main.c ****   {
 535              		.loc 1 382 3 is_stmt 1 view .LVU179
 382:Core/Src/main.c ****   {
 536              		.loc 1 382 7 is_stmt 0 view .LVU180
 537 002e 0021     		movs	r1, #0
 538 0030 0548     		ldr	r0, .L37
 539 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 540              	.LVL27:
 382:Core/Src/main.c ****   {
 541              		.loc 1 382 6 view .LVU181
 542 0036 20B9     		cbnz	r0, .L36
 390:Core/Src/main.c **** 
 543              		.loc 1 390 1 view .LVU182
 544 0038 08BD     		pop	{r3, pc}
 545              	.L34:
 372:Core/Src/main.c ****   }
 546              		.loc 1 372 5 is_stmt 1 view .LVU183
 547 003a FFF7FEFF 		bl	Error_Handler
 548              	.LVL28:
ARM GAS  /tmp/ccsN23rf.s 			page 27


 549              	.L35:
 378:Core/Src/main.c ****   }
 550              		.loc 1 378 5 view .LVU184
 551 003e FFF7FEFF 		bl	Error_Handler
 552              	.LVL29:
 553              	.L36:
 384:Core/Src/main.c ****   }
 554              		.loc 1 384 5 view .LVU185
 555 0042 FFF7FEFF 		bl	Error_Handler
 556              	.LVL30:
 557              	.L38:
 558 0046 00BF     		.align	2
 559              	.L37:
 560 0048 00000000 		.word	hi2c1
 561 004c 00540040 		.word	1073763328
 562 0050 0E090020 		.word	536873230
 563              		.cfi_endproc
 564              	.LFE125:
 566              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 567              		.align	1
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	MX_USART2_UART_Init:
 573              	.LFB129:
 577:Core/Src/main.c **** 
 574              		.loc 1 577 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 3, -8
 581              		.cfi_offset 14, -4
 586:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 582              		.loc 1 586 3 view .LVU187
 586:Core/Src/main.c ****   huart2.Init.BaudRate = 9600;
 583              		.loc 1 586 19 is_stmt 0 view .LVU188
 584 0002 0D48     		ldr	r0, .L43
 585 0004 0D4B     		ldr	r3, .L43+4
 586 0006 0360     		str	r3, [r0]
 587:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 587              		.loc 1 587 3 is_stmt 1 view .LVU189
 587:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 588              		.loc 1 587 24 is_stmt 0 view .LVU190
 589 0008 4FF41653 		mov	r3, #9600
 590 000c 4360     		str	r3, [r0, #4]
 588:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 591              		.loc 1 588 3 is_stmt 1 view .LVU191
 588:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 592              		.loc 1 588 26 is_stmt 0 view .LVU192
 593 000e 0023     		movs	r3, #0
 594 0010 8360     		str	r3, [r0, #8]
 589:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 595              		.loc 1 589 3 is_stmt 1 view .LVU193
 589:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 596              		.loc 1 589 24 is_stmt 0 view .LVU194
ARM GAS  /tmp/ccsN23rf.s 			page 28


 597 0012 C360     		str	r3, [r0, #12]
 590:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 598              		.loc 1 590 3 is_stmt 1 view .LVU195
 590:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 599              		.loc 1 590 22 is_stmt 0 view .LVU196
 600 0014 0361     		str	r3, [r0, #16]
 591:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 601              		.loc 1 591 3 is_stmt 1 view .LVU197
 591:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 602              		.loc 1 591 20 is_stmt 0 view .LVU198
 603 0016 0C22     		movs	r2, #12
 604 0018 4261     		str	r2, [r0, #20]
 592:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 605              		.loc 1 592 3 is_stmt 1 view .LVU199
 592:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 606              		.loc 1 592 25 is_stmt 0 view .LVU200
 607 001a 8361     		str	r3, [r0, #24]
 593:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 608              		.loc 1 593 3 is_stmt 1 view .LVU201
 593:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 609              		.loc 1 593 28 is_stmt 0 view .LVU202
 610 001c C361     		str	r3, [r0, #28]
 594:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 611              		.loc 1 594 3 is_stmt 1 view .LVU203
 594:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_RXOVERRUNDISABLE_INIT;
 612              		.loc 1 594 30 is_stmt 0 view .LVU204
 613 001e 0362     		str	r3, [r0, #32]
 595:Core/Src/main.c ****   huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 614              		.loc 1 595 3 is_stmt 1 view .LVU205
 595:Core/Src/main.c ****   huart2.AdvancedInit.OverrunDisable = UART_ADVFEATURE_OVERRUN_DISABLE;
 615              		.loc 1 595 38 is_stmt 0 view .LVU206
 616 0020 1023     		movs	r3, #16
 617 0022 4362     		str	r3, [r0, #36]
 596:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 618              		.loc 1 596 3 is_stmt 1 view .LVU207
 596:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 619              		.loc 1 596 38 is_stmt 0 view .LVU208
 620 0024 4FF48053 		mov	r3, #4096
 621 0028 8363     		str	r3, [r0, #56]
 597:Core/Src/main.c ****   {
 622              		.loc 1 597 3 is_stmt 1 view .LVU209
 597:Core/Src/main.c ****   {
 623              		.loc 1 597 7 is_stmt 0 view .LVU210
 624 002a FFF7FEFF 		bl	HAL_UART_Init
 625              	.LVL31:
 597:Core/Src/main.c ****   {
 626              		.loc 1 597 6 view .LVU211
 627 002e 00B9     		cbnz	r0, .L42
 605:Core/Src/main.c **** 
 628              		.loc 1 605 1 view .LVU212
 629 0030 08BD     		pop	{r3, pc}
 630              	.L42:
 599:Core/Src/main.c ****   }
 631              		.loc 1 599 5 is_stmt 1 view .LVU213
 632 0032 FFF7FEFF 		bl	Error_Handler
 633              	.LVL32:
 634              	.L44:
ARM GAS  /tmp/ccsN23rf.s 			page 29


 635 0036 00BF     		.align	2
 636              	.L43:
 637 0038 00000000 		.word	huart2
 638 003c 00440040 		.word	1073759232
 639              		.cfi_endproc
 640              	.LFE129:
 642              		.section	.text.MX_SPI1_Init,"ax",%progbits
 643              		.align	1
 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 648              	MX_SPI1_Init:
 649              	.LFB126:
 398:Core/Src/main.c **** 
 650              		.loc 1 398 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654 0000 08B5     		push	{r3, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 3, -8
 657              		.cfi_offset 14, -4
 408:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 658              		.loc 1 408 3 view .LVU215
 408:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 659              		.loc 1 408 18 is_stmt 0 view .LVU216
 660 0002 1048     		ldr	r0, .L49
 661 0004 104B     		ldr	r3, .L49+4
 662 0006 0360     		str	r3, [r0]
 409:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 663              		.loc 1 409 3 is_stmt 1 view .LVU217
 409:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 664              		.loc 1 409 19 is_stmt 0 view .LVU218
 665 0008 4FF48273 		mov	r3, #260
 666 000c 4360     		str	r3, [r0, #4]
 410:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 667              		.loc 1 410 3 is_stmt 1 view .LVU219
 410:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 668              		.loc 1 410 24 is_stmt 0 view .LVU220
 669 000e 4FF48063 		mov	r3, #1024
 670 0012 8360     		str	r3, [r0, #8]
 411:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 671              		.loc 1 411 3 is_stmt 1 view .LVU221
 411:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 672              		.loc 1 411 23 is_stmt 0 view .LVU222
 673 0014 4FF44073 		mov	r3, #768
 674 0018 C360     		str	r3, [r0, #12]
 412:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 675              		.loc 1 412 3 is_stmt 1 view .LVU223
 412:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 676              		.loc 1 412 26 is_stmt 0 view .LVU224
 677 001a 0023     		movs	r3, #0
 678 001c 0361     		str	r3, [r0, #16]
 413:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 679              		.loc 1 413 3 is_stmt 1 view .LVU225
 413:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 680              		.loc 1 413 23 is_stmt 0 view .LVU226
ARM GAS  /tmp/ccsN23rf.s 			page 30


 681 001e 4361     		str	r3, [r0, #20]
 414:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 682              		.loc 1 414 3 is_stmt 1 view .LVU227
 414:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 683              		.loc 1 414 18 is_stmt 0 view .LVU228
 684 0020 4FF40072 		mov	r2, #512
 685 0024 8261     		str	r2, [r0, #24]
 415:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 686              		.loc 1 415 3 is_stmt 1 view .LVU229
 415:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 687              		.loc 1 415 32 is_stmt 0 view .LVU230
 688 0026 C361     		str	r3, [r0, #28]
 416:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 689              		.loc 1 416 3 is_stmt 1 view .LVU231
 416:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 690              		.loc 1 416 23 is_stmt 0 view .LVU232
 691 0028 0362     		str	r3, [r0, #32]
 417:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 692              		.loc 1 417 3 is_stmt 1 view .LVU233
 417:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 693              		.loc 1 417 21 is_stmt 0 view .LVU234
 694 002a 4362     		str	r3, [r0, #36]
 418:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 695              		.loc 1 418 3 is_stmt 1 view .LVU235
 418:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 696              		.loc 1 418 29 is_stmt 0 view .LVU236
 697 002c 8362     		str	r3, [r0, #40]
 419:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 698              		.loc 1 419 3 is_stmt 1 view .LVU237
 419:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 699              		.loc 1 419 28 is_stmt 0 view .LVU238
 700 002e 0722     		movs	r2, #7
 701 0030 C262     		str	r2, [r0, #44]
 420:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 702              		.loc 1 420 3 is_stmt 1 view .LVU239
 420:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 703              		.loc 1 420 24 is_stmt 0 view .LVU240
 704 0032 0363     		str	r3, [r0, #48]
 421:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 705              		.loc 1 421 3 is_stmt 1 view .LVU241
 421:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 706              		.loc 1 421 23 is_stmt 0 view .LVU242
 707 0034 0823     		movs	r3, #8
 708 0036 4363     		str	r3, [r0, #52]
 422:Core/Src/main.c ****   {
 709              		.loc 1 422 3 is_stmt 1 view .LVU243
 422:Core/Src/main.c ****   {
 710              		.loc 1 422 7 is_stmt 0 view .LVU244
 711 0038 FFF7FEFF 		bl	HAL_SPI_Init
 712              	.LVL33:
 422:Core/Src/main.c ****   {
 713              		.loc 1 422 6 view .LVU245
 714 003c 00B9     		cbnz	r0, .L48
 430:Core/Src/main.c **** 
 715              		.loc 1 430 1 view .LVU246
 716 003e 08BD     		pop	{r3, pc}
 717              	.L48:
ARM GAS  /tmp/ccsN23rf.s 			page 31


 424:Core/Src/main.c ****   }
 718              		.loc 1 424 5 is_stmt 1 view .LVU247
 719 0040 FFF7FEFF 		bl	Error_Handler
 720              	.LVL34:
 721              	.L50:
 722              		.align	2
 723              	.L49:
 724 0044 00000000 		.word	hspi1
 725 0048 00300140 		.word	1073819648
 726              		.cfi_endproc
 727              	.LFE126:
 729              		.section	.text.MX_TIM2_Init,"ax",%progbits
 730              		.align	1
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	MX_TIM2_Init:
 736              	.LFB128:
 532:Core/Src/main.c **** 
 737              		.loc 1 532 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 32
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741 0000 00B5     		push	{lr}
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 14, -4
 744 0002 89B0     		sub	sp, sp, #36
 745              		.cfi_def_cfa_offset 40
 538:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 746              		.loc 1 538 3 view .LVU249
 538:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 747              		.loc 1 538 26 is_stmt 0 view .LVU250
 748 0004 0023     		movs	r3, #0
 749 0006 0493     		str	r3, [sp, #16]
 750 0008 0593     		str	r3, [sp, #20]
 751 000a 0693     		str	r3, [sp, #24]
 752 000c 0793     		str	r3, [sp, #28]
 539:Core/Src/main.c **** 
 753              		.loc 1 539 3 is_stmt 1 view .LVU251
 539:Core/Src/main.c **** 
 754              		.loc 1 539 27 is_stmt 0 view .LVU252
 755 000e 0193     		str	r3, [sp, #4]
 756 0010 0293     		str	r3, [sp, #8]
 757 0012 0393     		str	r3, [sp, #12]
 544:Core/Src/main.c ****   htim2.Init.Prescaler = 43;
 758              		.loc 1 544 3 is_stmt 1 view .LVU253
 544:Core/Src/main.c ****   htim2.Init.Prescaler = 43;
 759              		.loc 1 544 18 is_stmt 0 view .LVU254
 760 0014 1348     		ldr	r0, .L59
 761 0016 4FF08042 		mov	r2, #1073741824
 762 001a 0260     		str	r2, [r0]
 545:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 763              		.loc 1 545 3 is_stmt 1 view .LVU255
 545:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 764              		.loc 1 545 24 is_stmt 0 view .LVU256
 765 001c 2B22     		movs	r2, #43
 766 001e 4260     		str	r2, [r0, #4]
ARM GAS  /tmp/ccsN23rf.s 			page 32


 546:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 767              		.loc 1 546 3 is_stmt 1 view .LVU257
 546:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 768              		.loc 1 546 26 is_stmt 0 view .LVU258
 769 0020 8360     		str	r3, [r0, #8]
 547:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 770              		.loc 1 547 3 is_stmt 1 view .LVU259
 547:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 771              		.loc 1 547 21 is_stmt 0 view .LVU260
 772 0022 4FF0FF32 		mov	r2, #-1
 773 0026 C260     		str	r2, [r0, #12]
 548:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 774              		.loc 1 548 3 is_stmt 1 view .LVU261
 548:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 775              		.loc 1 548 28 is_stmt 0 view .LVU262
 776 0028 0361     		str	r3, [r0, #16]
 549:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 777              		.loc 1 549 3 is_stmt 1 view .LVU263
 549:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 778              		.loc 1 549 32 is_stmt 0 view .LVU264
 779 002a 8361     		str	r3, [r0, #24]
 550:Core/Src/main.c ****   {
 780              		.loc 1 550 3 is_stmt 1 view .LVU265
 550:Core/Src/main.c ****   {
 781              		.loc 1 550 7 is_stmt 0 view .LVU266
 782 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 783              	.LVL35:
 550:Core/Src/main.c ****   {
 784              		.loc 1 550 6 view .LVU267
 785 0030 90B9     		cbnz	r0, .L56
 554:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 786              		.loc 1 554 3 is_stmt 1 view .LVU268
 554:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 787              		.loc 1 554 34 is_stmt 0 view .LVU269
 788 0032 4FF48053 		mov	r3, #4096
 789 0036 0493     		str	r3, [sp, #16]
 555:Core/Src/main.c ****   {
 790              		.loc 1 555 3 is_stmt 1 view .LVU270
 555:Core/Src/main.c ****   {
 791              		.loc 1 555 7 is_stmt 0 view .LVU271
 792 0038 04A9     		add	r1, sp, #16
 793 003a 0A48     		ldr	r0, .L59
 794 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 795              	.LVL36:
 555:Core/Src/main.c ****   {
 796              		.loc 1 555 6 view .LVU272
 797 0040 60B9     		cbnz	r0, .L57
 559:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 798              		.loc 1 559 3 is_stmt 1 view .LVU273
 559:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 799              		.loc 1 559 37 is_stmt 0 view .LVU274
 800 0042 0023     		movs	r3, #0
 801 0044 0193     		str	r3, [sp, #4]
 560:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 802              		.loc 1 560 3 is_stmt 1 view .LVU275
 560:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 803              		.loc 1 560 33 is_stmt 0 view .LVU276
ARM GAS  /tmp/ccsN23rf.s 			page 33


 804 0046 0393     		str	r3, [sp, #12]
 561:Core/Src/main.c ****   {
 805              		.loc 1 561 3 is_stmt 1 view .LVU277
 561:Core/Src/main.c ****   {
 806              		.loc 1 561 7 is_stmt 0 view .LVU278
 807 0048 01A9     		add	r1, sp, #4
 808 004a 0648     		ldr	r0, .L59
 809 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 810              	.LVL37:
 561:Core/Src/main.c ****   {
 811              		.loc 1 561 6 view .LVU279
 812 0050 30B9     		cbnz	r0, .L58
 569:Core/Src/main.c **** 
 813              		.loc 1 569 1 view .LVU280
 814 0052 09B0     		add	sp, sp, #36
 815              		.cfi_remember_state
 816              		.cfi_def_cfa_offset 4
 817              		@ sp needed
 818 0054 5DF804FB 		ldr	pc, [sp], #4
 819              	.L56:
 820              		.cfi_restore_state
 552:Core/Src/main.c ****   }
 821              		.loc 1 552 5 is_stmt 1 view .LVU281
 822 0058 FFF7FEFF 		bl	Error_Handler
 823              	.LVL38:
 824              	.L57:
 557:Core/Src/main.c ****   }
 825              		.loc 1 557 5 view .LVU282
 826 005c FFF7FEFF 		bl	Error_Handler
 827              	.LVL39:
 828              	.L58:
 563:Core/Src/main.c ****   }
 829              		.loc 1 563 5 view .LVU283
 830 0060 FFF7FEFF 		bl	Error_Handler
 831              	.LVL40:
 832              	.L60:
 833              		.align	2
 834              	.L59:
 835 0064 00000000 		.word	htim2
 836              		.cfi_endproc
 837              	.LFE128:
 839              		.section	.text.SystemClock_Config,"ax",%progbits
 840              		.align	1
 841              		.global	SystemClock_Config
 842              		.syntax unified
 843              		.thumb
 844              		.thumb_func
 846              	SystemClock_Config:
 847              	.LFB124:
 306:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 848              		.loc 1 306 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 88
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852 0000 00B5     		push	{lr}
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 14, -4
ARM GAS  /tmp/ccsN23rf.s 			page 34


 855 0002 97B0     		sub	sp, sp, #92
 856              		.cfi_def_cfa_offset 96
 307:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 857              		.loc 1 307 3 view .LVU285
 307:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 858              		.loc 1 307 22 is_stmt 0 view .LVU286
 859 0004 2822     		movs	r2, #40
 860 0006 0021     		movs	r1, #0
 861 0008 0CA8     		add	r0, sp, #48
 862 000a FFF7FEFF 		bl	memset
 863              	.LVL41:
 308:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 864              		.loc 1 308 3 is_stmt 1 view .LVU287
 308:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 865              		.loc 1 308 22 is_stmt 0 view .LVU288
 866 000e 0023     		movs	r3, #0
 867 0010 0793     		str	r3, [sp, #28]
 868 0012 0893     		str	r3, [sp, #32]
 869 0014 0993     		str	r3, [sp, #36]
 870 0016 0A93     		str	r3, [sp, #40]
 871 0018 0B93     		str	r3, [sp, #44]
 309:Core/Src/main.c **** 
 872              		.loc 1 309 3 is_stmt 1 view .LVU289
 309:Core/Src/main.c **** 
 873              		.loc 1 309 28 is_stmt 0 view .LVU290
 874 001a 0193     		str	r3, [sp, #4]
 875 001c 0293     		str	r3, [sp, #8]
 876 001e 0393     		str	r3, [sp, #12]
 877 0020 0493     		str	r3, [sp, #16]
 878 0022 0593     		str	r3, [sp, #20]
 879 0024 0693     		str	r3, [sp, #24]
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 880              		.loc 1 314 3 is_stmt 1 view .LVU291
 314:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 881              		.loc 1 314 36 is_stmt 0 view .LVU292
 882 0026 0223     		movs	r3, #2
 883 0028 0C93     		str	r3, [sp, #48]
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 884              		.loc 1 315 3 is_stmt 1 view .LVU293
 315:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 885              		.loc 1 315 30 is_stmt 0 view .LVU294
 886 002a 0122     		movs	r2, #1
 887 002c 1092     		str	r2, [sp, #64]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 888              		.loc 1 316 3 is_stmt 1 view .LVU295
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 889              		.loc 1 316 41 is_stmt 0 view .LVU296
 890 002e 1022     		movs	r2, #16
 891 0030 1192     		str	r2, [sp, #68]
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 892              		.loc 1 317 3 is_stmt 1 view .LVU297
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 893              		.loc 1 317 34 is_stmt 0 view .LVU298
 894 0032 1393     		str	r3, [sp, #76]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL11;
 895              		.loc 1 318 3 is_stmt 1 view .LVU299
 319:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccsN23rf.s 			page 35


 896              		.loc 1 319 3 view .LVU300
 319:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 897              		.loc 1 319 32 is_stmt 0 view .LVU301
 898 0034 4FF41013 		mov	r3, #2359296
 899 0038 1593     		str	r3, [sp, #84]
 320:Core/Src/main.c ****   {
 900              		.loc 1 320 3 is_stmt 1 view .LVU302
 320:Core/Src/main.c ****   {
 901              		.loc 1 320 7 is_stmt 0 view .LVU303
 902 003a 0CA8     		add	r0, sp, #48
 903 003c FFF7FEFF 		bl	HAL_RCC_OscConfig
 904              	.LVL42:
 320:Core/Src/main.c ****   {
 905              		.loc 1 320 6 view .LVU304
 906 0040 D8B9     		cbnz	r0, .L66
 326:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 907              		.loc 1 326 3 is_stmt 1 view .LVU305
 326:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 908              		.loc 1 326 31 is_stmt 0 view .LVU306
 909 0042 0F23     		movs	r3, #15
 910 0044 0793     		str	r3, [sp, #28]
 328:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 911              		.loc 1 328 3 is_stmt 1 view .LVU307
 328:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 912              		.loc 1 328 34 is_stmt 0 view .LVU308
 913 0046 0223     		movs	r3, #2
 914 0048 0893     		str	r3, [sp, #32]
 329:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 915              		.loc 1 329 3 is_stmt 1 view .LVU309
 329:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 916              		.loc 1 329 35 is_stmt 0 view .LVU310
 917 004a 0023     		movs	r3, #0
 918 004c 0993     		str	r3, [sp, #36]
 330:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 919              		.loc 1 330 3 is_stmt 1 view .LVU311
 330:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 920              		.loc 1 330 36 is_stmt 0 view .LVU312
 921 004e 4FF48063 		mov	r3, #1024
 922 0052 0A93     		str	r3, [sp, #40]
 331:Core/Src/main.c **** 
 923              		.loc 1 331 3 is_stmt 1 view .LVU313
 331:Core/Src/main.c **** 
 924              		.loc 1 331 36 is_stmt 0 view .LVU314
 925 0054 0B93     		str	r3, [sp, #44]
 333:Core/Src/main.c ****   {
 926              		.loc 1 333 3 is_stmt 1 view .LVU315
 333:Core/Src/main.c ****   {
 927              		.loc 1 333 7 is_stmt 0 view .LVU316
 928 0056 0121     		movs	r1, #1
 929 0058 07A8     		add	r0, sp, #28
 930 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 931              	.LVL43:
 333:Core/Src/main.c ****   {
 932              		.loc 1 333 6 view .LVU317
 933 005e 70B9     		cbnz	r0, .L67
 337:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 934              		.loc 1 337 3 is_stmt 1 view .LVU318
ARM GAS  /tmp/ccsN23rf.s 			page 36


 337:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 935              		.loc 1 337 38 is_stmt 0 view .LVU319
 936 0060 4FF48153 		mov	r3, #4128
 937 0064 0193     		str	r3, [sp, #4]
 338:Core/Src/main.c ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 938              		.loc 1 338 3 is_stmt 1 view .LVU320
 338:Core/Src/main.c ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 939              		.loc 1 338 36 is_stmt 0 view .LVU321
 940 0066 0023     		movs	r3, #0
 941 0068 0493     		str	r3, [sp, #16]
 339:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 942              		.loc 1 339 3 is_stmt 1 view .LVU322
 339:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 943              		.loc 1 339 36 is_stmt 0 view .LVU323
 944 006a 0693     		str	r3, [sp, #24]
 340:Core/Src/main.c ****   {
 945              		.loc 1 340 3 is_stmt 1 view .LVU324
 340:Core/Src/main.c ****   {
 946              		.loc 1 340 7 is_stmt 0 view .LVU325
 947 006c 01A8     		add	r0, sp, #4
 948 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 949              	.LVL44:
 340:Core/Src/main.c ****   {
 950              		.loc 1 340 6 view .LVU326
 951 0072 30B9     		cbnz	r0, .L68
 344:Core/Src/main.c **** 
 952              		.loc 1 344 1 view .LVU327
 953 0074 17B0     		add	sp, sp, #92
 954              		.cfi_remember_state
 955              		.cfi_def_cfa_offset 4
 956              		@ sp needed
 957 0076 5DF804FB 		ldr	pc, [sp], #4
 958              	.L66:
 959              		.cfi_restore_state
 322:Core/Src/main.c ****   }
 960              		.loc 1 322 5 is_stmt 1 view .LVU328
 961 007a FFF7FEFF 		bl	Error_Handler
 962              	.LVL45:
 963              	.L67:
 335:Core/Src/main.c ****   }
 964              		.loc 1 335 5 view .LVU329
 965 007e FFF7FEFF 		bl	Error_Handler
 966              	.LVL46:
 967              	.L68:
 342:Core/Src/main.c ****   }
 968              		.loc 1 342 5 view .LVU330
 969 0082 FFF7FEFF 		bl	Error_Handler
 970              	.LVL47:
 971              		.cfi_endproc
 972              	.LFE124:
 974              		.global	__aeabi_dmul
 975              		.global	__aeabi_dadd
 976              		.global	__aeabi_d2uiz
 977              		.section	.text.main,"ax",%progbits
 978              		.align	1
 979              		.global	main
 980              		.syntax unified
ARM GAS  /tmp/ccsN23rf.s 			page 37


 981              		.thumb
 982              		.thumb_func
 984              	main:
 985              	.LFB123:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 986              		.loc 1 112 1 view -0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 320
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 2DED048B 		vpush.64	{d8, d9}
 998              		.cfi_def_cfa_offset 36
 999              		.cfi_offset 80, -36
 1000              		.cfi_offset 81, -32
 1001              		.cfi_offset 82, -28
 1002              		.cfi_offset 83, -24
 1003 0006 D3B0     		sub	sp, sp, #332
 1004              		.cfi_def_cfa_offset 368
 114:Core/Src/main.c **** 	uint32_t t = 0;
 1005              		.loc 1 114 3 view .LVU332
 1006              	.LVL48:
 115:Core/Src/main.c **** 	volatile HAL_StatusTypeDef stat;
 1007              		.loc 1 115 2 view .LVU333
 116:Core/Src/main.c **** 
 1008              		.loc 1 116 2 view .LVU334
 123:Core/Src/main.c **** 
 1009              		.loc 1 123 3 view .LVU335
 1010 0008 FFF7FEFF 		bl	HAL_Init
 1011              	.LVL49:
 131:Core/Src/main.c **** 
 1012              		.loc 1 131 3 view .LVU336
 1013 000c FFF7FEFF 		bl	SystemClock_Config
 1014              	.LVL50:
 138:Core/Src/main.c ****   MX_TIM1_Init();
 1015              		.loc 1 138 3 view .LVU337
 1016 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1017              	.LVL51:
 139:Core/Src/main.c ****   MX_I2C1_Init();
 1018              		.loc 1 139 3 view .LVU338
 1019 0014 FFF7FEFF 		bl	MX_TIM1_Init
 1020              	.LVL52:
 140:Core/Src/main.c ****   MX_USART2_UART_Init();
 1021              		.loc 1 140 3 view .LVU339
 1022 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1023              	.LVL53:
 141:Core/Src/main.c ****   MX_SPI1_Init();
 1024              		.loc 1 141 3 view .LVU340
 1025 001c FFF7FEFF 		bl	MX_USART2_UART_Init
 1026              	.LVL54:
 142:Core/Src/main.c ****   MX_TIM2_Init();
 1027              		.loc 1 142 3 view .LVU341
ARM GAS  /tmp/ccsN23rf.s 			page 38


 1028 0020 FFF7FEFF 		bl	MX_SPI1_Init
 1029              	.LVL55:
 143:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1030              		.loc 1 143 3 view .LVU342
 1031 0024 FFF7FEFF 		bl	MX_TIM2_Init
 1032              	.LVL56:
 145:Core/Src/main.c ****   struct bno055_euler_double_t orientation_data;
 1033              		.loc 1 145 3 view .LVU343
 1034 0028 8D48     		ldr	r0, .L76+104
 1035 002a FFF7FEFF 		bl	HAL_TIM_Base_Start
 1036              	.LVL57:
 146:Core/Src/main.c **** 
 1037              		.loc 1 146 3 view .LVU344
 148:Core/Src/main.c ****   imu.bus_write = BNO055_I2C_bus_write;
 1038              		.loc 1 148 3 view .LVU345
 148:Core/Src/main.c ****   imu.bus_write = BNO055_I2C_bus_write;
 1039              		.loc 1 148 16 is_stmt 0 view .LVU346
 1040 002e 8D48     		ldr	r0, .L76+108
 1041 0030 8D4B     		ldr	r3, .L76+112
 1042 0032 0361     		str	r3, [r0, #16]
 149:Core/Src/main.c ****   imu.delay_msec = BNO055_delay_msek;
 1043              		.loc 1 149 3 is_stmt 1 view .LVU347
 149:Core/Src/main.c ****   imu.delay_msec = BNO055_delay_msek;
 1044              		.loc 1 149 17 is_stmt 0 view .LVU348
 1045 0034 8D4B     		ldr	r3, .L76+116
 1046 0036 C360     		str	r3, [r0, #12]
 150:Core/Src/main.c ****   imu.dev_addr = BNO055_I2C_ADDR1;
 1047              		.loc 1 150 3 is_stmt 1 view .LVU349
 150:Core/Src/main.c ****   imu.dev_addr = BNO055_I2C_ADDR1;
 1048              		.loc 1 150 18 is_stmt 0 view .LVU350
 1049 0038 8D4B     		ldr	r3, .L76+120
 1050 003a 4361     		str	r3, [r0, #20]
 151:Core/Src/main.c **** #ifdef BNO_CONNECTED
 1051              		.loc 1 151 3 is_stmt 1 view .LVU351
 151:Core/Src/main.c **** #ifdef BNO_CONNECTED
 1052              		.loc 1 151 16 is_stmt 0 view .LVU352
 1053 003c 2823     		movs	r3, #40
 1054 003e 4372     		strb	r3, [r0, #9]
 154:Core/Src/main.c ****   bno055_set_power_mode(BNO055_POWER_MODE_NORMAL);
 1055              		.loc 1 154 3 is_stmt 1 view .LVU353
 1056 0040 FFF7FEFF 		bl	bno055_init
 1057              	.LVL58:
 155:Core/Src/main.c ****   bno055_set_operation_mode(BNO055_OPERATION_MODE_NDOF);
 1058              		.loc 1 155 3 view .LVU354
 1059 0044 0020     		movs	r0, #0
 1060 0046 FFF7FEFF 		bl	bno055_set_power_mode
 1061              	.LVL59:
 156:Core/Src/main.c **** 
 1062              		.loc 1 156 3 view .LVU355
 1063 004a 0C20     		movs	r0, #12
 1064 004c FFF7FEFF 		bl	bno055_set_operation_mode
 1065              	.LVL60:
 158:Core/Src/main.c ****   
 1066              		.loc 1 158 3 view .LVU356
 1067              	.L70:
 160:Core/Src/main.c **** #endif
 1068              		.loc 1 160 3 discriminator 1 view .LVU357
ARM GAS  /tmp/ccsN23rf.s 			page 39


 158:Core/Src/main.c ****   
 1069              		.loc 1 158 65 discriminator 1 view .LVU358
 158:Core/Src/main.c ****   
 1070              		.loc 1 158 10 is_stmt 0 discriminator 1 view .LVU359
 1071 0050 4CA8     		add	r0, sp, #304
 1072 0052 FFF7FEFF 		bl	bno055_convert_double_euler_hpr_deg
 1073              	.LVL61:
 158:Core/Src/main.c ****   
 1074              		.loc 1 158 65 discriminator 1 view .LVU360
 1075 0056 0028     		cmp	r0, #0
 1076 0058 FAD1     		bne	.L70
 160:Core/Src/main.c **** #endif
 1077              		.loc 1 160 4 is_stmt 1 view .LVU361
 164:Core/Src/main.c ****   double Kip = pid_variables[1];
 1078              		.loc 1 164 3 view .LVU362
 1079              	.LVL62:
 165:Core/Src/main.c ****   double Kdp = pid_variables[2];
 1080              		.loc 1 165 3 view .LVU363
 166:Core/Src/main.c **** 
 1081              		.loc 1 166 3 view .LVU364
 168:Core/Src/main.c ****   double Kir = pid_variables[4];
 1082              		.loc 1 168 3 view .LVU365
 169:Core/Src/main.c ****   double Kdr = pid_variables[5];
 1083              		.loc 1 169 3 view .LVU366
 170:Core/Src/main.c **** 
 1084              		.loc 1 170 3 view .LVU367
 172:Core/Src/main.c ****   double Kie = pid_variables[7];
 1085              		.loc 1 172 3 view .LVU368
 173:Core/Src/main.c ****   double Kde = pid_variables[8];
 1086              		.loc 1 173 3 view .LVU369
 174:Core/Src/main.c **** 
 1087              		.loc 1 174 3 view .LVU370
 176:Core/Src/main.c ****   PID_TypeDef xPID;
 1088              		.loc 1 176 3 view .LVU371
 177:Core/Src/main.c ****   PID_TypeDef yPID;
 1089              		.loc 1 177 3 view .LVU372
 178:Core/Src/main.c **** 
 1090              		.loc 1 178 3 view .LVU373
 180:Core/Src/main.c ****   xSetpoint = fabs(orientation_data.p);
 1091              		.loc 1 180 3 view .LVU374
 181:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1092              		.loc 1 181 3 view .LVU375
 181:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1093              		.loc 1 181 36 is_stmt 0 view .LVU376
 1094 005a DDE95023 		ldrd	r2, [sp, #320]
 181:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1095              		.loc 1 181 15 view .LVU377
 1096 005e 1046     		mov	r0, r2
 1097 0060 23F00041 		bic	r1, r3, #-2147483648
 181:Core/Src/main.c ****   ySetpoint = orientation_data.r;
 1098              		.loc 1 181 13 view .LVU378
 1099 0064 CDE91201 		strd	r0, [sp, #72]
 182:Core/Src/main.c **** 
 1100              		.loc 1 182 3 is_stmt 1 view .LVU379
 182:Core/Src/main.c **** 
 1101              		.loc 1 182 31 is_stmt 0 view .LVU380
 1102 0068 DDE94E23 		ldrd	r2, [sp, #312]
ARM GAS  /tmp/ccsN23rf.s 			page 40


 182:Core/Src/main.c **** 
 1103              		.loc 1 182 13 view .LVU381
 1104 006c CDE91023 		strd	r2, [sp, #64]
 184:Core/Src/main.c ****   PID_SetMode(&xPID, _PID_MODE_AUTOMATIC);
 1105              		.loc 1 184 3 is_stmt 1 view .LVU382
 1106 0070 9FED618B 		vldr.64	d8, .L76
 1107 0074 0027     		movs	r7, #0
 1108 0076 0197     		str	r7, [sp, #4]
 1109 0078 0126     		movs	r6, #1
 1110 007a 0096     		str	r6, [sp]
 1111 007c 9FED602B 		vldr.64	d2, .L76+8
 1112 0080 B0EE481A 		vmov.f32	s2, s16
 1113 0084 F0EE681A 		vmov.f32	s3, s17
 1114 0088 9FED5F0B 		vldr.64	d0, .L76+16
 1115 008c 12AB     		add	r3, sp, #72
 1116 008e 794A     		ldr	r2, .L76+124
 1117 0090 50A9     		add	r1, sp, #320
 1118 0092 30A8     		add	r0, sp, #192
 1119 0094 FFF7FEFF 		bl	PID
 1120              	.LVL63:
 185:Core/Src/main.c ****   PID_SetSampleTime(&xPID, 10);
 1121              		.loc 1 185 3 view .LVU383
 1122 0098 3146     		mov	r1, r6
 1123 009a 30A8     		add	r0, sp, #192
 1124 009c FFF7FEFF 		bl	PID_SetMode
 1125              	.LVL64:
 186:Core/Src/main.c ****   PID_SetOutputLimits(&xPID, -10922.5, 10992.5);
 1126              		.loc 1 186 3 view .LVU384
 1127 00a0 0A21     		movs	r1, #10
 1128 00a2 30A8     		add	r0, sp, #192
 1129 00a4 FFF7FEFF 		bl	PID_SetSampleTime
 1130              	.LVL65:
 187:Core/Src/main.c **** 
 1131              		.loc 1 187 3 view .LVU385
 1132 00a8 9FED599B 		vldr.64	d9, .L76+24
 1133 00ac 9FED5A1B 		vldr.64	d1, .L76+32
 1134 00b0 B0EE490A 		vmov.f32	s0, s18
 1135 00b4 F0EE690A 		vmov.f32	s1, s19
 1136 00b8 30A8     		add	r0, sp, #192
 1137 00ba FFF7FEFF 		bl	PID_SetOutputLimits
 1138              	.LVL66:
 189:Core/Src/main.c ****   PID_SetMode(&yPID, _PID_MODE_AUTOMATIC);
 1139              		.loc 1 189 3 view .LVU386
 1140 00be 0197     		str	r7, [sp, #4]
 1141 00c0 0096     		str	r6, [sp]
 1142 00c2 9FED572B 		vldr.64	d2, .L76+40
 1143 00c6 B0EE481A 		vmov.f32	s2, s16
 1144 00ca F0EE681A 		vmov.f32	s3, s17
 1145 00ce 9FED560B 		vldr.64	d0, .L76+48
 1146 00d2 10AB     		add	r3, sp, #64
 1147 00d4 684A     		ldr	r2, .L76+128
 1148 00d6 4EA9     		add	r1, sp, #312
 1149 00d8 14A8     		add	r0, sp, #80
 1150 00da FFF7FEFF 		bl	PID
 1151              	.LVL67:
 190:Core/Src/main.c ****   PID_SetSampleTime(&yPID, 10);
 1152              		.loc 1 190 3 view .LVU387
ARM GAS  /tmp/ccsN23rf.s 			page 41


 1153 00de 3146     		mov	r1, r6
 1154 00e0 14A8     		add	r0, sp, #80
 1155 00e2 FFF7FEFF 		bl	PID_SetMode
 1156              	.LVL68:
 191:Core/Src/main.c ****   PID_SetOutputLimits(&yPID, -10922.5, 10922.5);
 1157              		.loc 1 191 3 view .LVU388
 1158 00e6 0A21     		movs	r1, #10
 1159 00e8 14A8     		add	r0, sp, #80
 1160 00ea FFF7FEFF 		bl	PID_SetSampleTime
 1161              	.LVL69:
 192:Core/Src/main.c **** 
 1162              		.loc 1 192 3 view .LVU389
 1163 00ee 9FED501B 		vldr.64	d1, .L76+56
 1164 00f2 B0EE490A 		vmov.f32	s0, s18
 1165 00f6 F0EE690A 		vmov.f32	s1, s19
 1166 00fa 14A8     		add	r0, sp, #80
 1167 00fc FFF7FEFF 		bl	PID_SetOutputLimits
 1168              	.LVL70:
 203:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);
 1169              		.loc 1 203 3 view .LVU390
 1170 0100 5E4E     		ldr	r6, .L76+132
 1171 0102 3046     		mov	r0, r6
 1172 0104 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1173              	.LVL71:
 204:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_2);
 1174              		.loc 1 204 3 view .LVU391
 1175 0108 3946     		mov	r1, r7
 1176 010a 3046     		mov	r0, r6
 1177 010c FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1178              	.LVL72:
 205:Core/Src/main.c ****   HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_3);
 1179              		.loc 1 205 3 view .LVU392
 1180 0110 0421     		movs	r1, #4
 1181 0112 3046     		mov	r0, r6
 1182 0114 FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1183              	.LVL73:
 206:Core/Src/main.c ****   //HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_4);
 1184              		.loc 1 206 3 view .LVU393
 1185 0118 0821     		movs	r1, #8
 1186 011a 3046     		mov	r0, r6
 1187 011c FFF7FEFF 		bl	HAL_TIM_OC_Start_IT
 1188              	.LVL74:
 209:Core/Src/main.c ****   {
 1189              		.loc 1 209 3 view .LVU394
 209:Core/Src/main.c ****   {
 1190              		.loc 1 209 25 is_stmt 0 view .LVU395
 1191 0120 45A3     		adr	r3, .L76+64
 1192 0122 D3E90023 		ldrd	r2, [r3]
 1193 0126 CDE90223 		strd	r2, [sp, #8]
 1194 012a 554B     		ldr	r3, .L76+136
 1195 012c 0493     		str	r3, [sp, #16]
 1196 012e 554B     		ldr	r3, .L76+140
 1197 0130 0593     		str	r3, [sp, #20]
 1198 0132 43A3     		adr	r3, .L76+72
 1199 0134 D3E90023 		ldrd	r2, [r3]
 1200 0138 CDE90623 		strd	r2, [sp, #24]
 1201 013c 8DED088B 		vstr.64	d8, [sp, #32]
ARM GAS  /tmp/ccsN23rf.s 			page 42


 1202 0140 41A3     		adr	r3, .L76+80
 1203 0142 D3E90023 		ldrd	r2, [r3]
 1204 0146 CDE90A23 		strd	r2, [sp, #40]
 1205 014a 41A3     		adr	r3, .L76+88
 1206 014c D3E90023 		ldrd	r2, [r3]
 1207 0150 CDE90C23 		strd	r2, [sp, #48]
 218:Core/Src/main.c ****   };
 1208              		.loc 1 218 18 view .LVU396
 1209 0154 FFF7FEFF 		bl	HAL_GetTick
 1210              	.LVL75:
 209:Core/Src/main.c ****   {
 1211              		.loc 1 209 25 view .LVU397
 1212 0158 0E90     		str	r0, [sp, #56]
 221:Core/Src/main.c **** 
 1213              		.loc 1 221 3 is_stmt 1 view .LVU398
 221:Core/Src/main.c **** 
 1214              		.loc 1 221 13 is_stmt 0 view .LVU399
 1215 015a 4B4B     		ldr	r3, .L76+144
 1216 015c 0020     		movs	r0, #0
 1217 015e 4B49     		ldr	r1, .L76+148
 1218 0160 C3E90001 		strd	r0, [r3]
 223:Core/Src/main.c ****   TIM1->CCR3 = 0x5555;
 1219              		.loc 1 223 3 is_stmt 1 view .LVU400
 223:Core/Src/main.c ****   TIM1->CCR3 = 0x5555;
 1220              		.loc 1 223 7 is_stmt 0 view .LVU401
 1221 0164 FFF7FEFF 		bl	HAL_GetTick
 1222              	.LVL76:
 1223 0168 0646     		mov	r6, r0
 1224              	.LVL77:
 224:Core/Src/main.c ****   while (HAL_GetTick() - t < 3000) {
 1225              		.loc 1 224 3 is_stmt 1 view .LVU402
 224:Core/Src/main.c ****   while (HAL_GetTick() - t < 3000) {
 1226              		.loc 1 224 14 is_stmt 0 view .LVU403
 1227 016a 494B     		ldr	r3, .L76+152
 1228 016c 45F25552 		movw	r2, #21845
 1229 0170 DA63     		str	r2, [r3, #60]
 225:Core/Src/main.c **** 
 1230              		.loc 1 225 3 is_stmt 1 view .LVU404
 1231              	.LVL78:
 1232              	.L71:
 227:Core/Src/main.c ****   cur_measurement = 0;
 1233              		.loc 1 227 3 discriminator 1 view .LVU405
 225:Core/Src/main.c **** 
 1234              		.loc 1 225 28 discriminator 1 view .LVU406
 225:Core/Src/main.c **** 
 1235              		.loc 1 225 10 is_stmt 0 discriminator 1 view .LVU407
 1236 0172 FFF7FEFF 		bl	HAL_GetTick
 1237              	.LVL79:
 225:Core/Src/main.c **** 
 1238              		.loc 1 225 24 discriminator 1 view .LVU408
 1239 0176 801B     		subs	r0, r0, r6
 225:Core/Src/main.c **** 
 1240              		.loc 1 225 28 discriminator 1 view .LVU409
 1241 0178 40F6B733 		movw	r3, #2999
 1242 017c 9842     		cmp	r0, r3
 1243 017e F8D9     		bls	.L71
 228:Core/Src/main.c ****   TIM1->CCR3 = 0x5555 + esc_speed * 0x5555;
ARM GAS  /tmp/ccsN23rf.s 			page 43


 1244              		.loc 1 228 3 is_stmt 1 view .LVU410
 228:Core/Src/main.c ****   TIM1->CCR3 = 0x5555 + esc_speed * 0x5555;
 1245              		.loc 1 228 19 is_stmt 0 view .LVU411
 1246 0180 444B     		ldr	r3, .L76+156
 1247 0182 0022     		movs	r2, #0
 1248 0184 1A70     		strb	r2, [r3]
 229:Core/Src/main.c ****   t = HAL_GetTick();
 1249              		.loc 1 229 3 is_stmt 1 view .LVU412
 229:Core/Src/main.c ****   t = HAL_GetTick();
 1250              		.loc 1 229 35 is_stmt 0 view .LVU413
 1251 0186 34A3     		adr	r3, .L76+96
 1252 0188 D3E90023 		ldrd	r2, [r3]
 1253 018c 3E49     		ldr	r1, .L76+144
 1254 018e D1E90001 		ldrd	r0, [r1]
 1255 0192 FFF7FEFF 		bl	__aeabi_dmul
 1256              	.LVL80:
 229:Core/Src/main.c ****   t = HAL_GetTick();
 1257              		.loc 1 229 23 view .LVU414
 1258 0196 30A3     		adr	r3, .L76+96
 1259 0198 D3E90023 		ldrd	r2, [r3]
 1260 019c FFF7FEFF 		bl	__aeabi_dadd
 1261              	.LVL81:
 229:Core/Src/main.c ****   t = HAL_GetTick();
 1262              		.loc 1 229 14 view .LVU415
 1263 01a0 FFF7FEFF 		bl	__aeabi_d2uiz
 1264              	.LVL82:
 1265 01a4 3A4B     		ldr	r3, .L76+152
 1266 01a6 D863     		str	r0, [r3, #60]
 230:Core/Src/main.c ****   while (HAL_GetTick() - t < 500) {
 1267              		.loc 1 230 3 is_stmt 1 view .LVU416
 230:Core/Src/main.c ****   while (HAL_GetTick() - t < 500) {
 1268              		.loc 1 230 7 is_stmt 0 view .LVU417
 1269 01a8 FFF7FEFF 		bl	HAL_GetTick
 1270              	.LVL83:
 1271 01ac 0646     		mov	r6, r0
 1272              	.LVL84:
 231:Core/Src/main.c **** 
 1273              		.loc 1 231 3 is_stmt 1 view .LVU418
 1274              	.L72:
 233:Core/Src/main.c ****   HAL_NVIC_DisableIRQ(EXTI0_IRQn);
 1275              		.loc 1 233 3 discriminator 1 view .LVU419
 231:Core/Src/main.c **** 
 1276              		.loc 1 231 28 discriminator 1 view .LVU420
 231:Core/Src/main.c **** 
 1277              		.loc 1 231 10 is_stmt 0 discriminator 1 view .LVU421
 1278 01ae FFF7FEFF 		bl	HAL_GetTick
 1279              	.LVL85:
 231:Core/Src/main.c **** 
 1280              		.loc 1 231 24 discriminator 1 view .LVU422
 1281 01b2 801B     		subs	r0, r0, r6
 231:Core/Src/main.c **** 
 1282              		.loc 1 231 28 discriminator 1 view .LVU423
 1283 01b4 B0F5FA7F 		cmp	r0, #500
 1284 01b8 F9D3     		bcc	.L72
 234:Core/Src/main.c **** 
 1285              		.loc 1 234 3 is_stmt 1 view .LVU424
 1286 01ba 0620     		movs	r0, #6
ARM GAS  /tmp/ccsN23rf.s 			page 44


 1287 01bc FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1288              	.LVL86:
 1289              	.L73:
 245:Core/Src/main.c ****     orientation_data.p = fabs(orientation_data.p);
 1290              		.loc 1 245 4 discriminator 1 view .LVU425
 243:Core/Src/main.c **** 
 1291              		.loc 1 243 66 discriminator 1 view .LVU426
 243:Core/Src/main.c **** 
 1292              		.loc 1 243 11 is_stmt 0 discriminator 1 view .LVU427
 1293 01c0 4CA8     		add	r0, sp, #304
 1294 01c2 FFF7FEFF 		bl	bno055_convert_double_euler_hpr_deg
 1295              	.LVL87:
 243:Core/Src/main.c **** 
 1296              		.loc 1 243 66 discriminator 1 view .LVU428
 1297 01c6 0028     		cmp	r0, #0
 1298 01c8 FAD1     		bne	.L73
 245:Core/Src/main.c ****     orientation_data.p = fabs(orientation_data.p);
 1299              		.loc 1 245 5 is_stmt 1 view .LVU429
 246:Core/Src/main.c ****     #endif
 1300              		.loc 1 246 5 view .LVU430
 246:Core/Src/main.c ****     #endif
 1301              		.loc 1 246 47 is_stmt 0 view .LVU431
 1302 01ca DDE95023 		ldrd	r2, [sp, #320]
 246:Core/Src/main.c ****     #endif
 1303              		.loc 1 246 26 view .LVU432
 1304 01ce 1446     		mov	r4, r2
 1305 01d0 23F00045 		bic	r5, r3, #-2147483648
 246:Core/Src/main.c ****     #endif
 1306              		.loc 1 246 24 view .LVU433
 1307 01d4 CDE95045 		strd	r4, [sp, #320]
 285:Core/Src/main.c **** 	  PID_Compute(&xPID);
 1308              		.loc 1 285 4 is_stmt 1 view .LVU434
 1309 01d8 1920     		movs	r0, #25
 1310 01da FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1311              	.LVL88:
 286:Core/Src/main.c **** 	  PID_Compute(&yPID);
 1312              		.loc 1 286 4 view .LVU435
 1313 01de 30A8     		add	r0, sp, #192
 1314 01e0 FFF7FEFF 		bl	PID_Compute
 1315              	.LVL89:
 287:Core/Src/main.c ****     
 1316              		.loc 1 287 4 view .LVU436
 1317 01e4 14A8     		add	r0, sp, #80
 1318 01e6 FFF7FEFF 		bl	PID_Compute
 1319              	.LVL90:
 292:Core/Src/main.c ****     
 1320              		.loc 1 292 4 view .LVU437
 1321 01ea 1920     		movs	r0, #25
 1322 01ec FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1323              	.LVL91:
 240:Core/Src/main.c ****   {
 1324              		.loc 1 240 9 view .LVU438
 243:Core/Src/main.c **** 
 1325              		.loc 1 243 10 is_stmt 0 view .LVU439
 1326 01f0 E6E7     		b	.L73
 1327              	.L77:
 1328 01f2 00BFAFF3 		.align	3
ARM GAS  /tmp/ccsN23rf.s 			page 45


 1328      0080
 1329              	.L76:
 1330 01f8 00000000 		.word	0
 1331 01fc 00000000 		.word	0
 1332 0200 00000000 		.word	0
 1333 0204 00804B40 		.word	1078689792
 1334 0208 00000000 		.word	0
 1335 020c 00805B40 		.word	1079738368
 1336 0210 00000000 		.word	0
 1337 0214 4055C5C0 		.word	-1060809408
 1338 0218 00000000 		.word	0
 1339 021c 4078C540 		.word	1086683200
 1340 0220 00000000 		.word	0
 1341 0224 00004440 		.word	1078198272
 1342 0228 00000000 		.word	0
 1343 022c 00F07040 		.word	1081143296
 1344 0230 00000000 		.word	0
 1345 0234 4055C540 		.word	1086674240
 1346 0238 000000E0 		.word	-536870912
 1347 023c E2362A3F 		.word	1059731170
 1348 0240 9A999999 		.word	-1717986918
 1349 0244 9999D93F 		.word	1071225241
 1350 0248 33333333 		.word	858993459
 1351 024c 3333D33F 		.word	1070805811
 1352 0250 66666666 		.word	1717986918
 1353 0254 6666E63F 		.word	1072064102
 1354 0258 00000000 		.word	0
 1355 025c 4055D540 		.word	1087722816
 1356 0260 00000000 		.word	htim2
 1357 0264 00000000 		.word	imu
 1358 0268 00000000 		.word	BNO055_I2C_bus_read
 1359 026c 00000000 		.word	BNO055_I2C_bus_write
 1360 0270 00000000 		.word	BNO055_delay_msek
 1361 0274 00000000 		.word	xout
 1362 0278 00000000 		.word	yout
 1363 027c 00000000 		.word	htim1
 1364 0280 00000000 		.word	esc_rpm
 1365 0284 00000000 		.word	esc_output
 1366 0288 00000000 		.word	esc_speed
 1367 028c 0000E03F 		.word	1071644672
 1368 0290 002C0140 		.word	1073818624
 1369 0294 00000000 		.word	cur_measurement
 1370              		.cfi_endproc
 1371              	.LFE123:
 1373              		.global	rpm_length
 1374              		.section	.bss.rpm_length,"aw",%nobits
 1375              		.align	2
 1378              	rpm_length:
 1379 0000 00000000 		.space	4
 1380              		.global	cur_measurement
 1381              		.section	.bss.cur_measurement,"aw",%nobits
 1384              	cur_measurement:
 1385 0000 00       		.space	1
 1386              		.global	esc_measurements
 1387              		.section	.bss.esc_measurements,"aw",%nobits
 1388              		.align	3
 1391              	esc_measurements:
ARM GAS  /tmp/ccsN23rf.s 			page 46


 1392 0000 00000000 		.space	64
 1392      00000000 
 1392      00000000 
 1392      00000000 
 1392      00000000 
 1393              		.global	serial_output
 1394              		.section	.bss.serial_output,"aw",%nobits
 1395              		.align	2
 1398              	serial_output:
 1399 0000 00000000 		.space	60
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1399      00000000 
 1400              		.global	yout
 1401              		.section	.bss.yout,"aw",%nobits
 1402              		.align	3
 1405              	yout:
 1406 0000 00000000 		.space	8
 1406      00000000 
 1407              		.global	xout
 1408              		.section	.bss.xout,"aw",%nobits
 1409              		.align	3
 1412              	xout:
 1413 0000 00000000 		.space	8
 1413      00000000 
 1414              		.global	esc_output
 1415              		.section	.bss.esc_output,"aw",%nobits
 1416              		.align	3
 1419              	esc_output:
 1420 0000 00000000 		.space	8
 1420      00000000 
 1421              		.global	esc_rpm
 1422              		.section	.bss.esc_rpm,"aw",%nobits
 1423              		.align	3
 1426              	esc_rpm:
 1427 0000 00000000 		.space	8
 1427      00000000 
 1428              		.global	esc_speed
 1429              		.section	.data.esc_speed,"aw"
 1430              		.align	3
 1433              	esc_speed:
 1434 0000 33333333 		.word	858993459
 1435 0004 3333D33F 		.word	1070805811
 1436              		.global	adc_value
 1437              		.section	.bss.adc_value,"aw",%nobits
 1438              		.align	2
 1441              	adc_value:
 1442 0000 00000000 		.space	4
 1443              		.global	imu
 1444              		.section	.bss.imu,"aw",%nobits
 1445              		.align	2
 1448              	imu:
 1449 0000 00000000 		.space	24
 1449      00000000 
 1449      00000000 
 1449      00000000 
ARM GAS  /tmp/ccsN23rf.s 			page 47


 1449      00000000 
 1450              		.global	ret
 1451              		.section	.bss.ret,"aw",%nobits
 1454              	ret:
 1455 0000 00       		.space	1
 1456              		.global	huart2
 1457              		.section	.bss.huart2,"aw",%nobits
 1458              		.align	2
 1461              	huart2:
 1462 0000 00000000 		.space	132
 1462      00000000 
 1462      00000000 
 1462      00000000 
 1462      00000000 
 1463              		.global	htim2
 1464              		.section	.bss.htim2,"aw",%nobits
 1465              		.align	2
 1468              	htim2:
 1469 0000 00000000 		.space	76
 1469      00000000 
 1469      00000000 
 1469      00000000 
 1469      00000000 
 1470              		.global	htim1
 1471              		.section	.bss.htim1,"aw",%nobits
 1472              		.align	2
 1475              	htim1:
 1476 0000 00000000 		.space	76
 1476      00000000 
 1476      00000000 
 1476      00000000 
 1476      00000000 
 1477              		.global	hspi1
 1478              		.section	.bss.hspi1,"aw",%nobits
 1479              		.align	2
 1482              	hspi1:
 1483 0000 00000000 		.space	100
 1483      00000000 
 1483      00000000 
 1483      00000000 
 1483      00000000 
 1484              		.global	hi2c1
 1485              		.section	.bss.hi2c1,"aw",%nobits
 1486              		.align	2
 1489              	hi2c1:
 1490 0000 00000000 		.space	76
 1490      00000000 
 1490      00000000 
 1490      00000000 
 1490      00000000 
 1491              		.text
 1492              	.Letext0:
 1493              		.file 3 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1494              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1495              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1496              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1497              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
ARM GAS  /tmp/ccsN23rf.s 			page 48


 1498              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1499              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1500              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1501              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 1502              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1503              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1504              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1505              		.file 15 "Core/Inc/bno055.h"
 1506              		.file 16 "Core/Inc/pid.h"
 1507              		.file 17 "Core/Inc/simple_regulator.h"
 1508              		.file 18 "Core/Inc/main.h"
 1509              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c_ex.h"
 1510              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1511              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1512              		.file 22 "Core/Inc/bno055_support.h"
 1513              		.file 23 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1514              		.file 24 "<built-in>"
ARM GAS  /tmp/ccsN23rf.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccsN23rf.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccsN23rf.s:26     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccsN23rf.s:143    .text.MX_GPIO_Init:0000000000000088 $d
     /tmp/ccsN23rf.s:149    .text.Error_Handler:0000000000000000 $t
     /tmp/ccsN23rf.s:155    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccsN23rf.s:187    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccsN23rf.s:192    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccsN23rf.s:468    .text.MX_TIM1_Init:0000000000000128 $d
     /tmp/ccsN23rf.s:1475   .bss.htim1:0000000000000000 htim1
     /tmp/ccsN23rf.s:474    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccsN23rf.s:479    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccsN23rf.s:560    .text.MX_I2C1_Init:0000000000000048 $d
     /tmp/ccsN23rf.s:1489   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccsN23rf.s:567    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccsN23rf.s:572    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccsN23rf.s:637    .text.MX_USART2_UART_Init:0000000000000038 $d
     /tmp/ccsN23rf.s:1461   .bss.huart2:0000000000000000 huart2
     /tmp/ccsN23rf.s:643    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccsN23rf.s:648    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccsN23rf.s:724    .text.MX_SPI1_Init:0000000000000044 $d
     /tmp/ccsN23rf.s:1482   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccsN23rf.s:730    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccsN23rf.s:735    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccsN23rf.s:835    .text.MX_TIM2_Init:0000000000000064 $d
     /tmp/ccsN23rf.s:1468   .bss.htim2:0000000000000000 htim2
     /tmp/ccsN23rf.s:840    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccsN23rf.s:846    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccsN23rf.s:978    .text.main:0000000000000000 $t
     /tmp/ccsN23rf.s:984    .text.main:0000000000000000 main
     /tmp/ccsN23rf.s:1330   .text.main:00000000000001f8 $d
     /tmp/ccsN23rf.s:1448   .bss.imu:0000000000000000 imu
     /tmp/ccsN23rf.s:1412   .bss.xout:0000000000000000 xout
     /tmp/ccsN23rf.s:1405   .bss.yout:0000000000000000 yout
     /tmp/ccsN23rf.s:1426   .bss.esc_rpm:0000000000000000 esc_rpm
     /tmp/ccsN23rf.s:1419   .bss.esc_output:0000000000000000 esc_output
     /tmp/ccsN23rf.s:1433   .data.esc_speed:0000000000000000 esc_speed
     /tmp/ccsN23rf.s:1384   .bss.cur_measurement:0000000000000000 cur_measurement
     /tmp/ccsN23rf.s:1378   .bss.rpm_length:0000000000000000 rpm_length
     /tmp/ccsN23rf.s:1375   .bss.rpm_length:0000000000000000 $d
     /tmp/ccsN23rf.s:1385   .bss.cur_measurement:0000000000000000 $d
     /tmp/ccsN23rf.s:1391   .bss.esc_measurements:0000000000000000 esc_measurements
     /tmp/ccsN23rf.s:1388   .bss.esc_measurements:0000000000000000 $d
     /tmp/ccsN23rf.s:1398   .bss.serial_output:0000000000000000 serial_output
     /tmp/ccsN23rf.s:1395   .bss.serial_output:0000000000000000 $d
     /tmp/ccsN23rf.s:1402   .bss.yout:0000000000000000 $d
     /tmp/ccsN23rf.s:1409   .bss.xout:0000000000000000 $d
     /tmp/ccsN23rf.s:1416   .bss.esc_output:0000000000000000 $d
     /tmp/ccsN23rf.s:1423   .bss.esc_rpm:0000000000000000 $d
     /tmp/ccsN23rf.s:1430   .data.esc_speed:0000000000000000 $d
     /tmp/ccsN23rf.s:1441   .bss.adc_value:0000000000000000 adc_value
     /tmp/ccsN23rf.s:1438   .bss.adc_value:0000000000000000 $d
     /tmp/ccsN23rf.s:1445   .bss.imu:0000000000000000 $d
     /tmp/ccsN23rf.s:1454   .bss.ret:0000000000000000 ret
     /tmp/ccsN23rf.s:1455   .bss.ret:0000000000000000 $d
     /tmp/ccsN23rf.s:1458   .bss.huart2:0000000000000000 $d
ARM GAS  /tmp/ccsN23rf.s 			page 50


     /tmp/ccsN23rf.s:1465   .bss.htim2:0000000000000000 $d
     /tmp/ccsN23rf.s:1472   .bss.htim1:0000000000000000 $d
     /tmp/ccsN23rf.s:1479   .bss.hspi1:0000000000000000 $d
     /tmp/ccsN23rf.s:1486   .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
HAL_Init
HAL_TIM_Base_Start
bno055_init
bno055_set_power_mode
bno055_set_operation_mode
bno055_convert_double_euler_hpr_deg
PID
PID_SetMode
PID_SetSampleTime
PID_SetOutputLimits
HAL_TIM_Base_Start_IT
HAL_TIM_OC_Start_IT
HAL_GetTick
HAL_NVIC_DisableIRQ
PID_Compute
BNO055_I2C_bus_read
BNO055_I2C_bus_write
BNO055_delay_msek
