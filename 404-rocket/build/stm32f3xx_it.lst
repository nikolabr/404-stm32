ARM GAS  /tmp/cc8Ufari.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f3xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB123:
  28              		.file 1 "Core/Src/stm32f3xx_it.c"
   1:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f3xx_it.c **** /**
   3:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Core/Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f3xx_it.c ****   * @attention
   8:Core/Src/stm32f3xx_it.c ****   *
   9:Core/Src/stm32f3xx_it.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f3xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f3xx_it.c ****   *
  12:Core/Src/stm32f3xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f3xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f3xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f3xx_it.c ****   *
  16:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f3xx_it.c ****   */
  18:Core/Src/stm32f3xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f3xx_it.c **** 
  20:Core/Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f3xx_it.c **** #include "main.h"
  22:Core/Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  23:Core/Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f3xx_it.c **** 
  27:Core/Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f3xx_it.c **** 
  30:Core/Src/stm32f3xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/cc8Ufari.s 			page 2


  31:Core/Src/stm32f3xx_it.c **** 
  32:Core/Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f3xx_it.c **** 
  35:Core/Src/stm32f3xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f3xx_it.c **** 
  37:Core/Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f3xx_it.c **** 
  40:Core/Src/stm32f3xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f3xx_it.c **** 
  42:Core/Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f3xx_it.c **** 
  45:Core/Src/stm32f3xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f3xx_it.c **** 
  47:Core/Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f3xx_it.c **** 
  50:Core/Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f3xx_it.c **** 
  52:Core/Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f3xx_it.c **** 
  55:Core/Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f3xx_it.c **** 
  57:Core/Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  60:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f3xx_it.c **** extern uint32_t adc_value;
  62:Core/Src/stm32f3xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f3xx_it.c **** 
  64:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f3xx_it.c **** /**
  68:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f3xx_it.c ****   */
  70:Core/Src/stm32f3xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f3xx_it.c **** {
  29              		.loc 1 71 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  72:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f3xx_it.c **** 
  74:Core/Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f3xx_it.c ****   while (1)
  36              		.loc 1 76 3 discriminator 1 view .LVU1
  77:Core/Src/stm32f3xx_it.c ****   {
  78:Core/Src/stm32f3xx_it.c ****   }
  37              		.loc 1 78 3 discriminator 1 view .LVU2
ARM GAS  /tmp/cc8Ufari.s 			page 3


  76:Core/Src/stm32f3xx_it.c ****   {
  38              		.loc 1 76 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE123:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB124:
  79:Core/Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f3xx_it.c **** }
  81:Core/Src/stm32f3xx_it.c **** 
  82:Core/Src/stm32f3xx_it.c **** /**
  83:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32f3xx_it.c ****   */
  85:Core/Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32f3xx_it.c **** {
  52              		.loc 1 86 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  87:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32f3xx_it.c **** 
  89:Core/Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32f3xx_it.c ****   while (1)
  59              		.loc 1 90 3 discriminator 1 view .LVU5
  91:Core/Src/stm32f3xx_it.c ****   {
  92:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f3xx_it.c ****   }
  60              		.loc 1 94 3 discriminator 1 view .LVU6
  90:Core/Src/stm32f3xx_it.c ****   {
  61              		.loc 1 90 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE124:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB125:
  95:Core/Src/stm32f3xx_it.c **** }
  96:Core/Src/stm32f3xx_it.c **** 
  97:Core/Src/stm32f3xx_it.c **** /**
  98:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
  99:Core/Src/stm32f3xx_it.c ****   */
 100:Core/Src/stm32f3xx_it.c **** void MemManage_Handler(void)
ARM GAS  /tmp/cc8Ufari.s 			page 4


 101:Core/Src/stm32f3xx_it.c **** {
  75              		.loc 1 101 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 102:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f3xx_it.c **** 
 104:Core/Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f3xx_it.c ****   while (1)
  82              		.loc 1 105 3 discriminator 1 view .LVU9
 106:Core/Src/stm32f3xx_it.c ****   {
 107:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f3xx_it.c ****   }
  83              		.loc 1 109 3 discriminator 1 view .LVU10
 105:Core/Src/stm32f3xx_it.c ****   {
  84              		.loc 1 105 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE125:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB126:
 110:Core/Src/stm32f3xx_it.c **** }
 111:Core/Src/stm32f3xx_it.c **** 
 112:Core/Src/stm32f3xx_it.c **** /**
 113:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 114:Core/Src/stm32f3xx_it.c ****   */
 115:Core/Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 116:Core/Src/stm32f3xx_it.c **** {
  98              		.loc 1 116 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 117:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Core/Src/stm32f3xx_it.c **** 
 119:Core/Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Core/Src/stm32f3xx_it.c ****   while (1)
 105              		.loc 1 120 3 discriminator 1 view .LVU13
 121:Core/Src/stm32f3xx_it.c ****   {
 122:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f3xx_it.c ****   }
 106              		.loc 1 124 3 discriminator 1 view .LVU14
 120:Core/Src/stm32f3xx_it.c ****   {
 107              		.loc 1 120 9 discriminator 1 view .LVU15
ARM GAS  /tmp/cc8Ufari.s 			page 5


 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE126:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB127:
 125:Core/Src/stm32f3xx_it.c **** }
 126:Core/Src/stm32f3xx_it.c **** 
 127:Core/Src/stm32f3xx_it.c **** /**
 128:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Core/Src/stm32f3xx_it.c ****   */
 130:Core/Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 131:Core/Src/stm32f3xx_it.c **** {
 121              		.loc 1 131 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 132:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32f3xx_it.c **** 
 134:Core/Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 135 3 discriminator 1 view .LVU17
 136:Core/Src/stm32f3xx_it.c ****   {
 137:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f3xx_it.c ****   }
 129              		.loc 1 139 3 discriminator 1 view .LVU18
 135:Core/Src/stm32f3xx_it.c ****   {
 130              		.loc 1 135 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE127:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB128:
 140:Core/Src/stm32f3xx_it.c **** }
 141:Core/Src/stm32f3xx_it.c **** 
 142:Core/Src/stm32f3xx_it.c **** /**
 143:Core/Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Core/Src/stm32f3xx_it.c ****   */
 145:Core/Src/stm32f3xx_it.c **** void SVC_Handler(void)
 146:Core/Src/stm32f3xx_it.c **** {
 144              		.loc 1 146 1 view -0
 145              		.cfi_startproc
ARM GAS  /tmp/cc8Ufari.s 			page 6


 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 147:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Core/Src/stm32f3xx_it.c **** 
 149:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Core/Src/stm32f3xx_it.c **** 
 152:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Core/Src/stm32f3xx_it.c **** }
 149              		.loc 1 153 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE128:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB129:
 154:Core/Src/stm32f3xx_it.c **** 
 155:Core/Src/stm32f3xx_it.c **** /**
 156:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 157:Core/Src/stm32f3xx_it.c ****   */
 158:Core/Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 159:Core/Src/stm32f3xx_it.c **** {
 163              		.loc 1 159 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 160:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f3xx_it.c **** 
 162:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f3xx_it.c **** 
 165:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Core/Src/stm32f3xx_it.c **** }
 168              		.loc 1 166 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE129:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB130:
 167:Core/Src/stm32f3xx_it.c **** 
 168:Core/Src/stm32f3xx_it.c **** /**
 169:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Core/Src/stm32f3xx_it.c ****   */
 171:Core/Src/stm32f3xx_it.c **** void PendSV_Handler(void)
ARM GAS  /tmp/cc8Ufari.s 			page 7


 172:Core/Src/stm32f3xx_it.c **** {
 182              		.loc 1 172 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 173:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Core/Src/stm32f3xx_it.c **** 
 175:Core/Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Core/Src/stm32f3xx_it.c **** 
 178:Core/Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Core/Src/stm32f3xx_it.c **** }
 187              		.loc 1 179 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE130:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB131:
 180:Core/Src/stm32f3xx_it.c **** 
 181:Core/Src/stm32f3xx_it.c **** /**
 182:Core/Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 183:Core/Src/stm32f3xx_it.c ****   */
 184:Core/Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 185:Core/Src/stm32f3xx_it.c **** {
 201              		.loc 1 185 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 186:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Core/Src/stm32f3xx_it.c **** 
 188:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Core/Src/stm32f3xx_it.c ****   HAL_IncTick();
 210              		.loc 1 189 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 190:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Core/Src/stm32f3xx_it.c **** 
 192:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Core/Src/stm32f3xx_it.c **** }
 213              		.loc 1 193 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE131:
 218              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 219              		.align	1
ARM GAS  /tmp/cc8Ufari.s 			page 8


 220              		.global	DMA1_Channel1_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	DMA1_Channel1_IRQHandler:
 226              	.LFB132:
 194:Core/Src/stm32f3xx_it.c **** 
 195:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 196:Core/Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 197:Core/Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Core/Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Core/Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 200:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 201:Core/Src/stm32f3xx_it.c **** 
 202:Core/Src/stm32f3xx_it.c **** /**
 203:Core/Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 204:Core/Src/stm32f3xx_it.c ****   */
 205:Core/Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 206:Core/Src/stm32f3xx_it.c **** {
 227              		.loc 1 206 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 207:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 208:Core/Src/stm32f3xx_it.c **** 
 209:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 210:Core/Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 236              		.loc 1 210 3 view .LVU30
 237 0002 0348     		ldr	r0, .L18
 238 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 239              	.LVL1:
 211:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 212:Core/Src/stm32f3xx_it.c **** 
 213:Core/Src/stm32f3xx_it.c ****   HAL_NVIC_DisableIRQ(DMA1_Channel1_IRQn);
 240              		.loc 1 213 3 view .LVU31
 241 0008 0B20     		movs	r0, #11
 242 000a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 243              	.LVL2:
 214:Core/Src/stm32f3xx_it.c **** 
 215:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 216:Core/Src/stm32f3xx_it.c **** }
 244              		.loc 1 216 1 is_stmt 0 view .LVU32
 245 000e 08BD     		pop	{r3, pc}
 246              	.L19:
 247              		.align	2
 248              	.L18:
 249 0010 00000000 		.word	hdma_adc1
 250              		.cfi_endproc
 251              	.LFE132:
 253              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 254              		.align	1
 255              		.global	TIM1_UP_TIM16_IRQHandler
ARM GAS  /tmp/cc8Ufari.s 			page 9


 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	TIM1_UP_TIM16_IRQHandler:
 261              	.LFB133:
 217:Core/Src/stm32f3xx_it.c **** 
 218:Core/Src/stm32f3xx_it.c **** /**
 219:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 220:Core/Src/stm32f3xx_it.c ****   */
 221:Core/Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 222:Core/Src/stm32f3xx_it.c **** {
 262              		.loc 1 222 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI2:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 223:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 224:Core/Src/stm32f3xx_it.c **** 	TIM1->CCR1 = (adc_value * 16 / 3) + 0x5555;
 271              		.loc 1 224 2 view .LVU34
 272              		.loc 1 224 26 is_stmt 0 view .LVU35
 273 0002 0E4B     		ldr	r3, .L22
 274 0004 1B68     		ldr	r3, [r3]
 275 0006 1901     		lsls	r1, r3, #4
 276              		.loc 1 224 31 view .LVU36
 277 0008 0D4C     		ldr	r4, .L22+4
 278 000a A4FB0121 		umull	r2, r1, r4, r1
 279              		.loc 1 224 36 view .LVU37
 280 000e 45F25552 		movw	r2, #21845
 281 0012 02EB5101 		add	r1, r2, r1, lsr #1
 282              		.loc 1 224 13 view .LVU38
 283 0016 0B48     		ldr	r0, .L22+8
 284 0018 4163     		str	r1, [r0, #52]
 225:Core/Src/stm32f3xx_it.c **** 	TIM1->CCR2 = (adc_value * 8 / 3) + 0x5555;
 285              		.loc 1 225 2 is_stmt 1 view .LVU39
 286              		.loc 1 225 26 is_stmt 0 view .LVU40
 287 001a D900     		lsls	r1, r3, #3
 288              		.loc 1 225 30 view .LVU41
 289 001c A4FB01C1 		umull	ip, r1, r4, r1
 290              		.loc 1 225 35 view .LVU42
 291 0020 02EB5101 		add	r1, r2, r1, lsr #1
 292              		.loc 1 225 13 view .LVU43
 293 0024 8163     		str	r1, [r0, #56]
 226:Core/Src/stm32f3xx_it.c **** 	TIM1->CCR3 = (adc_value * 4 / 3) + 0x5555;
 294              		.loc 1 226 2 is_stmt 1 view .LVU44
 295              		.loc 1 226 26 is_stmt 0 view .LVU45
 296 0026 9B00     		lsls	r3, r3, #2
 297              		.loc 1 226 30 view .LVU46
 298 0028 A4FB0313 		umull	r1, r3, r4, r3
 299              		.loc 1 226 35 view .LVU47
 300 002c 02EB5303 		add	r3, r2, r3, lsr #1
 301              		.loc 1 226 13 view .LVU48
 302 0030 C363     		str	r3, [r0, #60]
 227:Core/Src/stm32f3xx_it.c **** 
ARM GAS  /tmp/cc8Ufari.s 			page 10


 228:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 229:Core/Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 303              		.loc 1 229 3 is_stmt 1 view .LVU49
 304 0032 0548     		ldr	r0, .L22+12
 305 0034 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 306              	.LVL3:
 230:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 231:Core/Src/stm32f3xx_it.c **** 
 232:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 233:Core/Src/stm32f3xx_it.c **** }
 307              		.loc 1 233 1 is_stmt 0 view .LVU50
 308 0038 10BD     		pop	{r4, pc}
 309              	.L23:
 310 003a 00BF     		.align	2
 311              	.L22:
 312 003c 00000000 		.word	adc_value
 313 0040 ABAAAAAA 		.word	-1431655765
 314 0044 002C0140 		.word	1073818624
 315 0048 00000000 		.word	htim1
 316              		.cfi_endproc
 317              	.LFE133:
 319              		.text
 320              	.Letext0:
 321              		.file 2 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 322              		.file 3 "/home/dqnk/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 323              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 324              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 325              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 326              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 327              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 328              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/cc8Ufari.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/cc8Ufari.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc8Ufari.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc8Ufari.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc8Ufari.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc8Ufari.s:113    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc8Ufari.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:142    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc8Ufari.s:155    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc8Ufari.s:174    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:180    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc8Ufari.s:193    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc8Ufari.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc8Ufari.s:219    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
     /tmp/cc8Ufari.s:225    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
     /tmp/cc8Ufari.s:249    .text.DMA1_Channel1_IRQHandler:0000000000000010 $d
     /tmp/cc8Ufari.s:254    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
     /tmp/cc8Ufari.s:260    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
     /tmp/cc8Ufari.s:312    .text.TIM1_UP_TIM16_IRQHandler:000000000000003c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
HAL_NVIC_DisableIRQ
hdma_adc1
HAL_TIM_IRQHandler
adc_value
htim1
