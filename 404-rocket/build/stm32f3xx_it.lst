ARM GAS  /tmp/ccJowQbU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f3xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f3xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB123:
   1:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f3xx_it.c **** /**
   3:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Core/Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f3xx_it.c ****   * @attention
   8:Core/Src/stm32f3xx_it.c ****   *
   9:Core/Src/stm32f3xx_it.c ****   * Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f3xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f3xx_it.c ****   *
  12:Core/Src/stm32f3xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f3xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f3xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f3xx_it.c ****   *
  16:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f3xx_it.c ****   */
  18:Core/Src/stm32f3xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f3xx_it.c **** 
  20:Core/Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f3xx_it.c **** #include "main.h"
  22:Core/Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  23:Core/Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f3xx_it.c **** 
  27:Core/Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f3xx_it.c **** 
  30:Core/Src/stm32f3xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccJowQbU.s 			page 2


  31:Core/Src/stm32f3xx_it.c **** 
  32:Core/Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f3xx_it.c **** 
  35:Core/Src/stm32f3xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f3xx_it.c **** 
  37:Core/Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f3xx_it.c **** 
  40:Core/Src/stm32f3xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f3xx_it.c **** 
  42:Core/Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f3xx_it.c **** 
  45:Core/Src/stm32f3xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f3xx_it.c **** 
  47:Core/Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f3xx_it.c **** 
  50:Core/Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f3xx_it.c **** 
  52:Core/Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f3xx_it.c **** 
  55:Core/Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f3xx_it.c **** 
  57:Core/Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  59:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  60:Core/Src/stm32f3xx_it.c **** /* USER CODE END EV */
  61:Core/Src/stm32f3xx_it.c **** 
  62:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  63:Core/Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  64:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f3xx_it.c **** /**
  66:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  67:Core/Src/stm32f3xx_it.c ****   */
  68:Core/Src/stm32f3xx_it.c **** void NMI_Handler(void)
  69:Core/Src/stm32f3xx_it.c **** {
  29              		.loc 1 69 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  70:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  71:Core/Src/stm32f3xx_it.c **** 
  72:Core/Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  74:Core/Src/stm32f3xx_it.c ****   while (1)
  36              		.loc 1 74 3 discriminator 1 view .LVU1
  75:Core/Src/stm32f3xx_it.c ****   {
  76:Core/Src/stm32f3xx_it.c ****   }
  37              		.loc 1 76 3 discriminator 1 view .LVU2
  74:Core/Src/stm32f3xx_it.c ****   {
  38              		.loc 1 74 9 discriminator 1 view .LVU3
ARM GAS  /tmp/ccJowQbU.s 			page 3


  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE123:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB124:
  77:Core/Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  78:Core/Src/stm32f3xx_it.c **** }
  79:Core/Src/stm32f3xx_it.c **** 
  80:Core/Src/stm32f3xx_it.c **** /**
  81:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Core/Src/stm32f3xx_it.c ****   */
  83:Core/Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  84:Core/Src/stm32f3xx_it.c **** {
  52              		.loc 1 84 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  85:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Core/Src/stm32f3xx_it.c **** 
  87:Core/Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Core/Src/stm32f3xx_it.c ****   while (1)
  59              		.loc 1 88 3 discriminator 1 view .LVU5
  89:Core/Src/stm32f3xx_it.c ****   {
  90:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f3xx_it.c ****   }
  60              		.loc 1 92 3 discriminator 1 view .LVU6
  88:Core/Src/stm32f3xx_it.c ****   {
  61              		.loc 1 88 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE124:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB125:
  93:Core/Src/stm32f3xx_it.c **** }
  94:Core/Src/stm32f3xx_it.c **** 
  95:Core/Src/stm32f3xx_it.c **** /**
  96:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
  97:Core/Src/stm32f3xx_it.c ****   */
  98:Core/Src/stm32f3xx_it.c **** void MemManage_Handler(void)
  99:Core/Src/stm32f3xx_it.c **** {
  75              		.loc 1 99 1 view -0
ARM GAS  /tmp/ccJowQbU.s 			page 4


  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 100:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 101:Core/Src/stm32f3xx_it.c **** 
 102:Core/Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f3xx_it.c ****   while (1)
  82              		.loc 1 103 3 discriminator 1 view .LVU9
 104:Core/Src/stm32f3xx_it.c ****   {
 105:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f3xx_it.c ****   }
  83              		.loc 1 107 3 discriminator 1 view .LVU10
 103:Core/Src/stm32f3xx_it.c ****   {
  84              		.loc 1 103 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE125:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB126:
 108:Core/Src/stm32f3xx_it.c **** }
 109:Core/Src/stm32f3xx_it.c **** 
 110:Core/Src/stm32f3xx_it.c **** /**
 111:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 112:Core/Src/stm32f3xx_it.c ****   */
 113:Core/Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 114:Core/Src/stm32f3xx_it.c **** {
  98              		.loc 1 114 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 115:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 116:Core/Src/stm32f3xx_it.c **** 
 117:Core/Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 118:Core/Src/stm32f3xx_it.c ****   while (1)
 105              		.loc 1 118 3 discriminator 1 view .LVU13
 119:Core/Src/stm32f3xx_it.c ****   {
 120:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 121:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f3xx_it.c ****   }
 106              		.loc 1 122 3 discriminator 1 view .LVU14
 118:Core/Src/stm32f3xx_it.c ****   {
 107              		.loc 1 118 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
ARM GAS  /tmp/ccJowQbU.s 			page 5


 110              	.LFE126:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB127:
 123:Core/Src/stm32f3xx_it.c **** }
 124:Core/Src/stm32f3xx_it.c **** 
 125:Core/Src/stm32f3xx_it.c **** /**
 126:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 127:Core/Src/stm32f3xx_it.c ****   */
 128:Core/Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 129:Core/Src/stm32f3xx_it.c **** {
 121              		.loc 1 129 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 130:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 131:Core/Src/stm32f3xx_it.c **** 
 132:Core/Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 133:Core/Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 133 3 discriminator 1 view .LVU17
 134:Core/Src/stm32f3xx_it.c ****   {
 135:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 136:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f3xx_it.c ****   }
 129              		.loc 1 137 3 discriminator 1 view .LVU18
 133:Core/Src/stm32f3xx_it.c ****   {
 130              		.loc 1 133 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE127:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB128:
 138:Core/Src/stm32f3xx_it.c **** }
 139:Core/Src/stm32f3xx_it.c **** 
 140:Core/Src/stm32f3xx_it.c **** /**
 141:Core/Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 142:Core/Src/stm32f3xx_it.c ****   */
 143:Core/Src/stm32f3xx_it.c **** void SVC_Handler(void)
 144:Core/Src/stm32f3xx_it.c **** {
 144              		.loc 1 144 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccJowQbU.s 			page 6


 148              		@ link register save eliminated.
 145:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 146:Core/Src/stm32f3xx_it.c **** 
 147:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 148:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 149:Core/Src/stm32f3xx_it.c **** 
 150:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 151:Core/Src/stm32f3xx_it.c **** }
 149              		.loc 1 151 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE128:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB129:
 152:Core/Src/stm32f3xx_it.c **** 
 153:Core/Src/stm32f3xx_it.c **** /**
 154:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 155:Core/Src/stm32f3xx_it.c ****   */
 156:Core/Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 157:Core/Src/stm32f3xx_it.c **** {
 163              		.loc 1 157 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 158:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f3xx_it.c **** 
 160:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f3xx_it.c **** 
 163:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f3xx_it.c **** }
 168              		.loc 1 164 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE129:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB130:
 165:Core/Src/stm32f3xx_it.c **** 
 166:Core/Src/stm32f3xx_it.c **** /**
 167:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 168:Core/Src/stm32f3xx_it.c ****   */
 169:Core/Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 170:Core/Src/stm32f3xx_it.c **** {
 182              		.loc 1 170 1 view -0
ARM GAS  /tmp/ccJowQbU.s 			page 7


 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 171:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 172:Core/Src/stm32f3xx_it.c **** 
 173:Core/Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 174:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 175:Core/Src/stm32f3xx_it.c **** 
 176:Core/Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 177:Core/Src/stm32f3xx_it.c **** }
 187              		.loc 1 177 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE130:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB131:
 178:Core/Src/stm32f3xx_it.c **** 
 179:Core/Src/stm32f3xx_it.c **** /**
 180:Core/Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 181:Core/Src/stm32f3xx_it.c ****   */
 182:Core/Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 183:Core/Src/stm32f3xx_it.c **** {
 201              		.loc 1 183 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 184:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 185:Core/Src/stm32f3xx_it.c **** 
 186:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 187:Core/Src/stm32f3xx_it.c ****   HAL_IncTick();
 209              		.loc 1 187 3 view .LVU27
 210 0002 FFF7FEFF 		bl	HAL_IncTick
 211              	.LVL0:
 188:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 189:Core/Src/stm32f3xx_it.c **** 
 190:Core/Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 191:Core/Src/stm32f3xx_it.c **** }
 212              		.loc 1 191 1 is_stmt 0 view .LVU28
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE131:
 217              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 218              		.align	1
 219              		.global	EXTI0_IRQHandler
 220              		.syntax unified
 221              		.thumb
ARM GAS  /tmp/ccJowQbU.s 			page 8


 222              		.thumb_func
 224              	EXTI0_IRQHandler:
 225              	.LFB132:
 192:Core/Src/stm32f3xx_it.c **** 
 193:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 194:Core/Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 195:Core/Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 196:Core/Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 197:Core/Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 198:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 199:Core/Src/stm32f3xx_it.c **** 
 200:Core/Src/stm32f3xx_it.c **** /**
 201:Core/Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 0 interrupt.
 202:Core/Src/stm32f3xx_it.c ****   */
 203:Core/Src/stm32f3xx_it.c **** void EXTI0_IRQHandler(void)
 204:Core/Src/stm32f3xx_it.c **** {
 226              		.loc 1 204 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 10B5     		push	{r4, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 4, -8
 233              		.cfi_offset 14, -4
 205:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 206:Core/Src/stm32f3xx_it.c ****   HAL_NVIC_DisableIRQ(EXTI0_IRQn);
 234              		.loc 1 206 3 view .LVU30
 235 0002 0620     		movs	r0, #6
 236 0004 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 237              	.LVL1:
 207:Core/Src/stm32f3xx_it.c ****   rpm_length = TIM2->CNT;
 238              		.loc 1 207 3 view .LVU31
 239              		.loc 1 207 20 is_stmt 0 view .LVU32
 240 0008 4FF08043 		mov	r3, #1073741824
 241 000c 596A     		ldr	r1, [r3, #36]
 242              		.loc 1 207 14 view .LVU33
 243 000e 094A     		ldr	r2, .L20
 244 0010 1160     		str	r1, [r2]
 208:Core/Src/stm32f3xx_it.c ****   TIM2->CNT = 0;
 245              		.loc 1 208 3 is_stmt 1 view .LVU34
 246              		.loc 1 208 13 is_stmt 0 view .LVU35
 247 0012 0024     		movs	r4, #0
 248 0014 5C62     		str	r4, [r3, #36]
 209:Core/Src/stm32f3xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 210:Core/Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 249              		.loc 1 210 3 is_stmt 1 view .LVU36
 250 0016 0120     		movs	r0, #1
 251 0018 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 252              	.LVL2:
 211:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 212:Core/Src/stm32f3xx_it.c ****   for (int i = 0; i < 1024; i++) {
 253              		.loc 1 212 3 view .LVU37
 254              	.LBB2:
 255              		.loc 1 212 8 view .LVU38
 256              		.loc 1 212 12 is_stmt 0 view .LVU39
 257 001c 2346     		mov	r3, r4
 258              		.loc 1 212 3 view .LVU40
ARM GAS  /tmp/ccJowQbU.s 			page 9


 259 001e 01E0     		b	.L17
 260              	.LVL3:
 261              	.L18:
 213:Core/Src/stm32f3xx_it.c ****     asm("nop\r\n");
 262              		.loc 1 213 5 is_stmt 1 discriminator 3 view .LVU41
 263              		.syntax unified
 264              	@ 213 "Core/Src/stm32f3xx_it.c" 1
 265 0020 00BF     		nop
 266              	
 267              	@ 0 "" 2
 212:Core/Src/stm32f3xx_it.c ****     asm("nop\r\n");
 268              		.loc 1 212 30 discriminator 3 view .LVU42
 269              		.thumb
 270              		.syntax unified
 271 0022 0133     		adds	r3, r3, #1
 272              	.LVL4:
 273              	.L17:
 212:Core/Src/stm32f3xx_it.c ****     asm("nop\r\n");
 274              		.loc 1 212 21 discriminator 1 view .LVU43
 275 0024 B3F5806F 		cmp	r3, #1024
 276 0028 FADB     		blt	.L18
 277              	.LBE2:
 214:Core/Src/stm32f3xx_it.c ****   }
 215:Core/Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 278              		.loc 1 215 3 view .LVU44
 279 002a 0620     		movs	r0, #6
 280 002c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 281              	.LVL5:
 216:Core/Src/stm32f3xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 217:Core/Src/stm32f3xx_it.c **** }
 282              		.loc 1 217 1 is_stmt 0 view .LVU45
 283 0030 10BD     		pop	{r4, pc}
 284              	.L21:
 285 0032 00BF     		.align	2
 286              	.L20:
 287 0034 00000000 		.word	rpm_length
 288              		.cfi_endproc
 289              	.LFE132:
 291              		.global	__aeabi_dmul
 292              		.global	__aeabi_dadd
 293              		.global	__aeabi_d2uiz
 294              		.global	__aeabi_dsub
 295              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 296              		.align	1
 297              		.global	TIM1_UP_TIM16_IRQHandler
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	TIM1_UP_TIM16_IRQHandler:
 303              	.LFB133:
 218:Core/Src/stm32f3xx_it.c **** 
 219:Core/Src/stm32f3xx_it.c **** /**
 220:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 221:Core/Src/stm32f3xx_it.c ****   */
 222:Core/Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 223:Core/Src/stm32f3xx_it.c **** {
 304              		.loc 1 223 1 is_stmt 1 view -0
ARM GAS  /tmp/ccJowQbU.s 			page 10


 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 10B5     		push	{r4, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
 224:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 225:Core/Src/stm32f3xx_it.c **** 
 226:Core/Src/stm32f3xx_it.c ****   TIM1->CCR3 = 0x5555 + esc_output * 0x5555;
 312              		.loc 1 226 3 view .LVU47
 313              		.loc 1 226 36 is_stmt 0 view .LVU48
 314 0002 15A3     		adr	r3, .L24
 315 0004 D3E90023 		ldrd	r2, [r3]
 316 0008 1549     		ldr	r1, .L24+8
 317 000a D1E90001 		ldrd	r0, [r1]
 318 000e FFF7FEFF 		bl	__aeabi_dmul
 319              	.LVL6:
 320              		.loc 1 226 23 view .LVU49
 321 0012 11A3     		adr	r3, .L24
 322 0014 D3E90023 		ldrd	r2, [r3]
 323 0018 FFF7FEFF 		bl	__aeabi_dadd
 324              	.LVL7:
 325              		.loc 1 226 14 view .LVU50
 326 001c FFF7FEFF 		bl	__aeabi_d2uiz
 327              	.LVL8:
 328 0020 104C     		ldr	r4, .L24+12
 329 0022 E063     		str	r0, [r4, #60]
 227:Core/Src/stm32f3xx_it.c ****   TIM1->CCR1 = 32768 - xout;
 330              		.loc 1 227 3 is_stmt 1 view .LVU51
 331              		.loc 1 227 22 is_stmt 0 view .LVU52
 332 0024 104B     		ldr	r3, .L24+16
 333 0026 D3E90023 		ldrd	r2, [r3]
 334 002a 0020     		movs	r0, #0
 335 002c 0F49     		ldr	r1, .L24+20
 336 002e FFF7FEFF 		bl	__aeabi_dsub
 337              	.LVL9:
 338              		.loc 1 227 14 view .LVU53
 339 0032 FFF7FEFF 		bl	__aeabi_d2uiz
 340              	.LVL10:
 341 0036 6063     		str	r0, [r4, #52]
 228:Core/Src/stm32f3xx_it.c **** 	TIM1->CCR2 = 32768 + yout;
 342              		.loc 1 228 2 is_stmt 1 view .LVU54
 343              		.loc 1 228 21 is_stmt 0 view .LVU55
 344 0038 0022     		movs	r2, #0
 345 003a 0C4B     		ldr	r3, .L24+20
 346 003c 0C49     		ldr	r1, .L24+24
 347 003e D1E90001 		ldrd	r0, [r1]
 348 0042 FFF7FEFF 		bl	__aeabi_dadd
 349              	.LVL11:
 350              		.loc 1 228 13 view .LVU56
 351 0046 FFF7FEFF 		bl	__aeabi_d2uiz
 352              	.LVL12:
 353 004a A063     		str	r0, [r4, #56]
 229:Core/Src/stm32f3xx_it.c **** 
 230:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 231:Core/Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
ARM GAS  /tmp/ccJowQbU.s 			page 11


 354              		.loc 1 231 3 is_stmt 1 view .LVU57
 355 004c 0948     		ldr	r0, .L24+28
 356 004e FFF7FEFF 		bl	HAL_TIM_IRQHandler
 357              	.LVL13:
 232:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 233:Core/Src/stm32f3xx_it.c **** 
 234:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 235:Core/Src/stm32f3xx_it.c **** }
 358              		.loc 1 235 1 is_stmt 0 view .LVU58
 359 0052 10BD     		pop	{r4, pc}
 360              	.L25:
 361 0054 AFF30080 		.align	3
 362              	.L24:
 363 0058 00000000 		.word	0
 364 005c 4055D540 		.word	1087722816
 365 0060 00000000 		.word	esc_output
 366 0064 002C0140 		.word	1073818624
 367 0068 00000000 		.word	xout
 368 006c 0000E040 		.word	1088421888
 369 0070 00000000 		.word	yout
 370 0074 00000000 		.word	htim1
 371              		.cfi_endproc
 372              	.LFE133:
 374              		.text
 375              	.Letext0:
 376              		.file 2 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 377              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 378              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 379              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 380              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 381              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 382              		.file 8 "Core/Inc/main.h"
 383              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 384              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 385              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccJowQbU.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/ccJowQbU.s:21     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccJowQbU.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:50     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccJowQbU.s:67     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:73     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccJowQbU.s:90     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:96     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccJowQbU.s:113    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:119    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccJowQbU.s:136    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:142    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccJowQbU.s:155    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:161    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccJowQbU.s:174    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:180    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccJowQbU.s:193    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccJowQbU.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccJowQbU.s:218    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccJowQbU.s:224    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccJowQbU.s:287    .text.EXTI0_IRQHandler:0000000000000034 $d
     /tmp/ccJowQbU.s:296    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
     /tmp/ccJowQbU.s:302    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
     /tmp/ccJowQbU.s:363    .text.TIM1_UP_TIM16_IRQHandler:0000000000000058 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_NVIC_DisableIRQ
HAL_GPIO_EXTI_IRQHandler
HAL_NVIC_EnableIRQ
rpm_length
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
__aeabi_dsub
HAL_TIM_IRQHandler
esc_output
xout
yout
htim1
