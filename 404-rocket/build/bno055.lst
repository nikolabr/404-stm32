ARM GAS  /tmp/cc9kYR4Z.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bno055.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.bno055_init,"ax",%progbits
  20              		.align	1
  21              		.global	bno055_init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	bno055_init:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/bno055.c"
   1:Core/Src/bno055.c **** /**
   2:Core/Src/bno055.c **** * Copyright (c) 2020 Bosch Sensortec GmbH. All rights reserved.
   3:Core/Src/bno055.c **** *
   4:Core/Src/bno055.c **** * BSD-3-Clause
   5:Core/Src/bno055.c **** *
   6:Core/Src/bno055.c **** * Redistribution and use in source and binary forms, with or without
   7:Core/Src/bno055.c **** * modification, are permitted provided that the following conditions are met:
   8:Core/Src/bno055.c **** *
   9:Core/Src/bno055.c **** * 1. Redistributions of source code must retain the above copyright
  10:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer.
  11:Core/Src/bno055.c **** *
  12:Core/Src/bno055.c **** * 2. Redistributions in binary form must reproduce the above copyright
  13:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer in the
  14:Core/Src/bno055.c **** *    documentation and/or other materials provided with the distribution.
  15:Core/Src/bno055.c **** *
  16:Core/Src/bno055.c **** * 3. Neither the name of the copyright holder nor the names of its
  17:Core/Src/bno055.c **** *    contributors may be used to endorse or promote products derived from
  18:Core/Src/bno055.c **** *    this software without specific prior written permission.
  19:Core/Src/bno055.c **** *
  20:Core/Src/bno055.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:Core/Src/bno055.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:Core/Src/bno055.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:Core/Src/bno055.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  24:Core/Src/bno055.c **** * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  25:Core/Src/bno055.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:Core/Src/bno055.c **** * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/bno055.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:Core/Src/bno055.c **** * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:Core/Src/bno055.c **** * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
ARM GAS  /tmp/cc9kYR4Z.s 			page 2


  30:Core/Src/bno055.c **** * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Core/Src/bno055.c **** * POSSIBILITY OF SUCH DAMAGE.
  32:Core/Src/bno055.c **** *
  33:Core/Src/bno055.c **** * @file bno055.c
  34:Core/Src/bno055.c **** * @date 10/01/2020
  35:Core/Src/bno055.c **** * @version  2.0.6
  36:Core/Src/bno055.c **** *
  37:Core/Src/bno055.c **** */
  38:Core/Src/bno055.c **** 
  39:Core/Src/bno055.c **** /*********************************************************/
  40:Core/Src/bno055.c **** /*              INCLUDES    */
  41:Core/Src/bno055.c **** /*******************************************************/
  42:Core/Src/bno055.c **** #include "bno055.h"
  43:Core/Src/bno055.c **** 
  44:Core/Src/bno055.c **** #ifdef __KERNEL__
  45:Core/Src/bno055.c **** #include <linux/types.h>
  46:Core/Src/bno055.c **** #include <linux/kernel.h>
  47:Core/Src/bno055.c **** #else
  48:Core/Src/bno055.c **** #include <stdint.h>
  49:Core/Src/bno055.c **** #include <stddef.h>
  50:Core/Src/bno055.c **** #endif
  51:Core/Src/bno055.c **** 
  52:Core/Src/bno055.c **** #ifndef NULL
  53:Core/Src/bno055.c **** #ifdef __cplusplus
  54:Core/Src/bno055.c **** #define NULL 0
  55:Core/Src/bno055.c **** #else
  56:Core/Src/bno055.c **** #define NULL ((void *) 0)
  57:Core/Src/bno055.c **** #endif
  58:Core/Src/bno055.c **** #endif
  59:Core/Src/bno055.c **** 
  60:Core/Src/bno055.c **** /*! file <BNO055 >
  61:Core/Src/bno055.c ****  * brief <Sensor driver for BNO055> */
  62:Core/Src/bno055.c **** 
  63:Core/Src/bno055.c **** /*  STRUCTURE DEFINITIONS   */
  64:Core/Src/bno055.c **** static struct bno055_t *p_bno055;
  65:Core/Src/bno055.c **** 
  66:Core/Src/bno055.c **** /*   LOCAL FUNCTIONS    */
  67:Core/Src/bno055.c **** 
  68:Core/Src/bno055.c **** /*!
  69:Core/Src/bno055.c ****  *  @brief
  70:Core/Src/bno055.c ****  *  This API is used for initialize
  71:Core/Src/bno055.c ****  *  bus read, bus write function pointers,device
  72:Core/Src/bno055.c ****  *  address,accel revision id, gyro revision id
  73:Core/Src/bno055.c ****  *  mag revision id, software revision id, boot loader
  74:Core/Src/bno055.c ****  *  revision id and page id
  75:Core/Src/bno055.c ****  *
  76:Core/Src/bno055.c ****  *  @param  bno055 - structure pointer
  77:Core/Src/bno055.c ****  *
  78:Core/Src/bno055.c ****  *
  79:Core/Src/bno055.c ****  *  @return results of bus communication function
  80:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
  81:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
  82:Core/Src/bno055.c ****  *
  83:Core/Src/bno055.c ****  *  @note While changing the parameter of the bno055_t
  84:Core/Src/bno055.c ****  *  consider the following point:
  85:Core/Src/bno055.c ****  *  Changing the reference value of the parameter
  86:Core/Src/bno055.c ****  *  will changes the local copy or local reference
ARM GAS  /tmp/cc9kYR4Z.s 			page 3


  87:Core/Src/bno055.c ****  *  make sure your changes will not
  88:Core/Src/bno055.c ****  *  affect the reference value of the parameter
  89:Core/Src/bno055.c ****  *  (Better case don't change the reference value of the parameter)
  90:Core/Src/bno055.c ****  */
  91:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_init(struct bno055_t *bno055)
  92:Core/Src/bno055.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 92 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 32
  93:Core/Src/bno055.c ****     /* Variable used to return value of
  94:Core/Src/bno055.c ****      * communication routine*/
  95:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
  46              		.loc 1 95 5 is_stmt 1 view .LVU2
  47              	.LVL1:
  96:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
  48              		.loc 1 96 5 view .LVU3
  49              		.loc 1 96 8 is_stmt 0 view .LVU4
  50 0004 0025     		movs	r5, #0
  51 0006 8DF80750 		strb	r5, [sp, #7]
  97:Core/Src/bno055.c ****     u8 bno055_page_zero_u8 = BNO055_PAGE_ZERO;
  52              		.loc 1 97 5 is_stmt 1 view .LVU5
  53              		.loc 1 97 8 is_stmt 0 view .LVU6
  54 000a 8DF80650 		strb	r5, [sp, #6]
  98:Core/Src/bno055.c **** 
  99:Core/Src/bno055.c ****     /* Array holding the Software revision id
 100:Core/Src/bno055.c ****      */
 101:Core/Src/bno055.c ****     u8 a_SW_ID_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
  55              		.loc 1 101 5 is_stmt 1 view .LVU7
  56              		.loc 1 101 8 is_stmt 0 view .LVU8
  57 000e ADF80450 		strh	r5, [sp, #4]	@ movhi
 102:Core/Src/bno055.c **** 
 103:Core/Src/bno055.c ****     /* stuct parameters are assign to bno055*/
 104:Core/Src/bno055.c ****     p_bno055 = bno055;
  58              		.loc 1 104 5 is_stmt 1 view .LVU9
  59              		.loc 1 104 14 is_stmt 0 view .LVU10
  60 0012 394C     		ldr	r4, .L3
  61 0014 2060     		str	r0, [r4]
 105:Core/Src/bno055.c **** 
 106:Core/Src/bno055.c ****     /* Write the default page as zero*/
 107:Core/Src/bno055.c ****     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
  62              		.loc 1 107 5 is_stmt 1 view .LVU11
  63              		.loc 1 107 24 is_stmt 0 view .LVU12
  64 0016 C668     		ldr	r6, [r0, #12]
  65              		.loc 1 107 16 view .LVU13
ARM GAS  /tmp/cc9kYR4Z.s 			page 4


  66 0018 0123     		movs	r3, #1
  67 001a 0DF10602 		add	r2, sp, #6
  68 001e 0721     		movs	r1, #7
  69 0020 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  70              	.LVL2:
  71              		.loc 1 107 16 view .LVU14
  72 0022 B047     		blx	r6
  73              	.LVL3:
  74              		.loc 1 107 16 view .LVU15
  75 0024 0646     		mov	r6, r0
  76              	.LVL4:
 108:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 109:Core/Src/bno055.c ****                                                &bno055_page_zero_u8,
 110:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 111:Core/Src/bno055.c **** 
 112:Core/Src/bno055.c ****     /* Read the chip id of the sensor from page
 113:Core/Src/bno055.c ****      * zero 0x00 register*/
 114:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
  77              		.loc 1 114 5 is_stmt 1 view .LVU16
  78              		.loc 1 114 25 is_stmt 0 view .LVU17
  79 0026 2068     		ldr	r0, [r4]
  80 0028 0769     		ldr	r7, [r0, #16]
  81              		.loc 1 114 17 view .LVU18
  82 002a 0123     		movs	r3, #1
  83 002c 0DF10702 		add	r2, sp, #7
  84 0030 2946     		mov	r1, r5
  85 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  86 0034 B847     		blx	r7
  87              	.LVL5:
  88              		.loc 1 114 14 view .LVU19
  89 0036 56FA80F0 		uxtab	r0, r6, r0
  90 003a C5B2     		uxtb	r5, r0
  91              	.LVL6:
 115:Core/Src/bno055.c ****                                                BNO055_CHIP_ID_REG,
 116:Core/Src/bno055.c ****                                                &data_u8,
 117:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 118:Core/Src/bno055.c ****     p_bno055->chip_id = data_u8;
  92              		.loc 1 118 5 is_stmt 1 view .LVU20
  93              		.loc 1 118 13 is_stmt 0 view .LVU21
  94 003c 2068     		ldr	r0, [r4]
  95              		.loc 1 118 23 view .LVU22
  96 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  97 0042 0370     		strb	r3, [r0]
 119:Core/Src/bno055.c **** 
 120:Core/Src/bno055.c ****     /* Read the accel revision id from page
 121:Core/Src/bno055.c ****      * zero 0x01 register*/
 122:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
  98              		.loc 1 122 5 is_stmt 1 view .LVU23
  99              		.loc 1 122 25 is_stmt 0 view .LVU24
 100 0044 0669     		ldr	r6, [r0, #16]
 101              		.loc 1 122 17 view .LVU25
 102 0046 0123     		movs	r3, #1
 103 0048 0DF10702 		add	r2, sp, #7
 104 004c 1946     		mov	r1, r3
 105 004e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 106 0050 B047     		blx	r6
 107              	.LVL7:
ARM GAS  /tmp/cc9kYR4Z.s 			page 5


 108              		.loc 1 122 14 view .LVU26
 109 0052 55FA80F5 		uxtab	r5, r5, r0
 110              	.LVL8:
 111              		.loc 1 122 14 view .LVU27
 112 0056 EDB2     		uxtb	r5, r5
 113              	.LVL9:
 123:Core/Src/bno055.c ****                                                BNO055_ACCEL_REV_ID_REG,
 124:Core/Src/bno055.c ****                                                &data_u8,
 125:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 126:Core/Src/bno055.c ****     p_bno055->accel_rev_id = data_u8;
 114              		.loc 1 126 5 is_stmt 1 view .LVU28
 115              		.loc 1 126 13 is_stmt 0 view .LVU29
 116 0058 2068     		ldr	r0, [r4]
 117              		.loc 1 126 28 view .LVU30
 118 005a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 119 005e 4371     		strb	r3, [r0, #5]
 127:Core/Src/bno055.c **** 
 128:Core/Src/bno055.c ****     /* Read the mag revision id from page
 129:Core/Src/bno055.c ****      * zero 0x02 register*/
 130:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 120              		.loc 1 130 5 is_stmt 1 view .LVU31
 121              		.loc 1 130 25 is_stmt 0 view .LVU32
 122 0060 0669     		ldr	r6, [r0, #16]
 123              		.loc 1 130 17 view .LVU33
 124 0062 0123     		movs	r3, #1
 125 0064 0DF10702 		add	r2, sp, #7
 126 0068 0221     		movs	r1, #2
 127 006a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 128 006c B047     		blx	r6
 129              	.LVL10:
 130              		.loc 1 130 14 view .LVU34
 131 006e 55FA80F5 		uxtab	r5, r5, r0
 132              	.LVL11:
 133              		.loc 1 130 14 view .LVU35
 134 0072 EDB2     		uxtb	r5, r5
 135              	.LVL12:
 131:Core/Src/bno055.c ****                                                BNO055_MAG_REV_ID_REG,
 132:Core/Src/bno055.c ****                                                &data_u8,
 133:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 134:Core/Src/bno055.c ****     p_bno055->mag_rev_id = data_u8;
 136              		.loc 1 134 5 is_stmt 1 view .LVU36
 137              		.loc 1 134 13 is_stmt 0 view .LVU37
 138 0074 2068     		ldr	r0, [r4]
 139              		.loc 1 134 26 view .LVU38
 140 0076 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 141 007a 8371     		strb	r3, [r0, #6]
 135:Core/Src/bno055.c **** 
 136:Core/Src/bno055.c ****     /* Read the gyro revision id from page
 137:Core/Src/bno055.c ****      * zero 0x02 register*/
 138:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 142              		.loc 1 138 5 is_stmt 1 view .LVU39
 143              		.loc 1 138 25 is_stmt 0 view .LVU40
 144 007c 0669     		ldr	r6, [r0, #16]
 145              		.loc 1 138 17 view .LVU41
 146 007e 0123     		movs	r3, #1
 147 0080 0DF10702 		add	r2, sp, #7
 148 0084 0321     		movs	r1, #3
ARM GAS  /tmp/cc9kYR4Z.s 			page 6


 149 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 150 0088 B047     		blx	r6
 151              	.LVL13:
 152              		.loc 1 138 14 view .LVU42
 153 008a 55FA80F5 		uxtab	r5, r5, r0
 154              	.LVL14:
 155              		.loc 1 138 14 view .LVU43
 156 008e EDB2     		uxtb	r5, r5
 157              	.LVL15:
 139:Core/Src/bno055.c ****                                                BNO055_GYRO_REV_ID_REG,
 140:Core/Src/bno055.c ****                                                &data_u8,
 141:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 142:Core/Src/bno055.c ****     p_bno055->gyro_rev_id = data_u8;
 158              		.loc 1 142 5 is_stmt 1 view .LVU44
 159              		.loc 1 142 13 is_stmt 0 view .LVU45
 160 0090 2068     		ldr	r0, [r4]
 161              		.loc 1 142 27 view .LVU46
 162 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 163 0096 C371     		strb	r3, [r0, #7]
 143:Core/Src/bno055.c **** 
 144:Core/Src/bno055.c ****     /* Read the boot loader revision from page
 145:Core/Src/bno055.c ****      * zero 0x06 register*/
 146:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 164              		.loc 1 146 5 is_stmt 1 view .LVU47
 165              		.loc 1 146 25 is_stmt 0 view .LVU48
 166 0098 0669     		ldr	r6, [r0, #16]
 167              		.loc 1 146 17 view .LVU49
 168 009a 0123     		movs	r3, #1
 169 009c 0DF10702 		add	r2, sp, #7
 170 00a0 0621     		movs	r1, #6
 171 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 172 00a4 B047     		blx	r6
 173              	.LVL16:
 174              		.loc 1 146 14 view .LVU50
 175 00a6 55FA80F5 		uxtab	r5, r5, r0
 176              	.LVL17:
 177              		.loc 1 146 14 view .LVU51
 178 00aa EDB2     		uxtb	r5, r5
 179              	.LVL18:
 147:Core/Src/bno055.c ****                                                BNO055_BL_REV_ID_REG,
 148:Core/Src/bno055.c ****                                                &data_u8,
 149:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 150:Core/Src/bno055.c ****     p_bno055->bl_rev_id = data_u8;
 180              		.loc 1 150 5 is_stmt 1 view .LVU52
 181              		.loc 1 150 13 is_stmt 0 view .LVU53
 182 00ac 2068     		ldr	r0, [r4]
 183              		.loc 1 150 25 view .LVU54
 184 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 185 00b2 0372     		strb	r3, [r0, #8]
 151:Core/Src/bno055.c **** 
 152:Core/Src/bno055.c ****     /* Read the software revision id from page
 153:Core/Src/bno055.c ****      * zero 0x04 and 0x05 register( 2 bytes of data)*/
 154:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 186              		.loc 1 154 5 is_stmt 1 view .LVU55
 187              		.loc 1 154 25 is_stmt 0 view .LVU56
 188 00b4 0669     		ldr	r6, [r0, #16]
 189              		.loc 1 154 17 view .LVU57
ARM GAS  /tmp/cc9kYR4Z.s 			page 7


 190 00b6 0223     		movs	r3, #2
 191 00b8 01AA     		add	r2, sp, #4
 192 00ba 0421     		movs	r1, #4
 193 00bc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 194 00be B047     		blx	r6
 195              	.LVL19:
 196              		.loc 1 154 14 view .LVU58
 197 00c0 55FA80F5 		uxtab	r5, r5, r0
 198              	.LVL20:
 199              		.loc 1 154 14 view .LVU59
 200 00c4 EDB2     		uxtb	r5, r5
 201              	.LVL21:
 155:Core/Src/bno055.c ****                                                BNO055_SW_REV_ID_LSB_REG,
 156:Core/Src/bno055.c ****                                                a_SW_ID_u8,
 157:Core/Src/bno055.c ****                                                BNO055_LSB_MSB_READ_LENGTH);
 158:Core/Src/bno055.c ****     a_SW_ID_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(a_SW_ID_u8[BNO055_SW_ID_LSB], BNO055_SW_REV_
 202              		.loc 1 158 5 is_stmt 1 view .LVU60
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 203              		.loc 1 159 5 view .LVU61
 160:Core/Src/bno055.c ****         (u16)((((u32)((u8)a_SW_ID_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) | (a_SW_ID_u8[
 204              		.loc 1 160 37 is_stmt 0 view .LVU62
 205 00c6 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 206              		.loc 1 160 99 view .LVU63
 207 00ca 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 208              		.loc 1 159 13 view .LVU64
 209 00ce 2068     		ldr	r0, [r4]
 210              		.loc 1 160 9 view .LVU65
 211 00d0 43EA0223 		orr	r3, r3, r2, lsl #8
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 212              		.loc 1 159 25 view .LVU66
 213 00d4 4380     		strh	r3, [r0, #2]	@ movhi
 161:Core/Src/bno055.c **** 
 162:Core/Src/bno055.c ****     /* Read the page id from the register 0x07*/
 163:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 214              		.loc 1 163 5 is_stmt 1 view .LVU67
 215              		.loc 1 163 25 is_stmt 0 view .LVU68
 216 00d6 0669     		ldr	r6, [r0, #16]
 217              		.loc 1 163 17 view .LVU69
 218 00d8 0123     		movs	r3, #1
 219 00da 0DF10702 		add	r2, sp, #7
 220 00de 0721     		movs	r1, #7
 221 00e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 222 00e2 B047     		blx	r6
 223              	.LVL22:
 224              		.loc 1 163 14 view .LVU70
 225 00e4 55FA80F0 		uxtab	r0, r5, r0
 226              	.LVL23:
 164:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 165:Core/Src/bno055.c ****                                                &data_u8,
 166:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 167:Core/Src/bno055.c ****     p_bno055->page_id = data_u8;
 227              		.loc 1 167 5 is_stmt 1 view .LVU71
 228              		.loc 1 167 13 is_stmt 0 view .LVU72
 229 00e8 2368     		ldr	r3, [r4]
 230              		.loc 1 167 23 view .LVU73
 231 00ea 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 8


 232 00ee 1A71     		strb	r2, [r3, #4]
 168:Core/Src/bno055.c **** 
 169:Core/Src/bno055.c ****     return com_rslt;
 233              		.loc 1 169 5 is_stmt 1 view .LVU74
 170:Core/Src/bno055.c **** }
 234              		.loc 1 170 1 is_stmt 0 view .LVU75
 235 00f0 40B2     		sxtb	r0, r0
 236              		.loc 1 170 1 view .LVU76
 237 00f2 03B0     		add	sp, sp, #12
 238              	.LCFI2:
 239              		.cfi_def_cfa_offset 20
 240              		@ sp needed
 241 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 242              	.L4:
 243 00f6 00BF     		.align	2
 244              	.L3:
 245 00f8 00000000 		.word	.LANCHOR0
 246              		.cfi_endproc
 247              	.LFE0:
 249              		.section	.text.bno055_write_register,"ax",%progbits
 250              		.align	1
 251              		.global	bno055_write_register
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	bno055_write_register:
 257              	.LVL24:
 258              	.LFB1:
 171:Core/Src/bno055.c **** 
 172:Core/Src/bno055.c **** /*!
 173:Core/Src/bno055.c ****  *  @brief
 174:Core/Src/bno055.c ****  *  This API gives data to the given register and
 175:Core/Src/bno055.c ****  *  the data is written in the corresponding register address
 176:Core/Src/bno055.c ****  *
 177:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 178:Core/Src/bno055.c ****  *  @param data_u8 : Data to be written to the register
 179:Core/Src/bno055.c ****  *  @param len_u8  : Length of the Data
 180:Core/Src/bno055.c ****  *
 181:Core/Src/bno055.c ****  *  @return results of bus communication function
 182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 184:Core/Src/bno055.c ****  *
 185:Core/Src/bno055.c ****  *
 186:Core/Src/bno055.c ****  */
 187:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 188:Core/Src/bno055.c **** {
 259              		.loc 1 188 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		.loc 1 188 1 is_stmt 0 view .LVU78
 264 0000 38B5     		push	{r3, r4, r5, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 16
 267              		.cfi_offset 3, -16
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 9


 270              		.cfi_offset 14, -4
 271 0002 1346     		mov	r3, r2
 189:Core/Src/bno055.c ****     /* Variable used to return value of
 190:Core/Src/bno055.c ****      * communication routine*/
 191:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 272              		.loc 1 191 5 is_stmt 1 view .LVU79
 273              	.LVL25:
 192:Core/Src/bno055.c **** 
 193:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 194:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 274              		.loc 1 194 5 view .LVU80
 275              		.loc 1 194 18 is_stmt 0 view .LVU81
 276 0004 054A     		ldr	r2, .L9
 277              	.LVL26:
 278              		.loc 1 194 18 view .LVU82
 279 0006 1468     		ldr	r4, [r2]
 280              		.loc 1 194 8 view .LVU83
 281 0008 2CB1     		cbz	r4, .L7
 195:Core/Src/bno055.c ****     {
 196:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 197:Core/Src/bno055.c ****     }
 198:Core/Src/bno055.c ****     else
 199:Core/Src/bno055.c ****     {
 200:Core/Src/bno055.c ****         /* Write the values of respective given register */
 201:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 282              		.loc 1 201 9 is_stmt 1 view .LVU84
 283              		.loc 1 201 28 is_stmt 0 view .LVU85
 284 000a E568     		ldr	r5, [r4, #12]
 285              		.loc 1 201 20 view .LVU86
 286 000c 0A46     		mov	r2, r1
 287 000e 0146     		mov	r1, r0
 288              	.LVL27:
 289              		.loc 1 201 20 view .LVU87
 290 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 291              	.LVL28:
 292              		.loc 1 201 20 view .LVU88
 293 0012 A847     		blx	r5
 294              	.LVL29:
 202:Core/Src/bno055.c ****     }
 203:Core/Src/bno055.c **** 
 204:Core/Src/bno055.c ****     return com_rslt;
 295              		.loc 1 204 5 is_stmt 1 view .LVU89
 296              	.L6:
 205:Core/Src/bno055.c **** }
 297              		.loc 1 205 1 is_stmt 0 view .LVU90
 298 0014 38BD     		pop	{r3, r4, r5, pc}
 299              	.LVL30:
 300              	.L7:
 196:Core/Src/bno055.c ****     }
 301              		.loc 1 196 16 view .LVU91
 302 0016 6FF07E00 		mvn	r0, #126
 303              	.LVL31:
 196:Core/Src/bno055.c ****     }
 304              		.loc 1 196 16 view .LVU92
 305 001a FBE7     		b	.L6
 306              	.L10:
 307              		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 10


 308              	.L9:
 309 001c 00000000 		.word	.LANCHOR0
 310              		.cfi_endproc
 311              	.LFE1:
 313              		.section	.text.bno055_read_register,"ax",%progbits
 314              		.align	1
 315              		.global	bno055_read_register
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	bno055_read_register:
 321              	.LVL32:
 322              	.LFB2:
 206:Core/Src/bno055.c **** 
 207:Core/Src/bno055.c **** /*!
 208:Core/Src/bno055.c ****  *  @brief This API reads the data from
 209:Core/Src/bno055.c ****  *  the given register address
 210:Core/Src/bno055.c ****  *
 211:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 212:Core/Src/bno055.c ****  *  @param data_u8 : address of the variable,
 213:Core/Src/bno055.c ****  *  read value will be kept
 214:Core/Src/bno055.c ****  *  @param len_u8  : Length of the data
 215:Core/Src/bno055.c ****  *
 216:Core/Src/bno055.c ****  *
 217:Core/Src/bno055.c ****  *  @return results of bus communication function
 218:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 219:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 220:Core/Src/bno055.c ****  *
 221:Core/Src/bno055.c ****  */
 222:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 223:Core/Src/bno055.c **** {
 323              		.loc 1 223 1 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		.loc 1 223 1 is_stmt 0 view .LVU94
 328 0000 38B5     		push	{r3, r4, r5, lr}
 329              	.LCFI4:
 330              		.cfi_def_cfa_offset 16
 331              		.cfi_offset 3, -16
 332              		.cfi_offset 4, -12
 333              		.cfi_offset 5, -8
 334              		.cfi_offset 14, -4
 335 0002 1346     		mov	r3, r2
 224:Core/Src/bno055.c ****     /* Variable used to return value of
 225:Core/Src/bno055.c ****      * communication routine*/
 226:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 336              		.loc 1 226 5 is_stmt 1 view .LVU95
 337              	.LVL33:
 227:Core/Src/bno055.c **** 
 228:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 229:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 338              		.loc 1 229 5 view .LVU96
 339              		.loc 1 229 18 is_stmt 0 view .LVU97
 340 0004 054A     		ldr	r2, .L15
 341              	.LVL34:
 342              		.loc 1 229 18 view .LVU98
ARM GAS  /tmp/cc9kYR4Z.s 			page 11


 343 0006 1468     		ldr	r4, [r2]
 344              		.loc 1 229 8 view .LVU99
 345 0008 2CB1     		cbz	r4, .L13
 230:Core/Src/bno055.c ****     {
 231:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 232:Core/Src/bno055.c ****     }
 233:Core/Src/bno055.c ****     else
 234:Core/Src/bno055.c ****     {
 235:Core/Src/bno055.c ****         /* Read the value from given register*/
 236:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 346              		.loc 1 236 9 is_stmt 1 view .LVU100
 347              		.loc 1 236 28 is_stmt 0 view .LVU101
 348 000a 2569     		ldr	r5, [r4, #16]
 349              		.loc 1 236 20 view .LVU102
 350 000c 0A46     		mov	r2, r1
 351 000e 0146     		mov	r1, r0
 352              	.LVL35:
 353              		.loc 1 236 20 view .LVU103
 354 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 355              	.LVL36:
 356              		.loc 1 236 20 view .LVU104
 357 0012 A847     		blx	r5
 358              	.LVL37:
 237:Core/Src/bno055.c ****     }
 238:Core/Src/bno055.c **** 
 239:Core/Src/bno055.c ****     return com_rslt;
 359              		.loc 1 239 5 is_stmt 1 view .LVU105
 360              	.L12:
 240:Core/Src/bno055.c **** }
 361              		.loc 1 240 1 is_stmt 0 view .LVU106
 362 0014 38BD     		pop	{r3, r4, r5, pc}
 363              	.LVL38:
 364              	.L13:
 231:Core/Src/bno055.c ****     }
 365              		.loc 1 231 16 view .LVU107
 366 0016 6FF07E00 		mvn	r0, #126
 367              	.LVL39:
 231:Core/Src/bno055.c ****     }
 368              		.loc 1 231 16 view .LVU108
 369 001a FBE7     		b	.L12
 370              	.L16:
 371              		.align	2
 372              	.L15:
 373 001c 00000000 		.word	.LANCHOR0
 374              		.cfi_endproc
 375              	.LFE2:
 377              		.section	.text.bno055_read_page_id,"ax",%progbits
 378              		.align	1
 379              		.global	bno055_read_page_id
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	bno055_read_page_id:
 385              	.LVL40:
 386              	.LFB5:
 241:Core/Src/bno055.c **** 
 242:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/cc9kYR4Z.s 			page 12


 243:Core/Src/bno055.c ****  *  @brief This API reads chip id
 244:Core/Src/bno055.c ****  *  from register 0x00 it is a byte of data
 245:Core/Src/bno055.c ****  *
 246:Core/Src/bno055.c ****  *
 247:Core/Src/bno055.c ****  *  @param chip_id_u8 : The chip id value 0xA0
 248:Core/Src/bno055.c ****  *
 249:Core/Src/bno055.c ****  *  @return results of bus communication function
 250:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 251:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 252:Core/Src/bno055.c ****  */
 253:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_chip_id(u8 *chip_id_u8)
 254:Core/Src/bno055.c **** {
 255:Core/Src/bno055.c ****     /* Variable used to return value of
 256:Core/Src/bno055.c ****      * communication routine*/
 257:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 258:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 259:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 260:Core/Src/bno055.c **** 
 261:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 262:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 263:Core/Src/bno055.c ****     {
 264:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 265:Core/Src/bno055.c ****     }
 266:Core/Src/bno055.c ****     else
 267:Core/Src/bno055.c ****     {
 268:Core/Src/bno055.c ****         /*condition check for page, chip id is
 269:Core/Src/bno055.c ****          * available in the page zero*/
 270:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 271:Core/Src/bno055.c ****         {
 272:Core/Src/bno055.c ****             /* Write the page zero*/
 273:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 274:Core/Src/bno055.c ****         }
 275:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 276:Core/Src/bno055.c ****         {
 277:Core/Src/bno055.c ****             /* Read the chip id*/
 278:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 279:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 280:Core/Src/bno055.c ****                                                       &data_u8,
 281:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 282:Core/Src/bno055.c ****             *chip_id_u8 = data_u8;
 283:Core/Src/bno055.c ****         }
 284:Core/Src/bno055.c ****         else
 285:Core/Src/bno055.c ****         {
 286:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 287:Core/Src/bno055.c ****         }
 288:Core/Src/bno055.c ****     }
 289:Core/Src/bno055.c **** 
 290:Core/Src/bno055.c ****     return com_rslt;
 291:Core/Src/bno055.c **** }
 292:Core/Src/bno055.c **** 
 293:Core/Src/bno055.c **** /*!
 294:Core/Src/bno055.c ****  *  @brief This API reads software revision id
 295:Core/Src/bno055.c ****  *  from register 0x04 and 0x05 it is a two byte of data
 296:Core/Src/bno055.c ****  *
 297:Core/Src/bno055.c ****  *  @param sw_id_u8 : The SW revision id
 298:Core/Src/bno055.c ****  *
 299:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/cc9kYR4Z.s 			page 13


 300:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 301:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 302:Core/Src/bno055.c ****  *
 303:Core/Src/bno055.c ****  *
 304:Core/Src/bno055.c ****  */
 305:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sw_rev_id(u16 *sw_id_u8)
 306:Core/Src/bno055.c **** {
 307:Core/Src/bno055.c ****     /* Variable used to return value of
 308:Core/Src/bno055.c ****      * communication routine*/
 309:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 310:Core/Src/bno055.c **** 
 311:Core/Src/bno055.c ****     /* array having the software revision id
 312:Core/Src/bno055.c ****      * data_u8[0] - LSB
 313:Core/Src/bno055.c ****      * data_u8[1] - MSB*/
 314:Core/Src/bno055.c ****     u8 data_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 316:Core/Src/bno055.c **** 
 317:Core/Src/bno055.c ****     /* Check the struct  p_bno055 is empty*/
 318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 319:Core/Src/bno055.c ****     {
 320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 321:Core/Src/bno055.c ****     }
 322:Core/Src/bno055.c ****     else
 323:Core/Src/bno055.c ****     {
 324:Core/Src/bno055.c ****         /*condition check for page, chip id is
 325:Core/Src/bno055.c ****          * available in the page zero*/
 326:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 327:Core/Src/bno055.c ****         {
 328:Core/Src/bno055.c ****             /* Write the page zero*/
 329:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 330:Core/Src/bno055.c ****         }
 331:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 332:Core/Src/bno055.c ****         {
 333:Core/Src/bno055.c ****             /* Read the two byte value of software
 334:Core/Src/bno055.c ****              * revision id*/
 335:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 336:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 337:Core/Src/bno055.c ****                                                       data_u8,
 338:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 339:Core/Src/bno055.c ****             data_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SW_ID_LSB], BNO055_SW_RE
 340:Core/Src/bno055.c ****             *sw_id_u8 =
 341:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 342:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 343:Core/Src/bno055.c ****         }
 344:Core/Src/bno055.c ****         else
 345:Core/Src/bno055.c ****         {
 346:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 347:Core/Src/bno055.c ****         }
 348:Core/Src/bno055.c ****     }
 349:Core/Src/bno055.c **** 
 350:Core/Src/bno055.c ****     return com_rslt;
 351:Core/Src/bno055.c **** }
 352:Core/Src/bno055.c **** 
 353:Core/Src/bno055.c **** /*!
 354:Core/Src/bno055.c ****  *  @brief This API reads page id
 355:Core/Src/bno055.c ****  *  from register 0x07 it is a byte of data
 356:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 14


 357:Core/Src/bno055.c ****  *
 358:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 359:Core/Src/bno055.c ****  *
 360:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 361:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 362:Core/Src/bno055.c ****  *
 363:Core/Src/bno055.c ****  *  @return results of bus communication function
 364:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 365:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 366:Core/Src/bno055.c ****  *
 367:Core/Src/bno055.c ****  *
 368:Core/Src/bno055.c ****  */
 369:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_page_id(u8 *page_id_u8)
 370:Core/Src/bno055.c **** {
 387              		.loc 1 370 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		.loc 1 370 1 is_stmt 0 view .LVU110
 392 0000 70B5     		push	{r4, r5, r6, lr}
 393              	.LCFI5:
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 4, -16
 396              		.cfi_offset 5, -12
 397              		.cfi_offset 6, -8
 398              		.cfi_offset 14, -4
 399 0002 82B0     		sub	sp, sp, #8
 400              	.LCFI6:
 401              		.cfi_def_cfa_offset 24
 371:Core/Src/bno055.c ****     /* Variable used to return value of
 372:Core/Src/bno055.c ****      * communication routine*/
 373:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 402              		.loc 1 373 5 is_stmt 1 view .LVU111
 403              	.LVL41:
 374:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 404              		.loc 1 374 5 view .LVU112
 405              		.loc 1 374 8 is_stmt 0 view .LVU113
 406 0004 0023     		movs	r3, #0
 407 0006 8DF80730 		strb	r3, [sp, #7]
 375:Core/Src/bno055.c **** 
 376:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 377:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 408              		.loc 1 377 5 is_stmt 1 view .LVU114
 409              		.loc 1 377 18 is_stmt 0 view .LVU115
 410 000a 0D4B     		ldr	r3, .L22
 411 000c 1C68     		ldr	r4, [r3]
 412              		.loc 1 377 8 view .LVU116
 413 000e 84B1     		cbz	r4, .L19
 414 0010 0546     		mov	r5, r0
 378:Core/Src/bno055.c ****     {
 379:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 380:Core/Src/bno055.c ****     }
 381:Core/Src/bno055.c ****     else
 382:Core/Src/bno055.c ****     {
 383:Core/Src/bno055.c ****         /* Read the page id form 0x07*/
 384:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 415              		.loc 1 384 9 is_stmt 1 view .LVU117
ARM GAS  /tmp/cc9kYR4Z.s 			page 15


 416              		.loc 1 384 28 is_stmt 0 view .LVU118
 417 0012 2669     		ldr	r6, [r4, #16]
 418              		.loc 1 384 20 view .LVU119
 419 0014 0123     		movs	r3, #1
 420 0016 0DF10702 		add	r2, sp, #7
 421 001a 0721     		movs	r1, #7
 422 001c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 423              	.LVL42:
 424              		.loc 1 384 20 view .LVU120
 425 001e B047     		blx	r6
 426              	.LVL43:
 385:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 386:Core/Src/bno055.c ****                                                   &data_u8,
 387:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 388:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 427              		.loc 1 388 9 is_stmt 1 view .LVU121
 428              		.loc 1 388 12 is_stmt 0 view .LVU122
 429 0020 50B9     		cbnz	r0, .L20
 389:Core/Src/bno055.c ****         {
 390:Core/Src/bno055.c ****             data_u8 = BNO055_GET_BITSLICE(data_u8, BNO055_PAGE_ID);
 430              		.loc 1 390 13 is_stmt 1 view .LVU123
 431              		.loc 1 390 21 is_stmt 0 view .LVU124
 432 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 391:Core/Src/bno055.c ****             *page_id_u8 = data_u8;
 433              		.loc 1 391 13 is_stmt 1 view .LVU125
 434              		.loc 1 391 25 is_stmt 0 view .LVU126
 435 0026 2B70     		strb	r3, [r5]
 392:Core/Src/bno055.c ****             p_bno055->page_id = data_u8;
 436              		.loc 1 392 13 is_stmt 1 view .LVU127
 437              		.loc 1 392 21 is_stmt 0 view .LVU128
 438 0028 054A     		ldr	r2, .L22
 439 002a 1268     		ldr	r2, [r2]
 440              		.loc 1 392 31 view .LVU129
 441 002c 1371     		strb	r3, [r2, #4]
 442              	.LVL44:
 443              	.L18:
 393:Core/Src/bno055.c ****         }
 394:Core/Src/bno055.c ****         else
 395:Core/Src/bno055.c ****         {
 396:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 397:Core/Src/bno055.c ****         }
 398:Core/Src/bno055.c ****     }
 399:Core/Src/bno055.c **** 
 400:Core/Src/bno055.c ****     return com_rslt;
 401:Core/Src/bno055.c **** }
 444              		.loc 1 401 1 view .LVU130
 445 002e 02B0     		add	sp, sp, #8
 446              	.LCFI7:
 447              		.cfi_remember_state
 448              		.cfi_def_cfa_offset 16
 449              		@ sp needed
 450 0030 70BD     		pop	{r4, r5, r6, pc}
 451              	.LVL45:
 452              	.L19:
 453              	.LCFI8:
 454              		.cfi_restore_state
 379:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 16


 455              		.loc 1 379 16 view .LVU131
 456 0032 6FF07E00 		mvn	r0, #126
 457              	.LVL46:
 379:Core/Src/bno055.c ****     }
 458              		.loc 1 379 16 view .LVU132
 459 0036 FAE7     		b	.L18
 460              	.LVL47:
 461              	.L20:
 396:Core/Src/bno055.c ****         }
 462              		.loc 1 396 22 view .LVU133
 463 0038 4FF0FF30 		mov	r0, #-1
 464              	.LVL48:
 396:Core/Src/bno055.c ****         }
 465              		.loc 1 396 22 view .LVU134
 466 003c F7E7     		b	.L18
 467              	.L23:
 468 003e 00BF     		.align	2
 469              	.L22:
 470 0040 00000000 		.word	.LANCHOR0
 471              		.cfi_endproc
 472              	.LFE5:
 474              		.section	.text.bno055_write_page_id,"ax",%progbits
 475              		.align	1
 476              		.global	bno055_write_page_id
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	bno055_write_page_id:
 482              	.LVL49:
 483              	.LFB6:
 402:Core/Src/bno055.c **** 
 403:Core/Src/bno055.c **** /*!
 404:Core/Src/bno055.c ****  *  @brief This API used to write
 405:Core/Src/bno055.c ****  *  the page id register 0x07
 406:Core/Src/bno055.c ****  *
 407:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 408:Core/Src/bno055.c ****  *
 409:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 410:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 411:Core/Src/bno055.c ****  *
 412:Core/Src/bno055.c ****  *  @return results of bus communication function
 413:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 414:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 415:Core/Src/bno055.c ****  *
 416:Core/Src/bno055.c ****  *
 417:Core/Src/bno055.c ****  */
 418:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_page_id(u8 page_id_u8)
 419:Core/Src/bno055.c **** {
 484              		.loc 1 419 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		.loc 1 419 1 is_stmt 0 view .LVU136
 489 0000 70B5     		push	{r4, r5, r6, lr}
 490              	.LCFI9:
 491              		.cfi_def_cfa_offset 16
 492              		.cfi_offset 4, -16
ARM GAS  /tmp/cc9kYR4Z.s 			page 17


 493              		.cfi_offset 5, -12
 494              		.cfi_offset 6, -8
 495              		.cfi_offset 14, -4
 496 0002 82B0     		sub	sp, sp, #8
 497              	.LCFI10:
 498              		.cfi_def_cfa_offset 24
 499 0004 0446     		mov	r4, r0
 420:Core/Src/bno055.c ****     /* Variable used to return value of
 421:Core/Src/bno055.c ****      * communication routine*/
 422:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 500              		.loc 1 422 5 is_stmt 1 view .LVU137
 501              	.LVL50:
 423:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 502              		.loc 1 423 5 view .LVU138
 503              		.loc 1 423 8 is_stmt 0 view .LVU139
 504 0006 0023     		movs	r3, #0
 505 0008 8DF80730 		strb	r3, [sp, #7]
 424:Core/Src/bno055.c **** 
 425:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 426:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 506              		.loc 1 426 5 is_stmt 1 view .LVU140
 507              		.loc 1 426 18 is_stmt 0 view .LVU141
 508 000c 124B     		ldr	r3, .L29
 509 000e 1868     		ldr	r0, [r3]
 510              	.LVL51:
 511              		.loc 1 426 8 view .LVU142
 512 0010 E0B1     		cbz	r0, .L26
 427:Core/Src/bno055.c ****     {
 428:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 429:Core/Src/bno055.c ****     }
 430:Core/Src/bno055.c ****     else
 431:Core/Src/bno055.c ****     {
 432:Core/Src/bno055.c ****         /* Read the current page*/
 433:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 513              		.loc 1 433 9 is_stmt 1 view .LVU143
 514              		.loc 1 433 28 is_stmt 0 view .LVU144
 515 0012 0569     		ldr	r5, [r0, #16]
 516              		.loc 1 433 20 view .LVU145
 517 0014 0123     		movs	r3, #1
 518 0016 0DF10702 		add	r2, sp, #7
 519 001a 0721     		movs	r1, #7
 520 001c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 521 001e A847     		blx	r5
 522              	.LVL52:
 434:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 435:Core/Src/bno055.c ****                                                   &data_u8r,
 436:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 437:Core/Src/bno055.c **** 
 438:Core/Src/bno055.c ****         /* Check condition for communication BNO055_SUCCESS*/
 439:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 523              		.loc 1 439 9 is_stmt 1 view .LVU146
 524              		.loc 1 439 12 is_stmt 0 view .LVU147
 525 0020 0546     		mov	r5, r0
 526 0022 B0B9     		cbnz	r0, .L27
 440:Core/Src/bno055.c ****         {
 441:Core/Src/bno055.c ****             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_PAGE_ID, page_id_u8);
 527              		.loc 1 441 13 is_stmt 1 view .LVU148
ARM GAS  /tmp/cc9kYR4Z.s 			page 18


 528              		.loc 1 441 22 is_stmt 0 view .LVU149
 529 0024 8DF80740 		strb	r4, [sp, #7]
 442:Core/Src/bno055.c **** 
 443:Core/Src/bno055.c ****             /* Write the page id*/
 444:Core/Src/bno055.c ****             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 530              		.loc 1 444 13 is_stmt 1 view .LVU150
 531              		.loc 1 444 33 is_stmt 0 view .LVU151
 532 0028 0B4B     		ldr	r3, .L29
 533 002a 1868     		ldr	r0, [r3]
 534              	.LVL53:
 535              		.loc 1 444 33 view .LVU152
 536 002c C668     		ldr	r6, [r0, #12]
 537              		.loc 1 444 25 view .LVU153
 538 002e 0123     		movs	r3, #1
 539 0030 0DF10702 		add	r2, sp, #7
 540 0034 0721     		movs	r1, #7
 541 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 542 0038 B047     		blx	r6
 543              	.LVL54:
 544              		.loc 1 444 22 view .LVU154
 545 003a 55FA80F3 		uxtab	r3, r5, r0
 546 003e 58B2     		sxtb	r0, r3
 547              	.LVL55:
 445:Core/Src/bno055.c ****                                                         BNO055_PAGE_ID_REG,
 446:Core/Src/bno055.c ****                                                         &data_u8r,
 447:Core/Src/bno055.c ****                                                         BNO055_GEN_READ_WRITE_LENGTH);
 448:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 548              		.loc 1 448 13 is_stmt 1 view .LVU155
 549              		.loc 1 448 16 is_stmt 0 view .LVU156
 550 0040 10B9     		cbnz	r0, .L25
 449:Core/Src/bno055.c ****             {
 450:Core/Src/bno055.c ****                 p_bno055->page_id = page_id_u8;
 551              		.loc 1 450 17 is_stmt 1 view .LVU157
 552              		.loc 1 450 25 is_stmt 0 view .LVU158
 553 0042 054B     		ldr	r3, .L29
 554 0044 1B68     		ldr	r3, [r3]
 555              		.loc 1 450 35 view .LVU159
 556 0046 1C71     		strb	r4, [r3, #4]
 557              	.LVL56:
 558              	.L25:
 451:Core/Src/bno055.c ****             }
 452:Core/Src/bno055.c ****         }
 453:Core/Src/bno055.c ****         else
 454:Core/Src/bno055.c ****         {
 455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 456:Core/Src/bno055.c ****         }
 457:Core/Src/bno055.c ****     }
 458:Core/Src/bno055.c **** 
 459:Core/Src/bno055.c ****     return com_rslt;
 460:Core/Src/bno055.c **** }
 559              		.loc 1 460 1 view .LVU160
 560 0048 02B0     		add	sp, sp, #8
 561              	.LCFI11:
 562              		.cfi_remember_state
 563              		.cfi_def_cfa_offset 16
 564              		@ sp needed
 565 004a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc9kYR4Z.s 			page 19


 566              	.LVL57:
 567              	.L26:
 568              	.LCFI12:
 569              		.cfi_restore_state
 428:Core/Src/bno055.c ****     }
 570              		.loc 1 428 16 view .LVU161
 571 004c 6FF07E00 		mvn	r0, #126
 572 0050 FAE7     		b	.L25
 573              	.LVL58:
 574              	.L27:
 455:Core/Src/bno055.c ****         }
 575              		.loc 1 455 22 view .LVU162
 576 0052 4FF0FF30 		mov	r0, #-1
 577              	.LVL59:
 455:Core/Src/bno055.c ****         }
 578              		.loc 1 455 22 view .LVU163
 579 0056 F7E7     		b	.L25
 580              	.L30:
 581              		.align	2
 582              	.L29:
 583 0058 00000000 		.word	.LANCHOR0
 584              		.cfi_endproc
 585              	.LFE6:
 587              		.section	.text.bno055_read_chip_id,"ax",%progbits
 588              		.align	1
 589              		.global	bno055_read_chip_id
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	bno055_read_chip_id:
 595              	.LVL60:
 596              	.LFB3:
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 597              		.loc 1 254 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 601              		.loc 1 254 1 is_stmt 0 view .LVU165
 602 0000 70B5     		push	{r4, r5, r6, lr}
 603              	.LCFI13:
 604              		.cfi_def_cfa_offset 16
 605              		.cfi_offset 4, -16
 606              		.cfi_offset 5, -12
 607              		.cfi_offset 6, -8
 608              		.cfi_offset 14, -4
 609 0002 82B0     		sub	sp, sp, #8
 610              	.LCFI14:
 611              		.cfi_def_cfa_offset 24
 257:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 612              		.loc 1 257 5 is_stmt 1 view .LVU166
 613              	.LVL61:
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 614              		.loc 1 258 5 view .LVU167
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 615              		.loc 1 258 8 is_stmt 0 view .LVU168
 616 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 20


 617 0006 8DF80730 		strb	r3, [sp, #7]
 259:Core/Src/bno055.c **** 
 618              		.loc 1 259 5 is_stmt 1 view .LVU169
 619              	.LVL62:
 262:Core/Src/bno055.c ****     {
 620              		.loc 1 262 5 view .LVU170
 262:Core/Src/bno055.c ****     {
 621              		.loc 1 262 18 is_stmt 0 view .LVU171
 622 000a 124B     		ldr	r3, .L39
 623 000c 1B68     		ldr	r3, [r3]
 262:Core/Src/bno055.c ****     {
 624              		.loc 1 262 8 view .LVU172
 625 000e D3B1     		cbz	r3, .L35
 626 0010 0546     		mov	r5, r0
 270:Core/Src/bno055.c ****         {
 627              		.loc 1 270 9 is_stmt 1 view .LVU173
 270:Core/Src/bno055.c ****         {
 628              		.loc 1 270 21 is_stmt 0 view .LVU174
 629 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 270:Core/Src/bno055.c ****         {
 630              		.loc 1 270 12 view .LVU175
 631 0014 8BB9     		cbnz	r3, .L38
 632              	.LVL63:
 633              	.L33:
 275:Core/Src/bno055.c ****         {
 634              		.loc 1 275 53 discriminator 1 view .LVU176
 635 0016 0F4B     		ldr	r3, .L39
 636 0018 1B68     		ldr	r3, [r3]
 637 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 275:Core/Src/bno055.c ****         {
 638              		.loc 1 275 41 discriminator 1 view .LVU177
 639 001c B3B9     		cbnz	r3, .L36
 640              	.L34:
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 641              		.loc 1 278 13 is_stmt 1 view .LVU178
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 642              		.loc 1 278 32 is_stmt 0 view .LVU179
 643 001e 0D4B     		ldr	r3, .L39
 644 0020 1C68     		ldr	r4, [r3]
 645 0022 2669     		ldr	r6, [r4, #16]
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 646              		.loc 1 278 24 view .LVU180
 647 0024 0123     		movs	r3, #1
 648 0026 0DF10702 		add	r2, sp, #7
 649 002a 0021     		movs	r1, #0
 650 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 651 002e B047     		blx	r6
 652              	.LVL64:
 282:Core/Src/bno055.c ****         }
 653              		.loc 1 282 13 is_stmt 1 view .LVU181
 282:Core/Src/bno055.c ****         }
 654              		.loc 1 282 25 is_stmt 0 view .LVU182
 655 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 656 0034 2B70     		strb	r3, [r5]
 657              	.LVL65:
 658              	.L32:
 291:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 21


 659              		.loc 1 291 1 view .LVU183
 660 0036 02B0     		add	sp, sp, #8
 661              	.LCFI15:
 662              		.cfi_remember_state
 663              		.cfi_def_cfa_offset 16
 664              		@ sp needed
 665 0038 70BD     		pop	{r4, r5, r6, pc}
 666              	.LVL66:
 667              	.L38:
 668              	.LCFI16:
 669              		.cfi_restore_state
 273:Core/Src/bno055.c ****         }
 670              		.loc 1 273 13 is_stmt 1 view .LVU184
 273:Core/Src/bno055.c ****         }
 671              		.loc 1 273 23 is_stmt 0 view .LVU185
 672 003a 0020     		movs	r0, #0
 673              	.LVL67:
 273:Core/Src/bno055.c ****         }
 674              		.loc 1 273 23 view .LVU186
 675 003c FFF7FEFF 		bl	bno055_write_page_id
 676              	.LVL68:
 275:Core/Src/bno055.c ****         {
 677              		.loc 1 275 9 is_stmt 1 view .LVU187
 275:Core/Src/bno055.c ****         {
 678              		.loc 1 275 12 is_stmt 0 view .LVU188
 679 0040 0028     		cmp	r0, #0
 680 0042 ECD0     		beq	.L34
 681 0044 E7E7     		b	.L33
 682              	.LVL69:
 683              	.L35:
 264:Core/Src/bno055.c ****     }
 684              		.loc 1 264 16 view .LVU189
 685 0046 6FF07E00 		mvn	r0, #126
 686              	.LVL70:
 264:Core/Src/bno055.c ****     }
 687              		.loc 1 264 16 view .LVU190
 688 004a F4E7     		b	.L32
 689              	.LVL71:
 690              	.L36:
 286:Core/Src/bno055.c ****         }
 691              		.loc 1 286 22 view .LVU191
 692 004c 4FF0FF30 		mov	r0, #-1
 693 0050 F1E7     		b	.L32
 694              	.L40:
 695 0052 00BF     		.align	2
 696              	.L39:
 697 0054 00000000 		.word	.LANCHOR0
 698              		.cfi_endproc
 699              	.LFE3:
 701              		.section	.text.bno055_read_sw_rev_id,"ax",%progbits
 702              		.align	1
 703              		.global	bno055_read_sw_rev_id
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	bno055_read_sw_rev_id:
 709              	.LVL72:
ARM GAS  /tmp/cc9kYR4Z.s 			page 22


 710              	.LFB4:
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 711              		.loc 1 306 1 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 8
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 715              		.loc 1 306 1 is_stmt 0 view .LVU193
 716 0000 30B5     		push	{r4, r5, lr}
 717              	.LCFI17:
 718              		.cfi_def_cfa_offset 12
 719              		.cfi_offset 4, -12
 720              		.cfi_offset 5, -8
 721              		.cfi_offset 14, -4
 722 0002 83B0     		sub	sp, sp, #12
 723              	.LCFI18:
 724              		.cfi_def_cfa_offset 24
 309:Core/Src/bno055.c **** 
 725              		.loc 1 309 5 is_stmt 1 view .LVU194
 726              	.LVL73:
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 727              		.loc 1 314 5 view .LVU195
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 728              		.loc 1 314 8 is_stmt 0 view .LVU196
 729 0004 0023     		movs	r3, #0
 730 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 315:Core/Src/bno055.c **** 
 731              		.loc 1 315 5 is_stmt 1 view .LVU197
 732              	.LVL74:
 318:Core/Src/bno055.c ****     {
 733              		.loc 1 318 5 view .LVU198
 318:Core/Src/bno055.c ****     {
 734              		.loc 1 318 18 is_stmt 0 view .LVU199
 735 000a 134B     		ldr	r3, .L49
 736 000c 1B68     		ldr	r3, [r3]
 318:Core/Src/bno055.c ****     {
 737              		.loc 1 318 8 view .LVU200
 738 000e EBB1     		cbz	r3, .L45
 739 0010 0446     		mov	r4, r0
 326:Core/Src/bno055.c ****         {
 740              		.loc 1 326 9 is_stmt 1 view .LVU201
 326:Core/Src/bno055.c ****         {
 741              		.loc 1 326 21 is_stmt 0 view .LVU202
 742 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 326:Core/Src/bno055.c ****         {
 743              		.loc 1 326 12 view .LVU203
 744 0014 A3B9     		cbnz	r3, .L48
 745              	.LVL75:
 746              	.L43:
 331:Core/Src/bno055.c ****         {
 747              		.loc 1 331 53 discriminator 1 view .LVU204
 748 0016 104B     		ldr	r3, .L49
 749 0018 1B68     		ldr	r3, [r3]
 750 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 331:Core/Src/bno055.c ****         {
 751              		.loc 1 331 41 discriminator 1 view .LVU205
 752 001c CBB9     		cbnz	r3, .L46
ARM GAS  /tmp/cc9kYR4Z.s 			page 23


 753              	.L44:
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 754              		.loc 1 335 13 is_stmt 1 view .LVU206
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 755              		.loc 1 335 32 is_stmt 0 view .LVU207
 756 001e 0E4B     		ldr	r3, .L49
 757 0020 1868     		ldr	r0, [r3]
 758 0022 0569     		ldr	r5, [r0, #16]
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 759              		.loc 1 335 24 view .LVU208
 760 0024 0223     		movs	r3, #2
 761 0026 01AA     		add	r2, sp, #4
 762 0028 0421     		movs	r1, #4
 763 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 764 002c A847     		blx	r5
 765              	.LVL76:
 339:Core/Src/bno055.c ****             *sw_id_u8 =
 766              		.loc 1 339 13 is_stmt 1 view .LVU209
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 767              		.loc 1 340 13 view .LVU210
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 768              		.loc 1 341 42 is_stmt 0 view .LVU211
 769 002e 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 342:Core/Src/bno055.c ****         }
 770              		.loc 1 342 31 view .LVU212
 771 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 772              		.loc 1 341 17 view .LVU213
 773 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 774              		.loc 1 340 23 view .LVU214
 775 003a 2380     		strh	r3, [r4]	@ movhi
 776              	.LVL77:
 777              	.L42:
 351:Core/Src/bno055.c **** 
 778              		.loc 1 351 1 view .LVU215
 779 003c 03B0     		add	sp, sp, #12
 780              	.LCFI19:
 781              		.cfi_remember_state
 782              		.cfi_def_cfa_offset 12
 783              		@ sp needed
 784 003e 30BD     		pop	{r4, r5, pc}
 785              	.LVL78:
 786              	.L48:
 787              	.LCFI20:
 788              		.cfi_restore_state
 329:Core/Src/bno055.c ****         }
 789              		.loc 1 329 13 is_stmt 1 view .LVU216
 329:Core/Src/bno055.c ****         }
 790              		.loc 1 329 23 is_stmt 0 view .LVU217
 791 0040 0020     		movs	r0, #0
 792              	.LVL79:
 329:Core/Src/bno055.c ****         }
 793              		.loc 1 329 23 view .LVU218
 794 0042 FFF7FEFF 		bl	bno055_write_page_id
 795              	.LVL80:
 331:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 24


 796              		.loc 1 331 9 is_stmt 1 view .LVU219
 331:Core/Src/bno055.c ****         {
 797              		.loc 1 331 12 is_stmt 0 view .LVU220
 798 0046 0028     		cmp	r0, #0
 799 0048 E9D0     		beq	.L44
 800 004a E4E7     		b	.L43
 801              	.LVL81:
 802              	.L45:
 320:Core/Src/bno055.c ****     }
 803              		.loc 1 320 16 view .LVU221
 804 004c 6FF07E00 		mvn	r0, #126
 805              	.LVL82:
 320:Core/Src/bno055.c ****     }
 806              		.loc 1 320 16 view .LVU222
 807 0050 F4E7     		b	.L42
 808              	.LVL83:
 809              	.L46:
 346:Core/Src/bno055.c ****         }
 810              		.loc 1 346 22 view .LVU223
 811 0052 4FF0FF30 		mov	r0, #-1
 812 0056 F1E7     		b	.L42
 813              	.L50:
 814              		.align	2
 815              	.L49:
 816 0058 00000000 		.word	.LANCHOR0
 817              		.cfi_endproc
 818              	.LFE4:
 820              		.section	.text.bno055_read_accel_rev_id,"ax",%progbits
 821              		.align	1
 822              		.global	bno055_read_accel_rev_id
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 827              	bno055_read_accel_rev_id:
 828              	.LVL84:
 829              	.LFB7:
 461:Core/Src/bno055.c **** 
 462:Core/Src/bno055.c **** /*!
 463:Core/Src/bno055.c ****  *  @brief This API reads accel revision id
 464:Core/Src/bno055.c ****  *  from register 0x01 it is a byte of value
 465:Core/Src/bno055.c ****  *
 466:Core/Src/bno055.c ****  *  @param accel_rev_id_u8 : The accel revision id 0xFB
 467:Core/Src/bno055.c ****  *
 468:Core/Src/bno055.c ****  *  @return results of bus communication function
 469:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 470:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 471:Core/Src/bno055.c ****  *
 472:Core/Src/bno055.c ****  *
 473:Core/Src/bno055.c ****  */
 474:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_rev_id(u8 *accel_rev_id_u8)
 475:Core/Src/bno055.c **** {
 830              		.loc 1 475 1 is_stmt 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 8
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834              		.loc 1 475 1 is_stmt 0 view .LVU225
 835 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 25


 836              	.LCFI21:
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 4, -16
 839              		.cfi_offset 5, -12
 840              		.cfi_offset 6, -8
 841              		.cfi_offset 14, -4
 842 0002 82B0     		sub	sp, sp, #8
 843              	.LCFI22:
 844              		.cfi_def_cfa_offset 24
 476:Core/Src/bno055.c ****     /* Variable used to return value of
 477:Core/Src/bno055.c ****      * communication routine*/
 478:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 845              		.loc 1 478 5 is_stmt 1 view .LVU226
 846              	.LVL85:
 479:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 847              		.loc 1 479 5 view .LVU227
 848              		.loc 1 479 8 is_stmt 0 view .LVU228
 849 0004 0023     		movs	r3, #0
 850 0006 8DF80730 		strb	r3, [sp, #7]
 480:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 851              		.loc 1 480 5 is_stmt 1 view .LVU229
 852              	.LVL86:
 481:Core/Src/bno055.c **** 
 482:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 483:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 853              		.loc 1 483 5 view .LVU230
 854              		.loc 1 483 18 is_stmt 0 view .LVU231
 855 000a 124B     		ldr	r3, .L59
 856 000c 1B68     		ldr	r3, [r3]
 857              		.loc 1 483 8 view .LVU232
 858 000e D3B1     		cbz	r3, .L55
 859 0010 0546     		mov	r5, r0
 484:Core/Src/bno055.c ****     {
 485:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 486:Core/Src/bno055.c ****     }
 487:Core/Src/bno055.c ****     else
 488:Core/Src/bno055.c ****     {
 489:Core/Src/bno055.c ****         /*condition check for page, chip id is
 490:Core/Src/bno055.c ****          * available in the page zero*/
 491:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 860              		.loc 1 491 9 is_stmt 1 view .LVU233
 861              		.loc 1 491 21 is_stmt 0 view .LVU234
 862 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 863              		.loc 1 491 12 view .LVU235
 864 0014 8BB9     		cbnz	r3, .L58
 865              	.LVL87:
 866              	.L53:
 492:Core/Src/bno055.c ****         {
 493:Core/Src/bno055.c ****             /* Write the page zero*/
 494:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 495:Core/Src/bno055.c ****         }
 496:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 867              		.loc 1 496 53 discriminator 1 view .LVU236
 868 0016 0F4B     		ldr	r3, .L59
 869 0018 1B68     		ldr	r3, [r3]
 870 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 871              		.loc 1 496 41 discriminator 1 view .LVU237
ARM GAS  /tmp/cc9kYR4Z.s 			page 26


 872 001c B3B9     		cbnz	r3, .L56
 873              	.L54:
 497:Core/Src/bno055.c ****         {
 498:Core/Src/bno055.c ****             /* Read the accel revision id */
 499:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 874              		.loc 1 499 13 is_stmt 1 view .LVU238
 875              		.loc 1 499 32 is_stmt 0 view .LVU239
 876 001e 0D4B     		ldr	r3, .L59
 877 0020 1C68     		ldr	r4, [r3]
 878 0022 2669     		ldr	r6, [r4, #16]
 879              		.loc 1 499 24 view .LVU240
 880 0024 0123     		movs	r3, #1
 881 0026 0DF10702 		add	r2, sp, #7
 882 002a 1946     		mov	r1, r3
 883 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 884 002e B047     		blx	r6
 885              	.LVL88:
 500:Core/Src/bno055.c ****                                                       BNO055_ACCEL_REV_ID_REG,
 501:Core/Src/bno055.c ****                                                       &data_u8,
 502:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 503:Core/Src/bno055.c ****             *accel_rev_id_u8 = data_u8;
 886              		.loc 1 503 13 is_stmt 1 view .LVU241
 887              		.loc 1 503 30 is_stmt 0 view .LVU242
 888 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 889 0034 2B70     		strb	r3, [r5]
 890              	.LVL89:
 891              	.L52:
 504:Core/Src/bno055.c ****         }
 505:Core/Src/bno055.c ****         else
 506:Core/Src/bno055.c ****         {
 507:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 508:Core/Src/bno055.c ****         }
 509:Core/Src/bno055.c ****     }
 510:Core/Src/bno055.c **** 
 511:Core/Src/bno055.c ****     return com_rslt;
 512:Core/Src/bno055.c **** }
 892              		.loc 1 512 1 view .LVU243
 893 0036 02B0     		add	sp, sp, #8
 894              	.LCFI23:
 895              		.cfi_remember_state
 896              		.cfi_def_cfa_offset 16
 897              		@ sp needed
 898 0038 70BD     		pop	{r4, r5, r6, pc}
 899              	.LVL90:
 900              	.L58:
 901              	.LCFI24:
 902              		.cfi_restore_state
 494:Core/Src/bno055.c ****         }
 903              		.loc 1 494 13 is_stmt 1 view .LVU244
 494:Core/Src/bno055.c ****         }
 904              		.loc 1 494 23 is_stmt 0 view .LVU245
 905 003a 0020     		movs	r0, #0
 906              	.LVL91:
 494:Core/Src/bno055.c ****         }
 907              		.loc 1 494 23 view .LVU246
 908 003c FFF7FEFF 		bl	bno055_write_page_id
 909              	.LVL92:
ARM GAS  /tmp/cc9kYR4Z.s 			page 27


 496:Core/Src/bno055.c ****         {
 910              		.loc 1 496 9 is_stmt 1 view .LVU247
 496:Core/Src/bno055.c ****         {
 911              		.loc 1 496 12 is_stmt 0 view .LVU248
 912 0040 0028     		cmp	r0, #0
 913 0042 ECD0     		beq	.L54
 914 0044 E7E7     		b	.L53
 915              	.LVL93:
 916              	.L55:
 485:Core/Src/bno055.c ****     }
 917              		.loc 1 485 16 view .LVU249
 918 0046 6FF07E00 		mvn	r0, #126
 919              	.LVL94:
 485:Core/Src/bno055.c ****     }
 920              		.loc 1 485 16 view .LVU250
 921 004a F4E7     		b	.L52
 922              	.LVL95:
 923              	.L56:
 507:Core/Src/bno055.c ****         }
 924              		.loc 1 507 22 view .LVU251
 925 004c 4FF0FF30 		mov	r0, #-1
 926 0050 F1E7     		b	.L52
 927              	.L60:
 928 0052 00BF     		.align	2
 929              	.L59:
 930 0054 00000000 		.word	.LANCHOR0
 931              		.cfi_endproc
 932              	.LFE7:
 934              		.section	.text.bno055_read_mag_rev_id,"ax",%progbits
 935              		.align	1
 936              		.global	bno055_read_mag_rev_id
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 941              	bno055_read_mag_rev_id:
 942              	.LVL96:
 943              	.LFB8:
 513:Core/Src/bno055.c **** 
 514:Core/Src/bno055.c **** /*!
 515:Core/Src/bno055.c ****  *  @brief This API reads mag revision id
 516:Core/Src/bno055.c ****  *  from register 0x02 it is a byte of value
 517:Core/Src/bno055.c ****  *
 518:Core/Src/bno055.c ****  *  @param mag_rev_id_u8 : The mag revision id 0x32
 519:Core/Src/bno055.c ****  *
 520:Core/Src/bno055.c ****  *  @return results of bus communication function
 521:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 522:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 523:Core/Src/bno055.c ****  *
 524:Core/Src/bno055.c ****  *
 525:Core/Src/bno055.c ****  */
 526:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_rev_id(u8 *mag_rev_id_u8)
 527:Core/Src/bno055.c **** {
 944              		.loc 1 527 1 is_stmt 1 view -0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		.loc 1 527 1 is_stmt 0 view .LVU253
ARM GAS  /tmp/cc9kYR4Z.s 			page 28


 949 0000 70B5     		push	{r4, r5, r6, lr}
 950              	.LCFI25:
 951              		.cfi_def_cfa_offset 16
 952              		.cfi_offset 4, -16
 953              		.cfi_offset 5, -12
 954              		.cfi_offset 6, -8
 955              		.cfi_offset 14, -4
 956 0002 82B0     		sub	sp, sp, #8
 957              	.LCFI26:
 958              		.cfi_def_cfa_offset 24
 528:Core/Src/bno055.c ****     /* Variable used to return value of
 529:Core/Src/bno055.c ****      * communication routine*/
 530:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 959              		.loc 1 530 5 is_stmt 1 view .LVU254
 960              	.LVL97:
 531:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 961              		.loc 1 531 5 view .LVU255
 962              		.loc 1 531 8 is_stmt 0 view .LVU256
 963 0004 0023     		movs	r3, #0
 964 0006 8DF80730 		strb	r3, [sp, #7]
 532:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 965              		.loc 1 532 5 is_stmt 1 view .LVU257
 966              	.LVL98:
 533:Core/Src/bno055.c **** 
 534:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 535:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 967              		.loc 1 535 5 view .LVU258
 968              		.loc 1 535 18 is_stmt 0 view .LVU259
 969 000a 124B     		ldr	r3, .L69
 970 000c 1B68     		ldr	r3, [r3]
 971              		.loc 1 535 8 view .LVU260
 972 000e D3B1     		cbz	r3, .L65
 973 0010 0546     		mov	r5, r0
 536:Core/Src/bno055.c ****     {
 537:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 538:Core/Src/bno055.c ****     }
 539:Core/Src/bno055.c ****     else
 540:Core/Src/bno055.c ****     {
 541:Core/Src/bno055.c ****         /*condition check for page, chip id is
 542:Core/Src/bno055.c ****          * available in the page zero*/
 543:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 974              		.loc 1 543 9 is_stmt 1 view .LVU261
 975              		.loc 1 543 21 is_stmt 0 view .LVU262
 976 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 977              		.loc 1 543 12 view .LVU263
 978 0014 8BB9     		cbnz	r3, .L68
 979              	.LVL99:
 980              	.L63:
 544:Core/Src/bno055.c ****         {
 545:Core/Src/bno055.c ****             /* Write the page zero*/
 546:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 547:Core/Src/bno055.c ****         }
 548:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 981              		.loc 1 548 53 discriminator 1 view .LVU264
 982 0016 0F4B     		ldr	r3, .L69
 983 0018 1B68     		ldr	r3, [r3]
 984 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 29


 985              		.loc 1 548 41 discriminator 1 view .LVU265
 986 001c B3B9     		cbnz	r3, .L66
 987              	.L64:
 549:Core/Src/bno055.c ****         {
 550:Core/Src/bno055.c ****             /* Read the mag revision id */
 551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 988              		.loc 1 551 13 is_stmt 1 view .LVU266
 989              		.loc 1 551 32 is_stmt 0 view .LVU267
 990 001e 0D4B     		ldr	r3, .L69
 991 0020 1C68     		ldr	r4, [r3]
 992 0022 2669     		ldr	r6, [r4, #16]
 993              		.loc 1 551 24 view .LVU268
 994 0024 0123     		movs	r3, #1
 995 0026 0DF10702 		add	r2, sp, #7
 996 002a 0221     		movs	r1, #2
 997 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 998 002e B047     		blx	r6
 999              	.LVL100:
 552:Core/Src/bno055.c ****                                                       BNO055_MAG_REV_ID_REG,
 553:Core/Src/bno055.c ****                                                       &data_u8,
 554:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 555:Core/Src/bno055.c ****             *mag_rev_id_u8 = data_u8;
 1000              		.loc 1 555 13 is_stmt 1 view .LVU269
 1001              		.loc 1 555 28 is_stmt 0 view .LVU270
 1002 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1003 0034 2B70     		strb	r3, [r5]
 1004              	.LVL101:
 1005              	.L62:
 556:Core/Src/bno055.c ****         }
 557:Core/Src/bno055.c ****         else
 558:Core/Src/bno055.c ****         {
 559:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 560:Core/Src/bno055.c ****         }
 561:Core/Src/bno055.c ****     }
 562:Core/Src/bno055.c **** 
 563:Core/Src/bno055.c ****     return com_rslt;
 564:Core/Src/bno055.c **** }
 1006              		.loc 1 564 1 view .LVU271
 1007 0036 02B0     		add	sp, sp, #8
 1008              	.LCFI27:
 1009              		.cfi_remember_state
 1010              		.cfi_def_cfa_offset 16
 1011              		@ sp needed
 1012 0038 70BD     		pop	{r4, r5, r6, pc}
 1013              	.LVL102:
 1014              	.L68:
 1015              	.LCFI28:
 1016              		.cfi_restore_state
 546:Core/Src/bno055.c ****         }
 1017              		.loc 1 546 13 is_stmt 1 view .LVU272
 546:Core/Src/bno055.c ****         }
 1018              		.loc 1 546 23 is_stmt 0 view .LVU273
 1019 003a 0020     		movs	r0, #0
 1020              	.LVL103:
 546:Core/Src/bno055.c ****         }
 1021              		.loc 1 546 23 view .LVU274
 1022 003c FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/cc9kYR4Z.s 			page 30


 1023              	.LVL104:
 548:Core/Src/bno055.c ****         {
 1024              		.loc 1 548 9 is_stmt 1 view .LVU275
 548:Core/Src/bno055.c ****         {
 1025              		.loc 1 548 12 is_stmt 0 view .LVU276
 1026 0040 0028     		cmp	r0, #0
 1027 0042 ECD0     		beq	.L64
 1028 0044 E7E7     		b	.L63
 1029              	.LVL105:
 1030              	.L65:
 537:Core/Src/bno055.c ****     }
 1031              		.loc 1 537 16 view .LVU277
 1032 0046 6FF07E00 		mvn	r0, #126
 1033              	.LVL106:
 537:Core/Src/bno055.c ****     }
 1034              		.loc 1 537 16 view .LVU278
 1035 004a F4E7     		b	.L62
 1036              	.LVL107:
 1037              	.L66:
 559:Core/Src/bno055.c ****         }
 1038              		.loc 1 559 22 view .LVU279
 1039 004c 4FF0FF30 		mov	r0, #-1
 1040 0050 F1E7     		b	.L62
 1041              	.L70:
 1042 0052 00BF     		.align	2
 1043              	.L69:
 1044 0054 00000000 		.word	.LANCHOR0
 1045              		.cfi_endproc
 1046              	.LFE8:
 1048              		.section	.text.bno055_read_gyro_rev_id,"ax",%progbits
 1049              		.align	1
 1050              		.global	bno055_read_gyro_rev_id
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1055              	bno055_read_gyro_rev_id:
 1056              	.LVL108:
 1057              	.LFB9:
 565:Core/Src/bno055.c **** 
 566:Core/Src/bno055.c **** /*!
 567:Core/Src/bno055.c ****  *  @brief This API reads gyro revision id
 568:Core/Src/bno055.c ****  *  from register 0x03 it is a byte of value
 569:Core/Src/bno055.c ****  *
 570:Core/Src/bno055.c ****  *  @param gyro_rev_id_u8 : The gyro revision id 0xF0
 571:Core/Src/bno055.c ****  *
 572:Core/Src/bno055.c ****  *
 573:Core/Src/bno055.c ****  *
 574:Core/Src/bno055.c ****  *  @return results of bus communication function
 575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 577:Core/Src/bno055.c ****  *
 578:Core/Src/bno055.c ****  *
 579:Core/Src/bno055.c ****  */
 580:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_rev_id(u8 *gyro_rev_id_u8)
 581:Core/Src/bno055.c **** {
 1058              		.loc 1 581 1 is_stmt 1 view -0
 1059              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 31


 1060              		@ args = 0, pretend = 0, frame = 8
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		.loc 1 581 1 is_stmt 0 view .LVU281
 1063 0000 70B5     		push	{r4, r5, r6, lr}
 1064              	.LCFI29:
 1065              		.cfi_def_cfa_offset 16
 1066              		.cfi_offset 4, -16
 1067              		.cfi_offset 5, -12
 1068              		.cfi_offset 6, -8
 1069              		.cfi_offset 14, -4
 1070 0002 82B0     		sub	sp, sp, #8
 1071              	.LCFI30:
 1072              		.cfi_def_cfa_offset 24
 582:Core/Src/bno055.c ****     /* Variable used to return value of
 583:Core/Src/bno055.c ****      * communication routine*/
 584:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1073              		.loc 1 584 5 is_stmt 1 view .LVU282
 1074              	.LVL109:
 585:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1075              		.loc 1 585 5 view .LVU283
 1076              		.loc 1 585 8 is_stmt 0 view .LVU284
 1077 0004 0023     		movs	r3, #0
 1078 0006 8DF80730 		strb	r3, [sp, #7]
 586:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1079              		.loc 1 586 5 is_stmt 1 view .LVU285
 1080              	.LVL110:
 587:Core/Src/bno055.c **** 
 588:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 589:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1081              		.loc 1 589 5 view .LVU286
 1082              		.loc 1 589 18 is_stmt 0 view .LVU287
 1083 000a 124B     		ldr	r3, .L79
 1084 000c 1B68     		ldr	r3, [r3]
 1085              		.loc 1 589 8 view .LVU288
 1086 000e D3B1     		cbz	r3, .L75
 1087 0010 0546     		mov	r5, r0
 590:Core/Src/bno055.c ****     {
 591:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 592:Core/Src/bno055.c ****     }
 593:Core/Src/bno055.c ****     else
 594:Core/Src/bno055.c ****     {
 595:Core/Src/bno055.c ****         /*condition check for page, chip id is
 596:Core/Src/bno055.c ****          * available in the page zero*/
 597:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1088              		.loc 1 597 9 is_stmt 1 view .LVU289
 1089              		.loc 1 597 21 is_stmt 0 view .LVU290
 1090 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1091              		.loc 1 597 12 view .LVU291
 1092 0014 8BB9     		cbnz	r3, .L78
 1093              	.LVL111:
 1094              	.L73:
 598:Core/Src/bno055.c ****         {
 599:Core/Src/bno055.c ****             /* Write the page zero*/
 600:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 601:Core/Src/bno055.c ****         }
 602:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1095              		.loc 1 602 53 discriminator 1 view .LVU292
ARM GAS  /tmp/cc9kYR4Z.s 			page 32


 1096 0016 0F4B     		ldr	r3, .L79
 1097 0018 1B68     		ldr	r3, [r3]
 1098 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1099              		.loc 1 602 41 discriminator 1 view .LVU293
 1100 001c B3B9     		cbnz	r3, .L76
 1101              	.L74:
 603:Core/Src/bno055.c ****         {
 604:Core/Src/bno055.c ****             /* Read the gyro revision id */
 605:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1102              		.loc 1 605 13 is_stmt 1 view .LVU294
 1103              		.loc 1 605 32 is_stmt 0 view .LVU295
 1104 001e 0D4B     		ldr	r3, .L79
 1105 0020 1C68     		ldr	r4, [r3]
 1106 0022 2669     		ldr	r6, [r4, #16]
 1107              		.loc 1 605 24 view .LVU296
 1108 0024 0123     		movs	r3, #1
 1109 0026 0DF10702 		add	r2, sp, #7
 1110 002a 0321     		movs	r1, #3
 1111 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1112 002e B047     		blx	r6
 1113              	.LVL112:
 606:Core/Src/bno055.c ****                                                       BNO055_GYRO_REV_ID_REG,
 607:Core/Src/bno055.c ****                                                       &data_u8,
 608:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 609:Core/Src/bno055.c ****             *gyro_rev_id_u8 = data_u8;
 1114              		.loc 1 609 13 is_stmt 1 view .LVU297
 1115              		.loc 1 609 29 is_stmt 0 view .LVU298
 1116 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1117 0034 2B70     		strb	r3, [r5]
 1118              	.LVL113:
 1119              	.L72:
 610:Core/Src/bno055.c ****         }
 611:Core/Src/bno055.c ****         else
 612:Core/Src/bno055.c ****         {
 613:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 614:Core/Src/bno055.c ****         }
 615:Core/Src/bno055.c ****     }
 616:Core/Src/bno055.c **** 
 617:Core/Src/bno055.c ****     return com_rslt;
 618:Core/Src/bno055.c **** }
 1120              		.loc 1 618 1 view .LVU299
 1121 0036 02B0     		add	sp, sp, #8
 1122              	.LCFI31:
 1123              		.cfi_remember_state
 1124              		.cfi_def_cfa_offset 16
 1125              		@ sp needed
 1126 0038 70BD     		pop	{r4, r5, r6, pc}
 1127              	.LVL114:
 1128              	.L78:
 1129              	.LCFI32:
 1130              		.cfi_restore_state
 600:Core/Src/bno055.c ****         }
 1131              		.loc 1 600 13 is_stmt 1 view .LVU300
 600:Core/Src/bno055.c ****         }
 1132              		.loc 1 600 23 is_stmt 0 view .LVU301
 1133 003a 0020     		movs	r0, #0
 1134              	.LVL115:
ARM GAS  /tmp/cc9kYR4Z.s 			page 33


 600:Core/Src/bno055.c ****         }
 1135              		.loc 1 600 23 view .LVU302
 1136 003c FFF7FEFF 		bl	bno055_write_page_id
 1137              	.LVL116:
 602:Core/Src/bno055.c ****         {
 1138              		.loc 1 602 9 is_stmt 1 view .LVU303
 602:Core/Src/bno055.c ****         {
 1139              		.loc 1 602 12 is_stmt 0 view .LVU304
 1140 0040 0028     		cmp	r0, #0
 1141 0042 ECD0     		beq	.L74
 1142 0044 E7E7     		b	.L73
 1143              	.LVL117:
 1144              	.L75:
 591:Core/Src/bno055.c ****     }
 1145              		.loc 1 591 16 view .LVU305
 1146 0046 6FF07E00 		mvn	r0, #126
 1147              	.LVL118:
 591:Core/Src/bno055.c ****     }
 1148              		.loc 1 591 16 view .LVU306
 1149 004a F4E7     		b	.L72
 1150              	.LVL119:
 1151              	.L76:
 613:Core/Src/bno055.c ****         }
 1152              		.loc 1 613 22 view .LVU307
 1153 004c 4FF0FF30 		mov	r0, #-1
 1154 0050 F1E7     		b	.L72
 1155              	.L80:
 1156 0052 00BF     		.align	2
 1157              	.L79:
 1158 0054 00000000 		.word	.LANCHOR0
 1159              		.cfi_endproc
 1160              	.LFE9:
 1162              		.section	.text.bno055_read_bl_rev_id,"ax",%progbits
 1163              		.align	1
 1164              		.global	bno055_read_bl_rev_id
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1169              	bno055_read_bl_rev_id:
 1170              	.LVL120:
 1171              	.LFB10:
 619:Core/Src/bno055.c **** 
 620:Core/Src/bno055.c **** /*!
 621:Core/Src/bno055.c ****  *  @brief This API used to read boot loader revision id
 622:Core/Src/bno055.c ****  *  from register 0x06 it is a byte of value
 623:Core/Src/bno055.c ****  *
 624:Core/Src/bno055.c ****  *  @param bl_rev_id_u8 : The boot loader revision id
 625:Core/Src/bno055.c ****  *
 626:Core/Src/bno055.c ****  *
 627:Core/Src/bno055.c ****  *  @return results of bus communication function
 628:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 629:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 630:Core/Src/bno055.c ****  *
 631:Core/Src/bno055.c ****  *
 632:Core/Src/bno055.c ****  */
 633:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_bl_rev_id(u8 *bl_rev_id_u8)
 634:Core/Src/bno055.c **** {
ARM GAS  /tmp/cc9kYR4Z.s 			page 34


 1172              		.loc 1 634 1 is_stmt 1 view -0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 8
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		.loc 1 634 1 is_stmt 0 view .LVU309
 1177 0000 70B5     		push	{r4, r5, r6, lr}
 1178              	.LCFI33:
 1179              		.cfi_def_cfa_offset 16
 1180              		.cfi_offset 4, -16
 1181              		.cfi_offset 5, -12
 1182              		.cfi_offset 6, -8
 1183              		.cfi_offset 14, -4
 1184 0002 82B0     		sub	sp, sp, #8
 1185              	.LCFI34:
 1186              		.cfi_def_cfa_offset 24
 635:Core/Src/bno055.c ****     /* Variable used to return value of
 636:Core/Src/bno055.c ****      * communication routine*/
 637:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1187              		.loc 1 637 5 is_stmt 1 view .LVU310
 1188              	.LVL121:
 638:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1189              		.loc 1 638 5 view .LVU311
 1190              		.loc 1 638 8 is_stmt 0 view .LVU312
 1191 0004 0023     		movs	r3, #0
 1192 0006 8DF80730 		strb	r3, [sp, #7]
 639:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1193              		.loc 1 639 5 is_stmt 1 view .LVU313
 1194              	.LVL122:
 640:Core/Src/bno055.c **** 
 641:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 642:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1195              		.loc 1 642 5 view .LVU314
 1196              		.loc 1 642 18 is_stmt 0 view .LVU315
 1197 000a 124B     		ldr	r3, .L89
 1198 000c 1B68     		ldr	r3, [r3]
 1199              		.loc 1 642 8 view .LVU316
 1200 000e D3B1     		cbz	r3, .L85
 1201 0010 0546     		mov	r5, r0
 643:Core/Src/bno055.c ****     {
 644:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 645:Core/Src/bno055.c ****     }
 646:Core/Src/bno055.c ****     else
 647:Core/Src/bno055.c ****     {
 648:Core/Src/bno055.c ****         /*condition check for page, chip id is
 649:Core/Src/bno055.c ****          * available in the page zero*/
 650:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1202              		.loc 1 650 9 is_stmt 1 view .LVU317
 1203              		.loc 1 650 21 is_stmt 0 view .LVU318
 1204 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1205              		.loc 1 650 12 view .LVU319
 1206 0014 8BB9     		cbnz	r3, .L88
 1207              	.LVL123:
 1208              	.L83:
 651:Core/Src/bno055.c ****         {
 652:Core/Src/bno055.c ****             /* Write the page zero*/
 653:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 654:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 35


 655:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1209              		.loc 1 655 53 discriminator 1 view .LVU320
 1210 0016 0F4B     		ldr	r3, .L89
 1211 0018 1B68     		ldr	r3, [r3]
 1212 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1213              		.loc 1 655 41 discriminator 1 view .LVU321
 1214 001c B3B9     		cbnz	r3, .L86
 1215              	.L84:
 656:Core/Src/bno055.c ****         {
 657:Core/Src/bno055.c ****             /* Read the boot loader revision id */
 658:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1216              		.loc 1 658 13 is_stmt 1 view .LVU322
 1217              		.loc 1 658 32 is_stmt 0 view .LVU323
 1218 001e 0D4B     		ldr	r3, .L89
 1219 0020 1C68     		ldr	r4, [r3]
 1220 0022 2669     		ldr	r6, [r4, #16]
 1221              		.loc 1 658 24 view .LVU324
 1222 0024 0123     		movs	r3, #1
 1223 0026 0DF10702 		add	r2, sp, #7
 1224 002a 0621     		movs	r1, #6
 1225 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1226 002e B047     		blx	r6
 1227              	.LVL124:
 659:Core/Src/bno055.c ****                                                       BNO055_BL_REV_ID_REG,
 660:Core/Src/bno055.c ****                                                       &data_u8,
 661:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 662:Core/Src/bno055.c ****             *bl_rev_id_u8 = data_u8;
 1228              		.loc 1 662 13 is_stmt 1 view .LVU325
 1229              		.loc 1 662 27 is_stmt 0 view .LVU326
 1230 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1231 0034 2B70     		strb	r3, [r5]
 1232              	.LVL125:
 1233              	.L82:
 663:Core/Src/bno055.c ****         }
 664:Core/Src/bno055.c ****         else
 665:Core/Src/bno055.c ****         {
 666:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 667:Core/Src/bno055.c ****         }
 668:Core/Src/bno055.c ****     }
 669:Core/Src/bno055.c **** 
 670:Core/Src/bno055.c ****     return com_rslt;
 671:Core/Src/bno055.c **** }
 1234              		.loc 1 671 1 view .LVU327
 1235 0036 02B0     		add	sp, sp, #8
 1236              	.LCFI35:
 1237              		.cfi_remember_state
 1238              		.cfi_def_cfa_offset 16
 1239              		@ sp needed
 1240 0038 70BD     		pop	{r4, r5, r6, pc}
 1241              	.LVL126:
 1242              	.L88:
 1243              	.LCFI36:
 1244              		.cfi_restore_state
 653:Core/Src/bno055.c ****         }
 1245              		.loc 1 653 13 is_stmt 1 view .LVU328
 653:Core/Src/bno055.c ****         }
 1246              		.loc 1 653 23 is_stmt 0 view .LVU329
ARM GAS  /tmp/cc9kYR4Z.s 			page 36


 1247 003a 0020     		movs	r0, #0
 1248              	.LVL127:
 653:Core/Src/bno055.c ****         }
 1249              		.loc 1 653 23 view .LVU330
 1250 003c FFF7FEFF 		bl	bno055_write_page_id
 1251              	.LVL128:
 655:Core/Src/bno055.c ****         {
 1252              		.loc 1 655 9 is_stmt 1 view .LVU331
 655:Core/Src/bno055.c ****         {
 1253              		.loc 1 655 12 is_stmt 0 view .LVU332
 1254 0040 0028     		cmp	r0, #0
 1255 0042 ECD0     		beq	.L84
 1256 0044 E7E7     		b	.L83
 1257              	.LVL129:
 1258              	.L85:
 644:Core/Src/bno055.c ****     }
 1259              		.loc 1 644 16 view .LVU333
 1260 0046 6FF07E00 		mvn	r0, #126
 1261              	.LVL130:
 644:Core/Src/bno055.c ****     }
 1262              		.loc 1 644 16 view .LVU334
 1263 004a F4E7     		b	.L82
 1264              	.LVL131:
 1265              	.L86:
 666:Core/Src/bno055.c ****         }
 1266              		.loc 1 666 22 view .LVU335
 1267 004c 4FF0FF30 		mov	r0, #-1
 1268 0050 F1E7     		b	.L82
 1269              	.L90:
 1270 0052 00BF     		.align	2
 1271              	.L89:
 1272 0054 00000000 		.word	.LANCHOR0
 1273              		.cfi_endproc
 1274              	.LFE10:
 1276              		.section	.text.bno055_read_accel_x,"ax",%progbits
 1277              		.align	1
 1278              		.global	bno055_read_accel_x
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1283              	bno055_read_accel_x:
 1284              	.LVL132:
 1285              	.LFB11:
 672:Core/Src/bno055.c **** 
 673:Core/Src/bno055.c **** /*!
 674:Core/Src/bno055.c ****  *  @brief This API reads acceleration data X values
 675:Core/Src/bno055.c ****  *  from register 0x08 and 0x09 it is a two byte data
 676:Core/Src/bno055.c ****  *
 677:Core/Src/bno055.c ****  *
 678:Core/Src/bno055.c ****  *
 679:Core/Src/bno055.c ****  *
 680:Core/Src/bno055.c ****  *  @param accel_x_s16 : The X raw data
 681:Core/Src/bno055.c ****  *
 682:Core/Src/bno055.c ****  *
 683:Core/Src/bno055.c ****  *
 684:Core/Src/bno055.c ****  *  @return results of bus communication function
 685:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/cc9kYR4Z.s 			page 37


 686:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 687:Core/Src/bno055.c ****  *
 688:Core/Src/bno055.c ****  *
 689:Core/Src/bno055.c ****  */
 690:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_x(s16 *accel_x_s16)
 691:Core/Src/bno055.c **** {
 1286              		.loc 1 691 1 is_stmt 1 view -0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		.loc 1 691 1 is_stmt 0 view .LVU337
 1291 0000 30B5     		push	{r4, r5, lr}
 1292              	.LCFI37:
 1293              		.cfi_def_cfa_offset 12
 1294              		.cfi_offset 4, -12
 1295              		.cfi_offset 5, -8
 1296              		.cfi_offset 14, -4
 1297 0002 83B0     		sub	sp, sp, #12
 1298              	.LCFI38:
 1299              		.cfi_def_cfa_offset 24
 692:Core/Src/bno055.c ****     /* Variable used to return value of
 693:Core/Src/bno055.c ****      * communication routine*/
 694:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1300              		.loc 1 694 5 is_stmt 1 view .LVU338
 1301              	.LVL133:
 695:Core/Src/bno055.c **** 
 696:Core/Src/bno055.c ****     /* Array holding the accel x value
 697:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x-LSB
 698:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x-MSB
 699:Core/Src/bno055.c ****      */
 700:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1302              		.loc 1 700 5 view .LVU339
 1303              		.loc 1 700 8 is_stmt 0 view .LVU340
 1304 0004 0023     		movs	r3, #0
 1305 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 701:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1306              		.loc 1 701 5 is_stmt 1 view .LVU341
 1307              	.LVL134:
 702:Core/Src/bno055.c **** 
 703:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 704:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1308              		.loc 1 704 5 view .LVU342
 1309              		.loc 1 704 18 is_stmt 0 view .LVU343
 1310 000a 134B     		ldr	r3, .L99
 1311 000c 1B68     		ldr	r3, [r3]
 1312              		.loc 1 704 8 view .LVU344
 1313 000e EBB1     		cbz	r3, .L95
 1314 0010 0446     		mov	r4, r0
 705:Core/Src/bno055.c ****     {
 706:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 707:Core/Src/bno055.c ****     }
 708:Core/Src/bno055.c ****     else
 709:Core/Src/bno055.c ****     {
 710:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1315              		.loc 1 710 9 is_stmt 1 view .LVU345
 1316              		.loc 1 710 21 is_stmt 0 view .LVU346
 1317 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 38


 1318              		.loc 1 710 12 view .LVU347
 1319 0014 A3B9     		cbnz	r3, .L98
 1320              	.LVL135:
 1321              	.L93:
 711:Core/Src/bno055.c ****         {
 712:Core/Src/bno055.c ****             /* Write the page zero*/
 713:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 714:Core/Src/bno055.c ****         }
 715:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1322              		.loc 1 715 53 discriminator 1 view .LVU348
 1323 0016 104B     		ldr	r3, .L99
 1324 0018 1B68     		ldr	r3, [r3]
 1325 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1326              		.loc 1 715 41 discriminator 1 view .LVU349
 1327 001c CBB9     		cbnz	r3, .L96
 1328              	.L94:
 716:Core/Src/bno055.c ****         {
 717:Core/Src/bno055.c ****             /* Read the accel x axis two byte value*/
 718:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1329              		.loc 1 718 13 is_stmt 1 view .LVU350
 1330              		.loc 1 718 32 is_stmt 0 view .LVU351
 1331 001e 0E4B     		ldr	r3, .L99
 1332 0020 1868     		ldr	r0, [r3]
 1333 0022 0569     		ldr	r5, [r0, #16]
 1334              		.loc 1 718 24 view .LVU352
 1335 0024 0223     		movs	r3, #2
 1336 0026 01AA     		add	r2, sp, #4
 1337 0028 0821     		movs	r1, #8
 1338 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1339 002c A847     		blx	r5
 1340              	.LVL136:
 719:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 720:Core/Src/bno055.c ****                                                       data_u8,
 721:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 722:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1341              		.loc 1 722 13 is_stmt 1 view .LVU353
 723:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_LSB_VALUEX);
 724:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1342              		.loc 1 724 13 view .LVU354
 725:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_MSB_VALUEX);
 726:Core/Src/bno055.c ****             *accel_x_s16 =
 1343              		.loc 1 726 13 view .LVU355
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1344              		.loc 1 727 30 is_stmt 0 view .LVU356
 1345 002e 9DF90520 		ldrsb	r2, [sp, #5]
 728:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1346              		.loc 1 728 31 view .LVU357
 1347 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1348              		.loc 1 727 17 view .LVU358
 1349 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 726:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1350              		.loc 1 726 26 view .LVU359
 1351 003a 2380     		strh	r3, [r4]	@ movhi
 1352              	.LVL137:
 1353              	.L92:
 729:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 39


 730:Core/Src/bno055.c ****         else
 731:Core/Src/bno055.c ****         {
 732:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 733:Core/Src/bno055.c ****         }
 734:Core/Src/bno055.c ****     }
 735:Core/Src/bno055.c **** 
 736:Core/Src/bno055.c ****     return com_rslt;
 737:Core/Src/bno055.c **** }
 1354              		.loc 1 737 1 view .LVU360
 1355 003c 03B0     		add	sp, sp, #12
 1356              	.LCFI39:
 1357              		.cfi_remember_state
 1358              		.cfi_def_cfa_offset 12
 1359              		@ sp needed
 1360 003e 30BD     		pop	{r4, r5, pc}
 1361              	.LVL138:
 1362              	.L98:
 1363              	.LCFI40:
 1364              		.cfi_restore_state
 713:Core/Src/bno055.c ****         }
 1365              		.loc 1 713 13 is_stmt 1 view .LVU361
 713:Core/Src/bno055.c ****         }
 1366              		.loc 1 713 23 is_stmt 0 view .LVU362
 1367 0040 0020     		movs	r0, #0
 1368              	.LVL139:
 713:Core/Src/bno055.c ****         }
 1369              		.loc 1 713 23 view .LVU363
 1370 0042 FFF7FEFF 		bl	bno055_write_page_id
 1371              	.LVL140:
 715:Core/Src/bno055.c ****         {
 1372              		.loc 1 715 9 is_stmt 1 view .LVU364
 715:Core/Src/bno055.c ****         {
 1373              		.loc 1 715 12 is_stmt 0 view .LVU365
 1374 0046 0028     		cmp	r0, #0
 1375 0048 E9D0     		beq	.L94
 1376 004a E4E7     		b	.L93
 1377              	.LVL141:
 1378              	.L95:
 706:Core/Src/bno055.c ****     }
 1379              		.loc 1 706 16 view .LVU366
 1380 004c 6FF07E00 		mvn	r0, #126
 1381              	.LVL142:
 706:Core/Src/bno055.c ****     }
 1382              		.loc 1 706 16 view .LVU367
 1383 0050 F4E7     		b	.L92
 1384              	.LVL143:
 1385              	.L96:
 732:Core/Src/bno055.c ****         }
 1386              		.loc 1 732 22 view .LVU368
 1387 0052 4FF0FF30 		mov	r0, #-1
 1388 0056 F1E7     		b	.L92
 1389              	.L100:
 1390              		.align	2
 1391              	.L99:
 1392 0058 00000000 		.word	.LANCHOR0
 1393              		.cfi_endproc
 1394              	.LFE11:
ARM GAS  /tmp/cc9kYR4Z.s 			page 40


 1396              		.section	.text.bno055_read_accel_y,"ax",%progbits
 1397              		.align	1
 1398              		.global	bno055_read_accel_y
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1403              	bno055_read_accel_y:
 1404              	.LVL144:
 1405              	.LFB12:
 738:Core/Src/bno055.c **** 
 739:Core/Src/bno055.c **** /*!
 740:Core/Src/bno055.c ****  *  @brief This API reads acceleration data Y values
 741:Core/Src/bno055.c ****  *  from register 0x0A and 0x0B it is a two byte data
 742:Core/Src/bno055.c ****  *
 743:Core/Src/bno055.c ****  *
 744:Core/Src/bno055.c ****  *
 745:Core/Src/bno055.c ****  *
 746:Core/Src/bno055.c ****  *  @param accel_y_s16 : The Y raw data
 747:Core/Src/bno055.c ****  *
 748:Core/Src/bno055.c ****  *
 749:Core/Src/bno055.c ****  *
 750:Core/Src/bno055.c ****  *  @return results of bus communication function
 751:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 752:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 753:Core/Src/bno055.c ****  *
 754:Core/Src/bno055.c ****  *
 755:Core/Src/bno055.c ****  */
 756:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_y(s16 *accel_y_s16)
 757:Core/Src/bno055.c **** {
 1406              		.loc 1 757 1 is_stmt 1 view -0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
 1410              		.loc 1 757 1 is_stmt 0 view .LVU370
 1411 0000 30B5     		push	{r4, r5, lr}
 1412              	.LCFI41:
 1413              		.cfi_def_cfa_offset 12
 1414              		.cfi_offset 4, -12
 1415              		.cfi_offset 5, -8
 1416              		.cfi_offset 14, -4
 1417 0002 83B0     		sub	sp, sp, #12
 1418              	.LCFI42:
 1419              		.cfi_def_cfa_offset 24
 758:Core/Src/bno055.c ****     /* Variable used to return value of
 759:Core/Src/bno055.c ****      * communication routine*/
 760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1420              		.loc 1 760 5 is_stmt 1 view .LVU371
 1421              	.LVL145:
 761:Core/Src/bno055.c **** 
 762:Core/Src/bno055.c ****     /* Array holding the accel y value
 763:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y-LSB
 764:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y-MSB
 765:Core/Src/bno055.c ****      */
 766:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1422              		.loc 1 766 5 view .LVU372
 1423              		.loc 1 766 8 is_stmt 0 view .LVU373
 1424 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 41


 1425 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 767:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1426              		.loc 1 767 5 is_stmt 1 view .LVU374
 1427              	.LVL146:
 768:Core/Src/bno055.c **** 
 769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1428              		.loc 1 770 5 view .LVU375
 1429              		.loc 1 770 18 is_stmt 0 view .LVU376
 1430 000a 134B     		ldr	r3, .L109
 1431 000c 1B68     		ldr	r3, [r3]
 1432              		.loc 1 770 8 view .LVU377
 1433 000e EBB1     		cbz	r3, .L105
 1434 0010 0446     		mov	r4, r0
 771:Core/Src/bno055.c ****     {
 772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 773:Core/Src/bno055.c ****     }
 774:Core/Src/bno055.c ****     else
 775:Core/Src/bno055.c ****     {
 776:Core/Src/bno055.c ****         /*condition check for page, chip id is
 777:Core/Src/bno055.c ****          * available in the page zero*/
 778:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1435              		.loc 1 778 9 is_stmt 1 view .LVU378
 1436              		.loc 1 778 21 is_stmt 0 view .LVU379
 1437 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1438              		.loc 1 778 12 view .LVU380
 1439 0014 A3B9     		cbnz	r3, .L108
 1440              	.LVL147:
 1441              	.L103:
 779:Core/Src/bno055.c ****         {
 780:Core/Src/bno055.c ****             /* Write the page zero*/
 781:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 782:Core/Src/bno055.c ****         }
 783:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1442              		.loc 1 783 53 discriminator 1 view .LVU381
 1443 0016 104B     		ldr	r3, .L109
 1444 0018 1B68     		ldr	r3, [r3]
 1445 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1446              		.loc 1 783 41 discriminator 1 view .LVU382
 1447 001c CBB9     		cbnz	r3, .L106
 1448              	.L104:
 784:Core/Src/bno055.c ****         {
 785:Core/Src/bno055.c ****             /* Read the accel y axis two byte value*/
 786:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1449              		.loc 1 786 13 is_stmt 1 view .LVU383
 1450              		.loc 1 786 32 is_stmt 0 view .LVU384
 1451 001e 0E4B     		ldr	r3, .L109
 1452 0020 1868     		ldr	r0, [r3]
 1453 0022 0569     		ldr	r5, [r0, #16]
 1454              		.loc 1 786 24 view .LVU385
 1455 0024 0223     		movs	r3, #2
 1456 0026 01AA     		add	r2, sp, #4
 1457 0028 0A21     		movs	r1, #10
 1458 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1459 002c A847     		blx	r5
 1460              	.LVL148:
 787:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Y_LSB_VALUEY_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 42


 788:Core/Src/bno055.c ****                                                       data_u8,
 789:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 790:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1461              		.loc 1 790 13 is_stmt 1 view .LVU386
 791:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_LSB_VALUEY);
 792:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1462              		.loc 1 792 13 view .LVU387
 793:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_MSB_VALUEY);
 794:Core/Src/bno055.c ****             *accel_y_s16 =
 1463              		.loc 1 794 13 view .LVU388
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1464              		.loc 1 795 31 is_stmt 0 view .LVU389
 1465 002e 9DF90520 		ldrsb	r2, [sp, #5]
 796:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1466              		.loc 1 796 31 view .LVU390
 1467 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1468              		.loc 1 795 17 view .LVU391
 1469 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 794:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1470              		.loc 1 794 26 view .LVU392
 1471 003a 2380     		strh	r3, [r4]	@ movhi
 1472              	.LVL149:
 1473              	.L102:
 797:Core/Src/bno055.c ****         }
 798:Core/Src/bno055.c ****         else
 799:Core/Src/bno055.c ****         {
 800:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 801:Core/Src/bno055.c ****         }
 802:Core/Src/bno055.c ****     }
 803:Core/Src/bno055.c **** 
 804:Core/Src/bno055.c ****     return com_rslt;
 805:Core/Src/bno055.c **** }
 1474              		.loc 1 805 1 view .LVU393
 1475 003c 03B0     		add	sp, sp, #12
 1476              	.LCFI43:
 1477              		.cfi_remember_state
 1478              		.cfi_def_cfa_offset 12
 1479              		@ sp needed
 1480 003e 30BD     		pop	{r4, r5, pc}
 1481              	.LVL150:
 1482              	.L108:
 1483              	.LCFI44:
 1484              		.cfi_restore_state
 781:Core/Src/bno055.c ****         }
 1485              		.loc 1 781 13 is_stmt 1 view .LVU394
 781:Core/Src/bno055.c ****         }
 1486              		.loc 1 781 23 is_stmt 0 view .LVU395
 1487 0040 0020     		movs	r0, #0
 1488              	.LVL151:
 781:Core/Src/bno055.c ****         }
 1489              		.loc 1 781 23 view .LVU396
 1490 0042 FFF7FEFF 		bl	bno055_write_page_id
 1491              	.LVL152:
 783:Core/Src/bno055.c ****         {
 1492              		.loc 1 783 9 is_stmt 1 view .LVU397
 783:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 43


 1493              		.loc 1 783 12 is_stmt 0 view .LVU398
 1494 0046 0028     		cmp	r0, #0
 1495 0048 E9D0     		beq	.L104
 1496 004a E4E7     		b	.L103
 1497              	.LVL153:
 1498              	.L105:
 772:Core/Src/bno055.c ****     }
 1499              		.loc 1 772 16 view .LVU399
 1500 004c 6FF07E00 		mvn	r0, #126
 1501              	.LVL154:
 772:Core/Src/bno055.c ****     }
 1502              		.loc 1 772 16 view .LVU400
 1503 0050 F4E7     		b	.L102
 1504              	.LVL155:
 1505              	.L106:
 800:Core/Src/bno055.c ****         }
 1506              		.loc 1 800 22 view .LVU401
 1507 0052 4FF0FF30 		mov	r0, #-1
 1508 0056 F1E7     		b	.L102
 1509              	.L110:
 1510              		.align	2
 1511              	.L109:
 1512 0058 00000000 		.word	.LANCHOR0
 1513              		.cfi_endproc
 1514              	.LFE12:
 1516              		.section	.text.bno055_read_accel_z,"ax",%progbits
 1517              		.align	1
 1518              		.global	bno055_read_accel_z
 1519              		.syntax unified
 1520              		.thumb
 1521              		.thumb_func
 1523              	bno055_read_accel_z:
 1524              	.LVL156:
 1525              	.LFB13:
 806:Core/Src/bno055.c **** 
 807:Core/Src/bno055.c **** /*!
 808:Core/Src/bno055.c ****  *  @brief This API reads acceleration data z values
 809:Core/Src/bno055.c ****  *  from register 0x0C and 0x0D it is a two byte data
 810:Core/Src/bno055.c ****  *
 811:Core/Src/bno055.c ****  *
 812:Core/Src/bno055.c ****  *
 813:Core/Src/bno055.c ****  *
 814:Core/Src/bno055.c ****  *  @param accel_z_s16 : The z raw data
 815:Core/Src/bno055.c ****  *
 816:Core/Src/bno055.c ****  *
 817:Core/Src/bno055.c ****  *
 818:Core/Src/bno055.c ****  *  @return results of bus communication function
 819:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 820:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 821:Core/Src/bno055.c ****  *
 822:Core/Src/bno055.c ****  *
 823:Core/Src/bno055.c ****  */
 824:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_z(s16 *accel_z_s16)
 825:Core/Src/bno055.c **** {
 1526              		.loc 1 825 1 is_stmt 1 view -0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc9kYR4Z.s 			page 44


 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 1530              		.loc 1 825 1 is_stmt 0 view .LVU403
 1531 0000 30B5     		push	{r4, r5, lr}
 1532              	.LCFI45:
 1533              		.cfi_def_cfa_offset 12
 1534              		.cfi_offset 4, -12
 1535              		.cfi_offset 5, -8
 1536              		.cfi_offset 14, -4
 1537 0002 83B0     		sub	sp, sp, #12
 1538              	.LCFI46:
 1539              		.cfi_def_cfa_offset 24
 826:Core/Src/bno055.c ****     /* Variable used to return value of
 827:Core/Src/bno055.c ****      * communication routine*/
 828:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1540              		.loc 1 828 5 is_stmt 1 view .LVU404
 1541              	.LVL157:
 829:Core/Src/bno055.c **** 
 830:Core/Src/bno055.c ****     /* Array holding the accel z value
 831:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z-LSB
 832:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z-MSB
 833:Core/Src/bno055.c ****      */
 834:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1542              		.loc 1 834 5 view .LVU405
 1543              		.loc 1 834 8 is_stmt 0 view .LVU406
 1544 0004 0023     		movs	r3, #0
 1545 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 835:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1546              		.loc 1 835 5 is_stmt 1 view .LVU407
 1547              	.LVL158:
 836:Core/Src/bno055.c **** 
 837:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 838:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1548              		.loc 1 838 5 view .LVU408
 1549              		.loc 1 838 18 is_stmt 0 view .LVU409
 1550 000a 134B     		ldr	r3, .L119
 1551 000c 1B68     		ldr	r3, [r3]
 1552              		.loc 1 838 8 view .LVU410
 1553 000e EBB1     		cbz	r3, .L115
 1554 0010 0446     		mov	r4, r0
 839:Core/Src/bno055.c ****     {
 840:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 841:Core/Src/bno055.c ****     }
 842:Core/Src/bno055.c ****     else
 843:Core/Src/bno055.c ****     {
 844:Core/Src/bno055.c ****         /*condition check for page, chip id is
 845:Core/Src/bno055.c ****          * available in the page zero*/
 846:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1555              		.loc 1 846 9 is_stmt 1 view .LVU411
 1556              		.loc 1 846 21 is_stmt 0 view .LVU412
 1557 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1558              		.loc 1 846 12 view .LVU413
 1559 0014 A3B9     		cbnz	r3, .L118
 1560              	.LVL159:
 1561              	.L113:
 847:Core/Src/bno055.c ****         {
 848:Core/Src/bno055.c ****             /* Write the page zero*/
 849:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/cc9kYR4Z.s 			page 45


 850:Core/Src/bno055.c ****         }
 851:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1562              		.loc 1 851 53 discriminator 1 view .LVU414
 1563 0016 104B     		ldr	r3, .L119
 1564 0018 1B68     		ldr	r3, [r3]
 1565 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1566              		.loc 1 851 41 discriminator 1 view .LVU415
 1567 001c CBB9     		cbnz	r3, .L116
 1568              	.L114:
 852:Core/Src/bno055.c ****         {
 853:Core/Src/bno055.c ****             /* Read the accel z axis two byte value*/
 854:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1569              		.loc 1 854 13 is_stmt 1 view .LVU416
 1570              		.loc 1 854 32 is_stmt 0 view .LVU417
 1571 001e 0E4B     		ldr	r3, .L119
 1572 0020 1868     		ldr	r0, [r3]
 1573 0022 0569     		ldr	r5, [r0, #16]
 1574              		.loc 1 854 24 view .LVU418
 1575 0024 0223     		movs	r3, #2
 1576 0026 01AA     		add	r2, sp, #4
 1577 0028 0C21     		movs	r1, #12
 1578 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1579 002c A847     		blx	r5
 1580              	.LVL160:
 855:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Z_LSB_VALUEZ_REG,
 856:Core/Src/bno055.c ****                                                       data_u8,
 857:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 858:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1581              		.loc 1 858 13 is_stmt 1 view .LVU419
 859:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_LSB_VALUEZ);
 860:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1582              		.loc 1 860 13 view .LVU420
 861:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_MSB_VALUEZ);
 862:Core/Src/bno055.c ****             *accel_z_s16 =
 1583              		.loc 1 862 13 view .LVU421
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1584              		.loc 1 863 31 is_stmt 0 view .LVU422
 1585 002e 9DF90520 		ldrsb	r2, [sp, #5]
 864:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1586              		.loc 1 864 31 view .LVU423
 1587 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1588              		.loc 1 863 17 view .LVU424
 1589 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 862:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1590              		.loc 1 862 26 view .LVU425
 1591 003a 2380     		strh	r3, [r4]	@ movhi
 1592              	.LVL161:
 1593              	.L112:
 865:Core/Src/bno055.c ****         }
 866:Core/Src/bno055.c ****         else
 867:Core/Src/bno055.c ****         {
 868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 869:Core/Src/bno055.c ****         }
 870:Core/Src/bno055.c ****     }
 871:Core/Src/bno055.c **** 
 872:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 46


 873:Core/Src/bno055.c **** }
 1594              		.loc 1 873 1 view .LVU426
 1595 003c 03B0     		add	sp, sp, #12
 1596              	.LCFI47:
 1597              		.cfi_remember_state
 1598              		.cfi_def_cfa_offset 12
 1599              		@ sp needed
 1600 003e 30BD     		pop	{r4, r5, pc}
 1601              	.LVL162:
 1602              	.L118:
 1603              	.LCFI48:
 1604              		.cfi_restore_state
 849:Core/Src/bno055.c ****         }
 1605              		.loc 1 849 13 is_stmt 1 view .LVU427
 849:Core/Src/bno055.c ****         }
 1606              		.loc 1 849 23 is_stmt 0 view .LVU428
 1607 0040 0020     		movs	r0, #0
 1608              	.LVL163:
 849:Core/Src/bno055.c ****         }
 1609              		.loc 1 849 23 view .LVU429
 1610 0042 FFF7FEFF 		bl	bno055_write_page_id
 1611              	.LVL164:
 851:Core/Src/bno055.c ****         {
 1612              		.loc 1 851 9 is_stmt 1 view .LVU430
 851:Core/Src/bno055.c ****         {
 1613              		.loc 1 851 12 is_stmt 0 view .LVU431
 1614 0046 0028     		cmp	r0, #0
 1615 0048 E9D0     		beq	.L114
 1616 004a E4E7     		b	.L113
 1617              	.LVL165:
 1618              	.L115:
 840:Core/Src/bno055.c ****     }
 1619              		.loc 1 840 16 view .LVU432
 1620 004c 6FF07E00 		mvn	r0, #126
 1621              	.LVL166:
 840:Core/Src/bno055.c ****     }
 1622              		.loc 1 840 16 view .LVU433
 1623 0050 F4E7     		b	.L112
 1624              	.LVL167:
 1625              	.L116:
 868:Core/Src/bno055.c ****         }
 1626              		.loc 1 868 22 view .LVU434
 1627 0052 4FF0FF30 		mov	r0, #-1
 1628 0056 F1E7     		b	.L112
 1629              	.L120:
 1630              		.align	2
 1631              	.L119:
 1632 0058 00000000 		.word	.LANCHOR0
 1633              		.cfi_endproc
 1634              	.LFE13:
 1636              		.section	.text.bno055_read_accel_xyz,"ax",%progbits
 1637              		.align	1
 1638              		.global	bno055_read_accel_xyz
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1643              	bno055_read_accel_xyz:
ARM GAS  /tmp/cc9kYR4Z.s 			page 47


 1644              	.LVL168:
 1645              	.LFB14:
 874:Core/Src/bno055.c **** 
 875:Core/Src/bno055.c **** /*!
 876:Core/Src/bno055.c ****  *  @brief This API reads acceleration data xyz values
 877:Core/Src/bno055.c ****  *  from register 0x08 to 0x0D it is a six byte data
 878:Core/Src/bno055.c ****  *
 879:Core/Src/bno055.c ****  *
 880:Core/Src/bno055.c ****  *  @param accel : The value of accel xyz data
 881:Core/Src/bno055.c ****  *
 882:Core/Src/bno055.c ****  *  Parameter |    result
 883:Core/Src/bno055.c ****  *  --------- | -----------------
 884:Core/Src/bno055.c ****  *   x        | The accel x data
 885:Core/Src/bno055.c ****  *   y        | The accel y data
 886:Core/Src/bno055.c ****  *   z        | The accel z data
 887:Core/Src/bno055.c ****  *
 888:Core/Src/bno055.c ****  *
 889:Core/Src/bno055.c ****  *
 890:Core/Src/bno055.c ****  *  @return results of bus communication function
 891:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 892:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 893:Core/Src/bno055.c ****  *
 894:Core/Src/bno055.c ****  */
 895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_xyz(struct bno055_accel_t *accel)
 896:Core/Src/bno055.c **** {
 1646              		.loc 1 896 1 is_stmt 1 view -0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 8
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              		.loc 1 896 1 is_stmt 0 view .LVU436
 1651 0000 30B5     		push	{r4, r5, lr}
 1652              	.LCFI49:
 1653              		.cfi_def_cfa_offset 12
 1654              		.cfi_offset 4, -12
 1655              		.cfi_offset 5, -8
 1656              		.cfi_offset 14, -4
 1657 0002 83B0     		sub	sp, sp, #12
 1658              	.LCFI50:
 1659              		.cfi_def_cfa_offset 24
 1660 0004 0446     		mov	r4, r0
 897:Core/Src/bno055.c ****     /* Variable used to return value of
 898:Core/Src/bno055.c ****      * communication routine*/
 899:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1661              		.loc 1 899 5 is_stmt 1 view .LVU437
 1662              	.LVL169:
 900:Core/Src/bno055.c **** 
 901:Core/Src/bno055.c ****     /* Array holding the accel xyz value
 902:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
 903:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
 904:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
 905:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
 906:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
 907:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
 908:Core/Src/bno055.c ****      */
 909:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 1663              		.loc 1 909 5 view .LVU438
 1664              		.loc 1 909 8 is_stmt 0 view .LVU439
ARM GAS  /tmp/cc9kYR4Z.s 			page 48


 1665 0006 1D4B     		ldr	r3, .L129
 1666 0008 93E80300 		ldm	r3, {r0, r1}
 1667              	.LVL170:
 1668              		.loc 1 909 8 view .LVU440
 1669 000c 0090     		str	r0, [sp]
 1670 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
 910:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
 911:Core/Src/bno055.c ****     };
 912:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1671              		.loc 1 912 5 is_stmt 1 view .LVU441
 1672              	.LVL171:
 913:Core/Src/bno055.c **** 
 914:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 915:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1673              		.loc 1 915 5 view .LVU442
 1674              		.loc 1 915 18 is_stmt 0 view .LVU443
 1675 0012 1B4B     		ldr	r3, .L129+4
 1676 0014 1B68     		ldr	r3, [r3]
 1677              		.loc 1 915 8 view .LVU444
 1678 0016 53B3     		cbz	r3, .L125
 916:Core/Src/bno055.c ****     {
 917:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 918:Core/Src/bno055.c ****     }
 919:Core/Src/bno055.c ****     else
 920:Core/Src/bno055.c ****     {
 921:Core/Src/bno055.c ****         /*condition check for page, chip id is
 922:Core/Src/bno055.c ****          * available in the page zero*/
 923:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1679              		.loc 1 923 9 is_stmt 1 view .LVU445
 1680              		.loc 1 923 21 is_stmt 0 view .LVU446
 1681 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1682              		.loc 1 923 12 view .LVU447
 1683 001a 13BB     		cbnz	r3, .L128
 1684              	.LVL172:
 1685              	.L123:
 924:Core/Src/bno055.c ****         {
 925:Core/Src/bno055.c ****             /* Write the page zero*/
 926:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 927:Core/Src/bno055.c ****         }
 928:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1686              		.loc 1 928 53 discriminator 1 view .LVU448
 1687 001c 184B     		ldr	r3, .L129+4
 1688 001e 1B68     		ldr	r3, [r3]
 1689 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1690              		.loc 1 928 41 discriminator 1 view .LVU449
 1691 0022 3BBB     		cbnz	r3, .L126
 1692              	.L124:
 929:Core/Src/bno055.c ****         {
 930:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1693              		.loc 1 930 13 is_stmt 1 view .LVU450
 1694              		.loc 1 930 32 is_stmt 0 view .LVU451
 1695 0024 164B     		ldr	r3, .L129+4
 1696 0026 1868     		ldr	r0, [r3]
 1697 0028 0569     		ldr	r5, [r0, #16]
 1698              		.loc 1 930 24 view .LVU452
 1699 002a 0623     		movs	r3, #6
 1700 002c 6A46     		mov	r2, sp
ARM GAS  /tmp/cc9kYR4Z.s 			page 49


 1701 002e 0821     		movs	r1, #8
 1702 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1703 0032 A847     		blx	r5
 1704              	.LVL173:
 931:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 932:Core/Src/bno055.c ****                                                       data_u8,
 933:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
 934:Core/Src/bno055.c **** 
 935:Core/Src/bno055.c ****             /* Data X*/
 936:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1705              		.loc 1 936 13 is_stmt 1 view .LVU453
 937:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_LSB_VAL
 938:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1706              		.loc 1 938 13 view .LVU454
 939:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_MSB_VAL
 940:Core/Src/bno055.c ****             accel->x =
 1707              		.loc 1 940 13 view .LVU455
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1708              		.loc 1 941 31 is_stmt 0 view .LVU456
 1709 0034 9DF90120 		ldrsb	r2, [sp, #1]
 942:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 1710              		.loc 1 942 31 view .LVU457
 1711 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1712              		.loc 1 941 17 view .LVU458
 1713 003c 43EA0223 		orr	r3, r3, r2, lsl #8
 940:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1714              		.loc 1 940 22 view .LVU459
 1715 0040 2380     		strh	r3, [r4]	@ movhi
 943:Core/Src/bno055.c **** 
 944:Core/Src/bno055.c ****             /* Data Y*/
 945:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1716              		.loc 1 945 13 is_stmt 1 view .LVU460
 946:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_LSB_VAL
 947:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1717              		.loc 1 947 13 view .LVU461
 948:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_MSB_VAL
 949:Core/Src/bno055.c ****             accel->y =
 1718              		.loc 1 949 13 view .LVU462
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1719              		.loc 1 950 31 is_stmt 0 view .LVU463
 1720 0042 9DF90320 		ldrsb	r2, [sp, #3]
 951:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 1721              		.loc 1 951 31 view .LVU464
 1722 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1723              		.loc 1 950 17 view .LVU465
 1724 004a 43EA0223 		orr	r3, r3, r2, lsl #8
 949:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1725              		.loc 1 949 22 view .LVU466
 1726 004e 6380     		strh	r3, [r4, #2]	@ movhi
 952:Core/Src/bno055.c **** 
 953:Core/Src/bno055.c ****             /* Data Z*/
 954:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1727              		.loc 1 954 13 is_stmt 1 view .LVU467
 955:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_LSB_VAL
 956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
ARM GAS  /tmp/cc9kYR4Z.s 			page 50


 1728              		.loc 1 956 13 view .LVU468
 957:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_MSB_VAL
 958:Core/Src/bno055.c ****             accel->z =
 1729              		.loc 1 958 13 view .LVU469
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1730              		.loc 1 959 31 is_stmt 0 view .LVU470
 1731 0050 9DF90520 		ldrsb	r2, [sp, #5]
 960:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 1732              		.loc 1 960 31 view .LVU471
 1733 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1734              		.loc 1 959 17 view .LVU472
 1735 0058 43EA0223 		orr	r3, r3, r2, lsl #8
 958:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1736              		.loc 1 958 22 view .LVU473
 1737 005c A380     		strh	r3, [r4, #4]	@ movhi
 1738              	.LVL174:
 1739              	.L122:
 961:Core/Src/bno055.c ****         }
 962:Core/Src/bno055.c ****         else
 963:Core/Src/bno055.c ****         {
 964:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 965:Core/Src/bno055.c ****         }
 966:Core/Src/bno055.c ****     }
 967:Core/Src/bno055.c **** 
 968:Core/Src/bno055.c ****     return com_rslt;
 969:Core/Src/bno055.c **** }
 1740              		.loc 1 969 1 view .LVU474
 1741 005e 03B0     		add	sp, sp, #12
 1742              	.LCFI51:
 1743              		.cfi_remember_state
 1744              		.cfi_def_cfa_offset 12
 1745              		@ sp needed
 1746 0060 30BD     		pop	{r4, r5, pc}
 1747              	.LVL175:
 1748              	.L128:
 1749              	.LCFI52:
 1750              		.cfi_restore_state
 926:Core/Src/bno055.c ****         }
 1751              		.loc 1 926 13 is_stmt 1 view .LVU475
 926:Core/Src/bno055.c ****         }
 1752              		.loc 1 926 23 is_stmt 0 view .LVU476
 1753 0062 0020     		movs	r0, #0
 1754 0064 FFF7FEFF 		bl	bno055_write_page_id
 1755              	.LVL176:
 928:Core/Src/bno055.c ****         {
 1756              		.loc 1 928 9 is_stmt 1 view .LVU477
 928:Core/Src/bno055.c ****         {
 1757              		.loc 1 928 12 is_stmt 0 view .LVU478
 1758 0068 0028     		cmp	r0, #0
 1759 006a DBD0     		beq	.L124
 1760 006c D6E7     		b	.L123
 1761              	.LVL177:
 1762              	.L125:
 917:Core/Src/bno055.c ****     }
 1763              		.loc 1 917 16 view .LVU479
 1764 006e 6FF07E00 		mvn	r0, #126
ARM GAS  /tmp/cc9kYR4Z.s 			page 51


 1765 0072 F4E7     		b	.L122
 1766              	.LVL178:
 1767              	.L126:
 964:Core/Src/bno055.c ****         }
 1768              		.loc 1 964 22 view .LVU480
 1769 0074 4FF0FF30 		mov	r0, #-1
 1770 0078 F1E7     		b	.L122
 1771              	.L130:
 1772 007a 00BF     		.align	2
 1773              	.L129:
 1774 007c 00000000 		.word	.LANCHOR1
 1775 0080 00000000 		.word	.LANCHOR0
 1776              		.cfi_endproc
 1777              	.LFE14:
 1779              		.section	.text.bno055_read_mag_x,"ax",%progbits
 1780              		.align	1
 1781              		.global	bno055_read_mag_x
 1782              		.syntax unified
 1783              		.thumb
 1784              		.thumb_func
 1786              	bno055_read_mag_x:
 1787              	.LVL179:
 1788              	.LFB15:
 970:Core/Src/bno055.c **** 
 971:Core/Src/bno055.c **** /*!
 972:Core/Src/bno055.c ****  *  @brief This API reads mag data x values
 973:Core/Src/bno055.c ****  *  from register 0x0E and 0x0F it is a two byte data
 974:Core/Src/bno055.c ****  *
 975:Core/Src/bno055.c ****  *
 976:Core/Src/bno055.c ****  *
 977:Core/Src/bno055.c ****  *
 978:Core/Src/bno055.c ****  *  @param mag_x_s16 : The x raw data
 979:Core/Src/bno055.c ****  *
 980:Core/Src/bno055.c ****  *
 981:Core/Src/bno055.c ****  *
 982:Core/Src/bno055.c ****  *  @return results of bus communication function
 983:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 984:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 985:Core/Src/bno055.c ****  *
 986:Core/Src/bno055.c ****  *
 987:Core/Src/bno055.c ****  *
 988:Core/Src/bno055.c ****  */
 989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_x(s16 *mag_x_s16)
 990:Core/Src/bno055.c **** {
 1789              		.loc 1 990 1 is_stmt 1 view -0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 8
 1792              		@ frame_needed = 0, uses_anonymous_args = 0
 1793              		.loc 1 990 1 is_stmt 0 view .LVU482
 1794 0000 30B5     		push	{r4, r5, lr}
 1795              	.LCFI53:
 1796              		.cfi_def_cfa_offset 12
 1797              		.cfi_offset 4, -12
 1798              		.cfi_offset 5, -8
 1799              		.cfi_offset 14, -4
 1800 0002 83B0     		sub	sp, sp, #12
 1801              	.LCFI54:
ARM GAS  /tmp/cc9kYR4Z.s 			page 52


 1802              		.cfi_def_cfa_offset 24
 991:Core/Src/bno055.c ****     /* Variable used to return value of
 992:Core/Src/bno055.c ****      * communication routine*/
 993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1803              		.loc 1 993 5 is_stmt 1 view .LVU483
 1804              	.LVL180:
 994:Core/Src/bno055.c **** 
 995:Core/Src/bno055.c ****     /* Array holding the mag x value
 996:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
 997:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
 998:Core/Src/bno055.c ****      */
 999:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1805              		.loc 1 999 5 view .LVU484
 1806              		.loc 1 999 8 is_stmt 0 view .LVU485
 1807 0004 0023     		movs	r3, #0
 1808 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1000:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1809              		.loc 1 1000 5 is_stmt 1 view .LVU486
 1810              	.LVL181:
1001:Core/Src/bno055.c **** 
1002:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1003:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1811              		.loc 1 1003 5 view .LVU487
 1812              		.loc 1 1003 18 is_stmt 0 view .LVU488
 1813 000a 134B     		ldr	r3, .L139
 1814 000c 1B68     		ldr	r3, [r3]
 1815              		.loc 1 1003 8 view .LVU489
 1816 000e EBB1     		cbz	r3, .L135
 1817 0010 0446     		mov	r4, r0
1004:Core/Src/bno055.c ****     {
1005:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1006:Core/Src/bno055.c ****     }
1007:Core/Src/bno055.c ****     else
1008:Core/Src/bno055.c ****     {
1009:Core/Src/bno055.c ****         /*condition check for page, chip id is
1010:Core/Src/bno055.c ****          * available in the page zero*/
1011:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1818              		.loc 1 1011 9 is_stmt 1 view .LVU490
 1819              		.loc 1 1011 21 is_stmt 0 view .LVU491
 1820 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1821              		.loc 1 1011 12 view .LVU492
 1822 0014 A3B9     		cbnz	r3, .L138
 1823              	.LVL182:
 1824              	.L133:
1012:Core/Src/bno055.c ****         {
1013:Core/Src/bno055.c ****             /* Write the page zero*/
1014:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1015:Core/Src/bno055.c ****         }
1016:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1825              		.loc 1 1016 53 discriminator 1 view .LVU493
 1826 0016 104B     		ldr	r3, .L139
 1827 0018 1B68     		ldr	r3, [r3]
 1828 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1829              		.loc 1 1016 41 discriminator 1 view .LVU494
 1830 001c CBB9     		cbnz	r3, .L136
 1831              	.L134:
1017:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 53


1018:Core/Src/bno055.c ****             /*Read the mag x two bytes of data */
1019:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1832              		.loc 1 1019 13 is_stmt 1 view .LVU495
 1833              		.loc 1 1019 32 is_stmt 0 view .LVU496
 1834 001e 0E4B     		ldr	r3, .L139
 1835 0020 1868     		ldr	r0, [r3]
 1836 0022 0569     		ldr	r5, [r0, #16]
 1837              		.loc 1 1019 24 view .LVU497
 1838 0024 0223     		movs	r3, #2
 1839 0026 01AA     		add	r2, sp, #4
 1840 0028 0E21     		movs	r1, #14
 1841 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1842 002c A847     		blx	r5
 1843              	.LVL183:
1020:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1021:Core/Src/bno055.c ****                                                       data_u8,
1022:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1023:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1844              		.loc 1 1023 13 is_stmt 1 view .LVU498
1024:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_LSB_VALUEX);
1025:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1845              		.loc 1 1025 13 view .LVU499
1026:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_MSB_VALUEX);
1027:Core/Src/bno055.c ****             *mag_x_s16 =
 1846              		.loc 1 1027 13 view .LVU500
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1847              		.loc 1 1028 31 is_stmt 0 view .LVU501
 1848 002e 9DF90520 		ldrsb	r2, [sp, #5]
1029:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1849              		.loc 1 1029 31 view .LVU502
 1850 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1851              		.loc 1 1028 17 view .LVU503
 1852 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1027:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1853              		.loc 1 1027 24 view .LVU504
 1854 003a 2380     		strh	r3, [r4]	@ movhi
 1855              	.LVL184:
 1856              	.L132:
1030:Core/Src/bno055.c ****         }
1031:Core/Src/bno055.c ****         else
1032:Core/Src/bno055.c ****         {
1033:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1034:Core/Src/bno055.c ****         }
1035:Core/Src/bno055.c ****     }
1036:Core/Src/bno055.c **** 
1037:Core/Src/bno055.c ****     return com_rslt;
1038:Core/Src/bno055.c **** }
 1857              		.loc 1 1038 1 view .LVU505
 1858 003c 03B0     		add	sp, sp, #12
 1859              	.LCFI55:
 1860              		.cfi_remember_state
 1861              		.cfi_def_cfa_offset 12
 1862              		@ sp needed
 1863 003e 30BD     		pop	{r4, r5, pc}
 1864              	.LVL185:
 1865              	.L138:
ARM GAS  /tmp/cc9kYR4Z.s 			page 54


 1866              	.LCFI56:
 1867              		.cfi_restore_state
1014:Core/Src/bno055.c ****         }
 1868              		.loc 1 1014 13 is_stmt 1 view .LVU506
1014:Core/Src/bno055.c ****         }
 1869              		.loc 1 1014 23 is_stmt 0 view .LVU507
 1870 0040 0020     		movs	r0, #0
 1871              	.LVL186:
1014:Core/Src/bno055.c ****         }
 1872              		.loc 1 1014 23 view .LVU508
 1873 0042 FFF7FEFF 		bl	bno055_write_page_id
 1874              	.LVL187:
1016:Core/Src/bno055.c ****         {
 1875              		.loc 1 1016 9 is_stmt 1 view .LVU509
1016:Core/Src/bno055.c ****         {
 1876              		.loc 1 1016 12 is_stmt 0 view .LVU510
 1877 0046 0028     		cmp	r0, #0
 1878 0048 E9D0     		beq	.L134
 1879 004a E4E7     		b	.L133
 1880              	.LVL188:
 1881              	.L135:
1005:Core/Src/bno055.c ****     }
 1882              		.loc 1 1005 16 view .LVU511
 1883 004c 6FF07E00 		mvn	r0, #126
 1884              	.LVL189:
1005:Core/Src/bno055.c ****     }
 1885              		.loc 1 1005 16 view .LVU512
 1886 0050 F4E7     		b	.L132
 1887              	.LVL190:
 1888              	.L136:
1033:Core/Src/bno055.c ****         }
 1889              		.loc 1 1033 22 view .LVU513
 1890 0052 4FF0FF30 		mov	r0, #-1
 1891 0056 F1E7     		b	.L132
 1892              	.L140:
 1893              		.align	2
 1894              	.L139:
 1895 0058 00000000 		.word	.LANCHOR0
 1896              		.cfi_endproc
 1897              	.LFE15:
 1899              		.section	.text.bno055_read_mag_y,"ax",%progbits
 1900              		.align	1
 1901              		.global	bno055_read_mag_y
 1902              		.syntax unified
 1903              		.thumb
 1904              		.thumb_func
 1906              	bno055_read_mag_y:
 1907              	.LVL191:
 1908              	.LFB16:
1039:Core/Src/bno055.c **** 
1040:Core/Src/bno055.c **** /*!
1041:Core/Src/bno055.c ****  *  @brief This API reads mag data y values
1042:Core/Src/bno055.c ****  *  from register 0x10 and 0x11 it is a two byte data
1043:Core/Src/bno055.c ****  *
1044:Core/Src/bno055.c ****  *
1045:Core/Src/bno055.c ****  *
1046:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 55


1047:Core/Src/bno055.c ****  *  @param mag_y_s16 : The y raw data
1048:Core/Src/bno055.c ****  *
1049:Core/Src/bno055.c ****  *
1050:Core/Src/bno055.c ****  *
1051:Core/Src/bno055.c ****  *  @return results of bus communication function
1052:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1053:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1054:Core/Src/bno055.c ****  *
1055:Core/Src/bno055.c ****  *
1056:Core/Src/bno055.c ****  */
1057:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_y(s16 *mag_y_s16)
1058:Core/Src/bno055.c **** {
 1909              		.loc 1 1058 1 is_stmt 1 view -0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 8
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              		.loc 1 1058 1 is_stmt 0 view .LVU515
 1914 0000 30B5     		push	{r4, r5, lr}
 1915              	.LCFI57:
 1916              		.cfi_def_cfa_offset 12
 1917              		.cfi_offset 4, -12
 1918              		.cfi_offset 5, -8
 1919              		.cfi_offset 14, -4
 1920 0002 83B0     		sub	sp, sp, #12
 1921              	.LCFI58:
 1922              		.cfi_def_cfa_offset 24
1059:Core/Src/bno055.c ****     /* Variable used to return value of
1060:Core/Src/bno055.c ****      * communication routine*/
1061:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1923              		.loc 1 1061 5 is_stmt 1 view .LVU516
 1924              	.LVL192:
1062:Core/Src/bno055.c **** 
1063:Core/Src/bno055.c ****     /* Array holding the mag y value
1064:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
1065:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
1066:Core/Src/bno055.c ****      */
1067:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1925              		.loc 1 1067 5 view .LVU517
 1926              		.loc 1 1067 8 is_stmt 0 view .LVU518
 1927 0004 0023     		movs	r3, #0
 1928 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1068:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1929              		.loc 1 1068 5 is_stmt 1 view .LVU519
 1930              	.LVL193:
1069:Core/Src/bno055.c **** 
1070:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1071:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1931              		.loc 1 1071 5 view .LVU520
 1932              		.loc 1 1071 18 is_stmt 0 view .LVU521
 1933 000a 134B     		ldr	r3, .L149
 1934 000c 1B68     		ldr	r3, [r3]
 1935              		.loc 1 1071 8 view .LVU522
 1936 000e EBB1     		cbz	r3, .L145
 1937 0010 0446     		mov	r4, r0
1072:Core/Src/bno055.c ****     {
1073:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1074:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 56


1075:Core/Src/bno055.c ****     else
1076:Core/Src/bno055.c ****     {
1077:Core/Src/bno055.c ****         /*condition check for page, chip id is
1078:Core/Src/bno055.c ****          * available in the page zero*/
1079:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1938              		.loc 1 1079 9 is_stmt 1 view .LVU523
 1939              		.loc 1 1079 21 is_stmt 0 view .LVU524
 1940 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1941              		.loc 1 1079 12 view .LVU525
 1942 0014 A3B9     		cbnz	r3, .L148
 1943              	.LVL194:
 1944              	.L143:
1080:Core/Src/bno055.c ****         {
1081:Core/Src/bno055.c ****             /* Write the page zero*/
1082:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1083:Core/Src/bno055.c ****         }
1084:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1945              		.loc 1 1084 53 discriminator 1 view .LVU526
 1946 0016 104B     		ldr	r3, .L149
 1947 0018 1B68     		ldr	r3, [r3]
 1948 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1949              		.loc 1 1084 41 discriminator 1 view .LVU527
 1950 001c CBB9     		cbnz	r3, .L146
 1951              	.L144:
1085:Core/Src/bno055.c ****         {
1086:Core/Src/bno055.c ****             /*Read the mag y two bytes of data */
1087:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1952              		.loc 1 1087 13 is_stmt 1 view .LVU528
 1953              		.loc 1 1087 32 is_stmt 0 view .LVU529
 1954 001e 0E4B     		ldr	r3, .L149
 1955 0020 1868     		ldr	r0, [r3]
 1956 0022 0569     		ldr	r5, [r0, #16]
 1957              		.loc 1 1087 24 view .LVU530
 1958 0024 0223     		movs	r3, #2
 1959 0026 01AA     		add	r2, sp, #4
 1960 0028 1021     		movs	r1, #16
 1961 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1962 002c A847     		blx	r5
 1963              	.LVL195:
1088:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Y_LSB_VALUEY_REG,
1089:Core/Src/bno055.c ****                                                       data_u8,
1090:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1091:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1964              		.loc 1 1091 13 is_stmt 1 view .LVU531
1092:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_LSB_VALUEY);
1093:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1965              		.loc 1 1093 13 view .LVU532
1094:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_MSB_VALUEY);
1095:Core/Src/bno055.c ****             *mag_y_s16 =
 1966              		.loc 1 1095 13 view .LVU533
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1967              		.loc 1 1096 31 is_stmt 0 view .LVU534
 1968 002e 9DF90520 		ldrsb	r2, [sp, #5]
1097:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1969              		.loc 1 1097 31 view .LVU535
 1970 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
ARM GAS  /tmp/cc9kYR4Z.s 			page 57


 1971              		.loc 1 1096 17 view .LVU536
 1972 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1095:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1973              		.loc 1 1095 24 view .LVU537
 1974 003a 2380     		strh	r3, [r4]	@ movhi
 1975              	.LVL196:
 1976              	.L142:
1098:Core/Src/bno055.c ****         }
1099:Core/Src/bno055.c ****         else
1100:Core/Src/bno055.c ****         {
1101:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1102:Core/Src/bno055.c ****         }
1103:Core/Src/bno055.c ****     }
1104:Core/Src/bno055.c **** 
1105:Core/Src/bno055.c ****     return com_rslt;
1106:Core/Src/bno055.c **** }
 1977              		.loc 1 1106 1 view .LVU538
 1978 003c 03B0     		add	sp, sp, #12
 1979              	.LCFI59:
 1980              		.cfi_remember_state
 1981              		.cfi_def_cfa_offset 12
 1982              		@ sp needed
 1983 003e 30BD     		pop	{r4, r5, pc}
 1984              	.LVL197:
 1985              	.L148:
 1986              	.LCFI60:
 1987              		.cfi_restore_state
1082:Core/Src/bno055.c ****         }
 1988              		.loc 1 1082 13 is_stmt 1 view .LVU539
1082:Core/Src/bno055.c ****         }
 1989              		.loc 1 1082 23 is_stmt 0 view .LVU540
 1990 0040 0020     		movs	r0, #0
 1991              	.LVL198:
1082:Core/Src/bno055.c ****         }
 1992              		.loc 1 1082 23 view .LVU541
 1993 0042 FFF7FEFF 		bl	bno055_write_page_id
 1994              	.LVL199:
1084:Core/Src/bno055.c ****         {
 1995              		.loc 1 1084 9 is_stmt 1 view .LVU542
1084:Core/Src/bno055.c ****         {
 1996              		.loc 1 1084 12 is_stmt 0 view .LVU543
 1997 0046 0028     		cmp	r0, #0
 1998 0048 E9D0     		beq	.L144
 1999 004a E4E7     		b	.L143
 2000              	.LVL200:
 2001              	.L145:
1073:Core/Src/bno055.c ****     }
 2002              		.loc 1 1073 16 view .LVU544
 2003 004c 6FF07E00 		mvn	r0, #126
 2004              	.LVL201:
1073:Core/Src/bno055.c ****     }
 2005              		.loc 1 1073 16 view .LVU545
 2006 0050 F4E7     		b	.L142
 2007              	.LVL202:
 2008              	.L146:
1101:Core/Src/bno055.c ****         }
 2009              		.loc 1 1101 22 view .LVU546
ARM GAS  /tmp/cc9kYR4Z.s 			page 58


 2010 0052 4FF0FF30 		mov	r0, #-1
 2011 0056 F1E7     		b	.L142
 2012              	.L150:
 2013              		.align	2
 2014              	.L149:
 2015 0058 00000000 		.word	.LANCHOR0
 2016              		.cfi_endproc
 2017              	.LFE16:
 2019              		.section	.text.bno055_read_mag_z,"ax",%progbits
 2020              		.align	1
 2021              		.global	bno055_read_mag_z
 2022              		.syntax unified
 2023              		.thumb
 2024              		.thumb_func
 2026              	bno055_read_mag_z:
 2027              	.LVL203:
 2028              	.LFB17:
1107:Core/Src/bno055.c **** 
1108:Core/Src/bno055.c **** /*!
1109:Core/Src/bno055.c ****  *  @brief This API reads mag data z values
1110:Core/Src/bno055.c ****  *  from register 0x12 and 0x13 it is a two byte data
1111:Core/Src/bno055.c ****  *
1112:Core/Src/bno055.c ****  *
1113:Core/Src/bno055.c ****  *
1114:Core/Src/bno055.c ****  *
1115:Core/Src/bno055.c ****  *  @param mag_z_s16 : The z raw data
1116:Core/Src/bno055.c ****  *
1117:Core/Src/bno055.c ****  *
1118:Core/Src/bno055.c ****  *
1119:Core/Src/bno055.c ****  *  @return results of bus communication function
1120:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1121:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1122:Core/Src/bno055.c ****  *
1123:Core/Src/bno055.c ****  *
1124:Core/Src/bno055.c ****  *
1125:Core/Src/bno055.c ****  */
1126:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_z(s16 *mag_z_s16)
1127:Core/Src/bno055.c **** {
 2029              		.loc 1 1127 1 is_stmt 1 view -0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 8
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
 2033              		.loc 1 1127 1 is_stmt 0 view .LVU548
 2034 0000 30B5     		push	{r4, r5, lr}
 2035              	.LCFI61:
 2036              		.cfi_def_cfa_offset 12
 2037              		.cfi_offset 4, -12
 2038              		.cfi_offset 5, -8
 2039              		.cfi_offset 14, -4
 2040 0002 83B0     		sub	sp, sp, #12
 2041              	.LCFI62:
 2042              		.cfi_def_cfa_offset 24
1128:Core/Src/bno055.c ****     /* Variable used to return value of
1129:Core/Src/bno055.c ****      * communication routine*/
1130:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2043              		.loc 1 1130 5 is_stmt 1 view .LVU549
 2044              	.LVL204:
ARM GAS  /tmp/cc9kYR4Z.s 			page 59


1131:Core/Src/bno055.c **** 
1132:Core/Src/bno055.c ****     /* Array holding the mag z value
1133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
1134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
1135:Core/Src/bno055.c ****      */
1136:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2045              		.loc 1 1136 5 view .LVU550
 2046              		.loc 1 1136 8 is_stmt 0 view .LVU551
 2047 0004 0023     		movs	r3, #0
 2048 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2049              		.loc 1 1137 5 is_stmt 1 view .LVU552
 2050              	.LVL205:
1138:Core/Src/bno055.c **** 
1139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2051              		.loc 1 1140 5 view .LVU553
 2052              		.loc 1 1140 18 is_stmt 0 view .LVU554
 2053 000a 134B     		ldr	r3, .L159
 2054 000c 1B68     		ldr	r3, [r3]
 2055              		.loc 1 1140 8 view .LVU555
 2056 000e EBB1     		cbz	r3, .L155
 2057 0010 0446     		mov	r4, r0
1141:Core/Src/bno055.c ****     {
1142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1143:Core/Src/bno055.c ****     }
1144:Core/Src/bno055.c ****     else
1145:Core/Src/bno055.c ****     {
1146:Core/Src/bno055.c ****         /*condition check for page, chip id is
1147:Core/Src/bno055.c ****          * available in the page zero*/
1148:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2058              		.loc 1 1148 9 is_stmt 1 view .LVU556
 2059              		.loc 1 1148 21 is_stmt 0 view .LVU557
 2060 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2061              		.loc 1 1148 12 view .LVU558
 2062 0014 A3B9     		cbnz	r3, .L158
 2063              	.LVL206:
 2064              	.L153:
1149:Core/Src/bno055.c ****         {
1150:Core/Src/bno055.c ****             /* Write the page zero*/
1151:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1152:Core/Src/bno055.c ****         }
1153:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2065              		.loc 1 1153 53 discriminator 1 view .LVU559
 2066 0016 104B     		ldr	r3, .L159
 2067 0018 1B68     		ldr	r3, [r3]
 2068 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2069              		.loc 1 1153 41 discriminator 1 view .LVU560
 2070 001c CBB9     		cbnz	r3, .L156
 2071              	.L154:
1154:Core/Src/bno055.c ****         {
1155:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2072              		.loc 1 1155 13 is_stmt 1 view .LVU561
 2073              		.loc 1 1155 32 is_stmt 0 view .LVU562
 2074 001e 0E4B     		ldr	r3, .L159
 2075 0020 1868     		ldr	r0, [r3]
 2076 0022 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/cc9kYR4Z.s 			page 60


 2077              		.loc 1 1155 24 view .LVU563
 2078 0024 0223     		movs	r3, #2
 2079 0026 01AA     		add	r2, sp, #4
 2080 0028 1221     		movs	r1, #18
 2081 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2082 002c A847     		blx	r5
 2083              	.LVL207:
1156:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Z_LSB_VALUEZ_REG,
1157:Core/Src/bno055.c ****                                                       data_u8,
1158:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1159:Core/Src/bno055.c **** 
1160:Core/Src/bno055.c ****             /*Read the mag z two bytes of data */
1161:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2084              		.loc 1 1161 13 is_stmt 1 view .LVU564
1162:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_LSB_VALUEZ);
1163:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2085              		.loc 1 1163 13 view .LVU565
1164:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_MSB_VALUEZ);
1165:Core/Src/bno055.c ****             *mag_z_s16 =
 2086              		.loc 1 1165 13 view .LVU566
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2087              		.loc 1 1166 31 is_stmt 0 view .LVU567
 2088 002e 9DF90520 		ldrsb	r2, [sp, #5]
1167:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2089              		.loc 1 1167 31 view .LVU568
 2090 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2091              		.loc 1 1166 17 view .LVU569
 2092 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1165:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2093              		.loc 1 1165 24 view .LVU570
 2094 003a 2380     		strh	r3, [r4]	@ movhi
 2095              	.LVL208:
 2096              	.L152:
1168:Core/Src/bno055.c ****         }
1169:Core/Src/bno055.c ****         else
1170:Core/Src/bno055.c ****         {
1171:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1172:Core/Src/bno055.c ****         }
1173:Core/Src/bno055.c ****     }
1174:Core/Src/bno055.c **** 
1175:Core/Src/bno055.c ****     return com_rslt;
1176:Core/Src/bno055.c **** }
 2097              		.loc 1 1176 1 view .LVU571
 2098 003c 03B0     		add	sp, sp, #12
 2099              	.LCFI63:
 2100              		.cfi_remember_state
 2101              		.cfi_def_cfa_offset 12
 2102              		@ sp needed
 2103 003e 30BD     		pop	{r4, r5, pc}
 2104              	.LVL209:
 2105              	.L158:
 2106              	.LCFI64:
 2107              		.cfi_restore_state
1151:Core/Src/bno055.c ****         }
 2108              		.loc 1 1151 13 is_stmt 1 view .LVU572
1151:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 61


 2109              		.loc 1 1151 23 is_stmt 0 view .LVU573
 2110 0040 0020     		movs	r0, #0
 2111              	.LVL210:
1151:Core/Src/bno055.c ****         }
 2112              		.loc 1 1151 23 view .LVU574
 2113 0042 FFF7FEFF 		bl	bno055_write_page_id
 2114              	.LVL211:
1153:Core/Src/bno055.c ****         {
 2115              		.loc 1 1153 9 is_stmt 1 view .LVU575
1153:Core/Src/bno055.c ****         {
 2116              		.loc 1 1153 12 is_stmt 0 view .LVU576
 2117 0046 0028     		cmp	r0, #0
 2118 0048 E9D0     		beq	.L154
 2119 004a E4E7     		b	.L153
 2120              	.LVL212:
 2121              	.L155:
1142:Core/Src/bno055.c ****     }
 2122              		.loc 1 1142 16 view .LVU577
 2123 004c 6FF07E00 		mvn	r0, #126
 2124              	.LVL213:
1142:Core/Src/bno055.c ****     }
 2125              		.loc 1 1142 16 view .LVU578
 2126 0050 F4E7     		b	.L152
 2127              	.LVL214:
 2128              	.L156:
1171:Core/Src/bno055.c ****         }
 2129              		.loc 1 1171 22 view .LVU579
 2130 0052 4FF0FF30 		mov	r0, #-1
 2131 0056 F1E7     		b	.L152
 2132              	.L160:
 2133              		.align	2
 2134              	.L159:
 2135 0058 00000000 		.word	.LANCHOR0
 2136              		.cfi_endproc
 2137              	.LFE17:
 2139              		.section	.text.bno055_read_mag_xyz,"ax",%progbits
 2140              		.align	1
 2141              		.global	bno055_read_mag_xyz
 2142              		.syntax unified
 2143              		.thumb
 2144              		.thumb_func
 2146              	bno055_read_mag_xyz:
 2147              	.LVL215:
 2148              	.LFB18:
1177:Core/Src/bno055.c **** 
1178:Core/Src/bno055.c **** /*!
1179:Core/Src/bno055.c ****  *  @brief This API reads mag data xyz values
1180:Core/Src/bno055.c ****  *  from register 0x0E to 0x13 it is a six byte data
1181:Core/Src/bno055.c ****  *
1182:Core/Src/bno055.c ****  *
1183:Core/Src/bno055.c ****  *  @param mag : The mag xyz values
1184:Core/Src/bno055.c ****  *
1185:Core/Src/bno055.c ****  *  Parameter |    result
1186:Core/Src/bno055.c ****  *  --------- | -----------------
1187:Core/Src/bno055.c ****  *   x        | The mag x data
1188:Core/Src/bno055.c ****  *   y        | The mag y data
1189:Core/Src/bno055.c ****  *   z        | The mag z data
ARM GAS  /tmp/cc9kYR4Z.s 			page 62


1190:Core/Src/bno055.c ****  *
1191:Core/Src/bno055.c ****  *
1192:Core/Src/bno055.c ****  *
1193:Core/Src/bno055.c ****  *  @return results of bus communication function
1194:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1195:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1196:Core/Src/bno055.c ****  *
1197:Core/Src/bno055.c ****  */
1198:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_xyz(struct bno055_mag_t *mag)
1199:Core/Src/bno055.c **** {
 2149              		.loc 1 1199 1 is_stmt 1 view -0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 8
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153              		.loc 1 1199 1 is_stmt 0 view .LVU581
 2154 0000 30B5     		push	{r4, r5, lr}
 2155              	.LCFI65:
 2156              		.cfi_def_cfa_offset 12
 2157              		.cfi_offset 4, -12
 2158              		.cfi_offset 5, -8
 2159              		.cfi_offset 14, -4
 2160 0002 83B0     		sub	sp, sp, #12
 2161              	.LCFI66:
 2162              		.cfi_def_cfa_offset 24
 2163 0004 0446     		mov	r4, r0
1200:Core/Src/bno055.c ****     /* Variable used to return value of
1201:Core/Src/bno055.c ****      * communication routine*/
1202:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2164              		.loc 1 1202 5 is_stmt 1 view .LVU582
 2165              	.LVL216:
1203:Core/Src/bno055.c **** 
1204:Core/Src/bno055.c ****     /* Array holding the mag xyz value
1205:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1206:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1207:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1208:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1209:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
1210:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1211:Core/Src/bno055.c ****      */
1212:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_XYZ_DATA_SIZE] = {
 2166              		.loc 1 1212 5 view .LVU583
 2167              		.loc 1 1212 8 is_stmt 0 view .LVU584
 2168 0006 1D4B     		ldr	r3, .L169
 2169 0008 93E80300 		ldm	r3, {r0, r1}
 2170              	.LVL217:
 2171              		.loc 1 1212 8 view .LVU585
 2172 000c 0090     		str	r0, [sp]
 2173 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1213:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1214:Core/Src/bno055.c ****     };
1215:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2174              		.loc 1 1215 5 is_stmt 1 view .LVU586
 2175              	.LVL218:
1216:Core/Src/bno055.c **** 
1217:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1218:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2176              		.loc 1 1218 5 view .LVU587
ARM GAS  /tmp/cc9kYR4Z.s 			page 63


 2177              		.loc 1 1218 18 is_stmt 0 view .LVU588
 2178 0012 1B4B     		ldr	r3, .L169+4
 2179 0014 1B68     		ldr	r3, [r3]
 2180              		.loc 1 1218 8 view .LVU589
 2181 0016 53B3     		cbz	r3, .L165
1219:Core/Src/bno055.c ****     {
1220:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1221:Core/Src/bno055.c ****     }
1222:Core/Src/bno055.c ****     else
1223:Core/Src/bno055.c ****     {
1224:Core/Src/bno055.c ****         /*condition check for page, chip id is
1225:Core/Src/bno055.c ****          * available in the page zero*/
1226:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2182              		.loc 1 1226 9 is_stmt 1 view .LVU590
 2183              		.loc 1 1226 21 is_stmt 0 view .LVU591
 2184 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2185              		.loc 1 1226 12 view .LVU592
 2186 001a 13BB     		cbnz	r3, .L168
 2187              	.LVL219:
 2188              	.L163:
1227:Core/Src/bno055.c ****         {
1228:Core/Src/bno055.c ****             /* Write the page zero*/
1229:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1230:Core/Src/bno055.c ****         }
1231:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2189              		.loc 1 1231 53 discriminator 1 view .LVU593
 2190 001c 184B     		ldr	r3, .L169+4
 2191 001e 1B68     		ldr	r3, [r3]
 2192 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2193              		.loc 1 1231 41 discriminator 1 view .LVU594
 2194 0022 3BBB     		cbnz	r3, .L166
 2195              	.L164:
1232:Core/Src/bno055.c ****         {
1233:Core/Src/bno055.c ****             /*Read the six byte value of mag xyz*/
1234:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2196              		.loc 1 1234 13 is_stmt 1 view .LVU595
 2197              		.loc 1 1234 32 is_stmt 0 view .LVU596
 2198 0024 164B     		ldr	r3, .L169+4
 2199 0026 1868     		ldr	r0, [r3]
 2200 0028 0569     		ldr	r5, [r0, #16]
 2201              		.loc 1 1234 24 view .LVU597
 2202 002a 0623     		movs	r3, #6
 2203 002c 6A46     		mov	r2, sp
 2204 002e 0E21     		movs	r1, #14
 2205 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2206 0032 A847     		blx	r5
 2207              	.LVL220:
1235:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1236:Core/Src/bno055.c ****                                                       data_u8,
1237:Core/Src/bno055.c ****                                                       BNO055_MAG_XYZ_DATA_SIZE);
1238:Core/Src/bno055.c **** 
1239:Core/Src/bno055.c ****             /* Data X*/
1240:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2208              		.loc 1 1240 13 is_stmt 1 view .LVU598
1241:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_LSB_VALUE
1242:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2209              		.loc 1 1242 13 view .LVU599
ARM GAS  /tmp/cc9kYR4Z.s 			page 64


1243:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_MSB_VALUE
1244:Core/Src/bno055.c ****             mag->x =
 2210              		.loc 1 1244 13 view .LVU600
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2211              		.loc 1 1245 31 is_stmt 0 view .LVU601
 2212 0034 9DF90120 		ldrsb	r2, [sp, #1]
1246:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2213              		.loc 1 1246 31 view .LVU602
 2214 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2215              		.loc 1 1245 17 view .LVU603
 2216 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1244:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2217              		.loc 1 1244 20 view .LVU604
 2218 0040 2380     		strh	r3, [r4]	@ movhi
1247:Core/Src/bno055.c **** 
1248:Core/Src/bno055.c ****             /* Data Y*/
1249:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2219              		.loc 1 1249 13 is_stmt 1 view .LVU605
1250:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_LSB_VALUE
1251:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2220              		.loc 1 1251 13 view .LVU606
1252:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_MSB_VALUE
1253:Core/Src/bno055.c ****             mag->y =
 2221              		.loc 1 1253 13 view .LVU607
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2222              		.loc 1 1254 31 is_stmt 0 view .LVU608
 2223 0042 9DF90320 		ldrsb	r2, [sp, #3]
1255:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2224              		.loc 1 1255 31 view .LVU609
 2225 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2226              		.loc 1 1254 17 view .LVU610
 2227 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1253:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2228              		.loc 1 1253 20 view .LVU611
 2229 004e 6380     		strh	r3, [r4, #2]	@ movhi
1256:Core/Src/bno055.c **** 
1257:Core/Src/bno055.c ****             /* Data Z*/
1258:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2230              		.loc 1 1258 13 is_stmt 1 view .LVU612
1259:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_LSB_VALUE
1260:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2231              		.loc 1 1260 13 view .LVU613
1261:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_MSB_VALUE
1262:Core/Src/bno055.c ****             mag->z =
 2232              		.loc 1 1262 13 view .LVU614
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2233              		.loc 1 1263 31 is_stmt 0 view .LVU615
 2234 0050 9DF90520 		ldrsb	r2, [sp, #5]
1264:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2235              		.loc 1 1264 31 view .LVU616
 2236 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2237              		.loc 1 1263 17 view .LVU617
 2238 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1262:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
ARM GAS  /tmp/cc9kYR4Z.s 			page 65


 2239              		.loc 1 1262 20 view .LVU618
 2240 005c A380     		strh	r3, [r4, #4]	@ movhi
 2241              	.LVL221:
 2242              	.L162:
1265:Core/Src/bno055.c ****         }
1266:Core/Src/bno055.c ****         else
1267:Core/Src/bno055.c ****         {
1268:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1269:Core/Src/bno055.c ****         }
1270:Core/Src/bno055.c ****     }
1271:Core/Src/bno055.c **** 
1272:Core/Src/bno055.c ****     return com_rslt;
1273:Core/Src/bno055.c **** }
 2243              		.loc 1 1273 1 view .LVU619
 2244 005e 03B0     		add	sp, sp, #12
 2245              	.LCFI67:
 2246              		.cfi_remember_state
 2247              		.cfi_def_cfa_offset 12
 2248              		@ sp needed
 2249 0060 30BD     		pop	{r4, r5, pc}
 2250              	.LVL222:
 2251              	.L168:
 2252              	.LCFI68:
 2253              		.cfi_restore_state
1229:Core/Src/bno055.c ****         }
 2254              		.loc 1 1229 13 is_stmt 1 view .LVU620
1229:Core/Src/bno055.c ****         }
 2255              		.loc 1 1229 23 is_stmt 0 view .LVU621
 2256 0062 0020     		movs	r0, #0
 2257 0064 FFF7FEFF 		bl	bno055_write_page_id
 2258              	.LVL223:
1231:Core/Src/bno055.c ****         {
 2259              		.loc 1 1231 9 is_stmt 1 view .LVU622
1231:Core/Src/bno055.c ****         {
 2260              		.loc 1 1231 12 is_stmt 0 view .LVU623
 2261 0068 0028     		cmp	r0, #0
 2262 006a DBD0     		beq	.L164
 2263 006c D6E7     		b	.L163
 2264              	.LVL224:
 2265              	.L165:
1220:Core/Src/bno055.c ****     }
 2266              		.loc 1 1220 16 view .LVU624
 2267 006e 6FF07E00 		mvn	r0, #126
 2268 0072 F4E7     		b	.L162
 2269              	.LVL225:
 2270              	.L166:
1268:Core/Src/bno055.c ****         }
 2271              		.loc 1 1268 22 view .LVU625
 2272 0074 4FF0FF30 		mov	r0, #-1
 2273 0078 F1E7     		b	.L162
 2274              	.L170:
 2275 007a 00BF     		.align	2
 2276              	.L169:
 2277 007c 00000000 		.word	.LANCHOR1
 2278 0080 00000000 		.word	.LANCHOR0
 2279              		.cfi_endproc
 2280              	.LFE18:
ARM GAS  /tmp/cc9kYR4Z.s 			page 66


 2282              		.section	.text.bno055_read_gyro_x,"ax",%progbits
 2283              		.align	1
 2284              		.global	bno055_read_gyro_x
 2285              		.syntax unified
 2286              		.thumb
 2287              		.thumb_func
 2289              	bno055_read_gyro_x:
 2290              	.LVL226:
 2291              	.LFB19:
1274:Core/Src/bno055.c **** 
1275:Core/Src/bno055.c **** /*!
1276:Core/Src/bno055.c ****  *  @brief This API reads gyro data x values
1277:Core/Src/bno055.c ****  *  from register 0x14 and 0x15 it is a two byte data
1278:Core/Src/bno055.c ****  *
1279:Core/Src/bno055.c ****  *
1280:Core/Src/bno055.c ****  *
1281:Core/Src/bno055.c ****  *
1282:Core/Src/bno055.c ****  *  @param gyro_x_s16 : The x raw data
1283:Core/Src/bno055.c ****  *
1284:Core/Src/bno055.c ****  *
1285:Core/Src/bno055.c ****  *
1286:Core/Src/bno055.c ****  *  @return results of bus communication function
1287:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1288:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1289:Core/Src/bno055.c ****  *
1290:Core/Src/bno055.c ****  *
1291:Core/Src/bno055.c ****  */
1292:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_x(s16 *gyro_x_s16)
1293:Core/Src/bno055.c **** {
 2292              		.loc 1 1293 1 is_stmt 1 view -0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 8
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              		.loc 1 1293 1 is_stmt 0 view .LVU627
 2297 0000 30B5     		push	{r4, r5, lr}
 2298              	.LCFI69:
 2299              		.cfi_def_cfa_offset 12
 2300              		.cfi_offset 4, -12
 2301              		.cfi_offset 5, -8
 2302              		.cfi_offset 14, -4
 2303 0002 83B0     		sub	sp, sp, #12
 2304              	.LCFI70:
 2305              		.cfi_def_cfa_offset 24
1294:Core/Src/bno055.c ****     /* Variable used to return value of
1295:Core/Src/bno055.c ****      * communication routine*/
1296:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2306              		.loc 1 1296 5 is_stmt 1 view .LVU628
 2307              	.LVL227:
1297:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2308              		.loc 1 1297 5 view .LVU629
 2309              		.loc 1 1297 8 is_stmt 0 view .LVU630
 2310 0004 0023     		movs	r3, #0
 2311 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1298:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2312              		.loc 1 1298 5 is_stmt 1 view .LVU631
 2313              	.LVL228:
1299:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 67


1300:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1301:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2314              		.loc 1 1301 5 view .LVU632
 2315              		.loc 1 1301 18 is_stmt 0 view .LVU633
 2316 000a 134B     		ldr	r3, .L179
 2317 000c 1B68     		ldr	r3, [r3]
 2318              		.loc 1 1301 8 view .LVU634
 2319 000e EBB1     		cbz	r3, .L175
 2320 0010 0446     		mov	r4, r0
1302:Core/Src/bno055.c ****     {
1303:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1304:Core/Src/bno055.c ****     }
1305:Core/Src/bno055.c ****     else
1306:Core/Src/bno055.c ****     {
1307:Core/Src/bno055.c ****         /*condition check for page, chip id is
1308:Core/Src/bno055.c ****          * available in the page zero*/
1309:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2321              		.loc 1 1309 9 is_stmt 1 view .LVU635
 2322              		.loc 1 1309 21 is_stmt 0 view .LVU636
 2323 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2324              		.loc 1 1309 12 view .LVU637
 2325 0014 A3B9     		cbnz	r3, .L178
 2326              	.LVL229:
 2327              	.L173:
1310:Core/Src/bno055.c ****         {
1311:Core/Src/bno055.c ****             /* Write the page zero*/
1312:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1313:Core/Src/bno055.c ****         }
1314:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2328              		.loc 1 1314 53 discriminator 1 view .LVU638
 2329 0016 104B     		ldr	r3, .L179
 2330 0018 1B68     		ldr	r3, [r3]
 2331 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2332              		.loc 1 1314 41 discriminator 1 view .LVU639
 2333 001c CBB9     		cbnz	r3, .L176
 2334              	.L174:
1315:Core/Src/bno055.c ****         {
1316:Core/Src/bno055.c ****             /* Read the gyro 16 bit x value*/
1317:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2335              		.loc 1 1317 13 is_stmt 1 view .LVU640
 2336              		.loc 1 1317 32 is_stmt 0 view .LVU641
 2337 001e 0E4B     		ldr	r3, .L179
 2338 0020 1868     		ldr	r0, [r3]
 2339 0022 0569     		ldr	r5, [r0, #16]
 2340              		.loc 1 1317 24 view .LVU642
 2341 0024 0223     		movs	r3, #2
 2342 0026 01AA     		add	r2, sp, #4
 2343 0028 1421     		movs	r1, #20
 2344 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2345 002c A847     		blx	r5
 2346              	.LVL230:
1318:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1319:Core/Src/bno055.c ****                                                       data_u8,
1320:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1321:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2347              		.loc 1 1321 13 is_stmt 1 view .LVU643
1322:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_LSB_VALUEX);
ARM GAS  /tmp/cc9kYR4Z.s 			page 68


1323:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2348              		.loc 1 1323 13 view .LVU644
1324:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_MSB_VALUEX);
1325:Core/Src/bno055.c ****             *gyro_x_s16 =
 2349              		.loc 1 1325 13 view .LVU645
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2350              		.loc 1 1326 31 is_stmt 0 view .LVU646
 2351 002e 9DF90520 		ldrsb	r2, [sp, #5]
1327:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2352              		.loc 1 1327 31 view .LVU647
 2353 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2354              		.loc 1 1326 17 view .LVU648
 2355 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1325:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2356              		.loc 1 1325 25 view .LVU649
 2357 003a 2380     		strh	r3, [r4]	@ movhi
 2358              	.LVL231:
 2359              	.L172:
1328:Core/Src/bno055.c ****         }
1329:Core/Src/bno055.c ****         else
1330:Core/Src/bno055.c ****         {
1331:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1332:Core/Src/bno055.c ****         }
1333:Core/Src/bno055.c ****     }
1334:Core/Src/bno055.c **** 
1335:Core/Src/bno055.c ****     return com_rslt;
1336:Core/Src/bno055.c **** }
 2360              		.loc 1 1336 1 view .LVU650
 2361 003c 03B0     		add	sp, sp, #12
 2362              	.LCFI71:
 2363              		.cfi_remember_state
 2364              		.cfi_def_cfa_offset 12
 2365              		@ sp needed
 2366 003e 30BD     		pop	{r4, r5, pc}
 2367              	.LVL232:
 2368              	.L178:
 2369              	.LCFI72:
 2370              		.cfi_restore_state
1312:Core/Src/bno055.c ****         }
 2371              		.loc 1 1312 13 is_stmt 1 view .LVU651
1312:Core/Src/bno055.c ****         }
 2372              		.loc 1 1312 23 is_stmt 0 view .LVU652
 2373 0040 0020     		movs	r0, #0
 2374              	.LVL233:
1312:Core/Src/bno055.c ****         }
 2375              		.loc 1 1312 23 view .LVU653
 2376 0042 FFF7FEFF 		bl	bno055_write_page_id
 2377              	.LVL234:
1314:Core/Src/bno055.c ****         {
 2378              		.loc 1 1314 9 is_stmt 1 view .LVU654
1314:Core/Src/bno055.c ****         {
 2379              		.loc 1 1314 12 is_stmt 0 view .LVU655
 2380 0046 0028     		cmp	r0, #0
 2381 0048 E9D0     		beq	.L174
 2382 004a E4E7     		b	.L173
 2383              	.LVL235:
ARM GAS  /tmp/cc9kYR4Z.s 			page 69


 2384              	.L175:
1303:Core/Src/bno055.c ****     }
 2385              		.loc 1 1303 16 view .LVU656
 2386 004c 6FF07E00 		mvn	r0, #126
 2387              	.LVL236:
1303:Core/Src/bno055.c ****     }
 2388              		.loc 1 1303 16 view .LVU657
 2389 0050 F4E7     		b	.L172
 2390              	.LVL237:
 2391              	.L176:
1331:Core/Src/bno055.c ****         }
 2392              		.loc 1 1331 22 view .LVU658
 2393 0052 4FF0FF30 		mov	r0, #-1
 2394 0056 F1E7     		b	.L172
 2395              	.L180:
 2396              		.align	2
 2397              	.L179:
 2398 0058 00000000 		.word	.LANCHOR0
 2399              		.cfi_endproc
 2400              	.LFE19:
 2402              		.section	.text.bno055_read_gyro_y,"ax",%progbits
 2403              		.align	1
 2404              		.global	bno055_read_gyro_y
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2409              	bno055_read_gyro_y:
 2410              	.LVL238:
 2411              	.LFB20:
1337:Core/Src/bno055.c **** 
1338:Core/Src/bno055.c **** /*!
1339:Core/Src/bno055.c ****  *  @brief This API reads gyro data y values
1340:Core/Src/bno055.c ****  *  from register 0x16 and 0x17 it is a two byte data
1341:Core/Src/bno055.c ****  *
1342:Core/Src/bno055.c ****  *
1343:Core/Src/bno055.c ****  *
1344:Core/Src/bno055.c ****  *
1345:Core/Src/bno055.c ****  *  @param gyro_y_s16 : The y raw data
1346:Core/Src/bno055.c ****  *
1347:Core/Src/bno055.c ****  *
1348:Core/Src/bno055.c ****  *
1349:Core/Src/bno055.c ****  *  @return results of bus communication function
1350:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1351:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1352:Core/Src/bno055.c ****  *
1353:Core/Src/bno055.c ****  *
1354:Core/Src/bno055.c ****  */
1355:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_y(s16 *gyro_y_s16)
1356:Core/Src/bno055.c **** {
 2412              		.loc 1 1356 1 is_stmt 1 view -0
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 8
 2415              		@ frame_needed = 0, uses_anonymous_args = 0
 2416              		.loc 1 1356 1 is_stmt 0 view .LVU660
 2417 0000 30B5     		push	{r4, r5, lr}
 2418              	.LCFI73:
 2419              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 70


 2420              		.cfi_offset 4, -12
 2421              		.cfi_offset 5, -8
 2422              		.cfi_offset 14, -4
 2423 0002 83B0     		sub	sp, sp, #12
 2424              	.LCFI74:
 2425              		.cfi_def_cfa_offset 24
1357:Core/Src/bno055.c ****     /* Variable used to return value of
1358:Core/Src/bno055.c ****      * communication routine*/
1359:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2426              		.loc 1 1359 5 is_stmt 1 view .LVU661
 2427              	.LVL239:
1360:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2428              		.loc 1 1360 5 view .LVU662
 2429              		.loc 1 1360 8 is_stmt 0 view .LVU663
 2430 0004 0023     		movs	r3, #0
 2431 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1361:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2432              		.loc 1 1361 5 is_stmt 1 view .LVU664
 2433              	.LVL240:
1362:Core/Src/bno055.c **** 
1363:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1364:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2434              		.loc 1 1364 5 view .LVU665
 2435              		.loc 1 1364 18 is_stmt 0 view .LVU666
 2436 000a 134B     		ldr	r3, .L189
 2437 000c 1B68     		ldr	r3, [r3]
 2438              		.loc 1 1364 8 view .LVU667
 2439 000e EBB1     		cbz	r3, .L185
 2440 0010 0446     		mov	r4, r0
1365:Core/Src/bno055.c ****     {
1366:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1367:Core/Src/bno055.c ****     }
1368:Core/Src/bno055.c ****     else
1369:Core/Src/bno055.c ****     {
1370:Core/Src/bno055.c ****         /*condition check for page, chip id is
1371:Core/Src/bno055.c ****          * available in the page zero*/
1372:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2441              		.loc 1 1372 9 is_stmt 1 view .LVU668
 2442              		.loc 1 1372 21 is_stmt 0 view .LVU669
 2443 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2444              		.loc 1 1372 12 view .LVU670
 2445 0014 A3B9     		cbnz	r3, .L188
 2446              	.LVL241:
 2447              	.L183:
1373:Core/Src/bno055.c ****         {
1374:Core/Src/bno055.c ****             /* Write the page zero*/
1375:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1376:Core/Src/bno055.c ****         }
1377:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2448              		.loc 1 1377 53 discriminator 1 view .LVU671
 2449 0016 104B     		ldr	r3, .L189
 2450 0018 1B68     		ldr	r3, [r3]
 2451 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2452              		.loc 1 1377 41 discriminator 1 view .LVU672
 2453 001c CBB9     		cbnz	r3, .L186
 2454              	.L184:
1378:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 71


1379:Core/Src/bno055.c ****             /* Read the value of gyro y */
1380:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2455              		.loc 1 1380 13 is_stmt 1 view .LVU673
 2456              		.loc 1 1380 32 is_stmt 0 view .LVU674
 2457 001e 0E4B     		ldr	r3, .L189
 2458 0020 1868     		ldr	r0, [r3]
 2459 0022 0569     		ldr	r5, [r0, #16]
 2460              		.loc 1 1380 24 view .LVU675
 2461 0024 0223     		movs	r3, #2
 2462 0026 01AA     		add	r2, sp, #4
 2463 0028 1621     		movs	r1, #22
 2464 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2465 002c A847     		blx	r5
 2466              	.LVL242:
1381:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Y_LSB_VALUEY_REG,
1382:Core/Src/bno055.c ****                                                       data_u8,
1383:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1384:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2467              		.loc 1 1384 13 is_stmt 1 view .LVU676
1385:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_LSB_VALUEY);
1386:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2468              		.loc 1 1386 13 view .LVU677
1387:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_MSB_VALUEY);
1388:Core/Src/bno055.c ****             *gyro_y_s16 =
 2469              		.loc 1 1388 13 view .LVU678
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2470              		.loc 1 1389 31 is_stmt 0 view .LVU679
 2471 002e 9DF90520 		ldrsb	r2, [sp, #5]
1390:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2472              		.loc 1 1390 31 view .LVU680
 2473 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2474              		.loc 1 1389 17 view .LVU681
 2475 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1388:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2476              		.loc 1 1388 25 view .LVU682
 2477 003a 2380     		strh	r3, [r4]	@ movhi
 2478              	.LVL243:
 2479              	.L182:
1391:Core/Src/bno055.c ****         }
1392:Core/Src/bno055.c ****         else
1393:Core/Src/bno055.c ****         {
1394:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1395:Core/Src/bno055.c ****         }
1396:Core/Src/bno055.c ****     }
1397:Core/Src/bno055.c **** 
1398:Core/Src/bno055.c ****     return com_rslt;
1399:Core/Src/bno055.c **** }
 2480              		.loc 1 1399 1 view .LVU683
 2481 003c 03B0     		add	sp, sp, #12
 2482              	.LCFI75:
 2483              		.cfi_remember_state
 2484              		.cfi_def_cfa_offset 12
 2485              		@ sp needed
 2486 003e 30BD     		pop	{r4, r5, pc}
 2487              	.LVL244:
 2488              	.L188:
ARM GAS  /tmp/cc9kYR4Z.s 			page 72


 2489              	.LCFI76:
 2490              		.cfi_restore_state
1375:Core/Src/bno055.c ****         }
 2491              		.loc 1 1375 13 is_stmt 1 view .LVU684
1375:Core/Src/bno055.c ****         }
 2492              		.loc 1 1375 23 is_stmt 0 view .LVU685
 2493 0040 0020     		movs	r0, #0
 2494              	.LVL245:
1375:Core/Src/bno055.c ****         }
 2495              		.loc 1 1375 23 view .LVU686
 2496 0042 FFF7FEFF 		bl	bno055_write_page_id
 2497              	.LVL246:
1377:Core/Src/bno055.c ****         {
 2498              		.loc 1 1377 9 is_stmt 1 view .LVU687
1377:Core/Src/bno055.c ****         {
 2499              		.loc 1 1377 12 is_stmt 0 view .LVU688
 2500 0046 0028     		cmp	r0, #0
 2501 0048 E9D0     		beq	.L184
 2502 004a E4E7     		b	.L183
 2503              	.LVL247:
 2504              	.L185:
1366:Core/Src/bno055.c ****     }
 2505              		.loc 1 1366 16 view .LVU689
 2506 004c 6FF07E00 		mvn	r0, #126
 2507              	.LVL248:
1366:Core/Src/bno055.c ****     }
 2508              		.loc 1 1366 16 view .LVU690
 2509 0050 F4E7     		b	.L182
 2510              	.LVL249:
 2511              	.L186:
1394:Core/Src/bno055.c ****         }
 2512              		.loc 1 1394 22 view .LVU691
 2513 0052 4FF0FF30 		mov	r0, #-1
 2514 0056 F1E7     		b	.L182
 2515              	.L190:
 2516              		.align	2
 2517              	.L189:
 2518 0058 00000000 		.word	.LANCHOR0
 2519              		.cfi_endproc
 2520              	.LFE20:
 2522              		.section	.text.bno055_read_gyro_z,"ax",%progbits
 2523              		.align	1
 2524              		.global	bno055_read_gyro_z
 2525              		.syntax unified
 2526              		.thumb
 2527              		.thumb_func
 2529              	bno055_read_gyro_z:
 2530              	.LVL250:
 2531              	.LFB21:
1400:Core/Src/bno055.c **** 
1401:Core/Src/bno055.c **** /*!
1402:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1403:Core/Src/bno055.c ****  *  from register 0x18 and 0x19 it is a two byte data
1404:Core/Src/bno055.c ****  *
1405:Core/Src/bno055.c ****  *  @param gyro_z_s16 : The z raw data
1406:Core/Src/bno055.c ****  *
1407:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/cc9kYR4Z.s 			page 73


1408:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1409:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1410:Core/Src/bno055.c ****  *
1411:Core/Src/bno055.c ****  *
1412:Core/Src/bno055.c ****  */
1413:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_z(s16 *gyro_z_s16)
1414:Core/Src/bno055.c **** {
 2532              		.loc 1 1414 1 is_stmt 1 view -0
 2533              		.cfi_startproc
 2534              		@ args = 0, pretend = 0, frame = 8
 2535              		@ frame_needed = 0, uses_anonymous_args = 0
 2536              		.loc 1 1414 1 is_stmt 0 view .LVU693
 2537 0000 30B5     		push	{r4, r5, lr}
 2538              	.LCFI77:
 2539              		.cfi_def_cfa_offset 12
 2540              		.cfi_offset 4, -12
 2541              		.cfi_offset 5, -8
 2542              		.cfi_offset 14, -4
 2543 0002 83B0     		sub	sp, sp, #12
 2544              	.LCFI78:
 2545              		.cfi_def_cfa_offset 24
1415:Core/Src/bno055.c ****     /* Variable used to return value of
1416:Core/Src/bno055.c ****      * communication routine*/
1417:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2546              		.loc 1 1417 5 is_stmt 1 view .LVU694
 2547              	.LVL251:
1418:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2548              		.loc 1 1418 5 view .LVU695
 2549              		.loc 1 1418 8 is_stmt 0 view .LVU696
 2550 0004 0023     		movs	r3, #0
 2551 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1419:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2552              		.loc 1 1419 5 is_stmt 1 view .LVU697
 2553              	.LVL252:
1420:Core/Src/bno055.c **** 
1421:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1422:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2554              		.loc 1 1422 5 view .LVU698
 2555              		.loc 1 1422 18 is_stmt 0 view .LVU699
 2556 000a 134B     		ldr	r3, .L199
 2557 000c 1B68     		ldr	r3, [r3]
 2558              		.loc 1 1422 8 view .LVU700
 2559 000e EBB1     		cbz	r3, .L195
 2560 0010 0446     		mov	r4, r0
1423:Core/Src/bno055.c ****     {
1424:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1425:Core/Src/bno055.c ****     }
1426:Core/Src/bno055.c ****     else
1427:Core/Src/bno055.c ****     {
1428:Core/Src/bno055.c ****         /*condition check for page, chip id is
1429:Core/Src/bno055.c ****          * available in the page zero*/
1430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2561              		.loc 1 1430 9 is_stmt 1 view .LVU701
 2562              		.loc 1 1430 21 is_stmt 0 view .LVU702
 2563 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2564              		.loc 1 1430 12 view .LVU703
 2565 0014 A3B9     		cbnz	r3, .L198
ARM GAS  /tmp/cc9kYR4Z.s 			page 74


 2566              	.LVL253:
 2567              	.L193:
1431:Core/Src/bno055.c ****         {
1432:Core/Src/bno055.c ****             /* Write the page zero*/
1433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1434:Core/Src/bno055.c ****         }
1435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2568              		.loc 1 1435 53 discriminator 1 view .LVU704
 2569 0016 104B     		ldr	r3, .L199
 2570 0018 1B68     		ldr	r3, [r3]
 2571 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2572              		.loc 1 1435 41 discriminator 1 view .LVU705
 2573 001c CBB9     		cbnz	r3, .L196
 2574              	.L194:
1436:Core/Src/bno055.c ****         {
1437:Core/Src/bno055.c ****             /* Read the gyro z 16 bit value*/
1438:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2575              		.loc 1 1438 13 is_stmt 1 view .LVU706
 2576              		.loc 1 1438 32 is_stmt 0 view .LVU707
 2577 001e 0E4B     		ldr	r3, .L199
 2578 0020 1868     		ldr	r0, [r3]
 2579 0022 0569     		ldr	r5, [r0, #16]
 2580              		.loc 1 1438 24 view .LVU708
 2581 0024 0223     		movs	r3, #2
 2582 0026 01AA     		add	r2, sp, #4
 2583 0028 1821     		movs	r1, #24
 2584 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2585 002c A847     		blx	r5
 2586              	.LVL254:
1439:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Z_LSB_VALUEZ_REG,
1440:Core/Src/bno055.c ****                                                       data_u8,
1441:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1442:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2587              		.loc 1 1442 13 is_stmt 1 view .LVU709
1443:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_LSB_VALUEZ);
1444:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2588              		.loc 1 1444 13 view .LVU710
1445:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_MSB_VALUEZ);
1446:Core/Src/bno055.c ****             *gyro_z_s16 =
 2589              		.loc 1 1446 13 view .LVU711
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2590              		.loc 1 1447 31 is_stmt 0 view .LVU712
 2591 002e 9DF90520 		ldrsb	r2, [sp, #5]
1448:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2592              		.loc 1 1448 31 view .LVU713
 2593 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2594              		.loc 1 1447 17 view .LVU714
 2595 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1446:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2596              		.loc 1 1446 25 view .LVU715
 2597 003a 2380     		strh	r3, [r4]	@ movhi
 2598              	.LVL255:
 2599              	.L192:
1449:Core/Src/bno055.c ****         }
1450:Core/Src/bno055.c ****         else
1451:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 75


1452:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1453:Core/Src/bno055.c ****         }
1454:Core/Src/bno055.c ****     }
1455:Core/Src/bno055.c **** 
1456:Core/Src/bno055.c ****     return com_rslt;
1457:Core/Src/bno055.c **** }
 2600              		.loc 1 1457 1 view .LVU716
 2601 003c 03B0     		add	sp, sp, #12
 2602              	.LCFI79:
 2603              		.cfi_remember_state
 2604              		.cfi_def_cfa_offset 12
 2605              		@ sp needed
 2606 003e 30BD     		pop	{r4, r5, pc}
 2607              	.LVL256:
 2608              	.L198:
 2609              	.LCFI80:
 2610              		.cfi_restore_state
1433:Core/Src/bno055.c ****         }
 2611              		.loc 1 1433 13 is_stmt 1 view .LVU717
1433:Core/Src/bno055.c ****         }
 2612              		.loc 1 1433 23 is_stmt 0 view .LVU718
 2613 0040 0020     		movs	r0, #0
 2614              	.LVL257:
1433:Core/Src/bno055.c ****         }
 2615              		.loc 1 1433 23 view .LVU719
 2616 0042 FFF7FEFF 		bl	bno055_write_page_id
 2617              	.LVL258:
1435:Core/Src/bno055.c ****         {
 2618              		.loc 1 1435 9 is_stmt 1 view .LVU720
1435:Core/Src/bno055.c ****         {
 2619              		.loc 1 1435 12 is_stmt 0 view .LVU721
 2620 0046 0028     		cmp	r0, #0
 2621 0048 E9D0     		beq	.L194
 2622 004a E4E7     		b	.L193
 2623              	.LVL259:
 2624              	.L195:
1424:Core/Src/bno055.c ****     }
 2625              		.loc 1 1424 16 view .LVU722
 2626 004c 6FF07E00 		mvn	r0, #126
 2627              	.LVL260:
1424:Core/Src/bno055.c ****     }
 2628              		.loc 1 1424 16 view .LVU723
 2629 0050 F4E7     		b	.L192
 2630              	.LVL261:
 2631              	.L196:
1452:Core/Src/bno055.c ****         }
 2632              		.loc 1 1452 22 view .LVU724
 2633 0052 4FF0FF30 		mov	r0, #-1
 2634 0056 F1E7     		b	.L192
 2635              	.L200:
 2636              		.align	2
 2637              	.L199:
 2638 0058 00000000 		.word	.LANCHOR0
 2639              		.cfi_endproc
 2640              	.LFE21:
 2642              		.section	.text.bno055_read_gyro_xyz,"ax",%progbits
 2643              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 76


 2644              		.global	bno055_read_gyro_xyz
 2645              		.syntax unified
 2646              		.thumb
 2647              		.thumb_func
 2649              	bno055_read_gyro_xyz:
 2650              	.LVL262:
 2651              	.LFB22:
1458:Core/Src/bno055.c **** 
1459:Core/Src/bno055.c **** /*!
1460:Core/Src/bno055.c ****  *  @brief This API reads gyro data xyz values
1461:Core/Src/bno055.c ****  *  from register 0x14 to 0x19 it is a six byte data
1462:Core/Src/bno055.c ****  *
1463:Core/Src/bno055.c ****  *
1464:Core/Src/bno055.c ****  *  @param gyro : The value of gyro xyz data's
1465:Core/Src/bno055.c ****  *
1466:Core/Src/bno055.c ****  *  Parameter |    result
1467:Core/Src/bno055.c ****  *  --------- | -----------------
1468:Core/Src/bno055.c ****  *   x        | The gyro x data
1469:Core/Src/bno055.c ****  *   y        | The gyro y data
1470:Core/Src/bno055.c ****  *   z        | The gyro z data
1471:Core/Src/bno055.c ****  *
1472:Core/Src/bno055.c ****  *
1473:Core/Src/bno055.c ****  *
1474:Core/Src/bno055.c ****  *  @return results of bus communication function
1475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1477:Core/Src/bno055.c ****  *
1478:Core/Src/bno055.c ****  */
1479:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_xyz(struct bno055_gyro_t *gyro)
1480:Core/Src/bno055.c **** {
 2652              		.loc 1 1480 1 is_stmt 1 view -0
 2653              		.cfi_startproc
 2654              		@ args = 0, pretend = 0, frame = 8
 2655              		@ frame_needed = 0, uses_anonymous_args = 0
 2656              		.loc 1 1480 1 is_stmt 0 view .LVU726
 2657 0000 30B5     		push	{r4, r5, lr}
 2658              	.LCFI81:
 2659              		.cfi_def_cfa_offset 12
 2660              		.cfi_offset 4, -12
 2661              		.cfi_offset 5, -8
 2662              		.cfi_offset 14, -4
 2663 0002 83B0     		sub	sp, sp, #12
 2664              	.LCFI82:
 2665              		.cfi_def_cfa_offset 24
 2666 0004 0446     		mov	r4, r0
1481:Core/Src/bno055.c ****     /* Variable used to return value of
1482:Core/Src/bno055.c ****      * communication routine*/
1483:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2667              		.loc 1 1483 5 is_stmt 1 view .LVU727
 2668              	.LVL263:
1484:Core/Src/bno055.c **** 
1485:Core/Src/bno055.c ****     /* Array holding the gyro xyz value
1486:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1487:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1488:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1489:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1490:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 77


1491:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1492:Core/Src/bno055.c ****      */
1493:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_XYZ_DATA_SIZE] = {
 2669              		.loc 1 1493 5 view .LVU728
 2670              		.loc 1 1493 8 is_stmt 0 view .LVU729
 2671 0006 1D4B     		ldr	r3, .L209
 2672 0008 93E80300 		ldm	r3, {r0, r1}
 2673              	.LVL264:
 2674              		.loc 1 1493 8 view .LVU730
 2675 000c 0090     		str	r0, [sp]
 2676 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1494:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1495:Core/Src/bno055.c ****     };
1496:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2677              		.loc 1 1496 5 is_stmt 1 view .LVU731
 2678              	.LVL265:
1497:Core/Src/bno055.c **** 
1498:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1499:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2679              		.loc 1 1499 5 view .LVU732
 2680              		.loc 1 1499 18 is_stmt 0 view .LVU733
 2681 0012 1B4B     		ldr	r3, .L209+4
 2682 0014 1B68     		ldr	r3, [r3]
 2683              		.loc 1 1499 8 view .LVU734
 2684 0016 53B3     		cbz	r3, .L205
1500:Core/Src/bno055.c ****     {
1501:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1502:Core/Src/bno055.c ****     }
1503:Core/Src/bno055.c ****     else
1504:Core/Src/bno055.c ****     {
1505:Core/Src/bno055.c ****         /*condition check for page, chip id is
1506:Core/Src/bno055.c ****          * available in the page zero*/
1507:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2685              		.loc 1 1507 9 is_stmt 1 view .LVU735
 2686              		.loc 1 1507 21 is_stmt 0 view .LVU736
 2687 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2688              		.loc 1 1507 12 view .LVU737
 2689 001a 13BB     		cbnz	r3, .L208
 2690              	.LVL266:
 2691              	.L203:
1508:Core/Src/bno055.c ****         {
1509:Core/Src/bno055.c ****             /* Write the page zero*/
1510:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1511:Core/Src/bno055.c ****         }
1512:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2692              		.loc 1 1512 53 discriminator 1 view .LVU738
 2693 001c 184B     		ldr	r3, .L209+4
 2694 001e 1B68     		ldr	r3, [r3]
 2695 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2696              		.loc 1 1512 41 discriminator 1 view .LVU739
 2697 0022 3BBB     		cbnz	r3, .L206
 2698              	.L204:
1513:Core/Src/bno055.c ****         {
1514:Core/Src/bno055.c ****             /* Read the six bytes data of gyro xyz*/
1515:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2699              		.loc 1 1515 13 is_stmt 1 view .LVU740
 2700              		.loc 1 1515 32 is_stmt 0 view .LVU741
ARM GAS  /tmp/cc9kYR4Z.s 			page 78


 2701 0024 164B     		ldr	r3, .L209+4
 2702 0026 1868     		ldr	r0, [r3]
 2703 0028 0569     		ldr	r5, [r0, #16]
 2704              		.loc 1 1515 24 view .LVU742
 2705 002a 0623     		movs	r3, #6
 2706 002c 6A46     		mov	r2, sp
 2707 002e 1421     		movs	r1, #20
 2708 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2709 0032 A847     		blx	r5
 2710              	.LVL267:
1516:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1517:Core/Src/bno055.c ****                                                       data_u8,
1518:Core/Src/bno055.c ****                                                       BNO055_GYRO_XYZ_DATA_SIZE);
1519:Core/Src/bno055.c **** 
1520:Core/Src/bno055.c ****             /* Data x*/
1521:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2711              		.loc 1 1521 13 is_stmt 1 view .LVU743
1522:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_LSB_VALU
1523:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2712              		.loc 1 1523 13 view .LVU744
1524:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_MSB_VALU
1525:Core/Src/bno055.c ****             gyro->x =
 2713              		.loc 1 1525 13 view .LVU745
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2714              		.loc 1 1526 31 is_stmt 0 view .LVU746
 2715 0034 9DF90120 		ldrsb	r2, [sp, #1]
1527:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2716              		.loc 1 1527 31 view .LVU747
 2717 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2718              		.loc 1 1526 17 view .LVU748
 2719 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1525:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2720              		.loc 1 1525 21 view .LVU749
 2721 0040 2380     		strh	r3, [r4]	@ movhi
1528:Core/Src/bno055.c **** 
1529:Core/Src/bno055.c ****             /* Data y*/
1530:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2722              		.loc 1 1530 13 is_stmt 1 view .LVU750
1531:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_LSB_VALU
1532:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2723              		.loc 1 1532 13 view .LVU751
1533:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_MSB_VALU
1534:Core/Src/bno055.c ****             gyro->y =
 2724              		.loc 1 1534 13 view .LVU752
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2725              		.loc 1 1535 31 is_stmt 0 view .LVU753
 2726 0042 9DF90320 		ldrsb	r2, [sp, #3]
1536:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2727              		.loc 1 1536 31 view .LVU754
 2728 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2729              		.loc 1 1535 17 view .LVU755
 2730 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1534:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2731              		.loc 1 1534 21 view .LVU756
 2732 004e 6380     		strh	r3, [r4, #2]	@ movhi
ARM GAS  /tmp/cc9kYR4Z.s 			page 79


1537:Core/Src/bno055.c **** 
1538:Core/Src/bno055.c ****             /* Data z*/
1539:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2733              		.loc 1 1539 13 is_stmt 1 view .LVU757
1540:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_LSB_VALU
1541:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2734              		.loc 1 1541 13 view .LVU758
1542:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_MSB_VALU
1543:Core/Src/bno055.c ****             gyro->z =
 2735              		.loc 1 1543 13 view .LVU759
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2736              		.loc 1 1544 31 is_stmt 0 view .LVU760
 2737 0050 9DF90520 		ldrsb	r2, [sp, #5]
1545:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2738              		.loc 1 1545 31 view .LVU761
 2739 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2740              		.loc 1 1544 17 view .LVU762
 2741 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1543:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2742              		.loc 1 1543 21 view .LVU763
 2743 005c A380     		strh	r3, [r4, #4]	@ movhi
 2744              	.LVL268:
 2745              	.L202:
1546:Core/Src/bno055.c ****         }
1547:Core/Src/bno055.c ****         else
1548:Core/Src/bno055.c ****         {
1549:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1550:Core/Src/bno055.c ****         }
1551:Core/Src/bno055.c ****     }
1552:Core/Src/bno055.c **** 
1553:Core/Src/bno055.c ****     return com_rslt;
1554:Core/Src/bno055.c **** }
 2746              		.loc 1 1554 1 view .LVU764
 2747 005e 03B0     		add	sp, sp, #12
 2748              	.LCFI83:
 2749              		.cfi_remember_state
 2750              		.cfi_def_cfa_offset 12
 2751              		@ sp needed
 2752 0060 30BD     		pop	{r4, r5, pc}
 2753              	.LVL269:
 2754              	.L208:
 2755              	.LCFI84:
 2756              		.cfi_restore_state
1510:Core/Src/bno055.c ****         }
 2757              		.loc 1 1510 13 is_stmt 1 view .LVU765
1510:Core/Src/bno055.c ****         }
 2758              		.loc 1 1510 23 is_stmt 0 view .LVU766
 2759 0062 0020     		movs	r0, #0
 2760 0064 FFF7FEFF 		bl	bno055_write_page_id
 2761              	.LVL270:
1512:Core/Src/bno055.c ****         {
 2762              		.loc 1 1512 9 is_stmt 1 view .LVU767
1512:Core/Src/bno055.c ****         {
 2763              		.loc 1 1512 12 is_stmt 0 view .LVU768
 2764 0068 0028     		cmp	r0, #0
 2765 006a DBD0     		beq	.L204
ARM GAS  /tmp/cc9kYR4Z.s 			page 80


 2766 006c D6E7     		b	.L203
 2767              	.LVL271:
 2768              	.L205:
1501:Core/Src/bno055.c ****     }
 2769              		.loc 1 1501 16 view .LVU769
 2770 006e 6FF07E00 		mvn	r0, #126
 2771 0072 F4E7     		b	.L202
 2772              	.LVL272:
 2773              	.L206:
1549:Core/Src/bno055.c ****         }
 2774              		.loc 1 1549 22 view .LVU770
 2775 0074 4FF0FF30 		mov	r0, #-1
 2776 0078 F1E7     		b	.L202
 2777              	.L210:
 2778 007a 00BF     		.align	2
 2779              	.L209:
 2780 007c 00000000 		.word	.LANCHOR1
 2781 0080 00000000 		.word	.LANCHOR0
 2782              		.cfi_endproc
 2783              	.LFE22:
 2785              		.section	.text.bno055_read_euler_h,"ax",%progbits
 2786              		.align	1
 2787              		.global	bno055_read_euler_h
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
 2792              	bno055_read_euler_h:
 2793              	.LVL273:
 2794              	.LFB23:
1555:Core/Src/bno055.c **** 
1556:Core/Src/bno055.c **** /*!
1557:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1558:Core/Src/bno055.c ****  *  from register 0x1A and 0x1B it is a two byte data
1559:Core/Src/bno055.c ****  *
1560:Core/Src/bno055.c ****  *  @param euler_h_s16 : The raw h data
1561:Core/Src/bno055.c ****  *
1562:Core/Src/bno055.c ****  *  @return results of bus communication function
1563:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1564:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1565:Core/Src/bno055.c ****  *
1566:Core/Src/bno055.c ****  */
1567:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_h(s16 *euler_h_s16)
1568:Core/Src/bno055.c **** {
 2795              		.loc 1 1568 1 is_stmt 1 view -0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 8
 2798              		@ frame_needed = 0, uses_anonymous_args = 0
 2799              		.loc 1 1568 1 is_stmt 0 view .LVU772
 2800 0000 30B5     		push	{r4, r5, lr}
 2801              	.LCFI85:
 2802              		.cfi_def_cfa_offset 12
 2803              		.cfi_offset 4, -12
 2804              		.cfi_offset 5, -8
 2805              		.cfi_offset 14, -4
 2806 0002 83B0     		sub	sp, sp, #12
 2807              	.LCFI86:
 2808              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 81


1569:Core/Src/bno055.c ****     /* Variable used to return value of
1570:Core/Src/bno055.c ****      * communication routine*/
1571:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2809              		.loc 1 1571 5 is_stmt 1 view .LVU773
 2810              	.LVL274:
1572:Core/Src/bno055.c **** 
1573:Core/Src/bno055.c ****     /* Array holding the Euler h value
1574:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - h->LSB
1575:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - h->MSB
1576:Core/Src/bno055.c ****      */
1577:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2811              		.loc 1 1577 5 view .LVU774
 2812              		.loc 1 1577 8 is_stmt 0 view .LVU775
 2813 0004 0023     		movs	r3, #0
 2814 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1578:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2815              		.loc 1 1578 5 is_stmt 1 view .LVU776
 2816              	.LVL275:
1579:Core/Src/bno055.c **** 
1580:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1581:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2817              		.loc 1 1581 5 view .LVU777
 2818              		.loc 1 1581 18 is_stmt 0 view .LVU778
 2819 000a 134B     		ldr	r3, .L219
 2820 000c 1B68     		ldr	r3, [r3]
 2821              		.loc 1 1581 8 view .LVU779
 2822 000e EBB1     		cbz	r3, .L215
 2823 0010 0446     		mov	r4, r0
1582:Core/Src/bno055.c ****     {
1583:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1584:Core/Src/bno055.c ****     }
1585:Core/Src/bno055.c ****     else
1586:Core/Src/bno055.c ****     {
1587:Core/Src/bno055.c ****         /*condition check for page, chip id is
1588:Core/Src/bno055.c ****          * available in the page zero*/
1589:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2824              		.loc 1 1589 9 is_stmt 1 view .LVU780
 2825              		.loc 1 1589 21 is_stmt 0 view .LVU781
 2826 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2827              		.loc 1 1589 12 view .LVU782
 2828 0014 A3B9     		cbnz	r3, .L218
 2829              	.LVL276:
 2830              	.L213:
1590:Core/Src/bno055.c ****         {
1591:Core/Src/bno055.c ****             /* Write the page zero*/
1592:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1593:Core/Src/bno055.c ****         }
1594:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2831              		.loc 1 1594 53 discriminator 1 view .LVU783
 2832 0016 104B     		ldr	r3, .L219
 2833 0018 1B68     		ldr	r3, [r3]
 2834 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2835              		.loc 1 1594 41 discriminator 1 view .LVU784
 2836 001c CBB9     		cbnz	r3, .L216
 2837              	.L214:
1595:Core/Src/bno055.c ****         {
1596:Core/Src/bno055.c ****             /* Read the eulre heading data*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 82


1597:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2838              		.loc 1 1597 13 is_stmt 1 view .LVU785
 2839              		.loc 1 1597 32 is_stmt 0 view .LVU786
 2840 001e 0E4B     		ldr	r3, .L219
 2841 0020 1868     		ldr	r0, [r3]
 2842 0022 0569     		ldr	r5, [r0, #16]
 2843              		.loc 1 1597 24 view .LVU787
 2844 0024 0223     		movs	r3, #2
 2845 0026 01AA     		add	r2, sp, #4
 2846 0028 1A21     		movs	r1, #26
 2847 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2848 002c A847     		blx	r5
 2849              	.LVL277:
1598:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1599:Core/Src/bno055.c ****                                                       data_u8,
1600:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1601:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2850              		.loc 1 1601 13 is_stmt 1 view .LVU788
1602:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_LSB_VALUEH);
1603:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2851              		.loc 1 1603 13 view .LVU789
1604:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_MSB_VALUEH);
1605:Core/Src/bno055.c ****             *euler_h_s16 =
 2852              		.loc 1 1605 13 view .LVU790
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2853              		.loc 1 1606 31 is_stmt 0 view .LVU791
 2854 002e 9DF90520 		ldrsb	r2, [sp, #5]
1607:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2855              		.loc 1 1607 31 view .LVU792
 2856 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2857              		.loc 1 1606 17 view .LVU793
 2858 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1605:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2859              		.loc 1 1605 26 view .LVU794
 2860 003a 2380     		strh	r3, [r4]	@ movhi
 2861              	.LVL278:
 2862              	.L212:
1608:Core/Src/bno055.c ****         }
1609:Core/Src/bno055.c ****         else
1610:Core/Src/bno055.c ****         {
1611:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1612:Core/Src/bno055.c ****         }
1613:Core/Src/bno055.c ****     }
1614:Core/Src/bno055.c **** 
1615:Core/Src/bno055.c ****     return com_rslt;
1616:Core/Src/bno055.c **** }
 2863              		.loc 1 1616 1 view .LVU795
 2864 003c 03B0     		add	sp, sp, #12
 2865              	.LCFI87:
 2866              		.cfi_remember_state
 2867              		.cfi_def_cfa_offset 12
 2868              		@ sp needed
 2869 003e 30BD     		pop	{r4, r5, pc}
 2870              	.LVL279:
 2871              	.L218:
 2872              	.LCFI88:
ARM GAS  /tmp/cc9kYR4Z.s 			page 83


 2873              		.cfi_restore_state
1592:Core/Src/bno055.c ****         }
 2874              		.loc 1 1592 13 is_stmt 1 view .LVU796
1592:Core/Src/bno055.c ****         }
 2875              		.loc 1 1592 23 is_stmt 0 view .LVU797
 2876 0040 0020     		movs	r0, #0
 2877              	.LVL280:
1592:Core/Src/bno055.c ****         }
 2878              		.loc 1 1592 23 view .LVU798
 2879 0042 FFF7FEFF 		bl	bno055_write_page_id
 2880              	.LVL281:
1594:Core/Src/bno055.c ****         {
 2881              		.loc 1 1594 9 is_stmt 1 view .LVU799
1594:Core/Src/bno055.c ****         {
 2882              		.loc 1 1594 12 is_stmt 0 view .LVU800
 2883 0046 0028     		cmp	r0, #0
 2884 0048 E9D0     		beq	.L214
 2885 004a E4E7     		b	.L213
 2886              	.LVL282:
 2887              	.L215:
1583:Core/Src/bno055.c ****     }
 2888              		.loc 1 1583 16 view .LVU801
 2889 004c 6FF07E00 		mvn	r0, #126
 2890              	.LVL283:
1583:Core/Src/bno055.c ****     }
 2891              		.loc 1 1583 16 view .LVU802
 2892 0050 F4E7     		b	.L212
 2893              	.LVL284:
 2894              	.L216:
1611:Core/Src/bno055.c ****         }
 2895              		.loc 1 1611 22 view .LVU803
 2896 0052 4FF0FF30 		mov	r0, #-1
 2897 0056 F1E7     		b	.L212
 2898              	.L220:
 2899              		.align	2
 2900              	.L219:
 2901 0058 00000000 		.word	.LANCHOR0
 2902              		.cfi_endproc
 2903              	.LFE23:
 2905              		.section	.text.bno055_read_euler_r,"ax",%progbits
 2906              		.align	1
 2907              		.global	bno055_read_euler_r
 2908              		.syntax unified
 2909              		.thumb
 2910              		.thumb_func
 2912              	bno055_read_euler_r:
 2913              	.LVL285:
 2914              	.LFB24:
1617:Core/Src/bno055.c **** 
1618:Core/Src/bno055.c **** /*!
1619:Core/Src/bno055.c ****  *  @brief This API reads Euler data r values
1620:Core/Src/bno055.c ****  *  from register 0x1C and 0x1D it is a two byte data
1621:Core/Src/bno055.c ****  *
1622:Core/Src/bno055.c ****  *  @param euler_r_s16 : The raw r data
1623:Core/Src/bno055.c ****  *
1624:Core/Src/bno055.c ****  *  @return results of bus communication function
1625:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/cc9kYR4Z.s 			page 84


1626:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1627:Core/Src/bno055.c ****  *
1628:Core/Src/bno055.c ****  */
1629:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_r(s16 *euler_r_s16)
1630:Core/Src/bno055.c **** {
 2915              		.loc 1 1630 1 is_stmt 1 view -0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 8
 2918              		@ frame_needed = 0, uses_anonymous_args = 0
 2919              		.loc 1 1630 1 is_stmt 0 view .LVU805
 2920 0000 30B5     		push	{r4, r5, lr}
 2921              	.LCFI89:
 2922              		.cfi_def_cfa_offset 12
 2923              		.cfi_offset 4, -12
 2924              		.cfi_offset 5, -8
 2925              		.cfi_offset 14, -4
 2926 0002 83B0     		sub	sp, sp, #12
 2927              	.LCFI90:
 2928              		.cfi_def_cfa_offset 24
1631:Core/Src/bno055.c ****     /* Variable used to return value of
1632:Core/Src/bno055.c ****      * communication routine*/
1633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2929              		.loc 1 1633 5 is_stmt 1 view .LVU806
 2930              	.LVL286:
1634:Core/Src/bno055.c **** 
1635:Core/Src/bno055.c ****     /* Array holding the Euler r value
1636:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - r->LSB
1637:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - r->MSB
1638:Core/Src/bno055.c ****      */
1639:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2931              		.loc 1 1639 5 view .LVU807
 2932              		.loc 1 1639 8 is_stmt 0 view .LVU808
 2933 0004 0023     		movs	r3, #0
 2934 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1640:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2935              		.loc 1 1640 5 is_stmt 1 view .LVU809
 2936              	.LVL287:
1641:Core/Src/bno055.c **** 
1642:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1643:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2937              		.loc 1 1643 5 view .LVU810
 2938              		.loc 1 1643 18 is_stmt 0 view .LVU811
 2939 000a 134B     		ldr	r3, .L229
 2940 000c 1B68     		ldr	r3, [r3]
 2941              		.loc 1 1643 8 view .LVU812
 2942 000e EBB1     		cbz	r3, .L225
 2943 0010 0446     		mov	r4, r0
1644:Core/Src/bno055.c ****     {
1645:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1646:Core/Src/bno055.c ****     }
1647:Core/Src/bno055.c ****     else
1648:Core/Src/bno055.c ****     {
1649:Core/Src/bno055.c ****         /*condition check for page, chip id is
1650:Core/Src/bno055.c ****          * available in the page zero*/
1651:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2944              		.loc 1 1651 9 is_stmt 1 view .LVU813
 2945              		.loc 1 1651 21 is_stmt 0 view .LVU814
ARM GAS  /tmp/cc9kYR4Z.s 			page 85


 2946 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2947              		.loc 1 1651 12 view .LVU815
 2948 0014 A3B9     		cbnz	r3, .L228
 2949              	.LVL288:
 2950              	.L223:
1652:Core/Src/bno055.c ****         {
1653:Core/Src/bno055.c ****             /* Write the page zero*/
1654:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1655:Core/Src/bno055.c ****         }
1656:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2951              		.loc 1 1656 53 discriminator 1 view .LVU816
 2952 0016 104B     		ldr	r3, .L229
 2953 0018 1B68     		ldr	r3, [r3]
 2954 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2955              		.loc 1 1656 41 discriminator 1 view .LVU817
 2956 001c CBB9     		cbnz	r3, .L226
 2957              	.L224:
1657:Core/Src/bno055.c ****         {
1658:Core/Src/bno055.c ****             /* Read the Euler roll data*/
1659:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2958              		.loc 1 1659 13 is_stmt 1 view .LVU818
 2959              		.loc 1 1659 32 is_stmt 0 view .LVU819
 2960 001e 0E4B     		ldr	r3, .L229
 2961 0020 1868     		ldr	r0, [r3]
 2962 0022 0569     		ldr	r5, [r0, #16]
 2963              		.loc 1 1659 24 view .LVU820
 2964 0024 0223     		movs	r3, #2
 2965 0026 01AA     		add	r2, sp, #4
 2966 0028 1C21     		movs	r1, #28
 2967 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2968 002c A847     		blx	r5
 2969              	.LVL289:
1660:Core/Src/bno055.c ****                                                       BNO055_EULER_R_LSB_VALUER_REG,
1661:Core/Src/bno055.c ****                                                       data_u8,
1662:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1663:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2970              		.loc 1 1663 13 is_stmt 1 view .LVU821
1664:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_LSB_VALUER);
1665:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2971              		.loc 1 1665 13 view .LVU822
1666:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_MSB_VALUER);
1667:Core/Src/bno055.c ****             *euler_r_s16 =
 2972              		.loc 1 1667 13 view .LVU823
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2973              		.loc 1 1668 31 is_stmt 0 view .LVU824
 2974 002e 9DF90520 		ldrsb	r2, [sp, #5]
1669:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2975              		.loc 1 1669 31 view .LVU825
 2976 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2977              		.loc 1 1668 17 view .LVU826
 2978 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1667:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2979              		.loc 1 1667 26 view .LVU827
 2980 003a 2380     		strh	r3, [r4]	@ movhi
 2981              	.LVL290:
 2982              	.L222:
ARM GAS  /tmp/cc9kYR4Z.s 			page 86


1670:Core/Src/bno055.c ****         }
1671:Core/Src/bno055.c ****         else
1672:Core/Src/bno055.c ****         {
1673:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1674:Core/Src/bno055.c ****         }
1675:Core/Src/bno055.c ****     }
1676:Core/Src/bno055.c **** 
1677:Core/Src/bno055.c ****     return com_rslt;
1678:Core/Src/bno055.c **** }
 2983              		.loc 1 1678 1 view .LVU828
 2984 003c 03B0     		add	sp, sp, #12
 2985              	.LCFI91:
 2986              		.cfi_remember_state
 2987              		.cfi_def_cfa_offset 12
 2988              		@ sp needed
 2989 003e 30BD     		pop	{r4, r5, pc}
 2990              	.LVL291:
 2991              	.L228:
 2992              	.LCFI92:
 2993              		.cfi_restore_state
1654:Core/Src/bno055.c ****         }
 2994              		.loc 1 1654 13 is_stmt 1 view .LVU829
1654:Core/Src/bno055.c ****         }
 2995              		.loc 1 1654 23 is_stmt 0 view .LVU830
 2996 0040 0020     		movs	r0, #0
 2997              	.LVL292:
1654:Core/Src/bno055.c ****         }
 2998              		.loc 1 1654 23 view .LVU831
 2999 0042 FFF7FEFF 		bl	bno055_write_page_id
 3000              	.LVL293:
1656:Core/Src/bno055.c ****         {
 3001              		.loc 1 1656 9 is_stmt 1 view .LVU832
1656:Core/Src/bno055.c ****         {
 3002              		.loc 1 1656 12 is_stmt 0 view .LVU833
 3003 0046 0028     		cmp	r0, #0
 3004 0048 E9D0     		beq	.L224
 3005 004a E4E7     		b	.L223
 3006              	.LVL294:
 3007              	.L225:
1645:Core/Src/bno055.c ****     }
 3008              		.loc 1 1645 16 view .LVU834
 3009 004c 6FF07E00 		mvn	r0, #126
 3010              	.LVL295:
1645:Core/Src/bno055.c ****     }
 3011              		.loc 1 1645 16 view .LVU835
 3012 0050 F4E7     		b	.L222
 3013              	.LVL296:
 3014              	.L226:
1673:Core/Src/bno055.c ****         }
 3015              		.loc 1 1673 22 view .LVU836
 3016 0052 4FF0FF30 		mov	r0, #-1
 3017 0056 F1E7     		b	.L222
 3018              	.L230:
 3019              		.align	2
 3020              	.L229:
 3021 0058 00000000 		.word	.LANCHOR0
 3022              		.cfi_endproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 87


 3023              	.LFE24:
 3025              		.section	.text.bno055_read_euler_p,"ax",%progbits
 3026              		.align	1
 3027              		.global	bno055_read_euler_p
 3028              		.syntax unified
 3029              		.thumb
 3030              		.thumb_func
 3032              	bno055_read_euler_p:
 3033              	.LVL297:
 3034              	.LFB25:
1679:Core/Src/bno055.c **** 
1680:Core/Src/bno055.c **** /*!
1681:Core/Src/bno055.c ****  *  @brief This API reads Euler data p values
1682:Core/Src/bno055.c ****  *  from register 0x1E and 0x1F it is a two byte data
1683:Core/Src/bno055.c ****  *
1684:Core/Src/bno055.c ****  *  @param euler_p_s16 : The raw p data
1685:Core/Src/bno055.c ****  *
1686:Core/Src/bno055.c ****  *  @return results of bus communication function
1687:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1688:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1689:Core/Src/bno055.c ****  *
1690:Core/Src/bno055.c ****  *
1691:Core/Src/bno055.c ****  */
1692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_p(s16 *euler_p_s16)
1693:Core/Src/bno055.c **** {
 3035              		.loc 1 1693 1 is_stmt 1 view -0
 3036              		.cfi_startproc
 3037              		@ args = 0, pretend = 0, frame = 8
 3038              		@ frame_needed = 0, uses_anonymous_args = 0
 3039              		.loc 1 1693 1 is_stmt 0 view .LVU838
 3040 0000 30B5     		push	{r4, r5, lr}
 3041              	.LCFI93:
 3042              		.cfi_def_cfa_offset 12
 3043              		.cfi_offset 4, -12
 3044              		.cfi_offset 5, -8
 3045              		.cfi_offset 14, -4
 3046 0002 83B0     		sub	sp, sp, #12
 3047              	.LCFI94:
 3048              		.cfi_def_cfa_offset 24
1694:Core/Src/bno055.c ****     /* Variable used to return value of
1695:Core/Src/bno055.c ****      * communication routine*/
1696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3049              		.loc 1 1696 5 is_stmt 1 view .LVU839
 3050              	.LVL298:
1697:Core/Src/bno055.c **** 
1698:Core/Src/bno055.c ****     /* Array holding the Euler p value
1699:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - p->LSB
1700:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - p->MSB
1701:Core/Src/bno055.c ****      */
1702:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3051              		.loc 1 1702 5 view .LVU840
 3052              		.loc 1 1702 8 is_stmt 0 view .LVU841
 3053 0004 0023     		movs	r3, #0
 3054 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1703:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3055              		.loc 1 1703 5 is_stmt 1 view .LVU842
 3056              	.LVL299:
ARM GAS  /tmp/cc9kYR4Z.s 			page 88


1704:Core/Src/bno055.c **** 
1705:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1706:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3057              		.loc 1 1706 5 view .LVU843
 3058              		.loc 1 1706 18 is_stmt 0 view .LVU844
 3059 000a 134B     		ldr	r3, .L239
 3060 000c 1B68     		ldr	r3, [r3]
 3061              		.loc 1 1706 8 view .LVU845
 3062 000e EBB1     		cbz	r3, .L235
 3063 0010 0446     		mov	r4, r0
1707:Core/Src/bno055.c ****     {
1708:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1709:Core/Src/bno055.c ****     }
1710:Core/Src/bno055.c ****     else
1711:Core/Src/bno055.c ****     {
1712:Core/Src/bno055.c ****         /*condition check for page, chip id is
1713:Core/Src/bno055.c ****          * available in the page zero*/
1714:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3064              		.loc 1 1714 9 is_stmt 1 view .LVU846
 3065              		.loc 1 1714 21 is_stmt 0 view .LVU847
 3066 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3067              		.loc 1 1714 12 view .LVU848
 3068 0014 A3B9     		cbnz	r3, .L238
 3069              	.LVL300:
 3070              	.L233:
1715:Core/Src/bno055.c ****         {
1716:Core/Src/bno055.c ****             /* Write the page zero*/
1717:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1718:Core/Src/bno055.c ****         }
1719:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3071              		.loc 1 1719 53 discriminator 1 view .LVU849
 3072 0016 104B     		ldr	r3, .L239
 3073 0018 1B68     		ldr	r3, [r3]
 3074 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3075              		.loc 1 1719 41 discriminator 1 view .LVU850
 3076 001c CBB9     		cbnz	r3, .L236
 3077              	.L234:
1720:Core/Src/bno055.c ****         {
1721:Core/Src/bno055.c ****             /* Read the Euler p data*/
1722:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3078              		.loc 1 1722 13 is_stmt 1 view .LVU851
 3079              		.loc 1 1722 32 is_stmt 0 view .LVU852
 3080 001e 0E4B     		ldr	r3, .L239
 3081 0020 1868     		ldr	r0, [r3]
 3082 0022 0569     		ldr	r5, [r0, #16]
 3083              		.loc 1 1722 24 view .LVU853
 3084 0024 0223     		movs	r3, #2
 3085 0026 01AA     		add	r2, sp, #4
 3086 0028 1E21     		movs	r1, #30
 3087 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3088 002c A847     		blx	r5
 3089              	.LVL301:
1723:Core/Src/bno055.c ****                                                       BNO055_EULER_P_LSB_VALUEP_REG,
1724:Core/Src/bno055.c ****                                                       data_u8,
1725:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1726:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 3090              		.loc 1 1726 13 is_stmt 1 view .LVU854
ARM GAS  /tmp/cc9kYR4Z.s 			page 89


1727:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_LSB_VALUEP);
1728:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 3091              		.loc 1 1728 13 view .LVU855
1729:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_MSB_VALUEP);
1730:Core/Src/bno055.c ****             *euler_p_s16 =
 3092              		.loc 1 1730 13 view .LVU856
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3093              		.loc 1 1731 31 is_stmt 0 view .LVU857
 3094 002e 9DF90520 		ldrsb	r2, [sp, #5]
1732:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 3095              		.loc 1 1732 31 view .LVU858
 3096 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3097              		.loc 1 1731 17 view .LVU859
 3098 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1730:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3099              		.loc 1 1730 26 view .LVU860
 3100 003a 2380     		strh	r3, [r4]	@ movhi
 3101              	.LVL302:
 3102              	.L232:
1733:Core/Src/bno055.c ****         }
1734:Core/Src/bno055.c ****         else
1735:Core/Src/bno055.c ****         {
1736:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1737:Core/Src/bno055.c ****         }
1738:Core/Src/bno055.c ****     }
1739:Core/Src/bno055.c **** 
1740:Core/Src/bno055.c ****     return com_rslt;
1741:Core/Src/bno055.c **** }
 3103              		.loc 1 1741 1 view .LVU861
 3104 003c 03B0     		add	sp, sp, #12
 3105              	.LCFI95:
 3106              		.cfi_remember_state
 3107              		.cfi_def_cfa_offset 12
 3108              		@ sp needed
 3109 003e 30BD     		pop	{r4, r5, pc}
 3110              	.LVL303:
 3111              	.L238:
 3112              	.LCFI96:
 3113              		.cfi_restore_state
1717:Core/Src/bno055.c ****         }
 3114              		.loc 1 1717 13 is_stmt 1 view .LVU862
1717:Core/Src/bno055.c ****         }
 3115              		.loc 1 1717 23 is_stmt 0 view .LVU863
 3116 0040 0020     		movs	r0, #0
 3117              	.LVL304:
1717:Core/Src/bno055.c ****         }
 3118              		.loc 1 1717 23 view .LVU864
 3119 0042 FFF7FEFF 		bl	bno055_write_page_id
 3120              	.LVL305:
1719:Core/Src/bno055.c ****         {
 3121              		.loc 1 1719 9 is_stmt 1 view .LVU865
1719:Core/Src/bno055.c ****         {
 3122              		.loc 1 1719 12 is_stmt 0 view .LVU866
 3123 0046 0028     		cmp	r0, #0
 3124 0048 E9D0     		beq	.L234
 3125 004a E4E7     		b	.L233
ARM GAS  /tmp/cc9kYR4Z.s 			page 90


 3126              	.LVL306:
 3127              	.L235:
1708:Core/Src/bno055.c ****     }
 3128              		.loc 1 1708 16 view .LVU867
 3129 004c 6FF07E00 		mvn	r0, #126
 3130              	.LVL307:
1708:Core/Src/bno055.c ****     }
 3131              		.loc 1 1708 16 view .LVU868
 3132 0050 F4E7     		b	.L232
 3133              	.LVL308:
 3134              	.L236:
1736:Core/Src/bno055.c ****         }
 3135              		.loc 1 1736 22 view .LVU869
 3136 0052 4FF0FF30 		mov	r0, #-1
 3137 0056 F1E7     		b	.L232
 3138              	.L240:
 3139              		.align	2
 3140              	.L239:
 3141 0058 00000000 		.word	.LANCHOR0
 3142              		.cfi_endproc
 3143              	.LFE25:
 3145              		.section	.text.bno055_read_euler_hrp,"ax",%progbits
 3146              		.align	1
 3147              		.global	bno055_read_euler_hrp
 3148              		.syntax unified
 3149              		.thumb
 3150              		.thumb_func
 3152              	bno055_read_euler_hrp:
 3153              	.LVL309:
 3154              	.LFB26:
1742:Core/Src/bno055.c **** 
1743:Core/Src/bno055.c **** /*!
1744:Core/Src/bno055.c ****  *  @brief This API reads Euler data hrp values
1745:Core/Src/bno055.c ****  *  from register 0x1A to 0x1F it is a six byte data
1746:Core/Src/bno055.c ****  *
1747:Core/Src/bno055.c ****  *
1748:Core/Src/bno055.c ****  *  @param euler : The Euler hrp data's
1749:Core/Src/bno055.c ****  *
1750:Core/Src/bno055.c ****  *  Parameter |    result
1751:Core/Src/bno055.c ****  *  --------- | -----------------
1752:Core/Src/bno055.c ****  *   h        | The Euler h data
1753:Core/Src/bno055.c ****  *   r        | The Euler r data
1754:Core/Src/bno055.c ****  *   p        | The Euler p data
1755:Core/Src/bno055.c ****  *
1756:Core/Src/bno055.c ****  *
1757:Core/Src/bno055.c ****  *  @return results of bus communication function
1758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1760:Core/Src/bno055.c ****  *
1761:Core/Src/bno055.c ****  */
1762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_hrp(struct bno055_euler_t *euler)
1763:Core/Src/bno055.c **** {
 3155              		.loc 1 1763 1 is_stmt 1 view -0
 3156              		.cfi_startproc
 3157              		@ args = 0, pretend = 0, frame = 8
 3158              		@ frame_needed = 0, uses_anonymous_args = 0
 3159              		.loc 1 1763 1 is_stmt 0 view .LVU871
ARM GAS  /tmp/cc9kYR4Z.s 			page 91


 3160 0000 30B5     		push	{r4, r5, lr}
 3161              	.LCFI97:
 3162              		.cfi_def_cfa_offset 12
 3163              		.cfi_offset 4, -12
 3164              		.cfi_offset 5, -8
 3165              		.cfi_offset 14, -4
 3166 0002 83B0     		sub	sp, sp, #12
 3167              	.LCFI98:
 3168              		.cfi_def_cfa_offset 24
 3169 0004 0446     		mov	r4, r0
1764:Core/Src/bno055.c ****     /* Variable used to return value of
1765:Core/Src/bno055.c ****      * communication routine*/
1766:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3170              		.loc 1 1766 5 is_stmt 1 view .LVU872
 3171              	.LVL310:
1767:Core/Src/bno055.c **** 
1768:Core/Src/bno055.c ****     /* Array holding the Euler hrp value
1769:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] - h->LSB
1770:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] - h->MSB
1771:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] - r->MSB
1772:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] - r->MSB
1773:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] - p->MSB
1774:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] - p->MSB
1775:Core/Src/bno055.c ****      */
1776:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_HRP_DATA_SIZE] = {
 3172              		.loc 1 1776 5 view .LVU873
 3173              		.loc 1 1776 8 is_stmt 0 view .LVU874
 3174 0006 1D4B     		ldr	r3, .L249
 3175 0008 93E80300 		ldm	r3, {r0, r1}
 3176              	.LVL311:
 3177              		.loc 1 1776 8 view .LVU875
 3178 000c 0090     		str	r0, [sp]
 3179 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1777:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1778:Core/Src/bno055.c ****     };
1779:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3180              		.loc 1 1779 5 is_stmt 1 view .LVU876
 3181              	.LVL312:
1780:Core/Src/bno055.c **** 
1781:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1782:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3182              		.loc 1 1782 5 view .LVU877
 3183              		.loc 1 1782 18 is_stmt 0 view .LVU878
 3184 0012 1B4B     		ldr	r3, .L249+4
 3185 0014 1B68     		ldr	r3, [r3]
 3186              		.loc 1 1782 8 view .LVU879
 3187 0016 53B3     		cbz	r3, .L245
1783:Core/Src/bno055.c ****     {
1784:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1785:Core/Src/bno055.c ****     }
1786:Core/Src/bno055.c ****     else
1787:Core/Src/bno055.c ****     {
1788:Core/Src/bno055.c ****         /*condition check for page, chip id is
1789:Core/Src/bno055.c ****          * available in the page zero*/
1790:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3188              		.loc 1 1790 9 is_stmt 1 view .LVU880
 3189              		.loc 1 1790 21 is_stmt 0 view .LVU881
ARM GAS  /tmp/cc9kYR4Z.s 			page 92


 3190 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3191              		.loc 1 1790 12 view .LVU882
 3192 001a 13BB     		cbnz	r3, .L248
 3193              	.LVL313:
 3194              	.L243:
1791:Core/Src/bno055.c ****         {
1792:Core/Src/bno055.c ****             /* Write the page zero*/
1793:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1794:Core/Src/bno055.c ****         }
1795:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3195              		.loc 1 1795 53 discriminator 1 view .LVU883
 3196 001c 184B     		ldr	r3, .L249+4
 3197 001e 1B68     		ldr	r3, [r3]
 3198 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3199              		.loc 1 1795 41 discriminator 1 view .LVU884
 3200 0022 3BBB     		cbnz	r3, .L246
 3201              	.L244:
1796:Core/Src/bno055.c ****         {
1797:Core/Src/bno055.c ****             /* Read the six byte of Euler hrp data*/
1798:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3202              		.loc 1 1798 13 is_stmt 1 view .LVU885
 3203              		.loc 1 1798 32 is_stmt 0 view .LVU886
 3204 0024 164B     		ldr	r3, .L249+4
 3205 0026 1868     		ldr	r0, [r3]
 3206 0028 0569     		ldr	r5, [r0, #16]
 3207              		.loc 1 1798 24 view .LVU887
 3208 002a 0623     		movs	r3, #6
 3209 002c 6A46     		mov	r2, sp
 3210 002e 1A21     		movs	r1, #26
 3211 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3212 0032 A847     		blx	r5
 3213              	.LVL314:
1799:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1800:Core/Src/bno055.c ****                                                       data_u8,
1801:Core/Src/bno055.c ****                                                       BNO055_EULER_HRP_DATA_SIZE);
1802:Core/Src/bno055.c **** 
1803:Core/Src/bno055.c ****             /* Data h*/
1804:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] = BNO055_GET_BITSLICE(
 3214              		.loc 1 1804 13 is_stmt 1 view .LVU888
1805:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB],
1806:Core/Src/bno055.c ****                 BNO055_EULER_H_LSB_VALUEH);
1807:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] = BNO055_GET_BITSLICE(
 3215              		.loc 1 1807 13 view .LVU889
1808:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB],
1809:Core/Src/bno055.c ****                 BNO055_EULER_H_MSB_VALUEH);
1810:Core/Src/bno055.c ****             euler->h =
 3216              		.loc 1 1810 13 view .LVU890
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3217              		.loc 1 1811 31 is_stmt 0 view .LVU891
 3218 0034 9DF90120 		ldrsb	r2, [sp, #1]
1812:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB]));
 3219              		.loc 1 1812 31 view .LVU892
 3220 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3221              		.loc 1 1811 17 view .LVU893
 3222 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1810:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
ARM GAS  /tmp/cc9kYR4Z.s 			page 93


 3223              		.loc 1 1810 22 view .LVU894
 3224 0040 2380     		strh	r3, [r4]	@ movhi
1813:Core/Src/bno055.c **** 
1814:Core/Src/bno055.c ****             /* Data r*/
1815:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] = BNO055_GET_BITSLICE(
 3225              		.loc 1 1815 13 is_stmt 1 view .LVU895
1816:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB],
1817:Core/Src/bno055.c ****                 BNO055_EULER_R_LSB_VALUER);
1818:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] = BNO055_GET_BITSLICE(
 3226              		.loc 1 1818 13 view .LVU896
1819:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB],
1820:Core/Src/bno055.c ****                 BNO055_EULER_R_MSB_VALUER);
1821:Core/Src/bno055.c ****             euler->r =
 3227              		.loc 1 1821 13 view .LVU897
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3228              		.loc 1 1822 31 is_stmt 0 view .LVU898
 3229 0042 9DF90320 		ldrsb	r2, [sp, #3]
1823:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB]));
 3230              		.loc 1 1823 31 view .LVU899
 3231 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3232              		.loc 1 1822 17 view .LVU900
 3233 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1821:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3234              		.loc 1 1821 22 view .LVU901
 3235 004e 6380     		strh	r3, [r4, #2]	@ movhi
1824:Core/Src/bno055.c **** 
1825:Core/Src/bno055.c ****             /* Data p*/
1826:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] = BNO055_GET_BITSLICE(
 3236              		.loc 1 1826 13 is_stmt 1 view .LVU902
1827:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB],
1828:Core/Src/bno055.c ****                 BNO055_EULER_P_LSB_VALUEP);
1829:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] = BNO055_GET_BITSLICE(
 3237              		.loc 1 1829 13 view .LVU903
1830:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB],
1831:Core/Src/bno055.c ****                 BNO055_EULER_P_MSB_VALUEP);
1832:Core/Src/bno055.c ****             euler->p =
 3238              		.loc 1 1832 13 view .LVU904
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3239              		.loc 1 1833 31 is_stmt 0 view .LVU905
 3240 0050 9DF90520 		ldrsb	r2, [sp, #5]
1834:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB]));
 3241              		.loc 1 1834 31 view .LVU906
 3242 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3243              		.loc 1 1833 17 view .LVU907
 3244 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1832:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3245              		.loc 1 1832 22 view .LVU908
 3246 005c A380     		strh	r3, [r4, #4]	@ movhi
 3247              	.LVL315:
 3248              	.L242:
1835:Core/Src/bno055.c ****         }
1836:Core/Src/bno055.c ****         else
1837:Core/Src/bno055.c ****         {
1838:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1839:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 94


1840:Core/Src/bno055.c ****     }
1841:Core/Src/bno055.c **** 
1842:Core/Src/bno055.c ****     return com_rslt;
1843:Core/Src/bno055.c **** }
 3249              		.loc 1 1843 1 view .LVU909
 3250 005e 03B0     		add	sp, sp, #12
 3251              	.LCFI99:
 3252              		.cfi_remember_state
 3253              		.cfi_def_cfa_offset 12
 3254              		@ sp needed
 3255 0060 30BD     		pop	{r4, r5, pc}
 3256              	.LVL316:
 3257              	.L248:
 3258              	.LCFI100:
 3259              		.cfi_restore_state
1793:Core/Src/bno055.c ****         }
 3260              		.loc 1 1793 13 is_stmt 1 view .LVU910
1793:Core/Src/bno055.c ****         }
 3261              		.loc 1 1793 23 is_stmt 0 view .LVU911
 3262 0062 0020     		movs	r0, #0
 3263 0064 FFF7FEFF 		bl	bno055_write_page_id
 3264              	.LVL317:
1795:Core/Src/bno055.c ****         {
 3265              		.loc 1 1795 9 is_stmt 1 view .LVU912
1795:Core/Src/bno055.c ****         {
 3266              		.loc 1 1795 12 is_stmt 0 view .LVU913
 3267 0068 0028     		cmp	r0, #0
 3268 006a DBD0     		beq	.L244
 3269 006c D6E7     		b	.L243
 3270              	.LVL318:
 3271              	.L245:
1784:Core/Src/bno055.c ****     }
 3272              		.loc 1 1784 16 view .LVU914
 3273 006e 6FF07E00 		mvn	r0, #126
 3274 0072 F4E7     		b	.L242
 3275              	.LVL319:
 3276              	.L246:
1838:Core/Src/bno055.c ****         }
 3277              		.loc 1 1838 22 view .LVU915
 3278 0074 4FF0FF30 		mov	r0, #-1
 3279 0078 F1E7     		b	.L242
 3280              	.L250:
 3281 007a 00BF     		.align	2
 3282              	.L249:
 3283 007c 00000000 		.word	.LANCHOR1
 3284 0080 00000000 		.word	.LANCHOR0
 3285              		.cfi_endproc
 3286              	.LFE26:
 3288              		.section	.text.bno055_read_quaternion_w,"ax",%progbits
 3289              		.align	1
 3290              		.global	bno055_read_quaternion_w
 3291              		.syntax unified
 3292              		.thumb
 3293              		.thumb_func
 3295              	bno055_read_quaternion_w:
 3296              	.LVL320:
 3297              	.LFB27:
ARM GAS  /tmp/cc9kYR4Z.s 			page 95


1844:Core/Src/bno055.c **** 
1845:Core/Src/bno055.c **** /*!
1846:Core/Src/bno055.c ****  *  @brief This API reads quaternion data w values
1847:Core/Src/bno055.c ****  *  from register 0x20 and 0x21 it is a two byte data
1848:Core/Src/bno055.c ****  *
1849:Core/Src/bno055.c ****  *  @param quaternion_w_s16 : The raw w data
1850:Core/Src/bno055.c ****  *
1851:Core/Src/bno055.c ****  *  @return results of bus communication function
1852:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1853:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1854:Core/Src/bno055.c ****  *
1855:Core/Src/bno055.c ****  *
1856:Core/Src/bno055.c ****  */
1857:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_w(s16 *quaternion_w_s16)
1858:Core/Src/bno055.c **** {
 3298              		.loc 1 1858 1 is_stmt 1 view -0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 8
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
 3302              		.loc 1 1858 1 is_stmt 0 view .LVU917
 3303 0000 30B5     		push	{r4, r5, lr}
 3304              	.LCFI101:
 3305              		.cfi_def_cfa_offset 12
 3306              		.cfi_offset 4, -12
 3307              		.cfi_offset 5, -8
 3308              		.cfi_offset 14, -4
 3309 0002 83B0     		sub	sp, sp, #12
 3310              	.LCFI102:
 3311              		.cfi_def_cfa_offset 24
1859:Core/Src/bno055.c ****     /* Variable used to return value of
1860:Core/Src/bno055.c ****      * communication routine*/
1861:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3312              		.loc 1 1861 5 is_stmt 1 view .LVU918
 3313              	.LVL321:
1862:Core/Src/bno055.c **** 
1863:Core/Src/bno055.c ****     /* Array holding the Quaternion w value
1864:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - w->LSB
1865:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - w->MSB
1866:Core/Src/bno055.c ****      */
1867:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3314              		.loc 1 1867 5 view .LVU919
 3315              		.loc 1 1867 8 is_stmt 0 view .LVU920
 3316 0004 0023     		movs	r3, #0
 3317 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1868:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3318              		.loc 1 1868 5 is_stmt 1 view .LVU921
 3319              	.LVL322:
1869:Core/Src/bno055.c **** 
1870:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1871:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3320              		.loc 1 1871 5 view .LVU922
 3321              		.loc 1 1871 18 is_stmt 0 view .LVU923
 3322 000a 134B     		ldr	r3, .L259
 3323 000c 1B68     		ldr	r3, [r3]
 3324              		.loc 1 1871 8 view .LVU924
 3325 000e EBB1     		cbz	r3, .L255
 3326 0010 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 96


1872:Core/Src/bno055.c ****     {
1873:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1874:Core/Src/bno055.c ****     }
1875:Core/Src/bno055.c ****     else
1876:Core/Src/bno055.c ****     {
1877:Core/Src/bno055.c ****         /*condition check for page, chip id is
1878:Core/Src/bno055.c ****          * available in the page zero*/
1879:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3327              		.loc 1 1879 9 is_stmt 1 view .LVU925
 3328              		.loc 1 1879 21 is_stmt 0 view .LVU926
 3329 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3330              		.loc 1 1879 12 view .LVU927
 3331 0014 A3B9     		cbnz	r3, .L258
 3332              	.LVL323:
 3333              	.L253:
1880:Core/Src/bno055.c ****         {
1881:Core/Src/bno055.c ****             /* Write the page zero*/
1882:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1883:Core/Src/bno055.c ****         }
1884:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3334              		.loc 1 1884 53 discriminator 1 view .LVU928
 3335 0016 104B     		ldr	r3, .L259
 3336 0018 1B68     		ldr	r3, [r3]
 3337 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3338              		.loc 1 1884 41 discriminator 1 view .LVU929
 3339 001c CBB9     		cbnz	r3, .L256
 3340              	.L254:
1885:Core/Src/bno055.c ****         {
1886:Core/Src/bno055.c ****             /* Read the two byte value
1887:Core/Src/bno055.c ****              * of quaternion w data*/
1888:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3341              		.loc 1 1888 13 is_stmt 1 view .LVU930
 3342              		.loc 1 1888 32 is_stmt 0 view .LVU931
 3343 001e 0E4B     		ldr	r3, .L259
 3344 0020 1868     		ldr	r0, [r3]
 3345 0022 0569     		ldr	r5, [r0, #16]
 3346              		.loc 1 1888 24 view .LVU932
 3347 0024 0223     		movs	r3, #2
 3348 0026 01AA     		add	r2, sp, #4
 3349 0028 2021     		movs	r1, #32
 3350 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3351 002c A847     		blx	r5
 3352              	.LVL324:
1889:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
1890:Core/Src/bno055.c ****                                                       data_u8,
1891:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1892:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3353              		.loc 1 1892 13 is_stmt 1 view .LVU933
1893:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1894:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3354              		.loc 1 1894 13 view .LVU934
1895:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1896:Core/Src/bno055.c ****             *quaternion_w_s16 =
 3355              		.loc 1 1896 13 view .LVU935
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3356              		.loc 1 1897 31 is_stmt 0 view .LVU936
 3357 002e 9DF90520 		ldrsb	r2, [sp, #5]
ARM GAS  /tmp/cc9kYR4Z.s 			page 97


1898:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3358              		.loc 1 1898 31 view .LVU937
 3359 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3360              		.loc 1 1897 17 view .LVU938
 3361 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1896:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3362              		.loc 1 1896 31 view .LVU939
 3363 003a 2380     		strh	r3, [r4]	@ movhi
 3364              	.LVL325:
 3365              	.L252:
1899:Core/Src/bno055.c ****         }
1900:Core/Src/bno055.c ****         else
1901:Core/Src/bno055.c ****         {
1902:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1903:Core/Src/bno055.c ****         }
1904:Core/Src/bno055.c ****     }
1905:Core/Src/bno055.c **** 
1906:Core/Src/bno055.c ****     return com_rslt;
1907:Core/Src/bno055.c **** }
 3366              		.loc 1 1907 1 view .LVU940
 3367 003c 03B0     		add	sp, sp, #12
 3368              	.LCFI103:
 3369              		.cfi_remember_state
 3370              		.cfi_def_cfa_offset 12
 3371              		@ sp needed
 3372 003e 30BD     		pop	{r4, r5, pc}
 3373              	.LVL326:
 3374              	.L258:
 3375              	.LCFI104:
 3376              		.cfi_restore_state
1882:Core/Src/bno055.c ****         }
 3377              		.loc 1 1882 13 is_stmt 1 view .LVU941
1882:Core/Src/bno055.c ****         }
 3378              		.loc 1 1882 23 is_stmt 0 view .LVU942
 3379 0040 0020     		movs	r0, #0
 3380              	.LVL327:
1882:Core/Src/bno055.c ****         }
 3381              		.loc 1 1882 23 view .LVU943
 3382 0042 FFF7FEFF 		bl	bno055_write_page_id
 3383              	.LVL328:
1884:Core/Src/bno055.c ****         {
 3384              		.loc 1 1884 9 is_stmt 1 view .LVU944
1884:Core/Src/bno055.c ****         {
 3385              		.loc 1 1884 12 is_stmt 0 view .LVU945
 3386 0046 0028     		cmp	r0, #0
 3387 0048 E9D0     		beq	.L254
 3388 004a E4E7     		b	.L253
 3389              	.LVL329:
 3390              	.L255:
1873:Core/Src/bno055.c ****     }
 3391              		.loc 1 1873 16 view .LVU946
 3392 004c 6FF07E00 		mvn	r0, #126
 3393              	.LVL330:
1873:Core/Src/bno055.c ****     }
 3394              		.loc 1 1873 16 view .LVU947
 3395 0050 F4E7     		b	.L252
ARM GAS  /tmp/cc9kYR4Z.s 			page 98


 3396              	.LVL331:
 3397              	.L256:
1902:Core/Src/bno055.c ****         }
 3398              		.loc 1 1902 22 view .LVU948
 3399 0052 4FF0FF30 		mov	r0, #-1
 3400 0056 F1E7     		b	.L252
 3401              	.L260:
 3402              		.align	2
 3403              	.L259:
 3404 0058 00000000 		.word	.LANCHOR0
 3405              		.cfi_endproc
 3406              	.LFE27:
 3408              		.section	.text.bno055_read_quaternion_x,"ax",%progbits
 3409              		.align	1
 3410              		.global	bno055_read_quaternion_x
 3411              		.syntax unified
 3412              		.thumb
 3413              		.thumb_func
 3415              	bno055_read_quaternion_x:
 3416              	.LVL332:
 3417              	.LFB28:
1908:Core/Src/bno055.c **** 
1909:Core/Src/bno055.c **** /*!
1910:Core/Src/bno055.c ****  *  @brief This API reads quaternion data x values
1911:Core/Src/bno055.c ****  *  from register 0x22 and 0x23 it is a two byte data
1912:Core/Src/bno055.c ****  *
1913:Core/Src/bno055.c ****  *  @param quaternion_x_s16 : The raw x data
1914:Core/Src/bno055.c ****  *
1915:Core/Src/bno055.c ****  *  @return results of bus communication function
1916:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1917:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1918:Core/Src/bno055.c ****  *
1919:Core/Src/bno055.c ****  *
1920:Core/Src/bno055.c ****  */
1921:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_x(s16 *quaternion_x_s16)
1922:Core/Src/bno055.c **** {
 3418              		.loc 1 1922 1 is_stmt 1 view -0
 3419              		.cfi_startproc
 3420              		@ args = 0, pretend = 0, frame = 8
 3421              		@ frame_needed = 0, uses_anonymous_args = 0
 3422              		.loc 1 1922 1 is_stmt 0 view .LVU950
 3423 0000 30B5     		push	{r4, r5, lr}
 3424              	.LCFI105:
 3425              		.cfi_def_cfa_offset 12
 3426              		.cfi_offset 4, -12
 3427              		.cfi_offset 5, -8
 3428              		.cfi_offset 14, -4
 3429 0002 83B0     		sub	sp, sp, #12
 3430              	.LCFI106:
 3431              		.cfi_def_cfa_offset 24
1923:Core/Src/bno055.c ****     /* Variable used to return value of
1924:Core/Src/bno055.c ****      * communication routine*/
1925:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3432              		.loc 1 1925 5 is_stmt 1 view .LVU951
 3433              	.LVL333:
1926:Core/Src/bno055.c **** 
1927:Core/Src/bno055.c ****     /* Array holding the quaternion x value
ARM GAS  /tmp/cc9kYR4Z.s 			page 99


1928:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - x->LSB
1929:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - x->MSB
1930:Core/Src/bno055.c ****      */
1931:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3434              		.loc 1 1931 5 view .LVU952
 3435              		.loc 1 1931 8 is_stmt 0 view .LVU953
 3436 0004 0023     		movs	r3, #0
 3437 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1932:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3438              		.loc 1 1932 5 is_stmt 1 view .LVU954
 3439              	.LVL334:
1933:Core/Src/bno055.c **** 
1934:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1935:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3440              		.loc 1 1935 5 view .LVU955
 3441              		.loc 1 1935 18 is_stmt 0 view .LVU956
 3442 000a 134B     		ldr	r3, .L269
 3443 000c 1B68     		ldr	r3, [r3]
 3444              		.loc 1 1935 8 view .LVU957
 3445 000e EBB1     		cbz	r3, .L265
 3446 0010 0446     		mov	r4, r0
1936:Core/Src/bno055.c ****     {
1937:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1938:Core/Src/bno055.c ****     }
1939:Core/Src/bno055.c ****     else
1940:Core/Src/bno055.c ****     {
1941:Core/Src/bno055.c ****         /*condition check for page, chip id is
1942:Core/Src/bno055.c ****          * available in the page zero*/
1943:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3447              		.loc 1 1943 9 is_stmt 1 view .LVU958
 3448              		.loc 1 1943 21 is_stmt 0 view .LVU959
 3449 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3450              		.loc 1 1943 12 view .LVU960
 3451 0014 A3B9     		cbnz	r3, .L268
 3452              	.LVL335:
 3453              	.L263:
1944:Core/Src/bno055.c ****         {
1945:Core/Src/bno055.c ****             /* Write the page zero*/
1946:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1947:Core/Src/bno055.c ****         }
1948:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3454              		.loc 1 1948 53 discriminator 1 view .LVU961
 3455 0016 104B     		ldr	r3, .L269
 3456 0018 1B68     		ldr	r3, [r3]
 3457 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3458              		.loc 1 1948 41 discriminator 1 view .LVU962
 3459 001c CBB9     		cbnz	r3, .L266
 3460              	.L264:
1949:Core/Src/bno055.c ****         {
1950:Core/Src/bno055.c ****             /* Read the two byte value
1951:Core/Src/bno055.c ****              * of quaternion x data*/
1952:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3461              		.loc 1 1952 13 is_stmt 1 view .LVU963
 3462              		.loc 1 1952 32 is_stmt 0 view .LVU964
 3463 001e 0E4B     		ldr	r3, .L269
 3464 0020 1868     		ldr	r0, [r3]
 3465 0022 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/cc9kYR4Z.s 			page 100


 3466              		.loc 1 1952 24 view .LVU965
 3467 0024 0223     		movs	r3, #2
 3468 0026 01AA     		add	r2, sp, #4
 3469 0028 2221     		movs	r1, #34
 3470 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3471 002c A847     		blx	r5
 3472              	.LVL336:
1953:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_X_LSB_VALUEX_REG,
1954:Core/Src/bno055.c ****                                                       data_u8,
1955:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3473              		.loc 1 1956 13 is_stmt 1 view .LVU966
1957:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1958:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3474              		.loc 1 1958 13 view .LVU967
1959:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1960:Core/Src/bno055.c ****             *quaternion_x_s16 =
 3475              		.loc 1 1960 13 view .LVU968
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3476              		.loc 1 1961 31 is_stmt 0 view .LVU969
 3477 002e 9DF90520 		ldrsb	r2, [sp, #5]
1962:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3478              		.loc 1 1962 31 view .LVU970
 3479 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3480              		.loc 1 1961 17 view .LVU971
 3481 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1960:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3482              		.loc 1 1960 31 view .LVU972
 3483 003a 2380     		strh	r3, [r4]	@ movhi
 3484              	.LVL337:
 3485              	.L262:
1963:Core/Src/bno055.c ****         }
1964:Core/Src/bno055.c ****         else
1965:Core/Src/bno055.c ****         {
1966:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1967:Core/Src/bno055.c ****         }
1968:Core/Src/bno055.c ****     }
1969:Core/Src/bno055.c **** 
1970:Core/Src/bno055.c ****     return com_rslt;
1971:Core/Src/bno055.c **** }
 3486              		.loc 1 1971 1 view .LVU973
 3487 003c 03B0     		add	sp, sp, #12
 3488              	.LCFI107:
 3489              		.cfi_remember_state
 3490              		.cfi_def_cfa_offset 12
 3491              		@ sp needed
 3492 003e 30BD     		pop	{r4, r5, pc}
 3493              	.LVL338:
 3494              	.L268:
 3495              	.LCFI108:
 3496              		.cfi_restore_state
1946:Core/Src/bno055.c ****         }
 3497              		.loc 1 1946 13 is_stmt 1 view .LVU974
1946:Core/Src/bno055.c ****         }
 3498              		.loc 1 1946 23 is_stmt 0 view .LVU975
 3499 0040 0020     		movs	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 101


 3500              	.LVL339:
1946:Core/Src/bno055.c ****         }
 3501              		.loc 1 1946 23 view .LVU976
 3502 0042 FFF7FEFF 		bl	bno055_write_page_id
 3503              	.LVL340:
1948:Core/Src/bno055.c ****         {
 3504              		.loc 1 1948 9 is_stmt 1 view .LVU977
1948:Core/Src/bno055.c ****         {
 3505              		.loc 1 1948 12 is_stmt 0 view .LVU978
 3506 0046 0028     		cmp	r0, #0
 3507 0048 E9D0     		beq	.L264
 3508 004a E4E7     		b	.L263
 3509              	.LVL341:
 3510              	.L265:
1937:Core/Src/bno055.c ****     }
 3511              		.loc 1 1937 16 view .LVU979
 3512 004c 6FF07E00 		mvn	r0, #126
 3513              	.LVL342:
1937:Core/Src/bno055.c ****     }
 3514              		.loc 1 1937 16 view .LVU980
 3515 0050 F4E7     		b	.L262
 3516              	.LVL343:
 3517              	.L266:
1966:Core/Src/bno055.c ****         }
 3518              		.loc 1 1966 22 view .LVU981
 3519 0052 4FF0FF30 		mov	r0, #-1
 3520 0056 F1E7     		b	.L262
 3521              	.L270:
 3522              		.align	2
 3523              	.L269:
 3524 0058 00000000 		.word	.LANCHOR0
 3525              		.cfi_endproc
 3526              	.LFE28:
 3528              		.section	.text.bno055_read_quaternion_y,"ax",%progbits
 3529              		.align	1
 3530              		.global	bno055_read_quaternion_y
 3531              		.syntax unified
 3532              		.thumb
 3533              		.thumb_func
 3535              	bno055_read_quaternion_y:
 3536              	.LVL344:
 3537              	.LFB29:
1972:Core/Src/bno055.c **** 
1973:Core/Src/bno055.c **** /*!
1974:Core/Src/bno055.c ****  *  @brief This API reads quaternion data y values
1975:Core/Src/bno055.c ****  *  from register 0x24 and 0x25 it is a two byte data
1976:Core/Src/bno055.c ****  *
1977:Core/Src/bno055.c ****  *  @param quaternion_y_s16 : The raw y data
1978:Core/Src/bno055.c ****  *
1979:Core/Src/bno055.c ****  *  @return results of bus communication function
1980:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1981:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1982:Core/Src/bno055.c ****  *
1983:Core/Src/bno055.c ****  *
1984:Core/Src/bno055.c ****  */
1985:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_y(s16 *quaternion_y_s16)
1986:Core/Src/bno055.c **** {
ARM GAS  /tmp/cc9kYR4Z.s 			page 102


 3538              		.loc 1 1986 1 is_stmt 1 view -0
 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 8
 3541              		@ frame_needed = 0, uses_anonymous_args = 0
 3542              		.loc 1 1986 1 is_stmt 0 view .LVU983
 3543 0000 30B5     		push	{r4, r5, lr}
 3544              	.LCFI109:
 3545              		.cfi_def_cfa_offset 12
 3546              		.cfi_offset 4, -12
 3547              		.cfi_offset 5, -8
 3548              		.cfi_offset 14, -4
 3549 0002 83B0     		sub	sp, sp, #12
 3550              	.LCFI110:
 3551              		.cfi_def_cfa_offset 24
1987:Core/Src/bno055.c ****     /* Variable used to return value of
1988:Core/Src/bno055.c ****      * communication routine*/
1989:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3552              		.loc 1 1989 5 is_stmt 1 view .LVU984
 3553              	.LVL345:
1990:Core/Src/bno055.c **** 
1991:Core/Src/bno055.c ****     /* Array holding the quaternion y value
1992:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - y->LSB
1993:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - y->MSB
1994:Core/Src/bno055.c ****      */
1995:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3554              		.loc 1 1995 5 view .LVU985
 3555              		.loc 1 1995 8 is_stmt 0 view .LVU986
 3556 0004 0023     		movs	r3, #0
 3557 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1996:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3558              		.loc 1 1996 5 is_stmt 1 view .LVU987
 3559              	.LVL346:
1997:Core/Src/bno055.c **** 
1998:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1999:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3560              		.loc 1 1999 5 view .LVU988
 3561              		.loc 1 1999 18 is_stmt 0 view .LVU989
 3562 000a 134B     		ldr	r3, .L279
 3563 000c 1B68     		ldr	r3, [r3]
 3564              		.loc 1 1999 8 view .LVU990
 3565 000e EBB1     		cbz	r3, .L275
 3566 0010 0446     		mov	r4, r0
2000:Core/Src/bno055.c ****     {
2001:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2002:Core/Src/bno055.c ****     }
2003:Core/Src/bno055.c ****     else
2004:Core/Src/bno055.c ****     {
2005:Core/Src/bno055.c ****         /*condition check for page, chip id is
2006:Core/Src/bno055.c ****          * available in the page zero*/
2007:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3567              		.loc 1 2007 9 is_stmt 1 view .LVU991
 3568              		.loc 1 2007 21 is_stmt 0 view .LVU992
 3569 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3570              		.loc 1 2007 12 view .LVU993
 3571 0014 A3B9     		cbnz	r3, .L278
 3572              	.LVL347:
 3573              	.L273:
ARM GAS  /tmp/cc9kYR4Z.s 			page 103


2008:Core/Src/bno055.c ****         {
2009:Core/Src/bno055.c ****             /* Write the page zero*/
2010:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2011:Core/Src/bno055.c ****         }
2012:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3574              		.loc 1 2012 53 discriminator 1 view .LVU994
 3575 0016 104B     		ldr	r3, .L279
 3576 0018 1B68     		ldr	r3, [r3]
 3577 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3578              		.loc 1 2012 41 discriminator 1 view .LVU995
 3579 001c CBB9     		cbnz	r3, .L276
 3580              	.L274:
2013:Core/Src/bno055.c ****         {
2014:Core/Src/bno055.c ****             /* Read the two byte value
2015:Core/Src/bno055.c ****              * of quaternion y data*/
2016:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3581              		.loc 1 2016 13 is_stmt 1 view .LVU996
 3582              		.loc 1 2016 32 is_stmt 0 view .LVU997
 3583 001e 0E4B     		ldr	r3, .L279
 3584 0020 1868     		ldr	r0, [r3]
 3585 0022 0569     		ldr	r5, [r0, #16]
 3586              		.loc 1 2016 24 view .LVU998
 3587 0024 0223     		movs	r3, #2
 3588 0026 01AA     		add	r2, sp, #4
 3589 0028 2421     		movs	r1, #36
 3590 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3591 002c A847     		blx	r5
 3592              	.LVL348:
2017:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Y_LSB_VALUEY_REG,
2018:Core/Src/bno055.c ****                                                       data_u8,
2019:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2020:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3593              		.loc 1 2020 13 is_stmt 1 view .LVU999
2021:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2022:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3594              		.loc 1 2022 13 view .LVU1000
2023:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2024:Core/Src/bno055.c ****             *quaternion_y_s16 =
 3595              		.loc 1 2024 13 view .LVU1001
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3596              		.loc 1 2025 31 is_stmt 0 view .LVU1002
 3597 002e 9DF90520 		ldrsb	r2, [sp, #5]
2026:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3598              		.loc 1 2026 31 view .LVU1003
 3599 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3600              		.loc 1 2025 17 view .LVU1004
 3601 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2024:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3602              		.loc 1 2024 31 view .LVU1005
 3603 003a 2380     		strh	r3, [r4]	@ movhi
 3604              	.LVL349:
 3605              	.L272:
2027:Core/Src/bno055.c ****         }
2028:Core/Src/bno055.c ****         else
2029:Core/Src/bno055.c ****         {
2030:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 104


2031:Core/Src/bno055.c ****         }
2032:Core/Src/bno055.c ****     }
2033:Core/Src/bno055.c **** 
2034:Core/Src/bno055.c ****     return com_rslt;
2035:Core/Src/bno055.c **** }
 3606              		.loc 1 2035 1 view .LVU1006
 3607 003c 03B0     		add	sp, sp, #12
 3608              	.LCFI111:
 3609              		.cfi_remember_state
 3610              		.cfi_def_cfa_offset 12
 3611              		@ sp needed
 3612 003e 30BD     		pop	{r4, r5, pc}
 3613              	.LVL350:
 3614              	.L278:
 3615              	.LCFI112:
 3616              		.cfi_restore_state
2010:Core/Src/bno055.c ****         }
 3617              		.loc 1 2010 13 is_stmt 1 view .LVU1007
2010:Core/Src/bno055.c ****         }
 3618              		.loc 1 2010 23 is_stmt 0 view .LVU1008
 3619 0040 0020     		movs	r0, #0
 3620              	.LVL351:
2010:Core/Src/bno055.c ****         }
 3621              		.loc 1 2010 23 view .LVU1009
 3622 0042 FFF7FEFF 		bl	bno055_write_page_id
 3623              	.LVL352:
2012:Core/Src/bno055.c ****         {
 3624              		.loc 1 2012 9 is_stmt 1 view .LVU1010
2012:Core/Src/bno055.c ****         {
 3625              		.loc 1 2012 12 is_stmt 0 view .LVU1011
 3626 0046 0028     		cmp	r0, #0
 3627 0048 E9D0     		beq	.L274
 3628 004a E4E7     		b	.L273
 3629              	.LVL353:
 3630              	.L275:
2001:Core/Src/bno055.c ****     }
 3631              		.loc 1 2001 16 view .LVU1012
 3632 004c 6FF07E00 		mvn	r0, #126
 3633              	.LVL354:
2001:Core/Src/bno055.c ****     }
 3634              		.loc 1 2001 16 view .LVU1013
 3635 0050 F4E7     		b	.L272
 3636              	.LVL355:
 3637              	.L276:
2030:Core/Src/bno055.c ****         }
 3638              		.loc 1 2030 22 view .LVU1014
 3639 0052 4FF0FF30 		mov	r0, #-1
 3640 0056 F1E7     		b	.L272
 3641              	.L280:
 3642              		.align	2
 3643              	.L279:
 3644 0058 00000000 		.word	.LANCHOR0
 3645              		.cfi_endproc
 3646              	.LFE29:
 3648              		.section	.text.bno055_read_quaternion_z,"ax",%progbits
 3649              		.align	1
 3650              		.global	bno055_read_quaternion_z
ARM GAS  /tmp/cc9kYR4Z.s 			page 105


 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3655              	bno055_read_quaternion_z:
 3656              	.LVL356:
 3657              	.LFB30:
2036:Core/Src/bno055.c **** 
2037:Core/Src/bno055.c **** /*!
2038:Core/Src/bno055.c ****  *  @brief This API reads quaternion data z values
2039:Core/Src/bno055.c ****  *  from register 0x26 and 0x27 it is a two byte data
2040:Core/Src/bno055.c ****  *
2041:Core/Src/bno055.c ****  *  @param quaternion_z_s16 : The raw z data
2042:Core/Src/bno055.c ****  *
2043:Core/Src/bno055.c ****  *  @return results of bus communication function
2044:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2045:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2046:Core/Src/bno055.c ****  *
2047:Core/Src/bno055.c ****  *
2048:Core/Src/bno055.c ****  */
2049:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_z(s16 *quaternion_z_s16)
2050:Core/Src/bno055.c **** {
 3658              		.loc 1 2050 1 is_stmt 1 view -0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 8
 3661              		@ frame_needed = 0, uses_anonymous_args = 0
 3662              		.loc 1 2050 1 is_stmt 0 view .LVU1016
 3663 0000 30B5     		push	{r4, r5, lr}
 3664              	.LCFI113:
 3665              		.cfi_def_cfa_offset 12
 3666              		.cfi_offset 4, -12
 3667              		.cfi_offset 5, -8
 3668              		.cfi_offset 14, -4
 3669 0002 83B0     		sub	sp, sp, #12
 3670              	.LCFI114:
 3671              		.cfi_def_cfa_offset 24
2051:Core/Src/bno055.c ****     /* Variable used to return value of
2052:Core/Src/bno055.c ****      * communication routine*/
2053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3672              		.loc 1 2053 5 is_stmt 1 view .LVU1017
 3673              	.LVL357:
2054:Core/Src/bno055.c **** 
2055:Core/Src/bno055.c ****     /* Array holding the quaternion z value
2056:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - z->LSB
2057:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - z->MSB
2058:Core/Src/bno055.c ****      */
2059:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3674              		.loc 1 2059 5 view .LVU1018
 3675              		.loc 1 2059 8 is_stmt 0 view .LVU1019
 3676 0004 0023     		movs	r3, #0
 3677 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2060:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3678              		.loc 1 2060 5 is_stmt 1 view .LVU1020
 3679              	.LVL358:
2061:Core/Src/bno055.c **** 
2062:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2063:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3680              		.loc 1 2063 5 view .LVU1021
ARM GAS  /tmp/cc9kYR4Z.s 			page 106


 3681              		.loc 1 2063 18 is_stmt 0 view .LVU1022
 3682 000a 134B     		ldr	r3, .L289
 3683 000c 1B68     		ldr	r3, [r3]
 3684              		.loc 1 2063 8 view .LVU1023
 3685 000e EBB1     		cbz	r3, .L285
 3686 0010 0446     		mov	r4, r0
2064:Core/Src/bno055.c ****     {
2065:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2066:Core/Src/bno055.c ****     }
2067:Core/Src/bno055.c ****     else
2068:Core/Src/bno055.c ****     {
2069:Core/Src/bno055.c ****         /*condition check for page, chip id is
2070:Core/Src/bno055.c ****          * available in the page zero*/
2071:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3687              		.loc 1 2071 9 is_stmt 1 view .LVU1024
 3688              		.loc 1 2071 21 is_stmt 0 view .LVU1025
 3689 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3690              		.loc 1 2071 12 view .LVU1026
 3691 0014 A3B9     		cbnz	r3, .L288
 3692              	.LVL359:
 3693              	.L283:
2072:Core/Src/bno055.c ****         {
2073:Core/Src/bno055.c ****             /* Write the page zero*/
2074:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2075:Core/Src/bno055.c ****         }
2076:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3694              		.loc 1 2076 53 discriminator 1 view .LVU1027
 3695 0016 104B     		ldr	r3, .L289
 3696 0018 1B68     		ldr	r3, [r3]
 3697 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3698              		.loc 1 2076 41 discriminator 1 view .LVU1028
 3699 001c CBB9     		cbnz	r3, .L286
 3700              	.L284:
2077:Core/Src/bno055.c ****         {
2078:Core/Src/bno055.c ****             /* Read the two byte value
2079:Core/Src/bno055.c ****              * of quaternion z data*/
2080:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3701              		.loc 1 2080 13 is_stmt 1 view .LVU1029
 3702              		.loc 1 2080 32 is_stmt 0 view .LVU1030
 3703 001e 0E4B     		ldr	r3, .L289
 3704 0020 1868     		ldr	r0, [r3]
 3705 0022 0569     		ldr	r5, [r0, #16]
 3706              		.loc 1 2080 24 view .LVU1031
 3707 0024 0223     		movs	r3, #2
 3708 0026 01AA     		add	r2, sp, #4
 3709 0028 2621     		movs	r1, #38
 3710 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3711 002c A847     		blx	r5
 3712              	.LVL360:
2081:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Z_LSB_VALUEZ_REG,
2082:Core/Src/bno055.c ****                                                       data_u8,
2083:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2084:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3713              		.loc 1 2084 13 is_stmt 1 view .LVU1032
2085:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2086:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3714              		.loc 1 2086 13 view .LVU1033
ARM GAS  /tmp/cc9kYR4Z.s 			page 107


2087:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2088:Core/Src/bno055.c ****             *quaternion_z_s16 =
 3715              		.loc 1 2088 13 view .LVU1034
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3716              		.loc 1 2089 31 is_stmt 0 view .LVU1035
 3717 002e 9DF90520 		ldrsb	r2, [sp, #5]
2090:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3718              		.loc 1 2090 31 view .LVU1036
 3719 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3720              		.loc 1 2089 17 view .LVU1037
 3721 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2088:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3722              		.loc 1 2088 31 view .LVU1038
 3723 003a 2380     		strh	r3, [r4]	@ movhi
 3724              	.LVL361:
 3725              	.L282:
2091:Core/Src/bno055.c ****         }
2092:Core/Src/bno055.c ****         else
2093:Core/Src/bno055.c ****         {
2094:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2095:Core/Src/bno055.c ****         }
2096:Core/Src/bno055.c ****     }
2097:Core/Src/bno055.c **** 
2098:Core/Src/bno055.c ****     return com_rslt;
2099:Core/Src/bno055.c **** }
 3726              		.loc 1 2099 1 view .LVU1039
 3727 003c 03B0     		add	sp, sp, #12
 3728              	.LCFI115:
 3729              		.cfi_remember_state
 3730              		.cfi_def_cfa_offset 12
 3731              		@ sp needed
 3732 003e 30BD     		pop	{r4, r5, pc}
 3733              	.LVL362:
 3734              	.L288:
 3735              	.LCFI116:
 3736              		.cfi_restore_state
2074:Core/Src/bno055.c ****         }
 3737              		.loc 1 2074 13 is_stmt 1 view .LVU1040
2074:Core/Src/bno055.c ****         }
 3738              		.loc 1 2074 23 is_stmt 0 view .LVU1041
 3739 0040 0020     		movs	r0, #0
 3740              	.LVL363:
2074:Core/Src/bno055.c ****         }
 3741              		.loc 1 2074 23 view .LVU1042
 3742 0042 FFF7FEFF 		bl	bno055_write_page_id
 3743              	.LVL364:
2076:Core/Src/bno055.c ****         {
 3744              		.loc 1 2076 9 is_stmt 1 view .LVU1043
2076:Core/Src/bno055.c ****         {
 3745              		.loc 1 2076 12 is_stmt 0 view .LVU1044
 3746 0046 0028     		cmp	r0, #0
 3747 0048 E9D0     		beq	.L284
 3748 004a E4E7     		b	.L283
 3749              	.LVL365:
 3750              	.L285:
2065:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 108


 3751              		.loc 1 2065 16 view .LVU1045
 3752 004c 6FF07E00 		mvn	r0, #126
 3753              	.LVL366:
2065:Core/Src/bno055.c ****     }
 3754              		.loc 1 2065 16 view .LVU1046
 3755 0050 F4E7     		b	.L282
 3756              	.LVL367:
 3757              	.L286:
2094:Core/Src/bno055.c ****         }
 3758              		.loc 1 2094 22 view .LVU1047
 3759 0052 4FF0FF30 		mov	r0, #-1
 3760 0056 F1E7     		b	.L282
 3761              	.L290:
 3762              		.align	2
 3763              	.L289:
 3764 0058 00000000 		.word	.LANCHOR0
 3765              		.cfi_endproc
 3766              	.LFE30:
 3768              		.section	.text.bno055_read_quaternion_wxyz,"ax",%progbits
 3769              		.align	1
 3770              		.global	bno055_read_quaternion_wxyz
 3771              		.syntax unified
 3772              		.thumb
 3773              		.thumb_func
 3775              	bno055_read_quaternion_wxyz:
 3776              	.LVL368:
 3777              	.LFB31:
2100:Core/Src/bno055.c **** 
2101:Core/Src/bno055.c **** /*!
2102:Core/Src/bno055.c ****  *  @brief This API reads Quaternion data wxyz values
2103:Core/Src/bno055.c ****  *  from register 0x20 to 0x27 it is a six byte data
2104:Core/Src/bno055.c ****  *
2105:Core/Src/bno055.c ****  *
2106:Core/Src/bno055.c ****  *  @param quaternion : The value of quaternion wxyz data's
2107:Core/Src/bno055.c ****  *
2108:Core/Src/bno055.c ****  *  Parameter |    result
2109:Core/Src/bno055.c ****  *  --------- | -----------------
2110:Core/Src/bno055.c ****  *   w        | The quaternion w data
2111:Core/Src/bno055.c ****  *   x        | The quaternion x data
2112:Core/Src/bno055.c ****  *   y        | The quaternion y data
2113:Core/Src/bno055.c ****  *   z        | The quaternion z data
2114:Core/Src/bno055.c ****  *
2115:Core/Src/bno055.c ****  *
2116:Core/Src/bno055.c ****  *
2117:Core/Src/bno055.c ****  *  @return results of bus communication function
2118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2120:Core/Src/bno055.c ****  *
2121:Core/Src/bno055.c ****  */
2122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_wxyz(struct bno055_quaternion_t *quaternion)
2123:Core/Src/bno055.c **** {
 3778              		.loc 1 2123 1 is_stmt 1 view -0
 3779              		.cfi_startproc
 3780              		@ args = 0, pretend = 0, frame = 8
 3781              		@ frame_needed = 0, uses_anonymous_args = 0
 3782              		.loc 1 2123 1 is_stmt 0 view .LVU1049
 3783 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 109


 3784              	.LCFI117:
 3785              		.cfi_def_cfa_offset 12
 3786              		.cfi_offset 4, -12
 3787              		.cfi_offset 5, -8
 3788              		.cfi_offset 14, -4
 3789 0002 83B0     		sub	sp, sp, #12
 3790              	.LCFI118:
 3791              		.cfi_def_cfa_offset 24
 3792 0004 0446     		mov	r4, r0
2124:Core/Src/bno055.c ****     /* Variable used to return value of
2125:Core/Src/bno055.c ****      * communication routine*/
2126:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3793              		.loc 1 2126 5 is_stmt 1 view .LVU1050
 3794              	.LVL369:
2127:Core/Src/bno055.c **** 
2128:Core/Src/bno055.c ****     /* Array holding the quaternion wxyz value
2129:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] - w->LSB
2130:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] - w->MSB
2131:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] - x->LSB
2132:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] - x->MSB
2133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] - y->MSB
2134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] - y->MSB
2135:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] - z->MSB
2136:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] - z->MSB
2137:Core/Src/bno055.c ****      */
2138:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_WXYZ_DATA_SIZE] = {
 3795              		.loc 1 2138 5 view .LVU1051
 3796              		.loc 1 2138 8 is_stmt 0 view .LVU1052
 3797 0006 214B     		ldr	r3, .L299
 3798 0008 93E80300 		ldm	r3, {r0, r1}
 3799              	.LVL370:
 3800              		.loc 1 2138 8 view .LVU1053
 3801 000c 02AB     		add	r3, sp, #8
 3802 000e 03E90300 		stmdb	r3, {r0, r1}
2139:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2140:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
2141:Core/Src/bno055.c ****     };
2142:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3803              		.loc 1 2142 5 is_stmt 1 view .LVU1054
 3804              	.LVL371:
2143:Core/Src/bno055.c **** 
2144:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2145:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3805              		.loc 1 2145 5 view .LVU1055
 3806              		.loc 1 2145 18 is_stmt 0 view .LVU1056
 3807 0012 1F4B     		ldr	r3, .L299+4
 3808 0014 1B68     		ldr	r3, [r3]
 3809              		.loc 1 2145 8 view .LVU1057
 3810 0016 002B     		cmp	r3, #0
 3811 0018 31D0     		beq	.L295
2146:Core/Src/bno055.c ****     {
2147:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2148:Core/Src/bno055.c ****     }
2149:Core/Src/bno055.c ****     else
2150:Core/Src/bno055.c ****     {
2151:Core/Src/bno055.c ****         /*condition check for page, chip id is
2152:Core/Src/bno055.c ****          * available in the page zero*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 110


2153:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3812              		.loc 1 2153 9 is_stmt 1 view .LVU1058
 3813              		.loc 1 2153 21 is_stmt 0 view .LVU1059
 3814 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3815              		.loc 1 2153 12 view .LVU1060
 3816 001c 4BBB     		cbnz	r3, .L298
 3817              	.LVL372:
 3818              	.L293:
2154:Core/Src/bno055.c ****         {
2155:Core/Src/bno055.c ****             /* Write the page zero*/
2156:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2157:Core/Src/bno055.c ****         }
2158:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3819              		.loc 1 2158 53 discriminator 1 view .LVU1061
 3820 001e 1C4B     		ldr	r3, .L299+4
 3821 0020 1B68     		ldr	r3, [r3]
 3822 0022 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3823              		.loc 1 2158 41 discriminator 1 view .LVU1062
 3824 0024 73BB     		cbnz	r3, .L296
 3825              	.L294:
2159:Core/Src/bno055.c ****         {
2160:Core/Src/bno055.c ****             /* Read the eight byte value
2161:Core/Src/bno055.c ****              * of quaternion wxyz data*/
2162:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3826              		.loc 1 2162 13 is_stmt 1 view .LVU1063
 3827              		.loc 1 2162 32 is_stmt 0 view .LVU1064
 3828 0026 1A4B     		ldr	r3, .L299+4
 3829 0028 1868     		ldr	r0, [r3]
 3830 002a 0569     		ldr	r5, [r0, #16]
 3831              		.loc 1 2162 24 view .LVU1065
 3832 002c 0823     		movs	r3, #8
 3833 002e 6A46     		mov	r2, sp
 3834 0030 2021     		movs	r1, #32
 3835 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3836 0034 A847     		blx	r5
 3837              	.LVL373:
2163:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
2164:Core/Src/bno055.c ****                                                       data_u8,
2165:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_WXYZ_DATA_SIZE);
2166:Core/Src/bno055.c **** 
2167:Core/Src/bno055.c ****             /* Data W*/
2168:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] =
 3838              		.loc 1 2168 13 is_stmt 1 view .LVU1066
2169:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB],
2170:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_LSB_VALUEW);
2171:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] =
 3839              		.loc 1 2171 13 view .LVU1067
2172:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB],
2173:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_MSB_VALUEW);
2174:Core/Src/bno055.c ****             quaternion->w =
 3840              		.loc 1 2174 13 view .LVU1068
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3841              		.loc 1 2175 31 is_stmt 0 view .LVU1069
 3842 0036 9DF90120 		ldrsb	r2, [sp, #1]
2176:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB]));
 3843              		.loc 1 2176 31 view .LVU1070
 3844 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 111


2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3845              		.loc 1 2175 17 view .LVU1071
 3846 003e 43EA0223 		orr	r3, r3, r2, lsl #8
2174:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3847              		.loc 1 2174 27 view .LVU1072
 3848 0042 2380     		strh	r3, [r4]	@ movhi
2177:Core/Src/bno055.c **** 
2178:Core/Src/bno055.c ****             /* Data X*/
2179:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] =
 3849              		.loc 1 2179 13 is_stmt 1 view .LVU1073
2180:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB],
2181:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_LSB_VALUEX);
2182:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] =
 3850              		.loc 1 2182 13 view .LVU1074
2183:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB],
2184:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_MSB_VALUEX);
2185:Core/Src/bno055.c ****             quaternion->x =
 3851              		.loc 1 2185 13 view .LVU1075
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3852              		.loc 1 2186 31 is_stmt 0 view .LVU1076
 3853 0044 9DF90320 		ldrsb	r2, [sp, #3]
2187:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB]));
 3854              		.loc 1 2187 31 view .LVU1077
 3855 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3856              		.loc 1 2186 17 view .LVU1078
 3857 004c 43EA0223 		orr	r3, r3, r2, lsl #8
2185:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3858              		.loc 1 2185 27 view .LVU1079
 3859 0050 6380     		strh	r3, [r4, #2]	@ movhi
2188:Core/Src/bno055.c **** 
2189:Core/Src/bno055.c ****             /* Data Y*/
2190:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] =
 3860              		.loc 1 2190 13 is_stmt 1 view .LVU1080
2191:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB],
2192:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_LSB_VALUEY);
2193:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] =
 3861              		.loc 1 2193 13 view .LVU1081
2194:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB],
2195:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_MSB_VALUEY);
2196:Core/Src/bno055.c ****             quaternion->y =
 3862              		.loc 1 2196 13 view .LVU1082
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3863              		.loc 1 2197 31 is_stmt 0 view .LVU1083
 3864 0052 9DF90520 		ldrsb	r2, [sp, #5]
2198:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB]));
 3865              		.loc 1 2198 31 view .LVU1084
 3866 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3867              		.loc 1 2197 17 view .LVU1085
 3868 005a 43EA0223 		orr	r3, r3, r2, lsl #8
2196:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3869              		.loc 1 2196 27 view .LVU1086
 3870 005e A380     		strh	r3, [r4, #4]	@ movhi
2199:Core/Src/bno055.c **** 
2200:Core/Src/bno055.c ****             /* Data Z*/
2201:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] =
ARM GAS  /tmp/cc9kYR4Z.s 			page 112


 3871              		.loc 1 2201 13 is_stmt 1 view .LVU1087
2202:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB],
2203:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_LSB_VALUEZ);
2204:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] =
 3872              		.loc 1 2204 13 view .LVU1088
2205:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB],
2206:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_MSB_VALUEZ);
2207:Core/Src/bno055.c ****             quaternion->z =
 3873              		.loc 1 2207 13 view .LVU1089
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3874              		.loc 1 2208 31 is_stmt 0 view .LVU1090
 3875 0060 9DF90720 		ldrsb	r2, [sp, #7]
2209:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB]));
 3876              		.loc 1 2209 31 view .LVU1091
 3877 0064 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3878              		.loc 1 2208 17 view .LVU1092
 3879 0068 43EA0223 		orr	r3, r3, r2, lsl #8
2207:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3880              		.loc 1 2207 27 view .LVU1093
 3881 006c E380     		strh	r3, [r4, #6]	@ movhi
 3882              	.LVL374:
 3883              	.L292:
2210:Core/Src/bno055.c ****         }
2211:Core/Src/bno055.c ****         else
2212:Core/Src/bno055.c ****         {
2213:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2214:Core/Src/bno055.c ****         }
2215:Core/Src/bno055.c ****     }
2216:Core/Src/bno055.c **** 
2217:Core/Src/bno055.c ****     return com_rslt;
2218:Core/Src/bno055.c **** }
 3884              		.loc 1 2218 1 view .LVU1094
 3885 006e 03B0     		add	sp, sp, #12
 3886              	.LCFI119:
 3887              		.cfi_remember_state
 3888              		.cfi_def_cfa_offset 12
 3889              		@ sp needed
 3890 0070 30BD     		pop	{r4, r5, pc}
 3891              	.LVL375:
 3892              	.L298:
 3893              	.LCFI120:
 3894              		.cfi_restore_state
2156:Core/Src/bno055.c ****         }
 3895              		.loc 1 2156 13 is_stmt 1 view .LVU1095
2156:Core/Src/bno055.c ****         }
 3896              		.loc 1 2156 23 is_stmt 0 view .LVU1096
 3897 0072 0020     		movs	r0, #0
 3898 0074 FFF7FEFF 		bl	bno055_write_page_id
 3899              	.LVL376:
2158:Core/Src/bno055.c ****         {
 3900              		.loc 1 2158 9 is_stmt 1 view .LVU1097
2158:Core/Src/bno055.c ****         {
 3901              		.loc 1 2158 12 is_stmt 0 view .LVU1098
 3902 0078 0028     		cmp	r0, #0
 3903 007a D4D0     		beq	.L294
 3904 007c CFE7     		b	.L293
ARM GAS  /tmp/cc9kYR4Z.s 			page 113


 3905              	.LVL377:
 3906              	.L295:
2147:Core/Src/bno055.c ****     }
 3907              		.loc 1 2147 16 view .LVU1099
 3908 007e 6FF07E00 		mvn	r0, #126
 3909 0082 F4E7     		b	.L292
 3910              	.LVL378:
 3911              	.L296:
2213:Core/Src/bno055.c ****         }
 3912              		.loc 1 2213 22 view .LVU1100
 3913 0084 4FF0FF30 		mov	r0, #-1
 3914 0088 F1E7     		b	.L292
 3915              	.L300:
 3916 008a 00BF     		.align	2
 3917              	.L299:
 3918 008c 08000000 		.word	.LANCHOR1+8
 3919 0090 00000000 		.word	.LANCHOR0
 3920              		.cfi_endproc
 3921              	.LFE31:
 3923              		.section	.text.bno055_read_linear_accel_x,"ax",%progbits
 3924              		.align	1
 3925              		.global	bno055_read_linear_accel_x
 3926              		.syntax unified
 3927              		.thumb
 3928              		.thumb_func
 3930              	bno055_read_linear_accel_x:
 3931              	.LVL379:
 3932              	.LFB32:
2219:Core/Src/bno055.c **** 
2220:Core/Src/bno055.c **** /*!
2221:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2222:Core/Src/bno055.c ****  *  from register 0x29 and 0x2A it is a two byte data
2223:Core/Src/bno055.c ****  *
2224:Core/Src/bno055.c ****  *  @param linear_accel_x_s16 : The raw x data
2225:Core/Src/bno055.c ****  *
2226:Core/Src/bno055.c ****  *  @return results of bus communication function
2227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2229:Core/Src/bno055.c ****  *
2230:Core/Src/bno055.c ****  *
2231:Core/Src/bno055.c ****  */
2232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_x(s16 *linear_accel_x_s16)
2233:Core/Src/bno055.c **** {
 3933              		.loc 1 2233 1 is_stmt 1 view -0
 3934              		.cfi_startproc
 3935              		@ args = 0, pretend = 0, frame = 8
 3936              		@ frame_needed = 0, uses_anonymous_args = 0
 3937              		.loc 1 2233 1 is_stmt 0 view .LVU1102
 3938 0000 30B5     		push	{r4, r5, lr}
 3939              	.LCFI121:
 3940              		.cfi_def_cfa_offset 12
 3941              		.cfi_offset 4, -12
 3942              		.cfi_offset 5, -8
 3943              		.cfi_offset 14, -4
 3944 0002 83B0     		sub	sp, sp, #12
 3945              	.LCFI122:
 3946              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 114


2234:Core/Src/bno055.c ****     /* Variable used to return value of
2235:Core/Src/bno055.c ****      * communication routine*/
2236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3947              		.loc 1 2236 5 is_stmt 1 view .LVU1103
 3948              	.LVL380:
2237:Core/Src/bno055.c **** 
2238:Core/Src/bno055.c ****     /* Array holding the linear accel x value
2239:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2240:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2241:Core/Src/bno055.c ****      */
2242:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3949              		.loc 1 2242 5 view .LVU1104
 3950              		.loc 1 2242 8 is_stmt 0 view .LVU1105
 3951 0004 0023     		movs	r3, #0
 3952 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2243:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3953              		.loc 1 2243 5 is_stmt 1 view .LVU1106
 3954              	.LVL381:
2244:Core/Src/bno055.c **** 
2245:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2246:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3955              		.loc 1 2246 5 view .LVU1107
 3956              		.loc 1 2246 18 is_stmt 0 view .LVU1108
 3957 000a 134B     		ldr	r3, .L309
 3958 000c 1B68     		ldr	r3, [r3]
 3959              		.loc 1 2246 8 view .LVU1109
 3960 000e EBB1     		cbz	r3, .L305
 3961 0010 0446     		mov	r4, r0
2247:Core/Src/bno055.c ****     {
2248:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2249:Core/Src/bno055.c ****     }
2250:Core/Src/bno055.c ****     else
2251:Core/Src/bno055.c ****     {
2252:Core/Src/bno055.c ****         /*condition check for page, chip id is
2253:Core/Src/bno055.c ****          * available in the page zero*/
2254:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3962              		.loc 1 2254 9 is_stmt 1 view .LVU1110
 3963              		.loc 1 2254 21 is_stmt 0 view .LVU1111
 3964 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3965              		.loc 1 2254 12 view .LVU1112
 3966 0014 A3B9     		cbnz	r3, .L308
 3967              	.LVL382:
 3968              	.L303:
2255:Core/Src/bno055.c ****         {
2256:Core/Src/bno055.c ****             /* Write the page zero*/
2257:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2258:Core/Src/bno055.c ****         }
2259:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3969              		.loc 1 2259 53 discriminator 1 view .LVU1113
 3970 0016 104B     		ldr	r3, .L309
 3971 0018 1B68     		ldr	r3, [r3]
 3972 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3973              		.loc 1 2259 41 discriminator 1 view .LVU1114
 3974 001c CBB9     		cbnz	r3, .L306
 3975              	.L304:
2260:Core/Src/bno055.c ****         {
2261:Core/Src/bno055.c ****             /* Read the two byte value
ARM GAS  /tmp/cc9kYR4Z.s 			page 115


2262:Core/Src/bno055.c ****             * of linear accel x data*/
2263:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3976              		.loc 1 2263 13 is_stmt 1 view .LVU1115
 3977              		.loc 1 2263 32 is_stmt 0 view .LVU1116
 3978 001e 0E4B     		ldr	r3, .L309
 3979 0020 1868     		ldr	r0, [r3]
 3980 0022 0569     		ldr	r5, [r0, #16]
 3981              		.loc 1 2263 24 view .LVU1117
 3982 0024 0223     		movs	r3, #2
 3983 0026 01AA     		add	r2, sp, #4
 3984 0028 2821     		movs	r1, #40
 3985 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3986 002c A847     		blx	r5
 3987              	.LVL383:
2264:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2265:Core/Src/bno055.c ****                                                       data_u8,
2266:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2267:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 3988              		.loc 1 2267 13 is_stmt 1 view .LVU1118
2268:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_LSB_VA
2269:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 3989              		.loc 1 2269 13 view .LVU1119
2270:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_MSB_VA
2271:Core/Src/bno055.c ****             *linear_accel_x_s16 =
 3990              		.loc 1 2271 13 view .LVU1120
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3991              		.loc 1 2272 31 is_stmt 0 view .LVU1121
 3992 002e 9DF90520 		ldrsb	r2, [sp, #5]
2273:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 3993              		.loc 1 2273 31 view .LVU1122
 3994 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3995              		.loc 1 2272 17 view .LVU1123
 3996 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2271:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3997              		.loc 1 2271 33 view .LVU1124
 3998 003a 2380     		strh	r3, [r4]	@ movhi
 3999              	.LVL384:
 4000              	.L302:
2274:Core/Src/bno055.c ****         }
2275:Core/Src/bno055.c ****         else
2276:Core/Src/bno055.c ****         {
2277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2278:Core/Src/bno055.c ****         }
2279:Core/Src/bno055.c ****     }
2280:Core/Src/bno055.c **** 
2281:Core/Src/bno055.c ****     return com_rslt;
2282:Core/Src/bno055.c **** }
 4001              		.loc 1 2282 1 view .LVU1125
 4002 003c 03B0     		add	sp, sp, #12
 4003              	.LCFI123:
 4004              		.cfi_remember_state
 4005              		.cfi_def_cfa_offset 12
 4006              		@ sp needed
 4007 003e 30BD     		pop	{r4, r5, pc}
 4008              	.LVL385:
 4009              	.L308:
ARM GAS  /tmp/cc9kYR4Z.s 			page 116


 4010              	.LCFI124:
 4011              		.cfi_restore_state
2257:Core/Src/bno055.c ****         }
 4012              		.loc 1 2257 13 is_stmt 1 view .LVU1126
2257:Core/Src/bno055.c ****         }
 4013              		.loc 1 2257 23 is_stmt 0 view .LVU1127
 4014 0040 0020     		movs	r0, #0
 4015              	.LVL386:
2257:Core/Src/bno055.c ****         }
 4016              		.loc 1 2257 23 view .LVU1128
 4017 0042 FFF7FEFF 		bl	bno055_write_page_id
 4018              	.LVL387:
2259:Core/Src/bno055.c ****         {
 4019              		.loc 1 2259 9 is_stmt 1 view .LVU1129
2259:Core/Src/bno055.c ****         {
 4020              		.loc 1 2259 12 is_stmt 0 view .LVU1130
 4021 0046 0028     		cmp	r0, #0
 4022 0048 E9D0     		beq	.L304
 4023 004a E4E7     		b	.L303
 4024              	.LVL388:
 4025              	.L305:
2248:Core/Src/bno055.c ****     }
 4026              		.loc 1 2248 16 view .LVU1131
 4027 004c 6FF07E00 		mvn	r0, #126
 4028              	.LVL389:
2248:Core/Src/bno055.c ****     }
 4029              		.loc 1 2248 16 view .LVU1132
 4030 0050 F4E7     		b	.L302
 4031              	.LVL390:
 4032              	.L306:
2277:Core/Src/bno055.c ****         }
 4033              		.loc 1 2277 22 view .LVU1133
 4034 0052 4FF0FF30 		mov	r0, #-1
 4035 0056 F1E7     		b	.L302
 4036              	.L310:
 4037              		.align	2
 4038              	.L309:
 4039 0058 00000000 		.word	.LANCHOR0
 4040              		.cfi_endproc
 4041              	.LFE32:
 4043              		.section	.text.bno055_read_linear_accel_y,"ax",%progbits
 4044              		.align	1
 4045              		.global	bno055_read_linear_accel_y
 4046              		.syntax unified
 4047              		.thumb
 4048              		.thumb_func
 4050              	bno055_read_linear_accel_y:
 4051              	.LVL391:
 4052              	.LFB33:
2283:Core/Src/bno055.c **** 
2284:Core/Src/bno055.c **** /*!
2285:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2286:Core/Src/bno055.c ****  *  from register 0x2B and 0x2C it is a two byte data
2287:Core/Src/bno055.c ****  *
2288:Core/Src/bno055.c ****  *  @param linear_accel_y_s16 : The raw y data
2289:Core/Src/bno055.c ****  *
2290:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/cc9kYR4Z.s 			page 117


2291:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2292:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2293:Core/Src/bno055.c ****  *
2294:Core/Src/bno055.c ****  *
2295:Core/Src/bno055.c ****  */
2296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_y(s16 *linear_accel_y_s16)
2297:Core/Src/bno055.c **** {
 4053              		.loc 1 2297 1 is_stmt 1 view -0
 4054              		.cfi_startproc
 4055              		@ args = 0, pretend = 0, frame = 8
 4056              		@ frame_needed = 0, uses_anonymous_args = 0
 4057              		.loc 1 2297 1 is_stmt 0 view .LVU1135
 4058 0000 30B5     		push	{r4, r5, lr}
 4059              	.LCFI125:
 4060              		.cfi_def_cfa_offset 12
 4061              		.cfi_offset 4, -12
 4062              		.cfi_offset 5, -8
 4063              		.cfi_offset 14, -4
 4064 0002 83B0     		sub	sp, sp, #12
 4065              	.LCFI126:
 4066              		.cfi_def_cfa_offset 24
2298:Core/Src/bno055.c ****     /* Variable used to return value of
2299:Core/Src/bno055.c ****      * communication routine*/
2300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4067              		.loc 1 2300 5 is_stmt 1 view .LVU1136
 4068              	.LVL392:
2301:Core/Src/bno055.c **** 
2302:Core/Src/bno055.c ****     /* Array holding the linear accel y value
2303:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2304:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2305:Core/Src/bno055.c ****      */
2306:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4069              		.loc 1 2306 5 view .LVU1137
 4070              		.loc 1 2306 8 is_stmt 0 view .LVU1138
 4071 0004 0023     		movs	r3, #0
 4072 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2307:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4073              		.loc 1 2307 5 is_stmt 1 view .LVU1139
 4074              	.LVL393:
2308:Core/Src/bno055.c **** 
2309:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2310:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4075              		.loc 1 2310 5 view .LVU1140
 4076              		.loc 1 2310 18 is_stmt 0 view .LVU1141
 4077 000a 134B     		ldr	r3, .L319
 4078 000c 1B68     		ldr	r3, [r3]
 4079              		.loc 1 2310 8 view .LVU1142
 4080 000e EBB1     		cbz	r3, .L315
 4081 0010 0446     		mov	r4, r0
2311:Core/Src/bno055.c ****     {
2312:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2313:Core/Src/bno055.c ****     }
2314:Core/Src/bno055.c ****     else
2315:Core/Src/bno055.c ****     {
2316:Core/Src/bno055.c ****         /*condition check for page, chip id is
2317:Core/Src/bno055.c ****          * available in the page zero*/
2318:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/cc9kYR4Z.s 			page 118


 4082              		.loc 1 2318 9 is_stmt 1 view .LVU1143
 4083              		.loc 1 2318 21 is_stmt 0 view .LVU1144
 4084 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4085              		.loc 1 2318 12 view .LVU1145
 4086 0014 A3B9     		cbnz	r3, .L318
 4087              	.LVL394:
 4088              	.L313:
2319:Core/Src/bno055.c ****         {
2320:Core/Src/bno055.c ****             /* Write the page zero*/
2321:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2322:Core/Src/bno055.c ****         }
2323:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4089              		.loc 1 2323 53 discriminator 1 view .LVU1146
 4090 0016 104B     		ldr	r3, .L319
 4091 0018 1B68     		ldr	r3, [r3]
 4092 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4093              		.loc 1 2323 41 discriminator 1 view .LVU1147
 4094 001c CBB9     		cbnz	r3, .L316
 4095              	.L314:
2324:Core/Src/bno055.c ****         {
2325:Core/Src/bno055.c ****             /* Read the two byte value
2326:Core/Src/bno055.c ****             * of linear accel y data*/
2327:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4096              		.loc 1 2327 13 is_stmt 1 view .LVU1148
 4097              		.loc 1 2327 32 is_stmt 0 view .LVU1149
 4098 001e 0E4B     		ldr	r3, .L319
 4099 0020 1868     		ldr	r0, [r3]
 4100 0022 0569     		ldr	r5, [r0, #16]
 4101              		.loc 1 2327 24 view .LVU1150
 4102 0024 0223     		movs	r3, #2
 4103 0026 01AA     		add	r2, sp, #4
 4104 0028 2A21     		movs	r1, #42
 4105 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4106 002c A847     		blx	r5
 4107              	.LVL395:
2328:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Y_LSB_VALUEY_REG,
2329:Core/Src/bno055.c ****                                                       data_u8,
2330:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2331:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4108              		.loc 1 2331 13 is_stmt 1 view .LVU1151
2332:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_LSB_VA
2333:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4109              		.loc 1 2333 13 view .LVU1152
2334:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_MSB_VA
2335:Core/Src/bno055.c ****             *linear_accel_y_s16 =
 4110              		.loc 1 2335 13 view .LVU1153
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4111              		.loc 1 2336 31 is_stmt 0 view .LVU1154
 4112 002e 9DF90520 		ldrsb	r2, [sp, #5]
2337:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4113              		.loc 1 2337 31 view .LVU1155
 4114 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4115              		.loc 1 2336 17 view .LVU1156
 4116 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2335:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4117              		.loc 1 2335 33 view .LVU1157
ARM GAS  /tmp/cc9kYR4Z.s 			page 119


 4118 003a 2380     		strh	r3, [r4]	@ movhi
 4119              	.LVL396:
 4120              	.L312:
2338:Core/Src/bno055.c ****         }
2339:Core/Src/bno055.c ****         else
2340:Core/Src/bno055.c ****         {
2341:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2342:Core/Src/bno055.c ****         }
2343:Core/Src/bno055.c ****     }
2344:Core/Src/bno055.c **** 
2345:Core/Src/bno055.c ****     return com_rslt;
2346:Core/Src/bno055.c **** }
 4121              		.loc 1 2346 1 view .LVU1158
 4122 003c 03B0     		add	sp, sp, #12
 4123              	.LCFI127:
 4124              		.cfi_remember_state
 4125              		.cfi_def_cfa_offset 12
 4126              		@ sp needed
 4127 003e 30BD     		pop	{r4, r5, pc}
 4128              	.LVL397:
 4129              	.L318:
 4130              	.LCFI128:
 4131              		.cfi_restore_state
2321:Core/Src/bno055.c ****         }
 4132              		.loc 1 2321 13 is_stmt 1 view .LVU1159
2321:Core/Src/bno055.c ****         }
 4133              		.loc 1 2321 23 is_stmt 0 view .LVU1160
 4134 0040 0020     		movs	r0, #0
 4135              	.LVL398:
2321:Core/Src/bno055.c ****         }
 4136              		.loc 1 2321 23 view .LVU1161
 4137 0042 FFF7FEFF 		bl	bno055_write_page_id
 4138              	.LVL399:
2323:Core/Src/bno055.c ****         {
 4139              		.loc 1 2323 9 is_stmt 1 view .LVU1162
2323:Core/Src/bno055.c ****         {
 4140              		.loc 1 2323 12 is_stmt 0 view .LVU1163
 4141 0046 0028     		cmp	r0, #0
 4142 0048 E9D0     		beq	.L314
 4143 004a E4E7     		b	.L313
 4144              	.LVL400:
 4145              	.L315:
2312:Core/Src/bno055.c ****     }
 4146              		.loc 1 2312 16 view .LVU1164
 4147 004c 6FF07E00 		mvn	r0, #126
 4148              	.LVL401:
2312:Core/Src/bno055.c ****     }
 4149              		.loc 1 2312 16 view .LVU1165
 4150 0050 F4E7     		b	.L312
 4151              	.LVL402:
 4152              	.L316:
2341:Core/Src/bno055.c ****         }
 4153              		.loc 1 2341 22 view .LVU1166
 4154 0052 4FF0FF30 		mov	r0, #-1
 4155 0056 F1E7     		b	.L312
 4156              	.L320:
 4157              		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 120


 4158              	.L319:
 4159 0058 00000000 		.word	.LANCHOR0
 4160              		.cfi_endproc
 4161              	.LFE33:
 4163              		.section	.text.bno055_read_linear_accel_z,"ax",%progbits
 4164              		.align	1
 4165              		.global	bno055_read_linear_accel_z
 4166              		.syntax unified
 4167              		.thumb
 4168              		.thumb_func
 4170              	bno055_read_linear_accel_z:
 4171              	.LVL403:
 4172              	.LFB34:
2347:Core/Src/bno055.c **** 
2348:Core/Src/bno055.c **** /*!
2349:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2350:Core/Src/bno055.c ****  *  from register 0x2C and 0x2D it is a two byte data
2351:Core/Src/bno055.c ****  *
2352:Core/Src/bno055.c ****  *  @param linear_accel_z_s16 : The raw z data
2353:Core/Src/bno055.c ****  *
2354:Core/Src/bno055.c ****  *  @return results of bus communication function
2355:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2356:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2357:Core/Src/bno055.c ****  *
2358:Core/Src/bno055.c ****  *
2359:Core/Src/bno055.c ****  */
2360:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_z(s16 *linear_accel_z_s16)
2361:Core/Src/bno055.c **** {
 4173              		.loc 1 2361 1 is_stmt 1 view -0
 4174              		.cfi_startproc
 4175              		@ args = 0, pretend = 0, frame = 8
 4176              		@ frame_needed = 0, uses_anonymous_args = 0
 4177              		.loc 1 2361 1 is_stmt 0 view .LVU1168
 4178 0000 30B5     		push	{r4, r5, lr}
 4179              	.LCFI129:
 4180              		.cfi_def_cfa_offset 12
 4181              		.cfi_offset 4, -12
 4182              		.cfi_offset 5, -8
 4183              		.cfi_offset 14, -4
 4184 0002 83B0     		sub	sp, sp, #12
 4185              	.LCFI130:
 4186              		.cfi_def_cfa_offset 24
2362:Core/Src/bno055.c ****     /* Variable used to return value of
2363:Core/Src/bno055.c ****      * communication routine*/
2364:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4187              		.loc 1 2364 5 is_stmt 1 view .LVU1169
 4188              	.LVL404:
2365:Core/Src/bno055.c **** 
2366:Core/Src/bno055.c ****     /* Array holding the linear accel z value
2367:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2368:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2369:Core/Src/bno055.c ****      */
2370:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4189              		.loc 1 2370 5 view .LVU1170
 4190              		.loc 1 2370 8 is_stmt 0 view .LVU1171
 4191 0004 0023     		movs	r3, #0
 4192 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
ARM GAS  /tmp/cc9kYR4Z.s 			page 121


2371:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4193              		.loc 1 2371 5 is_stmt 1 view .LVU1172
 4194              	.LVL405:
2372:Core/Src/bno055.c **** 
2373:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2374:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4195              		.loc 1 2374 5 view .LVU1173
 4196              		.loc 1 2374 18 is_stmt 0 view .LVU1174
 4197 000a 134B     		ldr	r3, .L329
 4198 000c 1B68     		ldr	r3, [r3]
 4199              		.loc 1 2374 8 view .LVU1175
 4200 000e EBB1     		cbz	r3, .L325
 4201 0010 0446     		mov	r4, r0
2375:Core/Src/bno055.c ****     {
2376:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2377:Core/Src/bno055.c ****     }
2378:Core/Src/bno055.c ****     else
2379:Core/Src/bno055.c ****     {
2380:Core/Src/bno055.c ****         /*condition check for page, chip id is
2381:Core/Src/bno055.c ****          * available in the page zero*/
2382:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4202              		.loc 1 2382 9 is_stmt 1 view .LVU1176
 4203              		.loc 1 2382 21 is_stmt 0 view .LVU1177
 4204 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4205              		.loc 1 2382 12 view .LVU1178
 4206 0014 A3B9     		cbnz	r3, .L328
 4207              	.LVL406:
 4208              	.L323:
2383:Core/Src/bno055.c ****         {
2384:Core/Src/bno055.c ****             /* Write the page zero*/
2385:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2386:Core/Src/bno055.c ****         }
2387:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4209              		.loc 1 2387 53 discriminator 1 view .LVU1179
 4210 0016 104B     		ldr	r3, .L329
 4211 0018 1B68     		ldr	r3, [r3]
 4212 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4213              		.loc 1 2387 41 discriminator 1 view .LVU1180
 4214 001c CBB9     		cbnz	r3, .L326
 4215              	.L324:
2388:Core/Src/bno055.c ****         {
2389:Core/Src/bno055.c ****             /* Read the two byte value
2390:Core/Src/bno055.c ****             * of linear accel z data*/
2391:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4216              		.loc 1 2391 13 is_stmt 1 view .LVU1181
 4217              		.loc 1 2391 32 is_stmt 0 view .LVU1182
 4218 001e 0E4B     		ldr	r3, .L329
 4219 0020 1868     		ldr	r0, [r3]
 4220 0022 0569     		ldr	r5, [r0, #16]
 4221              		.loc 1 2391 24 view .LVU1183
 4222 0024 0223     		movs	r3, #2
 4223 0026 01AA     		add	r2, sp, #4
 4224 0028 2C21     		movs	r1, #44
 4225 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4226 002c A847     		blx	r5
 4227              	.LVL407:
2392:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Z_LSB_VALUEZ_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 122


2393:Core/Src/bno055.c ****                                                       data_u8,
2394:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2395:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4228              		.loc 1 2395 13 is_stmt 1 view .LVU1184
2396:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_LSB_VA
2397:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4229              		.loc 1 2397 13 view .LVU1185
2398:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_MSB_VA
2399:Core/Src/bno055.c ****             *linear_accel_z_s16 =
 4230              		.loc 1 2399 13 view .LVU1186
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4231              		.loc 1 2400 31 is_stmt 0 view .LVU1187
 4232 002e 9DF90520 		ldrsb	r2, [sp, #5]
2401:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4233              		.loc 1 2401 31 view .LVU1188
 4234 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4235              		.loc 1 2400 17 view .LVU1189
 4236 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2399:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4237              		.loc 1 2399 33 view .LVU1190
 4238 003a 2380     		strh	r3, [r4]	@ movhi
 4239              	.LVL408:
 4240              	.L322:
2402:Core/Src/bno055.c ****         }
2403:Core/Src/bno055.c ****         else
2404:Core/Src/bno055.c ****         {
2405:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2406:Core/Src/bno055.c ****         }
2407:Core/Src/bno055.c ****     }
2408:Core/Src/bno055.c **** 
2409:Core/Src/bno055.c ****     return com_rslt;
2410:Core/Src/bno055.c **** }
 4241              		.loc 1 2410 1 view .LVU1191
 4242 003c 03B0     		add	sp, sp, #12
 4243              	.LCFI131:
 4244              		.cfi_remember_state
 4245              		.cfi_def_cfa_offset 12
 4246              		@ sp needed
 4247 003e 30BD     		pop	{r4, r5, pc}
 4248              	.LVL409:
 4249              	.L328:
 4250              	.LCFI132:
 4251              		.cfi_restore_state
2385:Core/Src/bno055.c ****         }
 4252              		.loc 1 2385 13 is_stmt 1 view .LVU1192
2385:Core/Src/bno055.c ****         }
 4253              		.loc 1 2385 23 is_stmt 0 view .LVU1193
 4254 0040 0020     		movs	r0, #0
 4255              	.LVL410:
2385:Core/Src/bno055.c ****         }
 4256              		.loc 1 2385 23 view .LVU1194
 4257 0042 FFF7FEFF 		bl	bno055_write_page_id
 4258              	.LVL411:
2387:Core/Src/bno055.c ****         {
 4259              		.loc 1 2387 9 is_stmt 1 view .LVU1195
2387:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 123


 4260              		.loc 1 2387 12 is_stmt 0 view .LVU1196
 4261 0046 0028     		cmp	r0, #0
 4262 0048 E9D0     		beq	.L324
 4263 004a E4E7     		b	.L323
 4264              	.LVL412:
 4265              	.L325:
2376:Core/Src/bno055.c ****     }
 4266              		.loc 1 2376 16 view .LVU1197
 4267 004c 6FF07E00 		mvn	r0, #126
 4268              	.LVL413:
2376:Core/Src/bno055.c ****     }
 4269              		.loc 1 2376 16 view .LVU1198
 4270 0050 F4E7     		b	.L322
 4271              	.LVL414:
 4272              	.L326:
2405:Core/Src/bno055.c ****         }
 4273              		.loc 1 2405 22 view .LVU1199
 4274 0052 4FF0FF30 		mov	r0, #-1
 4275 0056 F1E7     		b	.L322
 4276              	.L330:
 4277              		.align	2
 4278              	.L329:
 4279 0058 00000000 		.word	.LANCHOR0
 4280              		.cfi_endproc
 4281              	.LFE34:
 4283              		.section	.text.bno055_read_linear_accel_xyz,"ax",%progbits
 4284              		.align	1
 4285              		.global	bno055_read_linear_accel_xyz
 4286              		.syntax unified
 4287              		.thumb
 4288              		.thumb_func
 4290              	bno055_read_linear_accel_xyz:
 4291              	.LVL415:
 4292              	.LFB35:
2411:Core/Src/bno055.c **** 
2412:Core/Src/bno055.c **** /*!
2413:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data xyz values
2414:Core/Src/bno055.c ****  *  from register 0x28 to 0x2D it is a six byte data
2415:Core/Src/bno055.c ****  *
2416:Core/Src/bno055.c ****  *
2417:Core/Src/bno055.c ****  *  @param linear_accel : The value of linear accel xyz data's
2418:Core/Src/bno055.c ****  *
2419:Core/Src/bno055.c ****  *  Parameter |    result
2420:Core/Src/bno055.c ****  *  --------- | -----------------
2421:Core/Src/bno055.c ****  *   x        | The linear accel x data
2422:Core/Src/bno055.c ****  *   y        | The linear accel y data
2423:Core/Src/bno055.c ****  *   z        | The linear accel z data
2424:Core/Src/bno055.c ****  *
2425:Core/Src/bno055.c ****  *
2426:Core/Src/bno055.c ****  *  @return results of bus communication function
2427:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2428:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2429:Core/Src/bno055.c ****  */
2430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_xyz(struct bno055_linear_accel_t *linear_accel
2431:Core/Src/bno055.c **** {
 4293              		.loc 1 2431 1 is_stmt 1 view -0
 4294              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 124


 4295              		@ args = 0, pretend = 0, frame = 8
 4296              		@ frame_needed = 0, uses_anonymous_args = 0
 4297              		.loc 1 2431 1 is_stmt 0 view .LVU1201
 4298 0000 30B5     		push	{r4, r5, lr}
 4299              	.LCFI133:
 4300              		.cfi_def_cfa_offset 12
 4301              		.cfi_offset 4, -12
 4302              		.cfi_offset 5, -8
 4303              		.cfi_offset 14, -4
 4304 0002 83B0     		sub	sp, sp, #12
 4305              	.LCFI134:
 4306              		.cfi_def_cfa_offset 24
 4307 0004 0446     		mov	r4, r0
2432:Core/Src/bno055.c ****     /* Variable used to return value of
2433:Core/Src/bno055.c ****      * communication routine*/
2434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4308              		.loc 1 2434 5 is_stmt 1 view .LVU1202
 4309              	.LVL416:
2435:Core/Src/bno055.c **** 
2436:Core/Src/bno055.c ****     /* Array holding the linear accel xyz value
2437:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2438:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2439:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2440:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2441:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2442:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2443:Core/Src/bno055.c ****      */
2444:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 4310              		.loc 1 2444 5 view .LVU1203
 4311              		.loc 1 2444 8 is_stmt 0 view .LVU1204
 4312 0006 1D4B     		ldr	r3, .L339
 4313 0008 93E80300 		ldm	r3, {r0, r1}
 4314              	.LVL417:
 4315              		.loc 1 2444 8 view .LVU1205
 4316 000c 0090     		str	r0, [sp]
 4317 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2445:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2446:Core/Src/bno055.c ****     };
2447:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4318              		.loc 1 2447 5 is_stmt 1 view .LVU1206
 4319              	.LVL418:
2448:Core/Src/bno055.c **** 
2449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4320              		.loc 1 2450 5 view .LVU1207
 4321              		.loc 1 2450 18 is_stmt 0 view .LVU1208
 4322 0012 1B4B     		ldr	r3, .L339+4
 4323 0014 1B68     		ldr	r3, [r3]
 4324              		.loc 1 2450 8 view .LVU1209
 4325 0016 53B3     		cbz	r3, .L335
2451:Core/Src/bno055.c ****     {
2452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2453:Core/Src/bno055.c ****     }
2454:Core/Src/bno055.c ****     else
2455:Core/Src/bno055.c ****     {
2456:Core/Src/bno055.c ****         /*condition check for page, chip id is
2457:Core/Src/bno055.c ****          * available in the page zero*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 125


2458:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4326              		.loc 1 2458 9 is_stmt 1 view .LVU1210
 4327              		.loc 1 2458 21 is_stmt 0 view .LVU1211
 4328 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4329              		.loc 1 2458 12 view .LVU1212
 4330 001a 13BB     		cbnz	r3, .L338
 4331              	.LVL419:
 4332              	.L333:
2459:Core/Src/bno055.c ****         {
2460:Core/Src/bno055.c ****             /* Write the page zero*/
2461:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2462:Core/Src/bno055.c ****         }
2463:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4333              		.loc 1 2463 53 discriminator 1 view .LVU1213
 4334 001c 184B     		ldr	r3, .L339+4
 4335 001e 1B68     		ldr	r3, [r3]
 4336 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4337              		.loc 1 2463 41 discriminator 1 view .LVU1214
 4338 0022 3BBB     		cbnz	r3, .L336
 4339              	.L334:
2464:Core/Src/bno055.c ****         {
2465:Core/Src/bno055.c ****             /* Read the six byte value
2466:Core/Src/bno055.c ****              *  of linear accel xyz data*/
2467:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4340              		.loc 1 2467 13 is_stmt 1 view .LVU1215
 4341              		.loc 1 2467 32 is_stmt 0 view .LVU1216
 4342 0024 164B     		ldr	r3, .L339+4
 4343 0026 1868     		ldr	r0, [r3]
 4344 0028 0569     		ldr	r5, [r0, #16]
 4345              		.loc 1 2467 24 view .LVU1217
 4346 002a 0623     		movs	r3, #6
 4347 002c 6A46     		mov	r2, sp
 4348 002e 2821     		movs	r1, #40
 4349 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4350 0032 A847     		blx	r5
 4351              	.LVL420:
2468:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2469:Core/Src/bno055.c ****                                                       data_u8,
2470:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
2471:Core/Src/bno055.c **** 
2472:Core/Src/bno055.c ****             /* Data x*/
2473:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4352              		.loc 1 2473 13 is_stmt 1 view .LVU1218
2474:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2475:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4353              		.loc 1 2475 13 view .LVU1219
2476:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2477:Core/Src/bno055.c ****             linear_accel->x =
 4354              		.loc 1 2477 13 view .LVU1220
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4355              		.loc 1 2478 31 is_stmt 0 view .LVU1221
 4356 0034 9DF90120 		ldrsb	r2, [sp, #1]
2479:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4357              		.loc 1 2479 31 view .LVU1222
 4358 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4359              		.loc 1 2478 17 view .LVU1223
ARM GAS  /tmp/cc9kYR4Z.s 			page 126


 4360 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2477:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4361              		.loc 1 2477 29 view .LVU1224
 4362 0040 2380     		strh	r3, [r4]	@ movhi
2480:Core/Src/bno055.c **** 
2481:Core/Src/bno055.c ****             /* Data y*/
2482:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4363              		.loc 1 2482 13 is_stmt 1 view .LVU1225
2483:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2484:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4364              		.loc 1 2484 13 view .LVU1226
2485:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2486:Core/Src/bno055.c ****             linear_accel->y =
 4365              		.loc 1 2486 13 view .LVU1227
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4366              		.loc 1 2487 31 is_stmt 0 view .LVU1228
 4367 0042 9DF90320 		ldrsb	r2, [sp, #3]
2488:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4368              		.loc 1 2488 31 view .LVU1229
 4369 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4370              		.loc 1 2487 17 view .LVU1230
 4371 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2486:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4372              		.loc 1 2486 29 view .LVU1231
 4373 004e 6380     		strh	r3, [r4, #2]	@ movhi
2489:Core/Src/bno055.c **** 
2490:Core/Src/bno055.c ****             /* Data z*/
2491:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4374              		.loc 1 2491 13 is_stmt 1 view .LVU1232
2492:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2493:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4375              		.loc 1 2493 13 view .LVU1233
2494:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2495:Core/Src/bno055.c ****             linear_accel->z =
 4376              		.loc 1 2495 13 view .LVU1234
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4377              		.loc 1 2496 31 is_stmt 0 view .LVU1235
 4378 0050 9DF90520 		ldrsb	r2, [sp, #5]
2497:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4379              		.loc 1 2497 31 view .LVU1236
 4380 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4381              		.loc 1 2496 17 view .LVU1237
 4382 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2495:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4383              		.loc 1 2495 29 view .LVU1238
 4384 005c A380     		strh	r3, [r4, #4]	@ movhi
 4385              	.LVL421:
 4386              	.L332:
2498:Core/Src/bno055.c ****         }
2499:Core/Src/bno055.c ****         else
2500:Core/Src/bno055.c ****         {
2501:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2502:Core/Src/bno055.c ****         }
2503:Core/Src/bno055.c ****     }
2504:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 127


2505:Core/Src/bno055.c ****     return com_rslt;
2506:Core/Src/bno055.c **** }
 4387              		.loc 1 2506 1 view .LVU1239
 4388 005e 03B0     		add	sp, sp, #12
 4389              	.LCFI135:
 4390              		.cfi_remember_state
 4391              		.cfi_def_cfa_offset 12
 4392              		@ sp needed
 4393 0060 30BD     		pop	{r4, r5, pc}
 4394              	.LVL422:
 4395              	.L338:
 4396              	.LCFI136:
 4397              		.cfi_restore_state
2461:Core/Src/bno055.c ****         }
 4398              		.loc 1 2461 13 is_stmt 1 view .LVU1240
2461:Core/Src/bno055.c ****         }
 4399              		.loc 1 2461 23 is_stmt 0 view .LVU1241
 4400 0062 0020     		movs	r0, #0
 4401 0064 FFF7FEFF 		bl	bno055_write_page_id
 4402              	.LVL423:
2463:Core/Src/bno055.c ****         {
 4403              		.loc 1 2463 9 is_stmt 1 view .LVU1242
2463:Core/Src/bno055.c ****         {
 4404              		.loc 1 2463 12 is_stmt 0 view .LVU1243
 4405 0068 0028     		cmp	r0, #0
 4406 006a DBD0     		beq	.L334
 4407 006c D6E7     		b	.L333
 4408              	.LVL424:
 4409              	.L335:
2452:Core/Src/bno055.c ****     }
 4410              		.loc 1 2452 16 view .LVU1244
 4411 006e 6FF07E00 		mvn	r0, #126
 4412 0072 F4E7     		b	.L332
 4413              	.LVL425:
 4414              	.L336:
2501:Core/Src/bno055.c ****         }
 4415              		.loc 1 2501 22 view .LVU1245
 4416 0074 4FF0FF30 		mov	r0, #-1
 4417 0078 F1E7     		b	.L332
 4418              	.L340:
 4419 007a 00BF     		.align	2
 4420              	.L339:
 4421 007c 00000000 		.word	.LANCHOR1
 4422 0080 00000000 		.word	.LANCHOR0
 4423              		.cfi_endproc
 4424              	.LFE35:
 4426              		.section	.text.bno055_read_gravity_x,"ax",%progbits
 4427              		.align	1
 4428              		.global	bno055_read_gravity_x
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4433              	bno055_read_gravity_x:
 4434              	.LVL426:
 4435              	.LFB36:
2507:Core/Src/bno055.c **** 
2508:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/cc9kYR4Z.s 			page 128


2509:Core/Src/bno055.c ****  *  @brief This API reads gravity data x values
2510:Core/Src/bno055.c ****  *  from register 0x2E and 0x2F it is a two byte data
2511:Core/Src/bno055.c ****  *
2512:Core/Src/bno055.c ****  *  @param gravity_x_s16 : The raw x data
2513:Core/Src/bno055.c ****  *
2514:Core/Src/bno055.c ****  *  @return results of bus communication function
2515:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2516:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2517:Core/Src/bno055.c ****  *
2518:Core/Src/bno055.c ****  *
2519:Core/Src/bno055.c ****  */
2520:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_x(s16 *gravity_x_s16)
2521:Core/Src/bno055.c **** {
 4436              		.loc 1 2521 1 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 8
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 4440              		.loc 1 2521 1 is_stmt 0 view .LVU1247
 4441 0000 30B5     		push	{r4, r5, lr}
 4442              	.LCFI137:
 4443              		.cfi_def_cfa_offset 12
 4444              		.cfi_offset 4, -12
 4445              		.cfi_offset 5, -8
 4446              		.cfi_offset 14, -4
 4447 0002 83B0     		sub	sp, sp, #12
 4448              	.LCFI138:
 4449              		.cfi_def_cfa_offset 24
2522:Core/Src/bno055.c ****     /* Variable used to return value of
2523:Core/Src/bno055.c ****      * communication routine*/
2524:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4450              		.loc 1 2524 5 is_stmt 1 view .LVU1248
 4451              	.LVL427:
2525:Core/Src/bno055.c **** 
2526:Core/Src/bno055.c ****     /* Array holding the gravity x value
2527:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2528:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2529:Core/Src/bno055.c ****      */
2530:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4452              		.loc 1 2530 5 view .LVU1249
 4453              		.loc 1 2530 8 is_stmt 0 view .LVU1250
 4454 0004 0023     		movs	r3, #0
 4455 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2531:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4456              		.loc 1 2531 5 is_stmt 1 view .LVU1251
 4457              	.LVL428:
2532:Core/Src/bno055.c **** 
2533:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2534:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4458              		.loc 1 2534 5 view .LVU1252
 4459              		.loc 1 2534 18 is_stmt 0 view .LVU1253
 4460 000a 134B     		ldr	r3, .L349
 4461 000c 1B68     		ldr	r3, [r3]
 4462              		.loc 1 2534 8 view .LVU1254
 4463 000e EBB1     		cbz	r3, .L345
 4464 0010 0446     		mov	r4, r0
2535:Core/Src/bno055.c ****     {
2536:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 129


2537:Core/Src/bno055.c ****     }
2538:Core/Src/bno055.c ****     else
2539:Core/Src/bno055.c ****     {
2540:Core/Src/bno055.c ****         /*condition check for page, chip id is
2541:Core/Src/bno055.c ****          * available in the page zero*/
2542:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4465              		.loc 1 2542 9 is_stmt 1 view .LVU1255
 4466              		.loc 1 2542 21 is_stmt 0 view .LVU1256
 4467 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4468              		.loc 1 2542 12 view .LVU1257
 4469 0014 A3B9     		cbnz	r3, .L348
 4470              	.LVL429:
 4471              	.L343:
2543:Core/Src/bno055.c ****         {
2544:Core/Src/bno055.c ****             /* Write the page zero*/
2545:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2546:Core/Src/bno055.c ****         }
2547:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4472              		.loc 1 2547 53 discriminator 1 view .LVU1258
 4473 0016 104B     		ldr	r3, .L349
 4474 0018 1B68     		ldr	r3, [r3]
 4475 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4476              		.loc 1 2547 41 discriminator 1 view .LVU1259
 4477 001c CBB9     		cbnz	r3, .L346
 4478              	.L344:
2548:Core/Src/bno055.c ****         {
2549:Core/Src/bno055.c ****             /* Read the two byte value
2550:Core/Src/bno055.c ****              * of gravity x data*/
2551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4479              		.loc 1 2551 13 is_stmt 1 view .LVU1260
 4480              		.loc 1 2551 32 is_stmt 0 view .LVU1261
 4481 001e 0E4B     		ldr	r3, .L349
 4482 0020 1868     		ldr	r0, [r3]
 4483 0022 0569     		ldr	r5, [r0, #16]
 4484              		.loc 1 2551 24 view .LVU1262
 4485 0024 0223     		movs	r3, #2
 4486 0026 01AA     		add	r2, sp, #4
 4487 0028 2E21     		movs	r1, #46
 4488 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4489 002c A847     		blx	r5
 4490              	.LVL430:
2552:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2553:Core/Src/bno055.c ****                                                       data_u8,
2554:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2555:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4491              		.loc 1 2555 13 is_stmt 1 view .LVU1263
2556:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_LSB_VALUEX)
2557:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4492              		.loc 1 2557 13 view .LVU1264
2558:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_MSB_VALUEX)
2559:Core/Src/bno055.c ****             *gravity_x_s16 =
 4493              		.loc 1 2559 13 view .LVU1265
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4494              		.loc 1 2560 31 is_stmt 0 view .LVU1266
 4495 002e 9DF90520 		ldrsb	r2, [sp, #5]
2561:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4496              		.loc 1 2561 31 view .LVU1267
ARM GAS  /tmp/cc9kYR4Z.s 			page 130


 4497 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4498              		.loc 1 2560 17 view .LVU1268
 4499 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2559:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4500              		.loc 1 2559 28 view .LVU1269
 4501 003a 2380     		strh	r3, [r4]	@ movhi
 4502              	.LVL431:
 4503              	.L342:
2562:Core/Src/bno055.c ****         }
2563:Core/Src/bno055.c ****         else
2564:Core/Src/bno055.c ****         {
2565:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2566:Core/Src/bno055.c ****         }
2567:Core/Src/bno055.c ****     }
2568:Core/Src/bno055.c **** 
2569:Core/Src/bno055.c ****     return com_rslt;
2570:Core/Src/bno055.c **** }
 4504              		.loc 1 2570 1 view .LVU1270
 4505 003c 03B0     		add	sp, sp, #12
 4506              	.LCFI139:
 4507              		.cfi_remember_state
 4508              		.cfi_def_cfa_offset 12
 4509              		@ sp needed
 4510 003e 30BD     		pop	{r4, r5, pc}
 4511              	.LVL432:
 4512              	.L348:
 4513              	.LCFI140:
 4514              		.cfi_restore_state
2545:Core/Src/bno055.c ****         }
 4515              		.loc 1 2545 13 is_stmt 1 view .LVU1271
2545:Core/Src/bno055.c ****         }
 4516              		.loc 1 2545 23 is_stmt 0 view .LVU1272
 4517 0040 0020     		movs	r0, #0
 4518              	.LVL433:
2545:Core/Src/bno055.c ****         }
 4519              		.loc 1 2545 23 view .LVU1273
 4520 0042 FFF7FEFF 		bl	bno055_write_page_id
 4521              	.LVL434:
2547:Core/Src/bno055.c ****         {
 4522              		.loc 1 2547 9 is_stmt 1 view .LVU1274
2547:Core/Src/bno055.c ****         {
 4523              		.loc 1 2547 12 is_stmt 0 view .LVU1275
 4524 0046 0028     		cmp	r0, #0
 4525 0048 E9D0     		beq	.L344
 4526 004a E4E7     		b	.L343
 4527              	.LVL435:
 4528              	.L345:
2536:Core/Src/bno055.c ****     }
 4529              		.loc 1 2536 16 view .LVU1276
 4530 004c 6FF07E00 		mvn	r0, #126
 4531              	.LVL436:
2536:Core/Src/bno055.c ****     }
 4532              		.loc 1 2536 16 view .LVU1277
 4533 0050 F4E7     		b	.L342
 4534              	.LVL437:
 4535              	.L346:
ARM GAS  /tmp/cc9kYR4Z.s 			page 131


2565:Core/Src/bno055.c ****         }
 4536              		.loc 1 2565 22 view .LVU1278
 4537 0052 4FF0FF30 		mov	r0, #-1
 4538 0056 F1E7     		b	.L342
 4539              	.L350:
 4540              		.align	2
 4541              	.L349:
 4542 0058 00000000 		.word	.LANCHOR0
 4543              		.cfi_endproc
 4544              	.LFE36:
 4546              		.section	.text.bno055_read_gravity_y,"ax",%progbits
 4547              		.align	1
 4548              		.global	bno055_read_gravity_y
 4549              		.syntax unified
 4550              		.thumb
 4551              		.thumb_func
 4553              	bno055_read_gravity_y:
 4554              	.LVL438:
 4555              	.LFB37:
2571:Core/Src/bno055.c **** 
2572:Core/Src/bno055.c **** /*!
2573:Core/Src/bno055.c ****  *  @brief This API reads gravity data y values
2574:Core/Src/bno055.c ****  *  from register 0x30 and 0x31 it is a two byte data
2575:Core/Src/bno055.c ****  *
2576:Core/Src/bno055.c ****  *  @param gravity_y_s16 : The raw y data
2577:Core/Src/bno055.c ****  *
2578:Core/Src/bno055.c ****  *  @return results of bus communication function
2579:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2580:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2581:Core/Src/bno055.c ****  *
2582:Core/Src/bno055.c ****  *
2583:Core/Src/bno055.c ****  */
2584:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_y(s16 *gravity_y_s16)
2585:Core/Src/bno055.c **** {
 4556              		.loc 1 2585 1 is_stmt 1 view -0
 4557              		.cfi_startproc
 4558              		@ args = 0, pretend = 0, frame = 8
 4559              		@ frame_needed = 0, uses_anonymous_args = 0
 4560              		.loc 1 2585 1 is_stmt 0 view .LVU1280
 4561 0000 30B5     		push	{r4, r5, lr}
 4562              	.LCFI141:
 4563              		.cfi_def_cfa_offset 12
 4564              		.cfi_offset 4, -12
 4565              		.cfi_offset 5, -8
 4566              		.cfi_offset 14, -4
 4567 0002 83B0     		sub	sp, sp, #12
 4568              	.LCFI142:
 4569              		.cfi_def_cfa_offset 24
2586:Core/Src/bno055.c ****     /* Variable used to return value of
2587:Core/Src/bno055.c ****      * communication routine*/
2588:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4570              		.loc 1 2588 5 is_stmt 1 view .LVU1281
 4571              	.LVL439:
2589:Core/Src/bno055.c **** 
2590:Core/Src/bno055.c ****     /* Array holding the gravity y value
2591:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2592:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 132


2593:Core/Src/bno055.c ****      */
2594:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4572              		.loc 1 2594 5 view .LVU1282
 4573              		.loc 1 2594 8 is_stmt 0 view .LVU1283
 4574 0004 0023     		movs	r3, #0
 4575 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2595:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4576              		.loc 1 2595 5 is_stmt 1 view .LVU1284
 4577              	.LVL440:
2596:Core/Src/bno055.c **** 
2597:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2598:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4578              		.loc 1 2598 5 view .LVU1285
 4579              		.loc 1 2598 18 is_stmt 0 view .LVU1286
 4580 000a 134B     		ldr	r3, .L359
 4581 000c 1B68     		ldr	r3, [r3]
 4582              		.loc 1 2598 8 view .LVU1287
 4583 000e EBB1     		cbz	r3, .L355
 4584 0010 0446     		mov	r4, r0
2599:Core/Src/bno055.c ****     {
2600:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2601:Core/Src/bno055.c ****     }
2602:Core/Src/bno055.c ****     else
2603:Core/Src/bno055.c ****     {
2604:Core/Src/bno055.c ****         /*condition check for page, chip id is
2605:Core/Src/bno055.c ****          * available in the page zero*/
2606:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4585              		.loc 1 2606 9 is_stmt 1 view .LVU1288
 4586              		.loc 1 2606 21 is_stmt 0 view .LVU1289
 4587 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4588              		.loc 1 2606 12 view .LVU1290
 4589 0014 A3B9     		cbnz	r3, .L358
 4590              	.LVL441:
 4591              	.L353:
2607:Core/Src/bno055.c ****         {
2608:Core/Src/bno055.c ****             /* Write the page zero*/
2609:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2610:Core/Src/bno055.c ****         }
2611:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4592              		.loc 1 2611 53 discriminator 1 view .LVU1291
 4593 0016 104B     		ldr	r3, .L359
 4594 0018 1B68     		ldr	r3, [r3]
 4595 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4596              		.loc 1 2611 41 discriminator 1 view .LVU1292
 4597 001c CBB9     		cbnz	r3, .L356
 4598              	.L354:
2612:Core/Src/bno055.c ****         {
2613:Core/Src/bno055.c ****             /* Read the two byte value
2614:Core/Src/bno055.c ****              * of gravity y data*/
2615:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4599              		.loc 1 2615 13 is_stmt 1 view .LVU1293
 4600              		.loc 1 2615 32 is_stmt 0 view .LVU1294
 4601 001e 0E4B     		ldr	r3, .L359
 4602 0020 1868     		ldr	r0, [r3]
 4603 0022 0569     		ldr	r5, [r0, #16]
 4604              		.loc 1 2615 24 view .LVU1295
 4605 0024 0223     		movs	r3, #2
ARM GAS  /tmp/cc9kYR4Z.s 			page 133


 4606 0026 01AA     		add	r2, sp, #4
 4607 0028 3021     		movs	r1, #48
 4608 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4609 002c A847     		blx	r5
 4610              	.LVL442:
2616:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Y_LSB_VALUEY_REG,
2617:Core/Src/bno055.c ****                                                       data_u8,
2618:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2619:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4611              		.loc 1 2619 13 is_stmt 1 view .LVU1296
2620:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_LSB_VALUEY)
2621:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4612              		.loc 1 2621 13 view .LVU1297
2622:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_MSB_VALUEY)
2623:Core/Src/bno055.c ****             *gravity_y_s16 =
 4613              		.loc 1 2623 13 view .LVU1298
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4614              		.loc 1 2624 31 is_stmt 0 view .LVU1299
 4615 002e 9DF90520 		ldrsb	r2, [sp, #5]
2625:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4616              		.loc 1 2625 31 view .LVU1300
 4617 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4618              		.loc 1 2624 17 view .LVU1301
 4619 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2623:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4620              		.loc 1 2623 28 view .LVU1302
 4621 003a 2380     		strh	r3, [r4]	@ movhi
 4622              	.LVL443:
 4623              	.L352:
2626:Core/Src/bno055.c ****         }
2627:Core/Src/bno055.c ****         else
2628:Core/Src/bno055.c ****         {
2629:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2630:Core/Src/bno055.c ****         }
2631:Core/Src/bno055.c ****     }
2632:Core/Src/bno055.c **** 
2633:Core/Src/bno055.c ****     return com_rslt;
2634:Core/Src/bno055.c **** }
 4624              		.loc 1 2634 1 view .LVU1303
 4625 003c 03B0     		add	sp, sp, #12
 4626              	.LCFI143:
 4627              		.cfi_remember_state
 4628              		.cfi_def_cfa_offset 12
 4629              		@ sp needed
 4630 003e 30BD     		pop	{r4, r5, pc}
 4631              	.LVL444:
 4632              	.L358:
 4633              	.LCFI144:
 4634              		.cfi_restore_state
2609:Core/Src/bno055.c ****         }
 4635              		.loc 1 2609 13 is_stmt 1 view .LVU1304
2609:Core/Src/bno055.c ****         }
 4636              		.loc 1 2609 23 is_stmt 0 view .LVU1305
 4637 0040 0020     		movs	r0, #0
 4638              	.LVL445:
2609:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 134


 4639              		.loc 1 2609 23 view .LVU1306
 4640 0042 FFF7FEFF 		bl	bno055_write_page_id
 4641              	.LVL446:
2611:Core/Src/bno055.c ****         {
 4642              		.loc 1 2611 9 is_stmt 1 view .LVU1307
2611:Core/Src/bno055.c ****         {
 4643              		.loc 1 2611 12 is_stmt 0 view .LVU1308
 4644 0046 0028     		cmp	r0, #0
 4645 0048 E9D0     		beq	.L354
 4646 004a E4E7     		b	.L353
 4647              	.LVL447:
 4648              	.L355:
2600:Core/Src/bno055.c ****     }
 4649              		.loc 1 2600 16 view .LVU1309
 4650 004c 6FF07E00 		mvn	r0, #126
 4651              	.LVL448:
2600:Core/Src/bno055.c ****     }
 4652              		.loc 1 2600 16 view .LVU1310
 4653 0050 F4E7     		b	.L352
 4654              	.LVL449:
 4655              	.L356:
2629:Core/Src/bno055.c ****         }
 4656              		.loc 1 2629 22 view .LVU1311
 4657 0052 4FF0FF30 		mov	r0, #-1
 4658 0056 F1E7     		b	.L352
 4659              	.L360:
 4660              		.align	2
 4661              	.L359:
 4662 0058 00000000 		.word	.LANCHOR0
 4663              		.cfi_endproc
 4664              	.LFE37:
 4666              		.section	.text.bno055_read_gravity_z,"ax",%progbits
 4667              		.align	1
 4668              		.global	bno055_read_gravity_z
 4669              		.syntax unified
 4670              		.thumb
 4671              		.thumb_func
 4673              	bno055_read_gravity_z:
 4674              	.LVL450:
 4675              	.LFB38:
2635:Core/Src/bno055.c **** 
2636:Core/Src/bno055.c **** /*!
2637:Core/Src/bno055.c ****  *  @brief This API reads gravity data z values
2638:Core/Src/bno055.c ****  *  from register 0x32 and 0x33 it is a two byte data
2639:Core/Src/bno055.c ****  *
2640:Core/Src/bno055.c ****  *  @param gravity_z_s16 : The raw z data
2641:Core/Src/bno055.c ****  *
2642:Core/Src/bno055.c ****  *  @return results of bus communication function
2643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2645:Core/Src/bno055.c ****  *
2646:Core/Src/bno055.c ****  *
2647:Core/Src/bno055.c ****  */
2648:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_z(s16 *gravity_z_s16)
2649:Core/Src/bno055.c **** {
 4676              		.loc 1 2649 1 is_stmt 1 view -0
 4677              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 135


 4678              		@ args = 0, pretend = 0, frame = 8
 4679              		@ frame_needed = 0, uses_anonymous_args = 0
 4680              		.loc 1 2649 1 is_stmt 0 view .LVU1313
 4681 0000 30B5     		push	{r4, r5, lr}
 4682              	.LCFI145:
 4683              		.cfi_def_cfa_offset 12
 4684              		.cfi_offset 4, -12
 4685              		.cfi_offset 5, -8
 4686              		.cfi_offset 14, -4
 4687 0002 83B0     		sub	sp, sp, #12
 4688              	.LCFI146:
 4689              		.cfi_def_cfa_offset 24
2650:Core/Src/bno055.c ****     /* Variable used to return value of
2651:Core/Src/bno055.c ****      * communication routine*/
2652:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4690              		.loc 1 2652 5 is_stmt 1 view .LVU1314
 4691              	.LVL451:
2653:Core/Src/bno055.c **** 
2654:Core/Src/bno055.c ****     /* Array holding the gravity z value
2655:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2656:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2657:Core/Src/bno055.c ****      */
2658:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4692              		.loc 1 2658 5 view .LVU1315
 4693              		.loc 1 2658 8 is_stmt 0 view .LVU1316
 4694 0004 0023     		movs	r3, #0
 4695 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4696              		.loc 1 2659 5 is_stmt 1 view .LVU1317
 4697              	.LVL452:
2660:Core/Src/bno055.c **** 
2661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4698              		.loc 1 2662 5 view .LVU1318
 4699              		.loc 1 2662 18 is_stmt 0 view .LVU1319
 4700 000a 134B     		ldr	r3, .L369
 4701 000c 1B68     		ldr	r3, [r3]
 4702              		.loc 1 2662 8 view .LVU1320
 4703 000e EBB1     		cbz	r3, .L365
 4704 0010 0446     		mov	r4, r0
2663:Core/Src/bno055.c ****     {
2664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2665:Core/Src/bno055.c ****     }
2666:Core/Src/bno055.c ****     else
2667:Core/Src/bno055.c ****     {
2668:Core/Src/bno055.c ****         /*condition check for page, chip id is
2669:Core/Src/bno055.c ****          * available in the page zero*/
2670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4705              		.loc 1 2670 9 is_stmt 1 view .LVU1321
 4706              		.loc 1 2670 21 is_stmt 0 view .LVU1322
 4707 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4708              		.loc 1 2670 12 view .LVU1323
 4709 0014 A3B9     		cbnz	r3, .L368
 4710              	.LVL453:
 4711              	.L363:
2671:Core/Src/bno055.c ****         {
2672:Core/Src/bno055.c ****             /* Write the page zero*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 136


2673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2674:Core/Src/bno055.c ****         }
2675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4712              		.loc 1 2675 53 discriminator 1 view .LVU1324
 4713 0016 104B     		ldr	r3, .L369
 4714 0018 1B68     		ldr	r3, [r3]
 4715 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4716              		.loc 1 2675 41 discriminator 1 view .LVU1325
 4717 001c CBB9     		cbnz	r3, .L366
 4718              	.L364:
2676:Core/Src/bno055.c ****         {
2677:Core/Src/bno055.c ****             /* Read the two byte value
2678:Core/Src/bno055.c ****              * of gravity z data*/
2679:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4719              		.loc 1 2679 13 is_stmt 1 view .LVU1326
 4720              		.loc 1 2679 32 is_stmt 0 view .LVU1327
 4721 001e 0E4B     		ldr	r3, .L369
 4722 0020 1868     		ldr	r0, [r3]
 4723 0022 0569     		ldr	r5, [r0, #16]
 4724              		.loc 1 2679 24 view .LVU1328
 4725 0024 0223     		movs	r3, #2
 4726 0026 01AA     		add	r2, sp, #4
 4727 0028 3221     		movs	r1, #50
 4728 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4729 002c A847     		blx	r5
 4730              	.LVL454:
2680:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Z_LSB_VALUEZ_REG,
2681:Core/Src/bno055.c ****                                                       data_u8,
2682:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2683:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4731              		.loc 1 2683 13 is_stmt 1 view .LVU1329
2684:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_LSB_VALUEZ)
2685:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4732              		.loc 1 2685 13 view .LVU1330
2686:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_MSB_VALUEZ)
2687:Core/Src/bno055.c ****             *gravity_z_s16 =
 4733              		.loc 1 2687 13 view .LVU1331
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4734              		.loc 1 2688 31 is_stmt 0 view .LVU1332
 4735 002e 9DF90520 		ldrsb	r2, [sp, #5]
2689:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4736              		.loc 1 2689 31 view .LVU1333
 4737 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4738              		.loc 1 2688 17 view .LVU1334
 4739 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2687:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4740              		.loc 1 2687 28 view .LVU1335
 4741 003a 2380     		strh	r3, [r4]	@ movhi
 4742              	.LVL455:
 4743              	.L362:
2690:Core/Src/bno055.c ****         }
2691:Core/Src/bno055.c ****         else
2692:Core/Src/bno055.c ****         {
2693:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2694:Core/Src/bno055.c ****         }
2695:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 137


2696:Core/Src/bno055.c **** 
2697:Core/Src/bno055.c ****     return com_rslt;
2698:Core/Src/bno055.c **** }
 4744              		.loc 1 2698 1 view .LVU1336
 4745 003c 03B0     		add	sp, sp, #12
 4746              	.LCFI147:
 4747              		.cfi_remember_state
 4748              		.cfi_def_cfa_offset 12
 4749              		@ sp needed
 4750 003e 30BD     		pop	{r4, r5, pc}
 4751              	.LVL456:
 4752              	.L368:
 4753              	.LCFI148:
 4754              		.cfi_restore_state
2673:Core/Src/bno055.c ****         }
 4755              		.loc 1 2673 13 is_stmt 1 view .LVU1337
2673:Core/Src/bno055.c ****         }
 4756              		.loc 1 2673 23 is_stmt 0 view .LVU1338
 4757 0040 0020     		movs	r0, #0
 4758              	.LVL457:
2673:Core/Src/bno055.c ****         }
 4759              		.loc 1 2673 23 view .LVU1339
 4760 0042 FFF7FEFF 		bl	bno055_write_page_id
 4761              	.LVL458:
2675:Core/Src/bno055.c ****         {
 4762              		.loc 1 2675 9 is_stmt 1 view .LVU1340
2675:Core/Src/bno055.c ****         {
 4763              		.loc 1 2675 12 is_stmt 0 view .LVU1341
 4764 0046 0028     		cmp	r0, #0
 4765 0048 E9D0     		beq	.L364
 4766 004a E4E7     		b	.L363
 4767              	.LVL459:
 4768              	.L365:
2664:Core/Src/bno055.c ****     }
 4769              		.loc 1 2664 16 view .LVU1342
 4770 004c 6FF07E00 		mvn	r0, #126
 4771              	.LVL460:
2664:Core/Src/bno055.c ****     }
 4772              		.loc 1 2664 16 view .LVU1343
 4773 0050 F4E7     		b	.L362
 4774              	.LVL461:
 4775              	.L366:
2693:Core/Src/bno055.c ****         }
 4776              		.loc 1 2693 22 view .LVU1344
 4777 0052 4FF0FF30 		mov	r0, #-1
 4778 0056 F1E7     		b	.L362
 4779              	.L370:
 4780              		.align	2
 4781              	.L369:
 4782 0058 00000000 		.word	.LANCHOR0
 4783              		.cfi_endproc
 4784              	.LFE38:
 4786              		.section	.text.bno055_read_gravity_xyz,"ax",%progbits
 4787              		.align	1
 4788              		.global	bno055_read_gravity_xyz
 4789              		.syntax unified
 4790              		.thumb
ARM GAS  /tmp/cc9kYR4Z.s 			page 138


 4791              		.thumb_func
 4793              	bno055_read_gravity_xyz:
 4794              	.LVL462:
 4795              	.LFB39:
2699:Core/Src/bno055.c **** 
2700:Core/Src/bno055.c **** /*!
2701:Core/Src/bno055.c ****  *  @brief This API reads gravity data xyz values
2702:Core/Src/bno055.c ****  *  from register 0x2E to 0x33 it is a six byte data
2703:Core/Src/bno055.c ****  *
2704:Core/Src/bno055.c ****  *
2705:Core/Src/bno055.c ****  *  @param gravity : The value of gravity xyz data's
2706:Core/Src/bno055.c ****  *
2707:Core/Src/bno055.c ****  *  Parameter |    result
2708:Core/Src/bno055.c ****  *  --------- | -----------------
2709:Core/Src/bno055.c ****  *   x        | The gravity x data
2710:Core/Src/bno055.c ****  *   y        | The gravity y data
2711:Core/Src/bno055.c ****  *   z        | The gravity z data
2712:Core/Src/bno055.c ****  *
2713:Core/Src/bno055.c ****  *
2714:Core/Src/bno055.c ****  *  @return results of bus communication function
2715:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2716:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2717:Core/Src/bno055.c ****  *
2718:Core/Src/bno055.c ****  */
2719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_xyz(struct bno055_gravity_t *gravity)
2720:Core/Src/bno055.c **** {
 4796              		.loc 1 2720 1 is_stmt 1 view -0
 4797              		.cfi_startproc
 4798              		@ args = 0, pretend = 0, frame = 8
 4799              		@ frame_needed = 0, uses_anonymous_args = 0
 4800              		.loc 1 2720 1 is_stmt 0 view .LVU1346
 4801 0000 30B5     		push	{r4, r5, lr}
 4802              	.LCFI149:
 4803              		.cfi_def_cfa_offset 12
 4804              		.cfi_offset 4, -12
 4805              		.cfi_offset 5, -8
 4806              		.cfi_offset 14, -4
 4807 0002 83B0     		sub	sp, sp, #12
 4808              	.LCFI150:
 4809              		.cfi_def_cfa_offset 24
 4810 0004 0446     		mov	r4, r0
2721:Core/Src/bno055.c ****     /* Variable used to return value of
2722:Core/Src/bno055.c ****      * communication routine*/
2723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4811              		.loc 1 2723 5 is_stmt 1 view .LVU1347
 4812              	.LVL463:
2724:Core/Src/bno055.c **** 
2725:Core/Src/bno055.c ****     /* Array holding the gravity xyz value
2726:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2727:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2728:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2729:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2730:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2731:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2732:Core/Src/bno055.c ****      */
2733:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_XYZ_DATA_SIZE] = {
 4813              		.loc 1 2733 5 view .LVU1348
ARM GAS  /tmp/cc9kYR4Z.s 			page 139


 4814              		.loc 1 2733 8 is_stmt 0 view .LVU1349
 4815 0006 1D4B     		ldr	r3, .L379
 4816 0008 93E80300 		ldm	r3, {r0, r1}
 4817              	.LVL464:
 4818              		.loc 1 2733 8 view .LVU1350
 4819 000c 0090     		str	r0, [sp]
 4820 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2734:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2735:Core/Src/bno055.c ****     };
2736:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4821              		.loc 1 2736 5 is_stmt 1 view .LVU1351
 4822              	.LVL465:
2737:Core/Src/bno055.c **** 
2738:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2739:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4823              		.loc 1 2739 5 view .LVU1352
 4824              		.loc 1 2739 18 is_stmt 0 view .LVU1353
 4825 0012 1B4B     		ldr	r3, .L379+4
 4826 0014 1B68     		ldr	r3, [r3]
 4827              		.loc 1 2739 8 view .LVU1354
 4828 0016 53B3     		cbz	r3, .L375
2740:Core/Src/bno055.c ****     {
2741:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2742:Core/Src/bno055.c ****     }
2743:Core/Src/bno055.c ****     else
2744:Core/Src/bno055.c ****     {
2745:Core/Src/bno055.c ****         /*condition check for page, chip id is
2746:Core/Src/bno055.c ****          * available in the page zero*/
2747:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4829              		.loc 1 2747 9 is_stmt 1 view .LVU1355
 4830              		.loc 1 2747 21 is_stmt 0 view .LVU1356
 4831 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4832              		.loc 1 2747 12 view .LVU1357
 4833 001a 13BB     		cbnz	r3, .L378
 4834              	.LVL466:
 4835              	.L373:
2748:Core/Src/bno055.c ****         {
2749:Core/Src/bno055.c ****             /* Write the page zero*/
2750:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2751:Core/Src/bno055.c ****         }
2752:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4836              		.loc 1 2752 53 discriminator 1 view .LVU1358
 4837 001c 184B     		ldr	r3, .L379+4
 4838 001e 1B68     		ldr	r3, [r3]
 4839 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4840              		.loc 1 2752 41 discriminator 1 view .LVU1359
 4841 0022 3BBB     		cbnz	r3, .L376
 4842              	.L374:
2753:Core/Src/bno055.c ****         {
2754:Core/Src/bno055.c ****             /* Read the six byte value
2755:Core/Src/bno055.c ****              * of gravity xyz data*/
2756:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4843              		.loc 1 2756 13 is_stmt 1 view .LVU1360
 4844              		.loc 1 2756 32 is_stmt 0 view .LVU1361
 4845 0024 164B     		ldr	r3, .L379+4
 4846 0026 1868     		ldr	r0, [r3]
 4847 0028 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/cc9kYR4Z.s 			page 140


 4848              		.loc 1 2756 24 view .LVU1362
 4849 002a 0623     		movs	r3, #6
 4850 002c 6A46     		mov	r2, sp
 4851 002e 2E21     		movs	r1, #46
 4852 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4853 0032 A847     		blx	r5
 4854              	.LVL467:
2757:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2758:Core/Src/bno055.c ****                                                       data_u8,
2759:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_XYZ_DATA_SIZE);
2760:Core/Src/bno055.c **** 
2761:Core/Src/bno055.c ****             /* Data x*/
2762:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4855              		.loc 1 2762 13 is_stmt 1 view .LVU1363
2763:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_LSB_V
2764:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4856              		.loc 1 2764 13 view .LVU1364
2765:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_MSB_V
2766:Core/Src/bno055.c ****             gravity->x =
 4857              		.loc 1 2766 13 view .LVU1365
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4858              		.loc 1 2767 30 is_stmt 0 view .LVU1366
 4859 0034 9DF90120 		ldrsb	r2, [sp, #1]
2768:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4860              		.loc 1 2768 31 view .LVU1367
 4861 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4862              		.loc 1 2767 17 view .LVU1368
 4863 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2766:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4864              		.loc 1 2766 24 view .LVU1369
 4865 0040 2380     		strh	r3, [r4]	@ movhi
2769:Core/Src/bno055.c **** 
2770:Core/Src/bno055.c ****             /* Data y*/
2771:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4866              		.loc 1 2771 13 is_stmt 1 view .LVU1370
2772:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_LSB_V
2773:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4867              		.loc 1 2773 13 view .LVU1371
2774:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_MSB_V
2775:Core/Src/bno055.c ****             gravity->y =
 4868              		.loc 1 2775 13 view .LVU1372
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4869              		.loc 1 2776 31 is_stmt 0 view .LVU1373
 4870 0042 9DF90320 		ldrsb	r2, [sp, #3]
2777:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4871              		.loc 1 2777 31 view .LVU1374
 4872 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4873              		.loc 1 2776 17 view .LVU1375
 4874 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2775:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4875              		.loc 1 2775 24 view .LVU1376
 4876 004e 6380     		strh	r3, [r4, #2]	@ movhi
2778:Core/Src/bno055.c **** 
2779:Core/Src/bno055.c ****             /* Data z*/
2780:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
ARM GAS  /tmp/cc9kYR4Z.s 			page 141


 4877              		.loc 1 2780 13 is_stmt 1 view .LVU1377
2781:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_LSB_V
2782:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4878              		.loc 1 2782 13 view .LVU1378
2783:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_MSB_V
2784:Core/Src/bno055.c ****             gravity->z =
 4879              		.loc 1 2784 13 view .LVU1379
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4880              		.loc 1 2785 31 is_stmt 0 view .LVU1380
 4881 0050 9DF90520 		ldrsb	r2, [sp, #5]
2786:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4882              		.loc 1 2786 31 view .LVU1381
 4883 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4884              		.loc 1 2785 17 view .LVU1382
 4885 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2784:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4886              		.loc 1 2784 24 view .LVU1383
 4887 005c A380     		strh	r3, [r4, #4]	@ movhi
 4888              	.LVL468:
 4889              	.L372:
2787:Core/Src/bno055.c ****         }
2788:Core/Src/bno055.c ****         else
2789:Core/Src/bno055.c ****         {
2790:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2791:Core/Src/bno055.c ****         }
2792:Core/Src/bno055.c ****     }
2793:Core/Src/bno055.c **** 
2794:Core/Src/bno055.c ****     return com_rslt;
2795:Core/Src/bno055.c **** }
 4890              		.loc 1 2795 1 view .LVU1384
 4891 005e 03B0     		add	sp, sp, #12
 4892              	.LCFI151:
 4893              		.cfi_remember_state
 4894              		.cfi_def_cfa_offset 12
 4895              		@ sp needed
 4896 0060 30BD     		pop	{r4, r5, pc}
 4897              	.LVL469:
 4898              	.L378:
 4899              	.LCFI152:
 4900              		.cfi_restore_state
2750:Core/Src/bno055.c ****         }
 4901              		.loc 1 2750 13 is_stmt 1 view .LVU1385
2750:Core/Src/bno055.c ****         }
 4902              		.loc 1 2750 23 is_stmt 0 view .LVU1386
 4903 0062 0020     		movs	r0, #0
 4904 0064 FFF7FEFF 		bl	bno055_write_page_id
 4905              	.LVL470:
2752:Core/Src/bno055.c ****         {
 4906              		.loc 1 2752 9 is_stmt 1 view .LVU1387
2752:Core/Src/bno055.c ****         {
 4907              		.loc 1 2752 12 is_stmt 0 view .LVU1388
 4908 0068 0028     		cmp	r0, #0
 4909 006a DBD0     		beq	.L374
 4910 006c D6E7     		b	.L373
 4911              	.LVL471:
 4912              	.L375:
ARM GAS  /tmp/cc9kYR4Z.s 			page 142


2741:Core/Src/bno055.c ****     }
 4913              		.loc 1 2741 16 view .LVU1389
 4914 006e 6FF07E00 		mvn	r0, #126
 4915 0072 F4E7     		b	.L372
 4916              	.LVL472:
 4917              	.L376:
2790:Core/Src/bno055.c ****         }
 4918              		.loc 1 2790 22 view .LVU1390
 4919 0074 4FF0FF30 		mov	r0, #-1
 4920 0078 F1E7     		b	.L372
 4921              	.L380:
 4922 007a 00BF     		.align	2
 4923              	.L379:
 4924 007c 00000000 		.word	.LANCHOR1
 4925 0080 00000000 		.word	.LANCHOR0
 4926              		.cfi_endproc
 4927              	.LFE39:
 4929              		.section	.text.bno055_read_temp_data,"ax",%progbits
 4930              		.align	1
 4931              		.global	bno055_read_temp_data
 4932              		.syntax unified
 4933              		.thumb
 4934              		.thumb_func
 4936              	bno055_read_temp_data:
 4937              	.LVL473:
 4938              	.LFB40:
2796:Core/Src/bno055.c **** 
2797:Core/Src/bno055.c **** /*!
2798:Core/Src/bno055.c ****  *  @brief This API reads temperature values
2799:Core/Src/bno055.c ****  *  from register 0x33 it is a byte data
2800:Core/Src/bno055.c ****  *
2801:Core/Src/bno055.c ****  *  @param temp_s8 : The raw temperature data
2802:Core/Src/bno055.c ****  *
2803:Core/Src/bno055.c ****  *  @return results of bus communication function
2804:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2805:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2806:Core/Src/bno055.c ****  *
2807:Core/Src/bno055.c ****  *
2808:Core/Src/bno055.c ****  */
2809:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_temp_data(s8 *temp_s8)
2810:Core/Src/bno055.c **** {
 4939              		.loc 1 2810 1 is_stmt 1 view -0
 4940              		.cfi_startproc
 4941              		@ args = 0, pretend = 0, frame = 8
 4942              		@ frame_needed = 0, uses_anonymous_args = 0
 4943              		.loc 1 2810 1 is_stmt 0 view .LVU1392
 4944 0000 70B5     		push	{r4, r5, r6, lr}
 4945              	.LCFI153:
 4946              		.cfi_def_cfa_offset 16
 4947              		.cfi_offset 4, -16
 4948              		.cfi_offset 5, -12
 4949              		.cfi_offset 6, -8
 4950              		.cfi_offset 14, -4
 4951 0002 82B0     		sub	sp, sp, #8
 4952              	.LCFI154:
 4953              		.cfi_def_cfa_offset 24
2811:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/cc9kYR4Z.s 			page 143


2812:Core/Src/bno055.c ****      * communication routine*/
2813:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4954              		.loc 1 2813 5 is_stmt 1 view .LVU1393
 4955              	.LVL474:
2814:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 4956              		.loc 1 2814 5 view .LVU1394
 4957              		.loc 1 2814 8 is_stmt 0 view .LVU1395
 4958 0004 0023     		movs	r3, #0
 4959 0006 8DF80730 		strb	r3, [sp, #7]
2815:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4960              		.loc 1 2815 5 is_stmt 1 view .LVU1396
 4961              	.LVL475:
2816:Core/Src/bno055.c **** 
2817:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2818:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4962              		.loc 1 2818 5 view .LVU1397
 4963              		.loc 1 2818 18 is_stmt 0 view .LVU1398
 4964 000a 124B     		ldr	r3, .L389
 4965 000c 1B68     		ldr	r3, [r3]
 4966              		.loc 1 2818 8 view .LVU1399
 4967 000e D3B1     		cbz	r3, .L385
 4968 0010 0546     		mov	r5, r0
2819:Core/Src/bno055.c ****     {
2820:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2821:Core/Src/bno055.c ****     }
2822:Core/Src/bno055.c ****     else
2823:Core/Src/bno055.c ****     {
2824:Core/Src/bno055.c ****         /*condition check for page, chip id is
2825:Core/Src/bno055.c ****          * available in the page zero*/
2826:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4969              		.loc 1 2826 9 is_stmt 1 view .LVU1400
 4970              		.loc 1 2826 21 is_stmt 0 view .LVU1401
 4971 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4972              		.loc 1 2826 12 view .LVU1402
 4973 0014 8BB9     		cbnz	r3, .L388
 4974              	.LVL476:
 4975              	.L383:
2827:Core/Src/bno055.c ****         {
2828:Core/Src/bno055.c ****             /* Write the page zero*/
2829:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2830:Core/Src/bno055.c ****         }
2831:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4976              		.loc 1 2831 53 discriminator 1 view .LVU1403
 4977 0016 0F4B     		ldr	r3, .L389
 4978 0018 1B68     		ldr	r3, [r3]
 4979 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4980              		.loc 1 2831 41 discriminator 1 view .LVU1404
 4981 001c B3B9     		cbnz	r3, .L386
 4982              	.L384:
2832:Core/Src/bno055.c ****         {
2833:Core/Src/bno055.c ****             /* Read the raw temperature data */
2834:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4983              		.loc 1 2834 13 is_stmt 1 view .LVU1405
 4984              		.loc 1 2834 32 is_stmt 0 view .LVU1406
 4985 001e 0D4B     		ldr	r3, .L389
 4986 0020 1C68     		ldr	r4, [r3]
 4987 0022 2669     		ldr	r6, [r4, #16]
ARM GAS  /tmp/cc9kYR4Z.s 			page 144


 4988              		.loc 1 2834 24 view .LVU1407
 4989 0024 0123     		movs	r3, #1
 4990 0026 0DF10702 		add	r2, sp, #7
 4991 002a 3421     		movs	r1, #52
 4992 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 4993 002e B047     		blx	r6
 4994              	.LVL477:
2835:Core/Src/bno055.c ****                                                       BNO055_TEMP_REG,
2836:Core/Src/bno055.c ****                                                       &data_u8,
2837:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
2838:Core/Src/bno055.c ****             *temp_s8 = data_u8;
 4995              		.loc 1 2838 13 is_stmt 1 view .LVU1408
 4996              		.loc 1 2838 22 is_stmt 0 view .LVU1409
 4997 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4998 0034 2B70     		strb	r3, [r5]
 4999              	.LVL478:
 5000              	.L382:
2839:Core/Src/bno055.c ****         }
2840:Core/Src/bno055.c ****         else
2841:Core/Src/bno055.c ****         {
2842:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2843:Core/Src/bno055.c ****         }
2844:Core/Src/bno055.c ****     }
2845:Core/Src/bno055.c **** 
2846:Core/Src/bno055.c ****     return com_rslt;
2847:Core/Src/bno055.c **** }
 5001              		.loc 1 2847 1 view .LVU1410
 5002 0036 02B0     		add	sp, sp, #8
 5003              	.LCFI155:
 5004              		.cfi_remember_state
 5005              		.cfi_def_cfa_offset 16
 5006              		@ sp needed
 5007 0038 70BD     		pop	{r4, r5, r6, pc}
 5008              	.LVL479:
 5009              	.L388:
 5010              	.LCFI156:
 5011              		.cfi_restore_state
2829:Core/Src/bno055.c ****         }
 5012              		.loc 1 2829 13 is_stmt 1 view .LVU1411
2829:Core/Src/bno055.c ****         }
 5013              		.loc 1 2829 23 is_stmt 0 view .LVU1412
 5014 003a 0020     		movs	r0, #0
 5015              	.LVL480:
2829:Core/Src/bno055.c ****         }
 5016              		.loc 1 2829 23 view .LVU1413
 5017 003c FFF7FEFF 		bl	bno055_write_page_id
 5018              	.LVL481:
2831:Core/Src/bno055.c ****         {
 5019              		.loc 1 2831 9 is_stmt 1 view .LVU1414
2831:Core/Src/bno055.c ****         {
 5020              		.loc 1 2831 12 is_stmt 0 view .LVU1415
 5021 0040 0028     		cmp	r0, #0
 5022 0042 ECD0     		beq	.L384
 5023 0044 E7E7     		b	.L383
 5024              	.LVL482:
 5025              	.L385:
2820:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 145


 5026              		.loc 1 2820 16 view .LVU1416
 5027 0046 6FF07E00 		mvn	r0, #126
 5028              	.LVL483:
2820:Core/Src/bno055.c ****     }
 5029              		.loc 1 2820 16 view .LVU1417
 5030 004a F4E7     		b	.L382
 5031              	.LVL484:
 5032              	.L386:
2842:Core/Src/bno055.c ****         }
 5033              		.loc 1 2842 22 view .LVU1418
 5034 004c 4FF0FF30 		mov	r0, #-1
 5035 0050 F1E7     		b	.L382
 5036              	.L390:
 5037 0052 00BF     		.align	2
 5038              	.L389:
 5039 0054 00000000 		.word	.LANCHOR0
 5040              		.cfi_endproc
 5041              	.LFE40:
 5043              		.global	__aeabi_i2d
 5044              		.global	__aeabi_dmul
 5045              		.global	__aeabi_d2f
 5046              		.section	.text.bno055_convert_float_mag_x_uT,"ax",%progbits
 5047              		.align	1
 5048              		.global	bno055_convert_float_mag_x_uT
 5049              		.syntax unified
 5050              		.thumb
 5051              		.thumb_func
 5053              	bno055_convert_float_mag_x_uT:
 5054              	.LVL485:
 5055              	.LFB49:
2848:Core/Src/bno055.c **** #ifdef  BNO055_FLOAT_ENABLE
2849:Core/Src/bno055.c **** 
2850:Core/Src/bno055.c **** /*!
2851:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2852:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2853:Core/Src/bno055.c ****  *
2854:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x meterpersecseq data
2855:Core/Src/bno055.c ****  *
2856:Core/Src/bno055.c ****  *
2857:Core/Src/bno055.c ****  *
2858:Core/Src/bno055.c ****  *  @return results of bus communication function
2859:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2860:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2861:Core/Src/bno055.c ****  *
2862:Core/Src/bno055.c ****  *
2863:Core/Src/bno055.c ****  */
2864:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_msq(float *accel_x_f)
2865:Core/Src/bno055.c **** {
2866:Core/Src/bno055.c ****     /* Variable used to return value of
2867:Core/Src/bno055.c ****      * communication routine*/
2868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2869:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2870:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2871:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2872:Core/Src/bno055.c **** 
2873:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2874:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 146


2875:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2876:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2877:Core/Src/bno055.c ****     {
2878:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2879:Core/Src/bno055.c ****     }
2880:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2881:Core/Src/bno055.c ****     {
2882:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2883:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2884:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2885:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2886:Core/Src/bno055.c ****         {
2887:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2888:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
2889:Core/Src/bno055.c ****             *accel_x_f = data_f;
2890:Core/Src/bno055.c ****         }
2891:Core/Src/bno055.c ****         else
2892:Core/Src/bno055.c ****         {
2893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2894:Core/Src/bno055.c ****         }
2895:Core/Src/bno055.c ****     }
2896:Core/Src/bno055.c ****     else
2897:Core/Src/bno055.c ****     {
2898:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2899:Core/Src/bno055.c ****     }
2900:Core/Src/bno055.c **** 
2901:Core/Src/bno055.c ****     return com_rslt;
2902:Core/Src/bno055.c **** }
2903:Core/Src/bno055.c **** 
2904:Core/Src/bno055.c **** /*!
2905:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2906:Core/Src/bno055.c ****  *  to millig output as float
2907:Core/Src/bno055.c ****  *
2908:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x millig data
2909:Core/Src/bno055.c ****  *
2910:Core/Src/bno055.c ****  *
2911:Core/Src/bno055.c ****  *
2912:Core/Src/bno055.c ****  *  @return results of bus communication function
2913:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2914:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2915:Core/Src/bno055.c ****  *
2916:Core/Src/bno055.c ****  *
2917:Core/Src/bno055.c ****  *
2918:Core/Src/bno055.c ****  */
2919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_mg(float *accel_x_f)
2920:Core/Src/bno055.c **** {
2921:Core/Src/bno055.c ****     /* Variable used to return value of
2922:Core/Src/bno055.c ****      * communication routine*/
2923:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2924:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2925:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2926:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2927:Core/Src/bno055.c **** 
2928:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2929:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
2930:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2931:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
ARM GAS  /tmp/cc9kYR4Z.s 			page 147


2932:Core/Src/bno055.c ****     {
2933:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
2934:Core/Src/bno055.c ****     }
2935:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2936:Core/Src/bno055.c ****     {
2937:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2938:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2939:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2940:Core/Src/bno055.c ****         {
2941:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2942:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
2943:Core/Src/bno055.c ****             *accel_x_f = data_f;
2944:Core/Src/bno055.c ****         }
2945:Core/Src/bno055.c ****         else
2946:Core/Src/bno055.c ****         {
2947:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2948:Core/Src/bno055.c ****         }
2949:Core/Src/bno055.c ****     }
2950:Core/Src/bno055.c ****     else
2951:Core/Src/bno055.c ****     {
2952:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2953:Core/Src/bno055.c ****     }
2954:Core/Src/bno055.c **** 
2955:Core/Src/bno055.c ****     return com_rslt;
2956:Core/Src/bno055.c **** }
2957:Core/Src/bno055.c **** 
2958:Core/Src/bno055.c **** /*!
2959:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2960:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2961:Core/Src/bno055.c ****  *
2962:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y meterpersecseq data
2963:Core/Src/bno055.c ****  *
2964:Core/Src/bno055.c ****  *
2965:Core/Src/bno055.c ****  *
2966:Core/Src/bno055.c ****  *  @return results of bus communication function
2967:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2968:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2969:Core/Src/bno055.c ****  *
2970:Core/Src/bno055.c ****  *
2971:Core/Src/bno055.c ****  */
2972:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_msq(float *accel_y_f)
2973:Core/Src/bno055.c **** {
2974:Core/Src/bno055.c ****     /* Variable used to return value of
2975:Core/Src/bno055.c ****      * communication routine*/
2976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2977:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
2978:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2979:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2980:Core/Src/bno055.c **** 
2981:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2982:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2983:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2984:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2985:Core/Src/bno055.c ****     {
2986:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2987:Core/Src/bno055.c ****     }
2988:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 148


2989:Core/Src/bno055.c ****     {
2990:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
2991:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2992:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2993:Core/Src/bno055.c ****         {
2994:Core/Src/bno055.c ****             /* Convert the raw accel y to m/s2*/
2995:Core/Src/bno055.c ****             data_f = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
2996:Core/Src/bno055.c ****             *accel_y_f = data_f;
2997:Core/Src/bno055.c ****         }
2998:Core/Src/bno055.c ****         else
2999:Core/Src/bno055.c ****         {
3000:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3001:Core/Src/bno055.c ****         }
3002:Core/Src/bno055.c ****     }
3003:Core/Src/bno055.c ****     else
3004:Core/Src/bno055.c ****     {
3005:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3006:Core/Src/bno055.c ****     }
3007:Core/Src/bno055.c **** 
3008:Core/Src/bno055.c ****     return com_rslt;
3009:Core/Src/bno055.c **** }
3010:Core/Src/bno055.c **** 
3011:Core/Src/bno055.c **** /*!
3012:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
3013:Core/Src/bno055.c ****  *  to millig output as float
3014:Core/Src/bno055.c ****  *
3015:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y millig data
3016:Core/Src/bno055.c ****  *
3017:Core/Src/bno055.c ****  *
3018:Core/Src/bno055.c ****  *
3019:Core/Src/bno055.c ****  *  @return results of bus communication function
3020:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3021:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3022:Core/Src/bno055.c ****  *
3023:Core/Src/bno055.c ****  */
3024:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_mg(float *accel_y_f)
3025:Core/Src/bno055.c **** {
3026:Core/Src/bno055.c ****     /* Variable used to return value of
3027:Core/Src/bno055.c ****      * communication routine*/
3028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3029:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
3030:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
3031:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3032:Core/Src/bno055.c **** 
3033:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3034:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3035:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3036:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3037:Core/Src/bno055.c ****     {
3038:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3039:Core/Src/bno055.c ****     }
3040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3041:Core/Src/bno055.c ****     {
3042:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3043:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
3044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3045:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 149


3046:Core/Src/bno055.c ****             /* Convert the raw accel z to mg*/
3047:Core/Src/bno055.c ****             data = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
3048:Core/Src/bno055.c ****             *accel_y_f = data;
3049:Core/Src/bno055.c ****         }
3050:Core/Src/bno055.c ****         else
3051:Core/Src/bno055.c ****         {
3052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3053:Core/Src/bno055.c ****         }
3054:Core/Src/bno055.c ****     }
3055:Core/Src/bno055.c ****     else
3056:Core/Src/bno055.c ****     {
3057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3058:Core/Src/bno055.c ****     }
3059:Core/Src/bno055.c **** 
3060:Core/Src/bno055.c ****     return com_rslt;
3061:Core/Src/bno055.c **** }
3062:Core/Src/bno055.c **** 
3063:Core/Src/bno055.c **** /*!
3064:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3065:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3066:Core/Src/bno055.c ****  *
3067:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z meterpersecseq data
3068:Core/Src/bno055.c ****  *
3069:Core/Src/bno055.c ****  *
3070:Core/Src/bno055.c ****  *
3071:Core/Src/bno055.c ****  *  @return results of bus communication function
3072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3074:Core/Src/bno055.c ****  *
3075:Core/Src/bno055.c ****  *
3076:Core/Src/bno055.c ****  */
3077:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_msq(float *accel_z_f)
3078:Core/Src/bno055.c **** {
3079:Core/Src/bno055.c ****     /* Variable used to return value of
3080:Core/Src/bno055.c ****      * communication routine*/
3081:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3082:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3083:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3084:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3085:Core/Src/bno055.c **** 
3086:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3087:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3088:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3089:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3090:Core/Src/bno055.c ****     {
3091:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3092:Core/Src/bno055.c ****     }
3093:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3094:Core/Src/bno055.c ****     {
3095:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3096:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3097:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
3098:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3099:Core/Src/bno055.c ****         {
3100:Core/Src/bno055.c ****             /* Convert the raw accel z to m/s2*/
3101:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
3102:Core/Src/bno055.c ****             *accel_z_f = data_f;
ARM GAS  /tmp/cc9kYR4Z.s 			page 150


3103:Core/Src/bno055.c ****         }
3104:Core/Src/bno055.c ****         else
3105:Core/Src/bno055.c ****         {
3106:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3107:Core/Src/bno055.c ****         }
3108:Core/Src/bno055.c ****     }
3109:Core/Src/bno055.c ****     else
3110:Core/Src/bno055.c ****     {
3111:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3112:Core/Src/bno055.c ****     }
3113:Core/Src/bno055.c **** 
3114:Core/Src/bno055.c ****     return com_rslt;
3115:Core/Src/bno055.c **** }
3116:Core/Src/bno055.c **** 
3117:Core/Src/bno055.c **** /*!
3118:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3119:Core/Src/bno055.c ****  *  to millig output as float
3120:Core/Src/bno055.c ****  *
3121:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z millig data
3122:Core/Src/bno055.c ****  *
3123:Core/Src/bno055.c ****  *
3124:Core/Src/bno055.c ****  *
3125:Core/Src/bno055.c ****  *  @return results of bus communication function
3126:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3127:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3128:Core/Src/bno055.c ****  *
3129:Core/Src/bno055.c ****  *
3130:Core/Src/bno055.c ****  */
3131:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_mg(float *accel_z_f)
3132:Core/Src/bno055.c **** {
3133:Core/Src/bno055.c ****     /* Variable used to return value of
3134:Core/Src/bno055.c ****      * communication routine*/
3135:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3136:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3137:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3138:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3139:Core/Src/bno055.c **** 
3140:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3141:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2 */
3142:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3143:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3144:Core/Src/bno055.c ****     {
3145:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3146:Core/Src/bno055.c ****     }
3147:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3148:Core/Src/bno055.c ****     {
3149:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3150:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3151:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3152:Core/Src/bno055.c ****         {
3153:Core/Src/bno055.c ****             /* Convert the raw accel x to mg*/
3154:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
3155:Core/Src/bno055.c ****             *accel_z_f = data_f;
3156:Core/Src/bno055.c ****         }
3157:Core/Src/bno055.c ****         else
3158:Core/Src/bno055.c ****         {
3159:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 151


3160:Core/Src/bno055.c ****         }
3161:Core/Src/bno055.c ****     }
3162:Core/Src/bno055.c ****     else
3163:Core/Src/bno055.c ****     {
3164:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3165:Core/Src/bno055.c ****     }
3166:Core/Src/bno055.c **** 
3167:Core/Src/bno055.c ****     return com_rslt;
3168:Core/Src/bno055.c **** }
3169:Core/Src/bno055.c **** 
3170:Core/Src/bno055.c **** /*!
3171:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3172:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3173:Core/Src/bno055.c ****  *
3174:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
3175:Core/Src/bno055.c ****  *
3176:Core/Src/bno055.c ****  *  Parameter |    result
3177:Core/Src/bno055.c ****  *  --------- | -----------------
3178:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
3179:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
3180:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
3181:Core/Src/bno055.c ****  *
3182:Core/Src/bno055.c ****  *  @return results of bus communication function
3183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3185:Core/Src/bno055.c ****  *
3186:Core/Src/bno055.c ****  *
3187:Core/Src/bno055.c ****  */
3188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_msq(struct bno055_accel_float_t *accel_x
3189:Core/Src/bno055.c **** {
3190:Core/Src/bno055.c ****     /* Variable used to return value of
3191:Core/Src/bno055.c ****      * communication routine*/
3192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3193:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3194:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3195:Core/Src/bno055.c **** 
3196:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3197:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3198:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3199:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3200:Core/Src/bno055.c ****     {
3201:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3202:Core/Src/bno055.c ****     }
3203:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3204:Core/Src/bno055.c ****     {
3205:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
3206:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3207:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3208:Core/Src/bno055.c ****         {
3209:Core/Src/bno055.c ****             /* Convert the accel raw xyz to meterpersecseq*/
3210:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
3211:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
3212:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
3213:Core/Src/bno055.c ****         }
3214:Core/Src/bno055.c ****         else
3215:Core/Src/bno055.c ****         {
3216:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 152


3217:Core/Src/bno055.c ****         }
3218:Core/Src/bno055.c ****     }
3219:Core/Src/bno055.c ****     else
3220:Core/Src/bno055.c ****     {
3221:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3222:Core/Src/bno055.c ****     }
3223:Core/Src/bno055.c **** 
3224:Core/Src/bno055.c ****     return com_rslt;
3225:Core/Src/bno055.c **** }
3226:Core/Src/bno055.c **** 
3227:Core/Src/bno055.c **** /*!
3228:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3229:Core/Src/bno055.c ****  *  to millig output as float
3230:Core/Src/bno055.c ****  *
3231:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
3232:Core/Src/bno055.c ****  *
3233:Core/Src/bno055.c ****  *  Parameter |    result
3234:Core/Src/bno055.c ****  *  --------- | -----------------
3235:Core/Src/bno055.c ****  *   x        | millig data of accel
3236:Core/Src/bno055.c ****  *   y        | millig data of accel
3237:Core/Src/bno055.c ****  *   z        | millig data of accel
3238:Core/Src/bno055.c ****  *
3239:Core/Src/bno055.c ****  *
3240:Core/Src/bno055.c ****  *  @return results of bus communication function
3241:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3242:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3243:Core/Src/bno055.c ****  *
3244:Core/Src/bno055.c ****  *
3245:Core/Src/bno055.c ****  */
3246:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_mg(struct bno055_accel_float_t *accel_xy
3247:Core/Src/bno055.c **** {
3248:Core/Src/bno055.c ****     /* Variable used to return value of
3249:Core/Src/bno055.c ****      * communication routine*/
3250:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3251:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3252:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3253:Core/Src/bno055.c **** 
3254:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3255:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3256:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3257:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3258:Core/Src/bno055.c ****     {
3259:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3260:Core/Src/bno055.c ****     }
3261:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3262:Core/Src/bno055.c ****     {
3263:Core/Src/bno055.c ****         /* Read the accel raw y data*/
3264:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3265:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3266:Core/Src/bno055.c ****         {
3267:Core/Src/bno055.c ****             /*Convert the accel raw xyz to millig */
3268:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
3269:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
3270:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
3271:Core/Src/bno055.c ****         }
3272:Core/Src/bno055.c ****         else
3273:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 153


3274:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3275:Core/Src/bno055.c ****         }
3276:Core/Src/bno055.c ****     }
3277:Core/Src/bno055.c ****     else
3278:Core/Src/bno055.c ****     {
3279:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3280:Core/Src/bno055.c ****     }
3281:Core/Src/bno055.c **** 
3282:Core/Src/bno055.c ****     return com_rslt;
3283:Core/Src/bno055.c **** }
3284:Core/Src/bno055.c **** 
3285:Core/Src/bno055.c **** /*!
3286:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
3287:Core/Src/bno055.c ****  *  to microTesla output as float
3288:Core/Src/bno055.c ****  *
3289:Core/Src/bno055.c ****  *  @param mag_x_f : The mag x microTesla data
3290:Core/Src/bno055.c ****  *
3291:Core/Src/bno055.c ****  *
3292:Core/Src/bno055.c ****  *
3293:Core/Src/bno055.c ****  *  @return results of bus communication function
3294:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3295:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3296:Core/Src/bno055.c ****  *
3297:Core/Src/bno055.c ****  *
3298:Core/Src/bno055.c ****  */
3299:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_x_uT(float *mag_x_f)
3300:Core/Src/bno055.c **** {
 5056              		.loc 1 3300 1 is_stmt 1 view -0
 5057              		.cfi_startproc
 5058              		@ args = 0, pretend = 0, frame = 8
 5059              		@ frame_needed = 0, uses_anonymous_args = 0
 5060              		.loc 1 3300 1 is_stmt 0 view .LVU1420
 5061 0000 30B5     		push	{r4, r5, lr}
 5062              	.LCFI157:
 5063              		.cfi_def_cfa_offset 12
 5064              		.cfi_offset 4, -12
 5065              		.cfi_offset 5, -8
 5066              		.cfi_offset 14, -4
 5067 0002 83B0     		sub	sp, sp, #12
 5068              	.LCFI158:
 5069              		.cfi_def_cfa_offset 24
 5070 0004 0446     		mov	r4, r0
3301:Core/Src/bno055.c ****     /* Variable used to return value of
3302:Core/Src/bno055.c ****      * communication routine*/
3303:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5071              		.loc 1 3303 5 is_stmt 1 view .LVU1421
 5072              	.LVL486:
3304:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 5073              		.loc 1 3304 5 view .LVU1422
 5074              		.loc 1 3304 9 is_stmt 0 view .LVU1423
 5075 0006 0023     		movs	r3, #0
 5076 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3305:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5077              		.loc 1 3305 5 is_stmt 1 view .LVU1424
 5078              	.LVL487:
3306:Core/Src/bno055.c **** 
3307:Core/Src/bno055.c ****     /* Read raw mag x data */
ARM GAS  /tmp/cc9kYR4Z.s 			page 154


3308:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 5079              		.loc 1 3308 5 view .LVU1425
 5080              		.loc 1 3308 16 is_stmt 0 view .LVU1426
 5081 000c 0DF10600 		add	r0, sp, #6
 5082              	.LVL488:
 5083              		.loc 1 3308 16 view .LVU1427
 5084 0010 FFF7FEFF 		bl	bno055_read_mag_x
 5085              	.LVL489:
3309:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5086              		.loc 1 3309 5 is_stmt 1 view .LVU1428
 5087              		.loc 1 3309 8 is_stmt 0 view .LVU1429
 5088 0014 70B9     		cbnz	r0, .L393
 5089 0016 0546     		mov	r5, r0
3310:Core/Src/bno055.c ****     {
3311:Core/Src/bno055.c ****         /* Convert the raw mag x to microTesla*/
3312:Core/Src/bno055.c ****         data_f = (float)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 5090              		.loc 1 3312 9 is_stmt 1 view .LVU1430
 5091              		.loc 1 3312 40 is_stmt 0 view .LVU1431
 5092 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5093              	.LVL490:
 5094              		.loc 1 3312 40 view .LVU1432
 5095 001c FFF7FEFF 		bl	__aeabi_i2d
 5096              	.LVL491:
 5097 0020 0022     		movs	r2, #0
 5098 0022 064B     		ldr	r3, .L395
 5099 0024 FFF7FEFF 		bl	__aeabi_dmul
 5100              	.LVL492:
 5101              		.loc 1 3312 16 view .LVU1433
 5102 0028 FFF7FEFF 		bl	__aeabi_d2f
 5103              	.LVL493:
3313:Core/Src/bno055.c ****         *mag_x_f = data_f;
 5104              		.loc 1 3313 9 is_stmt 1 view .LVU1434
 5105              		.loc 1 3313 18 is_stmt 0 view .LVU1435
 5106 002c 2060     		str	r0, [r4]	@ float
 5107              	.LVL494:
 5108              	.L392:
3314:Core/Src/bno055.c ****     }
3315:Core/Src/bno055.c ****     else
3316:Core/Src/bno055.c ****     {
3317:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3318:Core/Src/bno055.c ****     }
3319:Core/Src/bno055.c **** 
3320:Core/Src/bno055.c ****     return com_rslt;
 5109              		.loc 1 3320 5 is_stmt 1 view .LVU1436
3321:Core/Src/bno055.c **** }
 5110              		.loc 1 3321 1 is_stmt 0 view .LVU1437
 5111 002e 2846     		mov	r0, r5
 5112 0030 03B0     		add	sp, sp, #12
 5113              	.LCFI159:
 5114              		.cfi_remember_state
 5115              		.cfi_def_cfa_offset 12
 5116              		@ sp needed
 5117 0032 30BD     		pop	{r4, r5, pc}
 5118              	.LVL495:
 5119              	.L393:
 5120              	.LCFI160:
 5121              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 155


3317:Core/Src/bno055.c ****     }
 5122              		.loc 1 3317 18 view .LVU1438
 5123 0034 4FF0FF35 		mov	r5, #-1
 5124 0038 F9E7     		b	.L392
 5125              	.L396:
 5126 003a 00BF     		.align	2
 5127              	.L395:
 5128 003c 0000B03F 		.word	1068498944
 5129              		.cfi_endproc
 5130              	.LFE49:
 5132              		.section	.text.bno055_convert_float_mag_y_uT,"ax",%progbits
 5133              		.align	1
 5134              		.global	bno055_convert_float_mag_y_uT
 5135              		.syntax unified
 5136              		.thumb
 5137              		.thumb_func
 5139              	bno055_convert_float_mag_y_uT:
 5140              	.LVL496:
 5141              	.LFB50:
3322:Core/Src/bno055.c **** 
3323:Core/Src/bno055.c **** /*!
3324:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
3325:Core/Src/bno055.c ****  *  to microTesla output as float
3326:Core/Src/bno055.c ****  *
3327:Core/Src/bno055.c ****  *  @param mag_y_f : The mag y microTesla data
3328:Core/Src/bno055.c ****  *
3329:Core/Src/bno055.c ****  *
3330:Core/Src/bno055.c ****  *
3331:Core/Src/bno055.c ****  *  @return results of bus communication function
3332:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3333:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3334:Core/Src/bno055.c ****  *
3335:Core/Src/bno055.c ****  */
3336:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_y_uT(float *mag_y_f)
3337:Core/Src/bno055.c **** {
 5142              		.loc 1 3337 1 is_stmt 1 view -0
 5143              		.cfi_startproc
 5144              		@ args = 0, pretend = 0, frame = 8
 5145              		@ frame_needed = 0, uses_anonymous_args = 0
 5146              		.loc 1 3337 1 is_stmt 0 view .LVU1440
 5147 0000 30B5     		push	{r4, r5, lr}
 5148              	.LCFI161:
 5149              		.cfi_def_cfa_offset 12
 5150              		.cfi_offset 4, -12
 5151              		.cfi_offset 5, -8
 5152              		.cfi_offset 14, -4
 5153 0002 83B0     		sub	sp, sp, #12
 5154              	.LCFI162:
 5155              		.cfi_def_cfa_offset 24
 5156 0004 0446     		mov	r4, r0
3338:Core/Src/bno055.c ****     /* Variable used to return value of
3339:Core/Src/bno055.c ****      * communication routine*/
3340:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5157              		.loc 1 3340 5 is_stmt 1 view .LVU1441
 5158              	.LVL497:
3341:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 5159              		.loc 1 3341 5 view .LVU1442
ARM GAS  /tmp/cc9kYR4Z.s 			page 156


 5160              		.loc 1 3341 9 is_stmt 0 view .LVU1443
 5161 0006 0023     		movs	r3, #0
 5162 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3342:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5163              		.loc 1 3342 5 is_stmt 1 view .LVU1444
 5164              	.LVL498:
3343:Core/Src/bno055.c **** 
3344:Core/Src/bno055.c ****     /* Read raw mag y data */
3345:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 5165              		.loc 1 3345 5 view .LVU1445
 5166              		.loc 1 3345 16 is_stmt 0 view .LVU1446
 5167 000c 0DF10600 		add	r0, sp, #6
 5168              	.LVL499:
 5169              		.loc 1 3345 16 view .LVU1447
 5170 0010 FFF7FEFF 		bl	bno055_read_mag_y
 5171              	.LVL500:
3346:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5172              		.loc 1 3346 5 is_stmt 1 view .LVU1448
 5173              		.loc 1 3346 8 is_stmt 0 view .LVU1449
 5174 0014 70B9     		cbnz	r0, .L399
 5175 0016 0546     		mov	r5, r0
3347:Core/Src/bno055.c ****     {
3348:Core/Src/bno055.c ****         /* Convert the raw mag y to microTesla*/
3349:Core/Src/bno055.c ****         data_f = (float)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 5176              		.loc 1 3349 9 is_stmt 1 view .LVU1450
 5177              		.loc 1 3349 40 is_stmt 0 view .LVU1451
 5178 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5179              	.LVL501:
 5180              		.loc 1 3349 40 view .LVU1452
 5181 001c FFF7FEFF 		bl	__aeabi_i2d
 5182              	.LVL502:
 5183 0020 0022     		movs	r2, #0
 5184 0022 064B     		ldr	r3, .L401
 5185 0024 FFF7FEFF 		bl	__aeabi_dmul
 5186              	.LVL503:
 5187              		.loc 1 3349 16 view .LVU1453
 5188 0028 FFF7FEFF 		bl	__aeabi_d2f
 5189              	.LVL504:
3350:Core/Src/bno055.c ****         *mag_y_f = data_f;
 5190              		.loc 1 3350 9 is_stmt 1 view .LVU1454
 5191              		.loc 1 3350 18 is_stmt 0 view .LVU1455
 5192 002c 2060     		str	r0, [r4]	@ float
 5193              	.LVL505:
 5194              	.L398:
3351:Core/Src/bno055.c ****     }
3352:Core/Src/bno055.c ****     else
3353:Core/Src/bno055.c ****     {
3354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3355:Core/Src/bno055.c ****     }
3356:Core/Src/bno055.c **** 
3357:Core/Src/bno055.c ****     return com_rslt;
 5195              		.loc 1 3357 5 is_stmt 1 view .LVU1456
3358:Core/Src/bno055.c **** }
 5196              		.loc 1 3358 1 is_stmt 0 view .LVU1457
 5197 002e 2846     		mov	r0, r5
 5198 0030 03B0     		add	sp, sp, #12
 5199              	.LCFI163:
ARM GAS  /tmp/cc9kYR4Z.s 			page 157


 5200              		.cfi_remember_state
 5201              		.cfi_def_cfa_offset 12
 5202              		@ sp needed
 5203 0032 30BD     		pop	{r4, r5, pc}
 5204              	.LVL506:
 5205              	.L399:
 5206              	.LCFI164:
 5207              		.cfi_restore_state
3354:Core/Src/bno055.c ****     }
 5208              		.loc 1 3354 18 view .LVU1458
 5209 0034 4FF0FF35 		mov	r5, #-1
 5210 0038 F9E7     		b	.L398
 5211              	.L402:
 5212 003a 00BF     		.align	2
 5213              	.L401:
 5214 003c 0000B03F 		.word	1068498944
 5215              		.cfi_endproc
 5216              	.LFE50:
 5218              		.section	.text.bno055_convert_float_mag_z_uT,"ax",%progbits
 5219              		.align	1
 5220              		.global	bno055_convert_float_mag_z_uT
 5221              		.syntax unified
 5222              		.thumb
 5223              		.thumb_func
 5225              	bno055_convert_float_mag_z_uT:
 5226              	.LVL507:
 5227              	.LFB51:
3359:Core/Src/bno055.c **** 
3360:Core/Src/bno055.c **** /*!
3361:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
3362:Core/Src/bno055.c ****  *  to microTesla output as float
3363:Core/Src/bno055.c ****  *
3364:Core/Src/bno055.c ****  *  @param mag_z_f : The mag z microTesla data
3365:Core/Src/bno055.c ****  *
3366:Core/Src/bno055.c ****  *
3367:Core/Src/bno055.c ****  *
3368:Core/Src/bno055.c ****  *  @return results of bus communication function
3369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3371:Core/Src/bno055.c ****  *
3372:Core/Src/bno055.c ****  */
3373:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_z_uT(float *mag_z_f)
3374:Core/Src/bno055.c **** {
 5228              		.loc 1 3374 1 is_stmt 1 view -0
 5229              		.cfi_startproc
 5230              		@ args = 0, pretend = 0, frame = 8
 5231              		@ frame_needed = 0, uses_anonymous_args = 0
 5232              		.loc 1 3374 1 is_stmt 0 view .LVU1460
 5233 0000 30B5     		push	{r4, r5, lr}
 5234              	.LCFI165:
 5235              		.cfi_def_cfa_offset 12
 5236              		.cfi_offset 4, -12
 5237              		.cfi_offset 5, -8
 5238              		.cfi_offset 14, -4
 5239 0002 83B0     		sub	sp, sp, #12
 5240              	.LCFI166:
 5241              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 158


 5242 0004 0446     		mov	r4, r0
3375:Core/Src/bno055.c ****     /* Variable used to return value of
3376:Core/Src/bno055.c ****      * communication routine*/
3377:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5243              		.loc 1 3377 5 is_stmt 1 view .LVU1461
 5244              	.LVL508:
3378:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 5245              		.loc 1 3378 5 view .LVU1462
 5246              		.loc 1 3378 9 is_stmt 0 view .LVU1463
 5247 0006 0023     		movs	r3, #0
 5248 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3379:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5249              		.loc 1 3379 5 is_stmt 1 view .LVU1464
 5250              	.LVL509:
3380:Core/Src/bno055.c **** 
3381:Core/Src/bno055.c ****     /* Read raw mag z data */
3382:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 5251              		.loc 1 3382 5 view .LVU1465
 5252              		.loc 1 3382 16 is_stmt 0 view .LVU1466
 5253 000c 0DF10600 		add	r0, sp, #6
 5254              	.LVL510:
 5255              		.loc 1 3382 16 view .LVU1467
 5256 0010 FFF7FEFF 		bl	bno055_read_mag_z
 5257              	.LVL511:
3383:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5258              		.loc 1 3383 5 is_stmt 1 view .LVU1468
 5259              		.loc 1 3383 8 is_stmt 0 view .LVU1469
 5260 0014 70B9     		cbnz	r0, .L405
 5261 0016 0546     		mov	r5, r0
3384:Core/Src/bno055.c ****     {
3385:Core/Src/bno055.c ****         /* Convert the raw mag z to microTesla*/
3386:Core/Src/bno055.c ****         data_f = (float)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 5262              		.loc 1 3386 9 is_stmt 1 view .LVU1470
 5263              		.loc 1 3386 40 is_stmt 0 view .LVU1471
 5264 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5265              	.LVL512:
 5266              		.loc 1 3386 40 view .LVU1472
 5267 001c FFF7FEFF 		bl	__aeabi_i2d
 5268              	.LVL513:
 5269 0020 0022     		movs	r2, #0
 5270 0022 064B     		ldr	r3, .L407
 5271 0024 FFF7FEFF 		bl	__aeabi_dmul
 5272              	.LVL514:
 5273              		.loc 1 3386 16 view .LVU1473
 5274 0028 FFF7FEFF 		bl	__aeabi_d2f
 5275              	.LVL515:
3387:Core/Src/bno055.c ****         *mag_z_f = data_f;
 5276              		.loc 1 3387 9 is_stmt 1 view .LVU1474
 5277              		.loc 1 3387 18 is_stmt 0 view .LVU1475
 5278 002c 2060     		str	r0, [r4]	@ float
 5279              	.LVL516:
 5280              	.L404:
3388:Core/Src/bno055.c ****     }
3389:Core/Src/bno055.c ****     else
3390:Core/Src/bno055.c ****     {
3391:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3392:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 159


3393:Core/Src/bno055.c **** 
3394:Core/Src/bno055.c ****     return com_rslt;
 5281              		.loc 1 3394 5 is_stmt 1 view .LVU1476
3395:Core/Src/bno055.c **** }
 5282              		.loc 1 3395 1 is_stmt 0 view .LVU1477
 5283 002e 2846     		mov	r0, r5
 5284 0030 03B0     		add	sp, sp, #12
 5285              	.LCFI167:
 5286              		.cfi_remember_state
 5287              		.cfi_def_cfa_offset 12
 5288              		@ sp needed
 5289 0032 30BD     		pop	{r4, r5, pc}
 5290              	.LVL517:
 5291              	.L405:
 5292              	.LCFI168:
 5293              		.cfi_restore_state
3391:Core/Src/bno055.c ****     }
 5294              		.loc 1 3391 18 view .LVU1478
 5295 0034 4FF0FF35 		mov	r5, #-1
 5296 0038 F9E7     		b	.L404
 5297              	.L408:
 5298 003a 00BF     		.align	2
 5299              	.L407:
 5300 003c 0000B03F 		.word	1068498944
 5301              		.cfi_endproc
 5302              	.LFE51:
 5304              		.section	.text.bno055_convert_float_mag_xyz_uT,"ax",%progbits
 5305              		.align	1
 5306              		.global	bno055_convert_float_mag_xyz_uT
 5307              		.syntax unified
 5308              		.thumb
 5309              		.thumb_func
 5311              	bno055_convert_float_mag_xyz_uT:
 5312              	.LVL518:
 5313              	.LFB52:
3396:Core/Src/bno055.c **** 
3397:Core/Src/bno055.c **** /*!
3398:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
3399:Core/Src/bno055.c ****  *  to microTesla output as float
3400:Core/Src/bno055.c ****  *
3401:Core/Src/bno055.c ****  *  @param mag_xyz_data : The microTesla data of mag xyz
3402:Core/Src/bno055.c ****  *
3403:Core/Src/bno055.c ****  *  Parameter |    result
3404:Core/Src/bno055.c ****  *  --------- | -----------------
3405:Core/Src/bno055.c ****  *    x       | microTesla data of mag
3406:Core/Src/bno055.c ****  *    y       | microTesla data of mag
3407:Core/Src/bno055.c ****  *    z       | microTesla data of mag
3408:Core/Src/bno055.c ****  *
3409:Core/Src/bno055.c ****  *
3410:Core/Src/bno055.c ****  *  @return results of bus communication function
3411:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3412:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3413:Core/Src/bno055.c ****  *
3414:Core/Src/bno055.c ****  */
3415:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_xyz_uT(struct bno055_mag_float_t *mag_xyz_data
3416:Core/Src/bno055.c **** {
 5314              		.loc 1 3416 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9kYR4Z.s 			page 160


 5315              		.cfi_startproc
 5316              		@ args = 0, pretend = 0, frame = 8
 5317              		@ frame_needed = 0, uses_anonymous_args = 0
 5318              		.loc 1 3416 1 is_stmt 0 view .LVU1480
 5319 0000 30B5     		push	{r4, r5, lr}
 5320              	.LCFI169:
 5321              		.cfi_def_cfa_offset 12
 5322              		.cfi_offset 4, -12
 5323              		.cfi_offset 5, -8
 5324              		.cfi_offset 14, -4
 5325 0002 83B0     		sub	sp, sp, #12
 5326              	.LCFI170:
 5327              		.cfi_def_cfa_offset 24
 5328 0004 0446     		mov	r4, r0
3417:Core/Src/bno055.c ****     /* Variable used to return value of
3418:Core/Src/bno055.c ****      * communication routine*/
3419:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5329              		.loc 1 3419 5 is_stmt 1 view .LVU1481
 5330              	.LVL519:
3420:Core/Src/bno055.c ****     struct bno055_mag_t mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 5331              		.loc 1 3420 5 view .LVU1482
 5332              		.loc 1 3420 25 is_stmt 0 view .LVU1483
 5333 0006 0023     		movs	r3, #0
 5334 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5335 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5336 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
3421:Core/Src/bno055.c **** 
3422:Core/Src/bno055.c ****     /* Read raw mag x data */
3423:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&mag_xyz);
 5337              		.loc 1 3423 5 is_stmt 1 view .LVU1484
 5338              		.loc 1 3423 16 is_stmt 0 view .LVU1485
 5339 0014 6846     		mov	r0, sp
 5340              	.LVL520:
 5341              		.loc 1 3423 16 view .LVU1486
 5342 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 5343              	.LVL521:
3424:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5344              		.loc 1 3424 5 is_stmt 1 view .LVU1487
 5345              		.loc 1 3424 8 is_stmt 0 view .LVU1488
 5346 001a 20BB     		cbnz	r0, .L411
 5347 001c 0546     		mov	r5, r0
3425:Core/Src/bno055.c ****     {
3426:Core/Src/bno055.c ****         /* Convert mag raw xyz to microTesla*/
3427:Core/Src/bno055.c ****         mag_xyz_data->x = (float)(mag_xyz.x / BNO055_MAG_DIV_UT);
 5348              		.loc 1 3427 9 is_stmt 1 view .LVU1489
 5349              		.loc 1 3427 45 is_stmt 0 view .LVU1490
 5350 001e BDF90000 		ldrsh	r0, [sp]
 5351              	.LVL522:
 5352              		.loc 1 3427 45 view .LVU1491
 5353 0022 FFF7FEFF 		bl	__aeabi_i2d
 5354              	.LVL523:
 5355 0026 0022     		movs	r2, #0
 5356 0028 104B     		ldr	r3, .L413
 5357 002a FFF7FEFF 		bl	__aeabi_dmul
 5358              	.LVL524:
 5359              		.loc 1 3427 27 view .LVU1492
 5360 002e FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/cc9kYR4Z.s 			page 161


 5361              	.LVL525:
 5362              		.loc 1 3427 25 view .LVU1493
 5363 0032 2060     		str	r0, [r4]	@ float
3428:Core/Src/bno055.c ****         mag_xyz_data->y = (float)(mag_xyz.y / BNO055_MAG_DIV_UT);
 5364              		.loc 1 3428 9 is_stmt 1 view .LVU1494
 5365              		.loc 1 3428 45 is_stmt 0 view .LVU1495
 5366 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5367 0038 FFF7FEFF 		bl	__aeabi_i2d
 5368              	.LVL526:
 5369 003c 0022     		movs	r2, #0
 5370 003e 0B4B     		ldr	r3, .L413
 5371 0040 FFF7FEFF 		bl	__aeabi_dmul
 5372              	.LVL527:
 5373              		.loc 1 3428 27 view .LVU1496
 5374 0044 FFF7FEFF 		bl	__aeabi_d2f
 5375              	.LVL528:
 5376              		.loc 1 3428 25 view .LVU1497
 5377 0048 6060     		str	r0, [r4, #4]	@ float
3429:Core/Src/bno055.c ****         mag_xyz_data->z = (float)(mag_xyz.z / BNO055_MAG_DIV_UT);
 5378              		.loc 1 3429 9 is_stmt 1 view .LVU1498
 5379              		.loc 1 3429 45 is_stmt 0 view .LVU1499
 5380 004a BDF90400 		ldrsh	r0, [sp, #4]
 5381 004e FFF7FEFF 		bl	__aeabi_i2d
 5382              	.LVL529:
 5383 0052 0022     		movs	r2, #0
 5384 0054 054B     		ldr	r3, .L413
 5385 0056 FFF7FEFF 		bl	__aeabi_dmul
 5386              	.LVL530:
 5387              		.loc 1 3429 27 view .LVU1500
 5388 005a FFF7FEFF 		bl	__aeabi_d2f
 5389              	.LVL531:
 5390              		.loc 1 3429 25 view .LVU1501
 5391 005e A060     		str	r0, [r4, #8]	@ float
 5392              	.L410:
 5393              	.LVL532:
3430:Core/Src/bno055.c ****     }
3431:Core/Src/bno055.c ****     else
3432:Core/Src/bno055.c ****     {
3433:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3434:Core/Src/bno055.c ****     }
3435:Core/Src/bno055.c **** 
3436:Core/Src/bno055.c ****     return com_rslt;
 5394              		.loc 1 3436 5 is_stmt 1 view .LVU1502
3437:Core/Src/bno055.c **** }
 5395              		.loc 1 3437 1 is_stmt 0 view .LVU1503
 5396 0060 2846     		mov	r0, r5
 5397 0062 03B0     		add	sp, sp, #12
 5398              	.LCFI171:
 5399              		.cfi_remember_state
 5400              		.cfi_def_cfa_offset 12
 5401              		@ sp needed
 5402 0064 30BD     		pop	{r4, r5, pc}
 5403              	.LVL533:
 5404              	.L411:
 5405              	.LCFI172:
 5406              		.cfi_restore_state
3433:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 162


 5407              		.loc 1 3433 18 view .LVU1504
 5408 0066 4FF0FF35 		mov	r5, #-1
 5409 006a F9E7     		b	.L410
 5410              	.L414:
 5411              		.align	2
 5412              	.L413:
 5413 006c 0000B03F 		.word	1068498944
 5414              		.cfi_endproc
 5415              	.LFE52:
 5417              		.global	__aeabi_ddiv
 5418              		.section	.text.bno055_convert_float_linear_accel_x_msq,"ax",%progbits
 5419              		.align	1
 5420              		.global	bno055_convert_float_linear_accel_x_msq
 5421              		.syntax unified
 5422              		.thumb
 5423              		.thumb_func
 5425              	bno055_convert_float_linear_accel_x_msq:
 5426              	.LVL534:
 5427              	.LFB69:
3438:Core/Src/bno055.c **** 
3439:Core/Src/bno055.c **** /*!
3440:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3441:Core/Src/bno055.c ****  *  to dps output as float
3442:Core/Src/bno055.c ****  *
3443:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3444:Core/Src/bno055.c ****  *
3445:Core/Src/bno055.c ****  *
3446:Core/Src/bno055.c ****  *
3447:Core/Src/bno055.c ****  *  @return results of bus communication function
3448:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3449:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3450:Core/Src/bno055.c ****  */
3451:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_dps(float *gyro_x_f)
3452:Core/Src/bno055.c **** {
3453:Core/Src/bno055.c ****     /* Variable used to return value of
3454:Core/Src/bno055.c ****      * communication routine*/
3455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3456:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3457:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3458:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3459:Core/Src/bno055.c **** 
3460:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3461:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3462:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3463:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3464:Core/Src/bno055.c ****     {
3465:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3466:Core/Src/bno055.c ****     }
3467:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3468:Core/Src/bno055.c ****     {
3469:Core/Src/bno055.c ****         /* Read gyro raw x data */
3470:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3471:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3472:Core/Src/bno055.c ****         {
3473:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3474:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
3475:Core/Src/bno055.c ****             *gyro_x_f = data_f;
ARM GAS  /tmp/cc9kYR4Z.s 			page 163


3476:Core/Src/bno055.c ****         }
3477:Core/Src/bno055.c ****         else
3478:Core/Src/bno055.c ****         {
3479:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3480:Core/Src/bno055.c ****         }
3481:Core/Src/bno055.c ****     }
3482:Core/Src/bno055.c ****     else
3483:Core/Src/bno055.c ****     {
3484:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3485:Core/Src/bno055.c ****     }
3486:Core/Src/bno055.c **** 
3487:Core/Src/bno055.c ****     return com_rslt;
3488:Core/Src/bno055.c **** }
3489:Core/Src/bno055.c **** 
3490:Core/Src/bno055.c **** /*!
3491:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3492:Core/Src/bno055.c ****  *  to rps output as float
3493:Core/Src/bno055.c ****  *
3494:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3495:Core/Src/bno055.c ****  *
3496:Core/Src/bno055.c ****  *
3497:Core/Src/bno055.c ****  *
3498:Core/Src/bno055.c ****  *  @return results of bus communication function
3499:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3500:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3501:Core/Src/bno055.c ****  *
3502:Core/Src/bno055.c ****  */
3503:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_rps(float *gyro_x_f)
3504:Core/Src/bno055.c **** {
3505:Core/Src/bno055.c ****     /* Variable used to return value of
3506:Core/Src/bno055.c ****      * communication routine*/
3507:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3508:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3509:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3510:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3511:Core/Src/bno055.c **** 
3512:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3513:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3514:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3515:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3516:Core/Src/bno055.c ****     {
3517:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3518:Core/Src/bno055.c ****     }
3519:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3520:Core/Src/bno055.c ****     {
3521:Core/Src/bno055.c ****         /* Read gyro raw x data */
3522:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3523:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3524:Core/Src/bno055.c ****         {
3525:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3526:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
3527:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3528:Core/Src/bno055.c ****         }
3529:Core/Src/bno055.c ****         else
3530:Core/Src/bno055.c ****         {
3531:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3532:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 164


3533:Core/Src/bno055.c ****     }
3534:Core/Src/bno055.c ****     else
3535:Core/Src/bno055.c ****     {
3536:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3537:Core/Src/bno055.c ****     }
3538:Core/Src/bno055.c **** 
3539:Core/Src/bno055.c ****     return com_rslt;
3540:Core/Src/bno055.c **** }
3541:Core/Src/bno055.c **** 
3542:Core/Src/bno055.c **** /*!
3543:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3544:Core/Src/bno055.c ****  *  to dps output as float
3545:Core/Src/bno055.c ****  *
3546:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3547:Core/Src/bno055.c ****  *
3548:Core/Src/bno055.c ****  *
3549:Core/Src/bno055.c ****  *
3550:Core/Src/bno055.c ****  *  @return results of bus communication function
3551:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3552:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3553:Core/Src/bno055.c ****  *
3554:Core/Src/bno055.c ****  */
3555:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_dps(float *gyro_y_f)
3556:Core/Src/bno055.c **** {
3557:Core/Src/bno055.c ****     /* Variable used to return value of
3558:Core/Src/bno055.c ****      * communication routine*/
3559:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3560:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3561:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3562:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3563:Core/Src/bno055.c **** 
3564:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3565:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3566:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3567:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3568:Core/Src/bno055.c ****     {
3569:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3570:Core/Src/bno055.c ****     }
3571:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3572:Core/Src/bno055.c ****     {
3573:Core/Src/bno055.c ****         /* Read gyro raw y data */
3574:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3575:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3576:Core/Src/bno055.c ****         {
3577:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3578:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
3579:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3580:Core/Src/bno055.c ****         }
3581:Core/Src/bno055.c ****         else
3582:Core/Src/bno055.c ****         {
3583:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3584:Core/Src/bno055.c ****         }
3585:Core/Src/bno055.c ****     }
3586:Core/Src/bno055.c ****     else
3587:Core/Src/bno055.c ****     {
3588:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3589:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 165


3590:Core/Src/bno055.c **** 
3591:Core/Src/bno055.c ****     return com_rslt;
3592:Core/Src/bno055.c **** }
3593:Core/Src/bno055.c **** 
3594:Core/Src/bno055.c **** /*!
3595:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3596:Core/Src/bno055.c ****  *  to rps output as float
3597:Core/Src/bno055.c ****  *
3598:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3599:Core/Src/bno055.c ****  *
3600:Core/Src/bno055.c ****  *
3601:Core/Src/bno055.c ****  *
3602:Core/Src/bno055.c ****  *  @return results of bus communication function
3603:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3604:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3605:Core/Src/bno055.c ****  *
3606:Core/Src/bno055.c ****  *
3607:Core/Src/bno055.c ****  */
3608:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_rps(float *gyro_y_f)
3609:Core/Src/bno055.c **** {
3610:Core/Src/bno055.c ****     /* Variable used to return value of
3611:Core/Src/bno055.c ****      * communication routine*/
3612:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3613:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3614:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3615:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3616:Core/Src/bno055.c **** 
3617:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3618:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3619:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3620:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3621:Core/Src/bno055.c ****     {
3622:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3623:Core/Src/bno055.c ****     }
3624:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3625:Core/Src/bno055.c ****     {
3626:Core/Src/bno055.c ****         /* Read gyro raw y data */
3627:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3628:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3629:Core/Src/bno055.c ****         {
3630:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3631:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
3632:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3633:Core/Src/bno055.c ****         }
3634:Core/Src/bno055.c ****         else
3635:Core/Src/bno055.c ****         {
3636:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3637:Core/Src/bno055.c ****         }
3638:Core/Src/bno055.c ****     }
3639:Core/Src/bno055.c ****     else
3640:Core/Src/bno055.c ****     {
3641:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3642:Core/Src/bno055.c ****     }
3643:Core/Src/bno055.c **** 
3644:Core/Src/bno055.c ****     return com_rslt;
3645:Core/Src/bno055.c **** }
3646:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 166


3647:Core/Src/bno055.c **** /*!
3648:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3649:Core/Src/bno055.c ****  *  to dps output as float
3650:Core/Src/bno055.c ****  *
3651:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z dps float data
3652:Core/Src/bno055.c ****  *
3653:Core/Src/bno055.c ****  *
3654:Core/Src/bno055.c ****  *
3655:Core/Src/bno055.c ****  *  @return results of bus communication function
3656:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3657:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3658:Core/Src/bno055.c ****  *
3659:Core/Src/bno055.c ****  */
3660:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_dps(float *gyro_z_f)
3661:Core/Src/bno055.c **** {
3662:Core/Src/bno055.c ****     /* Variable used to return value of
3663:Core/Src/bno055.c ****      * communication routine*/
3664:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3665:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3666:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3667:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3668:Core/Src/bno055.c **** 
3669:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3670:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3671:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3672:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3673:Core/Src/bno055.c ****     {
3674:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3675:Core/Src/bno055.c ****     }
3676:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3677:Core/Src/bno055.c ****     {
3678:Core/Src/bno055.c ****         /* Read gyro raw z data */
3679:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3680:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3681:Core/Src/bno055.c ****         {
3682:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3683:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
3684:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3685:Core/Src/bno055.c ****         }
3686:Core/Src/bno055.c ****         else
3687:Core/Src/bno055.c ****         {
3688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3689:Core/Src/bno055.c ****         }
3690:Core/Src/bno055.c ****     }
3691:Core/Src/bno055.c ****     else
3692:Core/Src/bno055.c ****     {
3693:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3694:Core/Src/bno055.c ****     }
3695:Core/Src/bno055.c **** 
3696:Core/Src/bno055.c ****     return com_rslt;
3697:Core/Src/bno055.c **** }
3698:Core/Src/bno055.c **** 
3699:Core/Src/bno055.c **** /*!
3700:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3701:Core/Src/bno055.c ****  *  to rps output as float
3702:Core/Src/bno055.c ****  *
3703:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z rps float data
ARM GAS  /tmp/cc9kYR4Z.s 			page 167


3704:Core/Src/bno055.c ****  *
3705:Core/Src/bno055.c ****  *
3706:Core/Src/bno055.c ****  *
3707:Core/Src/bno055.c ****  *  @return results of bus communication function
3708:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3709:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3710:Core/Src/bno055.c ****  *
3711:Core/Src/bno055.c ****  */
3712:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_rps(float *gyro_z_f)
3713:Core/Src/bno055.c **** {
3714:Core/Src/bno055.c ****     /* Variable used to return value of
3715:Core/Src/bno055.c ****      * communication routine*/
3716:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3717:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3718:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3719:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3720:Core/Src/bno055.c **** 
3721:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3722:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3723:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3724:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3725:Core/Src/bno055.c ****     {
3726:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3727:Core/Src/bno055.c ****     }
3728:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3729:Core/Src/bno055.c ****     {
3730:Core/Src/bno055.c ****         /* Read gyro raw x data */
3731:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3732:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3733:Core/Src/bno055.c ****         {
3734:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3735:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
3736:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3737:Core/Src/bno055.c ****         }
3738:Core/Src/bno055.c ****         else
3739:Core/Src/bno055.c ****         {
3740:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3741:Core/Src/bno055.c ****         }
3742:Core/Src/bno055.c ****     }
3743:Core/Src/bno055.c ****     else
3744:Core/Src/bno055.c ****     {
3745:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3746:Core/Src/bno055.c ****     }
3747:Core/Src/bno055.c **** 
3748:Core/Src/bno055.c ****     return com_rslt;
3749:Core/Src/bno055.c **** }
3750:Core/Src/bno055.c **** 
3751:Core/Src/bno055.c **** /*!
3752:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3753:Core/Src/bno055.c ****  *  to dps output as float
3754:Core/Src/bno055.c ****  *
3755:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The dps data of gyro xyz
3756:Core/Src/bno055.c ****  *
3757:Core/Src/bno055.c ****  *  Parameter |    result
3758:Core/Src/bno055.c ****  *  --------- | -----------------
3759:Core/Src/bno055.c ****  *    x       | dps data of gyro
3760:Core/Src/bno055.c ****  *    y       | dps data of gyro
ARM GAS  /tmp/cc9kYR4Z.s 			page 168


3761:Core/Src/bno055.c ****  *    z       | dps data of gyro
3762:Core/Src/bno055.c ****  *
3763:Core/Src/bno055.c ****  *
3764:Core/Src/bno055.c ****  *  @return results of bus communication function
3765:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3766:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3767:Core/Src/bno055.c ****  *
3768:Core/Src/bno055.c ****  *
3769:Core/Src/bno055.c ****  */
3770:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_dps(struct bno055_gyro_float_t *gyro_xyz_
3771:Core/Src/bno055.c **** {
3772:Core/Src/bno055.c ****     /* Variable used to return value of
3773:Core/Src/bno055.c ****      * communication routine*/
3774:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3775:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3776:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3777:Core/Src/bno055.c **** 
3778:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3779:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3780:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3781:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3782:Core/Src/bno055.c ****     {
3783:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3784:Core/Src/bno055.c ****     }
3785:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3786:Core/Src/bno055.c ****     {
3787:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3788:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3789:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3790:Core/Src/bno055.c ****         {
3791:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
3792:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_DPS);
3793:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
3794:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
3795:Core/Src/bno055.c ****         }
3796:Core/Src/bno055.c ****         else
3797:Core/Src/bno055.c ****         {
3798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3799:Core/Src/bno055.c ****         }
3800:Core/Src/bno055.c ****     }
3801:Core/Src/bno055.c ****     else
3802:Core/Src/bno055.c ****     {
3803:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3804:Core/Src/bno055.c ****     }
3805:Core/Src/bno055.c **** 
3806:Core/Src/bno055.c ****     return com_rslt;
3807:Core/Src/bno055.c **** }
3808:Core/Src/bno055.c **** 
3809:Core/Src/bno055.c **** /*!
3810:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3811:Core/Src/bno055.c ****  *  to rps output as float
3812:Core/Src/bno055.c ****  *
3813:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The rps data of gyro xyz
3814:Core/Src/bno055.c ****  *
3815:Core/Src/bno055.c ****  *  Parameter |    result
3816:Core/Src/bno055.c ****  *  --------- | -----------------
3817:Core/Src/bno055.c ****  *    x       | rps data of gyro
ARM GAS  /tmp/cc9kYR4Z.s 			page 169


3818:Core/Src/bno055.c ****  *    y       | rps data of gyro
3819:Core/Src/bno055.c ****  *    z       | rps data of gyro
3820:Core/Src/bno055.c ****  *
3821:Core/Src/bno055.c ****  *
3822:Core/Src/bno055.c ****  *  @return results of bus communication function
3823:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3824:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3825:Core/Src/bno055.c ****  *
3826:Core/Src/bno055.c ****  *
3827:Core/Src/bno055.c ****  */
3828:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_rps(struct bno055_gyro_float_t *gyro_xyz_
3829:Core/Src/bno055.c **** {
3830:Core/Src/bno055.c ****     /* Variable used to return value of
3831:Core/Src/bno055.c ****      * communication routine*/
3832:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3833:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3834:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3835:Core/Src/bno055.c **** 
3836:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3837:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3838:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3839:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3840:Core/Src/bno055.c ****     {
3841:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3842:Core/Src/bno055.c ****     }
3843:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3844:Core/Src/bno055.c ****     {
3845:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3846:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3847:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3848:Core/Src/bno055.c ****         {
3849:Core/Src/bno055.c ****             /* Convert gyro raw xyz to rps*/
3850:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_RPS);
3851:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
3852:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
3853:Core/Src/bno055.c ****         }
3854:Core/Src/bno055.c ****         else
3855:Core/Src/bno055.c ****         {
3856:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3857:Core/Src/bno055.c ****         }
3858:Core/Src/bno055.c ****     }
3859:Core/Src/bno055.c ****     else
3860:Core/Src/bno055.c ****     {
3861:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3862:Core/Src/bno055.c ****     }
3863:Core/Src/bno055.c **** 
3864:Core/Src/bno055.c ****     return com_rslt;
3865:Core/Src/bno055.c **** }
3866:Core/Src/bno055.c **** 
3867:Core/Src/bno055.c **** /*!
3868:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3869:Core/Src/bno055.c ****  *  to degree output as float
3870:Core/Src/bno055.c ****  *
3871:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h degree
3872:Core/Src/bno055.c ****  *
3873:Core/Src/bno055.c ****  *  @return results of bus communication function
3874:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/cc9kYR4Z.s 			page 170


3875:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3876:Core/Src/bno055.c ****  *
3877:Core/Src/bno055.c ****  *
3878:Core/Src/bno055.c ****  */
3879:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_deg(float *euler_h_f)
3880:Core/Src/bno055.c **** {
3881:Core/Src/bno055.c ****     /* Variable used to return value of
3882:Core/Src/bno055.c ****      * communication routine*/
3883:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3884:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
3885:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3886:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3887:Core/Src/bno055.c **** 
3888:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3889:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3890:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3891:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3892:Core/Src/bno055.c ****     {
3893:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3894:Core/Src/bno055.c ****     }
3895:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3896:Core/Src/bno055.c ****     {
3897:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3898:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3899:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3900:Core/Src/bno055.c ****         {
3901:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3902:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
3903:Core/Src/bno055.c ****             *euler_h_f = data_f;
3904:Core/Src/bno055.c ****         }
3905:Core/Src/bno055.c ****         else
3906:Core/Src/bno055.c ****         {
3907:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3908:Core/Src/bno055.c ****         }
3909:Core/Src/bno055.c ****     }
3910:Core/Src/bno055.c ****     else
3911:Core/Src/bno055.c ****     {
3912:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3913:Core/Src/bno055.c ****     }
3914:Core/Src/bno055.c **** 
3915:Core/Src/bno055.c ****     return com_rslt;
3916:Core/Src/bno055.c **** }
3917:Core/Src/bno055.c **** 
3918:Core/Src/bno055.c **** /*!
3919:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3920:Core/Src/bno055.c ****  *  to radians output as float
3921:Core/Src/bno055.c ****  *
3922:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h radians
3923:Core/Src/bno055.c ****  *
3924:Core/Src/bno055.c ****  *  @return results of bus communication function
3925:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3926:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3927:Core/Src/bno055.c ****  *
3928:Core/Src/bno055.c ****  *
3929:Core/Src/bno055.c ****  */
3930:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_rad(float *euler_h_f)
3931:Core/Src/bno055.c **** {
ARM GAS  /tmp/cc9kYR4Z.s 			page 171


3932:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3933:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
3934:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3935:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3936:Core/Src/bno055.c **** 
3937:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3938:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
3939:Core/Src/bno055.c ****     {
3940:Core/Src/bno055.c ****         /* Read the current Euler unit and set the
3941:Core/Src/bno055.c ****          * unit as radians if the unit is in degree */
3942:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
3943:Core/Src/bno055.c ****     }
3944:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3945:Core/Src/bno055.c ****     {
3946:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3947:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3948:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3949:Core/Src/bno055.c ****         {
3950:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3951:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
3952:Core/Src/bno055.c ****             *euler_h_f = data_f;
3953:Core/Src/bno055.c ****         }
3954:Core/Src/bno055.c ****         else
3955:Core/Src/bno055.c ****         {
3956:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3957:Core/Src/bno055.c ****         }
3958:Core/Src/bno055.c ****     }
3959:Core/Src/bno055.c ****     else
3960:Core/Src/bno055.c ****     {
3961:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3962:Core/Src/bno055.c ****     }
3963:Core/Src/bno055.c **** 
3964:Core/Src/bno055.c ****     return com_rslt;
3965:Core/Src/bno055.c **** }
3966:Core/Src/bno055.c **** 
3967:Core/Src/bno055.c **** /*!
3968:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
3969:Core/Src/bno055.c ****  *  to degree output as float
3970:Core/Src/bno055.c ****  *
3971:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r degree
3972:Core/Src/bno055.c ****  *
3973:Core/Src/bno055.c ****  *  @return results of bus communication function
3974:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3975:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3976:Core/Src/bno055.c ****  *
3977:Core/Src/bno055.c ****  */
3978:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_deg(float *euler_r_f)
3979:Core/Src/bno055.c **** {
3980:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3981:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
3982:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3983:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3984:Core/Src/bno055.c **** 
3985:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3986:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3987:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3988:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
ARM GAS  /tmp/cc9kYR4Z.s 			page 172


3989:Core/Src/bno055.c ****     {
3990:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3991:Core/Src/bno055.c ****     }
3992:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3993:Core/Src/bno055.c ****     {
3994:Core/Src/bno055.c ****         /* Read Euler raw r data*/
3995:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r);
3996:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3997:Core/Src/bno055.c ****         {
3998:Core/Src/bno055.c ****             /* Convert raw Euler r data to degree*/
3999:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r / BNO055_EULER_DIV_DEG);
4000:Core/Src/bno055.c ****             *euler_r_f = data_f;
4001:Core/Src/bno055.c ****         }
4002:Core/Src/bno055.c ****         else
4003:Core/Src/bno055.c ****         {
4004:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4005:Core/Src/bno055.c ****         }
4006:Core/Src/bno055.c ****     }
4007:Core/Src/bno055.c ****     else
4008:Core/Src/bno055.c ****     {
4009:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4010:Core/Src/bno055.c ****     }
4011:Core/Src/bno055.c **** 
4012:Core/Src/bno055.c ****     return com_rslt;
4013:Core/Src/bno055.c **** }
4014:Core/Src/bno055.c **** 
4015:Core/Src/bno055.c **** /*!
4016:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
4017:Core/Src/bno055.c ****  *  to radians output as float
4018:Core/Src/bno055.c ****  *
4019:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r radians
4020:Core/Src/bno055.c ****  *
4021:Core/Src/bno055.c ****  *  @return results of bus communication function
4022:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4023:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4024:Core/Src/bno055.c ****  *
4025:Core/Src/bno055.c ****  */
4026:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_rad(float *euler_r_f)
4027:Core/Src/bno055.c **** {
4028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4029:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
4030:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4031:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4032:Core/Src/bno055.c **** 
4033:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4034:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4035:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4036:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4037:Core/Src/bno055.c ****     {
4038:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4039:Core/Src/bno055.c ****     }
4040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4041:Core/Src/bno055.c ****     {
4042:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4043:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_f);
4044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4045:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 173


4046:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4047:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r_f / BNO055_EULER_DIV_RAD);
4048:Core/Src/bno055.c ****             *euler_r_f = data_f;
4049:Core/Src/bno055.c ****         }
4050:Core/Src/bno055.c ****         else
4051:Core/Src/bno055.c ****         {
4052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4053:Core/Src/bno055.c ****         }
4054:Core/Src/bno055.c ****     }
4055:Core/Src/bno055.c ****     else
4056:Core/Src/bno055.c ****     {
4057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4058:Core/Src/bno055.c ****     }
4059:Core/Src/bno055.c **** 
4060:Core/Src/bno055.c ****     return com_rslt;
4061:Core/Src/bno055.c **** }
4062:Core/Src/bno055.c **** 
4063:Core/Src/bno055.c **** /*!
4064:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4065:Core/Src/bno055.c ****  *  to degree output as float
4066:Core/Src/bno055.c ****  *
4067:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p degree
4068:Core/Src/bno055.c ****  *
4069:Core/Src/bno055.c ****  *  @return results of bus communication function
4070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4072:Core/Src/bno055.c ****  *
4073:Core/Src/bno055.c ****  */
4074:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_deg(float *euler_p_f)
4075:Core/Src/bno055.c **** {
4076:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4077:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4078:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4079:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4080:Core/Src/bno055.c **** 
4081:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4082:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4083:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4084:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4085:Core/Src/bno055.c ****     {
4086:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4087:Core/Src/bno055.c ****     }
4088:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4089:Core/Src/bno055.c ****     {
4090:Core/Src/bno055.c ****         /* Read Euler raw p data*/
4091:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4092:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4093:Core/Src/bno055.c ****         {
4094:Core/Src/bno055.c ****             /* Convert raw Euler p data to degree*/
4095:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_DEG);
4096:Core/Src/bno055.c ****             *euler_p_f = data_f;
4097:Core/Src/bno055.c ****         }
4098:Core/Src/bno055.c ****         else
4099:Core/Src/bno055.c ****         {
4100:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4101:Core/Src/bno055.c ****         }
4102:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 174


4103:Core/Src/bno055.c ****     else
4104:Core/Src/bno055.c ****     {
4105:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4106:Core/Src/bno055.c ****     }
4107:Core/Src/bno055.c **** 
4108:Core/Src/bno055.c ****     return com_rslt;
4109:Core/Src/bno055.c **** }
4110:Core/Src/bno055.c **** 
4111:Core/Src/bno055.c **** /*!
4112:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4113:Core/Src/bno055.c ****  *  to radians output as float
4114:Core/Src/bno055.c ****  *
4115:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p radians
4116:Core/Src/bno055.c ****  *
4117:Core/Src/bno055.c ****  *  @return results of bus communication function
4118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4120:Core/Src/bno055.c ****  *
4121:Core/Src/bno055.c ****  *
4122:Core/Src/bno055.c ****  */
4123:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_rad(float *euler_p_f)
4124:Core/Src/bno055.c **** {
4125:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4126:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4127:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4128:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4129:Core/Src/bno055.c **** 
4130:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4131:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4132:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4133:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4134:Core/Src/bno055.c ****     {
4135:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4136:Core/Src/bno055.c ****     }
4137:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4138:Core/Src/bno055.c ****     {
4139:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4140:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4141:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4142:Core/Src/bno055.c ****         {
4143:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4144:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_RAD);
4145:Core/Src/bno055.c ****             *euler_p_f = data_f;
4146:Core/Src/bno055.c ****         }
4147:Core/Src/bno055.c ****         else
4148:Core/Src/bno055.c ****         {
4149:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4150:Core/Src/bno055.c ****         }
4151:Core/Src/bno055.c ****     }
4152:Core/Src/bno055.c ****     else
4153:Core/Src/bno055.c ****     {
4154:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4155:Core/Src/bno055.c ****     }
4156:Core/Src/bno055.c **** 
4157:Core/Src/bno055.c ****     return com_rslt;
4158:Core/Src/bno055.c **** }
4159:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 175


4160:Core/Src/bno055.c **** /*!
4161:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hrp raw data
4162:Core/Src/bno055.c ****  *  to degree output as float
4163:Core/Src/bno055.c ****  *
4164:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hrp
4165:Core/Src/bno055.c ****  *
4166:Core/Src/bno055.c ****  *  Parameter |    result
4167:Core/Src/bno055.c ****  *  --------- | -----------------
4168:Core/Src/bno055.c ****  *    h       | degree data of Euler
4169:Core/Src/bno055.c ****  *    r       | degree data of Euler
4170:Core/Src/bno055.c ****  *    p       | degree data of Euler
4171:Core/Src/bno055.c ****  *
4172:Core/Src/bno055.c ****  *
4173:Core/Src/bno055.c ****  *  @return results of bus communication function
4174:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4175:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4176:Core/Src/bno055.c ****  *
4177:Core/Src/bno055.c ****  */
4178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_deg(struct bno055_euler_float_t *euler_h
4179:Core/Src/bno055.c **** {
4180:Core/Src/bno055.c ****     /* Variable used to return value of
4181:Core/Src/bno055.c ****      * communication routine*/
4182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4183:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4184:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4185:Core/Src/bno055.c **** 
4186:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4187:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4188:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4189:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4190:Core/Src/bno055.c ****     {
4191:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4192:Core/Src/bno055.c ****     }
4193:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4194:Core/Src/bno055.c ****     {
4195:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4196:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4197:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4198:Core/Src/bno055.c ****         {
4199:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
4200:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_DEG);
4201:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
4202:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
4203:Core/Src/bno055.c ****         }
4204:Core/Src/bno055.c ****         else
4205:Core/Src/bno055.c ****         {
4206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4207:Core/Src/bno055.c ****         }
4208:Core/Src/bno055.c ****     }
4209:Core/Src/bno055.c ****     else
4210:Core/Src/bno055.c ****     {
4211:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4212:Core/Src/bno055.c ****     }
4213:Core/Src/bno055.c **** 
4214:Core/Src/bno055.c ****     return com_rslt;
4215:Core/Src/bno055.c **** }
4216:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 176


4217:Core/Src/bno055.c **** /*!
4218:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler xyz raw data
4219:Core/Src/bno055.c ****  *  to radians output as float
4220:Core/Src/bno055.c ****  *
4221:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hrp
4222:Core/Src/bno055.c ****  *
4223:Core/Src/bno055.c ****  *  Parameter |    result
4224:Core/Src/bno055.c ****  *  --------- | -----------------
4225:Core/Src/bno055.c ****  *    h       | radians data of Euler
4226:Core/Src/bno055.c ****  *    r       | radians data of Euler
4227:Core/Src/bno055.c ****  *    p       | radians data of Euler
4228:Core/Src/bno055.c ****  *
4229:Core/Src/bno055.c ****  *
4230:Core/Src/bno055.c ****  *  @return results of bus communication function
4231:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4232:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4233:Core/Src/bno055.c ****  *
4234:Core/Src/bno055.c ****  */
4235:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_rad(struct bno055_euler_float_t *euler_h
4236:Core/Src/bno055.c **** {
4237:Core/Src/bno055.c ****     /* Variable used to return value of
4238:Core/Src/bno055.c ****      * communication routine*/
4239:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4240:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4241:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4242:Core/Src/bno055.c **** 
4243:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4244:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4245:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4246:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4247:Core/Src/bno055.c ****     {
4248:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4249:Core/Src/bno055.c ****     }
4250:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4251:Core/Src/bno055.c ****     {
4252:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4253:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4254:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4255:Core/Src/bno055.c ****         {
4256:Core/Src/bno055.c ****             /* Convert raw hrp to radians */
4257:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_RAD);
4258:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
4259:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
4260:Core/Src/bno055.c ****         }
4261:Core/Src/bno055.c ****         else
4262:Core/Src/bno055.c ****         {
4263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4264:Core/Src/bno055.c ****         }
4265:Core/Src/bno055.c ****     }
4266:Core/Src/bno055.c ****     else
4267:Core/Src/bno055.c ****     {
4268:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4269:Core/Src/bno055.c ****     }
4270:Core/Src/bno055.c **** 
4271:Core/Src/bno055.c ****     return com_rslt;
4272:Core/Src/bno055.c **** }
4273:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 177


4274:Core/Src/bno055.c **** /*!
4275:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4276:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as float
4277:Core/Src/bno055.c ****  *
4278:Core/Src/bno055.c ****  *  @param linear_accel_x_f : The float value of linear accel x meterpersecseq
4279:Core/Src/bno055.c ****  *
4280:Core/Src/bno055.c ****  *  @return results of bus communication function
4281:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4282:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4283:Core/Src/bno055.c ****  */
4284:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_x_msq(float *linear_accel_x_f)
4285:Core/Src/bno055.c **** {
 5428              		.loc 1 4285 1 is_stmt 1 view -0
 5429              		.cfi_startproc
 5430              		@ args = 0, pretend = 0, frame = 8
 5431              		@ frame_needed = 0, uses_anonymous_args = 0
 5432              		.loc 1 4285 1 is_stmt 0 view .LVU1506
 5433 0000 30B5     		push	{r4, r5, lr}
 5434              	.LCFI173:
 5435              		.cfi_def_cfa_offset 12
 5436              		.cfi_offset 4, -12
 5437              		.cfi_offset 5, -8
 5438              		.cfi_offset 14, -4
 5439 0002 83B0     		sub	sp, sp, #12
 5440              	.LCFI174:
 5441              		.cfi_def_cfa_offset 24
 5442 0004 0446     		mov	r4, r0
4286:Core/Src/bno055.c ****     /* Variable used to return value of
4287:Core/Src/bno055.c ****      * communication routine*/
4288:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5443              		.loc 1 4288 5 is_stmt 1 view .LVU1507
 5444              	.LVL535:
4289:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 5445              		.loc 1 4289 5 view .LVU1508
 5446              		.loc 1 4289 9 is_stmt 0 view .LVU1509
 5447 0006 0023     		movs	r3, #0
 5448 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4290:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5449              		.loc 1 4290 5 is_stmt 1 view .LVU1510
 5450              	.LVL536:
4291:Core/Src/bno055.c **** 
4292:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4293:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 5451              		.loc 1 4293 5 view .LVU1511
 5452              		.loc 1 4293 16 is_stmt 0 view .LVU1512
 5453 000c 0DF10600 		add	r0, sp, #6
 5454              	.LVL537:
 5455              		.loc 1 4293 16 view .LVU1513
 5456 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 5457              	.LVL538:
4294:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5458              		.loc 1 4294 5 is_stmt 1 view .LVU1514
 5459              		.loc 1 4294 8 is_stmt 0 view .LVU1515
 5460 0014 70B9     		cbnz	r0, .L417
 5461 0016 0546     		mov	r5, r0
4295:Core/Src/bno055.c ****     {
4296:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 178


4297:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5462              		.loc 1 4297 9 is_stmt 1 view .LVU1516
 5463              		.loc 1 4297 49 is_stmt 0 view .LVU1517
 5464 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5465              	.LVL539:
 5466              		.loc 1 4297 49 view .LVU1518
 5467 001c FFF7FEFF 		bl	__aeabi_i2d
 5468              	.LVL540:
 5469 0020 0022     		movs	r2, #0
 5470 0022 064B     		ldr	r3, .L419
 5471 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5472              	.LVL541:
 5473              		.loc 1 4297 16 view .LVU1519
 5474 0028 FFF7FEFF 		bl	__aeabi_d2f
 5475              	.LVL542:
4298:Core/Src/bno055.c ****         *linear_accel_x_f = data_f;
 5476              		.loc 1 4298 9 is_stmt 1 view .LVU1520
 5477              		.loc 1 4298 27 is_stmt 0 view .LVU1521
 5478 002c 2060     		str	r0, [r4]	@ float
 5479              	.LVL543:
 5480              	.L416:
4299:Core/Src/bno055.c ****     }
4300:Core/Src/bno055.c ****     else
4301:Core/Src/bno055.c ****     {
4302:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4303:Core/Src/bno055.c ****     }
4304:Core/Src/bno055.c **** 
4305:Core/Src/bno055.c ****     return com_rslt;
 5481              		.loc 1 4305 5 is_stmt 1 view .LVU1522
4306:Core/Src/bno055.c **** }
 5482              		.loc 1 4306 1 is_stmt 0 view .LVU1523
 5483 002e 2846     		mov	r0, r5
 5484 0030 03B0     		add	sp, sp, #12
 5485              	.LCFI175:
 5486              		.cfi_remember_state
 5487              		.cfi_def_cfa_offset 12
 5488              		@ sp needed
 5489 0032 30BD     		pop	{r4, r5, pc}
 5490              	.LVL544:
 5491              	.L417:
 5492              	.LCFI176:
 5493              		.cfi_restore_state
4302:Core/Src/bno055.c ****     }
 5494              		.loc 1 4302 18 view .LVU1524
 5495 0034 4FF0FF35 		mov	r5, #-1
 5496 0038 F9E7     		b	.L416
 5497              	.L420:
 5498 003a 00BF     		.align	2
 5499              	.L419:
 5500 003c 00005940 		.word	1079574528
 5501              		.cfi_endproc
 5502              	.LFE69:
 5504              		.section	.text.bno055_convert_float_linear_accel_y_msq,"ax",%progbits
 5505              		.align	1
 5506              		.global	bno055_convert_float_linear_accel_y_msq
 5507              		.syntax unified
 5508              		.thumb
ARM GAS  /tmp/cc9kYR4Z.s 			page 179


 5509              		.thumb_func
 5511              	bno055_convert_float_linear_accel_y_msq:
 5512              	.LVL545:
 5513              	.LFB70:
4307:Core/Src/bno055.c **** 
4308:Core/Src/bno055.c **** /*!
4309:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4310:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as float
4311:Core/Src/bno055.c ****  *
4312:Core/Src/bno055.c ****  *  @param linear_accel_y_f : The float value of linear accel y meterpersecseq
4313:Core/Src/bno055.c ****  *
4314:Core/Src/bno055.c ****  *  @return results of bus communication function
4315:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4316:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4317:Core/Src/bno055.c ****  */
4318:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_y_msq(float *linear_accel_y_f)
4319:Core/Src/bno055.c **** {
 5514              		.loc 1 4319 1 is_stmt 1 view -0
 5515              		.cfi_startproc
 5516              		@ args = 0, pretend = 0, frame = 8
 5517              		@ frame_needed = 0, uses_anonymous_args = 0
 5518              		.loc 1 4319 1 is_stmt 0 view .LVU1526
 5519 0000 30B5     		push	{r4, r5, lr}
 5520              	.LCFI177:
 5521              		.cfi_def_cfa_offset 12
 5522              		.cfi_offset 4, -12
 5523              		.cfi_offset 5, -8
 5524              		.cfi_offset 14, -4
 5525 0002 83B0     		sub	sp, sp, #12
 5526              	.LCFI178:
 5527              		.cfi_def_cfa_offset 24
 5528 0004 0446     		mov	r4, r0
4320:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5529              		.loc 1 4320 5 is_stmt 1 view .LVU1527
 5530              	.LVL546:
4321:Core/Src/bno055.c ****     s16 reg_linear_accel_y = BNO055_INIT_VALUE;
 5531              		.loc 1 4321 5 view .LVU1528
 5532              		.loc 1 4321 9 is_stmt 0 view .LVU1529
 5533 0006 0023     		movs	r3, #0
 5534 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4322:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5535              		.loc 1 4322 5 is_stmt 1 view .LVU1530
 5536              	.LVL547:
4323:Core/Src/bno055.c **** 
4324:Core/Src/bno055.c ****     /* Read the raw y of linear accel */
4325:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y);
 5537              		.loc 1 4325 5 view .LVU1531
 5538              		.loc 1 4325 16 is_stmt 0 view .LVU1532
 5539 000c 0DF10600 		add	r0, sp, #6
 5540              	.LVL548:
 5541              		.loc 1 4325 16 view .LVU1533
 5542 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 5543              	.LVL549:
4326:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5544              		.loc 1 4326 5 is_stmt 1 view .LVU1534
 5545              		.loc 1 4326 8 is_stmt 0 view .LVU1535
 5546 0014 70B9     		cbnz	r0, .L423
ARM GAS  /tmp/cc9kYR4Z.s 			page 180


 5547 0016 0546     		mov	r5, r0
4327:Core/Src/bno055.c ****     {
4328:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4329:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5548              		.loc 1 4329 9 is_stmt 1 view .LVU1536
 5549              		.loc 1 4329 45 is_stmt 0 view .LVU1537
 5550 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5551              	.LVL550:
 5552              		.loc 1 4329 45 view .LVU1538
 5553 001c FFF7FEFF 		bl	__aeabi_i2d
 5554              	.LVL551:
 5555 0020 0022     		movs	r2, #0
 5556 0022 064B     		ldr	r3, .L425
 5557 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5558              	.LVL552:
 5559              		.loc 1 4329 16 view .LVU1539
 5560 0028 FFF7FEFF 		bl	__aeabi_d2f
 5561              	.LVL553:
4330:Core/Src/bno055.c ****         *linear_accel_y_f = data_f;
 5562              		.loc 1 4330 9 is_stmt 1 view .LVU1540
 5563              		.loc 1 4330 27 is_stmt 0 view .LVU1541
 5564 002c 2060     		str	r0, [r4]	@ float
 5565              	.LVL554:
 5566              	.L422:
4331:Core/Src/bno055.c ****     }
4332:Core/Src/bno055.c ****     else
4333:Core/Src/bno055.c ****     {
4334:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4335:Core/Src/bno055.c ****     }
4336:Core/Src/bno055.c **** 
4337:Core/Src/bno055.c ****     return com_rslt;
 5567              		.loc 1 4337 5 is_stmt 1 view .LVU1542
4338:Core/Src/bno055.c **** }
 5568              		.loc 1 4338 1 is_stmt 0 view .LVU1543
 5569 002e 2846     		mov	r0, r5
 5570 0030 03B0     		add	sp, sp, #12
 5571              	.LCFI179:
 5572              		.cfi_remember_state
 5573              		.cfi_def_cfa_offset 12
 5574              		@ sp needed
 5575 0032 30BD     		pop	{r4, r5, pc}
 5576              	.LVL555:
 5577              	.L423:
 5578              	.LCFI180:
 5579              		.cfi_restore_state
4334:Core/Src/bno055.c ****     }
 5580              		.loc 1 4334 18 view .LVU1544
 5581 0034 4FF0FF35 		mov	r5, #-1
 5582 0038 F9E7     		b	.L422
 5583              	.L426:
 5584 003a 00BF     		.align	2
 5585              	.L425:
 5586 003c 00005940 		.word	1079574528
 5587              		.cfi_endproc
 5588              	.LFE70:
 5590              		.section	.text.bno055_convert_float_linear_accel_z_msq,"ax",%progbits
 5591              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 181


 5592              		.global	bno055_convert_float_linear_accel_z_msq
 5593              		.syntax unified
 5594              		.thumb
 5595              		.thumb_func
 5597              	bno055_convert_float_linear_accel_z_msq:
 5598              	.LVL556:
 5599              	.LFB71:
4339:Core/Src/bno055.c **** 
4340:Core/Src/bno055.c **** /*!
4341:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4342:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as float
4343:Core/Src/bno055.c ****  *
4344:Core/Src/bno055.c ****  *  @param linear_accel_z_f : The float value of linear accel z meterpersecseq
4345:Core/Src/bno055.c ****  *
4346:Core/Src/bno055.c ****  *  @return results of bus communication function
4347:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4348:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4349:Core/Src/bno055.c ****  *
4350:Core/Src/bno055.c ****  */
4351:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_z_msq(float *linear_accel_z_f)
4352:Core/Src/bno055.c **** {
 5600              		.loc 1 4352 1 is_stmt 1 view -0
 5601              		.cfi_startproc
 5602              		@ args = 0, pretend = 0, frame = 8
 5603              		@ frame_needed = 0, uses_anonymous_args = 0
 5604              		.loc 1 4352 1 is_stmt 0 view .LVU1546
 5605 0000 30B5     		push	{r4, r5, lr}
 5606              	.LCFI181:
 5607              		.cfi_def_cfa_offset 12
 5608              		.cfi_offset 4, -12
 5609              		.cfi_offset 5, -8
 5610              		.cfi_offset 14, -4
 5611 0002 83B0     		sub	sp, sp, #12
 5612              	.LCFI182:
 5613              		.cfi_def_cfa_offset 24
 5614 0004 0446     		mov	r4, r0
4353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5615              		.loc 1 4353 5 is_stmt 1 view .LVU1547
 5616              	.LVL557:
4354:Core/Src/bno055.c ****     s16 reg_linear_accel_z = BNO055_INIT_VALUE;
 5617              		.loc 1 4354 5 view .LVU1548
 5618              		.loc 1 4354 9 is_stmt 0 view .LVU1549
 5619 0006 0023     		movs	r3, #0
 5620 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4355:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5621              		.loc 1 4355 5 is_stmt 1 view .LVU1550
 5622              	.LVL558:
4356:Core/Src/bno055.c **** 
4357:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4358:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z);
 5623              		.loc 1 4358 5 view .LVU1551
 5624              		.loc 1 4358 16 is_stmt 0 view .LVU1552
 5625 000c 0DF10600 		add	r0, sp, #6
 5626              	.LVL559:
 5627              		.loc 1 4358 16 view .LVU1553
 5628 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 5629              	.LVL560:
ARM GAS  /tmp/cc9kYR4Z.s 			page 182


4359:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5630              		.loc 1 4359 5 is_stmt 1 view .LVU1554
 5631              		.loc 1 4359 8 is_stmt 0 view .LVU1555
 5632 0014 70B9     		cbnz	r0, .L429
 5633 0016 0546     		mov	r5, r0
4360:Core/Src/bno055.c ****     {
4361:Core/Src/bno055.c ****         /* Convert the raw linear accel z to m/s2*/
4362:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5634              		.loc 1 4362 9 is_stmt 1 view .LVU1556
 5635              		.loc 1 4362 45 is_stmt 0 view .LVU1557
 5636 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5637              	.LVL561:
 5638              		.loc 1 4362 45 view .LVU1558
 5639 001c FFF7FEFF 		bl	__aeabi_i2d
 5640              	.LVL562:
 5641 0020 0022     		movs	r2, #0
 5642 0022 064B     		ldr	r3, .L431
 5643 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5644              	.LVL563:
 5645              		.loc 1 4362 16 view .LVU1559
 5646 0028 FFF7FEFF 		bl	__aeabi_d2f
 5647              	.LVL564:
4363:Core/Src/bno055.c ****         *linear_accel_z_f = data_f;
 5648              		.loc 1 4363 9 is_stmt 1 view .LVU1560
 5649              		.loc 1 4363 27 is_stmt 0 view .LVU1561
 5650 002c 2060     		str	r0, [r4]	@ float
 5651              	.LVL565:
 5652              	.L428:
4364:Core/Src/bno055.c ****     }
4365:Core/Src/bno055.c ****     else
4366:Core/Src/bno055.c ****     {
4367:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4368:Core/Src/bno055.c ****     }
4369:Core/Src/bno055.c **** 
4370:Core/Src/bno055.c ****     return com_rslt;
 5653              		.loc 1 4370 5 is_stmt 1 view .LVU1562
4371:Core/Src/bno055.c **** }
 5654              		.loc 1 4371 1 is_stmt 0 view .LVU1563
 5655 002e 2846     		mov	r0, r5
 5656 0030 03B0     		add	sp, sp, #12
 5657              	.LCFI183:
 5658              		.cfi_remember_state
 5659              		.cfi_def_cfa_offset 12
 5660              		@ sp needed
 5661 0032 30BD     		pop	{r4, r5, pc}
 5662              	.LVL566:
 5663              	.L429:
 5664              	.LCFI184:
 5665              		.cfi_restore_state
4367:Core/Src/bno055.c ****     }
 5666              		.loc 1 4367 18 view .LVU1564
 5667 0034 4FF0FF35 		mov	r5, #-1
 5668 0038 F9E7     		b	.L428
 5669              	.L432:
 5670 003a 00BF     		.align	2
 5671              	.L431:
 5672 003c 00005940 		.word	1079574528
ARM GAS  /tmp/cc9kYR4Z.s 			page 183


 5673              		.cfi_endproc
 5674              	.LFE71:
 5676              		.section	.text.bno055_convert_float_linear_accel_xyz_msq,"ax",%progbits
 5677              		.align	1
 5678              		.global	bno055_convert_float_linear_accel_xyz_msq
 5679              		.syntax unified
 5680              		.thumb
 5681              		.thumb_func
 5683              	bno055_convert_float_linear_accel_xyz_msq:
 5684              	.LVL567:
 5685              	.LFB72:
4372:Core/Src/bno055.c **** 
4373:Core/Src/bno055.c **** /*!
4374:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
4375:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4376:Core/Src/bno055.c ****  *
4377:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
4378:Core/Src/bno055.c ****  *
4379:Core/Src/bno055.c ****  *  Parameter |    result
4380:Core/Src/bno055.c ****  *  --------- | -----------------
4381:Core/Src/bno055.c ****  *    x       | meterpersecseq data of linear accel
4382:Core/Src/bno055.c ****  *    y       | meterpersecseq data of linear accel
4383:Core/Src/bno055.c ****  *    z       | meterpersecseq data of linear accel
4384:Core/Src/bno055.c ****  *
4385:Core/Src/bno055.c ****  *
4386:Core/Src/bno055.c ****  *  @return results of bus communication function
4387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4389:Core/Src/bno055.c ****  *
4390:Core/Src/bno055.c ****  *
4391:Core/Src/bno055.c ****  */
4392:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_xyz_msq(
4393:Core/Src/bno055.c ****     struct bno055_linear_accel_float_t *linear_accel_xyz)
4394:Core/Src/bno055.c **** {
 5686              		.loc 1 4394 1 is_stmt 1 view -0
 5687              		.cfi_startproc
 5688              		@ args = 0, pretend = 0, frame = 8
 5689              		@ frame_needed = 0, uses_anonymous_args = 0
 5690              		.loc 1 4394 1 is_stmt 0 view .LVU1566
 5691 0000 30B5     		push	{r4, r5, lr}
 5692              	.LCFI185:
 5693              		.cfi_def_cfa_offset 12
 5694              		.cfi_offset 4, -12
 5695              		.cfi_offset 5, -8
 5696              		.cfi_offset 14, -4
 5697 0002 83B0     		sub	sp, sp, #12
 5698              	.LCFI186:
 5699              		.cfi_def_cfa_offset 24
 5700 0004 0446     		mov	r4, r0
4395:Core/Src/bno055.c ****     /* Variable used to return value of
4396:Core/Src/bno055.c ****      * communication routine*/
4397:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5701              		.loc 1 4397 5 is_stmt 1 view .LVU1567
 5702              	.LVL568:
4398:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_
 5703              		.loc 1 4398 5 view .LVU1568
 5704              		.loc 1 4398 34 is_stmt 0 view .LVU1569
ARM GAS  /tmp/cc9kYR4Z.s 			page 184


 5705 0006 0023     		movs	r3, #0
 5706 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5707 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5708 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4399:Core/Src/bno055.c **** 
4400:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4401:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel);
 5709              		.loc 1 4401 5 is_stmt 1 view .LVU1570
 5710              		.loc 1 4401 16 is_stmt 0 view .LVU1571
 5711 0014 6846     		mov	r0, sp
 5712              	.LVL569:
 5713              		.loc 1 4401 16 view .LVU1572
 5714 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 5715              	.LVL570:
4402:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5716              		.loc 1 4402 5 is_stmt 1 view .LVU1573
 5717              		.loc 1 4402 8 is_stmt 0 view .LVU1574
 5718 001a 20BB     		cbnz	r0, .L435
 5719 001c 0546     		mov	r5, r0
4403:Core/Src/bno055.c ****     {
4404:Core/Src/bno055.c ****         linear_accel_xyz->x = (float)(reg_linear_accel.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5720              		.loc 1 4404 9 is_stmt 1 view .LVU1575
 5721              		.loc 1 4404 58 is_stmt 0 view .LVU1576
 5722 001e BDF90000 		ldrsh	r0, [sp]
 5723              	.LVL571:
 5724              		.loc 1 4404 58 view .LVU1577
 5725 0022 FFF7FEFF 		bl	__aeabi_i2d
 5726              	.LVL572:
 5727 0026 0022     		movs	r2, #0
 5728 0028 104B     		ldr	r3, .L437
 5729 002a FFF7FEFF 		bl	__aeabi_ddiv
 5730              	.LVL573:
 5731              		.loc 1 4404 31 view .LVU1578
 5732 002e FFF7FEFF 		bl	__aeabi_d2f
 5733              	.LVL574:
 5734              		.loc 1 4404 29 view .LVU1579
 5735 0032 2060     		str	r0, [r4]	@ float
4405:Core/Src/bno055.c ****         linear_accel_xyz->y = (float)(reg_linear_accel.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5736              		.loc 1 4405 9 is_stmt 1 view .LVU1580
 5737              		.loc 1 4405 58 is_stmt 0 view .LVU1581
 5738 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5739 0038 FFF7FEFF 		bl	__aeabi_i2d
 5740              	.LVL575:
 5741 003c 0022     		movs	r2, #0
 5742 003e 0B4B     		ldr	r3, .L437
 5743 0040 FFF7FEFF 		bl	__aeabi_ddiv
 5744              	.LVL576:
 5745              		.loc 1 4405 31 view .LVU1582
 5746 0044 FFF7FEFF 		bl	__aeabi_d2f
 5747              	.LVL577:
 5748              		.loc 1 4405 29 view .LVU1583
 5749 0048 6060     		str	r0, [r4, #4]	@ float
4406:Core/Src/bno055.c ****         linear_accel_xyz->z = (float)(reg_linear_accel.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5750              		.loc 1 4406 9 is_stmt 1 view .LVU1584
 5751              		.loc 1 4406 58 is_stmt 0 view .LVU1585
 5752 004a BDF90400 		ldrsh	r0, [sp, #4]
 5753 004e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cc9kYR4Z.s 			page 185


 5754              	.LVL578:
 5755 0052 0022     		movs	r2, #0
 5756 0054 054B     		ldr	r3, .L437
 5757 0056 FFF7FEFF 		bl	__aeabi_ddiv
 5758              	.LVL579:
 5759              		.loc 1 4406 31 view .LVU1586
 5760 005a FFF7FEFF 		bl	__aeabi_d2f
 5761              	.LVL580:
 5762              		.loc 1 4406 29 view .LVU1587
 5763 005e A060     		str	r0, [r4, #8]	@ float
 5764              	.L434:
 5765              	.LVL581:
4407:Core/Src/bno055.c ****     }
4408:Core/Src/bno055.c ****     else
4409:Core/Src/bno055.c ****     {
4410:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4411:Core/Src/bno055.c ****     }
4412:Core/Src/bno055.c **** 
4413:Core/Src/bno055.c ****     return com_rslt;
 5766              		.loc 1 4413 5 is_stmt 1 view .LVU1588
4414:Core/Src/bno055.c **** }
 5767              		.loc 1 4414 1 is_stmt 0 view .LVU1589
 5768 0060 2846     		mov	r0, r5
 5769 0062 03B0     		add	sp, sp, #12
 5770              	.LCFI187:
 5771              		.cfi_remember_state
 5772              		.cfi_def_cfa_offset 12
 5773              		@ sp needed
 5774 0064 30BD     		pop	{r4, r5, pc}
 5775              	.LVL582:
 5776              	.L435:
 5777              	.LCFI188:
 5778              		.cfi_restore_state
4410:Core/Src/bno055.c ****     }
 5779              		.loc 1 4410 18 view .LVU1590
 5780 0066 4FF0FF35 		mov	r5, #-1
 5781 006a F9E7     		b	.L434
 5782              	.L438:
 5783              		.align	2
 5784              	.L437:
 5785 006c 00005940 		.word	1079574528
 5786              		.cfi_endproc
 5787              	.LFE72:
 5789              		.section	.text.bno055_convert_gravity_float_x_msq,"ax",%progbits
 5790              		.align	1
 5791              		.global	bno055_convert_gravity_float_x_msq
 5792              		.syntax unified
 5793              		.thumb
 5794              		.thumb_func
 5796              	bno055_convert_gravity_float_x_msq:
 5797              	.LVL583:
 5798              	.LFB73:
4415:Core/Src/bno055.c **** 
4416:Core/Src/bno055.c **** /*!
4417:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4418:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as float
4419:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 186


4420:Core/Src/bno055.c ****  *  @param gravity_x_f : The float value of gravity x meterpersecseq
4421:Core/Src/bno055.c ****  *
4422:Core/Src/bno055.c ****  *  @return results of bus communication function
4423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4425:Core/Src/bno055.c ****  *
4426:Core/Src/bno055.c ****  *
4427:Core/Src/bno055.c ****  */
4428:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_x_msq(float *gravity_x_f)
4429:Core/Src/bno055.c **** {
 5799              		.loc 1 4429 1 is_stmt 1 view -0
 5800              		.cfi_startproc
 5801              		@ args = 0, pretend = 0, frame = 8
 5802              		@ frame_needed = 0, uses_anonymous_args = 0
 5803              		.loc 1 4429 1 is_stmt 0 view .LVU1592
 5804 0000 30B5     		push	{r4, r5, lr}
 5805              	.LCFI189:
 5806              		.cfi_def_cfa_offset 12
 5807              		.cfi_offset 4, -12
 5808              		.cfi_offset 5, -8
 5809              		.cfi_offset 14, -4
 5810 0002 83B0     		sub	sp, sp, #12
 5811              	.LCFI190:
 5812              		.cfi_def_cfa_offset 24
 5813 0004 0446     		mov	r4, r0
4430:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5814              		.loc 1 4430 5 is_stmt 1 view .LVU1593
 5815              	.LVL584:
4431:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 5816              		.loc 1 4431 5 view .LVU1594
 5817              		.loc 1 4431 9 is_stmt 0 view .LVU1595
 5818 0006 0023     		movs	r3, #0
 5819 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4432:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5820              		.loc 1 4432 5 is_stmt 1 view .LVU1596
 5821              	.LVL585:
4433:Core/Src/bno055.c **** 
4434:Core/Src/bno055.c ****     /* Read raw gravity of x*/
4435:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 5822              		.loc 1 4435 5 view .LVU1597
 5823              		.loc 1 4435 16 is_stmt 0 view .LVU1598
 5824 000c 0DF10600 		add	r0, sp, #6
 5825              	.LVL586:
 5826              		.loc 1 4435 16 view .LVU1599
 5827 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 5828              	.LVL587:
4436:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5829              		.loc 1 4436 5 is_stmt 1 view .LVU1600
 5830              		.loc 1 4436 8 is_stmt 0 view .LVU1601
 5831 0014 70B9     		cbnz	r0, .L441
 5832 0016 0546     		mov	r5, r0
4437:Core/Src/bno055.c ****     {
4438:Core/Src/bno055.c ****         /* Convert the raw gravity x to m/s2*/
4439:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 5833              		.loc 1 4439 9 is_stmt 1 view .LVU1602
 5834              		.loc 1 4439 44 is_stmt 0 view .LVU1603
 5835 0018 BDF90600 		ldrsh	r0, [sp, #6]
ARM GAS  /tmp/cc9kYR4Z.s 			page 187


 5836              	.LVL588:
 5837              		.loc 1 4439 44 view .LVU1604
 5838 001c FFF7FEFF 		bl	__aeabi_i2d
 5839              	.LVL589:
 5840 0020 0022     		movs	r2, #0
 5841 0022 064B     		ldr	r3, .L443
 5842 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5843              	.LVL590:
 5844              		.loc 1 4439 16 view .LVU1605
 5845 0028 FFF7FEFF 		bl	__aeabi_d2f
 5846              	.LVL591:
4440:Core/Src/bno055.c ****         *gravity_x_f = data_f;
 5847              		.loc 1 4440 9 is_stmt 1 view .LVU1606
 5848              		.loc 1 4440 22 is_stmt 0 view .LVU1607
 5849 002c 2060     		str	r0, [r4]	@ float
 5850              	.LVL592:
 5851              	.L440:
4441:Core/Src/bno055.c ****     }
4442:Core/Src/bno055.c ****     else
4443:Core/Src/bno055.c ****     {
4444:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4445:Core/Src/bno055.c ****     }
4446:Core/Src/bno055.c **** 
4447:Core/Src/bno055.c ****     return com_rslt;
 5852              		.loc 1 4447 5 is_stmt 1 view .LVU1608
4448:Core/Src/bno055.c **** }
 5853              		.loc 1 4448 1 is_stmt 0 view .LVU1609
 5854 002e 2846     		mov	r0, r5
 5855 0030 03B0     		add	sp, sp, #12
 5856              	.LCFI191:
 5857              		.cfi_remember_state
 5858              		.cfi_def_cfa_offset 12
 5859              		@ sp needed
 5860 0032 30BD     		pop	{r4, r5, pc}
 5861              	.LVL593:
 5862              	.L441:
 5863              	.LCFI192:
 5864              		.cfi_restore_state
4444:Core/Src/bno055.c ****     }
 5865              		.loc 1 4444 18 view .LVU1610
 5866 0034 4FF0FF35 		mov	r5, #-1
 5867 0038 F9E7     		b	.L440
 5868              	.L444:
 5869 003a 00BF     		.align	2
 5870              	.L443:
 5871 003c 00005940 		.word	1079574528
 5872              		.cfi_endproc
 5873              	.LFE73:
 5875              		.section	.text.bno055_convert_gravity_float_y_msq,"ax",%progbits
 5876              		.align	1
 5877              		.global	bno055_convert_gravity_float_y_msq
 5878              		.syntax unified
 5879              		.thumb
 5880              		.thumb_func
 5882              	bno055_convert_gravity_float_y_msq:
 5883              	.LVL594:
 5884              	.LFB74:
ARM GAS  /tmp/cc9kYR4Z.s 			page 188


4449:Core/Src/bno055.c **** 
4450:Core/Src/bno055.c **** /*!
4451:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4452:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as float
4453:Core/Src/bno055.c ****  *
4454:Core/Src/bno055.c ****  *  @param gravity_y_f : The float value of gravity y meterpersecseq
4455:Core/Src/bno055.c ****  *
4456:Core/Src/bno055.c ****  *  @return results of bus communication function
4457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4459:Core/Src/bno055.c ****  *
4460:Core/Src/bno055.c ****  *
4461:Core/Src/bno055.c ****  */
4462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_y_msq(float *gravity_y_f)
4463:Core/Src/bno055.c **** {
 5885              		.loc 1 4463 1 is_stmt 1 view -0
 5886              		.cfi_startproc
 5887              		@ args = 0, pretend = 0, frame = 8
 5888              		@ frame_needed = 0, uses_anonymous_args = 0
 5889              		.loc 1 4463 1 is_stmt 0 view .LVU1612
 5890 0000 30B5     		push	{r4, r5, lr}
 5891              	.LCFI193:
 5892              		.cfi_def_cfa_offset 12
 5893              		.cfi_offset 4, -12
 5894              		.cfi_offset 5, -8
 5895              		.cfi_offset 14, -4
 5896 0002 83B0     		sub	sp, sp, #12
 5897              	.LCFI194:
 5898              		.cfi_def_cfa_offset 24
 5899 0004 0446     		mov	r4, r0
4464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5900              		.loc 1 4464 5 is_stmt 1 view .LVU1613
 5901              	.LVL595:
4465:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 5902              		.loc 1 4465 5 view .LVU1614
 5903              		.loc 1 4465 9 is_stmt 0 view .LVU1615
 5904 0006 0023     		movs	r3, #0
 5905 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4466:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5906              		.loc 1 4466 5 is_stmt 1 view .LVU1616
 5907              	.LVL596:
4467:Core/Src/bno055.c **** 
4468:Core/Src/bno055.c ****     /* Read raw gravity of y*/
4469:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 5908              		.loc 1 4469 5 view .LVU1617
 5909              		.loc 1 4469 16 is_stmt 0 view .LVU1618
 5910 000c 0DF10600 		add	r0, sp, #6
 5911              	.LVL597:
 5912              		.loc 1 4469 16 view .LVU1619
 5913 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 5914              	.LVL598:
4470:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5915              		.loc 1 4470 5 is_stmt 1 view .LVU1620
 5916              		.loc 1 4470 8 is_stmt 0 view .LVU1621
 5917 0014 70B9     		cbnz	r0, .L447
 5918 0016 0546     		mov	r5, r0
4471:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 189


4472:Core/Src/bno055.c ****         /* Convert the raw gravity y to m/s2*/
4473:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 5919              		.loc 1 4473 9 is_stmt 1 view .LVU1622
 5920              		.loc 1 4473 44 is_stmt 0 view .LVU1623
 5921 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5922              	.LVL599:
 5923              		.loc 1 4473 44 view .LVU1624
 5924 001c FFF7FEFF 		bl	__aeabi_i2d
 5925              	.LVL600:
 5926 0020 0022     		movs	r2, #0
 5927 0022 064B     		ldr	r3, .L449
 5928 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5929              	.LVL601:
 5930              		.loc 1 4473 16 view .LVU1625
 5931 0028 FFF7FEFF 		bl	__aeabi_d2f
 5932              	.LVL602:
4474:Core/Src/bno055.c ****         *gravity_y_f = data_f;
 5933              		.loc 1 4474 9 is_stmt 1 view .LVU1626
 5934              		.loc 1 4474 22 is_stmt 0 view .LVU1627
 5935 002c 2060     		str	r0, [r4]	@ float
 5936              	.LVL603:
 5937              	.L446:
4475:Core/Src/bno055.c ****     }
4476:Core/Src/bno055.c ****     else
4477:Core/Src/bno055.c ****     {
4478:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4479:Core/Src/bno055.c ****     }
4480:Core/Src/bno055.c **** 
4481:Core/Src/bno055.c ****     return com_rslt;
 5938              		.loc 1 4481 5 is_stmt 1 view .LVU1628
4482:Core/Src/bno055.c **** }
 5939              		.loc 1 4482 1 is_stmt 0 view .LVU1629
 5940 002e 2846     		mov	r0, r5
 5941 0030 03B0     		add	sp, sp, #12
 5942              	.LCFI195:
 5943              		.cfi_remember_state
 5944              		.cfi_def_cfa_offset 12
 5945              		@ sp needed
 5946 0032 30BD     		pop	{r4, r5, pc}
 5947              	.LVL604:
 5948              	.L447:
 5949              	.LCFI196:
 5950              		.cfi_restore_state
4478:Core/Src/bno055.c ****     }
 5951              		.loc 1 4478 18 view .LVU1630
 5952 0034 4FF0FF35 		mov	r5, #-1
 5953 0038 F9E7     		b	.L446
 5954              	.L450:
 5955 003a 00BF     		.align	2
 5956              	.L449:
 5957 003c 00005940 		.word	1079574528
 5958              		.cfi_endproc
 5959              	.LFE74:
 5961              		.section	.text.bno055_convert_gravity_float_z_msq,"ax",%progbits
 5962              		.align	1
 5963              		.global	bno055_convert_gravity_float_z_msq
 5964              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 190


 5965              		.thumb
 5966              		.thumb_func
 5968              	bno055_convert_gravity_float_z_msq:
 5969              	.LVL605:
 5970              	.LFB75:
4483:Core/Src/bno055.c **** 
4484:Core/Src/bno055.c **** /*!
4485:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4486:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as float
4487:Core/Src/bno055.c ****  *
4488:Core/Src/bno055.c ****  *  @param gravity_z_f : The float value of gravity z meterpersecseq
4489:Core/Src/bno055.c ****  *
4490:Core/Src/bno055.c ****  *  @return results of bus communication function
4491:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4492:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4493:Core/Src/bno055.c ****  *
4494:Core/Src/bno055.c ****  */
4495:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_z_msq(float *gravity_z_f)
4496:Core/Src/bno055.c **** {
 5971              		.loc 1 4496 1 is_stmt 1 view -0
 5972              		.cfi_startproc
 5973              		@ args = 0, pretend = 0, frame = 8
 5974              		@ frame_needed = 0, uses_anonymous_args = 0
 5975              		.loc 1 4496 1 is_stmt 0 view .LVU1632
 5976 0000 30B5     		push	{r4, r5, lr}
 5977              	.LCFI197:
 5978              		.cfi_def_cfa_offset 12
 5979              		.cfi_offset 4, -12
 5980              		.cfi_offset 5, -8
 5981              		.cfi_offset 14, -4
 5982 0002 83B0     		sub	sp, sp, #12
 5983              	.LCFI198:
 5984              		.cfi_def_cfa_offset 24
 5985 0004 0446     		mov	r4, r0
4497:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5986              		.loc 1 4497 5 is_stmt 1 view .LVU1633
 5987              	.LVL606:
4498:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 5988              		.loc 1 4498 5 view .LVU1634
 5989              		.loc 1 4498 9 is_stmt 0 view .LVU1635
 5990 0006 0023     		movs	r3, #0
 5991 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4499:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5992              		.loc 1 4499 5 is_stmt 1 view .LVU1636
 5993              	.LVL607:
4500:Core/Src/bno055.c **** 
4501:Core/Src/bno055.c ****     /* Read raw gravity of z */
4502:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 5994              		.loc 1 4502 5 view .LVU1637
 5995              		.loc 1 4502 16 is_stmt 0 view .LVU1638
 5996 000c 0DF10600 		add	r0, sp, #6
 5997              	.LVL608:
 5998              		.loc 1 4502 16 view .LVU1639
 5999 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 6000              	.LVL609:
4503:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6001              		.loc 1 4503 5 is_stmt 1 view .LVU1640
ARM GAS  /tmp/cc9kYR4Z.s 			page 191


 6002              		.loc 1 4503 8 is_stmt 0 view .LVU1641
 6003 0014 70B9     		cbnz	r0, .L453
 6004 0016 0546     		mov	r5, r0
4504:Core/Src/bno055.c ****     {
4505:Core/Src/bno055.c ****         /* Convert the raw gravity z to m/s2*/
4506:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 6005              		.loc 1 4506 9 is_stmt 1 view .LVU1642
 6006              		.loc 1 4506 44 is_stmt 0 view .LVU1643
 6007 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6008              	.LVL610:
 6009              		.loc 1 4506 44 view .LVU1644
 6010 001c FFF7FEFF 		bl	__aeabi_i2d
 6011              	.LVL611:
 6012 0020 0022     		movs	r2, #0
 6013 0022 064B     		ldr	r3, .L455
 6014 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6015              	.LVL612:
 6016              		.loc 1 4506 16 view .LVU1645
 6017 0028 FFF7FEFF 		bl	__aeabi_d2f
 6018              	.LVL613:
4507:Core/Src/bno055.c ****         *gravity_z_f = data_f;
 6019              		.loc 1 4507 9 is_stmt 1 view .LVU1646
 6020              		.loc 1 4507 22 is_stmt 0 view .LVU1647
 6021 002c 2060     		str	r0, [r4]	@ float
 6022              	.LVL614:
 6023              	.L452:
4508:Core/Src/bno055.c ****     }
4509:Core/Src/bno055.c ****     else
4510:Core/Src/bno055.c ****     {
4511:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4512:Core/Src/bno055.c ****     }
4513:Core/Src/bno055.c **** 
4514:Core/Src/bno055.c ****     return com_rslt;
 6024              		.loc 1 4514 5 is_stmt 1 view .LVU1648
4515:Core/Src/bno055.c **** }
 6025              		.loc 1 4515 1 is_stmt 0 view .LVU1649
 6026 002e 2846     		mov	r0, r5
 6027 0030 03B0     		add	sp, sp, #12
 6028              	.LCFI199:
 6029              		.cfi_remember_state
 6030              		.cfi_def_cfa_offset 12
 6031              		@ sp needed
 6032 0032 30BD     		pop	{r4, r5, pc}
 6033              	.LVL615:
 6034              	.L453:
 6035              	.LCFI200:
 6036              		.cfi_restore_state
4511:Core/Src/bno055.c ****     }
 6037              		.loc 1 4511 18 view .LVU1650
 6038 0034 4FF0FF35 		mov	r5, #-1
 6039 0038 F9E7     		b	.L452
 6040              	.L456:
 6041 003a 00BF     		.align	2
 6042              	.L455:
 6043 003c 00005940 		.word	1079574528
 6044              		.cfi_endproc
 6045              	.LFE75:
ARM GAS  /tmp/cc9kYR4Z.s 			page 192


 6047              		.section	.text.bno055_convert_float_gravity_xyz_msq,"ax",%progbits
 6048              		.align	1
 6049              		.global	bno055_convert_float_gravity_xyz_msq
 6050              		.syntax unified
 6051              		.thumb
 6052              		.thumb_func
 6054              	bno055_convert_float_gravity_xyz_msq:
 6055              	.LVL616:
 6056              	.LFB76:
4516:Core/Src/bno055.c **** 
4517:Core/Src/bno055.c **** /*!
4518:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
4519:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4520:Core/Src/bno055.c ****  *
4521:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
4522:Core/Src/bno055.c ****  *
4523:Core/Src/bno055.c ****  *  Parameter |    result
4524:Core/Src/bno055.c ****  *  --------- | -----------------
4525:Core/Src/bno055.c ****  *    x       | meterpersecseq data of gravity
4526:Core/Src/bno055.c ****  *    y       | meterpersecseq data of gravity
4527:Core/Src/bno055.c ****  *    z       | meterpersecseq data of gravity
4528:Core/Src/bno055.c ****  *
4529:Core/Src/bno055.c ****  *
4530:Core/Src/bno055.c ****  *  @return results of bus communication function
4531:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4532:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4533:Core/Src/bno055.c ****  *
4534:Core/Src/bno055.c ****  *
4535:Core/Src/bno055.c ****  */
4536:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gravity_xyz_msq(struct bno055_gravity_float_t *gra
4537:Core/Src/bno055.c **** {
 6057              		.loc 1 4537 1 is_stmt 1 view -0
 6058              		.cfi_startproc
 6059              		@ args = 0, pretend = 0, frame = 8
 6060              		@ frame_needed = 0, uses_anonymous_args = 0
 6061              		.loc 1 4537 1 is_stmt 0 view .LVU1652
 6062 0000 30B5     		push	{r4, r5, lr}
 6063              	.LCFI201:
 6064              		.cfi_def_cfa_offset 12
 6065              		.cfi_offset 4, -12
 6066              		.cfi_offset 5, -8
 6067              		.cfi_offset 14, -4
 6068 0002 83B0     		sub	sp, sp, #12
 6069              	.LCFI202:
 6070              		.cfi_def_cfa_offset 24
 6071 0004 0446     		mov	r4, r0
4538:Core/Src/bno055.c ****     /* Variable used to return value of
4539:Core/Src/bno055.c ****      * communication routine*/
4540:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6072              		.loc 1 4540 5 is_stmt 1 view .LVU1653
 6073              	.LVL617:
4541:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 6074              		.loc 1 4541 5 view .LVU1654
 6075              		.loc 1 4541 29 is_stmt 0 view .LVU1655
 6076 0006 0023     		movs	r3, #0
 6077 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6078 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
ARM GAS  /tmp/cc9kYR4Z.s 			page 193


 6079 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4542:Core/Src/bno055.c **** 
4543:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
4544:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 6080              		.loc 1 4544 5 is_stmt 1 view .LVU1656
 6081              		.loc 1 4544 16 is_stmt 0 view .LVU1657
 6082 0014 6846     		mov	r0, sp
 6083              	.LVL618:
 6084              		.loc 1 4544 16 view .LVU1658
 6085 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 6086              	.LVL619:
4545:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6087              		.loc 1 4545 5 is_stmt 1 view .LVU1659
 6088              		.loc 1 4545 8 is_stmt 0 view .LVU1660
 6089 001a 20BB     		cbnz	r0, .L459
 6090 001c 0546     		mov	r5, r0
4546:Core/Src/bno055.c ****     {
4547:Core/Src/bno055.c ****         /* Convert raw gravity xyz to meterpersecseq */
4548:Core/Src/bno055.c ****         gravity_xyz->x = (float)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 6091              		.loc 1 4548 9 is_stmt 1 view .LVU1661
 6092              		.loc 1 4548 52 is_stmt 0 view .LVU1662
 6093 001e BDF90000 		ldrsh	r0, [sp]
 6094              	.LVL620:
 6095              		.loc 1 4548 52 view .LVU1663
 6096 0022 FFF7FEFF 		bl	__aeabi_i2d
 6097              	.LVL621:
 6098 0026 0022     		movs	r2, #0
 6099 0028 104B     		ldr	r3, .L461
 6100 002a FFF7FEFF 		bl	__aeabi_ddiv
 6101              	.LVL622:
 6102              		.loc 1 4548 26 view .LVU1664
 6103 002e FFF7FEFF 		bl	__aeabi_d2f
 6104              	.LVL623:
 6105              		.loc 1 4548 24 view .LVU1665
 6106 0032 2060     		str	r0, [r4]	@ float
4549:Core/Src/bno055.c ****         gravity_xyz->y = (float)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 6107              		.loc 1 4549 9 is_stmt 1 view .LVU1666
 6108              		.loc 1 4549 52 is_stmt 0 view .LVU1667
 6109 0034 BDF90200 		ldrsh	r0, [sp, #2]
 6110 0038 FFF7FEFF 		bl	__aeabi_i2d
 6111              	.LVL624:
 6112 003c 0022     		movs	r2, #0
 6113 003e 0B4B     		ldr	r3, .L461
 6114 0040 FFF7FEFF 		bl	__aeabi_ddiv
 6115              	.LVL625:
 6116              		.loc 1 4549 26 view .LVU1668
 6117 0044 FFF7FEFF 		bl	__aeabi_d2f
 6118              	.LVL626:
 6119              		.loc 1 4549 24 view .LVU1669
 6120 0048 6060     		str	r0, [r4, #4]	@ float
4550:Core/Src/bno055.c ****         gravity_xyz->z = (float)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 6121              		.loc 1 4550 9 is_stmt 1 view .LVU1670
 6122              		.loc 1 4550 52 is_stmt 0 view .LVU1671
 6123 004a BDF90400 		ldrsh	r0, [sp, #4]
 6124 004e FFF7FEFF 		bl	__aeabi_i2d
 6125              	.LVL627:
 6126 0052 0022     		movs	r2, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 194


 6127 0054 054B     		ldr	r3, .L461
 6128 0056 FFF7FEFF 		bl	__aeabi_ddiv
 6129              	.LVL628:
 6130              		.loc 1 4550 26 view .LVU1672
 6131 005a FFF7FEFF 		bl	__aeabi_d2f
 6132              	.LVL629:
 6133              		.loc 1 4550 24 view .LVU1673
 6134 005e A060     		str	r0, [r4, #8]	@ float
 6135              	.L458:
 6136              	.LVL630:
4551:Core/Src/bno055.c ****     }
4552:Core/Src/bno055.c ****     else
4553:Core/Src/bno055.c ****     {
4554:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4555:Core/Src/bno055.c ****     }
4556:Core/Src/bno055.c **** 
4557:Core/Src/bno055.c ****     return com_rslt;
 6137              		.loc 1 4557 5 is_stmt 1 view .LVU1674
4558:Core/Src/bno055.c **** }
 6138              		.loc 1 4558 1 is_stmt 0 view .LVU1675
 6139 0060 2846     		mov	r0, r5
 6140 0062 03B0     		add	sp, sp, #12
 6141              	.LCFI203:
 6142              		.cfi_remember_state
 6143              		.cfi_def_cfa_offset 12
 6144              		@ sp needed
 6145 0064 30BD     		pop	{r4, r5, pc}
 6146              	.LVL631:
 6147              	.L459:
 6148              	.LCFI204:
 6149              		.cfi_restore_state
4554:Core/Src/bno055.c ****     }
 6150              		.loc 1 4554 18 view .LVU1676
 6151 0066 4FF0FF35 		mov	r5, #-1
 6152 006a F9E7     		b	.L458
 6153              	.L462:
 6154              		.align	2
 6155              	.L461:
 6156 006c 00005940 		.word	1079574528
 6157              		.cfi_endproc
 6158              	.LFE76:
 6160              		.section	.text.bno055_convert_double_mag_x_uT,"ax",%progbits
 6161              		.align	1
 6162              		.global	bno055_convert_double_mag_x_uT
 6163              		.syntax unified
 6164              		.thumb
 6165              		.thumb_func
 6167              	bno055_convert_double_mag_x_uT:
 6168              	.LVL632:
 6169              	.LFB87:
4559:Core/Src/bno055.c **** 
4560:Core/Src/bno055.c **** /*!
4561:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4562:Core/Src/bno055.c ****  *  data to Fahrenheit output as float
4563:Core/Src/bno055.c ****  *
4564:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Fahrenheit
4565:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 195


4566:Core/Src/bno055.c ****  *  @return results of bus communication function
4567:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4568:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4569:Core/Src/bno055.c ****  *
4570:Core/Src/bno055.c ****  *
4571:Core/Src/bno055.c ****  */
4572:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_fahrenheit(float *temp_f)
4573:Core/Src/bno055.c **** {
4574:Core/Src/bno055.c ****     /* Variable used to return value of
4575:Core/Src/bno055.c ****      * communication routine*/
4576:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4577:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4578:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4579:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4580:Core/Src/bno055.c **** 
4581:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4582:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4583:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4584:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
4585:Core/Src/bno055.c ****     {
4586:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
4587:Core/Src/bno055.c ****     }
4588:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4589:Core/Src/bno055.c ****     {
4590:Core/Src/bno055.c ****         /* Read the raw temperature data */
4591:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4592:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4593:Core/Src/bno055.c ****         {
4594:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4595:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
4596:Core/Src/bno055.c ****             *temp_f = data_f;
4597:Core/Src/bno055.c ****         }
4598:Core/Src/bno055.c ****         else
4599:Core/Src/bno055.c ****         {
4600:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4601:Core/Src/bno055.c ****         }
4602:Core/Src/bno055.c ****     }
4603:Core/Src/bno055.c ****     else
4604:Core/Src/bno055.c ****     {
4605:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4606:Core/Src/bno055.c ****     }
4607:Core/Src/bno055.c **** 
4608:Core/Src/bno055.c ****     return com_rslt;
4609:Core/Src/bno055.c **** }
4610:Core/Src/bno055.c **** 
4611:Core/Src/bno055.c **** /*!
4612:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4613:Core/Src/bno055.c ****  *  data to Celsius output as float
4614:Core/Src/bno055.c ****  *
4615:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Celsius
4616:Core/Src/bno055.c ****  *
4617:Core/Src/bno055.c ****  *  @return results of bus communication function
4618:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4619:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4620:Core/Src/bno055.c ****  *
4621:Core/Src/bno055.c ****  *
4622:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 196


4623:Core/Src/bno055.c ****  */
4624:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_celsius(float *temp_f)
4625:Core/Src/bno055.c **** {
4626:Core/Src/bno055.c ****     /* Variable used to return value of
4627:Core/Src/bno055.c ****      * communication routine*/
4628:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4629:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4630:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4631:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4632:Core/Src/bno055.c **** 
4633:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4634:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4635:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4636:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
4637:Core/Src/bno055.c ****     {
4638:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
4639:Core/Src/bno055.c ****     }
4640:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4641:Core/Src/bno055.c ****     {
4642:Core/Src/bno055.c ****         /* Read the raw temperature data */
4643:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4644:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4645:Core/Src/bno055.c ****         {
4646:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4647:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
4648:Core/Src/bno055.c ****             *temp_f = data_f;
4649:Core/Src/bno055.c ****         }
4650:Core/Src/bno055.c ****         else
4651:Core/Src/bno055.c ****         {
4652:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4653:Core/Src/bno055.c ****         }
4654:Core/Src/bno055.c ****     }
4655:Core/Src/bno055.c ****     else
4656:Core/Src/bno055.c ****     {
4657:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4658:Core/Src/bno055.c ****     }
4659:Core/Src/bno055.c **** 
4660:Core/Src/bno055.c ****     return com_rslt;
4661:Core/Src/bno055.c **** }
4662:Core/Src/bno055.c **** #endif
4663:Core/Src/bno055.c **** #ifdef  BNO055_DOUBLE_ENABLE
4664:Core/Src/bno055.c **** 
4665:Core/Src/bno055.c **** /*!
4666:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4667:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4668:Core/Src/bno055.c ****  *
4669:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x meterpersecseq data
4670:Core/Src/bno055.c ****  *
4671:Core/Src/bno055.c ****  *
4672:Core/Src/bno055.c ****  *
4673:Core/Src/bno055.c ****  *  @return results of bus communication function
4674:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4675:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4676:Core/Src/bno055.c ****  *
4677:Core/Src/bno055.c ****  *
4678:Core/Src/bno055.c ****  */
4679:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_msq(double *accel_x_d)
ARM GAS  /tmp/cc9kYR4Z.s 			page 197


4680:Core/Src/bno055.c **** {
4681:Core/Src/bno055.c ****     /* Variable used to return value of
4682:Core/Src/bno055.c ****      * communication routine*/
4683:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4684:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4685:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4686:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4687:Core/Src/bno055.c **** 
4688:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4689:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4690:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4691:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4692:Core/Src/bno055.c ****     {
4693:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4694:Core/Src/bno055.c ****     }
4695:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4696:Core/Src/bno055.c ****     {
4697:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4698:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4699:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4700:Core/Src/bno055.c ****         {
4701:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4702:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
4703:Core/Src/bno055.c ****             *accel_x_d = data_f;
4704:Core/Src/bno055.c ****         }
4705:Core/Src/bno055.c ****         else
4706:Core/Src/bno055.c ****         {
4707:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4708:Core/Src/bno055.c ****         }
4709:Core/Src/bno055.c ****     }
4710:Core/Src/bno055.c ****     else
4711:Core/Src/bno055.c ****     {
4712:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4713:Core/Src/bno055.c ****     }
4714:Core/Src/bno055.c **** 
4715:Core/Src/bno055.c ****     return com_rslt;
4716:Core/Src/bno055.c **** }
4717:Core/Src/bno055.c **** 
4718:Core/Src/bno055.c **** /*!
4719:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4720:Core/Src/bno055.c ****  *  to millig output as double
4721:Core/Src/bno055.c ****  *
4722:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x millig data
4723:Core/Src/bno055.c ****  *
4724:Core/Src/bno055.c ****  *
4725:Core/Src/bno055.c ****  *
4726:Core/Src/bno055.c ****  *  @return results of bus communication function
4727:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4728:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4729:Core/Src/bno055.c ****  *
4730:Core/Src/bno055.c ****  *
4731:Core/Src/bno055.c ****  *
4732:Core/Src/bno055.c ****  */
4733:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_mg(double *accel_x_d)
4734:Core/Src/bno055.c **** {
4735:Core/Src/bno055.c ****     /* Variable used to return value of
4736:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 198


4737:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4738:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4739:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4740:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4741:Core/Src/bno055.c **** 
4742:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4743:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4744:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4745:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4746:Core/Src/bno055.c ****     {
4747:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4748:Core/Src/bno055.c ****     }
4749:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4750:Core/Src/bno055.c ****     {
4751:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4752:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4753:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4754:Core/Src/bno055.c ****         {
4755:Core/Src/bno055.c ****             /* Convert the raw x to mg */
4756:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
4757:Core/Src/bno055.c ****             *accel_x_d = data_f;
4758:Core/Src/bno055.c ****         }
4759:Core/Src/bno055.c ****         else
4760:Core/Src/bno055.c ****         {
4761:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4762:Core/Src/bno055.c ****         }
4763:Core/Src/bno055.c ****     }
4764:Core/Src/bno055.c ****     else
4765:Core/Src/bno055.c ****     {
4766:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4767:Core/Src/bno055.c ****     }
4768:Core/Src/bno055.c **** 
4769:Core/Src/bno055.c ****     return com_rslt;
4770:Core/Src/bno055.c **** }
4771:Core/Src/bno055.c **** 
4772:Core/Src/bno055.c **** /*!
4773:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4774:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4775:Core/Src/bno055.c ****  *
4776:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y meterpersecseq data
4777:Core/Src/bno055.c ****  *
4778:Core/Src/bno055.c ****  *
4779:Core/Src/bno055.c ****  *
4780:Core/Src/bno055.c ****  *  @return results of bus communication function
4781:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4782:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4783:Core/Src/bno055.c ****  *
4784:Core/Src/bno055.c ****  *
4785:Core/Src/bno055.c ****  *
4786:Core/Src/bno055.c ****  */
4787:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_msq(double *accel_y_d)
4788:Core/Src/bno055.c **** {
4789:Core/Src/bno055.c ****     /* Variable used to return value of
4790:Core/Src/bno055.c ****      * communication routine*/
4791:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4792:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4793:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 199


4794:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4795:Core/Src/bno055.c **** 
4796:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4797:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4798:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4799:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4800:Core/Src/bno055.c ****     {
4801:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4802:Core/Src/bno055.c ****     }
4803:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4804:Core/Src/bno055.c ****     {
4805:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4806:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4807:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4808:Core/Src/bno055.c ****         {
4809:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4810:Core/Src/bno055.c ****             data_f = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
4811:Core/Src/bno055.c ****             *accel_y_d = data_f;
4812:Core/Src/bno055.c ****         }
4813:Core/Src/bno055.c ****         else
4814:Core/Src/bno055.c ****         {
4815:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4816:Core/Src/bno055.c ****         }
4817:Core/Src/bno055.c ****     }
4818:Core/Src/bno055.c ****     else
4819:Core/Src/bno055.c ****     {
4820:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4821:Core/Src/bno055.c ****     }
4822:Core/Src/bno055.c **** 
4823:Core/Src/bno055.c ****     return com_rslt;
4824:Core/Src/bno055.c **** }
4825:Core/Src/bno055.c **** 
4826:Core/Src/bno055.c **** /*!
4827:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4828:Core/Src/bno055.c ****  *  to millig output as double
4829:Core/Src/bno055.c ****  *
4830:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y millig data
4831:Core/Src/bno055.c ****  *
4832:Core/Src/bno055.c ****  *
4833:Core/Src/bno055.c ****  *
4834:Core/Src/bno055.c ****  *  @return results of bus communication function
4835:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4836:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4837:Core/Src/bno055.c ****  *
4838:Core/Src/bno055.c ****  *
4839:Core/Src/bno055.c ****  */
4840:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_mg(double *accel_y_d)
4841:Core/Src/bno055.c **** {
4842:Core/Src/bno055.c ****     /* Variable used to return value of
4843:Core/Src/bno055.c ****      * communication routine*/
4844:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4845:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4846:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4847:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4848:Core/Src/bno055.c **** 
4849:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4850:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 200


4851:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4852:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4853:Core/Src/bno055.c ****     {
4854:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4855:Core/Src/bno055.c ****     }
4856:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4857:Core/Src/bno055.c ****     {
4858:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4859:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4860:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4861:Core/Src/bno055.c ****         {
4862:Core/Src/bno055.c ****             /* Convert the raw y to mg */
4863:Core/Src/bno055.c ****             data_d = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
4864:Core/Src/bno055.c ****             *accel_y_d = data_d;
4865:Core/Src/bno055.c ****         }
4866:Core/Src/bno055.c ****         else
4867:Core/Src/bno055.c ****         {
4868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4869:Core/Src/bno055.c ****         }
4870:Core/Src/bno055.c ****     }
4871:Core/Src/bno055.c ****     else
4872:Core/Src/bno055.c ****     {
4873:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4874:Core/Src/bno055.c ****     }
4875:Core/Src/bno055.c **** 
4876:Core/Src/bno055.c ****     return com_rslt;
4877:Core/Src/bno055.c **** }
4878:Core/Src/bno055.c **** 
4879:Core/Src/bno055.c **** /*!
4880:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4881:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4882:Core/Src/bno055.c ****  *
4883:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z meterpersecseq data
4884:Core/Src/bno055.c ****  *
4885:Core/Src/bno055.c ****  *
4886:Core/Src/bno055.c ****  *
4887:Core/Src/bno055.c ****  *  @return results of bus communication function
4888:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4889:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4890:Core/Src/bno055.c ****  */
4891:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_msq(double *accel_z_d)
4892:Core/Src/bno055.c **** {
4893:Core/Src/bno055.c ****     /* Variable used to return value of
4894:Core/Src/bno055.c ****      * communication routine*/
4895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4896:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4898:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4899:Core/Src/bno055.c **** 
4900:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4901:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4902:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4903:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4904:Core/Src/bno055.c ****     {
4905:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4906:Core/Src/bno055.c ****     }
4907:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 201


4908:Core/Src/bno055.c ****     {
4909:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4910:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4912:Core/Src/bno055.c ****         {
4913:Core/Src/bno055.c ****             /* Convert the raw z to m/s2 */
4914:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
4915:Core/Src/bno055.c ****             *accel_z_d = data_d;
4916:Core/Src/bno055.c ****         }
4917:Core/Src/bno055.c ****         else
4918:Core/Src/bno055.c ****         {
4919:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4920:Core/Src/bno055.c ****         }
4921:Core/Src/bno055.c ****     }
4922:Core/Src/bno055.c ****     else
4923:Core/Src/bno055.c ****     {
4924:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4925:Core/Src/bno055.c ****     }
4926:Core/Src/bno055.c **** 
4927:Core/Src/bno055.c ****     return com_rslt;
4928:Core/Src/bno055.c **** }
4929:Core/Src/bno055.c **** 
4930:Core/Src/bno055.c **** /*!
4931:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4932:Core/Src/bno055.c ****  *  to millig output as double
4933:Core/Src/bno055.c ****  *
4934:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z millig data
4935:Core/Src/bno055.c ****  *
4936:Core/Src/bno055.c ****  *
4937:Core/Src/bno055.c ****  *
4938:Core/Src/bno055.c ****  *  @return results of bus communication function
4939:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4940:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4941:Core/Src/bno055.c ****  *
4942:Core/Src/bno055.c ****  */
4943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_mg(double *accel_z_d)
4944:Core/Src/bno055.c **** {
4945:Core/Src/bno055.c ****     /* Variable used to return value of
4946:Core/Src/bno055.c ****      * communication routine*/
4947:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4948:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4949:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4950:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4951:Core/Src/bno055.c **** 
4952:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4953:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4954:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4955:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4956:Core/Src/bno055.c ****     {
4957:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4958:Core/Src/bno055.c ****     }
4959:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4960:Core/Src/bno055.c ****     {
4961:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4962:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4963:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4964:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 202


4965:Core/Src/bno055.c ****             /* Convert the raw z to mg */
4966:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
4967:Core/Src/bno055.c ****             *accel_z_d = data_d;
4968:Core/Src/bno055.c ****         }
4969:Core/Src/bno055.c ****         else
4970:Core/Src/bno055.c ****         {
4971:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4972:Core/Src/bno055.c ****         }
4973:Core/Src/bno055.c ****     }
4974:Core/Src/bno055.c ****     else
4975:Core/Src/bno055.c ****     {
4976:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4977:Core/Src/bno055.c ****     }
4978:Core/Src/bno055.c **** 
4979:Core/Src/bno055.c ****     return com_rslt;
4980:Core/Src/bno055.c **** }
4981:Core/Src/bno055.c **** 
4982:Core/Src/bno055.c **** /*!
4983:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
4984:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4985:Core/Src/bno055.c ****  *
4986:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
4987:Core/Src/bno055.c ****  *
4988:Core/Src/bno055.c ****  *  Parameter |    result
4989:Core/Src/bno055.c ****  *  --------- | -----------------
4990:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
4991:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
4992:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
4993:Core/Src/bno055.c ****  *
4994:Core/Src/bno055.c ****  *
4995:Core/Src/bno055.c ****  *  @return results of bus communication function
4996:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4997:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4998:Core/Src/bno055.c ****  *
4999:Core/Src/bno055.c ****  *
5000:Core/Src/bno055.c ****  */
5001:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_msq(struct bno055_accel_double_t *accel
5002:Core/Src/bno055.c **** {
5003:Core/Src/bno055.c ****     /* Variable used to return value of
5004:Core/Src/bno055.c ****      * communication routine*/
5005:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5006:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5007:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5008:Core/Src/bno055.c **** 
5009:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5010:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5011:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5012:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
5013:Core/Src/bno055.c ****     {
5014:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
5015:Core/Src/bno055.c ****     }
5016:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5017:Core/Src/bno055.c ****     {
5018:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5019:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
5020:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5021:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 203


5022:Core/Src/bno055.c ****             /* Convert raw xyz to m/s2*/
5023:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
5024:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
5025:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
5026:Core/Src/bno055.c ****         }
5027:Core/Src/bno055.c ****         else
5028:Core/Src/bno055.c ****         {
5029:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5030:Core/Src/bno055.c ****         }
5031:Core/Src/bno055.c ****     }
5032:Core/Src/bno055.c ****     else
5033:Core/Src/bno055.c ****     {
5034:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5035:Core/Src/bno055.c ****     }
5036:Core/Src/bno055.c **** 
5037:Core/Src/bno055.c ****     return com_rslt;
5038:Core/Src/bno055.c **** }
5039:Core/Src/bno055.c **** 
5040:Core/Src/bno055.c **** /*!
5041:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
5042:Core/Src/bno055.c ****  *  to millig output as double
5043:Core/Src/bno055.c ****  *
5044:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
5045:Core/Src/bno055.c ****  *
5046:Core/Src/bno055.c ****  *  Parameter |    result
5047:Core/Src/bno055.c ****  *  --------- | -----------------
5048:Core/Src/bno055.c ****  *   x        | millig data of accel
5049:Core/Src/bno055.c ****  *   y        | millig data of accel
5050:Core/Src/bno055.c ****  *   z        | millig data of accel
5051:Core/Src/bno055.c ****  *
5052:Core/Src/bno055.c ****  *
5053:Core/Src/bno055.c ****  *  @return results of bus communication function
5054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5056:Core/Src/bno055.c ****  *
5057:Core/Src/bno055.c ****  */
5058:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_mg(struct bno055_accel_double_t *accel_
5059:Core/Src/bno055.c **** {
5060:Core/Src/bno055.c ****     /* Variable used to return value of
5061:Core/Src/bno055.c ****      * communication routine*/
5062:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5063:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5064:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5065:Core/Src/bno055.c **** 
5066:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5067:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5068:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5069:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
5070:Core/Src/bno055.c ****     {
5071:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
5072:Core/Src/bno055.c ****     }
5073:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5074:Core/Src/bno055.c ****     {
5075:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5076:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
5077:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5078:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 204


5079:Core/Src/bno055.c ****             /* Convert raw xyz to mg*/
5080:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
5081:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
5082:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
5083:Core/Src/bno055.c ****         }
5084:Core/Src/bno055.c ****         else
5085:Core/Src/bno055.c ****         {
5086:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5087:Core/Src/bno055.c ****         }
5088:Core/Src/bno055.c ****     }
5089:Core/Src/bno055.c ****     else
5090:Core/Src/bno055.c ****     {
5091:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5092:Core/Src/bno055.c ****     }
5093:Core/Src/bno055.c **** 
5094:Core/Src/bno055.c ****     return com_rslt;
5095:Core/Src/bno055.c **** }
5096:Core/Src/bno055.c **** 
5097:Core/Src/bno055.c **** /*!
5098:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
5099:Core/Src/bno055.c ****  *  to microTesla output as double
5100:Core/Src/bno055.c ****  *
5101:Core/Src/bno055.c ****  *  @param mag_x_d : The mag x microTesla data
5102:Core/Src/bno055.c ****  *
5103:Core/Src/bno055.c ****  *
5104:Core/Src/bno055.c ****  *
5105:Core/Src/bno055.c ****  *  @return results of bus communication function
5106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5108:Core/Src/bno055.c ****  *
5109:Core/Src/bno055.c ****  *
5110:Core/Src/bno055.c ****  *
5111:Core/Src/bno055.c ****  */
5112:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_x_uT(double *mag_x_d)
5113:Core/Src/bno055.c **** {
 6170              		.loc 1 5113 1 is_stmt 1 view -0
 6171              		.cfi_startproc
 6172              		@ args = 0, pretend = 0, frame = 8
 6173              		@ frame_needed = 0, uses_anonymous_args = 0
 6174              		.loc 1 5113 1 is_stmt 0 view .LVU1678
 6175 0000 30B5     		push	{r4, r5, lr}
 6176              	.LCFI205:
 6177              		.cfi_def_cfa_offset 12
 6178              		.cfi_offset 4, -12
 6179              		.cfi_offset 5, -8
 6180              		.cfi_offset 14, -4
 6181 0002 83B0     		sub	sp, sp, #12
 6182              	.LCFI206:
 6183              		.cfi_def_cfa_offset 24
 6184 0004 0446     		mov	r4, r0
5114:Core/Src/bno055.c ****     /* Variable used to return value of
5115:Core/Src/bno055.c ****      * communication routine*/
5116:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6185              		.loc 1 5116 5 is_stmt 1 view .LVU1679
 6186              	.LVL633:
5117:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 6187              		.loc 1 5117 5 view .LVU1680
ARM GAS  /tmp/cc9kYR4Z.s 			page 205


 6188              		.loc 1 5117 9 is_stmt 0 view .LVU1681
 6189 0006 0023     		movs	r3, #0
 6190 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5118:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6191              		.loc 1 5118 5 is_stmt 1 view .LVU1682
 6192              	.LVL634:
5119:Core/Src/bno055.c **** 
5120:Core/Src/bno055.c ****     /* Read raw mag x data */
5121:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 6193              		.loc 1 5121 5 view .LVU1683
 6194              		.loc 1 5121 16 is_stmt 0 view .LVU1684
 6195 000c 0DF10600 		add	r0, sp, #6
 6196              	.LVL635:
 6197              		.loc 1 5121 16 view .LVU1685
 6198 0010 FFF7FEFF 		bl	bno055_read_mag_x
 6199              	.LVL636:
5122:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6200              		.loc 1 5122 5 is_stmt 1 view .LVU1686
 6201              		.loc 1 5122 8 is_stmt 0 view .LVU1687
 6202 0014 68B9     		cbnz	r0, .L465
 6203 0016 0546     		mov	r5, r0
5123:Core/Src/bno055.c ****     {
5124:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5125:Core/Src/bno055.c ****         data_d = (double)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 6204              		.loc 1 5125 9 is_stmt 1 view .LVU1688
 6205              		.loc 1 5125 18 is_stmt 0 view .LVU1689
 6206 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6207              	.LVL637:
 6208              		.loc 1 5125 18 view .LVU1690
 6209 001c FFF7FEFF 		bl	__aeabi_i2d
 6210              	.LVL638:
 6211              		.loc 1 5125 16 view .LVU1691
 6212 0020 0022     		movs	r2, #0
 6213 0022 054B     		ldr	r3, .L467
 6214 0024 FFF7FEFF 		bl	__aeabi_dmul
 6215              	.LVL639:
5126:Core/Src/bno055.c ****         *mag_x_d = data_d;
 6216              		.loc 1 5126 9 is_stmt 1 view .LVU1692
 6217              		.loc 1 5126 18 is_stmt 0 view .LVU1693
 6218 0028 C4E90001 		strd	r0, [r4]
 6219              	.LVL640:
 6220              	.L464:
5127:Core/Src/bno055.c ****     }
5128:Core/Src/bno055.c ****     else
5129:Core/Src/bno055.c ****     {
5130:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5131:Core/Src/bno055.c ****     }
5132:Core/Src/bno055.c **** 
5133:Core/Src/bno055.c ****     return com_rslt;
 6221              		.loc 1 5133 5 is_stmt 1 view .LVU1694
5134:Core/Src/bno055.c **** }
 6222              		.loc 1 5134 1 is_stmt 0 view .LVU1695
 6223 002c 2846     		mov	r0, r5
 6224 002e 03B0     		add	sp, sp, #12
 6225              	.LCFI207:
 6226              		.cfi_remember_state
 6227              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 206


 6228              		@ sp needed
 6229 0030 30BD     		pop	{r4, r5, pc}
 6230              	.LVL641:
 6231              	.L465:
 6232              	.LCFI208:
 6233              		.cfi_restore_state
5130:Core/Src/bno055.c ****     }
 6234              		.loc 1 5130 18 view .LVU1696
 6235 0032 4FF0FF35 		mov	r5, #-1
 6236 0036 F9E7     		b	.L464
 6237              	.L468:
 6238              		.align	2
 6239              	.L467:
 6240 0038 0000B03F 		.word	1068498944
 6241              		.cfi_endproc
 6242              	.LFE87:
 6244              		.section	.text.bno055_convert_double_mag_y_uT,"ax",%progbits
 6245              		.align	1
 6246              		.global	bno055_convert_double_mag_y_uT
 6247              		.syntax unified
 6248              		.thumb
 6249              		.thumb_func
 6251              	bno055_convert_double_mag_y_uT:
 6252              	.LVL642:
 6253              	.LFB88:
5135:Core/Src/bno055.c **** 
5136:Core/Src/bno055.c **** /*!
5137:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
5138:Core/Src/bno055.c ****  *  to microTesla output as double
5139:Core/Src/bno055.c ****  *
5140:Core/Src/bno055.c ****  *  @param mag_y_d : The mag y microTesla data
5141:Core/Src/bno055.c ****  *
5142:Core/Src/bno055.c ****  *
5143:Core/Src/bno055.c ****  *
5144:Core/Src/bno055.c ****  *  @return results of bus communication function
5145:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5146:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5147:Core/Src/bno055.c ****  *
5148:Core/Src/bno055.c ****  *
5149:Core/Src/bno055.c ****  */
5150:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_y_uT(double *mag_y_d)
5151:Core/Src/bno055.c **** {
 6254              		.loc 1 5151 1 is_stmt 1 view -0
 6255              		.cfi_startproc
 6256              		@ args = 0, pretend = 0, frame = 8
 6257              		@ frame_needed = 0, uses_anonymous_args = 0
 6258              		.loc 1 5151 1 is_stmt 0 view .LVU1698
 6259 0000 30B5     		push	{r4, r5, lr}
 6260              	.LCFI209:
 6261              		.cfi_def_cfa_offset 12
 6262              		.cfi_offset 4, -12
 6263              		.cfi_offset 5, -8
 6264              		.cfi_offset 14, -4
 6265 0002 83B0     		sub	sp, sp, #12
 6266              	.LCFI210:
 6267              		.cfi_def_cfa_offset 24
 6268 0004 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 207


5152:Core/Src/bno055.c ****     /* Variable used to return value of
5153:Core/Src/bno055.c ****      * communication routine*/
5154:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6269              		.loc 1 5154 5 is_stmt 1 view .LVU1699
 6270              	.LVL643:
5155:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 6271              		.loc 1 5155 5 view .LVU1700
 6272              		.loc 1 5155 9 is_stmt 0 view .LVU1701
 6273 0006 0023     		movs	r3, #0
 6274 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5156:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6275              		.loc 1 5156 5 is_stmt 1 view .LVU1702
 6276              	.LVL644:
5157:Core/Src/bno055.c **** 
5158:Core/Src/bno055.c ****     /* Read raw mag y data */
5159:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 6277              		.loc 1 5159 5 view .LVU1703
 6278              		.loc 1 5159 16 is_stmt 0 view .LVU1704
 6279 000c 0DF10600 		add	r0, sp, #6
 6280              	.LVL645:
 6281              		.loc 1 5159 16 view .LVU1705
 6282 0010 FFF7FEFF 		bl	bno055_read_mag_y
 6283              	.LVL646:
5160:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6284              		.loc 1 5160 5 is_stmt 1 view .LVU1706
 6285              		.loc 1 5160 8 is_stmt 0 view .LVU1707
 6286 0014 68B9     		cbnz	r0, .L471
 6287 0016 0546     		mov	r5, r0
5161:Core/Src/bno055.c ****     {
5162:Core/Src/bno055.c ****         /* Convert raw mag y to microTesla */
5163:Core/Src/bno055.c ****         data_d = (double)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 6288              		.loc 1 5163 9 is_stmt 1 view .LVU1708
 6289              		.loc 1 5163 18 is_stmt 0 view .LVU1709
 6290 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6291              	.LVL647:
 6292              		.loc 1 5163 18 view .LVU1710
 6293 001c FFF7FEFF 		bl	__aeabi_i2d
 6294              	.LVL648:
 6295              		.loc 1 5163 16 view .LVU1711
 6296 0020 0022     		movs	r2, #0
 6297 0022 054B     		ldr	r3, .L473
 6298 0024 FFF7FEFF 		bl	__aeabi_dmul
 6299              	.LVL649:
5164:Core/Src/bno055.c ****         *mag_y_d = data_d;
 6300              		.loc 1 5164 9 is_stmt 1 view .LVU1712
 6301              		.loc 1 5164 18 is_stmt 0 view .LVU1713
 6302 0028 C4E90001 		strd	r0, [r4]
 6303              	.LVL650:
 6304              	.L470:
5165:Core/Src/bno055.c ****     }
5166:Core/Src/bno055.c ****     else
5167:Core/Src/bno055.c ****     {
5168:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5169:Core/Src/bno055.c ****     }
5170:Core/Src/bno055.c **** 
5171:Core/Src/bno055.c ****     return com_rslt;
 6305              		.loc 1 5171 5 is_stmt 1 view .LVU1714
ARM GAS  /tmp/cc9kYR4Z.s 			page 208


5172:Core/Src/bno055.c **** }
 6306              		.loc 1 5172 1 is_stmt 0 view .LVU1715
 6307 002c 2846     		mov	r0, r5
 6308 002e 03B0     		add	sp, sp, #12
 6309              	.LCFI211:
 6310              		.cfi_remember_state
 6311              		.cfi_def_cfa_offset 12
 6312              		@ sp needed
 6313 0030 30BD     		pop	{r4, r5, pc}
 6314              	.LVL651:
 6315              	.L471:
 6316              	.LCFI212:
 6317              		.cfi_restore_state
5168:Core/Src/bno055.c ****     }
 6318              		.loc 1 5168 18 view .LVU1716
 6319 0032 4FF0FF35 		mov	r5, #-1
 6320 0036 F9E7     		b	.L470
 6321              	.L474:
 6322              		.align	2
 6323              	.L473:
 6324 0038 0000B03F 		.word	1068498944
 6325              		.cfi_endproc
 6326              	.LFE88:
 6328              		.section	.text.bno055_convert_double_mag_z_uT,"ax",%progbits
 6329              		.align	1
 6330              		.global	bno055_convert_double_mag_z_uT
 6331              		.syntax unified
 6332              		.thumb
 6333              		.thumb_func
 6335              	bno055_convert_double_mag_z_uT:
 6336              	.LVL652:
 6337              	.LFB89:
5173:Core/Src/bno055.c **** 
5174:Core/Src/bno055.c **** /*!
5175:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
5176:Core/Src/bno055.c ****  *  to microTesla output as double
5177:Core/Src/bno055.c ****  *
5178:Core/Src/bno055.c ****  *  @param mag_z_d : The mag z microTesla data
5179:Core/Src/bno055.c ****  *
5180:Core/Src/bno055.c ****  *
5181:Core/Src/bno055.c ****  *
5182:Core/Src/bno055.c ****  *  @return results of bus communication function
5183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5185:Core/Src/bno055.c ****  *
5186:Core/Src/bno055.c ****  *
5187:Core/Src/bno055.c ****  */
5188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_z_uT(double *mag_z_d)
5189:Core/Src/bno055.c **** {
 6338              		.loc 1 5189 1 is_stmt 1 view -0
 6339              		.cfi_startproc
 6340              		@ args = 0, pretend = 0, frame = 8
 6341              		@ frame_needed = 0, uses_anonymous_args = 0
 6342              		.loc 1 5189 1 is_stmt 0 view .LVU1718
 6343 0000 30B5     		push	{r4, r5, lr}
 6344              	.LCFI213:
 6345              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 209


 6346              		.cfi_offset 4, -12
 6347              		.cfi_offset 5, -8
 6348              		.cfi_offset 14, -4
 6349 0002 83B0     		sub	sp, sp, #12
 6350              	.LCFI214:
 6351              		.cfi_def_cfa_offset 24
 6352 0004 0446     		mov	r4, r0
5190:Core/Src/bno055.c ****     /* Variable used to return value of
5191:Core/Src/bno055.c ****      * communication routine*/
5192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6353              		.loc 1 5192 5 is_stmt 1 view .LVU1719
 6354              	.LVL653:
5193:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 6355              		.loc 1 5193 5 view .LVU1720
 6356              		.loc 1 5193 9 is_stmt 0 view .LVU1721
 6357 0006 0023     		movs	r3, #0
 6358 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5194:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6359              		.loc 1 5194 5 is_stmt 1 view .LVU1722
 6360              	.LVL654:
5195:Core/Src/bno055.c **** 
5196:Core/Src/bno055.c ****     /* Read raw mag x */
5197:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 6361              		.loc 1 5197 5 view .LVU1723
 6362              		.loc 1 5197 16 is_stmt 0 view .LVU1724
 6363 000c 0DF10600 		add	r0, sp, #6
 6364              	.LVL655:
 6365              		.loc 1 5197 16 view .LVU1725
 6366 0010 FFF7FEFF 		bl	bno055_read_mag_z
 6367              	.LVL656:
5198:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6368              		.loc 1 5198 5 is_stmt 1 view .LVU1726
 6369              		.loc 1 5198 8 is_stmt 0 view .LVU1727
 6370 0014 68B9     		cbnz	r0, .L477
 6371 0016 0546     		mov	r5, r0
5199:Core/Src/bno055.c ****     {
5200:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5201:Core/Src/bno055.c ****         data_d = (double)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 6372              		.loc 1 5201 9 is_stmt 1 view .LVU1728
 6373              		.loc 1 5201 18 is_stmt 0 view .LVU1729
 6374 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6375              	.LVL657:
 6376              		.loc 1 5201 18 view .LVU1730
 6377 001c FFF7FEFF 		bl	__aeabi_i2d
 6378              	.LVL658:
 6379              		.loc 1 5201 16 view .LVU1731
 6380 0020 0022     		movs	r2, #0
 6381 0022 054B     		ldr	r3, .L479
 6382 0024 FFF7FEFF 		bl	__aeabi_dmul
 6383              	.LVL659:
5202:Core/Src/bno055.c ****         *mag_z_d = data_d;
 6384              		.loc 1 5202 9 is_stmt 1 view .LVU1732
 6385              		.loc 1 5202 18 is_stmt 0 view .LVU1733
 6386 0028 C4E90001 		strd	r0, [r4]
 6387              	.LVL660:
 6388              	.L476:
5203:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 210


5204:Core/Src/bno055.c ****     else
5205:Core/Src/bno055.c ****     {
5206:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5207:Core/Src/bno055.c ****     }
5208:Core/Src/bno055.c **** 
5209:Core/Src/bno055.c ****     return com_rslt;
 6389              		.loc 1 5209 5 is_stmt 1 view .LVU1734
5210:Core/Src/bno055.c **** }
 6390              		.loc 1 5210 1 is_stmt 0 view .LVU1735
 6391 002c 2846     		mov	r0, r5
 6392 002e 03B0     		add	sp, sp, #12
 6393              	.LCFI215:
 6394              		.cfi_remember_state
 6395              		.cfi_def_cfa_offset 12
 6396              		@ sp needed
 6397 0030 30BD     		pop	{r4, r5, pc}
 6398              	.LVL661:
 6399              	.L477:
 6400              	.LCFI216:
 6401              		.cfi_restore_state
5206:Core/Src/bno055.c ****     }
 6402              		.loc 1 5206 18 view .LVU1736
 6403 0032 4FF0FF35 		mov	r5, #-1
 6404 0036 F9E7     		b	.L476
 6405              	.L480:
 6406              		.align	2
 6407              	.L479:
 6408 0038 0000B03F 		.word	1068498944
 6409              		.cfi_endproc
 6410              	.LFE89:
 6412              		.section	.text.bno055_convert_double_mag_xyz_uT,"ax",%progbits
 6413              		.align	1
 6414              		.global	bno055_convert_double_mag_xyz_uT
 6415              		.syntax unified
 6416              		.thumb
 6417              		.thumb_func
 6419              	bno055_convert_double_mag_xyz_uT:
 6420              	.LVL662:
 6421              	.LFB90:
5211:Core/Src/bno055.c **** 
5212:Core/Src/bno055.c **** /*!
5213:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
5214:Core/Src/bno055.c ****  *  to microTesla output as double
5215:Core/Src/bno055.c ****  *
5216:Core/Src/bno055.c ****  *  @param mag_xyz : The microTesla data of mag xyz
5217:Core/Src/bno055.c ****  *
5218:Core/Src/bno055.c ****  *  Parameter |    result
5219:Core/Src/bno055.c ****  *  --------- | -----------------
5220:Core/Src/bno055.c ****  *   x        | microTesla data of mag
5221:Core/Src/bno055.c ****  *   y        | microTesla data of mag
5222:Core/Src/bno055.c ****  *   z        | microTesla data of mag
5223:Core/Src/bno055.c ****  *
5224:Core/Src/bno055.c ****  *
5225:Core/Src/bno055.c ****  *  @return results of bus communication function
5226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5228:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 211


5229:Core/Src/bno055.c ****  */
5230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_xyz_uT(struct bno055_mag_double_t *mag_xyz)
5231:Core/Src/bno055.c **** {
 6422              		.loc 1 5231 1 is_stmt 1 view -0
 6423              		.cfi_startproc
 6424              		@ args = 0, pretend = 0, frame = 8
 6425              		@ frame_needed = 0, uses_anonymous_args = 0
 6426              		.loc 1 5231 1 is_stmt 0 view .LVU1738
 6427 0000 30B5     		push	{r4, r5, lr}
 6428              	.LCFI217:
 6429              		.cfi_def_cfa_offset 12
 6430              		.cfi_offset 4, -12
 6431              		.cfi_offset 5, -8
 6432              		.cfi_offset 14, -4
 6433 0002 83B0     		sub	sp, sp, #12
 6434              	.LCFI218:
 6435              		.cfi_def_cfa_offset 24
 6436 0004 0446     		mov	r4, r0
5232:Core/Src/bno055.c ****     /* Variable used to return value of
5233:Core/Src/bno055.c ****      * communication routine*/
5234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6437              		.loc 1 5234 5 is_stmt 1 view .LVU1739
 6438              	.LVL663:
5235:Core/Src/bno055.c ****     struct bno055_mag_t reg_mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 6439              		.loc 1 5235 5 view .LVU1740
 6440              		.loc 1 5235 25 is_stmt 0 view .LVU1741
 6441 0006 0023     		movs	r3, #0
 6442 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6443 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6444 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
5236:Core/Src/bno055.c **** 
5237:Core/Src/bno055.c ****     /* Read raw mag xyz data */
5238:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&reg_mag_xyz);
 6445              		.loc 1 5238 5 is_stmt 1 view .LVU1742
 6446              		.loc 1 5238 16 is_stmt 0 view .LVU1743
 6447 0014 6846     		mov	r0, sp
 6448              	.LVL664:
 6449              		.loc 1 5238 16 view .LVU1744
 6450 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 6451              	.LVL665:
5239:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6452              		.loc 1 5239 5 is_stmt 1 view .LVU1745
 6453              		.loc 1 5239 8 is_stmt 0 view .LVU1746
 6454 001a 08BB     		cbnz	r0, .L483
 6455 001c 0546     		mov	r5, r0
5240:Core/Src/bno055.c ****     {
5241:Core/Src/bno055.c ****         /* Convert raw mag xyz to microTesla*/
5242:Core/Src/bno055.c ****         mag_xyz->x = (double)(reg_mag_xyz.x / BNO055_MAG_DIV_UT);
 6456              		.loc 1 5242 9 is_stmt 1 view .LVU1747
 6457              		.loc 1 5242 22 is_stmt 0 view .LVU1748
 6458 001e BDF90000 		ldrsh	r0, [sp]
 6459              	.LVL666:
 6460              		.loc 1 5242 22 view .LVU1749
 6461 0022 FFF7FEFF 		bl	__aeabi_i2d
 6462              	.LVL667:
 6463 0026 0022     		movs	r2, #0
 6464 0028 0F4B     		ldr	r3, .L485
ARM GAS  /tmp/cc9kYR4Z.s 			page 212


 6465 002a FFF7FEFF 		bl	__aeabi_dmul
 6466              	.LVL668:
 6467              		.loc 1 5242 20 view .LVU1750
 6468 002e C4E90001 		strd	r0, [r4]
5243:Core/Src/bno055.c ****         mag_xyz->y = (double)(reg_mag_xyz.y / BNO055_MAG_DIV_UT);
 6469              		.loc 1 5243 9 is_stmt 1 view .LVU1751
 6470              		.loc 1 5243 22 is_stmt 0 view .LVU1752
 6471 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6472 0036 FFF7FEFF 		bl	__aeabi_i2d
 6473              	.LVL669:
 6474 003a 0022     		movs	r2, #0
 6475 003c 0A4B     		ldr	r3, .L485
 6476 003e FFF7FEFF 		bl	__aeabi_dmul
 6477              	.LVL670:
 6478              		.loc 1 5243 20 view .LVU1753
 6479 0042 C4E90201 		strd	r0, [r4, #8]
5244:Core/Src/bno055.c ****         mag_xyz->z = (double)(reg_mag_xyz.z / BNO055_MAG_DIV_UT);
 6480              		.loc 1 5244 9 is_stmt 1 view .LVU1754
 6481              		.loc 1 5244 22 is_stmt 0 view .LVU1755
 6482 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6483 004a FFF7FEFF 		bl	__aeabi_i2d
 6484              	.LVL671:
 6485 004e 0022     		movs	r2, #0
 6486 0050 054B     		ldr	r3, .L485
 6487 0052 FFF7FEFF 		bl	__aeabi_dmul
 6488              	.LVL672:
 6489              		.loc 1 5244 20 view .LVU1756
 6490 0056 C4E90401 		strd	r0, [r4, #16]
 6491              	.L482:
 6492              	.LVL673:
5245:Core/Src/bno055.c ****     }
5246:Core/Src/bno055.c ****     else
5247:Core/Src/bno055.c ****     {
5248:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5249:Core/Src/bno055.c ****     }
5250:Core/Src/bno055.c **** 
5251:Core/Src/bno055.c ****     return com_rslt;
 6493              		.loc 1 5251 5 is_stmt 1 view .LVU1757
5252:Core/Src/bno055.c **** }
 6494              		.loc 1 5252 1 is_stmt 0 view .LVU1758
 6495 005a 2846     		mov	r0, r5
 6496 005c 03B0     		add	sp, sp, #12
 6497              	.LCFI219:
 6498              		.cfi_remember_state
 6499              		.cfi_def_cfa_offset 12
 6500              		@ sp needed
 6501 005e 30BD     		pop	{r4, r5, pc}
 6502              	.LVL674:
 6503              	.L483:
 6504              	.LCFI220:
 6505              		.cfi_restore_state
5248:Core/Src/bno055.c ****     }
 6506              		.loc 1 5248 18 view .LVU1759
 6507 0060 4FF0FF35 		mov	r5, #-1
 6508 0064 F9E7     		b	.L482
 6509              	.L486:
 6510 0066 00BF     		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 213


 6511              	.L485:
 6512 0068 0000B03F 		.word	1068498944
 6513              		.cfi_endproc
 6514              	.LFE90:
 6516              		.section	.text.bno055_convert_double_linear_accel_x_msq,"ax",%progbits
 6517              		.align	1
 6518              		.global	bno055_convert_double_linear_accel_x_msq
 6519              		.syntax unified
 6520              		.thumb
 6521              		.thumb_func
 6523              	bno055_convert_double_linear_accel_x_msq:
 6524              	.LVL675:
 6525              	.LFB107:
5253:Core/Src/bno055.c **** 
5254:Core/Src/bno055.c **** /*!
5255:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5256:Core/Src/bno055.c ****  *  to dps output as double
5257:Core/Src/bno055.c ****  *
5258:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5259:Core/Src/bno055.c ****  *
5260:Core/Src/bno055.c ****  *
5261:Core/Src/bno055.c ****  *
5262:Core/Src/bno055.c ****  *  @return results of bus communication function
5263:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5264:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5265:Core/Src/bno055.c ****  *
5266:Core/Src/bno055.c ****  *
5267:Core/Src/bno055.c ****  */
5268:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_dps(double *gyro_x_d)
5269:Core/Src/bno055.c **** {
5270:Core/Src/bno055.c ****     /* Variable used to return value of
5271:Core/Src/bno055.c ****      * communication routine*/
5272:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5273:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5274:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5275:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5276:Core/Src/bno055.c **** 
5277:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5278:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5279:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5280:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5281:Core/Src/bno055.c ****     {
5282:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5283:Core/Src/bno055.c ****     }
5284:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5285:Core/Src/bno055.c ****     {
5286:Core/Src/bno055.c ****         /* Read gyro raw x data */
5287:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5288:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5289:Core/Src/bno055.c ****         {
5290:Core/Src/bno055.c ****             /* Convert raw gyro x to dps */
5291:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
5292:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5293:Core/Src/bno055.c ****         }
5294:Core/Src/bno055.c ****         else
5295:Core/Src/bno055.c ****         {
5296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 214


5297:Core/Src/bno055.c ****         }
5298:Core/Src/bno055.c ****     }
5299:Core/Src/bno055.c ****     else
5300:Core/Src/bno055.c ****     {
5301:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5302:Core/Src/bno055.c ****     }
5303:Core/Src/bno055.c **** 
5304:Core/Src/bno055.c ****     return com_rslt;
5305:Core/Src/bno055.c **** }
5306:Core/Src/bno055.c **** 
5307:Core/Src/bno055.c **** /*!
5308:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5309:Core/Src/bno055.c ****  *  to rps output as double
5310:Core/Src/bno055.c ****  *
5311:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5312:Core/Src/bno055.c ****  *
5313:Core/Src/bno055.c ****  *
5314:Core/Src/bno055.c ****  *
5315:Core/Src/bno055.c ****  *  @return results of bus communication function
5316:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5317:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5318:Core/Src/bno055.c ****  *
5319:Core/Src/bno055.c ****  *
5320:Core/Src/bno055.c ****  */
5321:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_rps(double *gyro_x_d)
5322:Core/Src/bno055.c **** {
5323:Core/Src/bno055.c ****     /* Variable used to return value of
5324:Core/Src/bno055.c ****      * communication routine*/
5325:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5326:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5327:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5328:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5329:Core/Src/bno055.c **** 
5330:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5331:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5332:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5333:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5334:Core/Src/bno055.c ****     {
5335:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5336:Core/Src/bno055.c ****     }
5337:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5338:Core/Src/bno055.c ****     {
5339:Core/Src/bno055.c ****         /* Read gyro raw x data */
5340:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5341:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5342:Core/Src/bno055.c ****         {
5343:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5344:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
5345:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5346:Core/Src/bno055.c ****         }
5347:Core/Src/bno055.c ****         else
5348:Core/Src/bno055.c ****         {
5349:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5350:Core/Src/bno055.c ****         }
5351:Core/Src/bno055.c ****     }
5352:Core/Src/bno055.c ****     else
5353:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 215


5354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5355:Core/Src/bno055.c ****     }
5356:Core/Src/bno055.c **** 
5357:Core/Src/bno055.c ****     return com_rslt;
5358:Core/Src/bno055.c **** }
5359:Core/Src/bno055.c **** 
5360:Core/Src/bno055.c **** /*!
5361:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5362:Core/Src/bno055.c ****  *  to dps output as double
5363:Core/Src/bno055.c ****  *
5364:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5365:Core/Src/bno055.c ****  *
5366:Core/Src/bno055.c ****  *
5367:Core/Src/bno055.c ****  *
5368:Core/Src/bno055.c ****  *  @return results of bus communication function
5369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5371:Core/Src/bno055.c ****  *
5372:Core/Src/bno055.c ****  *
5373:Core/Src/bno055.c ****  */
5374:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_dps(double *gyro_y_d)
5375:Core/Src/bno055.c **** {
5376:Core/Src/bno055.c ****     /* Variable used to return value of
5377:Core/Src/bno055.c ****      * communication routine*/
5378:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5379:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5380:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5381:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5382:Core/Src/bno055.c **** 
5383:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5384:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5385:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5386:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5387:Core/Src/bno055.c ****     {
5388:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5389:Core/Src/bno055.c ****     }
5390:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5391:Core/Src/bno055.c ****     {
5392:Core/Src/bno055.c ****         /* Read gyro raw y data */
5393:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5394:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5395:Core/Src/bno055.c ****         {
5396:Core/Src/bno055.c ****             /* Convert raw gyro y to dps */
5397:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
5398:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5399:Core/Src/bno055.c ****         }
5400:Core/Src/bno055.c ****         else
5401:Core/Src/bno055.c ****         {
5402:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5403:Core/Src/bno055.c ****         }
5404:Core/Src/bno055.c ****     }
5405:Core/Src/bno055.c ****     else
5406:Core/Src/bno055.c ****     {
5407:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5408:Core/Src/bno055.c ****     }
5409:Core/Src/bno055.c **** 
5410:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 216


5411:Core/Src/bno055.c **** }
5412:Core/Src/bno055.c **** 
5413:Core/Src/bno055.c **** /*!
5414:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5415:Core/Src/bno055.c ****  *  to rps output as double
5416:Core/Src/bno055.c ****  *
5417:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5418:Core/Src/bno055.c ****  *
5419:Core/Src/bno055.c ****  *
5420:Core/Src/bno055.c ****  *
5421:Core/Src/bno055.c ****  *  @return results of bus communication function
5422:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5423:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5424:Core/Src/bno055.c ****  *
5425:Core/Src/bno055.c ****  *
5426:Core/Src/bno055.c ****  */
5427:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_rps(double *gyro_y_d)
5428:Core/Src/bno055.c **** {
5429:Core/Src/bno055.c ****     /* Variable used to return value of
5430:Core/Src/bno055.c ****      * communication routine*/
5431:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5432:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5433:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5434:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5435:Core/Src/bno055.c **** 
5436:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5437:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5438:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5439:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5440:Core/Src/bno055.c ****     {
5441:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5442:Core/Src/bno055.c ****     }
5443:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5444:Core/Src/bno055.c ****     {
5445:Core/Src/bno055.c ****         /* Read gyro raw y data */
5446:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5447:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5448:Core/Src/bno055.c ****         {
5449:Core/Src/bno055.c ****             /* Convert raw gyro y to rps */
5450:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
5451:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5452:Core/Src/bno055.c ****         }
5453:Core/Src/bno055.c ****         else
5454:Core/Src/bno055.c ****         {
5455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5456:Core/Src/bno055.c ****         }
5457:Core/Src/bno055.c ****     }
5458:Core/Src/bno055.c ****     else
5459:Core/Src/bno055.c ****     {
5460:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5461:Core/Src/bno055.c ****     }
5462:Core/Src/bno055.c **** 
5463:Core/Src/bno055.c ****     return com_rslt;
5464:Core/Src/bno055.c **** }
5465:Core/Src/bno055.c **** 
5466:Core/Src/bno055.c **** /*!
5467:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
ARM GAS  /tmp/cc9kYR4Z.s 			page 217


5468:Core/Src/bno055.c ****  *  to dps output as double
5469:Core/Src/bno055.c ****  *
5470:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z dps double data
5471:Core/Src/bno055.c ****  *
5472:Core/Src/bno055.c ****  *
5473:Core/Src/bno055.c ****  *
5474:Core/Src/bno055.c ****  *  @return results of bus communication function
5475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5477:Core/Src/bno055.c ****  *
5478:Core/Src/bno055.c ****  *
5479:Core/Src/bno055.c ****  */
5480:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_dps(double *gyro_z_d)
5481:Core/Src/bno055.c **** {
5482:Core/Src/bno055.c ****     /* Variable used to return value of
5483:Core/Src/bno055.c ****      * communication routine*/
5484:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5485:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5486:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5487:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5488:Core/Src/bno055.c **** 
5489:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5490:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5491:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5492:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5493:Core/Src/bno055.c ****     {
5494:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5495:Core/Src/bno055.c ****     }
5496:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5497:Core/Src/bno055.c ****     {
5498:Core/Src/bno055.c ****         /* Read gyro raw z data */
5499:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5500:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5501:Core/Src/bno055.c ****         {
5502:Core/Src/bno055.c ****             /* Convert raw gyro z to dps */
5503:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
5504:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5505:Core/Src/bno055.c ****         }
5506:Core/Src/bno055.c ****         else
5507:Core/Src/bno055.c ****         {
5508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5509:Core/Src/bno055.c ****         }
5510:Core/Src/bno055.c ****     }
5511:Core/Src/bno055.c ****     else
5512:Core/Src/bno055.c ****     {
5513:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5514:Core/Src/bno055.c ****     }
5515:Core/Src/bno055.c **** 
5516:Core/Src/bno055.c ****     return com_rslt;
5517:Core/Src/bno055.c **** }
5518:Core/Src/bno055.c **** 
5519:Core/Src/bno055.c **** /*!
5520:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5521:Core/Src/bno055.c ****  *  to rps output as double
5522:Core/Src/bno055.c ****  *
5523:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z rps double data
5524:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 218


5525:Core/Src/bno055.c ****  *
5526:Core/Src/bno055.c ****  *
5527:Core/Src/bno055.c ****  *  @return results of bus communication function
5528:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5529:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5530:Core/Src/bno055.c ****  *
5531:Core/Src/bno055.c ****  *
5532:Core/Src/bno055.c ****  */
5533:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_rps(double *gyro_z_d)
5534:Core/Src/bno055.c **** {
5535:Core/Src/bno055.c ****     /* Variable used to return value of
5536:Core/Src/bno055.c ****      * communication routine*/
5537:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5538:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5539:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5540:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5541:Core/Src/bno055.c **** 
5542:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5543:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5544:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5545:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5546:Core/Src/bno055.c ****     {
5547:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5548:Core/Src/bno055.c ****     }
5549:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5550:Core/Src/bno055.c ****     {
5551:Core/Src/bno055.c ****         /* Read gyro raw x data */
5552:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5553:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5554:Core/Src/bno055.c ****         {
5555:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5556:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
5557:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5558:Core/Src/bno055.c ****         }
5559:Core/Src/bno055.c ****         else
5560:Core/Src/bno055.c ****         {
5561:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5562:Core/Src/bno055.c ****         }
5563:Core/Src/bno055.c ****     }
5564:Core/Src/bno055.c ****     else
5565:Core/Src/bno055.c ****     {
5566:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5567:Core/Src/bno055.c ****     }
5568:Core/Src/bno055.c **** 
5569:Core/Src/bno055.c ****     return com_rslt;
5570:Core/Src/bno055.c **** }
5571:Core/Src/bno055.c **** 
5572:Core/Src/bno055.c **** /*!
5573:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5574:Core/Src/bno055.c ****  *  to dps output as double
5575:Core/Src/bno055.c ****  *
5576:Core/Src/bno055.c ****  *  @param gyro_xyz : The dps data of gyro xyz
5577:Core/Src/bno055.c ****  *
5578:Core/Src/bno055.c ****  *  Parameter |    result
5579:Core/Src/bno055.c ****  *  --------- | -----------------
5580:Core/Src/bno055.c ****  *   x        | dps data of gyro
5581:Core/Src/bno055.c ****  *   y        | dps data of gyro
ARM GAS  /tmp/cc9kYR4Z.s 			page 219


5582:Core/Src/bno055.c ****  *   z        | dps data of gyro
5583:Core/Src/bno055.c ****  *
5584:Core/Src/bno055.c ****  *
5585:Core/Src/bno055.c ****  *  @return results of bus communication function
5586:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5587:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5588:Core/Src/bno055.c ****  *
5589:Core/Src/bno055.c ****  */
5590:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_dps(struct bno055_gyro_double_t *gyro_xy
5591:Core/Src/bno055.c **** {
5592:Core/Src/bno055.c ****     /* Variable used to return value of
5593:Core/Src/bno055.c ****      * communication routine*/
5594:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5595:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5596:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5597:Core/Src/bno055.c **** 
5598:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5599:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5600:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5601:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5602:Core/Src/bno055.c ****     {
5603:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5604:Core/Src/bno055.c ****     }
5605:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5606:Core/Src/bno055.c ****     {
5607:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
5608:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5609:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5610:Core/Src/bno055.c ****         {
5611:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
5612:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_DPS);
5613:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
5614:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
5615:Core/Src/bno055.c ****         }
5616:Core/Src/bno055.c ****         else
5617:Core/Src/bno055.c ****         {
5618:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5619:Core/Src/bno055.c ****         }
5620:Core/Src/bno055.c ****     }
5621:Core/Src/bno055.c ****     else
5622:Core/Src/bno055.c ****     {
5623:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5624:Core/Src/bno055.c ****     }
5625:Core/Src/bno055.c **** 
5626:Core/Src/bno055.c ****     return com_rslt;
5627:Core/Src/bno055.c **** }
5628:Core/Src/bno055.c **** 
5629:Core/Src/bno055.c **** /*!
5630:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5631:Core/Src/bno055.c ****  *  to rps output as double
5632:Core/Src/bno055.c ****  *
5633:Core/Src/bno055.c ****  *  @param gyro_xyz : The rps data of gyro xyz
5634:Core/Src/bno055.c ****  *
5635:Core/Src/bno055.c ****  *  Parameter |    result
5636:Core/Src/bno055.c ****  *  --------- | -----------------
5637:Core/Src/bno055.c ****  *   x        | rps data of gyro
5638:Core/Src/bno055.c ****  *   y        | rps data of gyro
ARM GAS  /tmp/cc9kYR4Z.s 			page 220


5639:Core/Src/bno055.c ****  *   z        | rps data of gyro
5640:Core/Src/bno055.c ****  *
5641:Core/Src/bno055.c ****  *
5642:Core/Src/bno055.c ****  *  @return results of bus communication function
5643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5645:Core/Src/bno055.c ****  *
5646:Core/Src/bno055.c ****  */
5647:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_rps(struct bno055_gyro_double_t *gyro_xy
5648:Core/Src/bno055.c **** {
5649:Core/Src/bno055.c ****     /* Variable used to return value of
5650:Core/Src/bno055.c ****      * communication routine*/
5651:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5652:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5653:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5654:Core/Src/bno055.c **** 
5655:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5656:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5657:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5658:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5659:Core/Src/bno055.c ****     {
5660:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5661:Core/Src/bno055.c ****     }
5662:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5663:Core/Src/bno055.c ****     {
5664:Core/Src/bno055.c ****         /* Read gyro raw x data */
5665:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5666:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5667:Core/Src/bno055.c ****         {
5668:Core/Src/bno055.c ****             /* Convert the raw gyro xyz to rps*/
5669:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_RPS);
5670:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
5671:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
5672:Core/Src/bno055.c ****         }
5673:Core/Src/bno055.c ****         else
5674:Core/Src/bno055.c ****         {
5675:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5676:Core/Src/bno055.c ****         }
5677:Core/Src/bno055.c ****     }
5678:Core/Src/bno055.c ****     else
5679:Core/Src/bno055.c ****     {
5680:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5681:Core/Src/bno055.c ****     }
5682:Core/Src/bno055.c **** 
5683:Core/Src/bno055.c ****     return com_rslt;
5684:Core/Src/bno055.c **** }
5685:Core/Src/bno055.c **** 
5686:Core/Src/bno055.c **** /*!
5687:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5688:Core/Src/bno055.c ****  *  to degree output as double
5689:Core/Src/bno055.c ****  *
5690:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h degree
5691:Core/Src/bno055.c ****  *
5692:Core/Src/bno055.c ****  *  @return results of bus communication function
5693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5695:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 221


5696:Core/Src/bno055.c ****  *
5697:Core/Src/bno055.c ****  */
5698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_deg(double *euler_h_d)
5699:Core/Src/bno055.c **** {
5700:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5701:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
5702:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5703:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5704:Core/Src/bno055.c **** 
5705:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5706:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5707:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5708:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5709:Core/Src/bno055.c ****     {
5710:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5711:Core/Src/bno055.c ****     }
5712:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5713:Core/Src/bno055.c ****     {
5714:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5715:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5716:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5717:Core/Src/bno055.c ****         {
5718:Core/Src/bno055.c ****             /* Convert raw Euler h to degree */
5719:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
5720:Core/Src/bno055.c ****             *euler_h_d = data_d;
5721:Core/Src/bno055.c ****         }
5722:Core/Src/bno055.c ****         else
5723:Core/Src/bno055.c ****         {
5724:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5725:Core/Src/bno055.c ****         }
5726:Core/Src/bno055.c ****     }
5727:Core/Src/bno055.c ****     else
5728:Core/Src/bno055.c ****     {
5729:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5730:Core/Src/bno055.c ****     }
5731:Core/Src/bno055.c **** 
5732:Core/Src/bno055.c ****     return com_rslt;
5733:Core/Src/bno055.c **** }
5734:Core/Src/bno055.c **** 
5735:Core/Src/bno055.c **** /*!
5736:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5737:Core/Src/bno055.c ****  *  to radians output as double
5738:Core/Src/bno055.c ****  *
5739:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h radians
5740:Core/Src/bno055.c ****  *
5741:Core/Src/bno055.c ****  *  @return results of bus communication function
5742:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5743:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5744:Core/Src/bno055.c ****  *
5745:Core/Src/bno055.c ****  *
5746:Core/Src/bno055.c ****  */
5747:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_rad(double *euler_h_d)
5748:Core/Src/bno055.c **** {
5749:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5750:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
5751:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5752:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 222


5753:Core/Src/bno055.c **** 
5754:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5755:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5756:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5757:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5758:Core/Src/bno055.c ****     {
5759:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5760:Core/Src/bno055.c ****     }
5761:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5762:Core/Src/bno055.c ****     {
5763:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5764:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5765:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5766:Core/Src/bno055.c ****         {
5767:Core/Src/bno055.c ****             /* Convert raw Euler h to radians */
5768:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
5769:Core/Src/bno055.c ****             *euler_h_d = data_d;
5770:Core/Src/bno055.c ****         }
5771:Core/Src/bno055.c ****         else
5772:Core/Src/bno055.c ****         {
5773:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5774:Core/Src/bno055.c ****         }
5775:Core/Src/bno055.c ****     }
5776:Core/Src/bno055.c ****     else
5777:Core/Src/bno055.c ****     {
5778:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5779:Core/Src/bno055.c ****     }
5780:Core/Src/bno055.c **** 
5781:Core/Src/bno055.c ****     return com_rslt;
5782:Core/Src/bno055.c **** }
5783:Core/Src/bno055.c **** 
5784:Core/Src/bno055.c **** /*!
5785:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5786:Core/Src/bno055.c ****  *  to degree output as double
5787:Core/Src/bno055.c ****  *
5788:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r degree
5789:Core/Src/bno055.c ****  *
5790:Core/Src/bno055.c ****  *  @return results of bus communication function
5791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5793:Core/Src/bno055.c ****  *
5794:Core/Src/bno055.c ****  *
5795:Core/Src/bno055.c ****  */
5796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_deg(double *euler_r_d)
5797:Core/Src/bno055.c **** {
5798:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5799:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5800:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5801:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5802:Core/Src/bno055.c **** 
5803:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5804:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5805:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5806:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5807:Core/Src/bno055.c ****     {
5808:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5809:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 223


5810:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5811:Core/Src/bno055.c ****     {
5812:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5813:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5814:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5815:Core/Src/bno055.c ****         {
5816:Core/Src/bno055.c ****             /* Convert raw Euler r to degree */
5817:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_DEG);
5818:Core/Src/bno055.c ****             *euler_r_d = data_d;
5819:Core/Src/bno055.c ****         }
5820:Core/Src/bno055.c ****         else
5821:Core/Src/bno055.c ****         {
5822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5823:Core/Src/bno055.c ****         }
5824:Core/Src/bno055.c ****     }
5825:Core/Src/bno055.c ****     else
5826:Core/Src/bno055.c ****     {
5827:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5828:Core/Src/bno055.c ****     }
5829:Core/Src/bno055.c **** 
5830:Core/Src/bno055.c ****     return com_rslt;
5831:Core/Src/bno055.c **** }
5832:Core/Src/bno055.c **** 
5833:Core/Src/bno055.c **** /*!
5834:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5835:Core/Src/bno055.c ****  *  to radians output as double
5836:Core/Src/bno055.c ****  *
5837:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r radians
5838:Core/Src/bno055.c ****  *
5839:Core/Src/bno055.c ****  *  @return results of bus communication function
5840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5842:Core/Src/bno055.c ****  *
5843:Core/Src/bno055.c ****  *
5844:Core/Src/bno055.c ****  */
5845:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_rad(double *euler_r_d)
5846:Core/Src/bno055.c **** {
5847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5848:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5849:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5850:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5851:Core/Src/bno055.c **** 
5852:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5853:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5854:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5855:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5856:Core/Src/bno055.c ****     {
5857:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5858:Core/Src/bno055.c ****     }
5859:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5860:Core/Src/bno055.c ****     {
5861:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5862:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5863:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5864:Core/Src/bno055.c ****         {
5865:Core/Src/bno055.c ****             /* Convert raw Euler r to radians */
5866:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_RAD);
ARM GAS  /tmp/cc9kYR4Z.s 			page 224


5867:Core/Src/bno055.c ****             *euler_r_d = data_d;
5868:Core/Src/bno055.c ****         }
5869:Core/Src/bno055.c ****         else
5870:Core/Src/bno055.c ****         {
5871:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5872:Core/Src/bno055.c ****         }
5873:Core/Src/bno055.c ****     }
5874:Core/Src/bno055.c ****     else
5875:Core/Src/bno055.c ****     {
5876:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5877:Core/Src/bno055.c ****     }
5878:Core/Src/bno055.c **** 
5879:Core/Src/bno055.c ****     return com_rslt;
5880:Core/Src/bno055.c **** }
5881:Core/Src/bno055.c **** 
5882:Core/Src/bno055.c **** /*!
5883:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5884:Core/Src/bno055.c ****  *  to degree output as double
5885:Core/Src/bno055.c ****  *
5886:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p degree
5887:Core/Src/bno055.c ****  *
5888:Core/Src/bno055.c ****  *  @return results of bus communication function
5889:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5890:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5891:Core/Src/bno055.c ****  *
5892:Core/Src/bno055.c ****  *
5893:Core/Src/bno055.c ****  */
5894:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_deg(double *euler_p_d)
5895:Core/Src/bno055.c **** {
5896:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5897:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5898:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5899:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5900:Core/Src/bno055.c **** 
5901:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5902:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5903:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5904:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5905:Core/Src/bno055.c ****     {
5906:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5907:Core/Src/bno055.c ****     }
5908:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5909:Core/Src/bno055.c ****     {
5910:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5911:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5912:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5913:Core/Src/bno055.c ****         {
5914:Core/Src/bno055.c ****             /* Convert raw Euler p to degree*/
5915:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_DEG);
5916:Core/Src/bno055.c ****             *euler_p_d = data_d;
5917:Core/Src/bno055.c ****         }
5918:Core/Src/bno055.c ****         else
5919:Core/Src/bno055.c ****         {
5920:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5921:Core/Src/bno055.c ****         }
5922:Core/Src/bno055.c ****     }
5923:Core/Src/bno055.c ****     else
ARM GAS  /tmp/cc9kYR4Z.s 			page 225


5924:Core/Src/bno055.c ****     {
5925:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5926:Core/Src/bno055.c ****     }
5927:Core/Src/bno055.c **** 
5928:Core/Src/bno055.c ****     return com_rslt;
5929:Core/Src/bno055.c **** }
5930:Core/Src/bno055.c **** 
5931:Core/Src/bno055.c **** /*!
5932:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5933:Core/Src/bno055.c ****  *  to radians output as double
5934:Core/Src/bno055.c ****  *
5935:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p radians
5936:Core/Src/bno055.c ****  *
5937:Core/Src/bno055.c ****  *  @return results of bus communication function
5938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5940:Core/Src/bno055.c ****  *
5941:Core/Src/bno055.c ****  *
5942:Core/Src/bno055.c ****  */
5943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_rad(double *euler_p_d)
5944:Core/Src/bno055.c **** {
5945:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5946:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5947:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5948:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5949:Core/Src/bno055.c **** 
5950:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5951:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5952:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5953:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5954:Core/Src/bno055.c ****     {
5955:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5956:Core/Src/bno055.c ****     }
5957:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5958:Core/Src/bno055.c ****     {
5959:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5960:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5961:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5962:Core/Src/bno055.c ****         {
5963:Core/Src/bno055.c ****             /* Convert raw p to radians*/
5964:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_RAD);
5965:Core/Src/bno055.c ****             *euler_p_d = data_d;
5966:Core/Src/bno055.c ****         }
5967:Core/Src/bno055.c ****         else
5968:Core/Src/bno055.c ****         {
5969:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5970:Core/Src/bno055.c ****         }
5971:Core/Src/bno055.c ****     }
5972:Core/Src/bno055.c ****     else
5973:Core/Src/bno055.c ****     {
5974:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5975:Core/Src/bno055.c ****     }
5976:Core/Src/bno055.c **** 
5977:Core/Src/bno055.c ****     return com_rslt;
5978:Core/Src/bno055.c **** }
5979:Core/Src/bno055.c **** 
5980:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/cc9kYR4Z.s 			page 226


5981:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
5982:Core/Src/bno055.c ****  *  to degree output as double
5983:Core/Src/bno055.c ****  *
5984:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hpr
5985:Core/Src/bno055.c ****  *
5986:Core/Src/bno055.c ****  *  Parameter |    result
5987:Core/Src/bno055.c ****  *  --------- | -----------------
5988:Core/Src/bno055.c ****  *   h        | degree data of Euler
5989:Core/Src/bno055.c ****  *   r        | degree data of Euler
5990:Core/Src/bno055.c ****  *   p        | degree data of Euler
5991:Core/Src/bno055.c ****  *
5992:Core/Src/bno055.c ****  *
5993:Core/Src/bno055.c ****  *  @return results of bus communication function
5994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5996:Core/Src/bno055.c ****  *
5997:Core/Src/bno055.c ****  */
5998:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_deg(struct bno055_euler_double_t *euler
5999:Core/Src/bno055.c **** {
6000:Core/Src/bno055.c ****     /* Variable used to return value of
6001:Core/Src/bno055.c ****      * communication routine*/
6002:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6003:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6004:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6005:Core/Src/bno055.c **** 
6006:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6007:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
6008:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6009:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
6010:Core/Src/bno055.c ****     {
6011:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
6012:Core/Src/bno055.c ****     }
6013:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6014:Core/Src/bno055.c ****     {
6015:Core/Src/bno055.c ****         /* Read Euler raw h data*/
6016:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
6017:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6018:Core/Src/bno055.c ****         {
6019:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
6020:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_DEG);
6021:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
6022:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
6023:Core/Src/bno055.c ****         }
6024:Core/Src/bno055.c ****         else
6025:Core/Src/bno055.c ****         {
6026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6027:Core/Src/bno055.c ****         }
6028:Core/Src/bno055.c ****     }
6029:Core/Src/bno055.c ****     else
6030:Core/Src/bno055.c ****     {
6031:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6032:Core/Src/bno055.c ****     }
6033:Core/Src/bno055.c **** 
6034:Core/Src/bno055.c ****     return com_rslt;
6035:Core/Src/bno055.c **** }
6036:Core/Src/bno055.c **** 
6037:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/cc9kYR4Z.s 			page 227


6038:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
6039:Core/Src/bno055.c ****  *  to radians output as double
6040:Core/Src/bno055.c ****  *
6041:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hpr
6042:Core/Src/bno055.c ****  *
6043:Core/Src/bno055.c ****  *  Parameter |    result
6044:Core/Src/bno055.c ****  *  --------- | -----------------
6045:Core/Src/bno055.c ****  *   h        | radians data of Euler
6046:Core/Src/bno055.c ****  *   r        | radians data of Euler
6047:Core/Src/bno055.c ****  *   p        | radians data of Euler
6048:Core/Src/bno055.c ****  *
6049:Core/Src/bno055.c ****  *
6050:Core/Src/bno055.c ****  *  @return results of bus communication function
6051:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6052:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6053:Core/Src/bno055.c ****  *
6054:Core/Src/bno055.c ****  */
6055:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_rad(struct bno055_euler_double_t *euler
6056:Core/Src/bno055.c **** {
6057:Core/Src/bno055.c ****     /* Variable used to return value of
6058:Core/Src/bno055.c ****      * communication routine*/
6059:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6060:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6061:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6062:Core/Src/bno055.c **** 
6063:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6064:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
6065:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6066:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
6067:Core/Src/bno055.c ****     {
6068:Core/Src/bno055.c ****         com_rslt = bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
6069:Core/Src/bno055.c ****     }
6070:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6071:Core/Src/bno055.c ****     {
6072:Core/Src/bno055.c ****         /* Read the raw hrp */
6073:Core/Src/bno055.c ****         com_rslt = bno055_read_euler_hrp(&reg_euler);
6074:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6075:Core/Src/bno055.c ****         {
6076:Core/Src/bno055.c ****             /* Convert raw Euler hrp to radians*/
6077:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_RAD);
6078:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
6079:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
6080:Core/Src/bno055.c ****         }
6081:Core/Src/bno055.c ****         else
6082:Core/Src/bno055.c ****         {
6083:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6084:Core/Src/bno055.c ****         }
6085:Core/Src/bno055.c ****     }
6086:Core/Src/bno055.c ****     else
6087:Core/Src/bno055.c ****     {
6088:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6089:Core/Src/bno055.c ****     }
6090:Core/Src/bno055.c **** 
6091:Core/Src/bno055.c ****     return com_rslt;
6092:Core/Src/bno055.c **** }
6093:Core/Src/bno055.c **** 
6094:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/cc9kYR4Z.s 			page 228


6095:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6096:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as double
6097:Core/Src/bno055.c ****  *
6098:Core/Src/bno055.c ****  *  @param linear_accel_x_d : The double value of
6099:Core/Src/bno055.c ****  *  linear accel x meterpersecseq
6100:Core/Src/bno055.c ****  *
6101:Core/Src/bno055.c ****  *  @return results of bus communication function
6102:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6103:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6104:Core/Src/bno055.c ****  *
6105:Core/Src/bno055.c ****  *
6106:Core/Src/bno055.c ****  */
6107:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_x_msq(double *linear_accel_x_d)
6108:Core/Src/bno055.c **** {
 6526              		.loc 1 6108 1 is_stmt 1 view -0
 6527              		.cfi_startproc
 6528              		@ args = 0, pretend = 0, frame = 8
 6529              		@ frame_needed = 0, uses_anonymous_args = 0
 6530              		.loc 1 6108 1 is_stmt 0 view .LVU1761
 6531 0000 30B5     		push	{r4, r5, lr}
 6532              	.LCFI221:
 6533              		.cfi_def_cfa_offset 12
 6534              		.cfi_offset 4, -12
 6535              		.cfi_offset 5, -8
 6536              		.cfi_offset 14, -4
 6537 0002 83B0     		sub	sp, sp, #12
 6538              	.LCFI222:
 6539              		.cfi_def_cfa_offset 24
 6540 0004 0446     		mov	r4, r0
6109:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6541              		.loc 1 6109 5 is_stmt 1 view .LVU1762
 6542              	.LVL676:
6110:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 6543              		.loc 1 6110 5 view .LVU1763
 6544              		.loc 1 6110 9 is_stmt 0 view .LVU1764
 6545 0006 0023     		movs	r3, #0
 6546 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6111:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6547              		.loc 1 6111 5 is_stmt 1 view .LVU1765
 6548              	.LVL677:
6112:Core/Src/bno055.c **** 
6113:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6114:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 6549              		.loc 1 6114 5 view .LVU1766
 6550              		.loc 1 6114 16 is_stmt 0 view .LVU1767
 6551 000c 0DF10600 		add	r0, sp, #6
 6552              	.LVL678:
 6553              		.loc 1 6114 16 view .LVU1768
 6554 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 6555              	.LVL679:
6115:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6556              		.loc 1 6115 5 is_stmt 1 view .LVU1769
 6557              		.loc 1 6115 8 is_stmt 0 view .LVU1770
 6558 0014 68B9     		cbnz	r0, .L489
 6559 0016 0546     		mov	r5, r0
6116:Core/Src/bno055.c ****     {
6117:Core/Src/bno055.c ****         /* Convert the raw x to m/s2 */
ARM GAS  /tmp/cc9kYR4Z.s 			page 229


6118:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6560              		.loc 1 6118 9 is_stmt 1 view .LVU1771
 6561              		.loc 1 6118 18 is_stmt 0 view .LVU1772
 6562 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6563              	.LVL680:
 6564              		.loc 1 6118 18 view .LVU1773
 6565 001c FFF7FEFF 		bl	__aeabi_i2d
 6566              	.LVL681:
 6567              		.loc 1 6118 16 view .LVU1774
 6568 0020 0022     		movs	r2, #0
 6569 0022 054B     		ldr	r3, .L491
 6570 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6571              	.LVL682:
6119:Core/Src/bno055.c ****         *linear_accel_x_d = data_d;
 6572              		.loc 1 6119 9 is_stmt 1 view .LVU1775
 6573              		.loc 1 6119 27 is_stmt 0 view .LVU1776
 6574 0028 C4E90001 		strd	r0, [r4]
 6575              	.LVL683:
 6576              	.L488:
6120:Core/Src/bno055.c ****     }
6121:Core/Src/bno055.c ****     else
6122:Core/Src/bno055.c ****     {
6123:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6124:Core/Src/bno055.c ****     }
6125:Core/Src/bno055.c **** 
6126:Core/Src/bno055.c ****     return com_rslt;
 6577              		.loc 1 6126 5 is_stmt 1 view .LVU1777
6127:Core/Src/bno055.c **** }
 6578              		.loc 1 6127 1 is_stmt 0 view .LVU1778
 6579 002c 2846     		mov	r0, r5
 6580 002e 03B0     		add	sp, sp, #12
 6581              	.LCFI223:
 6582              		.cfi_remember_state
 6583              		.cfi_def_cfa_offset 12
 6584              		@ sp needed
 6585 0030 30BD     		pop	{r4, r5, pc}
 6586              	.LVL684:
 6587              	.L489:
 6588              	.LCFI224:
 6589              		.cfi_restore_state
6123:Core/Src/bno055.c ****     }
 6590              		.loc 1 6123 18 view .LVU1779
 6591 0032 4FF0FF35 		mov	r5, #-1
 6592 0036 F9E7     		b	.L488
 6593              	.L492:
 6594              		.align	2
 6595              	.L491:
 6596 0038 00005940 		.word	1079574528
 6597              		.cfi_endproc
 6598              	.LFE107:
 6600              		.section	.text.bno055_convert_double_linear_accel_y_msq,"ax",%progbits
 6601              		.align	1
 6602              		.global	bno055_convert_double_linear_accel_y_msq
 6603              		.syntax unified
 6604              		.thumb
 6605              		.thumb_func
 6607              	bno055_convert_double_linear_accel_y_msq:
ARM GAS  /tmp/cc9kYR4Z.s 			page 230


 6608              	.LVL685:
 6609              	.LFB108:
6128:Core/Src/bno055.c **** 
6129:Core/Src/bno055.c **** /*!
6130:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6131:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as double
6132:Core/Src/bno055.c ****  *
6133:Core/Src/bno055.c ****  *  @param linear_accel_y_d : The double value of
6134:Core/Src/bno055.c ****  *  linear accel y meterpersecseq
6135:Core/Src/bno055.c ****  *
6136:Core/Src/bno055.c ****  *  @return results of bus communication function
6137:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6138:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6139:Core/Src/bno055.c ****  *
6140:Core/Src/bno055.c ****  *
6141:Core/Src/bno055.c ****  */
6142:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_y_msq(double *linear_accel_y_d)
6143:Core/Src/bno055.c **** {
 6610              		.loc 1 6143 1 is_stmt 1 view -0
 6611              		.cfi_startproc
 6612              		@ args = 0, pretend = 0, frame = 8
 6613              		@ frame_needed = 0, uses_anonymous_args = 0
 6614              		.loc 1 6143 1 is_stmt 0 view .LVU1781
 6615 0000 30B5     		push	{r4, r5, lr}
 6616              	.LCFI225:
 6617              		.cfi_def_cfa_offset 12
 6618              		.cfi_offset 4, -12
 6619              		.cfi_offset 5, -8
 6620              		.cfi_offset 14, -4
 6621 0002 83B0     		sub	sp, sp, #12
 6622              	.LCFI226:
 6623              		.cfi_def_cfa_offset 24
 6624 0004 0446     		mov	r4, r0
6144:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6625              		.loc 1 6144 5 is_stmt 1 view .LVU1782
 6626              	.LVL686:
6145:Core/Src/bno055.c ****     s16 reg_linear_accel_y_s16 = BNO055_INIT_VALUE;
 6627              		.loc 1 6145 5 view .LVU1783
 6628              		.loc 1 6145 9 is_stmt 0 view .LVU1784
 6629 0006 0023     		movs	r3, #0
 6630 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6146:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6631              		.loc 1 6146 5 is_stmt 1 view .LVU1785
 6632              	.LVL687:
6147:Core/Src/bno055.c **** 
6148:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6149:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y_s16);
 6633              		.loc 1 6149 5 view .LVU1786
 6634              		.loc 1 6149 16 is_stmt 0 view .LVU1787
 6635 000c 0DF10600 		add	r0, sp, #6
 6636              	.LVL688:
 6637              		.loc 1 6149 16 view .LVU1788
 6638 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 6639              	.LVL689:
6150:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6640              		.loc 1 6150 5 is_stmt 1 view .LVU1789
 6641              		.loc 1 6150 8 is_stmt 0 view .LVU1790
ARM GAS  /tmp/cc9kYR4Z.s 			page 231


 6642 0014 68B9     		cbnz	r0, .L495
 6643 0016 0546     		mov	r5, r0
6151:Core/Src/bno055.c ****     {
6152:Core/Src/bno055.c ****         /* Convert the raw y to m/s2 */
6153:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_y_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6644              		.loc 1 6153 9 is_stmt 1 view .LVU1791
 6645              		.loc 1 6153 18 is_stmt 0 view .LVU1792
 6646 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6647              	.LVL690:
 6648              		.loc 1 6153 18 view .LVU1793
 6649 001c FFF7FEFF 		bl	__aeabi_i2d
 6650              	.LVL691:
 6651              		.loc 1 6153 16 view .LVU1794
 6652 0020 0022     		movs	r2, #0
 6653 0022 054B     		ldr	r3, .L497
 6654 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6655              	.LVL692:
6154:Core/Src/bno055.c ****         *linear_accel_y_d = data_d;
 6656              		.loc 1 6154 9 is_stmt 1 view .LVU1795
 6657              		.loc 1 6154 27 is_stmt 0 view .LVU1796
 6658 0028 C4E90001 		strd	r0, [r4]
 6659              	.LVL693:
 6660              	.L494:
6155:Core/Src/bno055.c ****     }
6156:Core/Src/bno055.c ****     else
6157:Core/Src/bno055.c ****     {
6158:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6159:Core/Src/bno055.c ****     }
6160:Core/Src/bno055.c **** 
6161:Core/Src/bno055.c ****     return com_rslt;
 6661              		.loc 1 6161 5 is_stmt 1 view .LVU1797
6162:Core/Src/bno055.c **** }
 6662              		.loc 1 6162 1 is_stmt 0 view .LVU1798
 6663 002c 2846     		mov	r0, r5
 6664 002e 03B0     		add	sp, sp, #12
 6665              	.LCFI227:
 6666              		.cfi_remember_state
 6667              		.cfi_def_cfa_offset 12
 6668              		@ sp needed
 6669 0030 30BD     		pop	{r4, r5, pc}
 6670              	.LVL694:
 6671              	.L495:
 6672              	.LCFI228:
 6673              		.cfi_restore_state
6158:Core/Src/bno055.c ****     }
 6674              		.loc 1 6158 18 view .LVU1799
 6675 0032 4FF0FF35 		mov	r5, #-1
 6676 0036 F9E7     		b	.L494
 6677              	.L498:
 6678              		.align	2
 6679              	.L497:
 6680 0038 00005940 		.word	1079574528
 6681              		.cfi_endproc
 6682              	.LFE108:
 6684              		.section	.text.bno055_convert_double_linear_accel_z_msq,"ax",%progbits
 6685              		.align	1
 6686              		.global	bno055_convert_double_linear_accel_z_msq
ARM GAS  /tmp/cc9kYR4Z.s 			page 232


 6687              		.syntax unified
 6688              		.thumb
 6689              		.thumb_func
 6691              	bno055_convert_double_linear_accel_z_msq:
 6692              	.LVL695:
 6693              	.LFB109:
6163:Core/Src/bno055.c **** 
6164:Core/Src/bno055.c **** /*!
6165:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6166:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as double
6167:Core/Src/bno055.c ****  *
6168:Core/Src/bno055.c ****  *  @param linear_accel_z_d : The double value of
6169:Core/Src/bno055.c ****  *  linear accel z meterpersecseq
6170:Core/Src/bno055.c ****  *
6171:Core/Src/bno055.c ****  *  @return results of bus communication function
6172:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6173:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6174:Core/Src/bno055.c ****  *
6175:Core/Src/bno055.c ****  *
6176:Core/Src/bno055.c ****  */
6177:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_z_msq(double *linear_accel_z_d)
6178:Core/Src/bno055.c **** {
 6694              		.loc 1 6178 1 is_stmt 1 view -0
 6695              		.cfi_startproc
 6696              		@ args = 0, pretend = 0, frame = 8
 6697              		@ frame_needed = 0, uses_anonymous_args = 0
 6698              		.loc 1 6178 1 is_stmt 0 view .LVU1801
 6699 0000 30B5     		push	{r4, r5, lr}
 6700              	.LCFI229:
 6701              		.cfi_def_cfa_offset 12
 6702              		.cfi_offset 4, -12
 6703              		.cfi_offset 5, -8
 6704              		.cfi_offset 14, -4
 6705 0002 83B0     		sub	sp, sp, #12
 6706              	.LCFI230:
 6707              		.cfi_def_cfa_offset 24
 6708 0004 0446     		mov	r4, r0
6179:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6709              		.loc 1 6179 5 is_stmt 1 view .LVU1802
 6710              	.LVL696:
6180:Core/Src/bno055.c ****     s16 reg_linear_accel_z_s16 = BNO055_INIT_VALUE;
 6711              		.loc 1 6180 5 view .LVU1803
 6712              		.loc 1 6180 9 is_stmt 0 view .LVU1804
 6713 0006 0023     		movs	r3, #0
 6714 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6181:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6715              		.loc 1 6181 5 is_stmt 1 view .LVU1805
 6716              	.LVL697:
6182:Core/Src/bno055.c **** 
6183:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6184:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z_s16);
 6717              		.loc 1 6184 5 view .LVU1806
 6718              		.loc 1 6184 16 is_stmt 0 view .LVU1807
 6719 000c 0DF10600 		add	r0, sp, #6
 6720              	.LVL698:
 6721              		.loc 1 6184 16 view .LVU1808
 6722 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
ARM GAS  /tmp/cc9kYR4Z.s 			page 233


 6723              	.LVL699:
6185:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6724              		.loc 1 6185 5 is_stmt 1 view .LVU1809
 6725              		.loc 1 6185 8 is_stmt 0 view .LVU1810
 6726 0014 68B9     		cbnz	r0, .L501
 6727 0016 0546     		mov	r5, r0
6186:Core/Src/bno055.c ****     {
6187:Core/Src/bno055.c ****         /* Convert the raw z to m/s2 */
6188:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_z_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6728              		.loc 1 6188 9 is_stmt 1 view .LVU1811
 6729              		.loc 1 6188 18 is_stmt 0 view .LVU1812
 6730 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6731              	.LVL700:
 6732              		.loc 1 6188 18 view .LVU1813
 6733 001c FFF7FEFF 		bl	__aeabi_i2d
 6734              	.LVL701:
 6735              		.loc 1 6188 16 view .LVU1814
 6736 0020 0022     		movs	r2, #0
 6737 0022 054B     		ldr	r3, .L503
 6738 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6739              	.LVL702:
6189:Core/Src/bno055.c ****         *linear_accel_z_d = data_d;
 6740              		.loc 1 6189 9 is_stmt 1 view .LVU1815
 6741              		.loc 1 6189 27 is_stmt 0 view .LVU1816
 6742 0028 C4E90001 		strd	r0, [r4]
 6743              	.LVL703:
 6744              	.L500:
6190:Core/Src/bno055.c ****     }
6191:Core/Src/bno055.c ****     else
6192:Core/Src/bno055.c ****     {
6193:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6194:Core/Src/bno055.c ****     }
6195:Core/Src/bno055.c **** 
6196:Core/Src/bno055.c ****     return com_rslt;
 6745              		.loc 1 6196 5 is_stmt 1 view .LVU1817
6197:Core/Src/bno055.c **** }
 6746              		.loc 1 6197 1 is_stmt 0 view .LVU1818
 6747 002c 2846     		mov	r0, r5
 6748 002e 03B0     		add	sp, sp, #12
 6749              	.LCFI231:
 6750              		.cfi_remember_state
 6751              		.cfi_def_cfa_offset 12
 6752              		@ sp needed
 6753 0030 30BD     		pop	{r4, r5, pc}
 6754              	.LVL704:
 6755              	.L501:
 6756              	.LCFI232:
 6757              		.cfi_restore_state
6193:Core/Src/bno055.c ****     }
 6758              		.loc 1 6193 18 view .LVU1819
 6759 0032 4FF0FF35 		mov	r5, #-1
 6760 0036 F9E7     		b	.L500
 6761              	.L504:
 6762              		.align	2
 6763              	.L503:
 6764 0038 00005940 		.word	1079574528
 6765              		.cfi_endproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 234


 6766              	.LFE109:
 6768              		.section	.text.bno055_convert_double_linear_accel_xyz_msq,"ax",%progbits
 6769              		.align	1
 6770              		.global	bno055_convert_double_linear_accel_xyz_msq
 6771              		.syntax unified
 6772              		.thumb
 6773              		.thumb_func
 6775              	bno055_convert_double_linear_accel_xyz_msq:
 6776              	.LVL705:
 6777              	.LFB110:
6198:Core/Src/bno055.c **** 
6199:Core/Src/bno055.c **** /*!
6200:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
6201:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6202:Core/Src/bno055.c ****  *
6203:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
6204:Core/Src/bno055.c ****  *
6205:Core/Src/bno055.c ****  *  Parameter |    result
6206:Core/Src/bno055.c ****  *  --------- | -----------------
6207:Core/Src/bno055.c ****  *   x        | meterpersecseq data of linear accel
6208:Core/Src/bno055.c ****  *   y        | meterpersecseq data of linear accel
6209:Core/Src/bno055.c ****  *   z        | meterpersecseq data of linear accel
6210:Core/Src/bno055.c ****  *
6211:Core/Src/bno055.c ****  *
6212:Core/Src/bno055.c ****  *  @return results of bus communication function
6213:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6214:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6215:Core/Src/bno055.c ****  *
6216:Core/Src/bno055.c ****  */
6217:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_xyz_msq(
6218:Core/Src/bno055.c ****     struct bno055_linear_accel_double_t *linear_accel_xyz)
6219:Core/Src/bno055.c **** {
 6778              		.loc 1 6219 1 is_stmt 1 view -0
 6779              		.cfi_startproc
 6780              		@ args = 0, pretend = 0, frame = 8
 6781              		@ frame_needed = 0, uses_anonymous_args = 0
 6782              		.loc 1 6219 1 is_stmt 0 view .LVU1821
 6783 0000 30B5     		push	{r4, r5, lr}
 6784              	.LCFI233:
 6785              		.cfi_def_cfa_offset 12
 6786              		.cfi_offset 4, -12
 6787              		.cfi_offset 5, -8
 6788              		.cfi_offset 14, -4
 6789 0002 83B0     		sub	sp, sp, #12
 6790              	.LCFI234:
 6791              		.cfi_def_cfa_offset 24
 6792 0004 0446     		mov	r4, r0
6220:Core/Src/bno055.c ****     /* Variable used to return value of
6221:Core/Src/bno055.c ****      * communication routine*/
6222:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6793              		.loc 1 6222 5 is_stmt 1 view .LVU1822
 6794              	.LVL706:
6223:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO
 6795              		.loc 1 6223 5 view .LVU1823
 6796              		.loc 1 6223 34 is_stmt 0 view .LVU1824
 6797 0006 0023     		movs	r3, #0
 6798 0008 ADF80030 		strh	r3, [sp]	@ movhi
ARM GAS  /tmp/cc9kYR4Z.s 			page 235


 6799 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6800 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6224:Core/Src/bno055.c **** 
6225:Core/Src/bno055.c ****     /* Read the raw xyz of linear accel */
6226:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel_xyz);
 6801              		.loc 1 6226 5 is_stmt 1 view .LVU1825
 6802              		.loc 1 6226 16 is_stmt 0 view .LVU1826
 6803 0014 6846     		mov	r0, sp
 6804              	.LVL707:
 6805              		.loc 1 6226 16 view .LVU1827
 6806 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 6807              	.LVL708:
6227:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6808              		.loc 1 6227 5 is_stmt 1 view .LVU1828
 6809              		.loc 1 6227 8 is_stmt 0 view .LVU1829
 6810 001a 08BB     		cbnz	r0, .L507
 6811 001c 0546     		mov	r5, r0
6228:Core/Src/bno055.c ****     {
6229:Core/Src/bno055.c ****         /* Convert the raw xyz of linear accel to m/s2 */
6230:Core/Src/bno055.c ****         linear_accel_xyz->x = (double)(reg_linear_accel_xyz.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6812              		.loc 1 6230 9 is_stmt 1 view .LVU1830
 6813              		.loc 1 6230 31 is_stmt 0 view .LVU1831
 6814 001e BDF90000 		ldrsh	r0, [sp]
 6815              	.LVL709:
 6816              		.loc 1 6230 31 view .LVU1832
 6817 0022 FFF7FEFF 		bl	__aeabi_i2d
 6818              	.LVL710:
 6819 0026 0022     		movs	r2, #0
 6820 0028 0F4B     		ldr	r3, .L509
 6821 002a FFF7FEFF 		bl	__aeabi_ddiv
 6822              	.LVL711:
 6823              		.loc 1 6230 29 view .LVU1833
 6824 002e C4E90001 		strd	r0, [r4]
6231:Core/Src/bno055.c ****         linear_accel_xyz->y = (double)(reg_linear_accel_xyz.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6825              		.loc 1 6231 9 is_stmt 1 view .LVU1834
 6826              		.loc 1 6231 31 is_stmt 0 view .LVU1835
 6827 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6828 0036 FFF7FEFF 		bl	__aeabi_i2d
 6829              	.LVL712:
 6830 003a 0022     		movs	r2, #0
 6831 003c 0A4B     		ldr	r3, .L509
 6832 003e FFF7FEFF 		bl	__aeabi_ddiv
 6833              	.LVL713:
 6834              		.loc 1 6231 29 view .LVU1836
 6835 0042 C4E90201 		strd	r0, [r4, #8]
6232:Core/Src/bno055.c ****         linear_accel_xyz->z = (double)(reg_linear_accel_xyz.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6836              		.loc 1 6232 9 is_stmt 1 view .LVU1837
 6837              		.loc 1 6232 31 is_stmt 0 view .LVU1838
 6838 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6839 004a FFF7FEFF 		bl	__aeabi_i2d
 6840              	.LVL714:
 6841 004e 0022     		movs	r2, #0
 6842 0050 054B     		ldr	r3, .L509
 6843 0052 FFF7FEFF 		bl	__aeabi_ddiv
 6844              	.LVL715:
 6845              		.loc 1 6232 29 view .LVU1839
 6846 0056 C4E90401 		strd	r0, [r4, #16]
ARM GAS  /tmp/cc9kYR4Z.s 			page 236


 6847              	.L506:
 6848              	.LVL716:
6233:Core/Src/bno055.c ****     }
6234:Core/Src/bno055.c ****     else
6235:Core/Src/bno055.c ****     {
6236:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6237:Core/Src/bno055.c ****     }
6238:Core/Src/bno055.c **** 
6239:Core/Src/bno055.c ****     return com_rslt;
 6849              		.loc 1 6239 5 is_stmt 1 view .LVU1840
6240:Core/Src/bno055.c **** }
 6850              		.loc 1 6240 1 is_stmt 0 view .LVU1841
 6851 005a 2846     		mov	r0, r5
 6852 005c 03B0     		add	sp, sp, #12
 6853              	.LCFI235:
 6854              		.cfi_remember_state
 6855              		.cfi_def_cfa_offset 12
 6856              		@ sp needed
 6857 005e 30BD     		pop	{r4, r5, pc}
 6858              	.LVL717:
 6859              	.L507:
 6860              	.LCFI236:
 6861              		.cfi_restore_state
6236:Core/Src/bno055.c ****     }
 6862              		.loc 1 6236 18 view .LVU1842
 6863 0060 4FF0FF35 		mov	r5, #-1
 6864 0064 F9E7     		b	.L506
 6865              	.L510:
 6866 0066 00BF     		.align	2
 6867              	.L509:
 6868 0068 00005940 		.word	1079574528
 6869              		.cfi_endproc
 6870              	.LFE110:
 6872              		.section	.text.bno055_convert_gravity_double_x_msq,"ax",%progbits
 6873              		.align	1
 6874              		.global	bno055_convert_gravity_double_x_msq
 6875              		.syntax unified
 6876              		.thumb
 6877              		.thumb_func
 6879              	bno055_convert_gravity_double_x_msq:
 6880              	.LVL718:
 6881              	.LFB111:
6241:Core/Src/bno055.c **** 
6242:Core/Src/bno055.c **** /*!
6243:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6244:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as double
6245:Core/Src/bno055.c ****  *
6246:Core/Src/bno055.c ****  *  @param gravity_x_d : The double value of gravity x meterpersecseq
6247:Core/Src/bno055.c ****  *
6248:Core/Src/bno055.c ****  *  @return results of bus communication function
6249:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6250:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6251:Core/Src/bno055.c ****  *
6252:Core/Src/bno055.c ****  *
6253:Core/Src/bno055.c ****  */
6254:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_x_msq(double *gravity_x_d)
6255:Core/Src/bno055.c **** {
ARM GAS  /tmp/cc9kYR4Z.s 			page 237


 6882              		.loc 1 6255 1 is_stmt 1 view -0
 6883              		.cfi_startproc
 6884              		@ args = 0, pretend = 0, frame = 8
 6885              		@ frame_needed = 0, uses_anonymous_args = 0
 6886              		.loc 1 6255 1 is_stmt 0 view .LVU1844
 6887 0000 30B5     		push	{r4, r5, lr}
 6888              	.LCFI237:
 6889              		.cfi_def_cfa_offset 12
 6890              		.cfi_offset 4, -12
 6891              		.cfi_offset 5, -8
 6892              		.cfi_offset 14, -4
 6893 0002 83B0     		sub	sp, sp, #12
 6894              	.LCFI238:
 6895              		.cfi_def_cfa_offset 24
 6896 0004 0446     		mov	r4, r0
6256:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6897              		.loc 1 6256 5 is_stmt 1 view .LVU1845
 6898              	.LVL719:
6257:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 6899              		.loc 1 6257 5 view .LVU1846
 6900              		.loc 1 6257 9 is_stmt 0 view .LVU1847
 6901 0006 0023     		movs	r3, #0
 6902 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6258:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6903              		.loc 1 6258 5 is_stmt 1 view .LVU1848
 6904              	.LVL720:
6259:Core/Src/bno055.c **** 
6260:Core/Src/bno055.c ****     /* Read raw gravity of x*/
6261:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 6905              		.loc 1 6261 5 view .LVU1849
 6906              		.loc 1 6261 16 is_stmt 0 view .LVU1850
 6907 000c 0DF10600 		add	r0, sp, #6
 6908              	.LVL721:
 6909              		.loc 1 6261 16 view .LVU1851
 6910 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 6911              	.LVL722:
6262:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6912              		.loc 1 6262 5 is_stmt 1 view .LVU1852
 6913              		.loc 1 6262 8 is_stmt 0 view .LVU1853
 6914 0014 68B9     		cbnz	r0, .L513
 6915 0016 0546     		mov	r5, r0
6263:Core/Src/bno055.c ****     {
6264:Core/Src/bno055.c ****         /* Convert raw gravity of x to m/s2 */
6265:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 6916              		.loc 1 6265 9 is_stmt 1 view .LVU1854
 6917              		.loc 1 6265 18 is_stmt 0 view .LVU1855
 6918 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6919              	.LVL723:
 6920              		.loc 1 6265 18 view .LVU1856
 6921 001c FFF7FEFF 		bl	__aeabi_i2d
 6922              	.LVL724:
 6923              		.loc 1 6265 16 view .LVU1857
 6924 0020 0022     		movs	r2, #0
 6925 0022 054B     		ldr	r3, .L515
 6926 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6927              	.LVL725:
6266:Core/Src/bno055.c ****         *gravity_x_d = data_d;
ARM GAS  /tmp/cc9kYR4Z.s 			page 238


 6928              		.loc 1 6266 9 is_stmt 1 view .LVU1858
 6929              		.loc 1 6266 22 is_stmt 0 view .LVU1859
 6930 0028 C4E90001 		strd	r0, [r4]
 6931              	.LVL726:
 6932              	.L512:
6267:Core/Src/bno055.c ****     }
6268:Core/Src/bno055.c ****     else
6269:Core/Src/bno055.c ****     {
6270:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6271:Core/Src/bno055.c ****     }
6272:Core/Src/bno055.c **** 
6273:Core/Src/bno055.c ****     return com_rslt;
 6933              		.loc 1 6273 5 is_stmt 1 view .LVU1860
6274:Core/Src/bno055.c **** }
 6934              		.loc 1 6274 1 is_stmt 0 view .LVU1861
 6935 002c 2846     		mov	r0, r5
 6936 002e 03B0     		add	sp, sp, #12
 6937              	.LCFI239:
 6938              		.cfi_remember_state
 6939              		.cfi_def_cfa_offset 12
 6940              		@ sp needed
 6941 0030 30BD     		pop	{r4, r5, pc}
 6942              	.LVL727:
 6943              	.L513:
 6944              	.LCFI240:
 6945              		.cfi_restore_state
6270:Core/Src/bno055.c ****     }
 6946              		.loc 1 6270 18 view .LVU1862
 6947 0032 4FF0FF35 		mov	r5, #-1
 6948 0036 F9E7     		b	.L512
 6949              	.L516:
 6950              		.align	2
 6951              	.L515:
 6952 0038 00005940 		.word	1079574528
 6953              		.cfi_endproc
 6954              	.LFE111:
 6956              		.section	.text.bno055_convert_gravity_double_y_msq,"ax",%progbits
 6957              		.align	1
 6958              		.global	bno055_convert_gravity_double_y_msq
 6959              		.syntax unified
 6960              		.thumb
 6961              		.thumb_func
 6963              	bno055_convert_gravity_double_y_msq:
 6964              	.LVL728:
 6965              	.LFB112:
6275:Core/Src/bno055.c **** 
6276:Core/Src/bno055.c **** /*!
6277:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6278:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as double
6279:Core/Src/bno055.c ****  *
6280:Core/Src/bno055.c ****  *  @param gravity_y_d : The double value of gravity y meterpersecseq
6281:Core/Src/bno055.c ****  *
6282:Core/Src/bno055.c ****  *  @return results of bus communication function
6283:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6284:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6285:Core/Src/bno055.c ****  *
6286:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 239


6287:Core/Src/bno055.c ****  */
6288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_y_msq(double *gravity_y_d)
6289:Core/Src/bno055.c **** {
 6966              		.loc 1 6289 1 is_stmt 1 view -0
 6967              		.cfi_startproc
 6968              		@ args = 0, pretend = 0, frame = 8
 6969              		@ frame_needed = 0, uses_anonymous_args = 0
 6970              		.loc 1 6289 1 is_stmt 0 view .LVU1864
 6971 0000 30B5     		push	{r4, r5, lr}
 6972              	.LCFI241:
 6973              		.cfi_def_cfa_offset 12
 6974              		.cfi_offset 4, -12
 6975              		.cfi_offset 5, -8
 6976              		.cfi_offset 14, -4
 6977 0002 83B0     		sub	sp, sp, #12
 6978              	.LCFI242:
 6979              		.cfi_def_cfa_offset 24
 6980 0004 0546     		mov	r5, r0
6290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6981              		.loc 1 6290 5 is_stmt 1 view .LVU1865
 6982              	.LVL729:
6291:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 6983              		.loc 1 6291 5 view .LVU1866
 6984              		.loc 1 6291 9 is_stmt 0 view .LVU1867
 6985 0006 0023     		movs	r3, #0
 6986 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6292:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6987              		.loc 1 6292 5 is_stmt 1 view .LVU1868
 6988              	.LVL730:
6293:Core/Src/bno055.c **** 
6294:Core/Src/bno055.c ****     /* Read raw gravity of y */
6295:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 6989              		.loc 1 6295 5 view .LVU1869
 6990              		.loc 1 6295 16 is_stmt 0 view .LVU1870
 6991 000c 0DF10600 		add	r0, sp, #6
 6992              	.LVL731:
 6993              		.loc 1 6295 16 view .LVU1871
 6994 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 6995              	.LVL732:
6296:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6996              		.loc 1 6296 5 is_stmt 1 view .LVU1872
 6997              		.loc 1 6296 8 is_stmt 0 view .LVU1873
 6998 0014 0446     		mov	r4, r0
 6999 0016 60B9     		cbnz	r0, .L518
6297:Core/Src/bno055.c ****     {
6298:Core/Src/bno055.c ****         /* convert raw gravity of y to m/s2 */
6299:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 7000              		.loc 1 6299 9 is_stmt 1 view .LVU1874
 7001              		.loc 1 6299 18 is_stmt 0 view .LVU1875
 7002 0018 BDF90600 		ldrsh	r0, [sp, #6]
 7003              	.LVL733:
 7004              		.loc 1 6299 18 view .LVU1876
 7005 001c FFF7FEFF 		bl	__aeabi_i2d
 7006              	.LVL734:
 7007              		.loc 1 6299 16 view .LVU1877
 7008 0020 0022     		movs	r2, #0
 7009 0022 054B     		ldr	r3, .L521
ARM GAS  /tmp/cc9kYR4Z.s 			page 240


 7010 0024 FFF7FEFF 		bl	__aeabi_ddiv
 7011              	.LVL735:
6300:Core/Src/bno055.c ****         *gravity_y_d = data_d;
 7012              		.loc 1 6300 9 is_stmt 1 view .LVU1878
 7013              		.loc 1 6300 22 is_stmt 0 view .LVU1879
 7014 0028 C5E90001 		strd	r0, [r5]
 7015              	.LVL736:
 7016              	.L519:
6301:Core/Src/bno055.c ****     }
6302:Core/Src/bno055.c ****     else
6303:Core/Src/bno055.c ****     {
6304:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6305:Core/Src/bno055.c ****     }
6306:Core/Src/bno055.c **** 
6307:Core/Src/bno055.c ****     return com_rslt;
 7017              		.loc 1 6307 5 is_stmt 1 view .LVU1880
6308:Core/Src/bno055.c **** }
 7018              		.loc 1 6308 1 is_stmt 0 view .LVU1881
 7019 002c 2046     		mov	r0, r4
 7020 002e 03B0     		add	sp, sp, #12
 7021              	.LCFI243:
 7022              		.cfi_remember_state
 7023              		.cfi_def_cfa_offset 12
 7024              		@ sp needed
 7025 0030 30BD     		pop	{r4, r5, pc}
 7026              	.LVL737:
 7027              	.L518:
 7028              	.LCFI244:
 7029              		.cfi_restore_state
6304:Core/Src/bno055.c ****     }
 7030              		.loc 1 6304 9 is_stmt 1 view .LVU1882
6304:Core/Src/bno055.c ****     }
 7031              		.loc 1 6304 18 is_stmt 0 view .LVU1883
 7032 0032 441E     		subs	r4, r0, #1
 7033 0034 64B2     		sxtb	r4, r4
 7034              	.LVL738:
6304:Core/Src/bno055.c ****     }
 7035              		.loc 1 6304 18 view .LVU1884
 7036 0036 F9E7     		b	.L519
 7037              	.L522:
 7038              		.align	2
 7039              	.L521:
 7040 0038 00005940 		.word	1079574528
 7041              		.cfi_endproc
 7042              	.LFE112:
 7044              		.section	.text.bno055_convert_gravity_double_z_msq,"ax",%progbits
 7045              		.align	1
 7046              		.global	bno055_convert_gravity_double_z_msq
 7047              		.syntax unified
 7048              		.thumb
 7049              		.thumb_func
 7051              	bno055_convert_gravity_double_z_msq:
 7052              	.LVL739:
 7053              	.LFB113:
6309:Core/Src/bno055.c **** 
6310:Core/Src/bno055.c **** /*!
6311:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
ARM GAS  /tmp/cc9kYR4Z.s 			page 241


6312:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as double
6313:Core/Src/bno055.c ****  *
6314:Core/Src/bno055.c ****  *  @param gravity_z_d : The double value of gravity z meterpersecseq
6315:Core/Src/bno055.c ****  *
6316:Core/Src/bno055.c ****  *  @return results of bus communication function
6317:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6318:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6319:Core/Src/bno055.c ****  *
6320:Core/Src/bno055.c ****  *
6321:Core/Src/bno055.c ****  */
6322:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_z_msq(double *gravity_z_d)
6323:Core/Src/bno055.c **** {
 7054              		.loc 1 6323 1 is_stmt 1 view -0
 7055              		.cfi_startproc
 7056              		@ args = 0, pretend = 0, frame = 8
 7057              		@ frame_needed = 0, uses_anonymous_args = 0
 7058              		.loc 1 6323 1 is_stmt 0 view .LVU1886
 7059 0000 30B5     		push	{r4, r5, lr}
 7060              	.LCFI245:
 7061              		.cfi_def_cfa_offset 12
 7062              		.cfi_offset 4, -12
 7063              		.cfi_offset 5, -8
 7064              		.cfi_offset 14, -4
 7065 0002 83B0     		sub	sp, sp, #12
 7066              	.LCFI246:
 7067              		.cfi_def_cfa_offset 24
 7068 0004 0546     		mov	r5, r0
6324:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7069              		.loc 1 6324 5 is_stmt 1 view .LVU1887
 7070              	.LVL740:
6325:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 7071              		.loc 1 6325 5 view .LVU1888
 7072              		.loc 1 6325 9 is_stmt 0 view .LVU1889
 7073 0006 0023     		movs	r3, #0
 7074 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 7075              		.loc 1 6326 5 is_stmt 1 view .LVU1890
 7076              	.LVL741:
6327:Core/Src/bno055.c **** 
6328:Core/Src/bno055.c ****     /* Read raw gravity of z */
6329:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 7077              		.loc 1 6329 5 view .LVU1891
 7078              		.loc 1 6329 16 is_stmt 0 view .LVU1892
 7079 000c 0DF10600 		add	r0, sp, #6
 7080              	.LVL742:
 7081              		.loc 1 6329 16 view .LVU1893
 7082 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 7083              	.LVL743:
6330:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 7084              		.loc 1 6330 5 is_stmt 1 view .LVU1894
 7085              		.loc 1 6330 8 is_stmt 0 view .LVU1895
 7086 0014 0446     		mov	r4, r0
 7087 0016 60B9     		cbnz	r0, .L524
6331:Core/Src/bno055.c ****     {
6332:Core/Src/bno055.c ****         /* Convert raw gravity of z to m/s2 */
6333:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 7088              		.loc 1 6333 9 is_stmt 1 view .LVU1896
ARM GAS  /tmp/cc9kYR4Z.s 			page 242


 7089              		.loc 1 6333 18 is_stmt 0 view .LVU1897
 7090 0018 BDF90600 		ldrsh	r0, [sp, #6]
 7091              	.LVL744:
 7092              		.loc 1 6333 18 view .LVU1898
 7093 001c FFF7FEFF 		bl	__aeabi_i2d
 7094              	.LVL745:
 7095              		.loc 1 6333 16 view .LVU1899
 7096 0020 0022     		movs	r2, #0
 7097 0022 054B     		ldr	r3, .L527
 7098 0024 FFF7FEFF 		bl	__aeabi_ddiv
 7099              	.LVL746:
6334:Core/Src/bno055.c ****         *gravity_z_d = data_d;
 7100              		.loc 1 6334 9 is_stmt 1 view .LVU1900
 7101              		.loc 1 6334 22 is_stmt 0 view .LVU1901
 7102 0028 C5E90001 		strd	r0, [r5]
 7103              	.LVL747:
 7104              	.L525:
6335:Core/Src/bno055.c ****     }
6336:Core/Src/bno055.c ****     else
6337:Core/Src/bno055.c ****     {
6338:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6339:Core/Src/bno055.c ****     }
6340:Core/Src/bno055.c **** 
6341:Core/Src/bno055.c ****     return com_rslt;
 7105              		.loc 1 6341 5 is_stmt 1 view .LVU1902
6342:Core/Src/bno055.c **** }
 7106              		.loc 1 6342 1 is_stmt 0 view .LVU1903
 7107 002c 2046     		mov	r0, r4
 7108 002e 03B0     		add	sp, sp, #12
 7109              	.LCFI247:
 7110              		.cfi_remember_state
 7111              		.cfi_def_cfa_offset 12
 7112              		@ sp needed
 7113 0030 30BD     		pop	{r4, r5, pc}
 7114              	.LVL748:
 7115              	.L524:
 7116              	.LCFI248:
 7117              		.cfi_restore_state
6338:Core/Src/bno055.c ****     }
 7118              		.loc 1 6338 9 is_stmt 1 view .LVU1904
6338:Core/Src/bno055.c ****     }
 7119              		.loc 1 6338 18 is_stmt 0 view .LVU1905
 7120 0032 441E     		subs	r4, r0, #1
 7121 0034 64B2     		sxtb	r4, r4
 7122              	.LVL749:
6338:Core/Src/bno055.c ****     }
 7123              		.loc 1 6338 18 view .LVU1906
 7124 0036 F9E7     		b	.L525
 7125              	.L528:
 7126              		.align	2
 7127              	.L527:
 7128 0038 00005940 		.word	1079574528
 7129              		.cfi_endproc
 7130              	.LFE113:
 7132              		.section	.text.bno055_convert_double_gravity_xyz_msq,"ax",%progbits
 7133              		.align	1
 7134              		.global	bno055_convert_double_gravity_xyz_msq
ARM GAS  /tmp/cc9kYR4Z.s 			page 243


 7135              		.syntax unified
 7136              		.thumb
 7137              		.thumb_func
 7139              	bno055_convert_double_gravity_xyz_msq:
 7140              	.LVL750:
 7141              	.LFB114:
6343:Core/Src/bno055.c **** 
6344:Core/Src/bno055.c **** /*!
6345:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
6346:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6347:Core/Src/bno055.c ****  *
6348:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
6349:Core/Src/bno055.c ****  *
6350:Core/Src/bno055.c ****  *  Parameter |    result
6351:Core/Src/bno055.c ****  *  --------- | -----------------
6352:Core/Src/bno055.c ****  *   x        | meterpersecseq data of gravity
6353:Core/Src/bno055.c ****  *   y        | meterpersecseq data of gravity
6354:Core/Src/bno055.c ****  *   z        | meterpersecseq data of gravity
6355:Core/Src/bno055.c ****  *
6356:Core/Src/bno055.c ****  *
6357:Core/Src/bno055.c ****  *  @return results of bus communication function
6358:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6359:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6360:Core/Src/bno055.c ****  *
6361:Core/Src/bno055.c ****  */
6362:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gravity_xyz_msq(struct bno055_gravity_double_t *g
6363:Core/Src/bno055.c **** {
 7142              		.loc 1 6363 1 is_stmt 1 view -0
 7143              		.cfi_startproc
 7144              		@ args = 0, pretend = 0, frame = 8
 7145              		@ frame_needed = 0, uses_anonymous_args = 0
 7146              		.loc 1 6363 1 is_stmt 0 view .LVU1908
 7147 0000 30B5     		push	{r4, r5, lr}
 7148              	.LCFI249:
 7149              		.cfi_def_cfa_offset 12
 7150              		.cfi_offset 4, -12
 7151              		.cfi_offset 5, -8
 7152              		.cfi_offset 14, -4
 7153 0002 83B0     		sub	sp, sp, #12
 7154              	.LCFI250:
 7155              		.cfi_def_cfa_offset 24
 7156 0004 0446     		mov	r4, r0
6364:Core/Src/bno055.c ****     /* Variable used to return value of
6365:Core/Src/bno055.c ****      * communication routine*/
6366:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7157              		.loc 1 6366 5 is_stmt 1 view .LVU1909
 7158              	.LVL751:
6367:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 7159              		.loc 1 6367 5 view .LVU1910
 7160              		.loc 1 6367 29 is_stmt 0 view .LVU1911
 7161 0006 0023     		movs	r3, #0
 7162 0008 ADF80030 		strh	r3, [sp]	@ movhi
 7163 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 7164 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6368:Core/Src/bno055.c **** 
6369:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
6370:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
ARM GAS  /tmp/cc9kYR4Z.s 			page 244


 7165              		.loc 1 6370 5 is_stmt 1 view .LVU1912
 7166              		.loc 1 6370 16 is_stmt 0 view .LVU1913
 7167 0014 6846     		mov	r0, sp
 7168              	.LVL752:
 7169              		.loc 1 6370 16 view .LVU1914
 7170 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 7171              	.LVL753:
6371:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 7172              		.loc 1 6371 5 is_stmt 1 view .LVU1915
 7173              		.loc 1 6371 8 is_stmt 0 view .LVU1916
 7174 001a 0546     		mov	r5, r0
 7175 001c 00BB     		cbnz	r0, .L530
6372:Core/Src/bno055.c ****     {
6373:Core/Src/bno055.c ****         /* Convert raw gravity of xyz to m/s2 */
6374:Core/Src/bno055.c ****         gravity_xyz->x = (double)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 7176              		.loc 1 6374 9 is_stmt 1 view .LVU1917
 7177              		.loc 1 6374 26 is_stmt 0 view .LVU1918
 7178 001e BDF90000 		ldrsh	r0, [sp]
 7179              	.LVL754:
 7180              		.loc 1 6374 26 view .LVU1919
 7181 0022 FFF7FEFF 		bl	__aeabi_i2d
 7182              	.LVL755:
 7183 0026 0022     		movs	r2, #0
 7184 0028 0F4B     		ldr	r3, .L533
 7185 002a FFF7FEFF 		bl	__aeabi_ddiv
 7186              	.LVL756:
 7187              		.loc 1 6374 24 view .LVU1920
 7188 002e C4E90001 		strd	r0, [r4]
6375:Core/Src/bno055.c ****         gravity_xyz->y = (double)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 7189              		.loc 1 6375 9 is_stmt 1 view .LVU1921
 7190              		.loc 1 6375 26 is_stmt 0 view .LVU1922
 7191 0032 BDF90200 		ldrsh	r0, [sp, #2]
 7192 0036 FFF7FEFF 		bl	__aeabi_i2d
 7193              	.LVL757:
 7194 003a 0022     		movs	r2, #0
 7195 003c 0A4B     		ldr	r3, .L533
 7196 003e FFF7FEFF 		bl	__aeabi_ddiv
 7197              	.LVL758:
 7198              		.loc 1 6375 24 view .LVU1923
 7199 0042 C4E90201 		strd	r0, [r4, #8]
6376:Core/Src/bno055.c ****         gravity_xyz->z = (double)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 7200              		.loc 1 6376 9 is_stmt 1 view .LVU1924
 7201              		.loc 1 6376 26 is_stmt 0 view .LVU1925
 7202 0046 BDF90400 		ldrsh	r0, [sp, #4]
 7203 004a FFF7FEFF 		bl	__aeabi_i2d
 7204              	.LVL759:
 7205 004e 0022     		movs	r2, #0
 7206 0050 054B     		ldr	r3, .L533
 7207 0052 FFF7FEFF 		bl	__aeabi_ddiv
 7208              	.LVL760:
 7209              		.loc 1 6376 24 view .LVU1926
 7210 0056 C4E90401 		strd	r0, [r4, #16]
 7211              	.L531:
 7212              	.LVL761:
6377:Core/Src/bno055.c ****     }
6378:Core/Src/bno055.c ****     else
6379:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 245


6380:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6381:Core/Src/bno055.c ****     }
6382:Core/Src/bno055.c **** 
6383:Core/Src/bno055.c ****     return com_rslt;
 7213              		.loc 1 6383 5 is_stmt 1 view .LVU1927
6384:Core/Src/bno055.c **** }
 7214              		.loc 1 6384 1 is_stmt 0 view .LVU1928
 7215 005a 2846     		mov	r0, r5
 7216 005c 03B0     		add	sp, sp, #12
 7217              	.LCFI251:
 7218              		.cfi_remember_state
 7219              		.cfi_def_cfa_offset 12
 7220              		@ sp needed
 7221 005e 30BD     		pop	{r4, r5, pc}
 7222              	.LVL762:
 7223              	.L530:
 7224              	.LCFI252:
 7225              		.cfi_restore_state
6380:Core/Src/bno055.c ****     }
 7226              		.loc 1 6380 9 is_stmt 1 view .LVU1929
6380:Core/Src/bno055.c ****     }
 7227              		.loc 1 6380 18 is_stmt 0 view .LVU1930
 7228 0060 451E     		subs	r5, r0, #1
 7229 0062 6DB2     		sxtb	r5, r5
 7230              	.LVL763:
6380:Core/Src/bno055.c ****     }
 7231              		.loc 1 6380 18 view .LVU1931
 7232 0064 F9E7     		b	.L531
 7233              	.L534:
 7234 0066 00BF     		.align	2
 7235              	.L533:
 7236 0068 00005940 		.word	1079574528
 7237              		.cfi_endproc
 7238              	.LFE114:
 7240              		.section	.text.bno055_get_mag_calib_stat,"ax",%progbits
 7241              		.align	1
 7242              		.global	bno055_get_mag_calib_stat
 7243              		.syntax unified
 7244              		.thumb
 7245              		.thumb_func
 7247              	bno055_get_mag_calib_stat:
 7248              	.LVL764:
 7249              	.LFB117:
6385:Core/Src/bno055.c **** 
6386:Core/Src/bno055.c **** /*!
6387:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6388:Core/Src/bno055.c ****  *  data to Fahrenheit output as double
6389:Core/Src/bno055.c ****  *
6390:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Fahrenheit
6391:Core/Src/bno055.c ****  *
6392:Core/Src/bno055.c ****  *  @return results of bus communication function
6393:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6394:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6395:Core/Src/bno055.c ****  *
6396:Core/Src/bno055.c ****  *
6397:Core/Src/bno055.c ****  */
6398:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_fahrenheit(double *temp_d)
ARM GAS  /tmp/cc9kYR4Z.s 			page 246


6399:Core/Src/bno055.c **** {
6400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6401:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6402:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6403:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6404:Core/Src/bno055.c **** 
6405:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6406:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6407:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6408:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
6409:Core/Src/bno055.c ****     {
6410:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
6411:Core/Src/bno055.c ****     }
6412:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6413:Core/Src/bno055.c ****     {
6414:Core/Src/bno055.c ****         /* Read the raw temperature data */
6415:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6416:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6417:Core/Src/bno055.c ****         {
6418:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6419:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
6420:Core/Src/bno055.c ****             *temp_d = data_d;
6421:Core/Src/bno055.c ****         }
6422:Core/Src/bno055.c ****         else
6423:Core/Src/bno055.c ****         {
6424:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6425:Core/Src/bno055.c ****         }
6426:Core/Src/bno055.c ****     }
6427:Core/Src/bno055.c ****     else
6428:Core/Src/bno055.c ****     {
6429:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6430:Core/Src/bno055.c ****     }
6431:Core/Src/bno055.c **** 
6432:Core/Src/bno055.c ****     return com_rslt;
6433:Core/Src/bno055.c **** }
6434:Core/Src/bno055.c **** 
6435:Core/Src/bno055.c **** /*!
6436:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6437:Core/Src/bno055.c ****  *  data to Celsius output as double
6438:Core/Src/bno055.c ****  *
6439:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Celsius
6440:Core/Src/bno055.c ****  *
6441:Core/Src/bno055.c ****  *  @return results of bus communication function
6442:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6443:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6444:Core/Src/bno055.c ****  *
6445:Core/Src/bno055.c ****  *
6446:Core/Src/bno055.c ****  */
6447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_celsius(double *temp_d)
6448:Core/Src/bno055.c **** {
6449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6450:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6451:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6452:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6453:Core/Src/bno055.c **** 
6454:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6455:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
ARM GAS  /tmp/cc9kYR4Z.s 			page 247


6456:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6457:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
6458:Core/Src/bno055.c ****     {
6459:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
6460:Core/Src/bno055.c ****     }
6461:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6462:Core/Src/bno055.c ****     {
6463:Core/Src/bno055.c ****         /* Read the raw temperature data */
6464:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6465:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6466:Core/Src/bno055.c ****         {
6467:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6468:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
6469:Core/Src/bno055.c ****             *temp_d = data_d;
6470:Core/Src/bno055.c ****         }
6471:Core/Src/bno055.c ****         else
6472:Core/Src/bno055.c ****         {
6473:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6474:Core/Src/bno055.c ****         }
6475:Core/Src/bno055.c ****     }
6476:Core/Src/bno055.c ****     else
6477:Core/Src/bno055.c ****     {
6478:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6479:Core/Src/bno055.c ****     }
6480:Core/Src/bno055.c **** 
6481:Core/Src/bno055.c ****     return com_rslt;
6482:Core/Src/bno055.c **** }
6483:Core/Src/bno055.c **** #endif
6484:Core/Src/bno055.c **** 
6485:Core/Src/bno055.c **** /*!
6486:Core/Src/bno055.c ****  *  @brief This API used to read
6487:Core/Src/bno055.c ****  *  mag calibration status from register from 0x35 bit 0 and 1
6488:Core/Src/bno055.c ****  *
6489:Core/Src/bno055.c ****  *  @param mag_calib_u8 : The value of mag calib status
6490:Core/Src/bno055.c ****  *
6491:Core/Src/bno055.c ****  *
6492:Core/Src/bno055.c ****  *  @return results of bus communication function
6493:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6494:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6495:Core/Src/bno055.c ****  *
6496:Core/Src/bno055.c ****  */
6497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_calib_stat(u8 *mag_calib_u8)
6498:Core/Src/bno055.c **** {
 7250              		.loc 1 6498 1 is_stmt 1 view -0
 7251              		.cfi_startproc
 7252              		@ args = 0, pretend = 0, frame = 8
 7253              		@ frame_needed = 0, uses_anonymous_args = 0
 7254              		.loc 1 6498 1 is_stmt 0 view .LVU1933
 7255 0000 30B5     		push	{r4, r5, lr}
 7256              	.LCFI253:
 7257              		.cfi_def_cfa_offset 12
 7258              		.cfi_offset 4, -12
 7259              		.cfi_offset 5, -8
 7260              		.cfi_offset 14, -4
 7261 0002 83B0     		sub	sp, sp, #12
 7262              	.LCFI254:
 7263              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 248


6499:Core/Src/bno055.c ****     /* Variable used to return value of
6500:Core/Src/bno055.c ****      * communication routine*/
6501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7264              		.loc 1 6501 5 is_stmt 1 view .LVU1934
 7265              	.LVL765:
6502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7266              		.loc 1 6502 5 view .LVU1935
 7267              		.loc 1 6502 8 is_stmt 0 view .LVU1936
 7268 0004 0023     		movs	r3, #0
 7269 0006 8DF80730 		strb	r3, [sp, #7]
6503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7270              		.loc 1 6503 5 is_stmt 1 view .LVU1937
 7271              	.LVL766:
6504:Core/Src/bno055.c **** 
6505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7272              		.loc 1 6506 5 view .LVU1938
 7273              		.loc 1 6506 18 is_stmt 0 view .LVU1939
 7274 000a 134B     		ldr	r3, .L543
 7275 000c 1B68     		ldr	r3, [r3]
 7276              		.loc 1 6506 8 view .LVU1940
 7277 000e E3B1     		cbz	r3, .L539
 7278 0010 0446     		mov	r4, r0
6507:Core/Src/bno055.c ****     {
6508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6509:Core/Src/bno055.c ****     }
6510:Core/Src/bno055.c ****     else
6511:Core/Src/bno055.c ****     {
6512:Core/Src/bno055.c ****         /*condition check for page, mag calib
6513:Core/Src/bno055.c ****          * available in the page zero*/
6514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7279              		.loc 1 6514 9 is_stmt 1 view .LVU1941
 7280              		.loc 1 6514 21 is_stmt 0 view .LVU1942
 7281 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7282              		.loc 1 6514 12 view .LVU1943
 7283 0014 9BB9     		cbnz	r3, .L542
 7284              	.LVL767:
 7285              	.L537:
6515:Core/Src/bno055.c ****         {
6516:Core/Src/bno055.c ****             /* Write the page zero*/
6517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6518:Core/Src/bno055.c ****         }
6519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7286              		.loc 1 6519 53 discriminator 1 view .LVU1944
 7287 0016 104B     		ldr	r3, .L543
 7288 0018 1B68     		ldr	r3, [r3]
 7289 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7290              		.loc 1 6519 41 discriminator 1 view .LVU1945
 7291 001c C3B9     		cbnz	r3, .L540
 7292              	.L538:
6520:Core/Src/bno055.c ****         {
6521:Core/Src/bno055.c ****             /* Read the mag calib stat_s8 */
6522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7293              		.loc 1 6522 13 is_stmt 1 view .LVU1946
 7294              		.loc 1 6522 32 is_stmt 0 view .LVU1947
 7295 001e 0E4B     		ldr	r3, .L543
 7296 0020 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 249


 7297 0022 0569     		ldr	r5, [r0, #16]
 7298              		.loc 1 6522 24 view .LVU1948
 7299 0024 0123     		movs	r3, #1
 7300 0026 0DF10702 		add	r2, sp, #7
 7301 002a 3521     		movs	r1, #53
 7302 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7303 002e A847     		blx	r5
 7304              	.LVL768:
6523:Core/Src/bno055.c ****                                                       BNO055_MAG_CALIB_STAT_REG,
6524:Core/Src/bno055.c ****                                                       &data_u8r,
6525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6526:Core/Src/bno055.c ****             *mag_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_CALIB_STAT);
 7305              		.loc 1 6526 13 is_stmt 1 view .LVU1949
 7306              		.loc 1 6526 29 is_stmt 0 view .LVU1950
 7307 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7308 0034 03F00303 		and	r3, r3, #3
 7309              		.loc 1 6526 27 view .LVU1951
 7310 0038 2370     		strb	r3, [r4]
 7311              	.LVL769:
 7312              	.L536:
6527:Core/Src/bno055.c ****         }
6528:Core/Src/bno055.c ****         else
6529:Core/Src/bno055.c ****         {
6530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6531:Core/Src/bno055.c ****         }
6532:Core/Src/bno055.c ****     }
6533:Core/Src/bno055.c **** 
6534:Core/Src/bno055.c ****     return com_rslt;
6535:Core/Src/bno055.c **** }
 7313              		.loc 1 6535 1 view .LVU1952
 7314 003a 03B0     		add	sp, sp, #12
 7315              	.LCFI255:
 7316              		.cfi_remember_state
 7317              		.cfi_def_cfa_offset 12
 7318              		@ sp needed
 7319 003c 30BD     		pop	{r4, r5, pc}
 7320              	.LVL770:
 7321              	.L542:
 7322              	.LCFI256:
 7323              		.cfi_restore_state
6517:Core/Src/bno055.c ****         }
 7324              		.loc 1 6517 13 is_stmt 1 view .LVU1953
6517:Core/Src/bno055.c ****         }
 7325              		.loc 1 6517 23 is_stmt 0 view .LVU1954
 7326 003e 0020     		movs	r0, #0
 7327              	.LVL771:
6517:Core/Src/bno055.c ****         }
 7328              		.loc 1 6517 23 view .LVU1955
 7329 0040 FFF7FEFF 		bl	bno055_write_page_id
 7330              	.LVL772:
6519:Core/Src/bno055.c ****         {
 7331              		.loc 1 6519 9 is_stmt 1 view .LVU1956
6519:Core/Src/bno055.c ****         {
 7332              		.loc 1 6519 12 is_stmt 0 view .LVU1957
 7333 0044 0028     		cmp	r0, #0
 7334 0046 EAD0     		beq	.L538
 7335 0048 E5E7     		b	.L537
ARM GAS  /tmp/cc9kYR4Z.s 			page 250


 7336              	.LVL773:
 7337              	.L539:
6508:Core/Src/bno055.c ****     }
 7338              		.loc 1 6508 16 view .LVU1958
 7339 004a 6FF07E00 		mvn	r0, #126
 7340              	.LVL774:
6508:Core/Src/bno055.c ****     }
 7341              		.loc 1 6508 16 view .LVU1959
 7342 004e F4E7     		b	.L536
 7343              	.LVL775:
 7344              	.L540:
6530:Core/Src/bno055.c ****         }
 7345              		.loc 1 6530 22 view .LVU1960
 7346 0050 4FF0FF30 		mov	r0, #-1
 7347 0054 F1E7     		b	.L536
 7348              	.L544:
 7349 0056 00BF     		.align	2
 7350              	.L543:
 7351 0058 00000000 		.word	.LANCHOR0
 7352              		.cfi_endproc
 7353              	.LFE117:
 7355              		.section	.text.bno055_get_accel_calib_stat,"ax",%progbits
 7356              		.align	1
 7357              		.global	bno055_get_accel_calib_stat
 7358              		.syntax unified
 7359              		.thumb
 7360              		.thumb_func
 7362              	bno055_get_accel_calib_stat:
 7363              	.LVL776:
 7364              	.LFB118:
6536:Core/Src/bno055.c **** 
6537:Core/Src/bno055.c **** /*!
6538:Core/Src/bno055.c ****  *  @brief This API used to read
6539:Core/Src/bno055.c ****  *  accel calibration status from register from 0x35 bit 2 and 3
6540:Core/Src/bno055.c ****  *
6541:Core/Src/bno055.c ****  *  @param accel_calib_u8 : The value of accel calib status
6542:Core/Src/bno055.c ****  *
6543:Core/Src/bno055.c ****  *
6544:Core/Src/bno055.c ****  *  @return results of bus communication function
6545:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6546:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6547:Core/Src/bno055.c ****  *
6548:Core/Src/bno055.c ****  */
6549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_calib_stat(u8 *accel_calib_u8)
6550:Core/Src/bno055.c **** {
 7365              		.loc 1 6550 1 is_stmt 1 view -0
 7366              		.cfi_startproc
 7367              		@ args = 0, pretend = 0, frame = 8
 7368              		@ frame_needed = 0, uses_anonymous_args = 0
 7369              		.loc 1 6550 1 is_stmt 0 view .LVU1962
 7370 0000 30B5     		push	{r4, r5, lr}
 7371              	.LCFI257:
 7372              		.cfi_def_cfa_offset 12
 7373              		.cfi_offset 4, -12
 7374              		.cfi_offset 5, -8
 7375              		.cfi_offset 14, -4
 7376 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc9kYR4Z.s 			page 251


 7377              	.LCFI258:
 7378              		.cfi_def_cfa_offset 24
6551:Core/Src/bno055.c ****     /* Variable used to return value of
6552:Core/Src/bno055.c ****      * communication routine*/
6553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7379              		.loc 1 6553 5 is_stmt 1 view .LVU1963
 7380              	.LVL777:
6554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7381              		.loc 1 6554 5 view .LVU1964
 7382              		.loc 1 6554 8 is_stmt 0 view .LVU1965
 7383 0004 0023     		movs	r3, #0
 7384 0006 8DF80730 		strb	r3, [sp, #7]
6555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7385              		.loc 1 6555 5 is_stmt 1 view .LVU1966
 7386              	.LVL778:
6556:Core/Src/bno055.c **** 
6557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7387              		.loc 1 6558 5 view .LVU1967
 7388              		.loc 1 6558 18 is_stmt 0 view .LVU1968
 7389 000a 134B     		ldr	r3, .L553
 7390 000c 1B68     		ldr	r3, [r3]
 7391              		.loc 1 6558 8 view .LVU1969
 7392 000e E3B1     		cbz	r3, .L549
 7393 0010 0446     		mov	r4, r0
6559:Core/Src/bno055.c ****     {
6560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6561:Core/Src/bno055.c ****     }
6562:Core/Src/bno055.c ****     else
6563:Core/Src/bno055.c ****     {
6564:Core/Src/bno055.c ****         /*condition check for page, accel calib
6565:Core/Src/bno055.c ****          * available in the page zero*/
6566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7394              		.loc 1 6566 9 is_stmt 1 view .LVU1970
 7395              		.loc 1 6566 21 is_stmt 0 view .LVU1971
 7396 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7397              		.loc 1 6566 12 view .LVU1972
 7398 0014 9BB9     		cbnz	r3, .L552
 7399              	.LVL779:
 7400              	.L547:
6567:Core/Src/bno055.c ****         {
6568:Core/Src/bno055.c ****             /* Write the page zero*/
6569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6570:Core/Src/bno055.c ****         }
6571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7401              		.loc 1 6571 53 discriminator 1 view .LVU1973
 7402 0016 104B     		ldr	r3, .L553
 7403 0018 1B68     		ldr	r3, [r3]
 7404 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7405              		.loc 1 6571 41 discriminator 1 view .LVU1974
 7406 001c C3B9     		cbnz	r3, .L550
 7407              	.L548:
6572:Core/Src/bno055.c ****         {
6573:Core/Src/bno055.c ****             /* Read the accel calib stat_s8 */
6574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7408              		.loc 1 6574 13 is_stmt 1 view .LVU1975
 7409              		.loc 1 6574 32 is_stmt 0 view .LVU1976
ARM GAS  /tmp/cc9kYR4Z.s 			page 252


 7410 001e 0E4B     		ldr	r3, .L553
 7411 0020 1868     		ldr	r0, [r3]
 7412 0022 0569     		ldr	r5, [r0, #16]
 7413              		.loc 1 6574 24 view .LVU1977
 7414 0024 0123     		movs	r3, #1
 7415 0026 0DF10702 		add	r2, sp, #7
 7416 002a 3521     		movs	r1, #53
 7417 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7418 002e A847     		blx	r5
 7419              	.LVL780:
6575:Core/Src/bno055.c ****                                                       BNO055_ACCEL_CALIB_STAT_REG,
6576:Core/Src/bno055.c ****                                                       &data_u8r,
6577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6578:Core/Src/bno055.c ****             *accel_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_CALIB_STAT);
 7420              		.loc 1 6578 13 is_stmt 1 view .LVU1978
 7421              		.loc 1 6578 31 is_stmt 0 view .LVU1979
 7422 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7423 0034 C3F38103 		ubfx	r3, r3, #2, #2
 7424              		.loc 1 6578 29 view .LVU1980
 7425 0038 2370     		strb	r3, [r4]
 7426              	.LVL781:
 7427              	.L546:
6579:Core/Src/bno055.c ****         }
6580:Core/Src/bno055.c ****         else
6581:Core/Src/bno055.c ****         {
6582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6583:Core/Src/bno055.c ****         }
6584:Core/Src/bno055.c ****     }
6585:Core/Src/bno055.c **** 
6586:Core/Src/bno055.c ****     return com_rslt;
6587:Core/Src/bno055.c **** }
 7428              		.loc 1 6587 1 view .LVU1981
 7429 003a 03B0     		add	sp, sp, #12
 7430              	.LCFI259:
 7431              		.cfi_remember_state
 7432              		.cfi_def_cfa_offset 12
 7433              		@ sp needed
 7434 003c 30BD     		pop	{r4, r5, pc}
 7435              	.LVL782:
 7436              	.L552:
 7437              	.LCFI260:
 7438              		.cfi_restore_state
6569:Core/Src/bno055.c ****         }
 7439              		.loc 1 6569 13 is_stmt 1 view .LVU1982
6569:Core/Src/bno055.c ****         }
 7440              		.loc 1 6569 23 is_stmt 0 view .LVU1983
 7441 003e 0020     		movs	r0, #0
 7442              	.LVL783:
6569:Core/Src/bno055.c ****         }
 7443              		.loc 1 6569 23 view .LVU1984
 7444 0040 FFF7FEFF 		bl	bno055_write_page_id
 7445              	.LVL784:
6571:Core/Src/bno055.c ****         {
 7446              		.loc 1 6571 9 is_stmt 1 view .LVU1985
6571:Core/Src/bno055.c ****         {
 7447              		.loc 1 6571 12 is_stmt 0 view .LVU1986
 7448 0044 0028     		cmp	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 253


 7449 0046 EAD0     		beq	.L548
 7450 0048 E5E7     		b	.L547
 7451              	.LVL785:
 7452              	.L549:
6560:Core/Src/bno055.c ****     }
 7453              		.loc 1 6560 16 view .LVU1987
 7454 004a 6FF07E00 		mvn	r0, #126
 7455              	.LVL786:
6560:Core/Src/bno055.c ****     }
 7456              		.loc 1 6560 16 view .LVU1988
 7457 004e F4E7     		b	.L546
 7458              	.LVL787:
 7459              	.L550:
6582:Core/Src/bno055.c ****         }
 7460              		.loc 1 6582 22 view .LVU1989
 7461 0050 4FF0FF30 		mov	r0, #-1
 7462 0054 F1E7     		b	.L546
 7463              	.L554:
 7464 0056 00BF     		.align	2
 7465              	.L553:
 7466 0058 00000000 		.word	.LANCHOR0
 7467              		.cfi_endproc
 7468              	.LFE118:
 7470              		.section	.text.bno055_get_gyro_calib_stat,"ax",%progbits
 7471              		.align	1
 7472              		.global	bno055_get_gyro_calib_stat
 7473              		.syntax unified
 7474              		.thumb
 7475              		.thumb_func
 7477              	bno055_get_gyro_calib_stat:
 7478              	.LVL788:
 7479              	.LFB119:
6588:Core/Src/bno055.c **** 
6589:Core/Src/bno055.c **** /*!
6590:Core/Src/bno055.c ****  *  @brief This API used to read
6591:Core/Src/bno055.c ****  *  gyro calibration status from register from 0x35 bit 4 and 5
6592:Core/Src/bno055.c ****  *
6593:Core/Src/bno055.c ****  *  @param gyro_calib_u8 : The value of gyro calib status
6594:Core/Src/bno055.c ****  *
6595:Core/Src/bno055.c ****  *
6596:Core/Src/bno055.c ****  *  @return results of bus communication function
6597:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6598:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6599:Core/Src/bno055.c ****  *
6600:Core/Src/bno055.c ****  */
6601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_calib_stat(u8 *gyro_calib_u8)
6602:Core/Src/bno055.c **** {
 7480              		.loc 1 6602 1 is_stmt 1 view -0
 7481              		.cfi_startproc
 7482              		@ args = 0, pretend = 0, frame = 8
 7483              		@ frame_needed = 0, uses_anonymous_args = 0
 7484              		.loc 1 6602 1 is_stmt 0 view .LVU1991
 7485 0000 30B5     		push	{r4, r5, lr}
 7486              	.LCFI261:
 7487              		.cfi_def_cfa_offset 12
 7488              		.cfi_offset 4, -12
 7489              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 254


 7490              		.cfi_offset 14, -4
 7491 0002 83B0     		sub	sp, sp, #12
 7492              	.LCFI262:
 7493              		.cfi_def_cfa_offset 24
6603:Core/Src/bno055.c ****     /* Variable used to return value of
6604:Core/Src/bno055.c ****      * communication routine*/
6605:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7494              		.loc 1 6605 5 is_stmt 1 view .LVU1992
 7495              	.LVL789:
6606:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7496              		.loc 1 6606 5 view .LVU1993
 7497              		.loc 1 6606 8 is_stmt 0 view .LVU1994
 7498 0004 0023     		movs	r3, #0
 7499 0006 8DF80730 		strb	r3, [sp, #7]
6607:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7500              		.loc 1 6607 5 is_stmt 1 view .LVU1995
 7501              	.LVL790:
6608:Core/Src/bno055.c **** 
6609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7502              		.loc 1 6610 5 view .LVU1996
 7503              		.loc 1 6610 18 is_stmt 0 view .LVU1997
 7504 000a 134B     		ldr	r3, .L563
 7505 000c 1B68     		ldr	r3, [r3]
 7506              		.loc 1 6610 8 view .LVU1998
 7507 000e E3B1     		cbz	r3, .L559
 7508 0010 0446     		mov	r4, r0
6611:Core/Src/bno055.c ****     {
6612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6613:Core/Src/bno055.c ****     }
6614:Core/Src/bno055.c ****     else
6615:Core/Src/bno055.c ****     {
6616:Core/Src/bno055.c ****         /*condition check for page, gyro calib
6617:Core/Src/bno055.c ****          * available in the page zero*/
6618:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7509              		.loc 1 6618 9 is_stmt 1 view .LVU1999
 7510              		.loc 1 6618 21 is_stmt 0 view .LVU2000
 7511 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7512              		.loc 1 6618 12 view .LVU2001
 7513 0014 9BB9     		cbnz	r3, .L562
 7514              	.LVL791:
 7515              	.L557:
6619:Core/Src/bno055.c ****         {
6620:Core/Src/bno055.c ****             /* Write the page zero*/
6621:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6622:Core/Src/bno055.c ****         }
6623:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7516              		.loc 1 6623 53 discriminator 1 view .LVU2002
 7517 0016 104B     		ldr	r3, .L563
 7518 0018 1B68     		ldr	r3, [r3]
 7519 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7520              		.loc 1 6623 41 discriminator 1 view .LVU2003
 7521 001c C3B9     		cbnz	r3, .L560
 7522              	.L558:
6624:Core/Src/bno055.c ****         {
6625:Core/Src/bno055.c ****             /* Read the gyro calib status */
6626:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 255


 7523              		.loc 1 6626 13 is_stmt 1 view .LVU2004
 7524              		.loc 1 6626 32 is_stmt 0 view .LVU2005
 7525 001e 0E4B     		ldr	r3, .L563
 7526 0020 1868     		ldr	r0, [r3]
 7527 0022 0569     		ldr	r5, [r0, #16]
 7528              		.loc 1 6626 24 view .LVU2006
 7529 0024 0123     		movs	r3, #1
 7530 0026 0DF10702 		add	r2, sp, #7
 7531 002a 3521     		movs	r1, #53
 7532 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7533 002e A847     		blx	r5
 7534              	.LVL792:
6627:Core/Src/bno055.c ****                                                       BNO055_GYRO_CALIB_STAT_REG,
6628:Core/Src/bno055.c ****                                                       &data_u8r,
6629:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6630:Core/Src/bno055.c ****             *gyro_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_CALIB_STAT);
 7535              		.loc 1 6630 13 is_stmt 1 view .LVU2007
 7536              		.loc 1 6630 30 is_stmt 0 view .LVU2008
 7537 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7538 0034 C3F30113 		ubfx	r3, r3, #4, #2
 7539              		.loc 1 6630 28 view .LVU2009
 7540 0038 2370     		strb	r3, [r4]
 7541              	.LVL793:
 7542              	.L556:
6631:Core/Src/bno055.c ****         }
6632:Core/Src/bno055.c ****         else
6633:Core/Src/bno055.c ****         {
6634:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6635:Core/Src/bno055.c ****         }
6636:Core/Src/bno055.c ****     }
6637:Core/Src/bno055.c **** 
6638:Core/Src/bno055.c ****     return com_rslt;
6639:Core/Src/bno055.c **** }
 7543              		.loc 1 6639 1 view .LVU2010
 7544 003a 03B0     		add	sp, sp, #12
 7545              	.LCFI263:
 7546              		.cfi_remember_state
 7547              		.cfi_def_cfa_offset 12
 7548              		@ sp needed
 7549 003c 30BD     		pop	{r4, r5, pc}
 7550              	.LVL794:
 7551              	.L562:
 7552              	.LCFI264:
 7553              		.cfi_restore_state
6621:Core/Src/bno055.c ****         }
 7554              		.loc 1 6621 13 is_stmt 1 view .LVU2011
6621:Core/Src/bno055.c ****         }
 7555              		.loc 1 6621 23 is_stmt 0 view .LVU2012
 7556 003e 0020     		movs	r0, #0
 7557              	.LVL795:
6621:Core/Src/bno055.c ****         }
 7558              		.loc 1 6621 23 view .LVU2013
 7559 0040 FFF7FEFF 		bl	bno055_write_page_id
 7560              	.LVL796:
6623:Core/Src/bno055.c ****         {
 7561              		.loc 1 6623 9 is_stmt 1 view .LVU2014
6623:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 256


 7562              		.loc 1 6623 12 is_stmt 0 view .LVU2015
 7563 0044 0028     		cmp	r0, #0
 7564 0046 EAD0     		beq	.L558
 7565 0048 E5E7     		b	.L557
 7566              	.LVL797:
 7567              	.L559:
6612:Core/Src/bno055.c ****     }
 7568              		.loc 1 6612 16 view .LVU2016
 7569 004a 6FF07E00 		mvn	r0, #126
 7570              	.LVL798:
6612:Core/Src/bno055.c ****     }
 7571              		.loc 1 6612 16 view .LVU2017
 7572 004e F4E7     		b	.L556
 7573              	.LVL799:
 7574              	.L560:
6634:Core/Src/bno055.c ****         }
 7575              		.loc 1 6634 22 view .LVU2018
 7576 0050 4FF0FF30 		mov	r0, #-1
 7577 0054 F1E7     		b	.L556
 7578              	.L564:
 7579 0056 00BF     		.align	2
 7580              	.L563:
 7581 0058 00000000 		.word	.LANCHOR0
 7582              		.cfi_endproc
 7583              	.LFE119:
 7585              		.section	.text.bno055_get_sys_calib_stat,"ax",%progbits
 7586              		.align	1
 7587              		.global	bno055_get_sys_calib_stat
 7588              		.syntax unified
 7589              		.thumb
 7590              		.thumb_func
 7592              	bno055_get_sys_calib_stat:
 7593              	.LVL800:
 7594              	.LFB120:
6640:Core/Src/bno055.c **** 
6641:Core/Src/bno055.c **** /*!
6642:Core/Src/bno055.c ****  *  @brief This API used to read
6643:Core/Src/bno055.c ****  *  system calibration status from register from 0x35 bit 6 and 7
6644:Core/Src/bno055.c ****  *
6645:Core/Src/bno055.c ****  *  @param sys_calib_u8 : The value of system calib status
6646:Core/Src/bno055.c ****  *
6647:Core/Src/bno055.c ****  *
6648:Core/Src/bno055.c ****  *  @return results of bus communication function
6649:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6650:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6651:Core/Src/bno055.c ****  *
6652:Core/Src/bno055.c ****  */
6653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_calib_stat(u8 *sys_calib_u8)
6654:Core/Src/bno055.c **** {
 7595              		.loc 1 6654 1 is_stmt 1 view -0
 7596              		.cfi_startproc
 7597              		@ args = 0, pretend = 0, frame = 8
 7598              		@ frame_needed = 0, uses_anonymous_args = 0
 7599              		.loc 1 6654 1 is_stmt 0 view .LVU2020
 7600 0000 30B5     		push	{r4, r5, lr}
 7601              	.LCFI265:
 7602              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 257


 7603              		.cfi_offset 4, -12
 7604              		.cfi_offset 5, -8
 7605              		.cfi_offset 14, -4
 7606 0002 83B0     		sub	sp, sp, #12
 7607              	.LCFI266:
 7608              		.cfi_def_cfa_offset 24
6655:Core/Src/bno055.c ****     /* Variable used to return value of
6656:Core/Src/bno055.c ****      * communication routine*/
6657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7609              		.loc 1 6657 5 is_stmt 1 view .LVU2021
 7610              	.LVL801:
6658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7611              		.loc 1 6658 5 view .LVU2022
 7612              		.loc 1 6658 8 is_stmt 0 view .LVU2023
 7613 0004 0023     		movs	r3, #0
 7614 0006 8DF80730 		strb	r3, [sp, #7]
6659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7615              		.loc 1 6659 5 is_stmt 1 view .LVU2024
 7616              	.LVL802:
6660:Core/Src/bno055.c **** 
6661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7617              		.loc 1 6662 5 view .LVU2025
 7618              		.loc 1 6662 18 is_stmt 0 view .LVU2026
 7619 000a 124B     		ldr	r3, .L573
 7620 000c 1B68     		ldr	r3, [r3]
 7621              		.loc 1 6662 8 view .LVU2027
 7622 000e DBB1     		cbz	r3, .L569
 7623 0010 0446     		mov	r4, r0
6663:Core/Src/bno055.c ****     {
6664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6665:Core/Src/bno055.c ****     }
6666:Core/Src/bno055.c ****     else
6667:Core/Src/bno055.c ****     {
6668:Core/Src/bno055.c ****         /*condition check for page,system calib
6669:Core/Src/bno055.c ****          * available in the page zero*/
6670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7624              		.loc 1 6670 9 is_stmt 1 view .LVU2028
 7625              		.loc 1 6670 21 is_stmt 0 view .LVU2029
 7626 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7627              		.loc 1 6670 12 view .LVU2030
 7628 0014 93B9     		cbnz	r3, .L572
 7629              	.LVL803:
 7630              	.L567:
6671:Core/Src/bno055.c ****         {
6672:Core/Src/bno055.c ****             /* Write the page zero*/
6673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6674:Core/Src/bno055.c ****         }
6675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7631              		.loc 1 6675 53 discriminator 1 view .LVU2031
 7632 0016 0F4B     		ldr	r3, .L573
 7633 0018 1B68     		ldr	r3, [r3]
 7634 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7635              		.loc 1 6675 41 discriminator 1 view .LVU2032
 7636 001c BBB9     		cbnz	r3, .L570
 7637              	.L568:
6676:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 258


6677:Core/Src/bno055.c ****             /* Read the system calib */
6678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7638              		.loc 1 6678 13 is_stmt 1 view .LVU2033
 7639              		.loc 1 6678 32 is_stmt 0 view .LVU2034
 7640 001e 0D4B     		ldr	r3, .L573
 7641 0020 1868     		ldr	r0, [r3]
 7642 0022 0569     		ldr	r5, [r0, #16]
 7643              		.loc 1 6678 24 view .LVU2035
 7644 0024 0123     		movs	r3, #1
 7645 0026 0DF10702 		add	r2, sp, #7
 7646 002a 3521     		movs	r1, #53
 7647 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7648 002e A847     		blx	r5
 7649              	.LVL804:
6679:Core/Src/bno055.c ****                                                       BNO055_SYS_CALIB_STAT_REG,
6680:Core/Src/bno055.c ****                                                       &data_u8r,
6681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6682:Core/Src/bno055.c ****             *sys_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_CALIB_STAT);
 7650              		.loc 1 6682 13 is_stmt 1 view .LVU2036
 7651              		.loc 1 6682 29 is_stmt 0 view .LVU2037
 7652 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7653 0034 9B09     		lsrs	r3, r3, #6
 7654              		.loc 1 6682 27 view .LVU2038
 7655 0036 2370     		strb	r3, [r4]
 7656              	.LVL805:
 7657              	.L566:
6683:Core/Src/bno055.c ****         }
6684:Core/Src/bno055.c ****         else
6685:Core/Src/bno055.c ****         {
6686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6687:Core/Src/bno055.c ****         }
6688:Core/Src/bno055.c ****     }
6689:Core/Src/bno055.c **** 
6690:Core/Src/bno055.c ****     return com_rslt;
6691:Core/Src/bno055.c **** }
 7658              		.loc 1 6691 1 view .LVU2039
 7659 0038 03B0     		add	sp, sp, #12
 7660              	.LCFI267:
 7661              		.cfi_remember_state
 7662              		.cfi_def_cfa_offset 12
 7663              		@ sp needed
 7664 003a 30BD     		pop	{r4, r5, pc}
 7665              	.LVL806:
 7666              	.L572:
 7667              	.LCFI268:
 7668              		.cfi_restore_state
6673:Core/Src/bno055.c ****         }
 7669              		.loc 1 6673 13 is_stmt 1 view .LVU2040
6673:Core/Src/bno055.c ****         }
 7670              		.loc 1 6673 23 is_stmt 0 view .LVU2041
 7671 003c 0020     		movs	r0, #0
 7672              	.LVL807:
6673:Core/Src/bno055.c ****         }
 7673              		.loc 1 6673 23 view .LVU2042
 7674 003e FFF7FEFF 		bl	bno055_write_page_id
 7675              	.LVL808:
6675:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 259


 7676              		.loc 1 6675 9 is_stmt 1 view .LVU2043
6675:Core/Src/bno055.c ****         {
 7677              		.loc 1 6675 12 is_stmt 0 view .LVU2044
 7678 0042 0028     		cmp	r0, #0
 7679 0044 EBD0     		beq	.L568
 7680 0046 E6E7     		b	.L567
 7681              	.LVL809:
 7682              	.L569:
6664:Core/Src/bno055.c ****     }
 7683              		.loc 1 6664 16 view .LVU2045
 7684 0048 6FF07E00 		mvn	r0, #126
 7685              	.LVL810:
6664:Core/Src/bno055.c ****     }
 7686              		.loc 1 6664 16 view .LVU2046
 7687 004c F4E7     		b	.L566
 7688              	.LVL811:
 7689              	.L570:
6686:Core/Src/bno055.c ****         }
 7690              		.loc 1 6686 22 view .LVU2047
 7691 004e 4FF0FF30 		mov	r0, #-1
 7692 0052 F1E7     		b	.L566
 7693              	.L574:
 7694              		.align	2
 7695              	.L573:
 7696 0054 00000000 		.word	.LANCHOR0
 7697              		.cfi_endproc
 7698              	.LFE120:
 7700              		.section	.text.bno055_get_selftest_accel,"ax",%progbits
 7701              		.align	1
 7702              		.global	bno055_get_selftest_accel
 7703              		.syntax unified
 7704              		.thumb
 7705              		.thumb_func
 7707              	bno055_get_selftest_accel:
 7708              	.LVL812:
 7709              	.LFB121:
6692:Core/Src/bno055.c **** 
6693:Core/Src/bno055.c **** /*!
6694:Core/Src/bno055.c ****  *  @brief This API used to read
6695:Core/Src/bno055.c ****  *  self test of accel from register from 0x36 bit 0
6696:Core/Src/bno055.c ****  *
6697:Core/Src/bno055.c ****  *  @param selftest_accel_u8 : The value of self test of accel
6698:Core/Src/bno055.c ****  *
6699:Core/Src/bno055.c ****  *    selftest_accel_u8 |  result
6700:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6701:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6702:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6703:Core/Src/bno055.c ****  *
6704:Core/Src/bno055.c ****  *  @return results of bus communication function
6705:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6706:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6707:Core/Src/bno055.c ****  *
6708:Core/Src/bno055.c ****  */
6709:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_accel(u8 *selftest_accel_u8)
6710:Core/Src/bno055.c **** {
 7710              		.loc 1 6710 1 is_stmt 1 view -0
 7711              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 260


 7712              		@ args = 0, pretend = 0, frame = 8
 7713              		@ frame_needed = 0, uses_anonymous_args = 0
 7714              		.loc 1 6710 1 is_stmt 0 view .LVU2049
 7715 0000 30B5     		push	{r4, r5, lr}
 7716              	.LCFI269:
 7717              		.cfi_def_cfa_offset 12
 7718              		.cfi_offset 4, -12
 7719              		.cfi_offset 5, -8
 7720              		.cfi_offset 14, -4
 7721 0002 83B0     		sub	sp, sp, #12
 7722              	.LCFI270:
 7723              		.cfi_def_cfa_offset 24
6711:Core/Src/bno055.c ****     /* Variable used to return value of
6712:Core/Src/bno055.c ****      * communication routine*/
6713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7724              		.loc 1 6713 5 is_stmt 1 view .LVU2050
 7725              	.LVL813:
6714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7726              		.loc 1 6714 5 view .LVU2051
 7727              		.loc 1 6714 8 is_stmt 0 view .LVU2052
 7728 0004 0023     		movs	r3, #0
 7729 0006 8DF80730 		strb	r3, [sp, #7]
6715:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7730              		.loc 1 6715 5 is_stmt 1 view .LVU2053
 7731              	.LVL814:
6716:Core/Src/bno055.c **** 
6717:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6718:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7732              		.loc 1 6718 5 view .LVU2054
 7733              		.loc 1 6718 18 is_stmt 0 view .LVU2055
 7734 000a 134B     		ldr	r3, .L583
 7735 000c 1B68     		ldr	r3, [r3]
 7736              		.loc 1 6718 8 view .LVU2056
 7737 000e E3B1     		cbz	r3, .L579
 7738 0010 0446     		mov	r4, r0
6719:Core/Src/bno055.c ****     {
6720:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6721:Core/Src/bno055.c ****     }
6722:Core/Src/bno055.c ****     else
6723:Core/Src/bno055.c ****     {
6724:Core/Src/bno055.c ****         /*condition check for page, accel self test is
6725:Core/Src/bno055.c ****          * available in the page zero*/
6726:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7739              		.loc 1 6726 9 is_stmt 1 view .LVU2057
 7740              		.loc 1 6726 21 is_stmt 0 view .LVU2058
 7741 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7742              		.loc 1 6726 12 view .LVU2059
 7743 0014 9BB9     		cbnz	r3, .L582
 7744              	.LVL815:
 7745              	.L577:
6727:Core/Src/bno055.c ****         {
6728:Core/Src/bno055.c ****             /* Write the page zero*/
6729:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6730:Core/Src/bno055.c ****         }
6731:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7746              		.loc 1 6731 53 discriminator 1 view .LVU2060
 7747 0016 104B     		ldr	r3, .L583
ARM GAS  /tmp/cc9kYR4Z.s 			page 261


 7748 0018 1B68     		ldr	r3, [r3]
 7749 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7750              		.loc 1 6731 41 discriminator 1 view .LVU2061
 7751 001c C3B9     		cbnz	r3, .L580
 7752              	.L578:
6732:Core/Src/bno055.c ****         {
6733:Core/Src/bno055.c ****             /* Read the accel self test */
6734:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7753              		.loc 1 6734 13 is_stmt 1 view .LVU2062
 7754              		.loc 1 6734 32 is_stmt 0 view .LVU2063
 7755 001e 0E4B     		ldr	r3, .L583
 7756 0020 1868     		ldr	r0, [r3]
 7757 0022 0569     		ldr	r5, [r0, #16]
 7758              		.loc 1 6734 24 view .LVU2064
 7759 0024 0123     		movs	r3, #1
 7760 0026 0DF10702 		add	r2, sp, #7
 7761 002a 3621     		movs	r1, #54
 7762 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7763 002e A847     		blx	r5
 7764              	.LVL816:
6735:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_ACCEL_REG,
6736:Core/Src/bno055.c ****                                                       &data_u8r,
6737:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6738:Core/Src/bno055.c ****             *selftest_accel_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_ACCEL);
 7765              		.loc 1 6738 13 is_stmt 1 view .LVU2065
 7766              		.loc 1 6738 34 is_stmt 0 view .LVU2066
 7767 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7768 0034 03F00103 		and	r3, r3, #1
 7769              		.loc 1 6738 32 view .LVU2067
 7770 0038 2370     		strb	r3, [r4]
 7771              	.LVL817:
 7772              	.L576:
6739:Core/Src/bno055.c ****         }
6740:Core/Src/bno055.c ****         else
6741:Core/Src/bno055.c ****         {
6742:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6743:Core/Src/bno055.c ****         }
6744:Core/Src/bno055.c ****     }
6745:Core/Src/bno055.c **** 
6746:Core/Src/bno055.c ****     return com_rslt;
6747:Core/Src/bno055.c **** }
 7773              		.loc 1 6747 1 view .LVU2068
 7774 003a 03B0     		add	sp, sp, #12
 7775              	.LCFI271:
 7776              		.cfi_remember_state
 7777              		.cfi_def_cfa_offset 12
 7778              		@ sp needed
 7779 003c 30BD     		pop	{r4, r5, pc}
 7780              	.LVL818:
 7781              	.L582:
 7782              	.LCFI272:
 7783              		.cfi_restore_state
6729:Core/Src/bno055.c ****         }
 7784              		.loc 1 6729 13 is_stmt 1 view .LVU2069
6729:Core/Src/bno055.c ****         }
 7785              		.loc 1 6729 23 is_stmt 0 view .LVU2070
 7786 003e 0020     		movs	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 262


 7787              	.LVL819:
6729:Core/Src/bno055.c ****         }
 7788              		.loc 1 6729 23 view .LVU2071
 7789 0040 FFF7FEFF 		bl	bno055_write_page_id
 7790              	.LVL820:
6731:Core/Src/bno055.c ****         {
 7791              		.loc 1 6731 9 is_stmt 1 view .LVU2072
6731:Core/Src/bno055.c ****         {
 7792              		.loc 1 6731 12 is_stmt 0 view .LVU2073
 7793 0044 0028     		cmp	r0, #0
 7794 0046 EAD0     		beq	.L578
 7795 0048 E5E7     		b	.L577
 7796              	.LVL821:
 7797              	.L579:
6720:Core/Src/bno055.c ****     }
 7798              		.loc 1 6720 16 view .LVU2074
 7799 004a 6FF07E00 		mvn	r0, #126
 7800              	.LVL822:
6720:Core/Src/bno055.c ****     }
 7801              		.loc 1 6720 16 view .LVU2075
 7802 004e F4E7     		b	.L576
 7803              	.LVL823:
 7804              	.L580:
6742:Core/Src/bno055.c ****         }
 7805              		.loc 1 6742 22 view .LVU2076
 7806 0050 4FF0FF30 		mov	r0, #-1
 7807 0054 F1E7     		b	.L576
 7808              	.L584:
 7809 0056 00BF     		.align	2
 7810              	.L583:
 7811 0058 00000000 		.word	.LANCHOR0
 7812              		.cfi_endproc
 7813              	.LFE121:
 7815              		.section	.text.bno055_get_selftest_mag,"ax",%progbits
 7816              		.align	1
 7817              		.global	bno055_get_selftest_mag
 7818              		.syntax unified
 7819              		.thumb
 7820              		.thumb_func
 7822              	bno055_get_selftest_mag:
 7823              	.LVL824:
 7824              	.LFB122:
6748:Core/Src/bno055.c **** 
6749:Core/Src/bno055.c **** /*!
6750:Core/Src/bno055.c ****  *  @brief This API used to read
6751:Core/Src/bno055.c ****  *  self test of mag from register from 0x36 bit 1
6752:Core/Src/bno055.c ****  *
6753:Core/Src/bno055.c ****  *  @param selftest_mag_u8 : The value of self test of mag
6754:Core/Src/bno055.c ****  *
6755:Core/Src/bno055.c ****  *     selftest_mag_u8  |  result
6756:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6757:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6758:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6759:Core/Src/bno055.c ****  *
6760:Core/Src/bno055.c ****  *  @return results of bus communication function
6761:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6762:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/cc9kYR4Z.s 			page 263


6763:Core/Src/bno055.c ****  *
6764:Core/Src/bno055.c ****  */
6765:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mag(u8 *selftest_mag_u8)
6766:Core/Src/bno055.c **** {
 7825              		.loc 1 6766 1 is_stmt 1 view -0
 7826              		.cfi_startproc
 7827              		@ args = 0, pretend = 0, frame = 8
 7828              		@ frame_needed = 0, uses_anonymous_args = 0
 7829              		.loc 1 6766 1 is_stmt 0 view .LVU2078
 7830 0000 30B5     		push	{r4, r5, lr}
 7831              	.LCFI273:
 7832              		.cfi_def_cfa_offset 12
 7833              		.cfi_offset 4, -12
 7834              		.cfi_offset 5, -8
 7835              		.cfi_offset 14, -4
 7836 0002 83B0     		sub	sp, sp, #12
 7837              	.LCFI274:
 7838              		.cfi_def_cfa_offset 24
6767:Core/Src/bno055.c ****     /* Variable used to return value of
6768:Core/Src/bno055.c ****      * communication routine*/
6769:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7839              		.loc 1 6769 5 is_stmt 1 view .LVU2079
 7840              	.LVL825:
6770:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7841              		.loc 1 6770 5 view .LVU2080
 7842              		.loc 1 6770 8 is_stmt 0 view .LVU2081
 7843 0004 0023     		movs	r3, #0
 7844 0006 8DF80730 		strb	r3, [sp, #7]
6771:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7845              		.loc 1 6771 5 is_stmt 1 view .LVU2082
 7846              	.LVL826:
6772:Core/Src/bno055.c **** 
6773:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6774:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7847              		.loc 1 6774 5 view .LVU2083
 7848              		.loc 1 6774 18 is_stmt 0 view .LVU2084
 7849 000a 134B     		ldr	r3, .L593
 7850 000c 1B68     		ldr	r3, [r3]
 7851              		.loc 1 6774 8 view .LVU2085
 7852 000e E3B1     		cbz	r3, .L589
 7853 0010 0446     		mov	r4, r0
6775:Core/Src/bno055.c ****     {
6776:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6777:Core/Src/bno055.c ****     }
6778:Core/Src/bno055.c ****     else
6779:Core/Src/bno055.c ****     {
6780:Core/Src/bno055.c ****         /*condition check for page, self test of mag is
6781:Core/Src/bno055.c ****          * available in the page zero*/
6782:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7854              		.loc 1 6782 9 is_stmt 1 view .LVU2086
 7855              		.loc 1 6782 21 is_stmt 0 view .LVU2087
 7856 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7857              		.loc 1 6782 12 view .LVU2088
 7858 0014 9BB9     		cbnz	r3, .L592
 7859              	.LVL827:
 7860              	.L587:
6783:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 264


6784:Core/Src/bno055.c ****             /* Write the page zero*/
6785:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6786:Core/Src/bno055.c ****         }
6787:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7861              		.loc 1 6787 53 discriminator 1 view .LVU2089
 7862 0016 104B     		ldr	r3, .L593
 7863 0018 1B68     		ldr	r3, [r3]
 7864 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7865              		.loc 1 6787 41 discriminator 1 view .LVU2090
 7866 001c C3B9     		cbnz	r3, .L590
 7867              	.L588:
6788:Core/Src/bno055.c ****         {
6789:Core/Src/bno055.c ****             /* Read the mag self test */
6790:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7868              		.loc 1 6790 13 is_stmt 1 view .LVU2091
 7869              		.loc 1 6790 32 is_stmt 0 view .LVU2092
 7870 001e 0E4B     		ldr	r3, .L593
 7871 0020 1868     		ldr	r0, [r3]
 7872 0022 0569     		ldr	r5, [r0, #16]
 7873              		.loc 1 6790 24 view .LVU2093
 7874 0024 0123     		movs	r3, #1
 7875 0026 0DF10702 		add	r2, sp, #7
 7876 002a 3621     		movs	r1, #54
 7877 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7878 002e A847     		blx	r5
 7879              	.LVL828:
6791:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MAG_REG,
6792:Core/Src/bno055.c ****                                                       &data_u8r,
6793:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6794:Core/Src/bno055.c ****             *selftest_mag_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MAG);
 7880              		.loc 1 6794 13 is_stmt 1 view .LVU2094
 7881              		.loc 1 6794 32 is_stmt 0 view .LVU2095
 7882 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7883 0034 C3F34003 		ubfx	r3, r3, #1, #1
 7884              		.loc 1 6794 30 view .LVU2096
 7885 0038 2370     		strb	r3, [r4]
 7886              	.LVL829:
 7887              	.L586:
6795:Core/Src/bno055.c ****         }
6796:Core/Src/bno055.c ****         else
6797:Core/Src/bno055.c ****         {
6798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6799:Core/Src/bno055.c ****         }
6800:Core/Src/bno055.c ****     }
6801:Core/Src/bno055.c **** 
6802:Core/Src/bno055.c ****     return com_rslt;
6803:Core/Src/bno055.c **** }
 7888              		.loc 1 6803 1 view .LVU2097
 7889 003a 03B0     		add	sp, sp, #12
 7890              	.LCFI275:
 7891              		.cfi_remember_state
 7892              		.cfi_def_cfa_offset 12
 7893              		@ sp needed
 7894 003c 30BD     		pop	{r4, r5, pc}
 7895              	.LVL830:
 7896              	.L592:
 7897              	.LCFI276:
ARM GAS  /tmp/cc9kYR4Z.s 			page 265


 7898              		.cfi_restore_state
6785:Core/Src/bno055.c ****         }
 7899              		.loc 1 6785 13 is_stmt 1 view .LVU2098
6785:Core/Src/bno055.c ****         }
 7900              		.loc 1 6785 23 is_stmt 0 view .LVU2099
 7901 003e 0020     		movs	r0, #0
 7902              	.LVL831:
6785:Core/Src/bno055.c ****         }
 7903              		.loc 1 6785 23 view .LVU2100
 7904 0040 FFF7FEFF 		bl	bno055_write_page_id
 7905              	.LVL832:
6787:Core/Src/bno055.c ****         {
 7906              		.loc 1 6787 9 is_stmt 1 view .LVU2101
6787:Core/Src/bno055.c ****         {
 7907              		.loc 1 6787 12 is_stmt 0 view .LVU2102
 7908 0044 0028     		cmp	r0, #0
 7909 0046 EAD0     		beq	.L588
 7910 0048 E5E7     		b	.L587
 7911              	.LVL833:
 7912              	.L589:
6776:Core/Src/bno055.c ****     }
 7913              		.loc 1 6776 16 view .LVU2103
 7914 004a 6FF07E00 		mvn	r0, #126
 7915              	.LVL834:
6776:Core/Src/bno055.c ****     }
 7916              		.loc 1 6776 16 view .LVU2104
 7917 004e F4E7     		b	.L586
 7918              	.LVL835:
 7919              	.L590:
6798:Core/Src/bno055.c ****         }
 7920              		.loc 1 6798 22 view .LVU2105
 7921 0050 4FF0FF30 		mov	r0, #-1
 7922 0054 F1E7     		b	.L586
 7923              	.L594:
 7924 0056 00BF     		.align	2
 7925              	.L593:
 7926 0058 00000000 		.word	.LANCHOR0
 7927              		.cfi_endproc
 7928              	.LFE122:
 7930              		.section	.text.bno055_get_selftest_gyro,"ax",%progbits
 7931              		.align	1
 7932              		.global	bno055_get_selftest_gyro
 7933              		.syntax unified
 7934              		.thumb
 7935              		.thumb_func
 7937              	bno055_get_selftest_gyro:
 7938              	.LVL836:
 7939              	.LFB123:
6804:Core/Src/bno055.c **** 
6805:Core/Src/bno055.c **** /*!
6806:Core/Src/bno055.c ****  *  @brief This API used to read
6807:Core/Src/bno055.c ****  *  self test of gyro from register from 0x36 bit 2
6808:Core/Src/bno055.c ****  *
6809:Core/Src/bno055.c ****  *  @param selftest_gyro_u8 : The value of self test of gyro
6810:Core/Src/bno055.c ****  *
6811:Core/Src/bno055.c ****  *     selftest_gyro_u8 |  result
6812:Core/Src/bno055.c ****  *   -------------------- | ---------------------
ARM GAS  /tmp/cc9kYR4Z.s 			page 266


6813:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6814:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6815:Core/Src/bno055.c ****  *
6816:Core/Src/bno055.c ****  *  @return results of bus communication function
6817:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6818:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6819:Core/Src/bno055.c ****  *
6820:Core/Src/bno055.c ****  */
6821:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_gyro(u8 *selftest_gyro_u8)
6822:Core/Src/bno055.c **** {
 7940              		.loc 1 6822 1 is_stmt 1 view -0
 7941              		.cfi_startproc
 7942              		@ args = 0, pretend = 0, frame = 8
 7943              		@ frame_needed = 0, uses_anonymous_args = 0
 7944              		.loc 1 6822 1 is_stmt 0 view .LVU2107
 7945 0000 30B5     		push	{r4, r5, lr}
 7946              	.LCFI277:
 7947              		.cfi_def_cfa_offset 12
 7948              		.cfi_offset 4, -12
 7949              		.cfi_offset 5, -8
 7950              		.cfi_offset 14, -4
 7951 0002 83B0     		sub	sp, sp, #12
 7952              	.LCFI278:
 7953              		.cfi_def_cfa_offset 24
6823:Core/Src/bno055.c ****     /* Variable used to return value of
6824:Core/Src/bno055.c ****      * communication routine*/
6825:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7954              		.loc 1 6825 5 is_stmt 1 view .LVU2108
 7955              	.LVL837:
6826:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7956              		.loc 1 6826 5 view .LVU2109
 7957              		.loc 1 6826 8 is_stmt 0 view .LVU2110
 7958 0004 0023     		movs	r3, #0
 7959 0006 8DF80730 		strb	r3, [sp, #7]
6827:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7960              		.loc 1 6827 5 is_stmt 1 view .LVU2111
 7961              	.LVL838:
6828:Core/Src/bno055.c **** 
6829:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6830:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7962              		.loc 1 6830 5 view .LVU2112
 7963              		.loc 1 6830 18 is_stmt 0 view .LVU2113
 7964 000a 134B     		ldr	r3, .L603
 7965 000c 1B68     		ldr	r3, [r3]
 7966              		.loc 1 6830 8 view .LVU2114
 7967 000e E3B1     		cbz	r3, .L599
 7968 0010 0446     		mov	r4, r0
6831:Core/Src/bno055.c ****     {
6832:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6833:Core/Src/bno055.c ****     }
6834:Core/Src/bno055.c ****     else
6835:Core/Src/bno055.c ****     {
6836:Core/Src/bno055.c ****         /*condition check for page self test of gyro is
6837:Core/Src/bno055.c ****          * available in the page zero*/
6838:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7969              		.loc 1 6838 9 is_stmt 1 view .LVU2115
 7970              		.loc 1 6838 21 is_stmt 0 view .LVU2116
ARM GAS  /tmp/cc9kYR4Z.s 			page 267


 7971 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7972              		.loc 1 6838 12 view .LVU2117
 7973 0014 9BB9     		cbnz	r3, .L602
 7974              	.LVL839:
 7975              	.L597:
6839:Core/Src/bno055.c ****         {
6840:Core/Src/bno055.c ****             /* Write the page zero*/
6841:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6842:Core/Src/bno055.c ****         }
6843:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7976              		.loc 1 6843 53 discriminator 1 view .LVU2118
 7977 0016 104B     		ldr	r3, .L603
 7978 0018 1B68     		ldr	r3, [r3]
 7979 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7980              		.loc 1 6843 41 discriminator 1 view .LVU2119
 7981 001c C3B9     		cbnz	r3, .L600
 7982              	.L598:
6844:Core/Src/bno055.c ****         {
6845:Core/Src/bno055.c ****             /* Read the gyro self test */
6846:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7983              		.loc 1 6846 13 is_stmt 1 view .LVU2120
 7984              		.loc 1 6846 32 is_stmt 0 view .LVU2121
 7985 001e 0E4B     		ldr	r3, .L603
 7986 0020 1868     		ldr	r0, [r3]
 7987 0022 0569     		ldr	r5, [r0, #16]
 7988              		.loc 1 6846 24 view .LVU2122
 7989 0024 0123     		movs	r3, #1
 7990 0026 0DF10702 		add	r2, sp, #7
 7991 002a 3621     		movs	r1, #54
 7992 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7993 002e A847     		blx	r5
 7994              	.LVL840:
6847:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_GYRO_REG,
6848:Core/Src/bno055.c ****                                                       &data_u8r,
6849:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6850:Core/Src/bno055.c ****             *selftest_gyro_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_GYRO);
 7995              		.loc 1 6850 13 is_stmt 1 view .LVU2123
 7996              		.loc 1 6850 33 is_stmt 0 view .LVU2124
 7997 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7998 0034 C3F38003 		ubfx	r3, r3, #2, #1
 7999              		.loc 1 6850 31 view .LVU2125
 8000 0038 2370     		strb	r3, [r4]
 8001              	.LVL841:
 8002              	.L596:
6851:Core/Src/bno055.c ****         }
6852:Core/Src/bno055.c ****         else
6853:Core/Src/bno055.c ****         {
6854:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6855:Core/Src/bno055.c ****         }
6856:Core/Src/bno055.c ****     }
6857:Core/Src/bno055.c **** 
6858:Core/Src/bno055.c ****     return com_rslt;
6859:Core/Src/bno055.c **** }
 8003              		.loc 1 6859 1 view .LVU2126
 8004 003a 03B0     		add	sp, sp, #12
 8005              	.LCFI279:
 8006              		.cfi_remember_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 268


 8007              		.cfi_def_cfa_offset 12
 8008              		@ sp needed
 8009 003c 30BD     		pop	{r4, r5, pc}
 8010              	.LVL842:
 8011              	.L602:
 8012              	.LCFI280:
 8013              		.cfi_restore_state
6841:Core/Src/bno055.c ****         }
 8014              		.loc 1 6841 13 is_stmt 1 view .LVU2127
6841:Core/Src/bno055.c ****         }
 8015              		.loc 1 6841 23 is_stmt 0 view .LVU2128
 8016 003e 0020     		movs	r0, #0
 8017              	.LVL843:
6841:Core/Src/bno055.c ****         }
 8018              		.loc 1 6841 23 view .LVU2129
 8019 0040 FFF7FEFF 		bl	bno055_write_page_id
 8020              	.LVL844:
6843:Core/Src/bno055.c ****         {
 8021              		.loc 1 6843 9 is_stmt 1 view .LVU2130
6843:Core/Src/bno055.c ****         {
 8022              		.loc 1 6843 12 is_stmt 0 view .LVU2131
 8023 0044 0028     		cmp	r0, #0
 8024 0046 EAD0     		beq	.L598
 8025 0048 E5E7     		b	.L597
 8026              	.LVL845:
 8027              	.L599:
6832:Core/Src/bno055.c ****     }
 8028              		.loc 1 6832 16 view .LVU2132
 8029 004a 6FF07E00 		mvn	r0, #126
 8030              	.LVL846:
6832:Core/Src/bno055.c ****     }
 8031              		.loc 1 6832 16 view .LVU2133
 8032 004e F4E7     		b	.L596
 8033              	.LVL847:
 8034              	.L600:
6854:Core/Src/bno055.c ****         }
 8035              		.loc 1 6854 22 view .LVU2134
 8036 0050 4FF0FF30 		mov	r0, #-1
 8037 0054 F1E7     		b	.L596
 8038              	.L604:
 8039 0056 00BF     		.align	2
 8040              	.L603:
 8041 0058 00000000 		.word	.LANCHOR0
 8042              		.cfi_endproc
 8043              	.LFE123:
 8045              		.section	.text.bno055_get_selftest_mcu,"ax",%progbits
 8046              		.align	1
 8047              		.global	bno055_get_selftest_mcu
 8048              		.syntax unified
 8049              		.thumb
 8050              		.thumb_func
 8052              	bno055_get_selftest_mcu:
 8053              	.LVL848:
 8054              	.LFB124:
6860:Core/Src/bno055.c **** 
6861:Core/Src/bno055.c **** /*!
6862:Core/Src/bno055.c ****  *  @brief This API used to read
ARM GAS  /tmp/cc9kYR4Z.s 			page 269


6863:Core/Src/bno055.c ****  *  self test of micro controller from register from 0x36 bit 3
6864:Core/Src/bno055.c ****  *
6865:Core/Src/bno055.c ****  *  @param selftest_mcu_u8 : The value of self test of micro controller
6866:Core/Src/bno055.c ****  *
6867:Core/Src/bno055.c ****  *     selftest_mcu_u8  |  result
6868:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6869:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6870:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6871:Core/Src/bno055.c ****  *
6872:Core/Src/bno055.c ****  *  @return results of bus communication function
6873:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6874:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6875:Core/Src/bno055.c ****  *
6876:Core/Src/bno055.c ****  */
6877:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mcu(u8 *selftest_mcu_u8)
6878:Core/Src/bno055.c **** {
 8055              		.loc 1 6878 1 is_stmt 1 view -0
 8056              		.cfi_startproc
 8057              		@ args = 0, pretend = 0, frame = 8
 8058              		@ frame_needed = 0, uses_anonymous_args = 0
 8059              		.loc 1 6878 1 is_stmt 0 view .LVU2136
 8060 0000 30B5     		push	{r4, r5, lr}
 8061              	.LCFI281:
 8062              		.cfi_def_cfa_offset 12
 8063              		.cfi_offset 4, -12
 8064              		.cfi_offset 5, -8
 8065              		.cfi_offset 14, -4
 8066 0002 83B0     		sub	sp, sp, #12
 8067              	.LCFI282:
 8068              		.cfi_def_cfa_offset 24
6879:Core/Src/bno055.c ****     /* Variable used to return value of
6880:Core/Src/bno055.c ****      * communication routine*/
6881:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8069              		.loc 1 6881 5 is_stmt 1 view .LVU2137
 8070              	.LVL849:
6882:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8071              		.loc 1 6882 5 view .LVU2138
 8072              		.loc 1 6882 8 is_stmt 0 view .LVU2139
 8073 0004 0023     		movs	r3, #0
 8074 0006 8DF80730 		strb	r3, [sp, #7]
6883:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8075              		.loc 1 6883 5 is_stmt 1 view .LVU2140
 8076              	.LVL850:
6884:Core/Src/bno055.c **** 
6885:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6886:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8077              		.loc 1 6886 5 view .LVU2141
 8078              		.loc 1 6886 18 is_stmt 0 view .LVU2142
 8079 000a 134B     		ldr	r3, .L613
 8080 000c 1B68     		ldr	r3, [r3]
 8081              		.loc 1 6886 8 view .LVU2143
 8082 000e E3B1     		cbz	r3, .L609
 8083 0010 0446     		mov	r4, r0
6887:Core/Src/bno055.c ****     {
6888:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6889:Core/Src/bno055.c ****     }
6890:Core/Src/bno055.c ****     else
ARM GAS  /tmp/cc9kYR4Z.s 			page 270


6891:Core/Src/bno055.c ****     {
6892:Core/Src/bno055.c ****         /*condition check for page self test of micro controller
6893:Core/Src/bno055.c ****          * is available in the page zero*/
6894:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8084              		.loc 1 6894 9 is_stmt 1 view .LVU2144
 8085              		.loc 1 6894 21 is_stmt 0 view .LVU2145
 8086 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8087              		.loc 1 6894 12 view .LVU2146
 8088 0014 9BB9     		cbnz	r3, .L612
 8089              	.LVL851:
 8090              	.L607:
6895:Core/Src/bno055.c ****         {
6896:Core/Src/bno055.c ****             /* Write the page zero*/
6897:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6898:Core/Src/bno055.c ****         }
6899:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8091              		.loc 1 6899 53 discriminator 1 view .LVU2147
 8092 0016 104B     		ldr	r3, .L613
 8093 0018 1B68     		ldr	r3, [r3]
 8094 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8095              		.loc 1 6899 41 discriminator 1 view .LVU2148
 8096 001c C3B9     		cbnz	r3, .L610
 8097              	.L608:
6900:Core/Src/bno055.c ****         {
6901:Core/Src/bno055.c ****             /* Read the self test of micro controller*/
6902:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8098              		.loc 1 6902 13 is_stmt 1 view .LVU2149
 8099              		.loc 1 6902 32 is_stmt 0 view .LVU2150
 8100 001e 0E4B     		ldr	r3, .L613
 8101 0020 1868     		ldr	r0, [r3]
 8102 0022 0569     		ldr	r5, [r0, #16]
 8103              		.loc 1 6902 24 view .LVU2151
 8104 0024 0123     		movs	r3, #1
 8105 0026 0DF10702 		add	r2, sp, #7
 8106 002a 3621     		movs	r1, #54
 8107 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8108 002e A847     		blx	r5
 8109              	.LVL852:
6903:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MCU_REG,
6904:Core/Src/bno055.c ****                                                       &data_u8r,
6905:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6906:Core/Src/bno055.c ****             *selftest_mcu_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MCU);
 8110              		.loc 1 6906 13 is_stmt 1 view .LVU2152
 8111              		.loc 1 6906 32 is_stmt 0 view .LVU2153
 8112 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8113 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8114              		.loc 1 6906 30 view .LVU2154
 8115 0038 2370     		strb	r3, [r4]
 8116              	.LVL853:
 8117              	.L606:
6907:Core/Src/bno055.c ****         }
6908:Core/Src/bno055.c ****         else
6909:Core/Src/bno055.c ****         {
6910:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6911:Core/Src/bno055.c ****         }
6912:Core/Src/bno055.c ****     }
6913:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 271


6914:Core/Src/bno055.c ****     return com_rslt;
6915:Core/Src/bno055.c **** }
 8118              		.loc 1 6915 1 view .LVU2155
 8119 003a 03B0     		add	sp, sp, #12
 8120              	.LCFI283:
 8121              		.cfi_remember_state
 8122              		.cfi_def_cfa_offset 12
 8123              		@ sp needed
 8124 003c 30BD     		pop	{r4, r5, pc}
 8125              	.LVL854:
 8126              	.L612:
 8127              	.LCFI284:
 8128              		.cfi_restore_state
6897:Core/Src/bno055.c ****         }
 8129              		.loc 1 6897 13 is_stmt 1 view .LVU2156
6897:Core/Src/bno055.c ****         }
 8130              		.loc 1 6897 23 is_stmt 0 view .LVU2157
 8131 003e 0020     		movs	r0, #0
 8132              	.LVL855:
6897:Core/Src/bno055.c ****         }
 8133              		.loc 1 6897 23 view .LVU2158
 8134 0040 FFF7FEFF 		bl	bno055_write_page_id
 8135              	.LVL856:
6899:Core/Src/bno055.c ****         {
 8136              		.loc 1 6899 9 is_stmt 1 view .LVU2159
6899:Core/Src/bno055.c ****         {
 8137              		.loc 1 6899 12 is_stmt 0 view .LVU2160
 8138 0044 0028     		cmp	r0, #0
 8139 0046 EAD0     		beq	.L608
 8140 0048 E5E7     		b	.L607
 8141              	.LVL857:
 8142              	.L609:
6888:Core/Src/bno055.c ****     }
 8143              		.loc 1 6888 16 view .LVU2161
 8144 004a 6FF07E00 		mvn	r0, #126
 8145              	.LVL858:
6888:Core/Src/bno055.c ****     }
 8146              		.loc 1 6888 16 view .LVU2162
 8147 004e F4E7     		b	.L606
 8148              	.LVL859:
 8149              	.L610:
6910:Core/Src/bno055.c ****         }
 8150              		.loc 1 6910 22 view .LVU2163
 8151 0050 4FF0FF30 		mov	r0, #-1
 8152 0054 F1E7     		b	.L606
 8153              	.L614:
 8154 0056 00BF     		.align	2
 8155              	.L613:
 8156 0058 00000000 		.word	.LANCHOR0
 8157              		.cfi_endproc
 8158              	.LFE124:
 8160              		.section	.text.bno055_get_intr_stat_gyro_any_motion,"ax",%progbits
 8161              		.align	1
 8162              		.global	bno055_get_intr_stat_gyro_any_motion
 8163              		.syntax unified
 8164              		.thumb
 8165              		.thumb_func
ARM GAS  /tmp/cc9kYR4Z.s 			page 272


 8167              	bno055_get_intr_stat_gyro_any_motion:
 8168              	.LVL860:
 8169              	.LFB125:
6916:Core/Src/bno055.c **** 
6917:Core/Src/bno055.c **** /*!
6918:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6919:Core/Src/bno055.c ****  *  gyro anymotion interrupt from register from 0x37 bit 2
6920:Core/Src/bno055.c ****  *
6921:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
6922:Core/Src/bno055.c ****  *
6923:Core/Src/bno055.c ****  *     gyro_any_motion_u8  |  result
6924:Core/Src/bno055.c ****  *    --------------------   | ---------------------
6925:Core/Src/bno055.c ****  *     0x00                  | indicates no interrupt triggered
6926:Core/Src/bno055.c ****  *     0x01                  | indicates interrupt triggered
6927:Core/Src/bno055.c ****  *
6928:Core/Src/bno055.c ****  *  @return results of bus communication function
6929:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6930:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6931:Core/Src/bno055.c ****  *
6932:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt can be BNO055_BIT_ENABLE
6933:Core/Src/bno055.c ****  *  by the following APIs
6934:Core/Src/bno055.c ****  *
6935:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_any_motion()
6936:Core/Src/bno055.c ****  *
6937:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_any_motion()
6938:Core/Src/bno055.c ****  *
6939:Core/Src/bno055.c ****  */
6940:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_any_motion(u8 *gyro_any_motion_u8)
6941:Core/Src/bno055.c **** {
 8170              		.loc 1 6941 1 is_stmt 1 view -0
 8171              		.cfi_startproc
 8172              		@ args = 0, pretend = 0, frame = 8
 8173              		@ frame_needed = 0, uses_anonymous_args = 0
 8174              		.loc 1 6941 1 is_stmt 0 view .LVU2165
 8175 0000 30B5     		push	{r4, r5, lr}
 8176              	.LCFI285:
 8177              		.cfi_def_cfa_offset 12
 8178              		.cfi_offset 4, -12
 8179              		.cfi_offset 5, -8
 8180              		.cfi_offset 14, -4
 8181 0002 83B0     		sub	sp, sp, #12
 8182              	.LCFI286:
 8183              		.cfi_def_cfa_offset 24
6942:Core/Src/bno055.c ****     /* Variable used to return value of
6943:Core/Src/bno055.c ****      * communication routine*/
6944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8184              		.loc 1 6944 5 is_stmt 1 view .LVU2166
 8185              	.LVL861:
6945:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8186              		.loc 1 6945 5 view .LVU2167
 8187              		.loc 1 6945 8 is_stmt 0 view .LVU2168
 8188 0004 0023     		movs	r3, #0
 8189 0006 8DF80730 		strb	r3, [sp, #7]
6946:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8190              		.loc 1 6946 5 is_stmt 1 view .LVU2169
 8191              	.LVL862:
6947:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 273


6948:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6949:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8192              		.loc 1 6949 5 view .LVU2170
 8193              		.loc 1 6949 18 is_stmt 0 view .LVU2171
 8194 000a 134B     		ldr	r3, .L623
 8195 000c 1B68     		ldr	r3, [r3]
 8196              		.loc 1 6949 8 view .LVU2172
 8197 000e E3B1     		cbz	r3, .L619
 8198 0010 0446     		mov	r4, r0
6950:Core/Src/bno055.c ****     {
6951:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6952:Core/Src/bno055.c ****     }
6953:Core/Src/bno055.c ****     else
6954:Core/Src/bno055.c ****     {
6955:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt
6956:Core/Src/bno055.c ****          * status is available in the page zero*/
6957:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8199              		.loc 1 6957 9 is_stmt 1 view .LVU2173
 8200              		.loc 1 6957 21 is_stmt 0 view .LVU2174
 8201 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8202              		.loc 1 6957 12 view .LVU2175
 8203 0014 9BB9     		cbnz	r3, .L622
 8204              	.LVL863:
 8205              	.L617:
6958:Core/Src/bno055.c ****         {
6959:Core/Src/bno055.c ****             /* Write the page zero*/
6960:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6961:Core/Src/bno055.c ****         }
6962:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8206              		.loc 1 6962 53 discriminator 1 view .LVU2176
 8207 0016 104B     		ldr	r3, .L623
 8208 0018 1B68     		ldr	r3, [r3]
 8209 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8210              		.loc 1 6962 41 discriminator 1 view .LVU2177
 8211 001c C3B9     		cbnz	r3, .L620
 8212              	.L618:
6963:Core/Src/bno055.c ****         {
6964:Core/Src/bno055.c ****             /* Read the gyro anymotion interrupt stat_s8*/
6965:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8213              		.loc 1 6965 13 is_stmt 1 view .LVU2178
 8214              		.loc 1 6965 32 is_stmt 0 view .LVU2179
 8215 001e 0E4B     		ldr	r3, .L623
 8216 0020 1868     		ldr	r0, [r3]
 8217 0022 0569     		ldr	r5, [r0, #16]
 8218              		.loc 1 6965 24 view .LVU2180
 8219 0024 0123     		movs	r3, #1
 8220 0026 0DF10702 		add	r2, sp, #7
 8221 002a 3721     		movs	r1, #55
 8222 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8223 002e A847     		blx	r5
 8224              	.LVL864:
6966:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_ANY_MOTION_REG,
6967:Core/Src/bno055.c ****                                                       &data_u8r,
6968:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6969:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_ANY_MOTION);
 8225              		.loc 1 6969 13 is_stmt 1 view .LVU2181
 8226              		.loc 1 6969 35 is_stmt 0 view .LVU2182
ARM GAS  /tmp/cc9kYR4Z.s 			page 274


 8227 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8228 0034 C3F38003 		ubfx	r3, r3, #2, #1
 8229              		.loc 1 6969 33 view .LVU2183
 8230 0038 2370     		strb	r3, [r4]
 8231              	.LVL865:
 8232              	.L616:
6970:Core/Src/bno055.c ****         }
6971:Core/Src/bno055.c ****         else
6972:Core/Src/bno055.c ****         {
6973:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6974:Core/Src/bno055.c ****         }
6975:Core/Src/bno055.c ****     }
6976:Core/Src/bno055.c **** 
6977:Core/Src/bno055.c ****     return com_rslt;
6978:Core/Src/bno055.c **** }
 8233              		.loc 1 6978 1 view .LVU2184
 8234 003a 03B0     		add	sp, sp, #12
 8235              	.LCFI287:
 8236              		.cfi_remember_state
 8237              		.cfi_def_cfa_offset 12
 8238              		@ sp needed
 8239 003c 30BD     		pop	{r4, r5, pc}
 8240              	.LVL866:
 8241              	.L622:
 8242              	.LCFI288:
 8243              		.cfi_restore_state
6960:Core/Src/bno055.c ****         }
 8244              		.loc 1 6960 13 is_stmt 1 view .LVU2185
6960:Core/Src/bno055.c ****         }
 8245              		.loc 1 6960 23 is_stmt 0 view .LVU2186
 8246 003e 0020     		movs	r0, #0
 8247              	.LVL867:
6960:Core/Src/bno055.c ****         }
 8248              		.loc 1 6960 23 view .LVU2187
 8249 0040 FFF7FEFF 		bl	bno055_write_page_id
 8250              	.LVL868:
6962:Core/Src/bno055.c ****         {
 8251              		.loc 1 6962 9 is_stmt 1 view .LVU2188
6962:Core/Src/bno055.c ****         {
 8252              		.loc 1 6962 12 is_stmt 0 view .LVU2189
 8253 0044 0028     		cmp	r0, #0
 8254 0046 EAD0     		beq	.L618
 8255 0048 E5E7     		b	.L617
 8256              	.LVL869:
 8257              	.L619:
6951:Core/Src/bno055.c ****     }
 8258              		.loc 1 6951 16 view .LVU2190
 8259 004a 6FF07E00 		mvn	r0, #126
 8260              	.LVL870:
6951:Core/Src/bno055.c ****     }
 8261              		.loc 1 6951 16 view .LVU2191
 8262 004e F4E7     		b	.L616
 8263              	.LVL871:
 8264              	.L620:
6973:Core/Src/bno055.c ****         }
 8265              		.loc 1 6973 22 view .LVU2192
 8266 0050 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cc9kYR4Z.s 			page 275


 8267 0054 F1E7     		b	.L616
 8268              	.L624:
 8269 0056 00BF     		.align	2
 8270              	.L623:
 8271 0058 00000000 		.word	.LANCHOR0
 8272              		.cfi_endproc
 8273              	.LFE125:
 8275              		.section	.text.bno055_get_intr_stat_gyro_highrate,"ax",%progbits
 8276              		.align	1
 8277              		.global	bno055_get_intr_stat_gyro_highrate
 8278              		.syntax unified
 8279              		.thumb
 8280              		.thumb_func
 8282              	bno055_get_intr_stat_gyro_highrate:
 8283              	.LVL872:
 8284              	.LFB126:
6979:Core/Src/bno055.c **** 
6980:Core/Src/bno055.c **** /*!
6981:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6982:Core/Src/bno055.c ****  *  gyro highrate interrupt from register from 0x37 bit 3
6983:Core/Src/bno055.c ****  *
6984:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
6985:Core/Src/bno055.c ****  *
6986:Core/Src/bno055.c ****  *     gyro_highrate_u8   |  result
6987:Core/Src/bno055.c ****  *    -------------------   | ---------------------
6988:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
6989:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
6990:Core/Src/bno055.c ****  *
6991:Core/Src/bno055.c ****  *  @return results of bus communication function
6992:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6993:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6994:Core/Src/bno055.c ****  *
6995:Core/Src/bno055.c ****  *  @note Gyro highrate interrupt can be configured
6996:Core/Src/bno055.c ****  *          by the following APIs
6997:Core/Src/bno055.c ****  *
6998:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_highrate()
6999:Core/Src/bno055.c ****  *
7000:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_highrate()
7001:Core/Src/bno055.c ****  */
7002:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_highrate(u8 *gyro_highrate_u8)
7003:Core/Src/bno055.c **** {
 8285              		.loc 1 7003 1 is_stmt 1 view -0
 8286              		.cfi_startproc
 8287              		@ args = 0, pretend = 0, frame = 8
 8288              		@ frame_needed = 0, uses_anonymous_args = 0
 8289              		.loc 1 7003 1 is_stmt 0 view .LVU2194
 8290 0000 30B5     		push	{r4, r5, lr}
 8291              	.LCFI289:
 8292              		.cfi_def_cfa_offset 12
 8293              		.cfi_offset 4, -12
 8294              		.cfi_offset 5, -8
 8295              		.cfi_offset 14, -4
 8296 0002 83B0     		sub	sp, sp, #12
 8297              	.LCFI290:
 8298              		.cfi_def_cfa_offset 24
7004:Core/Src/bno055.c ****     /* Variable used to return value of
7005:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 276


7006:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8299              		.loc 1 7006 5 is_stmt 1 view .LVU2195
 8300              	.LVL873:
7007:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8301              		.loc 1 7007 5 view .LVU2196
 8302              		.loc 1 7007 8 is_stmt 0 view .LVU2197
 8303 0004 0023     		movs	r3, #0
 8304 0006 8DF80730 		strb	r3, [sp, #7]
7008:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8305              		.loc 1 7008 5 is_stmt 1 view .LVU2198
 8306              	.LVL874:
7009:Core/Src/bno055.c **** 
7010:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7011:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8307              		.loc 1 7011 5 view .LVU2199
 8308              		.loc 1 7011 18 is_stmt 0 view .LVU2200
 8309 000a 134B     		ldr	r3, .L633
 8310 000c 1B68     		ldr	r3, [r3]
 8311              		.loc 1 7011 8 view .LVU2201
 8312 000e E3B1     		cbz	r3, .L629
 8313 0010 0446     		mov	r4, r0
7012:Core/Src/bno055.c ****     {
7013:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7014:Core/Src/bno055.c ****     }
7015:Core/Src/bno055.c ****     else
7016:Core/Src/bno055.c ****     {
7017:Core/Src/bno055.c ****         /*condition check for page, gyro highrate is
7018:Core/Src/bno055.c ****          * available in the page zero*/
7019:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8314              		.loc 1 7019 9 is_stmt 1 view .LVU2202
 8315              		.loc 1 7019 21 is_stmt 0 view .LVU2203
 8316 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8317              		.loc 1 7019 12 view .LVU2204
 8318 0014 9BB9     		cbnz	r3, .L632
 8319              	.LVL875:
 8320              	.L627:
7020:Core/Src/bno055.c ****         {
7021:Core/Src/bno055.c ****             /* Write the page zero*/
7022:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7023:Core/Src/bno055.c ****         }
7024:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8321              		.loc 1 7024 53 discriminator 1 view .LVU2205
 8322 0016 104B     		ldr	r3, .L633
 8323 0018 1B68     		ldr	r3, [r3]
 8324 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8325              		.loc 1 7024 41 discriminator 1 view .LVU2206
 8326 001c C3B9     		cbnz	r3, .L630
 8327              	.L628:
7025:Core/Src/bno055.c ****         {
7026:Core/Src/bno055.c ****             /* Read the gyro highrate interrupt stat_s8*/
7027:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8328              		.loc 1 7027 13 is_stmt 1 view .LVU2207
 8329              		.loc 1 7027 32 is_stmt 0 view .LVU2208
 8330 001e 0E4B     		ldr	r3, .L633
 8331 0020 1868     		ldr	r0, [r3]
 8332 0022 0569     		ldr	r5, [r0, #16]
 8333              		.loc 1 7027 24 view .LVU2209
ARM GAS  /tmp/cc9kYR4Z.s 			page 277


 8334 0024 0123     		movs	r3, #1
 8335 0026 0DF10702 		add	r2, sp, #7
 8336 002a 3721     		movs	r1, #55
 8337 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8338 002e A847     		blx	r5
 8339              	.LVL876:
7028:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_HIGHRATE_REG,
7029:Core/Src/bno055.c ****                                                       &data_u8r,
7030:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7031:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_HIGHRATE);
 8340              		.loc 1 7031 13 is_stmt 1 view .LVU2210
 8341              		.loc 1 7031 33 is_stmt 0 view .LVU2211
 8342 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8343 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8344              		.loc 1 7031 31 view .LVU2212
 8345 0038 2370     		strb	r3, [r4]
 8346              	.LVL877:
 8347              	.L626:
7032:Core/Src/bno055.c ****         }
7033:Core/Src/bno055.c ****         else
7034:Core/Src/bno055.c ****         {
7035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7036:Core/Src/bno055.c ****         }
7037:Core/Src/bno055.c ****     }
7038:Core/Src/bno055.c **** 
7039:Core/Src/bno055.c ****     return com_rslt;
7040:Core/Src/bno055.c **** }
 8348              		.loc 1 7040 1 view .LVU2213
 8349 003a 03B0     		add	sp, sp, #12
 8350              	.LCFI291:
 8351              		.cfi_remember_state
 8352              		.cfi_def_cfa_offset 12
 8353              		@ sp needed
 8354 003c 30BD     		pop	{r4, r5, pc}
 8355              	.LVL878:
 8356              	.L632:
 8357              	.LCFI292:
 8358              		.cfi_restore_state
7022:Core/Src/bno055.c ****         }
 8359              		.loc 1 7022 13 is_stmt 1 view .LVU2214
7022:Core/Src/bno055.c ****         }
 8360              		.loc 1 7022 23 is_stmt 0 view .LVU2215
 8361 003e 0020     		movs	r0, #0
 8362              	.LVL879:
7022:Core/Src/bno055.c ****         }
 8363              		.loc 1 7022 23 view .LVU2216
 8364 0040 FFF7FEFF 		bl	bno055_write_page_id
 8365              	.LVL880:
7024:Core/Src/bno055.c ****         {
 8366              		.loc 1 7024 9 is_stmt 1 view .LVU2217
7024:Core/Src/bno055.c ****         {
 8367              		.loc 1 7024 12 is_stmt 0 view .LVU2218
 8368 0044 0028     		cmp	r0, #0
 8369 0046 EAD0     		beq	.L628
 8370 0048 E5E7     		b	.L627
 8371              	.LVL881:
 8372              	.L629:
ARM GAS  /tmp/cc9kYR4Z.s 			page 278


7013:Core/Src/bno055.c ****     }
 8373              		.loc 1 7013 16 view .LVU2219
 8374 004a 6FF07E00 		mvn	r0, #126
 8375              	.LVL882:
7013:Core/Src/bno055.c ****     }
 8376              		.loc 1 7013 16 view .LVU2220
 8377 004e F4E7     		b	.L626
 8378              	.LVL883:
 8379              	.L630:
7035:Core/Src/bno055.c ****         }
 8380              		.loc 1 7035 22 view .LVU2221
 8381 0050 4FF0FF30 		mov	r0, #-1
 8382 0054 F1E7     		b	.L626
 8383              	.L634:
 8384 0056 00BF     		.align	2
 8385              	.L633:
 8386 0058 00000000 		.word	.LANCHOR0
 8387              		.cfi_endproc
 8388              	.LFE126:
 8390              		.section	.text.bno055_get_intr_stat_accel_high_g,"ax",%progbits
 8391              		.align	1
 8392              		.global	bno055_get_intr_stat_accel_high_g
 8393              		.syntax unified
 8394              		.thumb
 8395              		.thumb_func
 8397              	bno055_get_intr_stat_accel_high_g:
 8398              	.LVL884:
 8399              	.LFB127:
7041:Core/Src/bno055.c **** 
7042:Core/Src/bno055.c **** /*!
7043:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7044:Core/Src/bno055.c ****  *  accel highg interrupt from register from 0x37 bit 5
7045:Core/Src/bno055.c ****  *
7046:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
7047:Core/Src/bno055.c ****  *
7048:Core/Src/bno055.c ****  *     accel_high_g_u8    |  result
7049:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7050:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7051:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7052:Core/Src/bno055.c ****  *
7053:Core/Src/bno055.c ****  *  @return results of bus communication function
7054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7056:Core/Src/bno055.c ****  *
7057:Core/Src/bno055.c ****  *  @note Accel highg interrupt can be configured
7058:Core/Src/bno055.c ****  *          by the following APIs
7059:Core/Src/bno055.c ****  *
7060:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_high_g()
7061:Core/Src/bno055.c ****  *
7062:Core/Src/bno055.c ****  *  bno055_set_intr_accel_high_g()
7063:Core/Src/bno055.c ****  *
7064:Core/Src/bno055.c ****  */
7065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_high_g(u8 *accel_high_g_u8)
7066:Core/Src/bno055.c **** {
 8400              		.loc 1 7066 1 is_stmt 1 view -0
 8401              		.cfi_startproc
 8402              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc9kYR4Z.s 			page 279


 8403              		@ frame_needed = 0, uses_anonymous_args = 0
 8404              		.loc 1 7066 1 is_stmt 0 view .LVU2223
 8405 0000 30B5     		push	{r4, r5, lr}
 8406              	.LCFI293:
 8407              		.cfi_def_cfa_offset 12
 8408              		.cfi_offset 4, -12
 8409              		.cfi_offset 5, -8
 8410              		.cfi_offset 14, -4
 8411 0002 83B0     		sub	sp, sp, #12
 8412              	.LCFI294:
 8413              		.cfi_def_cfa_offset 24
7067:Core/Src/bno055.c ****     /* Variable used to return value of
7068:Core/Src/bno055.c ****      * communication routine*/
7069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8414              		.loc 1 7069 5 is_stmt 1 view .LVU2224
 8415              	.LVL885:
7070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8416              		.loc 1 7070 5 view .LVU2225
 8417              		.loc 1 7070 8 is_stmt 0 view .LVU2226
 8418 0004 0023     		movs	r3, #0
 8419 0006 8DF80730 		strb	r3, [sp, #7]
7071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8420              		.loc 1 7071 5 is_stmt 1 view .LVU2227
 8421              	.LVL886:
7072:Core/Src/bno055.c **** 
7073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8422              		.loc 1 7074 5 view .LVU2228
 8423              		.loc 1 7074 18 is_stmt 0 view .LVU2229
 8424 000a 134B     		ldr	r3, .L643
 8425 000c 1B68     		ldr	r3, [r3]
 8426              		.loc 1 7074 8 view .LVU2230
 8427 000e E3B1     		cbz	r3, .L639
 8428 0010 0446     		mov	r4, r0
7075:Core/Src/bno055.c ****     {
7076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7077:Core/Src/bno055.c ****     }
7078:Core/Src/bno055.c ****     else
7079:Core/Src/bno055.c ****     {
7080:Core/Src/bno055.c ****         /*condition check for page, accel highg is
7081:Core/Src/bno055.c ****          * available in the page zero*/
7082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8429              		.loc 1 7082 9 is_stmt 1 view .LVU2231
 8430              		.loc 1 7082 21 is_stmt 0 view .LVU2232
 8431 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8432              		.loc 1 7082 12 view .LVU2233
 8433 0014 9BB9     		cbnz	r3, .L642
 8434              	.LVL887:
 8435              	.L637:
7083:Core/Src/bno055.c ****         {
7084:Core/Src/bno055.c ****             /* Write the page zero*/
7085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7086:Core/Src/bno055.c ****         }
7087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8436              		.loc 1 7087 53 discriminator 1 view .LVU2234
 8437 0016 104B     		ldr	r3, .L643
 8438 0018 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 280


 8439 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8440              		.loc 1 7087 41 discriminator 1 view .LVU2235
 8441 001c C3B9     		cbnz	r3, .L640
 8442              	.L638:
7088:Core/Src/bno055.c ****         {
7089:Core/Src/bno055.c ****             /* Read the accel highg interrupt stat_s8 */
7090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8443              		.loc 1 7090 13 is_stmt 1 view .LVU2236
 8444              		.loc 1 7090 32 is_stmt 0 view .LVU2237
 8445 001e 0E4B     		ldr	r3, .L643
 8446 0020 1868     		ldr	r0, [r3]
 8447 0022 0569     		ldr	r5, [r0, #16]
 8448              		.loc 1 7090 24 view .LVU2238
 8449 0024 0123     		movs	r3, #1
 8450 0026 0DF10702 		add	r2, sp, #7
 8451 002a 3721     		movs	r1, #55
 8452 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8453 002e A847     		blx	r5
 8454              	.LVL888:
7091:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_HIGH_G_REG,
7092:Core/Src/bno055.c ****                                                       &data_u8r,
7093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7094:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_HIGH_G);
 8455              		.loc 1 7094 13 is_stmt 1 view .LVU2239
 8456              		.loc 1 7094 32 is_stmt 0 view .LVU2240
 8457 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8458 0034 C3F34013 		ubfx	r3, r3, #5, #1
 8459              		.loc 1 7094 30 view .LVU2241
 8460 0038 2370     		strb	r3, [r4]
 8461              	.LVL889:
 8462              	.L636:
7095:Core/Src/bno055.c ****         }
7096:Core/Src/bno055.c ****         else
7097:Core/Src/bno055.c ****         {
7098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7099:Core/Src/bno055.c ****         }
7100:Core/Src/bno055.c ****     }
7101:Core/Src/bno055.c **** 
7102:Core/Src/bno055.c ****     return com_rslt;
7103:Core/Src/bno055.c **** }
 8463              		.loc 1 7103 1 view .LVU2242
 8464 003a 03B0     		add	sp, sp, #12
 8465              	.LCFI295:
 8466              		.cfi_remember_state
 8467              		.cfi_def_cfa_offset 12
 8468              		@ sp needed
 8469 003c 30BD     		pop	{r4, r5, pc}
 8470              	.LVL890:
 8471              	.L642:
 8472              	.LCFI296:
 8473              		.cfi_restore_state
7085:Core/Src/bno055.c ****         }
 8474              		.loc 1 7085 13 is_stmt 1 view .LVU2243
7085:Core/Src/bno055.c ****         }
 8475              		.loc 1 7085 23 is_stmt 0 view .LVU2244
 8476 003e 0020     		movs	r0, #0
 8477              	.LVL891:
ARM GAS  /tmp/cc9kYR4Z.s 			page 281


7085:Core/Src/bno055.c ****         }
 8478              		.loc 1 7085 23 view .LVU2245
 8479 0040 FFF7FEFF 		bl	bno055_write_page_id
 8480              	.LVL892:
7087:Core/Src/bno055.c ****         {
 8481              		.loc 1 7087 9 is_stmt 1 view .LVU2246
7087:Core/Src/bno055.c ****         {
 8482              		.loc 1 7087 12 is_stmt 0 view .LVU2247
 8483 0044 0028     		cmp	r0, #0
 8484 0046 EAD0     		beq	.L638
 8485 0048 E5E7     		b	.L637
 8486              	.LVL893:
 8487              	.L639:
7076:Core/Src/bno055.c ****     }
 8488              		.loc 1 7076 16 view .LVU2248
 8489 004a 6FF07E00 		mvn	r0, #126
 8490              	.LVL894:
7076:Core/Src/bno055.c ****     }
 8491              		.loc 1 7076 16 view .LVU2249
 8492 004e F4E7     		b	.L636
 8493              	.LVL895:
 8494              	.L640:
7098:Core/Src/bno055.c ****         }
 8495              		.loc 1 7098 22 view .LVU2250
 8496 0050 4FF0FF30 		mov	r0, #-1
 8497 0054 F1E7     		b	.L636
 8498              	.L644:
 8499 0056 00BF     		.align	2
 8500              	.L643:
 8501 0058 00000000 		.word	.LANCHOR0
 8502              		.cfi_endproc
 8503              	.LFE127:
 8505              		.section	.text.bno055_get_intr_stat_accel_any_motion,"ax",%progbits
 8506              		.align	1
 8507              		.global	bno055_get_intr_stat_accel_any_motion
 8508              		.syntax unified
 8509              		.thumb
 8510              		.thumb_func
 8512              	bno055_get_intr_stat_accel_any_motion:
 8513              	.LVL896:
 8514              	.LFB128:
7104:Core/Src/bno055.c **** 
7105:Core/Src/bno055.c **** /*!
7106:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7107:Core/Src/bno055.c ****  *  accel anymotion interrupt from register from 0x37 bit 6
7108:Core/Src/bno055.c ****  *
7109:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
7110:Core/Src/bno055.c ****  *
7111:Core/Src/bno055.c ****  *     accel_any_motion_u8 |  result
7112:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7113:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7114:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7115:Core/Src/bno055.c ****  *
7116:Core/Src/bno055.c ****  *  @return results of bus communication function
7117:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7118:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7119:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 282


7120:Core/Src/bno055.c ****  *  @note Accel anymotion interrupt can be configured
7121:Core/Src/bno055.c ****  *          by the following APIs
7122:Core/Src/bno055.c ****  *
7123:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_any_motion()
7124:Core/Src/bno055.c ****  *
7125:Core/Src/bno055.c ****  *  bno055_set_intr_accel_any_motion()
7126:Core/Src/bno055.c ****  */
7127:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_any_motion(u8 *accel_any_motion_u8)
7128:Core/Src/bno055.c **** {
 8515              		.loc 1 7128 1 is_stmt 1 view -0
 8516              		.cfi_startproc
 8517              		@ args = 0, pretend = 0, frame = 8
 8518              		@ frame_needed = 0, uses_anonymous_args = 0
 8519              		.loc 1 7128 1 is_stmt 0 view .LVU2252
 8520 0000 30B5     		push	{r4, r5, lr}
 8521              	.LCFI297:
 8522              		.cfi_def_cfa_offset 12
 8523              		.cfi_offset 4, -12
 8524              		.cfi_offset 5, -8
 8525              		.cfi_offset 14, -4
 8526 0002 83B0     		sub	sp, sp, #12
 8527              	.LCFI298:
 8528              		.cfi_def_cfa_offset 24
7129:Core/Src/bno055.c ****     /* Variable used to return value of
7130:Core/Src/bno055.c ****      * communication routine*/
7131:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8529              		.loc 1 7131 5 is_stmt 1 view .LVU2253
 8530              	.LVL897:
7132:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8531              		.loc 1 7132 5 view .LVU2254
 8532              		.loc 1 7132 8 is_stmt 0 view .LVU2255
 8533 0004 0023     		movs	r3, #0
 8534 0006 8DF80730 		strb	r3, [sp, #7]
7133:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8535              		.loc 1 7133 5 is_stmt 1 view .LVU2256
 8536              	.LVL898:
7134:Core/Src/bno055.c **** 
7135:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7136:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8537              		.loc 1 7136 5 view .LVU2257
 8538              		.loc 1 7136 18 is_stmt 0 view .LVU2258
 8539 000a 134B     		ldr	r3, .L653
 8540 000c 1B68     		ldr	r3, [r3]
 8541              		.loc 1 7136 8 view .LVU2259
 8542 000e E3B1     		cbz	r3, .L649
 8543 0010 0446     		mov	r4, r0
7137:Core/Src/bno055.c ****     {
7138:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7139:Core/Src/bno055.c ****     }
7140:Core/Src/bno055.c ****     else
7141:Core/Src/bno055.c ****     {
7142:Core/Src/bno055.c ****         /*condition check for page, accel anymotion is
7143:Core/Src/bno055.c ****          * available in the page zero*/
7144:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8544              		.loc 1 7144 9 is_stmt 1 view .LVU2260
 8545              		.loc 1 7144 21 is_stmt 0 view .LVU2261
 8546 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 283


 8547              		.loc 1 7144 12 view .LVU2262
 8548 0014 9BB9     		cbnz	r3, .L652
 8549              	.LVL899:
 8550              	.L647:
7145:Core/Src/bno055.c ****         {
7146:Core/Src/bno055.c ****             /* Write the page zero*/
7147:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7148:Core/Src/bno055.c ****         }
7149:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8551              		.loc 1 7149 53 discriminator 1 view .LVU2263
 8552 0016 104B     		ldr	r3, .L653
 8553 0018 1B68     		ldr	r3, [r3]
 8554 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8555              		.loc 1 7149 41 discriminator 1 view .LVU2264
 8556 001c C3B9     		cbnz	r3, .L650
 8557              	.L648:
7150:Core/Src/bno055.c ****         {
7151:Core/Src/bno055.c ****             /* Read the accel anymotion interrupt stat_s8 */
7152:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8558              		.loc 1 7152 13 is_stmt 1 view .LVU2265
 8559              		.loc 1 7152 32 is_stmt 0 view .LVU2266
 8560 001e 0E4B     		ldr	r3, .L653
 8561 0020 1868     		ldr	r0, [r3]
 8562 0022 0569     		ldr	r5, [r0, #16]
 8563              		.loc 1 7152 24 view .LVU2267
 8564 0024 0123     		movs	r3, #1
 8565 0026 0DF10702 		add	r2, sp, #7
 8566 002a 3721     		movs	r1, #55
 8567 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8568 002e A847     		blx	r5
 8569              	.LVL900:
7153:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_ANY_MOTION_REG,
7154:Core/Src/bno055.c ****                                                       &data_u8r,
7155:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7156:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_ANY_MOTION)
 8570              		.loc 1 7156 13 is_stmt 1 view .LVU2268
 8571              		.loc 1 7156 36 is_stmt 0 view .LVU2269
 8572 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8573 0034 C3F38013 		ubfx	r3, r3, #6, #1
 8574              		.loc 1 7156 34 view .LVU2270
 8575 0038 2370     		strb	r3, [r4]
 8576              	.LVL901:
 8577              	.L646:
7157:Core/Src/bno055.c ****         }
7158:Core/Src/bno055.c ****         else
7159:Core/Src/bno055.c ****         {
7160:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7161:Core/Src/bno055.c ****         }
7162:Core/Src/bno055.c ****     }
7163:Core/Src/bno055.c **** 
7164:Core/Src/bno055.c ****     return com_rslt;
7165:Core/Src/bno055.c **** }
 8578              		.loc 1 7165 1 view .LVU2271
 8579 003a 03B0     		add	sp, sp, #12
 8580              	.LCFI299:
 8581              		.cfi_remember_state
 8582              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 284


 8583              		@ sp needed
 8584 003c 30BD     		pop	{r4, r5, pc}
 8585              	.LVL902:
 8586              	.L652:
 8587              	.LCFI300:
 8588              		.cfi_restore_state
7147:Core/Src/bno055.c ****         }
 8589              		.loc 1 7147 13 is_stmt 1 view .LVU2272
7147:Core/Src/bno055.c ****         }
 8590              		.loc 1 7147 23 is_stmt 0 view .LVU2273
 8591 003e 0020     		movs	r0, #0
 8592              	.LVL903:
7147:Core/Src/bno055.c ****         }
 8593              		.loc 1 7147 23 view .LVU2274
 8594 0040 FFF7FEFF 		bl	bno055_write_page_id
 8595              	.LVL904:
7149:Core/Src/bno055.c ****         {
 8596              		.loc 1 7149 9 is_stmt 1 view .LVU2275
7149:Core/Src/bno055.c ****         {
 8597              		.loc 1 7149 12 is_stmt 0 view .LVU2276
 8598 0044 0028     		cmp	r0, #0
 8599 0046 EAD0     		beq	.L648
 8600 0048 E5E7     		b	.L647
 8601              	.LVL905:
 8602              	.L649:
7138:Core/Src/bno055.c ****     }
 8603              		.loc 1 7138 16 view .LVU2277
 8604 004a 6FF07E00 		mvn	r0, #126
 8605              	.LVL906:
7138:Core/Src/bno055.c ****     }
 8606              		.loc 1 7138 16 view .LVU2278
 8607 004e F4E7     		b	.L646
 8608              	.LVL907:
 8609              	.L650:
7160:Core/Src/bno055.c ****         }
 8610              		.loc 1 7160 22 view .LVU2279
 8611 0050 4FF0FF30 		mov	r0, #-1
 8612 0054 F1E7     		b	.L646
 8613              	.L654:
 8614 0056 00BF     		.align	2
 8615              	.L653:
 8616 0058 00000000 		.word	.LANCHOR0
 8617              		.cfi_endproc
 8618              	.LFE128:
 8620              		.section	.text.bno055_get_intr_stat_accel_no_motion,"ax",%progbits
 8621              		.align	1
 8622              		.global	bno055_get_intr_stat_accel_no_motion
 8623              		.syntax unified
 8624              		.thumb
 8625              		.thumb_func
 8627              	bno055_get_intr_stat_accel_no_motion:
 8628              	.LVL908:
 8629              	.LFB129:
7166:Core/Src/bno055.c **** 
7167:Core/Src/bno055.c **** /*!
7168:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7169:Core/Src/bno055.c ****  *  accel nomotion/slowmotion interrupt from register from 0x37 bit 6
ARM GAS  /tmp/cc9kYR4Z.s 			page 285


7170:Core/Src/bno055.c ****  *
7171:Core/Src/bno055.c ****  *  @param accel_no_motion_u8 : The value of accel
7172:Core/Src/bno055.c ****  *  nomotion/slowmotion interrupt
7173:Core/Src/bno055.c ****  *
7174:Core/Src/bno055.c ****  *     accel_no_motion_u8 |  result
7175:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7176:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7177:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7178:Core/Src/bno055.c ****  *
7179:Core/Src/bno055.c ****  *  @return results of bus communication function
7180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7182:Core/Src/bno055.c ****  *
7183:Core/Src/bno055.c ****  *  @note Accel nomotion/slowmotion interrupt can be configured
7184:Core/Src/bno055.c ****  *          by the following APIs
7185:Core/Src/bno055.c ****  *
7186:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_nomotion()
7187:Core/Src/bno055.c ****  *
7188:Core/Src/bno055.c ****  *  bno055_set_intr_accel_nomotion()
7189:Core/Src/bno055.c ****  */
7190:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_no_motion(u8 *accel_no_motion_u8)
7191:Core/Src/bno055.c **** {
 8630              		.loc 1 7191 1 is_stmt 1 view -0
 8631              		.cfi_startproc
 8632              		@ args = 0, pretend = 0, frame = 8
 8633              		@ frame_needed = 0, uses_anonymous_args = 0
 8634              		.loc 1 7191 1 is_stmt 0 view .LVU2281
 8635 0000 30B5     		push	{r4, r5, lr}
 8636              	.LCFI301:
 8637              		.cfi_def_cfa_offset 12
 8638              		.cfi_offset 4, -12
 8639              		.cfi_offset 5, -8
 8640              		.cfi_offset 14, -4
 8641 0002 83B0     		sub	sp, sp, #12
 8642              	.LCFI302:
 8643              		.cfi_def_cfa_offset 24
7192:Core/Src/bno055.c ****     /* Variable used to return value of
7193:Core/Src/bno055.c ****      * communication routine*/
7194:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8644              		.loc 1 7194 5 is_stmt 1 view .LVU2282
 8645              	.LVL909:
7195:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8646              		.loc 1 7195 5 view .LVU2283
 8647              		.loc 1 7195 8 is_stmt 0 view .LVU2284
 8648 0004 0023     		movs	r3, #0
 8649 0006 8DF80730 		strb	r3, [sp, #7]
7196:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8650              		.loc 1 7196 5 is_stmt 1 view .LVU2285
 8651              	.LVL910:
7197:Core/Src/bno055.c **** 
7198:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7199:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8652              		.loc 1 7199 5 view .LVU2286
 8653              		.loc 1 7199 18 is_stmt 0 view .LVU2287
 8654 000a 124B     		ldr	r3, .L663
 8655 000c 1B68     		ldr	r3, [r3]
 8656              		.loc 1 7199 8 view .LVU2288
ARM GAS  /tmp/cc9kYR4Z.s 			page 286


 8657 000e DBB1     		cbz	r3, .L659
 8658 0010 0446     		mov	r4, r0
7200:Core/Src/bno055.c ****     {
7201:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7202:Core/Src/bno055.c ****     }
7203:Core/Src/bno055.c ****     else
7204:Core/Src/bno055.c ****     {
7205:Core/Src/bno055.c ****         /*condition check for page, accel
7206:Core/Src/bno055.c ****         * nomotion/slowmotion interrupt
7207:Core/Src/bno055.c ****         * is available in the page zero*/
7208:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8659              		.loc 1 7208 9 is_stmt 1 view .LVU2289
 8660              		.loc 1 7208 21 is_stmt 0 view .LVU2290
 8661 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8662              		.loc 1 7208 12 view .LVU2291
 8663 0014 93B9     		cbnz	r3, .L662
 8664              	.LVL911:
 8665              	.L657:
7209:Core/Src/bno055.c ****         {
7210:Core/Src/bno055.c ****             /* Write the page zero*/
7211:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7212:Core/Src/bno055.c ****         }
7213:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8666              		.loc 1 7213 53 discriminator 1 view .LVU2292
 8667 0016 0F4B     		ldr	r3, .L663
 8668 0018 1B68     		ldr	r3, [r3]
 8669 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8670              		.loc 1 7213 41 discriminator 1 view .LVU2293
 8671 001c BBB9     		cbnz	r3, .L660
 8672              	.L658:
7214:Core/Src/bno055.c ****         {
7215:Core/Src/bno055.c ****             /* Read the stat_s8 of accel
7216:Core/Src/bno055.c ****              * nomotion/slowmotion interrupt*/
7217:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8673              		.loc 1 7217 13 is_stmt 1 view .LVU2294
 8674              		.loc 1 7217 32 is_stmt 0 view .LVU2295
 8675 001e 0D4B     		ldr	r3, .L663
 8676 0020 1868     		ldr	r0, [r3]
 8677 0022 0569     		ldr	r5, [r0, #16]
 8678              		.loc 1 7217 24 view .LVU2296
 8679 0024 0123     		movs	r3, #1
 8680 0026 0DF10702 		add	r2, sp, #7
 8681 002a 3721     		movs	r1, #55
 8682 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8683 002e A847     		blx	r5
 8684              	.LVL912:
7218:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_NO_MOTION_REG,
7219:Core/Src/bno055.c ****                                                       &data_u8r,
7220:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7221:Core/Src/bno055.c ****             *accel_no_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_NO_MOTION);
 8685              		.loc 1 7221 13 is_stmt 1 view .LVU2297
 8686              		.loc 1 7221 35 is_stmt 0 view .LVU2298
 8687 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8688 0034 DB09     		lsrs	r3, r3, #7
 8689              		.loc 1 7221 33 view .LVU2299
 8690 0036 2370     		strb	r3, [r4]
 8691              	.LVL913:
ARM GAS  /tmp/cc9kYR4Z.s 			page 287


 8692              	.L656:
7222:Core/Src/bno055.c ****         }
7223:Core/Src/bno055.c ****         else
7224:Core/Src/bno055.c ****         {
7225:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7226:Core/Src/bno055.c ****         }
7227:Core/Src/bno055.c ****     }
7228:Core/Src/bno055.c **** 
7229:Core/Src/bno055.c ****     return com_rslt;
7230:Core/Src/bno055.c **** }
 8693              		.loc 1 7230 1 view .LVU2300
 8694 0038 03B0     		add	sp, sp, #12
 8695              	.LCFI303:
 8696              		.cfi_remember_state
 8697              		.cfi_def_cfa_offset 12
 8698              		@ sp needed
 8699 003a 30BD     		pop	{r4, r5, pc}
 8700              	.LVL914:
 8701              	.L662:
 8702              	.LCFI304:
 8703              		.cfi_restore_state
7211:Core/Src/bno055.c ****         }
 8704              		.loc 1 7211 13 is_stmt 1 view .LVU2301
7211:Core/Src/bno055.c ****         }
 8705              		.loc 1 7211 23 is_stmt 0 view .LVU2302
 8706 003c 0020     		movs	r0, #0
 8707              	.LVL915:
7211:Core/Src/bno055.c ****         }
 8708              		.loc 1 7211 23 view .LVU2303
 8709 003e FFF7FEFF 		bl	bno055_write_page_id
 8710              	.LVL916:
7213:Core/Src/bno055.c ****         {
 8711              		.loc 1 7213 9 is_stmt 1 view .LVU2304
7213:Core/Src/bno055.c ****         {
 8712              		.loc 1 7213 12 is_stmt 0 view .LVU2305
 8713 0042 0028     		cmp	r0, #0
 8714 0044 EBD0     		beq	.L658
 8715 0046 E6E7     		b	.L657
 8716              	.LVL917:
 8717              	.L659:
7201:Core/Src/bno055.c ****     }
 8718              		.loc 1 7201 16 view .LVU2306
 8719 0048 6FF07E00 		mvn	r0, #126
 8720              	.LVL918:
7201:Core/Src/bno055.c ****     }
 8721              		.loc 1 7201 16 view .LVU2307
 8722 004c F4E7     		b	.L656
 8723              	.LVL919:
 8724              	.L660:
7225:Core/Src/bno055.c ****         }
 8725              		.loc 1 7225 22 view .LVU2308
 8726 004e 4FF0FF30 		mov	r0, #-1
 8727 0052 F1E7     		b	.L656
 8728              	.L664:
 8729              		.align	2
 8730              	.L663:
 8731 0054 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cc9kYR4Z.s 			page 288


 8732              		.cfi_endproc
 8733              	.LFE129:
 8735              		.section	.text.bno055_get_stat_main_clk,"ax",%progbits
 8736              		.align	1
 8737              		.global	bno055_get_stat_main_clk
 8738              		.syntax unified
 8739              		.thumb
 8740              		.thumb_func
 8742              	bno055_get_stat_main_clk:
 8743              	.LVL920:
 8744              	.LFB130:
7231:Core/Src/bno055.c **** 
7232:Core/Src/bno055.c **** /*!
7233:Core/Src/bno055.c ****  *  @brief This API is used to read status of main clock
7234:Core/Src/bno055.c ****  *  from the register 0x38 bit 0
7235:Core/Src/bno055.c ****  *
7236:Core/Src/bno055.c ****  *  @param stat_main_clk_u8 : the status of main clock
7237:Core/Src/bno055.c ****  *
7238:Core/Src/bno055.c ****  *
7239:Core/Src/bno055.c ****  *  @return results of bus communication function
7240:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7241:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7242:Core/Src/bno055.c ****  *
7243:Core/Src/bno055.c ****  */
7244:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_stat_main_clk(u8 *stat_main_clk_u8)
7245:Core/Src/bno055.c **** {
 8745              		.loc 1 7245 1 is_stmt 1 view -0
 8746              		.cfi_startproc
 8747              		@ args = 0, pretend = 0, frame = 8
 8748              		@ frame_needed = 0, uses_anonymous_args = 0
 8749              		.loc 1 7245 1 is_stmt 0 view .LVU2310
 8750 0000 30B5     		push	{r4, r5, lr}
 8751              	.LCFI305:
 8752              		.cfi_def_cfa_offset 12
 8753              		.cfi_offset 4, -12
 8754              		.cfi_offset 5, -8
 8755              		.cfi_offset 14, -4
 8756 0002 83B0     		sub	sp, sp, #12
 8757              	.LCFI306:
 8758              		.cfi_def_cfa_offset 24
7246:Core/Src/bno055.c ****     /* Variable used to return value of
7247:Core/Src/bno055.c ****      * communication routine*/
7248:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8759              		.loc 1 7248 5 is_stmt 1 view .LVU2311
 8760              	.LVL921:
7249:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8761              		.loc 1 7249 5 view .LVU2312
 8762              		.loc 1 7249 8 is_stmt 0 view .LVU2313
 8763 0004 0023     		movs	r3, #0
 8764 0006 8DF80730 		strb	r3, [sp, #7]
7250:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8765              		.loc 1 7250 5 is_stmt 1 view .LVU2314
 8766              	.LVL922:
7251:Core/Src/bno055.c **** 
7252:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7253:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8767              		.loc 1 7253 5 view .LVU2315
ARM GAS  /tmp/cc9kYR4Z.s 			page 289


 8768              		.loc 1 7253 18 is_stmt 0 view .LVU2316
 8769 000a 134B     		ldr	r3, .L673
 8770 000c 1B68     		ldr	r3, [r3]
 8771              		.loc 1 7253 8 view .LVU2317
 8772 000e E3B1     		cbz	r3, .L669
 8773 0010 0446     		mov	r4, r0
7254:Core/Src/bno055.c ****     {
7255:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7256:Core/Src/bno055.c ****     }
7257:Core/Src/bno055.c ****     else
7258:Core/Src/bno055.c ****     {
7259:Core/Src/bno055.c ****         /*condition check for page, status of main clk is
7260:Core/Src/bno055.c ****          * available in the page zero*/
7261:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8774              		.loc 1 7261 9 is_stmt 1 view .LVU2318
 8775              		.loc 1 7261 21 is_stmt 0 view .LVU2319
 8776 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8777              		.loc 1 7261 12 view .LVU2320
 8778 0014 9BB9     		cbnz	r3, .L672
 8779              	.LVL923:
 8780              	.L667:
7262:Core/Src/bno055.c ****         {
7263:Core/Src/bno055.c ****             /* Write the page zero*/
7264:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7265:Core/Src/bno055.c ****         }
7266:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8781              		.loc 1 7266 53 discriminator 1 view .LVU2321
 8782 0016 104B     		ldr	r3, .L673
 8783 0018 1B68     		ldr	r3, [r3]
 8784 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8785              		.loc 1 7266 41 discriminator 1 view .LVU2322
 8786 001c C3B9     		cbnz	r3, .L670
 8787              	.L668:
7267:Core/Src/bno055.c ****         {
7268:Core/Src/bno055.c ****             /* Read the status of main clk */
7269:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8788              		.loc 1 7269 13 is_stmt 1 view .LVU2323
 8789              		.loc 1 7269 32 is_stmt 0 view .LVU2324
 8790 001e 0E4B     		ldr	r3, .L673
 8791 0020 1868     		ldr	r0, [r3]
 8792 0022 0569     		ldr	r5, [r0, #16]
 8793              		.loc 1 7269 24 view .LVU2325
 8794 0024 0123     		movs	r3, #1
 8795 0026 0DF10702 		add	r2, sp, #7
 8796 002a 3821     		movs	r1, #56
 8797 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8798 002e A847     		blx	r5
 8799              	.LVL924:
7270:Core/Src/bno055.c ****                                                       BNO055_SYS_MAIN_CLK_REG,
7271:Core/Src/bno055.c ****                                                       &data_u8r,
7272:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7273:Core/Src/bno055.c ****             *stat_main_clk_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_MAIN_CLK);
 8800              		.loc 1 7273 13 is_stmt 1 view .LVU2326
 8801              		.loc 1 7273 33 is_stmt 0 view .LVU2327
 8802 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8803 0034 03F01003 		and	r3, r3, #16
 8804              		.loc 1 7273 31 view .LVU2328
ARM GAS  /tmp/cc9kYR4Z.s 			page 290


 8805 0038 2370     		strb	r3, [r4]
 8806              	.LVL925:
 8807              	.L666:
7274:Core/Src/bno055.c ****         }
7275:Core/Src/bno055.c ****         else
7276:Core/Src/bno055.c ****         {
7277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7278:Core/Src/bno055.c ****         }
7279:Core/Src/bno055.c ****     }
7280:Core/Src/bno055.c **** 
7281:Core/Src/bno055.c ****     return com_rslt;
7282:Core/Src/bno055.c **** }
 8808              		.loc 1 7282 1 view .LVU2329
 8809 003a 03B0     		add	sp, sp, #12
 8810              	.LCFI307:
 8811              		.cfi_remember_state
 8812              		.cfi_def_cfa_offset 12
 8813              		@ sp needed
 8814 003c 30BD     		pop	{r4, r5, pc}
 8815              	.LVL926:
 8816              	.L672:
 8817              	.LCFI308:
 8818              		.cfi_restore_state
7264:Core/Src/bno055.c ****         }
 8819              		.loc 1 7264 13 is_stmt 1 view .LVU2330
7264:Core/Src/bno055.c ****         }
 8820              		.loc 1 7264 23 is_stmt 0 view .LVU2331
 8821 003e 0020     		movs	r0, #0
 8822              	.LVL927:
7264:Core/Src/bno055.c ****         }
 8823              		.loc 1 7264 23 view .LVU2332
 8824 0040 FFF7FEFF 		bl	bno055_write_page_id
 8825              	.LVL928:
7266:Core/Src/bno055.c ****         {
 8826              		.loc 1 7266 9 is_stmt 1 view .LVU2333
7266:Core/Src/bno055.c ****         {
 8827              		.loc 1 7266 12 is_stmt 0 view .LVU2334
 8828 0044 0028     		cmp	r0, #0
 8829 0046 EAD0     		beq	.L668
 8830 0048 E5E7     		b	.L667
 8831              	.LVL929:
 8832              	.L669:
7255:Core/Src/bno055.c ****     }
 8833              		.loc 1 7255 16 view .LVU2335
 8834 004a 6FF07E00 		mvn	r0, #126
 8835              	.LVL930:
7255:Core/Src/bno055.c ****     }
 8836              		.loc 1 7255 16 view .LVU2336
 8837 004e F4E7     		b	.L666
 8838              	.LVL931:
 8839              	.L670:
7277:Core/Src/bno055.c ****         }
 8840              		.loc 1 7277 22 view .LVU2337
 8841 0050 4FF0FF30 		mov	r0, #-1
 8842 0054 F1E7     		b	.L666
 8843              	.L674:
 8844 0056 00BF     		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 291


 8845              	.L673:
 8846 0058 00000000 		.word	.LANCHOR0
 8847              		.cfi_endproc
 8848              	.LFE130:
 8850              		.section	.text.bno055_get_sys_stat_code,"ax",%progbits
 8851              		.align	1
 8852              		.global	bno055_get_sys_stat_code
 8853              		.syntax unified
 8854              		.thumb
 8855              		.thumb_func
 8857              	bno055_get_sys_stat_code:
 8858              	.LVL932:
 8859              	.LFB131:
7283:Core/Src/bno055.c **** 
7284:Core/Src/bno055.c **** /*!
7285:Core/Src/bno055.c ****  *  @brief This API is used to read system status
7286:Core/Src/bno055.c ****  *  code from the register 0x39 it is a byte of data
7287:Core/Src/bno055.c ****  *
7288:Core/Src/bno055.c ****  *  @param sys_stat_u8 : the status of system
7289:Core/Src/bno055.c ****  *
7290:Core/Src/bno055.c ****  *
7291:Core/Src/bno055.c ****  *  @return results of bus communication function
7292:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7293:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7294:Core/Src/bno055.c ****  *
7295:Core/Src/bno055.c ****  */
7296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_stat_code(u8 *sys_stat_u8)
7297:Core/Src/bno055.c **** {
 8860              		.loc 1 7297 1 is_stmt 1 view -0
 8861              		.cfi_startproc
 8862              		@ args = 0, pretend = 0, frame = 8
 8863              		@ frame_needed = 0, uses_anonymous_args = 0
 8864              		.loc 1 7297 1 is_stmt 0 view .LVU2339
 8865 0000 70B5     		push	{r4, r5, r6, lr}
 8866              	.LCFI309:
 8867              		.cfi_def_cfa_offset 16
 8868              		.cfi_offset 4, -16
 8869              		.cfi_offset 5, -12
 8870              		.cfi_offset 6, -8
 8871              		.cfi_offset 14, -4
 8872 0002 82B0     		sub	sp, sp, #8
 8873              	.LCFI310:
 8874              		.cfi_def_cfa_offset 24
7298:Core/Src/bno055.c ****     /* Variable used to return value of
7299:Core/Src/bno055.c ****      * communication routine*/
7300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8875              		.loc 1 7300 5 is_stmt 1 view .LVU2340
 8876              	.LVL933:
7301:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8877              		.loc 1 7301 5 view .LVU2341
 8878              		.loc 1 7301 8 is_stmt 0 view .LVU2342
 8879 0004 0023     		movs	r3, #0
 8880 0006 8DF80730 		strb	r3, [sp, #7]
7302:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8881              		.loc 1 7302 5 is_stmt 1 view .LVU2343
 8882              	.LVL934:
7303:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 292


7304:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7305:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8883              		.loc 1 7305 5 view .LVU2344
 8884              		.loc 1 7305 18 is_stmt 0 view .LVU2345
 8885 000a 124B     		ldr	r3, .L683
 8886 000c 1B68     		ldr	r3, [r3]
 8887              		.loc 1 7305 8 view .LVU2346
 8888 000e D3B1     		cbz	r3, .L679
 8889 0010 0546     		mov	r5, r0
7306:Core/Src/bno055.c ****     {
7307:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7308:Core/Src/bno055.c ****     }
7309:Core/Src/bno055.c ****     else
7310:Core/Src/bno055.c ****     {
7311:Core/Src/bno055.c ****         /*condition check for page, the status of system is
7312:Core/Src/bno055.c ****          * available in the page zero*/
7313:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8890              		.loc 1 7313 9 is_stmt 1 view .LVU2347
 8891              		.loc 1 7313 21 is_stmt 0 view .LVU2348
 8892 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8893              		.loc 1 7313 12 view .LVU2349
 8894 0014 8BB9     		cbnz	r3, .L682
 8895              	.LVL935:
 8896              	.L677:
7314:Core/Src/bno055.c ****         {
7315:Core/Src/bno055.c ****             /* Write the page zero*/
7316:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7317:Core/Src/bno055.c ****         }
7318:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8897              		.loc 1 7318 53 discriminator 1 view .LVU2350
 8898 0016 0F4B     		ldr	r3, .L683
 8899 0018 1B68     		ldr	r3, [r3]
 8900 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8901              		.loc 1 7318 41 discriminator 1 view .LVU2351
 8902 001c B3B9     		cbnz	r3, .L680
 8903              	.L678:
7319:Core/Src/bno055.c ****         {
7320:Core/Src/bno055.c ****             /* Read the the status of system*/
7321:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8904              		.loc 1 7321 13 is_stmt 1 view .LVU2352
 8905              		.loc 1 7321 32 is_stmt 0 view .LVU2353
 8906 001e 0D4B     		ldr	r3, .L683
 8907 0020 1C68     		ldr	r4, [r3]
 8908 0022 2669     		ldr	r6, [r4, #16]
 8909              		.loc 1 7321 24 view .LVU2354
 8910 0024 0123     		movs	r3, #1
 8911 0026 0DF10702 		add	r2, sp, #7
 8912 002a 3921     		movs	r1, #57
 8913 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 8914 002e B047     		blx	r6
 8915              	.LVL936:
7322:Core/Src/bno055.c ****                                                       BNO055_SYS_STAT_CODE_REG,
7323:Core/Src/bno055.c ****                                                       &data_u8r,
7324:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7325:Core/Src/bno055.c ****             *sys_stat_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_STAT_CODE);
 8916              		.loc 1 7325 13 is_stmt 1 view .LVU2355
 8917              		.loc 1 7325 26 is_stmt 0 view .LVU2356
ARM GAS  /tmp/cc9kYR4Z.s 			page 293


 8918 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8919 0034 2B70     		strb	r3, [r5]
 8920              	.LVL937:
 8921              	.L676:
7326:Core/Src/bno055.c ****         }
7327:Core/Src/bno055.c ****         else
7328:Core/Src/bno055.c ****         {
7329:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7330:Core/Src/bno055.c ****         }
7331:Core/Src/bno055.c ****     }
7332:Core/Src/bno055.c **** 
7333:Core/Src/bno055.c ****     return com_rslt;
7334:Core/Src/bno055.c **** }
 8922              		.loc 1 7334 1 view .LVU2357
 8923 0036 02B0     		add	sp, sp, #8
 8924              	.LCFI311:
 8925              		.cfi_remember_state
 8926              		.cfi_def_cfa_offset 16
 8927              		@ sp needed
 8928 0038 70BD     		pop	{r4, r5, r6, pc}
 8929              	.LVL938:
 8930              	.L682:
 8931              	.LCFI312:
 8932              		.cfi_restore_state
7316:Core/Src/bno055.c ****         }
 8933              		.loc 1 7316 13 is_stmt 1 view .LVU2358
7316:Core/Src/bno055.c ****         }
 8934              		.loc 1 7316 23 is_stmt 0 view .LVU2359
 8935 003a 0020     		movs	r0, #0
 8936              	.LVL939:
7316:Core/Src/bno055.c ****         }
 8937              		.loc 1 7316 23 view .LVU2360
 8938 003c FFF7FEFF 		bl	bno055_write_page_id
 8939              	.LVL940:
7318:Core/Src/bno055.c ****         {
 8940              		.loc 1 7318 9 is_stmt 1 view .LVU2361
7318:Core/Src/bno055.c ****         {
 8941              		.loc 1 7318 12 is_stmt 0 view .LVU2362
 8942 0040 0028     		cmp	r0, #0
 8943 0042 ECD0     		beq	.L678
 8944 0044 E7E7     		b	.L677
 8945              	.LVL941:
 8946              	.L679:
7307:Core/Src/bno055.c ****     }
 8947              		.loc 1 7307 16 view .LVU2363
 8948 0046 6FF07E00 		mvn	r0, #126
 8949              	.LVL942:
7307:Core/Src/bno055.c ****     }
 8950              		.loc 1 7307 16 view .LVU2364
 8951 004a F4E7     		b	.L676
 8952              	.LVL943:
 8953              	.L680:
7329:Core/Src/bno055.c ****         }
 8954              		.loc 1 7329 22 view .LVU2365
 8955 004c 4FF0FF30 		mov	r0, #-1
 8956 0050 F1E7     		b	.L676
 8957              	.L684:
ARM GAS  /tmp/cc9kYR4Z.s 			page 294


 8958 0052 00BF     		.align	2
 8959              	.L683:
 8960 0054 00000000 		.word	.LANCHOR0
 8961              		.cfi_endproc
 8962              	.LFE131:
 8964              		.section	.text.bno055_get_sys_error_code,"ax",%progbits
 8965              		.align	1
 8966              		.global	bno055_get_sys_error_code
 8967              		.syntax unified
 8968              		.thumb
 8969              		.thumb_func
 8971              	bno055_get_sys_error_code:
 8972              	.LVL944:
 8973              	.LFB132:
7335:Core/Src/bno055.c **** 
7336:Core/Src/bno055.c **** /*!
7337:Core/Src/bno055.c ****  *  @brief This API is used to read system BNO055_ERROR
7338:Core/Src/bno055.c ****  *  code from the register 0x3A it is a byte of data
7339:Core/Src/bno055.c ****  *
7340:Core/Src/bno055.c ****  *  @param sys_error_u8 : The value of system BNO055_ERROR code
7341:Core/Src/bno055.c ****  *
7342:Core/Src/bno055.c ****  *
7343:Core/Src/bno055.c ****  *  @return results of bus communication function
7344:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7345:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7346:Core/Src/bno055.c ****  *
7347:Core/Src/bno055.c ****  *
7348:Core/Src/bno055.c ****  */
7349:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_error_code(u8 *sys_error_u8)
7350:Core/Src/bno055.c **** {
 8974              		.loc 1 7350 1 is_stmt 1 view -0
 8975              		.cfi_startproc
 8976              		@ args = 0, pretend = 0, frame = 8
 8977              		@ frame_needed = 0, uses_anonymous_args = 0
 8978              		.loc 1 7350 1 is_stmt 0 view .LVU2367
 8979 0000 70B5     		push	{r4, r5, r6, lr}
 8980              	.LCFI313:
 8981              		.cfi_def_cfa_offset 16
 8982              		.cfi_offset 4, -16
 8983              		.cfi_offset 5, -12
 8984              		.cfi_offset 6, -8
 8985              		.cfi_offset 14, -4
 8986 0002 82B0     		sub	sp, sp, #8
 8987              	.LCFI314:
 8988              		.cfi_def_cfa_offset 24
7351:Core/Src/bno055.c ****     /* Variable used to return value of
7352:Core/Src/bno055.c ****      * communication routine*/
7353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8989              		.loc 1 7353 5 is_stmt 1 view .LVU2368
 8990              	.LVL945:
7354:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8991              		.loc 1 7354 5 view .LVU2369
 8992              		.loc 1 7354 8 is_stmt 0 view .LVU2370
 8993 0004 0023     		movs	r3, #0
 8994 0006 8DF80730 		strb	r3, [sp, #7]
7355:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8995              		.loc 1 7355 5 is_stmt 1 view .LVU2371
ARM GAS  /tmp/cc9kYR4Z.s 			page 295


 8996              	.LVL946:
7356:Core/Src/bno055.c **** 
7357:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7358:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8997              		.loc 1 7358 5 view .LVU2372
 8998              		.loc 1 7358 18 is_stmt 0 view .LVU2373
 8999 000a 124B     		ldr	r3, .L693
 9000 000c 1B68     		ldr	r3, [r3]
 9001              		.loc 1 7358 8 view .LVU2374
 9002 000e D3B1     		cbz	r3, .L689
 9003 0010 0546     		mov	r5, r0
7359:Core/Src/bno055.c ****     {
7360:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7361:Core/Src/bno055.c ****     }
7362:Core/Src/bno055.c ****     else
7363:Core/Src/bno055.c ****     {
7364:Core/Src/bno055.c ****         /*condition check for page, system BNO055_ERROR code is
7365:Core/Src/bno055.c ****          * available in the page zero*/
7366:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9004              		.loc 1 7366 9 is_stmt 1 view .LVU2375
 9005              		.loc 1 7366 21 is_stmt 0 view .LVU2376
 9006 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9007              		.loc 1 7366 12 view .LVU2377
 9008 0014 8BB9     		cbnz	r3, .L692
 9009              	.LVL947:
 9010              	.L687:
7367:Core/Src/bno055.c ****         {
7368:Core/Src/bno055.c ****             /* Write the page zero*/
7369:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7370:Core/Src/bno055.c ****         }
7371:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9011              		.loc 1 7371 53 discriminator 1 view .LVU2378
 9012 0016 0F4B     		ldr	r3, .L693
 9013 0018 1B68     		ldr	r3, [r3]
 9014 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9015              		.loc 1 7371 41 discriminator 1 view .LVU2379
 9016 001c B3B9     		cbnz	r3, .L690
 9017              	.L688:
7372:Core/Src/bno055.c ****         {
7373:Core/Src/bno055.c ****             /* Read the system BNO055_ERROR code*/
7374:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9018              		.loc 1 7374 13 is_stmt 1 view .LVU2380
 9019              		.loc 1 7374 32 is_stmt 0 view .LVU2381
 9020 001e 0D4B     		ldr	r3, .L693
 9021 0020 1C68     		ldr	r4, [r3]
 9022 0022 2669     		ldr	r6, [r4, #16]
 9023              		.loc 1 7374 24 view .LVU2382
 9024 0024 0123     		movs	r3, #1
 9025 0026 0DF10702 		add	r2, sp, #7
 9026 002a 3A21     		movs	r1, #58
 9027 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 9028 002e B047     		blx	r6
 9029              	.LVL948:
7375:Core/Src/bno055.c ****                                                       BNO055_SYS_ERROR_CODE_REG,
7376:Core/Src/bno055.c ****                                                       &data_u8r,
7377:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7378:Core/Src/bno055.c ****             *sys_error_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_ERROR_CODE);
ARM GAS  /tmp/cc9kYR4Z.s 			page 296


 9030              		.loc 1 7378 13 is_stmt 1 view .LVU2383
 9031              		.loc 1 7378 27 is_stmt 0 view .LVU2384
 9032 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9033 0034 2B70     		strb	r3, [r5]
 9034              	.LVL949:
 9035              	.L686:
7379:Core/Src/bno055.c ****         }
7380:Core/Src/bno055.c ****         else
7381:Core/Src/bno055.c ****         {
7382:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7383:Core/Src/bno055.c ****         }
7384:Core/Src/bno055.c ****     }
7385:Core/Src/bno055.c **** 
7386:Core/Src/bno055.c ****     return com_rslt;
7387:Core/Src/bno055.c **** }
 9036              		.loc 1 7387 1 view .LVU2385
 9037 0036 02B0     		add	sp, sp, #8
 9038              	.LCFI315:
 9039              		.cfi_remember_state
 9040              		.cfi_def_cfa_offset 16
 9041              		@ sp needed
 9042 0038 70BD     		pop	{r4, r5, r6, pc}
 9043              	.LVL950:
 9044              	.L692:
 9045              	.LCFI316:
 9046              		.cfi_restore_state
7369:Core/Src/bno055.c ****         }
 9047              		.loc 1 7369 13 is_stmt 1 view .LVU2386
7369:Core/Src/bno055.c ****         }
 9048              		.loc 1 7369 23 is_stmt 0 view .LVU2387
 9049 003a 0020     		movs	r0, #0
 9050              	.LVL951:
7369:Core/Src/bno055.c ****         }
 9051              		.loc 1 7369 23 view .LVU2388
 9052 003c FFF7FEFF 		bl	bno055_write_page_id
 9053              	.LVL952:
7371:Core/Src/bno055.c ****         {
 9054              		.loc 1 7371 9 is_stmt 1 view .LVU2389
7371:Core/Src/bno055.c ****         {
 9055              		.loc 1 7371 12 is_stmt 0 view .LVU2390
 9056 0040 0028     		cmp	r0, #0
 9057 0042 ECD0     		beq	.L688
 9058 0044 E7E7     		b	.L687
 9059              	.LVL953:
 9060              	.L689:
7360:Core/Src/bno055.c ****     }
 9061              		.loc 1 7360 16 view .LVU2391
 9062 0046 6FF07E00 		mvn	r0, #126
 9063              	.LVL954:
7360:Core/Src/bno055.c ****     }
 9064              		.loc 1 7360 16 view .LVU2392
 9065 004a F4E7     		b	.L686
 9066              	.LVL955:
 9067              	.L690:
7382:Core/Src/bno055.c ****         }
 9068              		.loc 1 7382 22 view .LVU2393
 9069 004c 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cc9kYR4Z.s 			page 297


 9070 0050 F1E7     		b	.L686
 9071              	.L694:
 9072 0052 00BF     		.align	2
 9073              	.L693:
 9074 0054 00000000 		.word	.LANCHOR0
 9075              		.cfi_endproc
 9076              	.LFE132:
 9078              		.section	.text.bno055_get_accel_unit,"ax",%progbits
 9079              		.align	1
 9080              		.global	bno055_get_accel_unit
 9081              		.syntax unified
 9082              		.thumb
 9083              		.thumb_func
 9085              	bno055_get_accel_unit:
 9086              	.LVL956:
 9087              	.LFB133:
7388:Core/Src/bno055.c **** 
7389:Core/Src/bno055.c **** /*!
7390:Core/Src/bno055.c ****  *  @brief This API used to read the accel unit
7391:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7392:Core/Src/bno055.c ****  *
7393:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7394:Core/Src/bno055.c ****  *
7395:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7396:Core/Src/bno055.c ****  *   -------------    | ---------------
7397:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7398:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7399:Core/Src/bno055.c ****  *
7400:Core/Src/bno055.c ****  *  @return results of bus communication function
7401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7403:Core/Src/bno055.c ****  *
7404:Core/Src/bno055.c ****  */
7405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_unit(u8 *accel_unit_u8)
7406:Core/Src/bno055.c **** {
 9088              		.loc 1 7406 1 is_stmt 1 view -0
 9089              		.cfi_startproc
 9090              		@ args = 0, pretend = 0, frame = 8
 9091              		@ frame_needed = 0, uses_anonymous_args = 0
 9092              		.loc 1 7406 1 is_stmt 0 view .LVU2395
 9093 0000 30B5     		push	{r4, r5, lr}
 9094              	.LCFI317:
 9095              		.cfi_def_cfa_offset 12
 9096              		.cfi_offset 4, -12
 9097              		.cfi_offset 5, -8
 9098              		.cfi_offset 14, -4
 9099 0002 83B0     		sub	sp, sp, #12
 9100              	.LCFI318:
 9101              		.cfi_def_cfa_offset 24
7407:Core/Src/bno055.c ****     /* Variable used to return value of
7408:Core/Src/bno055.c ****      * communication routine*/
7409:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9102              		.loc 1 7409 5 is_stmt 1 view .LVU2396
 9103              	.LVL957:
7410:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9104              		.loc 1 7410 5 view .LVU2397
 9105              		.loc 1 7410 8 is_stmt 0 view .LVU2398
ARM GAS  /tmp/cc9kYR4Z.s 			page 298


 9106 0004 0023     		movs	r3, #0
 9107 0006 8DF80730 		strb	r3, [sp, #7]
7411:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9108              		.loc 1 7411 5 is_stmt 1 view .LVU2399
 9109              	.LVL958:
7412:Core/Src/bno055.c **** 
7413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9110              		.loc 1 7414 5 view .LVU2400
 9111              		.loc 1 7414 18 is_stmt 0 view .LVU2401
 9112 000a 134B     		ldr	r3, .L703
 9113 000c 1B68     		ldr	r3, [r3]
 9114              		.loc 1 7414 8 view .LVU2402
 9115 000e E3B1     		cbz	r3, .L699
 9116 0010 0446     		mov	r4, r0
7415:Core/Src/bno055.c ****     {
7416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7417:Core/Src/bno055.c ****     }
7418:Core/Src/bno055.c ****     else
7419:Core/Src/bno055.c ****     {
7420:Core/Src/bno055.c ****         /*condition check for page, accel unit is
7421:Core/Src/bno055.c ****          * available in the page zero*/
7422:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9117              		.loc 1 7422 9 is_stmt 1 view .LVU2403
 9118              		.loc 1 7422 21 is_stmt 0 view .LVU2404
 9119 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9120              		.loc 1 7422 12 view .LVU2405
 9121 0014 9BB9     		cbnz	r3, .L702
 9122              	.LVL959:
 9123              	.L697:
7423:Core/Src/bno055.c ****         {
7424:Core/Src/bno055.c ****             /* Write the page zero*/
7425:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7426:Core/Src/bno055.c ****         }
7427:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9124              		.loc 1 7427 53 discriminator 1 view .LVU2406
 9125 0016 104B     		ldr	r3, .L703
 9126 0018 1B68     		ldr	r3, [r3]
 9127 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9128              		.loc 1 7427 41 discriminator 1 view .LVU2407
 9129 001c C3B9     		cbnz	r3, .L700
 9130              	.L698:
7428:Core/Src/bno055.c ****         {
7429:Core/Src/bno055.c ****             /* Read the accel unit */
7430:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9131              		.loc 1 7430 13 is_stmt 1 view .LVU2408
 9132              		.loc 1 7430 32 is_stmt 0 view .LVU2409
 9133 001e 0E4B     		ldr	r3, .L703
 9134 0020 1868     		ldr	r0, [r3]
 9135 0022 0569     		ldr	r5, [r0, #16]
 9136              		.loc 1 7430 24 view .LVU2410
 9137 0024 0123     		movs	r3, #1
 9138 0026 0DF10702 		add	r2, sp, #7
 9139 002a 3B21     		movs	r1, #59
 9140 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9141 002e A847     		blx	r5
 9142              	.LVL960:
ARM GAS  /tmp/cc9kYR4Z.s 			page 299


7431:Core/Src/bno055.c ****                                                       BNO055_ACCEL_UNIT_REG,
7432:Core/Src/bno055.c ****                                                       &data_u8r,
7433:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7434:Core/Src/bno055.c ****             *accel_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT);
 9143              		.loc 1 7434 13 is_stmt 1 view .LVU2411
 9144              		.loc 1 7434 30 is_stmt 0 view .LVU2412
 9145 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9146 0034 03F00103 		and	r3, r3, #1
 9147              		.loc 1 7434 28 view .LVU2413
 9148 0038 2370     		strb	r3, [r4]
 9149              	.LVL961:
 9150              	.L696:
7435:Core/Src/bno055.c ****         }
7436:Core/Src/bno055.c ****         else
7437:Core/Src/bno055.c ****         {
7438:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7439:Core/Src/bno055.c ****         }
7440:Core/Src/bno055.c ****     }
7441:Core/Src/bno055.c **** 
7442:Core/Src/bno055.c ****     return com_rslt;
7443:Core/Src/bno055.c **** }
 9151              		.loc 1 7443 1 view .LVU2414
 9152 003a 03B0     		add	sp, sp, #12
 9153              	.LCFI319:
 9154              		.cfi_remember_state
 9155              		.cfi_def_cfa_offset 12
 9156              		@ sp needed
 9157 003c 30BD     		pop	{r4, r5, pc}
 9158              	.LVL962:
 9159              	.L702:
 9160              	.LCFI320:
 9161              		.cfi_restore_state
7425:Core/Src/bno055.c ****         }
 9162              		.loc 1 7425 13 is_stmt 1 view .LVU2415
7425:Core/Src/bno055.c ****         }
 9163              		.loc 1 7425 23 is_stmt 0 view .LVU2416
 9164 003e 0020     		movs	r0, #0
 9165              	.LVL963:
7425:Core/Src/bno055.c ****         }
 9166              		.loc 1 7425 23 view .LVU2417
 9167 0040 FFF7FEFF 		bl	bno055_write_page_id
 9168              	.LVL964:
7427:Core/Src/bno055.c ****         {
 9169              		.loc 1 7427 9 is_stmt 1 view .LVU2418
7427:Core/Src/bno055.c ****         {
 9170              		.loc 1 7427 12 is_stmt 0 view .LVU2419
 9171 0044 0028     		cmp	r0, #0
 9172 0046 EAD0     		beq	.L698
 9173 0048 E5E7     		b	.L697
 9174              	.LVL965:
 9175              	.L699:
7416:Core/Src/bno055.c ****     }
 9176              		.loc 1 7416 16 view .LVU2420
 9177 004a 6FF07E00 		mvn	r0, #126
 9178              	.LVL966:
7416:Core/Src/bno055.c ****     }
 9179              		.loc 1 7416 16 view .LVU2421
ARM GAS  /tmp/cc9kYR4Z.s 			page 300


 9180 004e F4E7     		b	.L696
 9181              	.LVL967:
 9182              	.L700:
7438:Core/Src/bno055.c ****         }
 9183              		.loc 1 7438 22 view .LVU2422
 9184 0050 4FF0FF30 		mov	r0, #-1
 9185 0054 F1E7     		b	.L696
 9186              	.L704:
 9187 0056 00BF     		.align	2
 9188              	.L703:
 9189 0058 00000000 		.word	.LANCHOR0
 9190              		.cfi_endproc
 9191              	.LFE133:
 9193              		.section	.text.bno055_get_gyro_unit,"ax",%progbits
 9194              		.align	1
 9195              		.global	bno055_get_gyro_unit
 9196              		.syntax unified
 9197              		.thumb
 9198              		.thumb_func
 9200              	bno055_get_gyro_unit:
 9201              	.LVL968:
 9202              	.LFB135:
7444:Core/Src/bno055.c **** 
7445:Core/Src/bno055.c **** /*!
7446:Core/Src/bno055.c ****  *  @brief This API used to write the accel unit
7447:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7448:Core/Src/bno055.c ****  *
7449:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7450:Core/Src/bno055.c ****  *
7451:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7452:Core/Src/bno055.c ****  *   -------------    | ---------------
7453:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7454:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7455:Core/Src/bno055.c ****  *
7456:Core/Src/bno055.c ****  *  @return results of bus communication function
7457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7459:Core/Src/bno055.c ****  *
7460:Core/Src/bno055.c ****  *
7461:Core/Src/bno055.c ****  */
7462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_unit(u8 accel_unit_u8)
7463:Core/Src/bno055.c **** {
7464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7465:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7466:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7467:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7468:Core/Src/bno055.c **** 
7469:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7470:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7471:Core/Src/bno055.c ****     {
7472:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7473:Core/Src/bno055.c ****     }
7474:Core/Src/bno055.c ****     else
7475:Core/Src/bno055.c ****     {
7476:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7477:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7478:Core/Src/bno055.c ****          * current operation mode and set the config mode */
ARM GAS  /tmp/cc9kYR4Z.s 			page 301


7479:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7480:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7481:Core/Src/bno055.c ****         {
7482:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7483:Core/Src/bno055.c ****             {
7484:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7485:Core/Src/bno055.c ****             }
7486:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7487:Core/Src/bno055.c ****             {
7488:Core/Src/bno055.c ****                 /* Write the accel unit */
7489:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7490:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
7491:Core/Src/bno055.c ****                                                           &data_u8r,
7492:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7493:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7494:Core/Src/bno055.c ****                 {
7495:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT, accel_unit_u8);
7496:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7497:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
7498:Core/Src/bno055.c ****                                                                 &data_u8r,
7499:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7500:Core/Src/bno055.c ****                 }
7501:Core/Src/bno055.c ****             }
7502:Core/Src/bno055.c ****             else
7503:Core/Src/bno055.c ****             {
7504:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7505:Core/Src/bno055.c ****             }
7506:Core/Src/bno055.c ****         }
7507:Core/Src/bno055.c ****         else
7508:Core/Src/bno055.c ****         {
7509:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7510:Core/Src/bno055.c ****         }
7511:Core/Src/bno055.c ****     }
7512:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7513:Core/Src/bno055.c ****     {
7514:Core/Src/bno055.c ****         /* set the operation mode
7515:Core/Src/bno055.c ****          * of previous operation mode*/
7516:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7517:Core/Src/bno055.c ****     }
7518:Core/Src/bno055.c **** 
7519:Core/Src/bno055.c ****     return com_rslt;
7520:Core/Src/bno055.c **** }
7521:Core/Src/bno055.c **** 
7522:Core/Src/bno055.c **** /*!
7523:Core/Src/bno055.c ****  *  @brief This API used to read the gyro unit
7524:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7525:Core/Src/bno055.c ****  *
7526:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7527:Core/Src/bno055.c ****  *
7528:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7529:Core/Src/bno055.c ****  *  -------------   | -----------
7530:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7531:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7532:Core/Src/bno055.c ****  *
7533:Core/Src/bno055.c ****  *  @return results of bus communication function
7534:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7535:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/cc9kYR4Z.s 			page 302


7536:Core/Src/bno055.c ****  *
7537:Core/Src/bno055.c ****  *
7538:Core/Src/bno055.c ****  */
7539:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_unit(u8 *gyro_unit_u8)
7540:Core/Src/bno055.c **** {
 9203              		.loc 1 7540 1 is_stmt 1 view -0
 9204              		.cfi_startproc
 9205              		@ args = 0, pretend = 0, frame = 8
 9206              		@ frame_needed = 0, uses_anonymous_args = 0
 9207              		.loc 1 7540 1 is_stmt 0 view .LVU2424
 9208 0000 30B5     		push	{r4, r5, lr}
 9209              	.LCFI321:
 9210              		.cfi_def_cfa_offset 12
 9211              		.cfi_offset 4, -12
 9212              		.cfi_offset 5, -8
 9213              		.cfi_offset 14, -4
 9214 0002 83B0     		sub	sp, sp, #12
 9215              	.LCFI322:
 9216              		.cfi_def_cfa_offset 24
7541:Core/Src/bno055.c ****     /* Variable used to return value of
7542:Core/Src/bno055.c ****      * communication routine*/
7543:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9217              		.loc 1 7543 5 is_stmt 1 view .LVU2425
 9218              	.LVL969:
7544:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9219              		.loc 1 7544 5 view .LVU2426
 9220              		.loc 1 7544 8 is_stmt 0 view .LVU2427
 9221 0004 0023     		movs	r3, #0
 9222 0006 8DF80730 		strb	r3, [sp, #7]
7545:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9223              		.loc 1 7545 5 is_stmt 1 view .LVU2428
 9224              	.LVL970:
7546:Core/Src/bno055.c **** 
7547:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7548:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9225              		.loc 1 7548 5 view .LVU2429
 9226              		.loc 1 7548 18 is_stmt 0 view .LVU2430
 9227 000a 134B     		ldr	r3, .L713
 9228 000c 1B68     		ldr	r3, [r3]
 9229              		.loc 1 7548 8 view .LVU2431
 9230 000e E3B1     		cbz	r3, .L709
 9231 0010 0446     		mov	r4, r0
7549:Core/Src/bno055.c ****     {
7550:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7551:Core/Src/bno055.c ****     }
7552:Core/Src/bno055.c ****     else
7553:Core/Src/bno055.c ****     {
7554:Core/Src/bno055.c ****         /*condition check for page, gyro unit is
7555:Core/Src/bno055.c ****          * available in the page zero*/
7556:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9232              		.loc 1 7556 9 is_stmt 1 view .LVU2432
 9233              		.loc 1 7556 21 is_stmt 0 view .LVU2433
 9234 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9235              		.loc 1 7556 12 view .LVU2434
 9236 0014 9BB9     		cbnz	r3, .L712
 9237              	.LVL971:
 9238              	.L707:
ARM GAS  /tmp/cc9kYR4Z.s 			page 303


7557:Core/Src/bno055.c ****         {
7558:Core/Src/bno055.c ****             /* Write the page zero*/
7559:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7560:Core/Src/bno055.c ****         }
7561:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9239              		.loc 1 7561 53 discriminator 1 view .LVU2435
 9240 0016 104B     		ldr	r3, .L713
 9241 0018 1B68     		ldr	r3, [r3]
 9242 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9243              		.loc 1 7561 41 discriminator 1 view .LVU2436
 9244 001c C3B9     		cbnz	r3, .L710
 9245              	.L708:
7562:Core/Src/bno055.c ****         {
7563:Core/Src/bno055.c ****             /* Read the gyro unit */
7564:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9246              		.loc 1 7564 13 is_stmt 1 view .LVU2437
 9247              		.loc 1 7564 32 is_stmt 0 view .LVU2438
 9248 001e 0E4B     		ldr	r3, .L713
 9249 0020 1868     		ldr	r0, [r3]
 9250 0022 0569     		ldr	r5, [r0, #16]
 9251              		.loc 1 7564 24 view .LVU2439
 9252 0024 0123     		movs	r3, #1
 9253 0026 0DF10702 		add	r2, sp, #7
 9254 002a 3B21     		movs	r1, #59
 9255 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9256 002e A847     		blx	r5
 9257              	.LVL972:
7565:Core/Src/bno055.c ****                                                       BNO055_GYRO_UNIT_REG,
7566:Core/Src/bno055.c ****                                                       &data_u8r,
7567:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7568:Core/Src/bno055.c ****             *gyro_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_UNIT);
 9258              		.loc 1 7568 13 is_stmt 1 view .LVU2440
 9259              		.loc 1 7568 29 is_stmt 0 view .LVU2441
 9260 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9261 0034 C3F34003 		ubfx	r3, r3, #1, #1
 9262              		.loc 1 7568 27 view .LVU2442
 9263 0038 2370     		strb	r3, [r4]
 9264              	.LVL973:
 9265              	.L706:
7569:Core/Src/bno055.c ****         }
7570:Core/Src/bno055.c ****         else
7571:Core/Src/bno055.c ****         {
7572:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7573:Core/Src/bno055.c ****         }
7574:Core/Src/bno055.c ****     }
7575:Core/Src/bno055.c **** 
7576:Core/Src/bno055.c ****     return com_rslt;
7577:Core/Src/bno055.c **** }
 9266              		.loc 1 7577 1 view .LVU2443
 9267 003a 03B0     		add	sp, sp, #12
 9268              	.LCFI323:
 9269              		.cfi_remember_state
 9270              		.cfi_def_cfa_offset 12
 9271              		@ sp needed
 9272 003c 30BD     		pop	{r4, r5, pc}
 9273              	.LVL974:
 9274              	.L712:
ARM GAS  /tmp/cc9kYR4Z.s 			page 304


 9275              	.LCFI324:
 9276              		.cfi_restore_state
7559:Core/Src/bno055.c ****         }
 9277              		.loc 1 7559 13 is_stmt 1 view .LVU2444
7559:Core/Src/bno055.c ****         }
 9278              		.loc 1 7559 23 is_stmt 0 view .LVU2445
 9279 003e 0020     		movs	r0, #0
 9280              	.LVL975:
7559:Core/Src/bno055.c ****         }
 9281              		.loc 1 7559 23 view .LVU2446
 9282 0040 FFF7FEFF 		bl	bno055_write_page_id
 9283              	.LVL976:
7561:Core/Src/bno055.c ****         {
 9284              		.loc 1 7561 9 is_stmt 1 view .LVU2447
7561:Core/Src/bno055.c ****         {
 9285              		.loc 1 7561 12 is_stmt 0 view .LVU2448
 9286 0044 0028     		cmp	r0, #0
 9287 0046 EAD0     		beq	.L708
 9288 0048 E5E7     		b	.L707
 9289              	.LVL977:
 9290              	.L709:
7550:Core/Src/bno055.c ****     }
 9291              		.loc 1 7550 16 view .LVU2449
 9292 004a 6FF07E00 		mvn	r0, #126
 9293              	.LVL978:
7550:Core/Src/bno055.c ****     }
 9294              		.loc 1 7550 16 view .LVU2450
 9295 004e F4E7     		b	.L706
 9296              	.LVL979:
 9297              	.L710:
7572:Core/Src/bno055.c ****         }
 9298              		.loc 1 7572 22 view .LVU2451
 9299 0050 4FF0FF30 		mov	r0, #-1
 9300 0054 F1E7     		b	.L706
 9301              	.L714:
 9302 0056 00BF     		.align	2
 9303              	.L713:
 9304 0058 00000000 		.word	.LANCHOR0
 9305              		.cfi_endproc
 9306              	.LFE135:
 9308              		.section	.text.bno055_get_euler_unit,"ax",%progbits
 9309              		.align	1
 9310              		.global	bno055_get_euler_unit
 9311              		.syntax unified
 9312              		.thumb
 9313              		.thumb_func
 9315              	bno055_get_euler_unit:
 9316              	.LVL980:
 9317              	.LFB137:
7578:Core/Src/bno055.c **** 
7579:Core/Src/bno055.c **** /*!
7580:Core/Src/bno055.c ****  *  @brief This API used to write the gyro unit
7581:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7582:Core/Src/bno055.c ****  *
7583:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7584:Core/Src/bno055.c ****  *
7585:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
ARM GAS  /tmp/cc9kYR4Z.s 			page 305


7586:Core/Src/bno055.c ****  *  -------------   | -----------
7587:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7588:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7589:Core/Src/bno055.c ****  *
7590:Core/Src/bno055.c ****  *  @return results of bus communication function
7591:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7592:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7593:Core/Src/bno055.c ****  *
7594:Core/Src/bno055.c ****  *
7595:Core/Src/bno055.c ****  */
7596:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_unit(u8 gyro_unit_u8)
7597:Core/Src/bno055.c **** {
7598:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7599:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7600:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7601:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7602:Core/Src/bno055.c **** 
7603:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7604:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7605:Core/Src/bno055.c ****     {
7606:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7607:Core/Src/bno055.c ****     }
7608:Core/Src/bno055.c ****     else
7609:Core/Src/bno055.c ****     {
7610:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7611:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7612:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7613:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7614:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7615:Core/Src/bno055.c ****         {
7616:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7617:Core/Src/bno055.c ****             {
7618:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7619:Core/Src/bno055.c ****             }
7620:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7621:Core/Src/bno055.c ****             {
7622:Core/Src/bno055.c ****                 /* Write the gyro unit */
7623:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7624:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
7625:Core/Src/bno055.c ****                                                           &data_u8r,
7626:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7627:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7628:Core/Src/bno055.c ****                 {
7629:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_UNIT, gyro_unit_u8);
7630:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7631:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
7632:Core/Src/bno055.c ****                                                                 &data_u8r,
7633:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7634:Core/Src/bno055.c ****                 }
7635:Core/Src/bno055.c ****             }
7636:Core/Src/bno055.c ****             else
7637:Core/Src/bno055.c ****             {
7638:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7639:Core/Src/bno055.c ****             }
7640:Core/Src/bno055.c ****         }
7641:Core/Src/bno055.c ****         else
7642:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 306


7643:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7644:Core/Src/bno055.c ****         }
7645:Core/Src/bno055.c ****     }
7646:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7647:Core/Src/bno055.c ****     {
7648:Core/Src/bno055.c ****         /* set the operation mode
7649:Core/Src/bno055.c ****          * of previous operation mode*/
7650:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7651:Core/Src/bno055.c ****     }
7652:Core/Src/bno055.c **** 
7653:Core/Src/bno055.c ****     return com_rslt;
7654:Core/Src/bno055.c **** }
7655:Core/Src/bno055.c **** 
7656:Core/Src/bno055.c **** /*!
7657:Core/Src/bno055.c ****  *  @brief This API used to read the Euler unit
7658:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7659:Core/Src/bno055.c ****  *
7660:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of accel unit
7661:Core/Src/bno055.c ****  *
7662:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7663:Core/Src/bno055.c ****  *   --------------   | -----------
7664:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7665:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7666:Core/Src/bno055.c ****  *
7667:Core/Src/bno055.c ****  *  @return results of bus communication function
7668:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7669:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7670:Core/Src/bno055.c ****  *
7671:Core/Src/bno055.c ****  *
7672:Core/Src/bno055.c ****  */
7673:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_euler_unit(u8 *euler_unit_u8)
7674:Core/Src/bno055.c **** {
 9318              		.loc 1 7674 1 is_stmt 1 view -0
 9319              		.cfi_startproc
 9320              		@ args = 0, pretend = 0, frame = 8
 9321              		@ frame_needed = 0, uses_anonymous_args = 0
 9322              		.loc 1 7674 1 is_stmt 0 view .LVU2453
 9323 0000 30B5     		push	{r4, r5, lr}
 9324              	.LCFI325:
 9325              		.cfi_def_cfa_offset 12
 9326              		.cfi_offset 4, -12
 9327              		.cfi_offset 5, -8
 9328              		.cfi_offset 14, -4
 9329 0002 83B0     		sub	sp, sp, #12
 9330              	.LCFI326:
 9331              		.cfi_def_cfa_offset 24
7675:Core/Src/bno055.c ****     /* Variable used to return value of
7676:Core/Src/bno055.c ****      * communication routine*/
7677:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9332              		.loc 1 7677 5 is_stmt 1 view .LVU2454
 9333              	.LVL981:
7678:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9334              		.loc 1 7678 5 view .LVU2455
 9335              		.loc 1 7678 8 is_stmt 0 view .LVU2456
 9336 0004 0023     		movs	r3, #0
 9337 0006 8DF80730 		strb	r3, [sp, #7]
7679:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 307


 9338              		.loc 1 7679 5 is_stmt 1 view .LVU2457
 9339              	.LVL982:
7680:Core/Src/bno055.c **** 
7681:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7682:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9340              		.loc 1 7682 5 view .LVU2458
 9341              		.loc 1 7682 18 is_stmt 0 view .LVU2459
 9342 000a 134B     		ldr	r3, .L723
 9343 000c 1B68     		ldr	r3, [r3]
 9344              		.loc 1 7682 8 view .LVU2460
 9345 000e E3B1     		cbz	r3, .L719
 9346 0010 0446     		mov	r4, r0
7683:Core/Src/bno055.c ****     {
7684:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7685:Core/Src/bno055.c ****     }
7686:Core/Src/bno055.c ****     else
7687:Core/Src/bno055.c ****     {
7688:Core/Src/bno055.c ****         /*condition check for page, Euler unit is
7689:Core/Src/bno055.c ****          * available in the page zero*/
7690:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9347              		.loc 1 7690 9 is_stmt 1 view .LVU2461
 9348              		.loc 1 7690 21 is_stmt 0 view .LVU2462
 9349 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9350              		.loc 1 7690 12 view .LVU2463
 9351 0014 9BB9     		cbnz	r3, .L722
 9352              	.LVL983:
 9353              	.L717:
7691:Core/Src/bno055.c ****         {
7692:Core/Src/bno055.c ****             /* Write the page zero*/
7693:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7694:Core/Src/bno055.c ****         }
7695:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9354              		.loc 1 7695 53 discriminator 1 view .LVU2464
 9355 0016 104B     		ldr	r3, .L723
 9356 0018 1B68     		ldr	r3, [r3]
 9357 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9358              		.loc 1 7695 41 discriminator 1 view .LVU2465
 9359 001c C3B9     		cbnz	r3, .L720
 9360              	.L718:
7696:Core/Src/bno055.c ****         {
7697:Core/Src/bno055.c ****             /* Read the Euler unit */
7698:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9361              		.loc 1 7698 13 is_stmt 1 view .LVU2466
 9362              		.loc 1 7698 32 is_stmt 0 view .LVU2467
 9363 001e 0E4B     		ldr	r3, .L723
 9364 0020 1868     		ldr	r0, [r3]
 9365 0022 0569     		ldr	r5, [r0, #16]
 9366              		.loc 1 7698 24 view .LVU2468
 9367 0024 0123     		movs	r3, #1
 9368 0026 0DF10702 		add	r2, sp, #7
 9369 002a 3B21     		movs	r1, #59
 9370 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9371 002e A847     		blx	r5
 9372              	.LVL984:
7699:Core/Src/bno055.c ****                                                       BNO055_EULER_UNIT_REG,
7700:Core/Src/bno055.c ****                                                       &data_u8r,
7701:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/cc9kYR4Z.s 			page 308


7702:Core/Src/bno055.c ****             *euler_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_EULER_UNIT);
 9373              		.loc 1 7702 13 is_stmt 1 view .LVU2469
 9374              		.loc 1 7702 30 is_stmt 0 view .LVU2470
 9375 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9376 0034 C3F38003 		ubfx	r3, r3, #2, #1
 9377              		.loc 1 7702 28 view .LVU2471
 9378 0038 2370     		strb	r3, [r4]
 9379              	.LVL985:
 9380              	.L716:
7703:Core/Src/bno055.c ****         }
7704:Core/Src/bno055.c ****         else
7705:Core/Src/bno055.c ****         {
7706:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7707:Core/Src/bno055.c ****         }
7708:Core/Src/bno055.c ****     }
7709:Core/Src/bno055.c **** 
7710:Core/Src/bno055.c ****     return com_rslt;
7711:Core/Src/bno055.c **** }
 9381              		.loc 1 7711 1 view .LVU2472
 9382 003a 03B0     		add	sp, sp, #12
 9383              	.LCFI327:
 9384              		.cfi_remember_state
 9385              		.cfi_def_cfa_offset 12
 9386              		@ sp needed
 9387 003c 30BD     		pop	{r4, r5, pc}
 9388              	.LVL986:
 9389              	.L722:
 9390              	.LCFI328:
 9391              		.cfi_restore_state
7693:Core/Src/bno055.c ****         }
 9392              		.loc 1 7693 13 is_stmt 1 view .LVU2473
7693:Core/Src/bno055.c ****         }
 9393              		.loc 1 7693 23 is_stmt 0 view .LVU2474
 9394 003e 0020     		movs	r0, #0
 9395              	.LVL987:
7693:Core/Src/bno055.c ****         }
 9396              		.loc 1 7693 23 view .LVU2475
 9397 0040 FFF7FEFF 		bl	bno055_write_page_id
 9398              	.LVL988:
7695:Core/Src/bno055.c ****         {
 9399              		.loc 1 7695 9 is_stmt 1 view .LVU2476
7695:Core/Src/bno055.c ****         {
 9400              		.loc 1 7695 12 is_stmt 0 view .LVU2477
 9401 0044 0028     		cmp	r0, #0
 9402 0046 EAD0     		beq	.L718
 9403 0048 E5E7     		b	.L717
 9404              	.LVL989:
 9405              	.L719:
7684:Core/Src/bno055.c ****     }
 9406              		.loc 1 7684 16 view .LVU2478
 9407 004a 6FF07E00 		mvn	r0, #126
 9408              	.LVL990:
7684:Core/Src/bno055.c ****     }
 9409              		.loc 1 7684 16 view .LVU2479
 9410 004e F4E7     		b	.L716
 9411              	.LVL991:
 9412              	.L720:
ARM GAS  /tmp/cc9kYR4Z.s 			page 309


7706:Core/Src/bno055.c ****         }
 9413              		.loc 1 7706 22 view .LVU2480
 9414 0050 4FF0FF30 		mov	r0, #-1
 9415 0054 F1E7     		b	.L716
 9416              	.L724:
 9417 0056 00BF     		.align	2
 9418              	.L723:
 9419 0058 00000000 		.word	.LANCHOR0
 9420              		.cfi_endproc
 9421              	.LFE137:
 9423              		.section	.text.bno055_get_tilt_unit,"ax",%progbits
 9424              		.align	1
 9425              		.global	bno055_get_tilt_unit
 9426              		.syntax unified
 9427              		.thumb
 9428              		.thumb_func
 9430              	bno055_get_tilt_unit:
 9431              	.LVL992:
 9432              	.LFB139:
7712:Core/Src/bno055.c **** 
7713:Core/Src/bno055.c **** /*!
7714:Core/Src/bno055.c ****  *  @brief This API used to write the Euler unit
7715:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7716:Core/Src/bno055.c ****  *
7717:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of Euler unit
7718:Core/Src/bno055.c ****  *
7719:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7720:Core/Src/bno055.c ****  *   --------------   | -----------
7721:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7722:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7723:Core/Src/bno055.c ****  *
7724:Core/Src/bno055.c ****  *  @return results of bus communication function
7725:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7726:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7727:Core/Src/bno055.c ****  *
7728:Core/Src/bno055.c ****  *
7729:Core/Src/bno055.c ****  */
7730:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_euler_unit(u8 euler_unit_u8)
7731:Core/Src/bno055.c **** {
7732:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7733:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7734:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7735:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7736:Core/Src/bno055.c **** 
7737:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7738:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7739:Core/Src/bno055.c ****     {
7740:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7741:Core/Src/bno055.c ****     }
7742:Core/Src/bno055.c ****     else
7743:Core/Src/bno055.c ****     {
7744:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7745:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7746:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7747:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7748:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7749:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 310


7750:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7751:Core/Src/bno055.c ****             {
7752:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7753:Core/Src/bno055.c ****             }
7754:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7755:Core/Src/bno055.c ****             {
7756:Core/Src/bno055.c ****                 /* Write the Euler unit*/
7757:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7758:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
7759:Core/Src/bno055.c ****                                                           &data_u8r,
7760:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7761:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7762:Core/Src/bno055.c ****                 {
7763:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_EULER_UNIT, euler_unit_u8);
7764:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7765:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
7766:Core/Src/bno055.c ****                                                                 &data_u8r,
7767:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7768:Core/Src/bno055.c ****                 }
7769:Core/Src/bno055.c ****             }
7770:Core/Src/bno055.c ****             else
7771:Core/Src/bno055.c ****             {
7772:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7773:Core/Src/bno055.c ****             }
7774:Core/Src/bno055.c ****         }
7775:Core/Src/bno055.c ****         else
7776:Core/Src/bno055.c ****         {
7777:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7778:Core/Src/bno055.c ****         }
7779:Core/Src/bno055.c ****     }
7780:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7781:Core/Src/bno055.c ****     {
7782:Core/Src/bno055.c ****         /* set the operation mode
7783:Core/Src/bno055.c ****          * of previous operation mode*/
7784:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7785:Core/Src/bno055.c ****     }
7786:Core/Src/bno055.c **** 
7787:Core/Src/bno055.c ****     return com_rslt;
7788:Core/Src/bno055.c **** }
7789:Core/Src/bno055.c **** 
7790:Core/Src/bno055.c **** /*!
7791:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7792:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7793:Core/Src/bno055.c ****  *
7794:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7795:Core/Src/bno055.c ****  *
7796:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7797:Core/Src/bno055.c ****  *   ---------------  | ---------
7798:Core/Src/bno055.c ****  *     0x00           | degrees
7799:Core/Src/bno055.c ****  *     0x01           | radians
7800:Core/Src/bno055.c ****  *
7801:Core/Src/bno055.c ****  *  @return results of bus communication function
7802:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7803:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7804:Core/Src/bno055.c ****  *
7805:Core/Src/bno055.c ****  *
7806:Core/Src/bno055.c ****  */
ARM GAS  /tmp/cc9kYR4Z.s 			page 311


7807:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_tilt_unit(u8 *tilt_unit_u8)
7808:Core/Src/bno055.c **** {
 9433              		.loc 1 7808 1 is_stmt 1 view -0
 9434              		.cfi_startproc
 9435              		@ args = 0, pretend = 0, frame = 8
 9436              		@ frame_needed = 0, uses_anonymous_args = 0
 9437              		.loc 1 7808 1 is_stmt 0 view .LVU2482
 9438 0000 30B5     		push	{r4, r5, lr}
 9439              	.LCFI329:
 9440              		.cfi_def_cfa_offset 12
 9441              		.cfi_offset 4, -12
 9442              		.cfi_offset 5, -8
 9443              		.cfi_offset 14, -4
 9444 0002 83B0     		sub	sp, sp, #12
 9445              	.LCFI330:
 9446              		.cfi_def_cfa_offset 24
7809:Core/Src/bno055.c ****     /* Variable used to return value of
7810:Core/Src/bno055.c ****      * communication routine*/
7811:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9447              		.loc 1 7811 5 is_stmt 1 view .LVU2483
 9448              	.LVL993:
7812:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9449              		.loc 1 7812 5 view .LVU2484
 9450              		.loc 1 7812 8 is_stmt 0 view .LVU2485
 9451 0004 0023     		movs	r3, #0
 9452 0006 8DF80730 		strb	r3, [sp, #7]
7813:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9453              		.loc 1 7813 5 is_stmt 1 view .LVU2486
 9454              	.LVL994:
7814:Core/Src/bno055.c **** 
7815:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7816:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9455              		.loc 1 7816 5 view .LVU2487
 9456              		.loc 1 7816 18 is_stmt 0 view .LVU2488
 9457 000a 134B     		ldr	r3, .L733
 9458 000c 1B68     		ldr	r3, [r3]
 9459              		.loc 1 7816 8 view .LVU2489
 9460 000e E3B1     		cbz	r3, .L729
 9461 0010 0446     		mov	r4, r0
7817:Core/Src/bno055.c ****     {
7818:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7819:Core/Src/bno055.c ****     }
7820:Core/Src/bno055.c ****     else
7821:Core/Src/bno055.c ****     {
7822:Core/Src/bno055.c ****         /*condition check for page, chip id is
7823:Core/Src/bno055.c ****          * available in the page zero*/
7824:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9462              		.loc 1 7824 9 is_stmt 1 view .LVU2490
 9463              		.loc 1 7824 21 is_stmt 0 view .LVU2491
 9464 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9465              		.loc 1 7824 12 view .LVU2492
 9466 0014 9BB9     		cbnz	r3, .L732
 9467              	.LVL995:
 9468              	.L727:
7825:Core/Src/bno055.c ****         {
7826:Core/Src/bno055.c ****             /* Write the page zero*/
7827:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/cc9kYR4Z.s 			page 312


7828:Core/Src/bno055.c ****         }
7829:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9469              		.loc 1 7829 53 discriminator 1 view .LVU2493
 9470 0016 104B     		ldr	r3, .L733
 9471 0018 1B68     		ldr	r3, [r3]
 9472 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9473              		.loc 1 7829 41 discriminator 1 view .LVU2494
 9474 001c C3B9     		cbnz	r3, .L730
 9475              	.L728:
7830:Core/Src/bno055.c ****         {
7831:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9476              		.loc 1 7831 13 is_stmt 1 view .LVU2495
 9477              		.loc 1 7831 32 is_stmt 0 view .LVU2496
 9478 001e 0E4B     		ldr	r3, .L733
 9479 0020 1868     		ldr	r0, [r3]
 9480 0022 0569     		ldr	r5, [r0, #16]
 9481              		.loc 1 7831 24 view .LVU2497
 9482 0024 0123     		movs	r3, #1
 9483 0026 0DF10702 		add	r2, sp, #7
 9484 002a 3B21     		movs	r1, #59
 9485 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9486 002e A847     		blx	r5
 9487              	.LVL996:
7832:Core/Src/bno055.c ****                                                       BNO055_TILT_UNIT_REG,
7833:Core/Src/bno055.c ****                                                       &data_u8r,
7834:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7835:Core/Src/bno055.c ****             *tilt_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TILT_UNIT);
 9488              		.loc 1 7835 13 is_stmt 1 view .LVU2498
 9489              		.loc 1 7835 29 is_stmt 0 view .LVU2499
 9490 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9491 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 9492              		.loc 1 7835 27 view .LVU2500
 9493 0038 2370     		strb	r3, [r4]
 9494              	.LVL997:
 9495              	.L726:
7836:Core/Src/bno055.c ****         }
7837:Core/Src/bno055.c ****         else
7838:Core/Src/bno055.c ****         {
7839:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7840:Core/Src/bno055.c ****         }
7841:Core/Src/bno055.c ****     }
7842:Core/Src/bno055.c **** 
7843:Core/Src/bno055.c ****     return com_rslt;
7844:Core/Src/bno055.c **** }
 9496              		.loc 1 7844 1 view .LVU2501
 9497 003a 03B0     		add	sp, sp, #12
 9498              	.LCFI331:
 9499              		.cfi_remember_state
 9500              		.cfi_def_cfa_offset 12
 9501              		@ sp needed
 9502 003c 30BD     		pop	{r4, r5, pc}
 9503              	.LVL998:
 9504              	.L732:
 9505              	.LCFI332:
 9506              		.cfi_restore_state
7827:Core/Src/bno055.c ****         }
 9507              		.loc 1 7827 13 is_stmt 1 view .LVU2502
ARM GAS  /tmp/cc9kYR4Z.s 			page 313


7827:Core/Src/bno055.c ****         }
 9508              		.loc 1 7827 23 is_stmt 0 view .LVU2503
 9509 003e 0020     		movs	r0, #0
 9510              	.LVL999:
7827:Core/Src/bno055.c ****         }
 9511              		.loc 1 7827 23 view .LVU2504
 9512 0040 FFF7FEFF 		bl	bno055_write_page_id
 9513              	.LVL1000:
7829:Core/Src/bno055.c ****         {
 9514              		.loc 1 7829 9 is_stmt 1 view .LVU2505
7829:Core/Src/bno055.c ****         {
 9515              		.loc 1 7829 12 is_stmt 0 view .LVU2506
 9516 0044 0028     		cmp	r0, #0
 9517 0046 EAD0     		beq	.L728
 9518 0048 E5E7     		b	.L727
 9519              	.LVL1001:
 9520              	.L729:
7818:Core/Src/bno055.c ****     }
 9521              		.loc 1 7818 16 view .LVU2507
 9522 004a 6FF07E00 		mvn	r0, #126
 9523              	.LVL1002:
7818:Core/Src/bno055.c ****     }
 9524              		.loc 1 7818 16 view .LVU2508
 9525 004e F4E7     		b	.L726
 9526              	.LVL1003:
 9527              	.L730:
7839:Core/Src/bno055.c ****         }
 9528              		.loc 1 7839 22 view .LVU2509
 9529 0050 4FF0FF30 		mov	r0, #-1
 9530 0054 F1E7     		b	.L726
 9531              	.L734:
 9532 0056 00BF     		.align	2
 9533              	.L733:
 9534 0058 00000000 		.word	.LANCHOR0
 9535              		.cfi_endproc
 9536              	.LFE139:
 9538              		.section	.text.bno055_get_temp_unit,"ax",%progbits
 9539              		.align	1
 9540              		.global	bno055_get_temp_unit
 9541              		.syntax unified
 9542              		.thumb
 9543              		.thumb_func
 9545              	bno055_get_temp_unit:
 9546              	.LVL1004:
 9547              	.LFB141:
7845:Core/Src/bno055.c **** 
7846:Core/Src/bno055.c **** /*!
7847:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7848:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7849:Core/Src/bno055.c ****  *
7850:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7851:Core/Src/bno055.c ****  *
7852:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7853:Core/Src/bno055.c ****  *   ---------------  | ---------
7854:Core/Src/bno055.c ****  *     0x00           | degrees
7855:Core/Src/bno055.c ****  *     0x01           | radians
7856:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 314


7857:Core/Src/bno055.c ****  *  @return results of bus communication function
7858:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7859:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7860:Core/Src/bno055.c ****  *
7861:Core/Src/bno055.c ****  *
7862:Core/Src/bno055.c ****  *
7863:Core/Src/bno055.c ****  *  \return Communication results
7864:Core/Src/bno055.c ****  *
7865:Core/Src/bno055.c ****  *
7866:Core/Src/bno055.c ****  */
7867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_tilt_unit(u8 tilt_unit_u8)
7868:Core/Src/bno055.c **** {
7869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7871:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7872:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7873:Core/Src/bno055.c **** 
7874:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7875:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7876:Core/Src/bno055.c ****     {
7877:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7878:Core/Src/bno055.c ****     }
7879:Core/Src/bno055.c ****     else
7880:Core/Src/bno055.c ****     {
7881:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7882:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7883:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7884:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7885:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7886:Core/Src/bno055.c ****         {
7887:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7888:Core/Src/bno055.c ****             {
7889:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7890:Core/Src/bno055.c ****             }
7891:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7892:Core/Src/bno055.c ****             {
7893:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7894:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
7895:Core/Src/bno055.c ****                                                           &data_u8r,
7896:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7897:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7898:Core/Src/bno055.c ****                 {
7899:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TILT_UNIT, tilt_unit_u8);
7900:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7901:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
7902:Core/Src/bno055.c ****                                                                 &data_u8r,
7903:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7904:Core/Src/bno055.c ****                 }
7905:Core/Src/bno055.c ****             }
7906:Core/Src/bno055.c ****             else
7907:Core/Src/bno055.c ****             {
7908:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7909:Core/Src/bno055.c ****             }
7910:Core/Src/bno055.c ****         }
7911:Core/Src/bno055.c ****         else
7912:Core/Src/bno055.c ****         {
7913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 315


7914:Core/Src/bno055.c ****         }
7915:Core/Src/bno055.c ****     }
7916:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7917:Core/Src/bno055.c ****     {
7918:Core/Src/bno055.c ****         /* set the operation mode
7919:Core/Src/bno055.c ****          * of previous operation mode*/
7920:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7921:Core/Src/bno055.c ****     }
7922:Core/Src/bno055.c **** 
7923:Core/Src/bno055.c ****     return com_rslt;
7924:Core/Src/bno055.c **** }
7925:Core/Src/bno055.c **** 
7926:Core/Src/bno055.c **** /*!
7927:Core/Src/bno055.c ****  *  @brief This API used to read the temperature unit
7928:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7929:Core/Src/bno055.c ****  *
7930:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7931:Core/Src/bno055.c ****  *
7932:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7933:Core/Src/bno055.c ****  *   -----------      | --------------
7934:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7935:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7936:Core/Src/bno055.c ****  *
7937:Core/Src/bno055.c ****  *  @return results of bus communication function
7938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7940:Core/Src/bno055.c ****  *
7941:Core/Src/bno055.c ****  */
7942:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_unit(u8 *temp_unit_u8)
7943:Core/Src/bno055.c **** {
 9548              		.loc 1 7943 1 is_stmt 1 view -0
 9549              		.cfi_startproc
 9550              		@ args = 0, pretend = 0, frame = 8
 9551              		@ frame_needed = 0, uses_anonymous_args = 0
 9552              		.loc 1 7943 1 is_stmt 0 view .LVU2511
 9553 0000 30B5     		push	{r4, r5, lr}
 9554              	.LCFI333:
 9555              		.cfi_def_cfa_offset 12
 9556              		.cfi_offset 4, -12
 9557              		.cfi_offset 5, -8
 9558              		.cfi_offset 14, -4
 9559 0002 83B0     		sub	sp, sp, #12
 9560              	.LCFI334:
 9561              		.cfi_def_cfa_offset 24
7944:Core/Src/bno055.c ****     /* Variable used to return value of
7945:Core/Src/bno055.c ****      * communication routine*/
7946:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9562              		.loc 1 7946 5 is_stmt 1 view .LVU2512
 9563              	.LVL1005:
7947:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9564              		.loc 1 7947 5 view .LVU2513
 9565              		.loc 1 7947 8 is_stmt 0 view .LVU2514
 9566 0004 0023     		movs	r3, #0
 9567 0006 8DF80730 		strb	r3, [sp, #7]
7948:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9568              		.loc 1 7948 5 is_stmt 1 view .LVU2515
 9569              	.LVL1006:
ARM GAS  /tmp/cc9kYR4Z.s 			page 316


7949:Core/Src/bno055.c **** 
7950:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7951:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9570              		.loc 1 7951 5 view .LVU2516
 9571              		.loc 1 7951 18 is_stmt 0 view .LVU2517
 9572 000a 134B     		ldr	r3, .L743
 9573 000c 1B68     		ldr	r3, [r3]
 9574              		.loc 1 7951 8 view .LVU2518
 9575 000e E3B1     		cbz	r3, .L739
 9576 0010 0446     		mov	r4, r0
7952:Core/Src/bno055.c ****     {
7953:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7954:Core/Src/bno055.c ****     }
7955:Core/Src/bno055.c ****     else
7956:Core/Src/bno055.c ****     {
7957:Core/Src/bno055.c ****         /*condition check for page, temperature unit is
7958:Core/Src/bno055.c ****          * available in the page zero*/
7959:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9577              		.loc 1 7959 9 is_stmt 1 view .LVU2519
 9578              		.loc 1 7959 21 is_stmt 0 view .LVU2520
 9579 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9580              		.loc 1 7959 12 view .LVU2521
 9581 0014 9BB9     		cbnz	r3, .L742
 9582              	.LVL1007:
 9583              	.L737:
7960:Core/Src/bno055.c ****         {
7961:Core/Src/bno055.c ****             /* Write the page zero*/
7962:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7963:Core/Src/bno055.c ****         }
7964:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9584              		.loc 1 7964 53 discriminator 1 view .LVU2522
 9585 0016 104B     		ldr	r3, .L743
 9586 0018 1B68     		ldr	r3, [r3]
 9587 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9588              		.loc 1 7964 41 discriminator 1 view .LVU2523
 9589 001c C3B9     		cbnz	r3, .L740
 9590              	.L738:
7965:Core/Src/bno055.c ****         {
7966:Core/Src/bno055.c ****             /* Read the temperature unit */
7967:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9591              		.loc 1 7967 13 is_stmt 1 view .LVU2524
 9592              		.loc 1 7967 32 is_stmt 0 view .LVU2525
 9593 001e 0E4B     		ldr	r3, .L743
 9594 0020 1868     		ldr	r0, [r3]
 9595 0022 0569     		ldr	r5, [r0, #16]
 9596              		.loc 1 7967 24 view .LVU2526
 9597 0024 0123     		movs	r3, #1
 9598 0026 0DF10702 		add	r2, sp, #7
 9599 002a 3B21     		movs	r1, #59
 9600 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9601 002e A847     		blx	r5
 9602              	.LVL1008:
7968:Core/Src/bno055.c ****                                                       BNO055_TEMP_UNIT_REG,
7969:Core/Src/bno055.c ****                                                       &data_u8r,
7970:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7971:Core/Src/bno055.c ****             *temp_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_UNIT);
 9603              		.loc 1 7971 13 is_stmt 1 view .LVU2527
ARM GAS  /tmp/cc9kYR4Z.s 			page 317


 9604              		.loc 1 7971 29 is_stmt 0 view .LVU2528
 9605 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9606 0034 C3F30013 		ubfx	r3, r3, #4, #1
 9607              		.loc 1 7971 27 view .LVU2529
 9608 0038 2370     		strb	r3, [r4]
 9609              	.LVL1009:
 9610              	.L736:
7972:Core/Src/bno055.c ****         }
7973:Core/Src/bno055.c ****         else
7974:Core/Src/bno055.c ****         {
7975:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7976:Core/Src/bno055.c ****         }
7977:Core/Src/bno055.c ****     }
7978:Core/Src/bno055.c **** 
7979:Core/Src/bno055.c ****     return com_rslt;
7980:Core/Src/bno055.c **** }
 9611              		.loc 1 7980 1 view .LVU2530
 9612 003a 03B0     		add	sp, sp, #12
 9613              	.LCFI335:
 9614              		.cfi_remember_state
 9615              		.cfi_def_cfa_offset 12
 9616              		@ sp needed
 9617 003c 30BD     		pop	{r4, r5, pc}
 9618              	.LVL1010:
 9619              	.L742:
 9620              	.LCFI336:
 9621              		.cfi_restore_state
7962:Core/Src/bno055.c ****         }
 9622              		.loc 1 7962 13 is_stmt 1 view .LVU2531
7962:Core/Src/bno055.c ****         }
 9623              		.loc 1 7962 23 is_stmt 0 view .LVU2532
 9624 003e 0020     		movs	r0, #0
 9625              	.LVL1011:
7962:Core/Src/bno055.c ****         }
 9626              		.loc 1 7962 23 view .LVU2533
 9627 0040 FFF7FEFF 		bl	bno055_write_page_id
 9628              	.LVL1012:
7964:Core/Src/bno055.c ****         {
 9629              		.loc 1 7964 9 is_stmt 1 view .LVU2534
7964:Core/Src/bno055.c ****         {
 9630              		.loc 1 7964 12 is_stmt 0 view .LVU2535
 9631 0044 0028     		cmp	r0, #0
 9632 0046 EAD0     		beq	.L738
 9633 0048 E5E7     		b	.L737
 9634              	.LVL1013:
 9635              	.L739:
7953:Core/Src/bno055.c ****     }
 9636              		.loc 1 7953 16 view .LVU2536
 9637 004a 6FF07E00 		mvn	r0, #126
 9638              	.LVL1014:
7953:Core/Src/bno055.c ****     }
 9639              		.loc 1 7953 16 view .LVU2537
 9640 004e F4E7     		b	.L736
 9641              	.LVL1015:
 9642              	.L740:
7975:Core/Src/bno055.c ****         }
 9643              		.loc 1 7975 22 view .LVU2538
ARM GAS  /tmp/cc9kYR4Z.s 			page 318


 9644 0050 4FF0FF30 		mov	r0, #-1
 9645 0054 F1E7     		b	.L736
 9646              	.L744:
 9647 0056 00BF     		.align	2
 9648              	.L743:
 9649 0058 00000000 		.word	.LANCHOR0
 9650              		.cfi_endproc
 9651              	.LFE141:
 9653              		.section	.text.bno055_get_data_output_format,"ax",%progbits
 9654              		.align	1
 9655              		.global	bno055_get_data_output_format
 9656              		.syntax unified
 9657              		.thumb
 9658              		.thumb_func
 9660              	bno055_get_data_output_format:
 9661              	.LVL1016:
 9662              	.LFB143:
7981:Core/Src/bno055.c **** 
7982:Core/Src/bno055.c **** /*!
7983:Core/Src/bno055.c ****  *  @brief This API used to write the temperature unit
7984:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7985:Core/Src/bno055.c ****  *
7986:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7987:Core/Src/bno055.c ****  *
7988:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7989:Core/Src/bno055.c ****  *   -----------      | --------------
7990:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7991:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7992:Core/Src/bno055.c ****  *
7993:Core/Src/bno055.c ****  *  @return results of bus communication function
7994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7996:Core/Src/bno055.c ****  *
7997:Core/Src/bno055.c ****  *
7998:Core/Src/bno055.c ****  */
7999:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_unit(u8 temp_unit_u8)
8000:Core/Src/bno055.c **** {
8001:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8002:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8003:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8004:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8005:Core/Src/bno055.c **** 
8006:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8007:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8008:Core/Src/bno055.c ****     {
8009:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8010:Core/Src/bno055.c ****     }
8011:Core/Src/bno055.c ****     else
8012:Core/Src/bno055.c ****     {
8013:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8014:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8015:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8016:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8017:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8018:Core/Src/bno055.c ****         {
8019:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8020:Core/Src/bno055.c ****             {
ARM GAS  /tmp/cc9kYR4Z.s 			page 319


8021:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8022:Core/Src/bno055.c ****             }
8023:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8024:Core/Src/bno055.c ****             {
8025:Core/Src/bno055.c ****                 /* Write the temperature unit */
8026:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8027:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
8028:Core/Src/bno055.c ****                                                           &data_u8r,
8029:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8030:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8031:Core/Src/bno055.c ****                 {
8032:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_UNIT, temp_unit_u8);
8033:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8034:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
8035:Core/Src/bno055.c ****                                                                 &data_u8r,
8036:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8037:Core/Src/bno055.c ****                 }
8038:Core/Src/bno055.c ****             }
8039:Core/Src/bno055.c ****             else
8040:Core/Src/bno055.c ****             {
8041:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8042:Core/Src/bno055.c ****             }
8043:Core/Src/bno055.c ****         }
8044:Core/Src/bno055.c ****         else
8045:Core/Src/bno055.c ****         {
8046:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8047:Core/Src/bno055.c ****         }
8048:Core/Src/bno055.c ****     }
8049:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8050:Core/Src/bno055.c ****     {
8051:Core/Src/bno055.c ****         /* set the operation mode
8052:Core/Src/bno055.c ****          * of previous operation mode*/
8053:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8054:Core/Src/bno055.c ****     }
8055:Core/Src/bno055.c **** 
8056:Core/Src/bno055.c ****     return com_rslt;
8057:Core/Src/bno055.c **** }
8058:Core/Src/bno055.c **** 
8059:Core/Src/bno055.c **** /*!
8060:Core/Src/bno055.c ****  *  @brief This API used to read the current selected orientation mode
8061:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8062:Core/Src/bno055.c ****  *
8063:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8064:Core/Src/bno055.c ****  *
8065:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8066:Core/Src/bno055.c ****  *   --------------------      | --------
8067:Core/Src/bno055.c ****  *    0x00                     | Windows
8068:Core/Src/bno055.c ****  *    0x01                     | Android
8069:Core/Src/bno055.c ****  *
8070:Core/Src/bno055.c ****  *  @return results of bus communication function
8071:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8072:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8073:Core/Src/bno055.c ****  *
8074:Core/Src/bno055.c ****  */
8075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_data_output_format(u8 *data_output_format_u8)
8076:Core/Src/bno055.c **** {
 9663              		.loc 1 8076 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9kYR4Z.s 			page 320


 9664              		.cfi_startproc
 9665              		@ args = 0, pretend = 0, frame = 8
 9666              		@ frame_needed = 0, uses_anonymous_args = 0
 9667              		.loc 1 8076 1 is_stmt 0 view .LVU2540
 9668 0000 30B5     		push	{r4, r5, lr}
 9669              	.LCFI337:
 9670              		.cfi_def_cfa_offset 12
 9671              		.cfi_offset 4, -12
 9672              		.cfi_offset 5, -8
 9673              		.cfi_offset 14, -4
 9674 0002 83B0     		sub	sp, sp, #12
 9675              	.LCFI338:
 9676              		.cfi_def_cfa_offset 24
8077:Core/Src/bno055.c ****     /* Variable used to return value of
8078:Core/Src/bno055.c ****      * communication routine*/
8079:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9677              		.loc 1 8079 5 is_stmt 1 view .LVU2541
 9678              	.LVL1017:
8080:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9679              		.loc 1 8080 5 view .LVU2542
 9680              		.loc 1 8080 8 is_stmt 0 view .LVU2543
 9681 0004 0023     		movs	r3, #0
 9682 0006 8DF80730 		strb	r3, [sp, #7]
8081:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9683              		.loc 1 8081 5 is_stmt 1 view .LVU2544
 9684              	.LVL1018:
8082:Core/Src/bno055.c **** 
8083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9685              		.loc 1 8084 5 view .LVU2545
 9686              		.loc 1 8084 18 is_stmt 0 view .LVU2546
 9687 000a 124B     		ldr	r3, .L753
 9688 000c 1B68     		ldr	r3, [r3]
 9689              		.loc 1 8084 8 view .LVU2547
 9690 000e DBB1     		cbz	r3, .L749
 9691 0010 0446     		mov	r4, r0
8085:Core/Src/bno055.c ****     {
8086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8087:Core/Src/bno055.c ****     }
8088:Core/Src/bno055.c ****     else
8089:Core/Src/bno055.c ****     {
8090:Core/Src/bno055.c ****         /*condition check for page, data output format is
8091:Core/Src/bno055.c ****          * available in the page zero*/
8092:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9692              		.loc 1 8092 9 is_stmt 1 view .LVU2548
 9693              		.loc 1 8092 21 is_stmt 0 view .LVU2549
 9694 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9695              		.loc 1 8092 12 view .LVU2550
 9696 0014 93B9     		cbnz	r3, .L752
 9697              	.LVL1019:
 9698              	.L747:
8093:Core/Src/bno055.c ****         {
8094:Core/Src/bno055.c ****             /* Write the page zero*/
8095:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8096:Core/Src/bno055.c ****         }
8097:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9699              		.loc 1 8097 53 discriminator 1 view .LVU2551
ARM GAS  /tmp/cc9kYR4Z.s 			page 321


 9700 0016 0F4B     		ldr	r3, .L753
 9701 0018 1B68     		ldr	r3, [r3]
 9702 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9703              		.loc 1 8097 41 discriminator 1 view .LVU2552
 9704 001c BBB9     		cbnz	r3, .L750
 9705              	.L748:
8098:Core/Src/bno055.c ****         {
8099:Core/Src/bno055.c ****             /* Read the data output format */
8100:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9706              		.loc 1 8100 13 is_stmt 1 view .LVU2553
 9707              		.loc 1 8100 32 is_stmt 0 view .LVU2554
 9708 001e 0D4B     		ldr	r3, .L753
 9709 0020 1868     		ldr	r0, [r3]
 9710 0022 0569     		ldr	r5, [r0, #16]
 9711              		.loc 1 8100 24 view .LVU2555
 9712 0024 0123     		movs	r3, #1
 9713 0026 0DF10702 		add	r2, sp, #7
 9714 002a 3B21     		movs	r1, #59
 9715 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9716 002e A847     		blx	r5
 9717              	.LVL1020:
8101:Core/Src/bno055.c ****                                                       BNO055_DATA_OUTPUT_FORMAT_REG,
8102:Core/Src/bno055.c ****                                                       &data_u8r,
8103:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8104:Core/Src/bno055.c ****             *data_output_format_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT);
 9718              		.loc 1 8104 13 is_stmt 1 view .LVU2556
 9719              		.loc 1 8104 38 is_stmt 0 view .LVU2557
 9720 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9721 0034 DB09     		lsrs	r3, r3, #7
 9722              		.loc 1 8104 36 view .LVU2558
 9723 0036 2370     		strb	r3, [r4]
 9724              	.LVL1021:
 9725              	.L746:
8105:Core/Src/bno055.c ****         }
8106:Core/Src/bno055.c ****         else
8107:Core/Src/bno055.c ****         {
8108:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8109:Core/Src/bno055.c ****         }
8110:Core/Src/bno055.c ****     }
8111:Core/Src/bno055.c **** 
8112:Core/Src/bno055.c ****     return com_rslt;
8113:Core/Src/bno055.c **** }
 9726              		.loc 1 8113 1 view .LVU2559
 9727 0038 03B0     		add	sp, sp, #12
 9728              	.LCFI339:
 9729              		.cfi_remember_state
 9730              		.cfi_def_cfa_offset 12
 9731              		@ sp needed
 9732 003a 30BD     		pop	{r4, r5, pc}
 9733              	.LVL1022:
 9734              	.L752:
 9735              	.LCFI340:
 9736              		.cfi_restore_state
8095:Core/Src/bno055.c ****         }
 9737              		.loc 1 8095 13 is_stmt 1 view .LVU2560
8095:Core/Src/bno055.c ****         }
 9738              		.loc 1 8095 23 is_stmt 0 view .LVU2561
ARM GAS  /tmp/cc9kYR4Z.s 			page 322


 9739 003c 0020     		movs	r0, #0
 9740              	.LVL1023:
8095:Core/Src/bno055.c ****         }
 9741              		.loc 1 8095 23 view .LVU2562
 9742 003e FFF7FEFF 		bl	bno055_write_page_id
 9743              	.LVL1024:
8097:Core/Src/bno055.c ****         {
 9744              		.loc 1 8097 9 is_stmt 1 view .LVU2563
8097:Core/Src/bno055.c ****         {
 9745              		.loc 1 8097 12 is_stmt 0 view .LVU2564
 9746 0042 0028     		cmp	r0, #0
 9747 0044 EBD0     		beq	.L748
 9748 0046 E6E7     		b	.L747
 9749              	.LVL1025:
 9750              	.L749:
8086:Core/Src/bno055.c ****     }
 9751              		.loc 1 8086 16 view .LVU2565
 9752 0048 6FF07E00 		mvn	r0, #126
 9753              	.LVL1026:
8086:Core/Src/bno055.c ****     }
 9754              		.loc 1 8086 16 view .LVU2566
 9755 004c F4E7     		b	.L746
 9756              	.LVL1027:
 9757              	.L750:
8108:Core/Src/bno055.c ****         }
 9758              		.loc 1 8108 22 view .LVU2567
 9759 004e 4FF0FF30 		mov	r0, #-1
 9760 0052 F1E7     		b	.L746
 9761              	.L754:
 9762              		.align	2
 9763              	.L753:
 9764 0054 00000000 		.word	.LANCHOR0
 9765              		.cfi_endproc
 9766              	.LFE143:
 9768              		.section	.text.bno055_get_operation_mode,"ax",%progbits
 9769              		.align	1
 9770              		.global	bno055_get_operation_mode
 9771              		.syntax unified
 9772              		.thumb
 9773              		.thumb_func
 9775              	bno055_get_operation_mode:
 9776              	.LVL1028:
 9777              	.LFB145:
8114:Core/Src/bno055.c **** 
8115:Core/Src/bno055.c **** /*!
8116:Core/Src/bno055.c ****  *  @brief This API used to write the current selected orientation mode
8117:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8118:Core/Src/bno055.c ****  *
8119:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8120:Core/Src/bno055.c ****  *
8121:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8122:Core/Src/bno055.c ****  *   --------------------      | --------
8123:Core/Src/bno055.c ****  *    0x00                     | Windows
8124:Core/Src/bno055.c ****  *    0x01                     | Android
8125:Core/Src/bno055.c ****  *
8126:Core/Src/bno055.c ****  *  @return results of bus communication function
8127:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/cc9kYR4Z.s 			page 323


8128:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8129:Core/Src/bno055.c ****  *
8130:Core/Src/bno055.c ****  *
8131:Core/Src/bno055.c ****  */
8132:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_data_output_format(u8 data_output_format_u8)
8133:Core/Src/bno055.c **** {
8134:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8135:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8136:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8138:Core/Src/bno055.c **** 
8139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8141:Core/Src/bno055.c ****     {
8142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8143:Core/Src/bno055.c ****     }
8144:Core/Src/bno055.c ****     else
8145:Core/Src/bno055.c ****     {
8146:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8147:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8148:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8149:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8150:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8151:Core/Src/bno055.c ****         {
8152:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8153:Core/Src/bno055.c ****             {
8154:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8155:Core/Src/bno055.c ****             }
8156:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8157:Core/Src/bno055.c ****             {
8158:Core/Src/bno055.c ****                 /* Write the data output format */
8159:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8160:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
8161:Core/Src/bno055.c ****                                                           &data_u8r,
8162:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8163:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8164:Core/Src/bno055.c ****                 {
8165:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT, data_output
8166:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8167:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
8168:Core/Src/bno055.c ****                                                                 &data_u8r,
8169:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8170:Core/Src/bno055.c ****                 }
8171:Core/Src/bno055.c ****             }
8172:Core/Src/bno055.c ****             else
8173:Core/Src/bno055.c ****             {
8174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8175:Core/Src/bno055.c ****             }
8176:Core/Src/bno055.c ****         }
8177:Core/Src/bno055.c ****         else
8178:Core/Src/bno055.c ****         {
8179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8180:Core/Src/bno055.c ****         }
8181:Core/Src/bno055.c ****     }
8182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8183:Core/Src/bno055.c ****     {
8184:Core/Src/bno055.c ****         /* set the operation mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 324


8185:Core/Src/bno055.c ****          * of previous operation mode*/
8186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8187:Core/Src/bno055.c ****     }
8188:Core/Src/bno055.c **** 
8189:Core/Src/bno055.c ****     return com_rslt;
8190:Core/Src/bno055.c **** }
8191:Core/Src/bno055.c **** 
8192:Core/Src/bno055.c **** /*! @brief This API used to read the operation mode
8193:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8194:Core/Src/bno055.c ****  *
8195:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8196:Core/Src/bno055.c ****  *
8197:Core/Src/bno055.c ****  * operation_mode_u8 |      result      | comments
8198:Core/Src/bno055.c ****  * ----------|----------------------------|----------------------------
8199:Core/Src/bno055.c ****  *  0x00     | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8200:Core/Src/bno055.c ****  *  0x01     | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8201:Core/Src/bno055.c ****  *  0x02     | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8202:Core/Src/bno055.c ****  *  0x03     | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8203:Core/Src/bno055.c ****  *  0x04     | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8204:Core/Src/bno055.c ****  *  0x05     | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8205:Core/Src/bno055.c ****  *  0x06     | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8206:Core/Src/bno055.c ****  *  0x07     | OPERATION_MODE_ANY_MOTION  | Reads accel mag and gyro data
8207:Core/Src/bno055.c ****  *  0x08     | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8208:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,gyro and fusion data
8209:Core/Src/bno055.c ****  *  0x09     | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
8210:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8211:Core/Src/bno055.c ****  *  0x0A     | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8212:Core/Src/bno055.c ****  *    -      |       -                    | and fusion data
8213:Core/Src/bno055.c ****  *  0x0B     | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8214:Core/Src/bno055.c ****  *   -       |       -                    | fast magnetic calibration
8215:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8216:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8217:Core/Src/bno055.c ****  *  0x0C     | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8218:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8219:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8220:Core/Src/bno055.c ****  *
8221:Core/Src/bno055.c ****  *  @return results of bus communication function
8222:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8223:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8224:Core/Src/bno055.c ****  *
8225:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8226:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8227:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8228:Core/Src/bno055.c ****  *
8229:Core/Src/bno055.c ****  */
8230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_operation_mode(u8 *operation_mode_u8)
8231:Core/Src/bno055.c **** {
 9778              		.loc 1 8231 1 is_stmt 1 view -0
 9779              		.cfi_startproc
 9780              		@ args = 0, pretend = 0, frame = 8
 9781              		@ frame_needed = 0, uses_anonymous_args = 0
 9782              		.loc 1 8231 1 is_stmt 0 view .LVU2569
 9783 0000 30B5     		push	{r4, r5, lr}
 9784              	.LCFI341:
 9785              		.cfi_def_cfa_offset 12
 9786              		.cfi_offset 4, -12
 9787              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 325


 9788              		.cfi_offset 14, -4
 9789 0002 83B0     		sub	sp, sp, #12
 9790              	.LCFI342:
 9791              		.cfi_def_cfa_offset 24
8232:Core/Src/bno055.c ****     /* Variable used to return value of
8233:Core/Src/bno055.c ****      * communication routine*/
8234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9792              		.loc 1 8234 5 is_stmt 1 view .LVU2570
 9793              	.LVL1029:
8235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9794              		.loc 1 8235 5 view .LVU2571
 9795              		.loc 1 8235 8 is_stmt 0 view .LVU2572
 9796 0004 0023     		movs	r3, #0
 9797 0006 8DF80730 		strb	r3, [sp, #7]
8236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9798              		.loc 1 8236 5 is_stmt 1 view .LVU2573
 9799              	.LVL1030:
8237:Core/Src/bno055.c **** 
8238:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8239:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9800              		.loc 1 8239 5 view .LVU2574
 9801              		.loc 1 8239 18 is_stmt 0 view .LVU2575
 9802 000a 134B     		ldr	r3, .L763
 9803 000c 1B68     		ldr	r3, [r3]
 9804              		.loc 1 8239 8 view .LVU2576
 9805 000e E3B1     		cbz	r3, .L759
 9806 0010 0446     		mov	r4, r0
8240:Core/Src/bno055.c ****     {
8241:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8242:Core/Src/bno055.c ****     }
8243:Core/Src/bno055.c ****     else
8244:Core/Src/bno055.c ****     {
8245:Core/Src/bno055.c ****         /*condition check for page, operation mode is
8246:Core/Src/bno055.c ****          * available in the page zero*/
8247:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9807              		.loc 1 8247 9 is_stmt 1 view .LVU2577
 9808              		.loc 1 8247 21 is_stmt 0 view .LVU2578
 9809 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9810              		.loc 1 8247 12 view .LVU2579
 9811 0014 9BB9     		cbnz	r3, .L762
 9812              	.LVL1031:
 9813              	.L757:
8248:Core/Src/bno055.c ****         {
8249:Core/Src/bno055.c ****             /* Write the page zero*/
8250:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8251:Core/Src/bno055.c ****         }
8252:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9814              		.loc 1 8252 53 discriminator 1 view .LVU2580
 9815 0016 104B     		ldr	r3, .L763
 9816 0018 1B68     		ldr	r3, [r3]
 9817 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9818              		.loc 1 8252 41 discriminator 1 view .LVU2581
 9819 001c C3B9     		cbnz	r3, .L760
 9820              	.L758:
8253:Core/Src/bno055.c ****         {
8254:Core/Src/bno055.c ****             /* Read the value of operation mode*/
8255:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 326


 9821              		.loc 1 8255 13 is_stmt 1 view .LVU2582
 9822              		.loc 1 8255 32 is_stmt 0 view .LVU2583
 9823 001e 0E4B     		ldr	r3, .L763
 9824 0020 1868     		ldr	r0, [r3]
 9825 0022 0569     		ldr	r5, [r0, #16]
 9826              		.loc 1 8255 24 view .LVU2584
 9827 0024 0123     		movs	r3, #1
 9828 0026 0DF10702 		add	r2, sp, #7
 9829 002a 3D21     		movs	r1, #61
 9830 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9831 002e A847     		blx	r5
 9832              	.LVL1032:
8256:Core/Src/bno055.c ****                                                       BNO055_OPERATION_MODE_REG,
8257:Core/Src/bno055.c ****                                                       &data_u8r,
8258:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8259:Core/Src/bno055.c ****             *operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_OPERATION_MODE);
 9833              		.loc 1 8259 13 is_stmt 1 view .LVU2585
 9834              		.loc 1 8259 34 is_stmt 0 view .LVU2586
 9835 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9836 0034 03F00F03 		and	r3, r3, #15
 9837              		.loc 1 8259 32 view .LVU2587
 9838 0038 2370     		strb	r3, [r4]
 9839              	.LVL1033:
 9840              	.L756:
8260:Core/Src/bno055.c ****         }
8261:Core/Src/bno055.c ****         else
8262:Core/Src/bno055.c ****         {
8263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8264:Core/Src/bno055.c ****         }
8265:Core/Src/bno055.c ****     }
8266:Core/Src/bno055.c **** 
8267:Core/Src/bno055.c ****     return com_rslt;
8268:Core/Src/bno055.c **** }
 9841              		.loc 1 8268 1 view .LVU2588
 9842 003a 03B0     		add	sp, sp, #12
 9843              	.LCFI343:
 9844              		.cfi_remember_state
 9845              		.cfi_def_cfa_offset 12
 9846              		@ sp needed
 9847 003c 30BD     		pop	{r4, r5, pc}
 9848              	.LVL1034:
 9849              	.L762:
 9850              	.LCFI344:
 9851              		.cfi_restore_state
8250:Core/Src/bno055.c ****         }
 9852              		.loc 1 8250 13 is_stmt 1 view .LVU2589
8250:Core/Src/bno055.c ****         }
 9853              		.loc 1 8250 23 is_stmt 0 view .LVU2590
 9854 003e 0020     		movs	r0, #0
 9855              	.LVL1035:
8250:Core/Src/bno055.c ****         }
 9856              		.loc 1 8250 23 view .LVU2591
 9857 0040 FFF7FEFF 		bl	bno055_write_page_id
 9858              	.LVL1036:
8252:Core/Src/bno055.c ****         {
 9859              		.loc 1 8252 9 is_stmt 1 view .LVU2592
8252:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 327


 9860              		.loc 1 8252 12 is_stmt 0 view .LVU2593
 9861 0044 0028     		cmp	r0, #0
 9862 0046 EAD0     		beq	.L758
 9863 0048 E5E7     		b	.L757
 9864              	.LVL1037:
 9865              	.L759:
8241:Core/Src/bno055.c ****     }
 9866              		.loc 1 8241 16 view .LVU2594
 9867 004a 6FF07E00 		mvn	r0, #126
 9868              	.LVL1038:
8241:Core/Src/bno055.c ****     }
 9869              		.loc 1 8241 16 view .LVU2595
 9870 004e F4E7     		b	.L756
 9871              	.LVL1039:
 9872              	.L760:
8263:Core/Src/bno055.c ****         }
 9873              		.loc 1 8263 22 view .LVU2596
 9874 0050 4FF0FF30 		mov	r0, #-1
 9875 0054 F1E7     		b	.L756
 9876              	.L764:
 9877 0056 00BF     		.align	2
 9878              	.L763:
 9879 0058 00000000 		.word	.LANCHOR0
 9880              		.cfi_endproc
 9881              	.LFE145:
 9883              		.section	.text.bno055_set_operation_mode,"ax",%progbits
 9884              		.align	1
 9885              		.global	bno055_set_operation_mode
 9886              		.syntax unified
 9887              		.thumb
 9888              		.thumb_func
 9890              	bno055_set_operation_mode:
 9891              	.LVL1040:
 9892              	.LFB146:
8269:Core/Src/bno055.c **** 
8270:Core/Src/bno055.c **** /*! @brief This API used to write the operation mode
8271:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8272:Core/Src/bno055.c ****  *
8273:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8274:Core/Src/bno055.c ****  *
8275:Core/Src/bno055.c ****  *  operation_mode_u8  |      result            | comments
8276:Core/Src/bno055.c ****  * ---------|-----------------------------------|--------------------------
8277:Core/Src/bno055.c ****  *  0x00    | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8278:Core/Src/bno055.c ****  *  0x01    | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8279:Core/Src/bno055.c ****  *  0x02    | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8280:Core/Src/bno055.c ****  *  0x03    | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8281:Core/Src/bno055.c ****  *  0x04    | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8282:Core/Src/bno055.c ****  *  0x05    | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8283:Core/Src/bno055.c ****  *  0x06    | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8284:Core/Src/bno055.c ****  *  0x07    | OPERATION_MODE_ANY_MOTION         | Reads accel mag and
8285:Core/Src/bno055.c ****  *          |       -                           | gyro data
8286:Core/Src/bno055.c ****  *  0x08    | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8287:Core/Src/bno055.c ****  *   -      |                                   | Reads accel,gyro and
8288:Core/Src/bno055.c ****  *          |       -                           | fusion data
8289:Core/Src/bno055.c ****  *  0x09    | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
8290:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8291:Core/Src/bno055.c ****  *  0x0A    | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
ARM GAS  /tmp/cc9kYR4Z.s 			page 328


8292:Core/Src/bno055.c ****  *    -     |       -                           | and fusion data
8293:Core/Src/bno055.c ****  *  0x0B    | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8294:Core/Src/bno055.c ****  *   -      |       -                           | fast magnetic calibration
8295:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8296:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8297:Core/Src/bno055.c ****  *  0x0C    | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8298:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8299:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8300:Core/Src/bno055.c ****  *
8301:Core/Src/bno055.c ****  *  @return results of bus communication function
8302:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8303:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8304:Core/Src/bno055.c ****  *
8305:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8306:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8307:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8308:Core/Src/bno055.c ****  *
8309:Core/Src/bno055.c ****  */
8310:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_operation_mode(u8 operation_mode_u8)
8311:Core/Src/bno055.c **** {
 9893              		.loc 1 8311 1 is_stmt 1 view -0
 9894              		.cfi_startproc
 9895              		@ args = 0, pretend = 0, frame = 8
 9896              		@ frame_needed = 0, uses_anonymous_args = 0
 9897              		.loc 1 8311 1 is_stmt 0 view .LVU2598
 9898 0000 70B5     		push	{r4, r5, r6, lr}
 9899              	.LCFI345:
 9900              		.cfi_def_cfa_offset 16
 9901              		.cfi_offset 4, -16
 9902              		.cfi_offset 5, -12
 9903              		.cfi_offset 6, -8
 9904              		.cfi_offset 14, -4
 9905 0002 82B0     		sub	sp, sp, #8
 9906              	.LCFI346:
 9907              		.cfi_def_cfa_offset 24
8312:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9908              		.loc 1 8312 5 is_stmt 1 view .LVU2599
 9909              	.LVL1041:
8313:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9910              		.loc 1 8313 5 view .LVU2600
 9911              		.loc 1 8313 8 is_stmt 0 view .LVU2601
 9912 0004 0023     		movs	r3, #0
 9913 0006 8DF80730 		strb	r3, [sp, #7]
8314:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 9914              		.loc 1 8314 5 is_stmt 1 view .LVU2602
 9915              		.loc 1 8314 8 is_stmt 0 view .LVU2603
 9916 000a 8DF80630 		strb	r3, [sp, #6]
8315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9917              		.loc 1 8315 5 is_stmt 1 view .LVU2604
 9918              	.LVL1042:
8316:Core/Src/bno055.c **** 
8317:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9919              		.loc 1 8318 5 view .LVU2605
 9920              		.loc 1 8318 18 is_stmt 0 view .LVU2606
 9921 000e 434B     		ldr	r3, .L773
 9922 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 329


 9923              		.loc 1 8318 8 view .LVU2607
 9924 0012 002B     		cmp	r3, #0
 9925 0014 7CD0     		beq	.L769
 9926 0016 0546     		mov	r5, r0
8319:Core/Src/bno055.c ****     {
8320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8321:Core/Src/bno055.c ****     }
8322:Core/Src/bno055.c ****     else
8323:Core/Src/bno055.c ****     {
8324:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8325:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8326:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8327:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 9927              		.loc 1 8327 9 is_stmt 1 view .LVU2608
 9928              		.loc 1 8327 19 is_stmt 0 view .LVU2609
 9929 0018 0DF10600 		add	r0, sp, #6
 9930              	.LVL1043:
 9931              		.loc 1 8327 19 view .LVU2610
 9932 001c FFF7FEFF 		bl	bno055_get_operation_mode
 9933              	.LVL1044:
8328:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 9934              		.loc 1 8328 9 is_stmt 1 view .LVU2611
 9935              		.loc 1 8328 12 is_stmt 0 view .LVU2612
 9936 0020 0028     		cmp	r0, #0
 9937 0022 78D1     		bne	.L770
8329:Core/Src/bno055.c ****         {
8330:Core/Src/bno055.c ****             /* If the previous operation mode is config it is
8331:Core/Src/bno055.c ****              * directly write the operation mode */
8332:Core/Src/bno055.c ****             if (prev_opmode_u8 == BNO055_OPERATION_MODE_CONFIG)
 9938              		.loc 1 8332 13 is_stmt 1 view .LVU2613
 9939              		.loc 1 8332 32 is_stmt 0 view .LVU2614
 9940 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 9941              		.loc 1 8332 16 view .LVU2615
 9942 0028 43BB     		cbnz	r3, .L767
8333:Core/Src/bno055.c ****             {
8334:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9943              		.loc 1 8334 17 is_stmt 1 view .LVU2616
 9944              		.loc 1 8334 36 is_stmt 0 view .LVU2617
 9945 002a 3C4B     		ldr	r3, .L773
 9946 002c 1868     		ldr	r0, [r3]
 9947              	.LVL1045:
 9948              		.loc 1 8334 36 view .LVU2618
 9949 002e 0469     		ldr	r4, [r0, #16]
 9950              		.loc 1 8334 28 view .LVU2619
 9951 0030 0123     		movs	r3, #1
 9952 0032 0DF10702 		add	r2, sp, #7
 9953 0036 3D21     		movs	r1, #61
 9954 0038 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9955 003a A047     		blx	r4
 9956              	.LVL1046:
8335:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8336:Core/Src/bno055.c ****                                                           &data_u8r,
8337:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8338:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 9957              		.loc 1 8338 17 is_stmt 1 view .LVU2620
 9958              		.loc 1 8338 20 is_stmt 0 view .LVU2621
 9959 003c 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 330


 9960 003e D0B9     		cbnz	r0, .L766
8339:Core/Src/bno055.c ****                 {
8340:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_mode_
 9961              		.loc 1 8340 21 is_stmt 1 view .LVU2622
 9962              		.loc 1 8340 32 is_stmt 0 view .LVU2623
 9963 0040 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 9964              	.LVL1047:
 9965              		.loc 1 8340 32 view .LVU2624
 9966 0044 20F00F00 		bic	r0, r0, #15
 9967 0048 43B2     		sxtb	r3, r0
 9968 004a 05F00F00 		and	r0, r5, #15
 9969 004e 1843     		orrs	r0, r0, r3
 9970              		.loc 1 8340 30 view .LVU2625
 9971 0050 8DF80700 		strb	r0, [sp, #7]
8341:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9972              		.loc 1 8341 21 is_stmt 1 view .LVU2626
 9973              		.loc 1 8341 41 is_stmt 0 view .LVU2627
 9974 0054 314D     		ldr	r5, .L773
 9975 0056 2868     		ldr	r0, [r5]
 9976 0058 C668     		ldr	r6, [r0, #12]
 9977              		.loc 1 8341 33 view .LVU2628
 9978 005a 0123     		movs	r3, #1
 9979 005c 0DF10702 		add	r2, sp, #7
 9980 0060 3D21     		movs	r1, #61
 9981 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9982 0064 B047     		blx	r6
 9983              	.LVL1048:
 9984              		.loc 1 8341 30 view .LVU2629
 9985 0066 54FA80F0 		uxtab	r0, r4, r0
 9986 006a 44B2     		sxtb	r4, r0
 9987              	.LVL1049:
8342:Core/Src/bno055.c ****                                                                 BNO055_OPERATION_MODE_REG,
8343:Core/Src/bno055.c ****                                                                 &data_u8r,
8344:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8345:Core/Src/bno055.c **** 
8346:Core/Src/bno055.c ****                     /* Config mode to other
8347:Core/Src/bno055.c ****                      * operation mode switching
8348:Core/Src/bno055.c ****                      * required delay of 600ms*/
8349:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
 9988              		.loc 1 8349 21 is_stmt 1 view .LVU2630
 9989              		.loc 1 8349 29 is_stmt 0 view .LVU2631
 9990 006c 2B68     		ldr	r3, [r5]
 9991 006e 5B69     		ldr	r3, [r3, #20]
 9992              		.loc 1 8349 21 view .LVU2632
 9993 0070 4FF41670 		mov	r0, #600
 9994 0074 9847     		blx	r3
 9995              	.LVL1050:
 9996              	.L766:
8350:Core/Src/bno055.c ****                 }
8351:Core/Src/bno055.c ****             }
8352:Core/Src/bno055.c ****             else
8353:Core/Src/bno055.c ****             {
8354:Core/Src/bno055.c ****                 /* If the previous operation
8355:Core/Src/bno055.c ****                  * mode is not config it is
8356:Core/Src/bno055.c ****                  * write the config mode */
8357:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8358:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 331


8359:Core/Src/bno055.c ****                                                           &data_u8r,
8360:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8361:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8362:Core/Src/bno055.c ****                 {
8363:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, BNO055_OPERATIO
8364:Core/Src/bno055.c ****                     com_rslt +=
8365:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
8366:Core/Src/bno055.c **** 
8367:Core/Src/bno055.c ****                     /* other mode to config mode switching
8368:Core/Src/bno055.c ****                      * required delay of 20ms*/
8369:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_CONFIG_MODE_SWITCHING_DELAY);
8370:Core/Src/bno055.c ****                 }
8371:Core/Src/bno055.c **** 
8372:Core/Src/bno055.c ****                 /* Write the operation mode */
8373:Core/Src/bno055.c ****                 if (operation_mode_u8 != BNO055_OPERATION_MODE_CONFIG)
8374:Core/Src/bno055.c ****                 {
8375:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8376:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
8377:Core/Src/bno055.c ****                                                               &data_u8r,
8378:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
8379:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
8380:Core/Src/bno055.c ****                     {
8381:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_m
8382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8383:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
8384:Core/Src/bno055.c ****                                                                     &data_u8r,
8385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
8386:Core/Src/bno055.c **** 
8387:Core/Src/bno055.c ****                         /* Config mode to other
8388:Core/Src/bno055.c ****                          * operation mode switching
8389:Core/Src/bno055.c ****                          * required delay of 600ms*/
8390:Core/Src/bno055.c ****                         p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
8391:Core/Src/bno055.c ****                     }
8392:Core/Src/bno055.c ****                 }
8393:Core/Src/bno055.c ****             }
8394:Core/Src/bno055.c ****         }
8395:Core/Src/bno055.c ****         else
8396:Core/Src/bno055.c ****         {
8397:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8398:Core/Src/bno055.c ****         }
8399:Core/Src/bno055.c ****     }
8400:Core/Src/bno055.c **** 
8401:Core/Src/bno055.c ****     return com_rslt;
8402:Core/Src/bno055.c **** }
 9997              		.loc 1 8402 1 view .LVU2633
 9998 0076 2046     		mov	r0, r4
 9999 0078 02B0     		add	sp, sp, #8
 10000              	.LCFI347:
 10001              		.cfi_remember_state
 10002              		.cfi_def_cfa_offset 16
 10003              		@ sp needed
 10004 007a 70BD     		pop	{r4, r5, r6, pc}
 10005              	.LVL1051:
 10006              	.L767:
 10007              	.LCFI348:
 10008              		.cfi_restore_state
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 332


 10009              		.loc 1 8357 17 is_stmt 1 view .LVU2634
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10010              		.loc 1 8357 36 is_stmt 0 view .LVU2635
 10011 007c 274B     		ldr	r3, .L773
 10012 007e 1868     		ldr	r0, [r3]
 10013              	.LVL1052:
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10014              		.loc 1 8357 36 view .LVU2636
 10015 0080 0469     		ldr	r4, [r0, #16]
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10016              		.loc 1 8357 28 view .LVU2637
 10017 0082 0123     		movs	r3, #1
 10018 0084 0DF10702 		add	r2, sp, #7
 10019 0088 3D21     		movs	r1, #61
 10020 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10021 008c A047     		blx	r4
 10022              	.LVL1053:
8361:Core/Src/bno055.c ****                 {
 10023              		.loc 1 8361 17 is_stmt 1 view .LVU2638
8361:Core/Src/bno055.c ****                 {
 10024              		.loc 1 8361 20 is_stmt 0 view .LVU2639
 10025 008e 0446     		mov	r4, r0
 10026 0090 48B3     		cbz	r0, .L772
 10027              	.LVL1054:
 10028              	.L768:
8373:Core/Src/bno055.c ****                 {
 10029              		.loc 1 8373 17 is_stmt 1 view .LVU2640
8373:Core/Src/bno055.c ****                 {
 10030              		.loc 1 8373 20 is_stmt 0 view .LVU2641
 10031 0092 002D     		cmp	r5, #0
 10032 0094 EFD0     		beq	.L766
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10033              		.loc 1 8375 21 is_stmt 1 view .LVU2642
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10034              		.loc 1 8375 40 is_stmt 0 view .LVU2643
 10035 0096 214B     		ldr	r3, .L773
 10036 0098 1868     		ldr	r0, [r3]
 10037 009a 0469     		ldr	r4, [r0, #16]
 10038              	.LVL1055:
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10039              		.loc 1 8375 32 view .LVU2644
 10040 009c 0123     		movs	r3, #1
 10041 009e 0DF10702 		add	r2, sp, #7
 10042 00a2 3D21     		movs	r1, #61
 10043 00a4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10044 00a6 A047     		blx	r4
 10045              	.LVL1056:
8379:Core/Src/bno055.c ****                     {
 10046              		.loc 1 8379 21 is_stmt 1 view .LVU2645
8379:Core/Src/bno055.c ****                     {
 10047              		.loc 1 8379 24 is_stmt 0 view .LVU2646
 10048 00a8 0446     		mov	r4, r0
 10049 00aa 0028     		cmp	r0, #0
 10050 00ac E3D1     		bne	.L766
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10051              		.loc 1 8381 25 is_stmt 1 view .LVU2647
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 333


 10052              		.loc 1 8381 36 is_stmt 0 view .LVU2648
 10053 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 10054 00b2 23F00F03 		bic	r3, r3, #15
 10055 00b6 5BB2     		sxtb	r3, r3
 10056 00b8 05F00F00 		and	r0, r5, #15
 10057              	.LVL1057:
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10058              		.loc 1 8381 36 view .LVU2649
 10059 00bc 0343     		orrs	r3, r3, r0
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10060              		.loc 1 8381 34 view .LVU2650
 10061 00be 8DF80730 		strb	r3, [sp, #7]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10062              		.loc 1 8382 25 is_stmt 1 view .LVU2651
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10063              		.loc 1 8382 45 is_stmt 0 view .LVU2652
 10064 00c2 164D     		ldr	r5, .L773
 10065 00c4 2868     		ldr	r0, [r5]
 10066 00c6 C668     		ldr	r6, [r0, #12]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10067              		.loc 1 8382 37 view .LVU2653
 10068 00c8 0123     		movs	r3, #1
 10069 00ca 0DF10702 		add	r2, sp, #7
 10070 00ce 3D21     		movs	r1, #61
 10071 00d0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10072 00d2 B047     		blx	r6
 10073              	.LVL1058:
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10074              		.loc 1 8382 34 view .LVU2654
 10075 00d4 54FA80F0 		uxtab	r0, r4, r0
 10076 00d8 44B2     		sxtb	r4, r0
 10077              	.LVL1059:
8390:Core/Src/bno055.c ****                     }
 10078              		.loc 1 8390 25 is_stmt 1 view .LVU2655
8390:Core/Src/bno055.c ****                     }
 10079              		.loc 1 8390 33 is_stmt 0 view .LVU2656
 10080 00da 2B68     		ldr	r3, [r5]
 10081 00dc 5B69     		ldr	r3, [r3, #20]
8390:Core/Src/bno055.c ****                     }
 10082              		.loc 1 8390 25 view .LVU2657
 10083 00de 4FF41670 		mov	r0, #600
 10084 00e2 9847     		blx	r3
 10085              	.LVL1060:
 10086 00e4 C7E7     		b	.L766
 10087              	.LVL1061:
 10088              	.L772:
8363:Core/Src/bno055.c ****                     com_rslt +=
 10089              		.loc 1 8363 21 is_stmt 1 view .LVU2658
8363:Core/Src/bno055.c ****                     com_rslt +=
 10090              		.loc 1 8363 32 is_stmt 0 view .LVU2659
 10091 00e6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 10092 00ea 03F0F003 		and	r3, r3, #240
8363:Core/Src/bno055.c ****                     com_rslt +=
 10093              		.loc 1 8363 30 view .LVU2660
 10094 00ee 8DF80730 		strb	r3, [sp, #7]
8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 10095              		.loc 1 8364 21 is_stmt 1 view .LVU2661
ARM GAS  /tmp/cc9kYR4Z.s 			page 334


8365:Core/Src/bno055.c **** 
 10096              		.loc 1 8365 25 is_stmt 0 view .LVU2662
 10097 00f2 0122     		movs	r2, #1
 10098 00f4 0DF10701 		add	r1, sp, #7
 10099 00f8 3D20     		movs	r0, #61
 10100              	.LVL1062:
8365:Core/Src/bno055.c **** 
 10101              		.loc 1 8365 25 view .LVU2663
 10102 00fa FFF7FEFF 		bl	bno055_write_register
 10103              	.LVL1063:
8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 10104              		.loc 1 8364 30 view .LVU2664
 10105 00fe 54FA80F0 		uxtab	r0, r4, r0
 10106 0102 44B2     		sxtb	r4, r0
 10107              	.LVL1064:
8369:Core/Src/bno055.c ****                 }
 10108              		.loc 1 8369 21 is_stmt 1 view .LVU2665
8369:Core/Src/bno055.c ****                 }
 10109              		.loc 1 8369 29 is_stmt 0 view .LVU2666
 10110 0104 054B     		ldr	r3, .L773
 10111 0106 1B68     		ldr	r3, [r3]
 10112 0108 5B69     		ldr	r3, [r3, #20]
8369:Core/Src/bno055.c ****                 }
 10113              		.loc 1 8369 21 view .LVU2667
 10114 010a 1420     		movs	r0, #20
 10115 010c 9847     		blx	r3
 10116              	.LVL1065:
 10117 010e C0E7     		b	.L768
 10118              	.LVL1066:
 10119              	.L769:
8320:Core/Src/bno055.c ****     }
 10120              		.loc 1 8320 16 view .LVU2668
 10121 0110 6FF07E04 		mvn	r4, #126
 10122 0114 AFE7     		b	.L766
 10123              	.LVL1067:
 10124              	.L770:
8397:Core/Src/bno055.c ****         }
 10125              		.loc 1 8397 22 view .LVU2669
 10126 0116 4FF0FF34 		mov	r4, #-1
 10127 011a ACE7     		b	.L766
 10128              	.L774:
 10129              		.align	2
 10130              	.L773:
 10131 011c 00000000 		.word	.LANCHOR0
 10132              		.cfi_endproc
 10133              	.LFE146:
 10135              		.section	.text.bno055_set_accel_unit,"ax",%progbits
 10136              		.align	1
 10137              		.global	bno055_set_accel_unit
 10138              		.syntax unified
 10139              		.thumb
 10140              		.thumb_func
 10142              	bno055_set_accel_unit:
 10143              	.LVL1068:
 10144              	.LFB134:
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 10145              		.loc 1 7463 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9kYR4Z.s 			page 335


 10146              		.cfi_startproc
 10147              		@ args = 0, pretend = 0, frame = 8
 10148              		@ frame_needed = 0, uses_anonymous_args = 0
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 10149              		.loc 1 7463 1 is_stmt 0 view .LVU2671
 10150 0000 30B5     		push	{r4, r5, lr}
 10151              	.LCFI349:
 10152              		.cfi_def_cfa_offset 12
 10153              		.cfi_offset 4, -12
 10154              		.cfi_offset 5, -8
 10155              		.cfi_offset 14, -4
 10156 0002 83B0     		sub	sp, sp, #12
 10157              	.LCFI350:
 10158              		.cfi_def_cfa_offset 24
7464:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 10159              		.loc 1 7464 5 is_stmt 1 view .LVU2672
 10160              	.LVL1069:
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10161              		.loc 1 7465 5 view .LVU2673
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10162              		.loc 1 7465 8 is_stmt 0 view .LVU2674
 10163 0004 0023     		movs	r3, #0
 10164 0006 8DF80730 		strb	r3, [sp, #7]
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10165              		.loc 1 7466 5 is_stmt 1 view .LVU2675
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10166              		.loc 1 7466 8 is_stmt 0 view .LVU2676
 10167 000a 8DF80630 		strb	r3, [sp, #6]
7467:Core/Src/bno055.c **** 
 10168              		.loc 1 7467 5 is_stmt 1 view .LVU2677
 10169              	.LVL1070:
7470:Core/Src/bno055.c ****     {
 10170              		.loc 1 7470 5 view .LVU2678
7470:Core/Src/bno055.c ****     {
 10171              		.loc 1 7470 18 is_stmt 0 view .LVU2679
 10172 000e 254B     		ldr	r3, .L785
 10173 0010 1B68     		ldr	r3, [r3]
7470:Core/Src/bno055.c ****     {
 10174              		.loc 1 7470 8 view .LVU2680
 10175 0012 002B     		cmp	r3, #0
 10176 0014 43D0     		beq	.L779
 10177 0016 0546     		mov	r5, r0
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10178              		.loc 1 7479 9 is_stmt 1 view .LVU2681
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10179              		.loc 1 7479 19 is_stmt 0 view .LVU2682
 10180 0018 0DF10600 		add	r0, sp, #6
 10181              	.LVL1071:
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10182              		.loc 1 7479 19 view .LVU2683
 10183 001c FFF7FEFF 		bl	bno055_get_operation_mode
 10184              	.LVL1072:
7480:Core/Src/bno055.c ****         {
 10185              		.loc 1 7480 9 is_stmt 1 view .LVU2684
7480:Core/Src/bno055.c ****         {
 10186              		.loc 1 7480 12 is_stmt 0 view .LVU2685
 10187 0020 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 336


 10188 0022 58BB     		cbnz	r0, .L780
7482:Core/Src/bno055.c ****             {
 10189              		.loc 1 7482 13 is_stmt 1 view .LVU2686
7482:Core/Src/bno055.c ****             {
 10190              		.loc 1 7482 32 is_stmt 0 view .LVU2687
 10191 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7482:Core/Src/bno055.c ****             {
 10192              		.loc 1 7482 16 view .LVU2688
 10193 0028 13BB     		cbnz	r3, .L783
 10194              	.LVL1073:
 10195              	.L778:
7486:Core/Src/bno055.c ****             {
 10196              		.loc 1 7486 13 is_stmt 1 view .LVU2689
7486:Core/Src/bno055.c ****             {
 10197              		.loc 1 7486 16 is_stmt 0 view .LVU2690
 10198 002a 7CBB     		cbnz	r4, .L781
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10199              		.loc 1 7489 17 is_stmt 1 view .LVU2691
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10200              		.loc 1 7489 36 is_stmt 0 view .LVU2692
 10201 002c 1D4B     		ldr	r3, .L785
 10202 002e 1868     		ldr	r0, [r3]
 10203 0030 0469     		ldr	r4, [r0, #16]
 10204              	.LVL1074:
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10205              		.loc 1 7489 28 view .LVU2693
 10206 0032 0123     		movs	r3, #1
 10207 0034 0DF10702 		add	r2, sp, #7
 10208 0038 3B21     		movs	r1, #59
 10209 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10210 003c A047     		blx	r4
 10211              	.LVL1075:
7493:Core/Src/bno055.c ****                 {
 10212              		.loc 1 7493 17 is_stmt 1 view .LVU2694
7493:Core/Src/bno055.c ****                 {
 10213              		.loc 1 7493 20 is_stmt 0 view .LVU2695
 10214 003e 0446     		mov	r4, r0
 10215 0040 F0B9     		cbnz	r0, .L777
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10216              		.loc 1 7495 21 is_stmt 1 view .LVU2696
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10217              		.loc 1 7495 32 is_stmt 0 view .LVU2697
 10218 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 10219 0046 23F00103 		bic	r3, r3, #1
 10220 004a 5BB2     		sxtb	r3, r3
 10221 004c 05F00100 		and	r0, r5, #1
 10222              	.LVL1076:
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10223              		.loc 1 7495 32 view .LVU2698
 10224 0050 0343     		orrs	r3, r3, r0
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10225              		.loc 1 7495 30 view .LVU2699
 10226 0052 8DF80730 		strb	r3, [sp, #7]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10227              		.loc 1 7496 21 is_stmt 1 view .LVU2700
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10228              		.loc 1 7496 41 is_stmt 0 view .LVU2701
ARM GAS  /tmp/cc9kYR4Z.s 			page 337


 10229 0056 134B     		ldr	r3, .L785
 10230 0058 1868     		ldr	r0, [r3]
 10231 005a C568     		ldr	r5, [r0, #12]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10232              		.loc 1 7496 33 view .LVU2702
 10233 005c 0123     		movs	r3, #1
 10234 005e 0DF10702 		add	r2, sp, #7
 10235 0062 3B21     		movs	r1, #59
 10236 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10237 0066 A847     		blx	r5
 10238              	.LVL1077:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10239              		.loc 1 7496 30 view .LVU2703
 10240 0068 54FA80F0 		uxtab	r0, r4, r0
 10241 006c 44B2     		sxtb	r4, r0
 10242              	.LVL1078:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10243              		.loc 1 7496 30 view .LVU2704
 10244 006e 07E0     		b	.L777
 10245              	.LVL1079:
 10246              	.L783:
7484:Core/Src/bno055.c ****             }
 10247              		.loc 1 7484 17 is_stmt 1 view .LVU2705
7484:Core/Src/bno055.c ****             }
 10248              		.loc 1 7484 28 is_stmt 0 view .LVU2706
 10249 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 10250              	.LVL1080:
7484:Core/Src/bno055.c ****             }
 10251              		.loc 1 7484 25 view .LVU2707
 10252 0074 54FA80F4 		uxtab	r4, r4, r0
 10253 0078 64B2     		sxtb	r4, r4
 10254              	.LVL1081:
7484:Core/Src/bno055.c ****             }
 10255              		.loc 1 7484 25 view .LVU2708
 10256 007a D6E7     		b	.L778
 10257              	.LVL1082:
 10258              	.L780:
7509:Core/Src/bno055.c ****         }
 10259              		.loc 1 7509 22 view .LVU2709
 10260 007c 4FF0FF34 		mov	r4, #-1
 10261              	.LVL1083:
 10262              	.L777:
7512:Core/Src/bno055.c ****     {
 10263              		.loc 1 7512 5 is_stmt 1 view .LVU2710
7512:Core/Src/bno055.c ****     {
 10264              		.loc 1 7512 24 is_stmt 0 view .LVU2711
 10265 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7512:Core/Src/bno055.c ****     {
 10266              		.loc 1 7512 8 view .LVU2712
 10267 0084 28B9     		cbnz	r0, .L784
 10268              	.LVL1084:
 10269              	.L776:
7520:Core/Src/bno055.c **** 
 10270              		.loc 1 7520 1 view .LVU2713
 10271 0086 2046     		mov	r0, r4
 10272 0088 03B0     		add	sp, sp, #12
 10273              	.LCFI351:
ARM GAS  /tmp/cc9kYR4Z.s 			page 338


 10274              		.cfi_remember_state
 10275              		.cfi_def_cfa_offset 12
 10276              		@ sp needed
 10277 008a 30BD     		pop	{r4, r5, pc}
 10278              	.LVL1085:
 10279              	.L781:
 10280              	.LCFI352:
 10281              		.cfi_restore_state
7504:Core/Src/bno055.c ****             }
 10282              		.loc 1 7504 26 view .LVU2714
 10283 008c 4FF0FF34 		mov	r4, #-1
 10284              	.LVL1086:
7504:Core/Src/bno055.c ****             }
 10285              		.loc 1 7504 26 view .LVU2715
 10286 0090 F6E7     		b	.L777
 10287              	.LVL1087:
 10288              	.L784:
7516:Core/Src/bno055.c ****     }
 10289              		.loc 1 7516 9 is_stmt 1 view .LVU2716
7516:Core/Src/bno055.c ****     }
 10290              		.loc 1 7516 21 is_stmt 0 view .LVU2717
 10291 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 10292              	.LVL1088:
7516:Core/Src/bno055.c ****     }
 10293              		.loc 1 7516 18 view .LVU2718
 10294 0096 54FA80F0 		uxtab	r0, r4, r0
 10295 009a 44B2     		sxtb	r4, r0
 10296              	.LVL1089:
7516:Core/Src/bno055.c ****     }
 10297              		.loc 1 7516 18 view .LVU2719
 10298 009c F3E7     		b	.L776
 10299              	.LVL1090:
 10300              	.L779:
7472:Core/Src/bno055.c ****     }
 10301              		.loc 1 7472 16 view .LVU2720
 10302 009e 6FF07E04 		mvn	r4, #126
 10303 00a2 F0E7     		b	.L776
 10304              	.L786:
 10305              		.align	2
 10306              	.L785:
 10307 00a4 00000000 		.word	.LANCHOR0
 10308              		.cfi_endproc
 10309              	.LFE134:
 10311              		.section	.text.bno055_convert_float_accel_x_msq,"ax",%progbits
 10312              		.align	1
 10313              		.global	bno055_convert_float_accel_x_msq
 10314              		.syntax unified
 10315              		.thumb
 10316              		.thumb_func
 10318              	bno055_convert_float_accel_x_msq:
 10319              	.LVL1091:
 10320              	.LFB41:
2865:Core/Src/bno055.c ****     /* Variable used to return value of
 10321              		.loc 1 2865 1 is_stmt 1 view -0
 10322              		.cfi_startproc
 10323              		@ args = 0, pretend = 0, frame = 8
 10324              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc9kYR4Z.s 			page 339


2865:Core/Src/bno055.c ****     /* Variable used to return value of
 10325              		.loc 1 2865 1 is_stmt 0 view .LVU2722
 10326 0000 30B5     		push	{r4, r5, lr}
 10327              	.LCFI353:
 10328              		.cfi_def_cfa_offset 12
 10329              		.cfi_offset 4, -12
 10330              		.cfi_offset 5, -8
 10331              		.cfi_offset 14, -4
 10332 0002 83B0     		sub	sp, sp, #12
 10333              	.LCFI354:
 10334              		.cfi_def_cfa_offset 24
 10335 0004 0546     		mov	r5, r0
2868:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10336              		.loc 1 2868 5 is_stmt 1 view .LVU2723
 10337              	.LVL1092:
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10338              		.loc 1 2869 5 view .LVU2724
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10339              		.loc 1 2869 9 is_stmt 0 view .LVU2725
 10340 0006 0023     		movs	r3, #0
 10341 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2870:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10342              		.loc 1 2870 5 is_stmt 1 view .LVU2726
 10343              	.LVL1093:
2871:Core/Src/bno055.c **** 
 10344              		.loc 1 2871 5 view .LVU2727
2871:Core/Src/bno055.c **** 
 10345              		.loc 1 2871 8 is_stmt 0 view .LVU2728
 10346 000c 8DF80530 		strb	r3, [sp, #5]
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10347              		.loc 1 2875 5 is_stmt 1 view .LVU2729
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10348              		.loc 1 2875 16 is_stmt 0 view .LVU2730
 10349 0010 0DF10500 		add	r0, sp, #5
 10350              	.LVL1094:
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10351              		.loc 1 2875 16 view .LVU2731
 10352 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10353              	.LVL1095:
 10354 0018 0446     		mov	r4, r0
 10355              	.LVL1096:
2876:Core/Src/bno055.c ****     {
 10356              		.loc 1 2876 5 is_stmt 1 view .LVU2732
2876:Core/Src/bno055.c ****     {
 10357              		.loc 1 2876 23 is_stmt 0 view .LVU2733
 10358 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2876:Core/Src/bno055.c ****     {
 10359              		.loc 1 2876 8 view .LVU2734
 10360 001e DBB9     		cbnz	r3, .L793
 10361              	.L788:
2880:Core/Src/bno055.c ****     {
 10362              		.loc 1 2880 5 is_stmt 1 view .LVU2735
2880:Core/Src/bno055.c ****     {
 10363              		.loc 1 2880 8 is_stmt 0 view .LVU2736
 10364 0020 0CBB     		cbnz	r4, .L790
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10365              		.loc 1 2883 9 is_stmt 1 view .LVU2737
ARM GAS  /tmp/cc9kYR4Z.s 			page 340


2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10366              		.loc 1 2883 21 is_stmt 0 view .LVU2738
 10367 0022 0DF10600 		add	r0, sp, #6
 10368 0026 FFF7FEFF 		bl	bno055_read_accel_x
 10369              	.LVL1097:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10370              		.loc 1 2883 18 view .LVU2739
 10371 002a 54FA80F4 		uxtab	r4, r4, r0
 10372              	.LVL1098:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10373              		.loc 1 2883 18 view .LVU2740
 10374 002e 64B2     		sxtb	r4, r4
 10375              	.LVL1099:
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10376              		.loc 1 2884 9 is_stmt 1 view .LVU2741
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10377              		.loc 1 2884 17 is_stmt 0 view .LVU2742
 10378 0030 104B     		ldr	r3, .L794
 10379 0032 1B68     		ldr	r3, [r3]
 10380 0034 5B69     		ldr	r3, [r3, #20]
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10381              		.loc 1 2884 9 view .LVU2743
 10382 0036 0120     		movs	r0, #1
 10383 0038 9847     		blx	r3
 10384              	.LVL1100:
2885:Core/Src/bno055.c ****         {
 10385              		.loc 1 2885 9 is_stmt 1 view .LVU2744
2885:Core/Src/bno055.c ****         {
 10386              		.loc 1 2885 12 is_stmt 0 view .LVU2745
 10387 003a BCB9     		cbnz	r4, .L791
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10388              		.loc 1 2888 13 is_stmt 1 view .LVU2746
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10389              		.loc 1 2888 46 is_stmt 0 view .LVU2747
 10390 003c BDF90600 		ldrsh	r0, [sp, #6]
 10391 0040 FFF7FEFF 		bl	__aeabi_i2d
 10392              	.LVL1101:
 10393 0044 0022     		movs	r2, #0
 10394 0046 0C4B     		ldr	r3, .L794+4
 10395 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10396              	.LVL1102:
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10397              		.loc 1 2888 20 view .LVU2748
 10398 004c FFF7FEFF 		bl	__aeabi_d2f
 10399              	.LVL1103:
2889:Core/Src/bno055.c ****         }
 10400              		.loc 1 2889 13 is_stmt 1 view .LVU2749
2889:Core/Src/bno055.c ****         }
 10401              		.loc 1 2889 24 is_stmt 0 view .LVU2750
 10402 0050 2860     		str	r0, [r5]	@ float
 10403              	.LVL1104:
 10404              	.L789:
2901:Core/Src/bno055.c **** }
 10405              		.loc 1 2901 5 is_stmt 1 view .LVU2751
2902:Core/Src/bno055.c **** 
 10406              		.loc 1 2902 1 is_stmt 0 view .LVU2752
 10407 0052 2046     		mov	r0, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 341


 10408 0054 03B0     		add	sp, sp, #12
 10409              	.LCFI355:
 10410              		.cfi_remember_state
 10411              		.cfi_def_cfa_offset 12
 10412              		@ sp needed
 10413 0056 30BD     		pop	{r4, r5, pc}
 10414              	.LVL1105:
 10415              	.L793:
 10416              	.LCFI356:
 10417              		.cfi_restore_state
2878:Core/Src/bno055.c ****     }
 10418              		.loc 1 2878 9 is_stmt 1 view .LVU2753
2878:Core/Src/bno055.c ****     }
 10419              		.loc 1 2878 21 is_stmt 0 view .LVU2754
 10420 0058 0020     		movs	r0, #0
 10421 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10422              	.LVL1106:
2878:Core/Src/bno055.c ****     }
 10423              		.loc 1 2878 18 view .LVU2755
 10424 005e 54FA80F4 		uxtab	r4, r4, r0
 10425              	.LVL1107:
2878:Core/Src/bno055.c ****     }
 10426              		.loc 1 2878 18 view .LVU2756
 10427 0062 64B2     		sxtb	r4, r4
 10428              	.LVL1108:
2878:Core/Src/bno055.c ****     }
 10429              		.loc 1 2878 18 view .LVU2757
 10430 0064 DCE7     		b	.L788
 10431              	.L790:
2898:Core/Src/bno055.c ****     }
 10432              		.loc 1 2898 18 view .LVU2758
 10433 0066 4FF0FF34 		mov	r4, #-1
 10434              	.LVL1109:
2898:Core/Src/bno055.c ****     }
 10435              		.loc 1 2898 18 view .LVU2759
 10436 006a F2E7     		b	.L789
 10437              	.LVL1110:
 10438              	.L791:
2893:Core/Src/bno055.c ****         }
 10439              		.loc 1 2893 22 view .LVU2760
 10440 006c 4FF0FF34 		mov	r4, #-1
 10441              	.LVL1111:
2893:Core/Src/bno055.c ****         }
 10442              		.loc 1 2893 22 view .LVU2761
 10443 0070 EFE7     		b	.L789
 10444              	.L795:
 10445 0072 00BF     		.align	2
 10446              	.L794:
 10447 0074 00000000 		.word	.LANCHOR0
 10448 0078 00005940 		.word	1079574528
 10449              		.cfi_endproc
 10450              	.LFE41:
 10452              		.section	.text.bno055_convert_float_accel_x_mg,"ax",%progbits
 10453              		.align	1
 10454              		.global	bno055_convert_float_accel_x_mg
 10455              		.syntax unified
 10456              		.thumb
ARM GAS  /tmp/cc9kYR4Z.s 			page 342


 10457              		.thumb_func
 10459              	bno055_convert_float_accel_x_mg:
 10460              	.LVL1112:
 10461              	.LFB42:
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10462              		.loc 1 2920 1 is_stmt 1 view -0
 10463              		.cfi_startproc
 10464              		@ args = 0, pretend = 0, frame = 8
 10465              		@ frame_needed = 0, uses_anonymous_args = 0
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10466              		.loc 1 2920 1 is_stmt 0 view .LVU2763
 10467 0000 30B5     		push	{r4, r5, lr}
 10468              	.LCFI357:
 10469              		.cfi_def_cfa_offset 12
 10470              		.cfi_offset 4, -12
 10471              		.cfi_offset 5, -8
 10472              		.cfi_offset 14, -4
 10473 0002 83B0     		sub	sp, sp, #12
 10474              	.LCFI358:
 10475              		.cfi_def_cfa_offset 24
 10476 0004 0546     		mov	r5, r0
2923:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10477              		.loc 1 2923 5 is_stmt 1 view .LVU2764
 10478              	.LVL1113:
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10479              		.loc 1 2924 5 view .LVU2765
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10480              		.loc 1 2924 9 is_stmt 0 view .LVU2766
 10481 0006 0023     		movs	r3, #0
 10482 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2925:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10483              		.loc 1 2925 5 is_stmt 1 view .LVU2767
 10484              	.LVL1114:
2926:Core/Src/bno055.c **** 
 10485              		.loc 1 2926 5 view .LVU2768
2926:Core/Src/bno055.c **** 
 10486              		.loc 1 2926 8 is_stmt 0 view .LVU2769
 10487 000c 8DF80530 		strb	r3, [sp, #5]
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10488              		.loc 1 2930 5 is_stmt 1 view .LVU2770
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10489              		.loc 1 2930 16 is_stmt 0 view .LVU2771
 10490 0010 0DF10500 		add	r0, sp, #5
 10491              	.LVL1115:
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10492              		.loc 1 2930 16 view .LVU2772
 10493 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10494              	.LVL1116:
 10495 0018 0446     		mov	r4, r0
 10496              	.LVL1117:
2931:Core/Src/bno055.c ****     {
 10497              		.loc 1 2931 5 is_stmt 1 view .LVU2773
2931:Core/Src/bno055.c ****     {
 10498              		.loc 1 2931 23 is_stmt 0 view .LVU2774
 10499 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2931:Core/Src/bno055.c ****     {
 10500              		.loc 1 2931 8 view .LVU2775
ARM GAS  /tmp/cc9kYR4Z.s 			page 343


 10501 001e 012B     		cmp	r3, #1
 10502 0020 12D1     		bne	.L802
 10503              	.L797:
2935:Core/Src/bno055.c ****     {
 10504              		.loc 1 2935 5 is_stmt 1 view .LVU2776
2935:Core/Src/bno055.c ****     {
 10505              		.loc 1 2935 8 is_stmt 0 view .LVU2777
 10506 0022 C4B9     		cbnz	r4, .L799
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10507              		.loc 1 2938 9 is_stmt 1 view .LVU2778
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10508              		.loc 1 2938 21 is_stmt 0 view .LVU2779
 10509 0024 0DF10600 		add	r0, sp, #6
 10510 0028 FFF7FEFF 		bl	bno055_read_accel_x
 10511              	.LVL1118:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10512              		.loc 1 2938 18 view .LVU2780
 10513 002c 54FA80F4 		uxtab	r4, r4, r0
 10514              	.LVL1119:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10515              		.loc 1 2938 18 view .LVU2781
 10516 0030 64B2     		sxtb	r4, r4
 10517              	.LVL1120:
2939:Core/Src/bno055.c ****         {
 10518              		.loc 1 2939 9 is_stmt 1 view .LVU2782
2939:Core/Src/bno055.c ****         {
 10519              		.loc 1 2939 12 is_stmt 0 view .LVU2783
 10520 0032 9CB9     		cbnz	r4, .L800
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10521              		.loc 1 2942 13 is_stmt 1 view .LVU2784
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10522              		.loc 1 2942 46 is_stmt 0 view .LVU2785
 10523 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10524 0038 FFF7FEFF 		bl	__aeabi_i2d
 10525              	.LVL1121:
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10526              		.loc 1 2942 20 view .LVU2786
 10527 003c FFF7FEFF 		bl	__aeabi_d2f
 10528              	.LVL1122:
2943:Core/Src/bno055.c ****         }
 10529              		.loc 1 2943 13 is_stmt 1 view .LVU2787
2943:Core/Src/bno055.c ****         }
 10530              		.loc 1 2943 24 is_stmt 0 view .LVU2788
 10531 0040 2860     		str	r0, [r5]	@ float
 10532              	.LVL1123:
 10533              	.L798:
2955:Core/Src/bno055.c **** }
 10534              		.loc 1 2955 5 is_stmt 1 view .LVU2789
2956:Core/Src/bno055.c **** 
 10535              		.loc 1 2956 1 is_stmt 0 view .LVU2790
 10536 0042 2046     		mov	r0, r4
 10537 0044 03B0     		add	sp, sp, #12
 10538              	.LCFI359:
 10539              		.cfi_remember_state
 10540              		.cfi_def_cfa_offset 12
 10541              		@ sp needed
 10542 0046 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/cc9kYR4Z.s 			page 344


 10543              	.LVL1124:
 10544              	.L802:
 10545              	.LCFI360:
 10546              		.cfi_restore_state
2933:Core/Src/bno055.c ****     }
 10547              		.loc 1 2933 9 is_stmt 1 view .LVU2791
2933:Core/Src/bno055.c ****     }
 10548              		.loc 1 2933 21 is_stmt 0 view .LVU2792
 10549 0048 0120     		movs	r0, #1
 10550 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10551              	.LVL1125:
2933:Core/Src/bno055.c ****     }
 10552              		.loc 1 2933 18 view .LVU2793
 10553 004e 54FA80F4 		uxtab	r4, r4, r0
 10554              	.LVL1126:
2933:Core/Src/bno055.c ****     }
 10555              		.loc 1 2933 18 view .LVU2794
 10556 0052 64B2     		sxtb	r4, r4
 10557              	.LVL1127:
2933:Core/Src/bno055.c ****     }
 10558              		.loc 1 2933 18 view .LVU2795
 10559 0054 E5E7     		b	.L797
 10560              	.L799:
2952:Core/Src/bno055.c ****     }
 10561              		.loc 1 2952 18 view .LVU2796
 10562 0056 4FF0FF34 		mov	r4, #-1
 10563              	.LVL1128:
2952:Core/Src/bno055.c ****     }
 10564              		.loc 1 2952 18 view .LVU2797
 10565 005a F2E7     		b	.L798
 10566              	.LVL1129:
 10567              	.L800:
2947:Core/Src/bno055.c ****         }
 10568              		.loc 1 2947 22 view .LVU2798
 10569 005c 4FF0FF34 		mov	r4, #-1
 10570              	.LVL1130:
2947:Core/Src/bno055.c ****         }
 10571              		.loc 1 2947 22 view .LVU2799
 10572 0060 EFE7     		b	.L798
 10573              		.cfi_endproc
 10574              	.LFE42:
 10576              		.section	.text.bno055_convert_float_accel_y_msq,"ax",%progbits
 10577              		.align	1
 10578              		.global	bno055_convert_float_accel_y_msq
 10579              		.syntax unified
 10580              		.thumb
 10581              		.thumb_func
 10583              	bno055_convert_float_accel_y_msq:
 10584              	.LVL1131:
 10585              	.LFB43:
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10586              		.loc 1 2973 1 is_stmt 1 view -0
 10587              		.cfi_startproc
 10588              		@ args = 0, pretend = 0, frame = 8
 10589              		@ frame_needed = 0, uses_anonymous_args = 0
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10590              		.loc 1 2973 1 is_stmt 0 view .LVU2801
ARM GAS  /tmp/cc9kYR4Z.s 			page 345


 10591 0000 30B5     		push	{r4, r5, lr}
 10592              	.LCFI361:
 10593              		.cfi_def_cfa_offset 12
 10594              		.cfi_offset 4, -12
 10595              		.cfi_offset 5, -8
 10596              		.cfi_offset 14, -4
 10597 0002 83B0     		sub	sp, sp, #12
 10598              	.LCFI362:
 10599              		.cfi_def_cfa_offset 24
 10600 0004 0546     		mov	r5, r0
2976:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10601              		.loc 1 2976 5 is_stmt 1 view .LVU2802
 10602              	.LVL1132:
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10603              		.loc 1 2977 5 view .LVU2803
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10604              		.loc 1 2977 9 is_stmt 0 view .LVU2804
 10605 0006 0023     		movs	r3, #0
 10606 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2978:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10607              		.loc 1 2978 5 is_stmt 1 view .LVU2805
 10608              	.LVL1133:
2979:Core/Src/bno055.c **** 
 10609              		.loc 1 2979 5 view .LVU2806
2979:Core/Src/bno055.c **** 
 10610              		.loc 1 2979 8 is_stmt 0 view .LVU2807
 10611 000c 8DF80530 		strb	r3, [sp, #5]
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10612              		.loc 1 2983 5 is_stmt 1 view .LVU2808
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10613              		.loc 1 2983 16 is_stmt 0 view .LVU2809
 10614 0010 0DF10500 		add	r0, sp, #5
 10615              	.LVL1134:
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10616              		.loc 1 2983 16 view .LVU2810
 10617 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10618              	.LVL1135:
 10619 0018 0446     		mov	r4, r0
 10620              	.LVL1136:
2984:Core/Src/bno055.c ****     {
 10621              		.loc 1 2984 5 is_stmt 1 view .LVU2811
2984:Core/Src/bno055.c ****     {
 10622              		.loc 1 2984 23 is_stmt 0 view .LVU2812
 10623 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2984:Core/Src/bno055.c ****     {
 10624              		.loc 1 2984 8 view .LVU2813
 10625 001e DBB9     		cbnz	r3, .L809
 10626              	.L804:
2988:Core/Src/bno055.c ****     {
 10627              		.loc 1 2988 5 is_stmt 1 view .LVU2814
2988:Core/Src/bno055.c ****     {
 10628              		.loc 1 2988 8 is_stmt 0 view .LVU2815
 10629 0020 0CBB     		cbnz	r4, .L806
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10630              		.loc 1 2990 9 is_stmt 1 view .LVU2816
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10631              		.loc 1 2990 21 is_stmt 0 view .LVU2817
ARM GAS  /tmp/cc9kYR4Z.s 			page 346


 10632 0022 0DF10600 		add	r0, sp, #6
 10633 0026 FFF7FEFF 		bl	bno055_read_accel_y
 10634              	.LVL1137:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10635              		.loc 1 2990 18 view .LVU2818
 10636 002a 54FA80F4 		uxtab	r4, r4, r0
 10637              	.LVL1138:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10638              		.loc 1 2990 18 view .LVU2819
 10639 002e 64B2     		sxtb	r4, r4
 10640              	.LVL1139:
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10641              		.loc 1 2991 9 is_stmt 1 view .LVU2820
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10642              		.loc 1 2991 17 is_stmt 0 view .LVU2821
 10643 0030 104B     		ldr	r3, .L810
 10644 0032 1B68     		ldr	r3, [r3]
 10645 0034 5B69     		ldr	r3, [r3, #20]
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10646              		.loc 1 2991 9 view .LVU2822
 10647 0036 0120     		movs	r0, #1
 10648 0038 9847     		blx	r3
 10649              	.LVL1140:
2992:Core/Src/bno055.c ****         {
 10650              		.loc 1 2992 9 is_stmt 1 view .LVU2823
2992:Core/Src/bno055.c ****         {
 10651              		.loc 1 2992 12 is_stmt 0 view .LVU2824
 10652 003a BCB9     		cbnz	r4, .L807
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10653              		.loc 1 2995 13 is_stmt 1 view .LVU2825
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10654              		.loc 1 2995 46 is_stmt 0 view .LVU2826
 10655 003c BDF90600 		ldrsh	r0, [sp, #6]
 10656 0040 FFF7FEFF 		bl	__aeabi_i2d
 10657              	.LVL1141:
 10658 0044 0022     		movs	r2, #0
 10659 0046 0C4B     		ldr	r3, .L810+4
 10660 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10661              	.LVL1142:
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10662              		.loc 1 2995 20 view .LVU2827
 10663 004c FFF7FEFF 		bl	__aeabi_d2f
 10664              	.LVL1143:
2996:Core/Src/bno055.c ****         }
 10665              		.loc 1 2996 13 is_stmt 1 view .LVU2828
2996:Core/Src/bno055.c ****         }
 10666              		.loc 1 2996 24 is_stmt 0 view .LVU2829
 10667 0050 2860     		str	r0, [r5]	@ float
 10668              	.LVL1144:
 10669              	.L805:
3008:Core/Src/bno055.c **** }
 10670              		.loc 1 3008 5 is_stmt 1 view .LVU2830
3009:Core/Src/bno055.c **** 
 10671              		.loc 1 3009 1 is_stmt 0 view .LVU2831
 10672 0052 2046     		mov	r0, r4
 10673 0054 03B0     		add	sp, sp, #12
 10674              	.LCFI363:
ARM GAS  /tmp/cc9kYR4Z.s 			page 347


 10675              		.cfi_remember_state
 10676              		.cfi_def_cfa_offset 12
 10677              		@ sp needed
 10678 0056 30BD     		pop	{r4, r5, pc}
 10679              	.LVL1145:
 10680              	.L809:
 10681              	.LCFI364:
 10682              		.cfi_restore_state
2986:Core/Src/bno055.c ****     }
 10683              		.loc 1 2986 9 is_stmt 1 view .LVU2832
2986:Core/Src/bno055.c ****     }
 10684              		.loc 1 2986 21 is_stmt 0 view .LVU2833
 10685 0058 0020     		movs	r0, #0
 10686 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10687              	.LVL1146:
2986:Core/Src/bno055.c ****     }
 10688              		.loc 1 2986 18 view .LVU2834
 10689 005e 54FA80F4 		uxtab	r4, r4, r0
 10690              	.LVL1147:
2986:Core/Src/bno055.c ****     }
 10691              		.loc 1 2986 18 view .LVU2835
 10692 0062 64B2     		sxtb	r4, r4
 10693              	.LVL1148:
2986:Core/Src/bno055.c ****     }
 10694              		.loc 1 2986 18 view .LVU2836
 10695 0064 DCE7     		b	.L804
 10696              	.L806:
3005:Core/Src/bno055.c ****     }
 10697              		.loc 1 3005 18 view .LVU2837
 10698 0066 4FF0FF34 		mov	r4, #-1
 10699              	.LVL1149:
3005:Core/Src/bno055.c ****     }
 10700              		.loc 1 3005 18 view .LVU2838
 10701 006a F2E7     		b	.L805
 10702              	.LVL1150:
 10703              	.L807:
3000:Core/Src/bno055.c ****         }
 10704              		.loc 1 3000 22 view .LVU2839
 10705 006c 4FF0FF34 		mov	r4, #-1
 10706              	.LVL1151:
3000:Core/Src/bno055.c ****         }
 10707              		.loc 1 3000 22 view .LVU2840
 10708 0070 EFE7     		b	.L805
 10709              	.L811:
 10710 0072 00BF     		.align	2
 10711              	.L810:
 10712 0074 00000000 		.word	.LANCHOR0
 10713 0078 00005940 		.word	1079574528
 10714              		.cfi_endproc
 10715              	.LFE43:
 10717              		.section	.text.bno055_convert_float_accel_y_mg,"ax",%progbits
 10718              		.align	1
 10719              		.global	bno055_convert_float_accel_y_mg
 10720              		.syntax unified
 10721              		.thumb
 10722              		.thumb_func
 10724              	bno055_convert_float_accel_y_mg:
ARM GAS  /tmp/cc9kYR4Z.s 			page 348


 10725              	.LVL1152:
 10726              	.LFB44:
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10727              		.loc 1 3025 1 is_stmt 1 view -0
 10728              		.cfi_startproc
 10729              		@ args = 0, pretend = 0, frame = 8
 10730              		@ frame_needed = 0, uses_anonymous_args = 0
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10731              		.loc 1 3025 1 is_stmt 0 view .LVU2842
 10732 0000 30B5     		push	{r4, r5, lr}
 10733              	.LCFI365:
 10734              		.cfi_def_cfa_offset 12
 10735              		.cfi_offset 4, -12
 10736              		.cfi_offset 5, -8
 10737              		.cfi_offset 14, -4
 10738 0002 83B0     		sub	sp, sp, #12
 10739              	.LCFI366:
 10740              		.cfi_def_cfa_offset 24
 10741 0004 0546     		mov	r5, r0
3028:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10742              		.loc 1 3028 5 is_stmt 1 view .LVU2843
 10743              	.LVL1153:
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10744              		.loc 1 3029 5 view .LVU2844
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10745              		.loc 1 3029 9 is_stmt 0 view .LVU2845
 10746 0006 0023     		movs	r3, #0
 10747 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3030:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10748              		.loc 1 3030 5 is_stmt 1 view .LVU2846
 10749              	.LVL1154:
3031:Core/Src/bno055.c **** 
 10750              		.loc 1 3031 5 view .LVU2847
3031:Core/Src/bno055.c **** 
 10751              		.loc 1 3031 8 is_stmt 0 view .LVU2848
 10752 000c 8DF80530 		strb	r3, [sp, #5]
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10753              		.loc 1 3035 5 is_stmt 1 view .LVU2849
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10754              		.loc 1 3035 16 is_stmt 0 view .LVU2850
 10755 0010 0DF10500 		add	r0, sp, #5
 10756              	.LVL1155:
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10757              		.loc 1 3035 16 view .LVU2851
 10758 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10759              	.LVL1156:
 10760 0018 0446     		mov	r4, r0
 10761              	.LVL1157:
3036:Core/Src/bno055.c ****     {
 10762              		.loc 1 3036 5 is_stmt 1 view .LVU2852
3036:Core/Src/bno055.c ****     {
 10763              		.loc 1 3036 23 is_stmt 0 view .LVU2853
 10764 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3036:Core/Src/bno055.c ****     {
 10765              		.loc 1 3036 8 view .LVU2854
 10766 001e 012B     		cmp	r3, #1
 10767 0020 12D1     		bne	.L818
ARM GAS  /tmp/cc9kYR4Z.s 			page 349


 10768              	.L813:
3040:Core/Src/bno055.c ****     {
 10769              		.loc 1 3040 5 is_stmt 1 view .LVU2855
3040:Core/Src/bno055.c ****     {
 10770              		.loc 1 3040 8 is_stmt 0 view .LVU2856
 10771 0022 C4B9     		cbnz	r4, .L815
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10772              		.loc 1 3043 9 is_stmt 1 view .LVU2857
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10773              		.loc 1 3043 21 is_stmt 0 view .LVU2858
 10774 0024 0DF10600 		add	r0, sp, #6
 10775 0028 FFF7FEFF 		bl	bno055_read_accel_y
 10776              	.LVL1158:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10777              		.loc 1 3043 18 view .LVU2859
 10778 002c 54FA80F4 		uxtab	r4, r4, r0
 10779              	.LVL1159:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10780              		.loc 1 3043 18 view .LVU2860
 10781 0030 64B2     		sxtb	r4, r4
 10782              	.LVL1160:
3044:Core/Src/bno055.c ****         {
 10783              		.loc 1 3044 9 is_stmt 1 view .LVU2861
3044:Core/Src/bno055.c ****         {
 10784              		.loc 1 3044 12 is_stmt 0 view .LVU2862
 10785 0032 9CB9     		cbnz	r4, .L816
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10786              		.loc 1 3047 13 is_stmt 1 view .LVU2863
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10787              		.loc 1 3047 44 is_stmt 0 view .LVU2864
 10788 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10789 0038 FFF7FEFF 		bl	__aeabi_i2d
 10790              	.LVL1161:
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10791              		.loc 1 3047 18 view .LVU2865
 10792 003c FFF7FEFF 		bl	__aeabi_d2f
 10793              	.LVL1162:
3048:Core/Src/bno055.c ****         }
 10794              		.loc 1 3048 13 is_stmt 1 view .LVU2866
3048:Core/Src/bno055.c ****         }
 10795              		.loc 1 3048 24 is_stmt 0 view .LVU2867
 10796 0040 2860     		str	r0, [r5]	@ float
 10797              	.LVL1163:
 10798              	.L814:
3060:Core/Src/bno055.c **** }
 10799              		.loc 1 3060 5 is_stmt 1 view .LVU2868
3061:Core/Src/bno055.c **** 
 10800              		.loc 1 3061 1 is_stmt 0 view .LVU2869
 10801 0042 2046     		mov	r0, r4
 10802 0044 03B0     		add	sp, sp, #12
 10803              	.LCFI367:
 10804              		.cfi_remember_state
 10805              		.cfi_def_cfa_offset 12
 10806              		@ sp needed
 10807 0046 30BD     		pop	{r4, r5, pc}
 10808              	.LVL1164:
 10809              	.L818:
ARM GAS  /tmp/cc9kYR4Z.s 			page 350


 10810              	.LCFI368:
 10811              		.cfi_restore_state
3038:Core/Src/bno055.c ****     }
 10812              		.loc 1 3038 9 is_stmt 1 view .LVU2870
3038:Core/Src/bno055.c ****     }
 10813              		.loc 1 3038 21 is_stmt 0 view .LVU2871
 10814 0048 0120     		movs	r0, #1
 10815 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10816              	.LVL1165:
3038:Core/Src/bno055.c ****     }
 10817              		.loc 1 3038 18 view .LVU2872
 10818 004e 54FA80F4 		uxtab	r4, r4, r0
 10819              	.LVL1166:
3038:Core/Src/bno055.c ****     }
 10820              		.loc 1 3038 18 view .LVU2873
 10821 0052 64B2     		sxtb	r4, r4
 10822              	.LVL1167:
3038:Core/Src/bno055.c ****     }
 10823              		.loc 1 3038 18 view .LVU2874
 10824 0054 E5E7     		b	.L813
 10825              	.L815:
3057:Core/Src/bno055.c ****     }
 10826              		.loc 1 3057 18 view .LVU2875
 10827 0056 4FF0FF34 		mov	r4, #-1
 10828              	.LVL1168:
3057:Core/Src/bno055.c ****     }
 10829              		.loc 1 3057 18 view .LVU2876
 10830 005a F2E7     		b	.L814
 10831              	.LVL1169:
 10832              	.L816:
3052:Core/Src/bno055.c ****         }
 10833              		.loc 1 3052 22 view .LVU2877
 10834 005c 4FF0FF34 		mov	r4, #-1
 10835              	.LVL1170:
3052:Core/Src/bno055.c ****         }
 10836              		.loc 1 3052 22 view .LVU2878
 10837 0060 EFE7     		b	.L814
 10838              		.cfi_endproc
 10839              	.LFE44:
 10841              		.section	.text.bno055_convert_float_accel_z_msq,"ax",%progbits
 10842              		.align	1
 10843              		.global	bno055_convert_float_accel_z_msq
 10844              		.syntax unified
 10845              		.thumb
 10846              		.thumb_func
 10848              	bno055_convert_float_accel_z_msq:
 10849              	.LVL1171:
 10850              	.LFB45:
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10851              		.loc 1 3078 1 is_stmt 1 view -0
 10852              		.cfi_startproc
 10853              		@ args = 0, pretend = 0, frame = 8
 10854              		@ frame_needed = 0, uses_anonymous_args = 0
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10855              		.loc 1 3078 1 is_stmt 0 view .LVU2880
 10856 0000 30B5     		push	{r4, r5, lr}
 10857              	.LCFI369:
ARM GAS  /tmp/cc9kYR4Z.s 			page 351


 10858              		.cfi_def_cfa_offset 12
 10859              		.cfi_offset 4, -12
 10860              		.cfi_offset 5, -8
 10861              		.cfi_offset 14, -4
 10862 0002 83B0     		sub	sp, sp, #12
 10863              	.LCFI370:
 10864              		.cfi_def_cfa_offset 24
 10865 0004 0546     		mov	r5, r0
3081:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 10866              		.loc 1 3081 5 is_stmt 1 view .LVU2881
 10867              	.LVL1172:
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10868              		.loc 1 3082 5 view .LVU2882
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10869              		.loc 1 3082 9 is_stmt 0 view .LVU2883
 10870 0006 0023     		movs	r3, #0
 10871 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3083:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10872              		.loc 1 3083 5 is_stmt 1 view .LVU2884
 10873              	.LVL1173:
3084:Core/Src/bno055.c **** 
 10874              		.loc 1 3084 5 view .LVU2885
3084:Core/Src/bno055.c **** 
 10875              		.loc 1 3084 8 is_stmt 0 view .LVU2886
 10876 000c 8DF80530 		strb	r3, [sp, #5]
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10877              		.loc 1 3088 5 is_stmt 1 view .LVU2887
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10878              		.loc 1 3088 16 is_stmt 0 view .LVU2888
 10879 0010 0DF10500 		add	r0, sp, #5
 10880              	.LVL1174:
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10881              		.loc 1 3088 16 view .LVU2889
 10882 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10883              	.LVL1175:
 10884 0018 0446     		mov	r4, r0
 10885              	.LVL1176:
3089:Core/Src/bno055.c ****     {
 10886              		.loc 1 3089 5 is_stmt 1 view .LVU2890
3089:Core/Src/bno055.c ****     {
 10887              		.loc 1 3089 23 is_stmt 0 view .LVU2891
 10888 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3089:Core/Src/bno055.c ****     {
 10889              		.loc 1 3089 8 view .LVU2892
 10890 001e DBB9     		cbnz	r3, .L825
 10891              	.L820:
3093:Core/Src/bno055.c ****     {
 10892              		.loc 1 3093 5 is_stmt 1 view .LVU2893
3093:Core/Src/bno055.c ****     {
 10893              		.loc 1 3093 8 is_stmt 0 view .LVU2894
 10894 0020 0CBB     		cbnz	r4, .L822
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10895              		.loc 1 3096 9 is_stmt 1 view .LVU2895
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10896              		.loc 1 3096 21 is_stmt 0 view .LVU2896
 10897 0022 0DF10600 		add	r0, sp, #6
 10898 0026 FFF7FEFF 		bl	bno055_read_accel_z
ARM GAS  /tmp/cc9kYR4Z.s 			page 352


 10899              	.LVL1177:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10900              		.loc 1 3096 18 view .LVU2897
 10901 002a 54FA80F4 		uxtab	r4, r4, r0
 10902              	.LVL1178:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10903              		.loc 1 3096 18 view .LVU2898
 10904 002e 64B2     		sxtb	r4, r4
 10905              	.LVL1179:
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10906              		.loc 1 3097 9 is_stmt 1 view .LVU2899
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10907              		.loc 1 3097 17 is_stmt 0 view .LVU2900
 10908 0030 104B     		ldr	r3, .L826
 10909 0032 1B68     		ldr	r3, [r3]
 10910 0034 5B69     		ldr	r3, [r3, #20]
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10911              		.loc 1 3097 9 view .LVU2901
 10912 0036 0120     		movs	r0, #1
 10913 0038 9847     		blx	r3
 10914              	.LVL1180:
3098:Core/Src/bno055.c ****         {
 10915              		.loc 1 3098 9 is_stmt 1 view .LVU2902
3098:Core/Src/bno055.c ****         {
 10916              		.loc 1 3098 12 is_stmt 0 view .LVU2903
 10917 003a BCB9     		cbnz	r4, .L823
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10918              		.loc 1 3101 13 is_stmt 1 view .LVU2904
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10919              		.loc 1 3101 46 is_stmt 0 view .LVU2905
 10920 003c BDF90600 		ldrsh	r0, [sp, #6]
 10921 0040 FFF7FEFF 		bl	__aeabi_i2d
 10922              	.LVL1181:
 10923 0044 0022     		movs	r2, #0
 10924 0046 0C4B     		ldr	r3, .L826+4
 10925 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10926              	.LVL1182:
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10927              		.loc 1 3101 20 view .LVU2906
 10928 004c FFF7FEFF 		bl	__aeabi_d2f
 10929              	.LVL1183:
3102:Core/Src/bno055.c ****         }
 10930              		.loc 1 3102 13 is_stmt 1 view .LVU2907
3102:Core/Src/bno055.c ****         }
 10931              		.loc 1 3102 24 is_stmt 0 view .LVU2908
 10932 0050 2860     		str	r0, [r5]	@ float
 10933              	.LVL1184:
 10934              	.L821:
3114:Core/Src/bno055.c **** }
 10935              		.loc 1 3114 5 is_stmt 1 view .LVU2909
3115:Core/Src/bno055.c **** 
 10936              		.loc 1 3115 1 is_stmt 0 view .LVU2910
 10937 0052 2046     		mov	r0, r4
 10938 0054 03B0     		add	sp, sp, #12
 10939              	.LCFI371:
 10940              		.cfi_remember_state
 10941              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 353


 10942              		@ sp needed
 10943 0056 30BD     		pop	{r4, r5, pc}
 10944              	.LVL1185:
 10945              	.L825:
 10946              	.LCFI372:
 10947              		.cfi_restore_state
3091:Core/Src/bno055.c ****     }
 10948              		.loc 1 3091 9 is_stmt 1 view .LVU2911
3091:Core/Src/bno055.c ****     }
 10949              		.loc 1 3091 21 is_stmt 0 view .LVU2912
 10950 0058 0020     		movs	r0, #0
 10951 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10952              	.LVL1186:
3091:Core/Src/bno055.c ****     }
 10953              		.loc 1 3091 18 view .LVU2913
 10954 005e 54FA80F4 		uxtab	r4, r4, r0
 10955              	.LVL1187:
3091:Core/Src/bno055.c ****     }
 10956              		.loc 1 3091 18 view .LVU2914
 10957 0062 64B2     		sxtb	r4, r4
 10958              	.LVL1188:
3091:Core/Src/bno055.c ****     }
 10959              		.loc 1 3091 18 view .LVU2915
 10960 0064 DCE7     		b	.L820
 10961              	.L822:
3111:Core/Src/bno055.c ****     }
 10962              		.loc 1 3111 18 view .LVU2916
 10963 0066 4FF0FF34 		mov	r4, #-1
 10964              	.LVL1189:
3111:Core/Src/bno055.c ****     }
 10965              		.loc 1 3111 18 view .LVU2917
 10966 006a F2E7     		b	.L821
 10967              	.LVL1190:
 10968              	.L823:
3106:Core/Src/bno055.c ****         }
 10969              		.loc 1 3106 22 view .LVU2918
 10970 006c 4FF0FF34 		mov	r4, #-1
 10971              	.LVL1191:
3106:Core/Src/bno055.c ****         }
 10972              		.loc 1 3106 22 view .LVU2919
 10973 0070 EFE7     		b	.L821
 10974              	.L827:
 10975 0072 00BF     		.align	2
 10976              	.L826:
 10977 0074 00000000 		.word	.LANCHOR0
 10978 0078 00005940 		.word	1079574528
 10979              		.cfi_endproc
 10980              	.LFE45:
 10982              		.section	.text.bno055_convert_float_accel_z_mg,"ax",%progbits
 10983              		.align	1
 10984              		.global	bno055_convert_float_accel_z_mg
 10985              		.syntax unified
 10986              		.thumb
 10987              		.thumb_func
 10989              	bno055_convert_float_accel_z_mg:
 10990              	.LVL1192:
 10991              	.LFB46:
ARM GAS  /tmp/cc9kYR4Z.s 			page 354


3132:Core/Src/bno055.c ****     /* Variable used to return value of
 10992              		.loc 1 3132 1 is_stmt 1 view -0
 10993              		.cfi_startproc
 10994              		@ args = 0, pretend = 0, frame = 8
 10995              		@ frame_needed = 0, uses_anonymous_args = 0
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 10996              		.loc 1 3132 1 is_stmt 0 view .LVU2921
 10997 0000 30B5     		push	{r4, r5, lr}
 10998              	.LCFI373:
 10999              		.cfi_def_cfa_offset 12
 11000              		.cfi_offset 4, -12
 11001              		.cfi_offset 5, -8
 11002              		.cfi_offset 14, -4
 11003 0002 83B0     		sub	sp, sp, #12
 11004              	.LCFI374:
 11005              		.cfi_def_cfa_offset 24
 11006 0004 0546     		mov	r5, r0
3135:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 11007              		.loc 1 3135 5 is_stmt 1 view .LVU2922
 11008              	.LVL1193:
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 11009              		.loc 1 3136 5 view .LVU2923
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 11010              		.loc 1 3136 9 is_stmt 0 view .LVU2924
 11011 0006 0023     		movs	r3, #0
 11012 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3137:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11013              		.loc 1 3137 5 is_stmt 1 view .LVU2925
 11014              	.LVL1194:
3138:Core/Src/bno055.c **** 
 11015              		.loc 1 3138 5 view .LVU2926
3138:Core/Src/bno055.c **** 
 11016              		.loc 1 3138 8 is_stmt 0 view .LVU2927
 11017 000c 8DF80530 		strb	r3, [sp, #5]
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11018              		.loc 1 3142 5 is_stmt 1 view .LVU2928
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11019              		.loc 1 3142 16 is_stmt 0 view .LVU2929
 11020 0010 0DF10500 		add	r0, sp, #5
 11021              	.LVL1195:
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11022              		.loc 1 3142 16 view .LVU2930
 11023 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11024              	.LVL1196:
 11025 0018 0446     		mov	r4, r0
 11026              	.LVL1197:
3143:Core/Src/bno055.c ****     {
 11027              		.loc 1 3143 5 is_stmt 1 view .LVU2931
3143:Core/Src/bno055.c ****     {
 11028              		.loc 1 3143 23 is_stmt 0 view .LVU2932
 11029 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3143:Core/Src/bno055.c ****     {
 11030              		.loc 1 3143 8 view .LVU2933
 11031 001e 012B     		cmp	r3, #1
 11032 0020 12D1     		bne	.L834
 11033              	.L829:
3147:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 355


 11034              		.loc 1 3147 5 is_stmt 1 view .LVU2934
3147:Core/Src/bno055.c ****     {
 11035              		.loc 1 3147 8 is_stmt 0 view .LVU2935
 11036 0022 C4B9     		cbnz	r4, .L831
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11037              		.loc 1 3150 9 is_stmt 1 view .LVU2936
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11038              		.loc 1 3150 21 is_stmt 0 view .LVU2937
 11039 0024 0DF10600 		add	r0, sp, #6
 11040 0028 FFF7FEFF 		bl	bno055_read_accel_z
 11041              	.LVL1198:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11042              		.loc 1 3150 18 view .LVU2938
 11043 002c 54FA80F4 		uxtab	r4, r4, r0
 11044              	.LVL1199:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11045              		.loc 1 3150 18 view .LVU2939
 11046 0030 64B2     		sxtb	r4, r4
 11047              	.LVL1200:
3151:Core/Src/bno055.c ****         {
 11048              		.loc 1 3151 9 is_stmt 1 view .LVU2940
3151:Core/Src/bno055.c ****         {
 11049              		.loc 1 3151 12 is_stmt 0 view .LVU2941
 11050 0032 9CB9     		cbnz	r4, .L832
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11051              		.loc 1 3154 13 is_stmt 1 view .LVU2942
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11052              		.loc 1 3154 46 is_stmt 0 view .LVU2943
 11053 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11054 0038 FFF7FEFF 		bl	__aeabi_i2d
 11055              	.LVL1201:
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11056              		.loc 1 3154 20 view .LVU2944
 11057 003c FFF7FEFF 		bl	__aeabi_d2f
 11058              	.LVL1202:
3155:Core/Src/bno055.c ****         }
 11059              		.loc 1 3155 13 is_stmt 1 view .LVU2945
3155:Core/Src/bno055.c ****         }
 11060              		.loc 1 3155 24 is_stmt 0 view .LVU2946
 11061 0040 2860     		str	r0, [r5]	@ float
 11062              	.LVL1203:
 11063              	.L830:
3167:Core/Src/bno055.c **** }
 11064              		.loc 1 3167 5 is_stmt 1 view .LVU2947
3168:Core/Src/bno055.c **** 
 11065              		.loc 1 3168 1 is_stmt 0 view .LVU2948
 11066 0042 2046     		mov	r0, r4
 11067 0044 03B0     		add	sp, sp, #12
 11068              	.LCFI375:
 11069              		.cfi_remember_state
 11070              		.cfi_def_cfa_offset 12
 11071              		@ sp needed
 11072 0046 30BD     		pop	{r4, r5, pc}
 11073              	.LVL1204:
 11074              	.L834:
 11075              	.LCFI376:
 11076              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 356


3145:Core/Src/bno055.c ****     }
 11077              		.loc 1 3145 9 is_stmt 1 view .LVU2949
3145:Core/Src/bno055.c ****     }
 11078              		.loc 1 3145 21 is_stmt 0 view .LVU2950
 11079 0048 0120     		movs	r0, #1
 11080 004a FFF7FEFF 		bl	bno055_set_accel_unit
 11081              	.LVL1205:
3145:Core/Src/bno055.c ****     }
 11082              		.loc 1 3145 18 view .LVU2951
 11083 004e 54FA80F4 		uxtab	r4, r4, r0
 11084              	.LVL1206:
3145:Core/Src/bno055.c ****     }
 11085              		.loc 1 3145 18 view .LVU2952
 11086 0052 64B2     		sxtb	r4, r4
 11087              	.LVL1207:
3145:Core/Src/bno055.c ****     }
 11088              		.loc 1 3145 18 view .LVU2953
 11089 0054 E5E7     		b	.L829
 11090              	.L831:
3164:Core/Src/bno055.c ****     }
 11091              		.loc 1 3164 18 view .LVU2954
 11092 0056 4FF0FF34 		mov	r4, #-1
 11093              	.LVL1208:
3164:Core/Src/bno055.c ****     }
 11094              		.loc 1 3164 18 view .LVU2955
 11095 005a F2E7     		b	.L830
 11096              	.LVL1209:
 11097              	.L832:
3159:Core/Src/bno055.c ****         }
 11098              		.loc 1 3159 22 view .LVU2956
 11099 005c 4FF0FF34 		mov	r4, #-1
 11100              	.LVL1210:
3159:Core/Src/bno055.c ****         }
 11101              		.loc 1 3159 22 view .LVU2957
 11102 0060 EFE7     		b	.L830
 11103              		.cfi_endproc
 11104              	.LFE46:
 11106              		.section	.text.bno055_convert_float_accel_xyz_msq,"ax",%progbits
 11107              		.align	1
 11108              		.global	bno055_convert_float_accel_xyz_msq
 11109              		.syntax unified
 11110              		.thumb
 11111              		.thumb_func
 11113              	bno055_convert_float_accel_xyz_msq:
 11114              	.LVL1211:
 11115              	.LFB47:
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 11116              		.loc 1 3189 1 is_stmt 1 view -0
 11117              		.cfi_startproc
 11118              		@ args = 0, pretend = 0, frame = 16
 11119              		@ frame_needed = 0, uses_anonymous_args = 0
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 11120              		.loc 1 3189 1 is_stmt 0 view .LVU2959
 11121 0000 30B5     		push	{r4, r5, lr}
 11122              	.LCFI377:
 11123              		.cfi_def_cfa_offset 12
 11124              		.cfi_offset 4, -12
ARM GAS  /tmp/cc9kYR4Z.s 			page 357


 11125              		.cfi_offset 5, -8
 11126              		.cfi_offset 14, -4
 11127 0002 85B0     		sub	sp, sp, #20
 11128              	.LCFI378:
 11129              		.cfi_def_cfa_offset 32
 11130 0004 0546     		mov	r5, r0
3192:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11131              		.loc 1 3192 5 is_stmt 1 view .LVU2960
 11132              	.LVL1212:
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11133              		.loc 1 3193 5 view .LVU2961
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11134              		.loc 1 3193 27 is_stmt 0 view .LVU2962
 11135 0006 0023     		movs	r3, #0
 11136 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11137 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11138 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3194:Core/Src/bno055.c **** 
 11139              		.loc 1 3194 5 is_stmt 1 view .LVU2963
3194:Core/Src/bno055.c **** 
 11140              		.loc 1 3194 8 is_stmt 0 view .LVU2964
 11141 0014 8DF80730 		strb	r3, [sp, #7]
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11142              		.loc 1 3198 5 is_stmt 1 view .LVU2965
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11143              		.loc 1 3198 16 is_stmt 0 view .LVU2966
 11144 0018 0DF10700 		add	r0, sp, #7
 11145              	.LVL1213:
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11146              		.loc 1 3198 16 view .LVU2967
 11147 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11148              	.LVL1214:
 11149 0020 0446     		mov	r4, r0
 11150              	.LVL1215:
3199:Core/Src/bno055.c ****     {
 11151              		.loc 1 3199 5 is_stmt 1 view .LVU2968
3199:Core/Src/bno055.c ****     {
 11152              		.loc 1 3199 23 is_stmt 0 view .LVU2969
 11153 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3199:Core/Src/bno055.c ****     {
 11154              		.loc 1 3199 8 view .LVU2970
 11155 0026 5BBB     		cbnz	r3, .L841
 11156              	.L836:
3203:Core/Src/bno055.c ****     {
 11157              		.loc 1 3203 5 is_stmt 1 view .LVU2971
3203:Core/Src/bno055.c ****     {
 11158              		.loc 1 3203 8 is_stmt 0 view .LVU2972
 11159 0028 8CBB     		cbnz	r4, .L838
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11160              		.loc 1 3206 9 is_stmt 1 view .LVU2973
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11161              		.loc 1 3206 21 is_stmt 0 view .LVU2974
 11162 002a 02A8     		add	r0, sp, #8
 11163 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 11164              	.LVL1216:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11165              		.loc 1 3206 18 view .LVU2975
ARM GAS  /tmp/cc9kYR4Z.s 			page 358


 11166 0030 54FA80F4 		uxtab	r4, r4, r0
 11167              	.LVL1217:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11168              		.loc 1 3206 18 view .LVU2976
 11169 0034 64B2     		sxtb	r4, r4
 11170              	.LVL1218:
3207:Core/Src/bno055.c ****         {
 11171              		.loc 1 3207 9 is_stmt 1 view .LVU2977
3207:Core/Src/bno055.c ****         {
 11172              		.loc 1 3207 12 is_stmt 0 view .LVU2978
 11173 0036 6CBB     		cbnz	r4, .L839
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11174              		.loc 1 3210 13 is_stmt 1 view .LVU2979
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11175              		.loc 1 3210 52 is_stmt 0 view .LVU2980
 11176 0038 BDF90800 		ldrsh	r0, [sp, #8]
 11177 003c FFF7FEFF 		bl	__aeabi_i2d
 11178              	.LVL1219:
 11179 0040 0022     		movs	r2, #0
 11180 0042 164B     		ldr	r3, .L842
 11181 0044 FFF7FEFF 		bl	__aeabi_ddiv
 11182              	.LVL1220:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11183              		.loc 1 3210 28 view .LVU2981
 11184 0048 FFF7FEFF 		bl	__aeabi_d2f
 11185              	.LVL1221:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11186              		.loc 1 3210 26 view .LVU2982
 11187 004c 2860     		str	r0, [r5]	@ float
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11188              		.loc 1 3211 13 is_stmt 1 view .LVU2983
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11189              		.loc 1 3211 52 is_stmt 0 view .LVU2984
 11190 004e BDF90A00 		ldrsh	r0, [sp, #10]
 11191 0052 FFF7FEFF 		bl	__aeabi_i2d
 11192              	.LVL1222:
 11193 0056 0022     		movs	r2, #0
 11194 0058 104B     		ldr	r3, .L842
 11195 005a FFF7FEFF 		bl	__aeabi_ddiv
 11196              	.LVL1223:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11197              		.loc 1 3211 28 view .LVU2985
 11198 005e FFF7FEFF 		bl	__aeabi_d2f
 11199              	.LVL1224:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11200              		.loc 1 3211 26 view .LVU2986
 11201 0062 6860     		str	r0, [r5, #4]	@ float
3212:Core/Src/bno055.c ****         }
 11202              		.loc 1 3212 13 is_stmt 1 view .LVU2987
3212:Core/Src/bno055.c ****         }
 11203              		.loc 1 3212 52 is_stmt 0 view .LVU2988
 11204 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 11205 0068 FFF7FEFF 		bl	__aeabi_i2d
 11206              	.LVL1225:
 11207 006c 0022     		movs	r2, #0
 11208 006e 0B4B     		ldr	r3, .L842
 11209 0070 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /tmp/cc9kYR4Z.s 			page 359


 11210              	.LVL1226:
3212:Core/Src/bno055.c ****         }
 11211              		.loc 1 3212 28 view .LVU2989
 11212 0074 FFF7FEFF 		bl	__aeabi_d2f
 11213              	.LVL1227:
3212:Core/Src/bno055.c ****         }
 11214              		.loc 1 3212 26 view .LVU2990
 11215 0078 A860     		str	r0, [r5, #8]	@ float
 11216              	.LVL1228:
 11217              	.L837:
3224:Core/Src/bno055.c **** }
 11218              		.loc 1 3224 5 is_stmt 1 view .LVU2991
3225:Core/Src/bno055.c **** 
 11219              		.loc 1 3225 1 is_stmt 0 view .LVU2992
 11220 007a 2046     		mov	r0, r4
 11221 007c 05B0     		add	sp, sp, #20
 11222              	.LCFI379:
 11223              		.cfi_remember_state
 11224              		.cfi_def_cfa_offset 12
 11225              		@ sp needed
 11226 007e 30BD     		pop	{r4, r5, pc}
 11227              	.LVL1229:
 11228              	.L841:
 11229              	.LCFI380:
 11230              		.cfi_restore_state
3201:Core/Src/bno055.c ****     }
 11231              		.loc 1 3201 9 is_stmt 1 view .LVU2993
3201:Core/Src/bno055.c ****     }
 11232              		.loc 1 3201 21 is_stmt 0 view .LVU2994
 11233 0080 0020     		movs	r0, #0
 11234 0082 FFF7FEFF 		bl	bno055_set_accel_unit
 11235              	.LVL1230:
3201:Core/Src/bno055.c ****     }
 11236              		.loc 1 3201 18 view .LVU2995
 11237 0086 54FA80F4 		uxtab	r4, r4, r0
 11238              	.LVL1231:
3201:Core/Src/bno055.c ****     }
 11239              		.loc 1 3201 18 view .LVU2996
 11240 008a 64B2     		sxtb	r4, r4
 11241              	.LVL1232:
3201:Core/Src/bno055.c ****     }
 11242              		.loc 1 3201 18 view .LVU2997
 11243 008c CCE7     		b	.L836
 11244              	.L838:
3221:Core/Src/bno055.c ****     }
 11245              		.loc 1 3221 18 view .LVU2998
 11246 008e 4FF0FF34 		mov	r4, #-1
 11247              	.LVL1233:
3221:Core/Src/bno055.c ****     }
 11248              		.loc 1 3221 18 view .LVU2999
 11249 0092 F2E7     		b	.L837
 11250              	.LVL1234:
 11251              	.L839:
3216:Core/Src/bno055.c ****         }
 11252              		.loc 1 3216 22 view .LVU3000
 11253 0094 4FF0FF34 		mov	r4, #-1
 11254              	.LVL1235:
ARM GAS  /tmp/cc9kYR4Z.s 			page 360


3216:Core/Src/bno055.c ****         }
 11255              		.loc 1 3216 22 view .LVU3001
 11256 0098 EFE7     		b	.L837
 11257              	.L843:
 11258 009a 00BF     		.align	2
 11259              	.L842:
 11260 009c 00005940 		.word	1079574528
 11261              		.cfi_endproc
 11262              	.LFE47:
 11264              		.section	.text.bno055_convert_float_accel_xyz_mg,"ax",%progbits
 11265              		.align	1
 11266              		.global	bno055_convert_float_accel_xyz_mg
 11267              		.syntax unified
 11268              		.thumb
 11269              		.thumb_func
 11271              	bno055_convert_float_accel_xyz_mg:
 11272              	.LVL1236:
 11273              	.LFB48:
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 11274              		.loc 1 3247 1 is_stmt 1 view -0
 11275              		.cfi_startproc
 11276              		@ args = 0, pretend = 0, frame = 16
 11277              		@ frame_needed = 0, uses_anonymous_args = 0
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 11278              		.loc 1 3247 1 is_stmt 0 view .LVU3003
 11279 0000 30B5     		push	{r4, r5, lr}
 11280              	.LCFI381:
 11281              		.cfi_def_cfa_offset 12
 11282              		.cfi_offset 4, -12
 11283              		.cfi_offset 5, -8
 11284              		.cfi_offset 14, -4
 11285 0002 85B0     		sub	sp, sp, #20
 11286              	.LCFI382:
 11287              		.cfi_def_cfa_offset 32
 11288 0004 0546     		mov	r5, r0
3250:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11289              		.loc 1 3250 5 is_stmt 1 view .LVU3004
 11290              	.LVL1237:
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11291              		.loc 1 3251 5 view .LVU3005
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11292              		.loc 1 3251 27 is_stmt 0 view .LVU3006
 11293 0006 0023     		movs	r3, #0
 11294 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11295 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11296 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3252:Core/Src/bno055.c **** 
 11297              		.loc 1 3252 5 is_stmt 1 view .LVU3007
3252:Core/Src/bno055.c **** 
 11298              		.loc 1 3252 8 is_stmt 0 view .LVU3008
 11299 0014 8DF80730 		strb	r3, [sp, #7]
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11300              		.loc 1 3256 5 is_stmt 1 view .LVU3009
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11301              		.loc 1 3256 16 is_stmt 0 view .LVU3010
 11302 0018 0DF10700 		add	r0, sp, #7
 11303              	.LVL1238:
ARM GAS  /tmp/cc9kYR4Z.s 			page 361


3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11304              		.loc 1 3256 16 view .LVU3011
 11305 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11306              	.LVL1239:
 11307 0020 0446     		mov	r4, r0
 11308              	.LVL1240:
3257:Core/Src/bno055.c ****     {
 11309              		.loc 1 3257 5 is_stmt 1 view .LVU3012
3257:Core/Src/bno055.c ****     {
 11310              		.loc 1 3257 23 is_stmt 0 view .LVU3013
 11311 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3257:Core/Src/bno055.c ****     {
 11312              		.loc 1 3257 8 view .LVU3014
 11313 0026 012B     		cmp	r3, #1
 11314 0028 1FD1     		bne	.L850
 11315              	.L845:
3261:Core/Src/bno055.c ****     {
 11316              		.loc 1 3261 5 is_stmt 1 view .LVU3015
3261:Core/Src/bno055.c ****     {
 11317              		.loc 1 3261 8 is_stmt 0 view .LVU3016
 11318 002a 2CBB     		cbnz	r4, .L847
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11319              		.loc 1 3264 9 is_stmt 1 view .LVU3017
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11320              		.loc 1 3264 21 is_stmt 0 view .LVU3018
 11321 002c 02A8     		add	r0, sp, #8
 11322 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 11323              	.LVL1241:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11324              		.loc 1 3264 18 view .LVU3019
 11325 0032 54FA80F4 		uxtab	r4, r4, r0
 11326              	.LVL1242:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11327              		.loc 1 3264 18 view .LVU3020
 11328 0036 64B2     		sxtb	r4, r4
 11329              	.LVL1243:
3265:Core/Src/bno055.c ****         {
 11330              		.loc 1 3265 9 is_stmt 1 view .LVU3021
3265:Core/Src/bno055.c ****         {
 11331              		.loc 1 3265 12 is_stmt 0 view .LVU3022
 11332 0038 0CBB     		cbnz	r4, .L848
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11333              		.loc 1 3268 13 is_stmt 1 view .LVU3023
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11334              		.loc 1 3268 52 is_stmt 0 view .LVU3024
 11335 003a BDF90800 		ldrsh	r0, [sp, #8]
 11336 003e FFF7FEFF 		bl	__aeabi_i2d
 11337              	.LVL1244:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11338              		.loc 1 3268 28 view .LVU3025
 11339 0042 FFF7FEFF 		bl	__aeabi_d2f
 11340              	.LVL1245:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11341              		.loc 1 3268 26 view .LVU3026
 11342 0046 2860     		str	r0, [r5]	@ float
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11343              		.loc 1 3269 13 is_stmt 1 view .LVU3027
ARM GAS  /tmp/cc9kYR4Z.s 			page 362


3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11344              		.loc 1 3269 52 is_stmt 0 view .LVU3028
 11345 0048 BDF90A00 		ldrsh	r0, [sp, #10]
 11346 004c FFF7FEFF 		bl	__aeabi_i2d
 11347              	.LVL1246:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11348              		.loc 1 3269 28 view .LVU3029
 11349 0050 FFF7FEFF 		bl	__aeabi_d2f
 11350              	.LVL1247:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11351              		.loc 1 3269 26 view .LVU3030
 11352 0054 6860     		str	r0, [r5, #4]	@ float
3270:Core/Src/bno055.c ****         }
 11353              		.loc 1 3270 13 is_stmt 1 view .LVU3031
3270:Core/Src/bno055.c ****         }
 11354              		.loc 1 3270 52 is_stmt 0 view .LVU3032
 11355 0056 BDF90C00 		ldrsh	r0, [sp, #12]
 11356 005a FFF7FEFF 		bl	__aeabi_i2d
 11357              	.LVL1248:
3270:Core/Src/bno055.c ****         }
 11358              		.loc 1 3270 28 view .LVU3033
 11359 005e FFF7FEFF 		bl	__aeabi_d2f
 11360              	.LVL1249:
3270:Core/Src/bno055.c ****         }
 11361              		.loc 1 3270 26 view .LVU3034
 11362 0062 A860     		str	r0, [r5, #8]	@ float
 11363              	.LVL1250:
 11364              	.L846:
3282:Core/Src/bno055.c **** }
 11365              		.loc 1 3282 5 is_stmt 1 view .LVU3035
3283:Core/Src/bno055.c **** 
 11366              		.loc 1 3283 1 is_stmt 0 view .LVU3036
 11367 0064 2046     		mov	r0, r4
 11368 0066 05B0     		add	sp, sp, #20
 11369              	.LCFI383:
 11370              		.cfi_remember_state
 11371              		.cfi_def_cfa_offset 12
 11372              		@ sp needed
 11373 0068 30BD     		pop	{r4, r5, pc}
 11374              	.LVL1251:
 11375              	.L850:
 11376              	.LCFI384:
 11377              		.cfi_restore_state
3259:Core/Src/bno055.c ****     }
 11378              		.loc 1 3259 9 is_stmt 1 view .LVU3037
3259:Core/Src/bno055.c ****     }
 11379              		.loc 1 3259 21 is_stmt 0 view .LVU3038
 11380 006a 0120     		movs	r0, #1
 11381 006c FFF7FEFF 		bl	bno055_set_accel_unit
 11382              	.LVL1252:
3259:Core/Src/bno055.c ****     }
 11383              		.loc 1 3259 18 view .LVU3039
 11384 0070 54FA80F4 		uxtab	r4, r4, r0
 11385              	.LVL1253:
3259:Core/Src/bno055.c ****     }
 11386              		.loc 1 3259 18 view .LVU3040
 11387 0074 64B2     		sxtb	r4, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 363


 11388              	.LVL1254:
3259:Core/Src/bno055.c ****     }
 11389              		.loc 1 3259 18 view .LVU3041
 11390 0076 D8E7     		b	.L845
 11391              	.L847:
3279:Core/Src/bno055.c ****     }
 11392              		.loc 1 3279 18 view .LVU3042
 11393 0078 4FF0FF34 		mov	r4, #-1
 11394              	.LVL1255:
3279:Core/Src/bno055.c ****     }
 11395              		.loc 1 3279 18 view .LVU3043
 11396 007c F2E7     		b	.L846
 11397              	.LVL1256:
 11398              	.L848:
3274:Core/Src/bno055.c ****         }
 11399              		.loc 1 3274 22 view .LVU3044
 11400 007e 4FF0FF34 		mov	r4, #-1
 11401              	.LVL1257:
3274:Core/Src/bno055.c ****         }
 11402              		.loc 1 3274 22 view .LVU3045
 11403 0082 EFE7     		b	.L846
 11404              		.cfi_endproc
 11405              	.LFE48:
 11407              		.section	.text.bno055_convert_double_accel_x_msq,"ax",%progbits
 11408              		.align	1
 11409              		.global	bno055_convert_double_accel_x_msq
 11410              		.syntax unified
 11411              		.thumb
 11412              		.thumb_func
 11414              	bno055_convert_double_accel_x_msq:
 11415              	.LVL1258:
 11416              	.LFB79:
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11417              		.loc 1 4680 1 is_stmt 1 view -0
 11418              		.cfi_startproc
 11419              		@ args = 0, pretend = 0, frame = 8
 11420              		@ frame_needed = 0, uses_anonymous_args = 0
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11421              		.loc 1 4680 1 is_stmt 0 view .LVU3047
 11422 0000 30B5     		push	{r4, r5, lr}
 11423              	.LCFI385:
 11424              		.cfi_def_cfa_offset 12
 11425              		.cfi_offset 4, -12
 11426              		.cfi_offset 5, -8
 11427              		.cfi_offset 14, -4
 11428 0002 83B0     		sub	sp, sp, #12
 11429              	.LCFI386:
 11430              		.cfi_def_cfa_offset 24
 11431 0004 0546     		mov	r5, r0
4683:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11432              		.loc 1 4683 5 is_stmt 1 view .LVU3048
 11433              	.LVL1259:
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11434              		.loc 1 4684 5 view .LVU3049
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11435              		.loc 1 4684 9 is_stmt 0 view .LVU3050
 11436 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 364


 11437 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4685:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11438              		.loc 1 4685 5 is_stmt 1 view .LVU3051
 11439              	.LVL1260:
4686:Core/Src/bno055.c **** 
 11440              		.loc 1 4686 5 view .LVU3052
4686:Core/Src/bno055.c **** 
 11441              		.loc 1 4686 8 is_stmt 0 view .LVU3053
 11442 000c 8DF80530 		strb	r3, [sp, #5]
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11443              		.loc 1 4690 5 is_stmt 1 view .LVU3054
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11444              		.loc 1 4690 16 is_stmt 0 view .LVU3055
 11445 0010 0DF10500 		add	r0, sp, #5
 11446              	.LVL1261:
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11447              		.loc 1 4690 16 view .LVU3056
 11448 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11449              	.LVL1262:
 11450 0018 0446     		mov	r4, r0
 11451              	.LVL1263:
4691:Core/Src/bno055.c ****     {
 11452              		.loc 1 4691 5 is_stmt 1 view .LVU3057
4691:Core/Src/bno055.c ****     {
 11453              		.loc 1 4691 23 is_stmt 0 view .LVU3058
 11454 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4691:Core/Src/bno055.c ****     {
 11455              		.loc 1 4691 8 view .LVU3059
 11456 001e ABB9     		cbnz	r3, .L857
 11457              	.L852:
4695:Core/Src/bno055.c ****     {
 11458              		.loc 1 4695 5 is_stmt 1 view .LVU3060
4695:Core/Src/bno055.c ****     {
 11459              		.loc 1 4695 8 is_stmt 0 view .LVU3061
 11460 0020 DCB9     		cbnz	r4, .L854
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11461              		.loc 1 4698 9 is_stmt 1 view .LVU3062
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11462              		.loc 1 4698 21 is_stmt 0 view .LVU3063
 11463 0022 0DF10600 		add	r0, sp, #6
 11464 0026 FFF7FEFF 		bl	bno055_read_accel_x
 11465              	.LVL1264:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11466              		.loc 1 4698 18 view .LVU3064
 11467 002a 54FA80F4 		uxtab	r4, r4, r0
 11468              	.LVL1265:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11469              		.loc 1 4698 18 view .LVU3065
 11470 002e 64B2     		sxtb	r4, r4
 11471              	.LVL1266:
4699:Core/Src/bno055.c ****         {
 11472              		.loc 1 4699 9 is_stmt 1 view .LVU3066
4699:Core/Src/bno055.c ****         {
 11473              		.loc 1 4699 12 is_stmt 0 view .LVU3067
 11474 0030 B4B9     		cbnz	r4, .L855
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11475              		.loc 1 4702 13 is_stmt 1 view .LVU3068
ARM GAS  /tmp/cc9kYR4Z.s 			page 365


4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11476              		.loc 1 4702 22 is_stmt 0 view .LVU3069
 11477 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11478 0036 FFF7FEFF 		bl	__aeabi_i2d
 11479              	.LVL1267:
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11480              		.loc 1 4702 20 view .LVU3070
 11481 003a 0022     		movs	r2, #0
 11482 003c 0A4B     		ldr	r3, .L858
 11483 003e FFF7FEFF 		bl	__aeabi_ddiv
 11484              	.LVL1268:
4703:Core/Src/bno055.c ****         }
 11485              		.loc 1 4703 13 is_stmt 1 view .LVU3071
4703:Core/Src/bno055.c ****         }
 11486              		.loc 1 4703 24 is_stmt 0 view .LVU3072
 11487 0042 C5E90001 		strd	r0, [r5]
 11488              	.LVL1269:
 11489              	.L853:
4715:Core/Src/bno055.c **** }
 11490              		.loc 1 4715 5 is_stmt 1 view .LVU3073
4716:Core/Src/bno055.c **** 
 11491              		.loc 1 4716 1 is_stmt 0 view .LVU3074
 11492 0046 2046     		mov	r0, r4
 11493 0048 03B0     		add	sp, sp, #12
 11494              	.LCFI387:
 11495              		.cfi_remember_state
 11496              		.cfi_def_cfa_offset 12
 11497              		@ sp needed
 11498 004a 30BD     		pop	{r4, r5, pc}
 11499              	.LVL1270:
 11500              	.L857:
 11501              	.LCFI388:
 11502              		.cfi_restore_state
4693:Core/Src/bno055.c ****     }
 11503              		.loc 1 4693 9 is_stmt 1 view .LVU3075
4693:Core/Src/bno055.c ****     }
 11504              		.loc 1 4693 21 is_stmt 0 view .LVU3076
 11505 004c 0020     		movs	r0, #0
 11506 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11507              	.LVL1271:
4693:Core/Src/bno055.c ****     }
 11508              		.loc 1 4693 18 view .LVU3077
 11509 0052 54FA80F4 		uxtab	r4, r4, r0
 11510              	.LVL1272:
4693:Core/Src/bno055.c ****     }
 11511              		.loc 1 4693 18 view .LVU3078
 11512 0056 64B2     		sxtb	r4, r4
 11513              	.LVL1273:
4693:Core/Src/bno055.c ****     }
 11514              		.loc 1 4693 18 view .LVU3079
 11515 0058 E2E7     		b	.L852
 11516              	.L854:
4712:Core/Src/bno055.c ****     }
 11517              		.loc 1 4712 18 view .LVU3080
 11518 005a 4FF0FF34 		mov	r4, #-1
 11519              	.LVL1274:
4712:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 366


 11520              		.loc 1 4712 18 view .LVU3081
 11521 005e F2E7     		b	.L853
 11522              	.LVL1275:
 11523              	.L855:
4707:Core/Src/bno055.c ****         }
 11524              		.loc 1 4707 22 view .LVU3082
 11525 0060 4FF0FF34 		mov	r4, #-1
 11526              	.LVL1276:
4707:Core/Src/bno055.c ****         }
 11527              		.loc 1 4707 22 view .LVU3083
 11528 0064 EFE7     		b	.L853
 11529              	.L859:
 11530 0066 00BF     		.align	2
 11531              	.L858:
 11532 0068 00005940 		.word	1079574528
 11533              		.cfi_endproc
 11534              	.LFE79:
 11536              		.section	.text.bno055_convert_double_accel_x_mg,"ax",%progbits
 11537              		.align	1
 11538              		.global	bno055_convert_double_accel_x_mg
 11539              		.syntax unified
 11540              		.thumb
 11541              		.thumb_func
 11543              	bno055_convert_double_accel_x_mg:
 11544              	.LVL1277:
 11545              	.LFB80:
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11546              		.loc 1 4734 1 is_stmt 1 view -0
 11547              		.cfi_startproc
 11548              		@ args = 0, pretend = 0, frame = 8
 11549              		@ frame_needed = 0, uses_anonymous_args = 0
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11550              		.loc 1 4734 1 is_stmt 0 view .LVU3085
 11551 0000 30B5     		push	{r4, r5, lr}
 11552              	.LCFI389:
 11553              		.cfi_def_cfa_offset 12
 11554              		.cfi_offset 4, -12
 11555              		.cfi_offset 5, -8
 11556              		.cfi_offset 14, -4
 11557 0002 83B0     		sub	sp, sp, #12
 11558              	.LCFI390:
 11559              		.cfi_def_cfa_offset 24
 11560 0004 0546     		mov	r5, r0
4737:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11561              		.loc 1 4737 5 is_stmt 1 view .LVU3086
 11562              	.LVL1278:
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11563              		.loc 1 4738 5 view .LVU3087
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11564              		.loc 1 4738 9 is_stmt 0 view .LVU3088
 11565 0006 0023     		movs	r3, #0
 11566 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4739:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11567              		.loc 1 4739 5 is_stmt 1 view .LVU3089
 11568              	.LVL1279:
4740:Core/Src/bno055.c **** 
 11569              		.loc 1 4740 5 view .LVU3090
ARM GAS  /tmp/cc9kYR4Z.s 			page 367


4740:Core/Src/bno055.c **** 
 11570              		.loc 1 4740 8 is_stmt 0 view .LVU3091
 11571 000c 8DF80530 		strb	r3, [sp, #5]
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11572              		.loc 1 4744 5 is_stmt 1 view .LVU3092
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11573              		.loc 1 4744 16 is_stmt 0 view .LVU3093
 11574 0010 0DF10500 		add	r0, sp, #5
 11575              	.LVL1280:
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11576              		.loc 1 4744 16 view .LVU3094
 11577 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11578              	.LVL1281:
 11579 0018 0446     		mov	r4, r0
 11580              	.LVL1282:
4745:Core/Src/bno055.c ****     {
 11581              		.loc 1 4745 5 is_stmt 1 view .LVU3095
4745:Core/Src/bno055.c ****     {
 11582              		.loc 1 4745 23 is_stmt 0 view .LVU3096
 11583 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4745:Core/Src/bno055.c ****     {
 11584              		.loc 1 4745 8 view .LVU3097
 11585 001e 012B     		cmp	r3, #1
 11586 0020 11D1     		bne	.L866
 11587              	.L861:
4749:Core/Src/bno055.c ****     {
 11588              		.loc 1 4749 5 is_stmt 1 view .LVU3098
4749:Core/Src/bno055.c ****     {
 11589              		.loc 1 4749 8 is_stmt 0 view .LVU3099
 11590 0022 BCB9     		cbnz	r4, .L863
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11591              		.loc 1 4752 9 is_stmt 1 view .LVU3100
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11592              		.loc 1 4752 21 is_stmt 0 view .LVU3101
 11593 0024 0DF10600 		add	r0, sp, #6
 11594 0028 FFF7FEFF 		bl	bno055_read_accel_x
 11595              	.LVL1283:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11596              		.loc 1 4752 18 view .LVU3102
 11597 002c 54FA80F4 		uxtab	r4, r4, r0
 11598              	.LVL1284:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11599              		.loc 1 4752 18 view .LVU3103
 11600 0030 64B2     		sxtb	r4, r4
 11601              	.LVL1285:
4753:Core/Src/bno055.c ****         {
 11602              		.loc 1 4753 9 is_stmt 1 view .LVU3104
4753:Core/Src/bno055.c ****         {
 11603              		.loc 1 4753 12 is_stmt 0 view .LVU3105
 11604 0032 94B9     		cbnz	r4, .L864
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11605              		.loc 1 4756 13 is_stmt 1 view .LVU3106
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11606              		.loc 1 4756 20 is_stmt 0 view .LVU3107
 11607 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11608 0038 FFF7FEFF 		bl	__aeabi_i2d
 11609              	.LVL1286:
ARM GAS  /tmp/cc9kYR4Z.s 			page 368


4757:Core/Src/bno055.c ****         }
 11610              		.loc 1 4757 13 is_stmt 1 view .LVU3108
4757:Core/Src/bno055.c ****         }
 11611              		.loc 1 4757 24 is_stmt 0 view .LVU3109
 11612 003c C5E90001 		strd	r0, [r5]
 11613              	.LVL1287:
 11614              	.L862:
4769:Core/Src/bno055.c **** }
 11615              		.loc 1 4769 5 is_stmt 1 view .LVU3110
4770:Core/Src/bno055.c **** 
 11616              		.loc 1 4770 1 is_stmt 0 view .LVU3111
 11617 0040 2046     		mov	r0, r4
 11618 0042 03B0     		add	sp, sp, #12
 11619              	.LCFI391:
 11620              		.cfi_remember_state
 11621              		.cfi_def_cfa_offset 12
 11622              		@ sp needed
 11623 0044 30BD     		pop	{r4, r5, pc}
 11624              	.LVL1288:
 11625              	.L866:
 11626              	.LCFI392:
 11627              		.cfi_restore_state
4747:Core/Src/bno055.c ****     }
 11628              		.loc 1 4747 9 is_stmt 1 view .LVU3112
4747:Core/Src/bno055.c ****     }
 11629              		.loc 1 4747 21 is_stmt 0 view .LVU3113
 11630 0046 0120     		movs	r0, #1
 11631 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11632              	.LVL1289:
4747:Core/Src/bno055.c ****     }
 11633              		.loc 1 4747 18 view .LVU3114
 11634 004c 54FA80F4 		uxtab	r4, r4, r0
 11635              	.LVL1290:
4747:Core/Src/bno055.c ****     }
 11636              		.loc 1 4747 18 view .LVU3115
 11637 0050 64B2     		sxtb	r4, r4
 11638              	.LVL1291:
4747:Core/Src/bno055.c ****     }
 11639              		.loc 1 4747 18 view .LVU3116
 11640 0052 E6E7     		b	.L861
 11641              	.L863:
4766:Core/Src/bno055.c ****     }
 11642              		.loc 1 4766 18 view .LVU3117
 11643 0054 4FF0FF34 		mov	r4, #-1
 11644              	.LVL1292:
4766:Core/Src/bno055.c ****     }
 11645              		.loc 1 4766 18 view .LVU3118
 11646 0058 F2E7     		b	.L862
 11647              	.LVL1293:
 11648              	.L864:
4761:Core/Src/bno055.c ****         }
 11649              		.loc 1 4761 22 view .LVU3119
 11650 005a 4FF0FF34 		mov	r4, #-1
 11651              	.LVL1294:
4761:Core/Src/bno055.c ****         }
 11652              		.loc 1 4761 22 view .LVU3120
 11653 005e EFE7     		b	.L862
ARM GAS  /tmp/cc9kYR4Z.s 			page 369


 11654              		.cfi_endproc
 11655              	.LFE80:
 11657              		.section	.text.bno055_convert_double_accel_y_msq,"ax",%progbits
 11658              		.align	1
 11659              		.global	bno055_convert_double_accel_y_msq
 11660              		.syntax unified
 11661              		.thumb
 11662              		.thumb_func
 11664              	bno055_convert_double_accel_y_msq:
 11665              	.LVL1295:
 11666              	.LFB81:
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11667              		.loc 1 4788 1 is_stmt 1 view -0
 11668              		.cfi_startproc
 11669              		@ args = 0, pretend = 0, frame = 8
 11670              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11671              		.loc 1 4788 1 is_stmt 0 view .LVU3122
 11672 0000 30B5     		push	{r4, r5, lr}
 11673              	.LCFI393:
 11674              		.cfi_def_cfa_offset 12
 11675              		.cfi_offset 4, -12
 11676              		.cfi_offset 5, -8
 11677              		.cfi_offset 14, -4
 11678 0002 83B0     		sub	sp, sp, #12
 11679              	.LCFI394:
 11680              		.cfi_def_cfa_offset 24
 11681 0004 0546     		mov	r5, r0
4791:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11682              		.loc 1 4791 5 is_stmt 1 view .LVU3123
 11683              	.LVL1296:
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11684              		.loc 1 4792 5 view .LVU3124
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11685              		.loc 1 4792 9 is_stmt 0 view .LVU3125
 11686 0006 0023     		movs	r3, #0
 11687 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4793:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11688              		.loc 1 4793 5 is_stmt 1 view .LVU3126
 11689              	.LVL1297:
4794:Core/Src/bno055.c **** 
 11690              		.loc 1 4794 5 view .LVU3127
4794:Core/Src/bno055.c **** 
 11691              		.loc 1 4794 8 is_stmt 0 view .LVU3128
 11692 000c 8DF80530 		strb	r3, [sp, #5]
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11693              		.loc 1 4798 5 is_stmt 1 view .LVU3129
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11694              		.loc 1 4798 16 is_stmt 0 view .LVU3130
 11695 0010 0DF10500 		add	r0, sp, #5
 11696              	.LVL1298:
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11697              		.loc 1 4798 16 view .LVU3131
 11698 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11699              	.LVL1299:
 11700 0018 0446     		mov	r4, r0
 11701              	.LVL1300:
ARM GAS  /tmp/cc9kYR4Z.s 			page 370


4799:Core/Src/bno055.c ****     {
 11702              		.loc 1 4799 5 is_stmt 1 view .LVU3132
4799:Core/Src/bno055.c ****     {
 11703              		.loc 1 4799 23 is_stmt 0 view .LVU3133
 11704 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4799:Core/Src/bno055.c ****     {
 11705              		.loc 1 4799 8 view .LVU3134
 11706 001e ABB9     		cbnz	r3, .L873
 11707              	.L868:
4803:Core/Src/bno055.c ****     {
 11708              		.loc 1 4803 5 is_stmt 1 view .LVU3135
4803:Core/Src/bno055.c ****     {
 11709              		.loc 1 4803 8 is_stmt 0 view .LVU3136
 11710 0020 DCB9     		cbnz	r4, .L870
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11711              		.loc 1 4806 9 is_stmt 1 view .LVU3137
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11712              		.loc 1 4806 21 is_stmt 0 view .LVU3138
 11713 0022 0DF10600 		add	r0, sp, #6
 11714 0026 FFF7FEFF 		bl	bno055_read_accel_y
 11715              	.LVL1301:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11716              		.loc 1 4806 18 view .LVU3139
 11717 002a 54FA80F4 		uxtab	r4, r4, r0
 11718              	.LVL1302:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11719              		.loc 1 4806 18 view .LVU3140
 11720 002e 64B2     		sxtb	r4, r4
 11721              	.LVL1303:
4807:Core/Src/bno055.c ****         {
 11722              		.loc 1 4807 9 is_stmt 1 view .LVU3141
4807:Core/Src/bno055.c ****         {
 11723              		.loc 1 4807 12 is_stmt 0 view .LVU3142
 11724 0030 B4B9     		cbnz	r4, .L871
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11725              		.loc 1 4810 13 is_stmt 1 view .LVU3143
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11726              		.loc 1 4810 22 is_stmt 0 view .LVU3144
 11727 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11728 0036 FFF7FEFF 		bl	__aeabi_i2d
 11729              	.LVL1304:
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11730              		.loc 1 4810 20 view .LVU3145
 11731 003a 0022     		movs	r2, #0
 11732 003c 0A4B     		ldr	r3, .L874
 11733 003e FFF7FEFF 		bl	__aeabi_ddiv
 11734              	.LVL1305:
4811:Core/Src/bno055.c ****         }
 11735              		.loc 1 4811 13 is_stmt 1 view .LVU3146
4811:Core/Src/bno055.c ****         }
 11736              		.loc 1 4811 24 is_stmt 0 view .LVU3147
 11737 0042 C5E90001 		strd	r0, [r5]
 11738              	.LVL1306:
 11739              	.L869:
4823:Core/Src/bno055.c **** }
 11740              		.loc 1 4823 5 is_stmt 1 view .LVU3148
4824:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 371


 11741              		.loc 1 4824 1 is_stmt 0 view .LVU3149
 11742 0046 2046     		mov	r0, r4
 11743 0048 03B0     		add	sp, sp, #12
 11744              	.LCFI395:
 11745              		.cfi_remember_state
 11746              		.cfi_def_cfa_offset 12
 11747              		@ sp needed
 11748 004a 30BD     		pop	{r4, r5, pc}
 11749              	.LVL1307:
 11750              	.L873:
 11751              	.LCFI396:
 11752              		.cfi_restore_state
4801:Core/Src/bno055.c ****     }
 11753              		.loc 1 4801 9 is_stmt 1 view .LVU3150
4801:Core/Src/bno055.c ****     }
 11754              		.loc 1 4801 21 is_stmt 0 view .LVU3151
 11755 004c 0020     		movs	r0, #0
 11756 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11757              	.LVL1308:
4801:Core/Src/bno055.c ****     }
 11758              		.loc 1 4801 18 view .LVU3152
 11759 0052 54FA80F4 		uxtab	r4, r4, r0
 11760              	.LVL1309:
4801:Core/Src/bno055.c ****     }
 11761              		.loc 1 4801 18 view .LVU3153
 11762 0056 64B2     		sxtb	r4, r4
 11763              	.LVL1310:
4801:Core/Src/bno055.c ****     }
 11764              		.loc 1 4801 18 view .LVU3154
 11765 0058 E2E7     		b	.L868
 11766              	.L870:
4820:Core/Src/bno055.c ****     }
 11767              		.loc 1 4820 18 view .LVU3155
 11768 005a 4FF0FF34 		mov	r4, #-1
 11769              	.LVL1311:
4820:Core/Src/bno055.c ****     }
 11770              		.loc 1 4820 18 view .LVU3156
 11771 005e F2E7     		b	.L869
 11772              	.LVL1312:
 11773              	.L871:
4815:Core/Src/bno055.c ****         }
 11774              		.loc 1 4815 22 view .LVU3157
 11775 0060 4FF0FF34 		mov	r4, #-1
 11776              	.LVL1313:
4815:Core/Src/bno055.c ****         }
 11777              		.loc 1 4815 22 view .LVU3158
 11778 0064 EFE7     		b	.L869
 11779              	.L875:
 11780 0066 00BF     		.align	2
 11781              	.L874:
 11782 0068 00005940 		.word	1079574528
 11783              		.cfi_endproc
 11784              	.LFE81:
 11786              		.section	.text.bno055_convert_double_accel_y_mg,"ax",%progbits
 11787              		.align	1
 11788              		.global	bno055_convert_double_accel_y_mg
 11789              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 372


 11790              		.thumb
 11791              		.thumb_func
 11793              	bno055_convert_double_accel_y_mg:
 11794              	.LVL1314:
 11795              	.LFB82:
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11796              		.loc 1 4841 1 is_stmt 1 view -0
 11797              		.cfi_startproc
 11798              		@ args = 0, pretend = 0, frame = 8
 11799              		@ frame_needed = 0, uses_anonymous_args = 0
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11800              		.loc 1 4841 1 is_stmt 0 view .LVU3160
 11801 0000 30B5     		push	{r4, r5, lr}
 11802              	.LCFI397:
 11803              		.cfi_def_cfa_offset 12
 11804              		.cfi_offset 4, -12
 11805              		.cfi_offset 5, -8
 11806              		.cfi_offset 14, -4
 11807 0002 83B0     		sub	sp, sp, #12
 11808              	.LCFI398:
 11809              		.cfi_def_cfa_offset 24
 11810 0004 0546     		mov	r5, r0
4844:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11811              		.loc 1 4844 5 is_stmt 1 view .LVU3161
 11812              	.LVL1315:
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11813              		.loc 1 4845 5 view .LVU3162
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11814              		.loc 1 4845 9 is_stmt 0 view .LVU3163
 11815 0006 0023     		movs	r3, #0
 11816 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4846:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11817              		.loc 1 4846 5 is_stmt 1 view .LVU3164
 11818              	.LVL1316:
4847:Core/Src/bno055.c **** 
 11819              		.loc 1 4847 5 view .LVU3165
4847:Core/Src/bno055.c **** 
 11820              		.loc 1 4847 8 is_stmt 0 view .LVU3166
 11821 000c 8DF80530 		strb	r3, [sp, #5]
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11822              		.loc 1 4851 5 is_stmt 1 view .LVU3167
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11823              		.loc 1 4851 16 is_stmt 0 view .LVU3168
 11824 0010 0DF10500 		add	r0, sp, #5
 11825              	.LVL1317:
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11826              		.loc 1 4851 16 view .LVU3169
 11827 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11828              	.LVL1318:
 11829 0018 0446     		mov	r4, r0
 11830              	.LVL1319:
4852:Core/Src/bno055.c ****     {
 11831              		.loc 1 4852 5 is_stmt 1 view .LVU3170
4852:Core/Src/bno055.c ****     {
 11832              		.loc 1 4852 23 is_stmt 0 view .LVU3171
 11833 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4852:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 373


 11834              		.loc 1 4852 8 view .LVU3172
 11835 001e 012B     		cmp	r3, #1
 11836 0020 11D1     		bne	.L882
 11837              	.L877:
4856:Core/Src/bno055.c ****     {
 11838              		.loc 1 4856 5 is_stmt 1 view .LVU3173
4856:Core/Src/bno055.c ****     {
 11839              		.loc 1 4856 8 is_stmt 0 view .LVU3174
 11840 0022 BCB9     		cbnz	r4, .L879
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11841              		.loc 1 4859 9 is_stmt 1 view .LVU3175
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11842              		.loc 1 4859 21 is_stmt 0 view .LVU3176
 11843 0024 0DF10600 		add	r0, sp, #6
 11844 0028 FFF7FEFF 		bl	bno055_read_accel_y
 11845              	.LVL1320:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11846              		.loc 1 4859 18 view .LVU3177
 11847 002c 54FA80F4 		uxtab	r4, r4, r0
 11848              	.LVL1321:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11849              		.loc 1 4859 18 view .LVU3178
 11850 0030 64B2     		sxtb	r4, r4
 11851              	.LVL1322:
4860:Core/Src/bno055.c ****         {
 11852              		.loc 1 4860 9 is_stmt 1 view .LVU3179
4860:Core/Src/bno055.c ****         {
 11853              		.loc 1 4860 12 is_stmt 0 view .LVU3180
 11854 0032 94B9     		cbnz	r4, .L880
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11855              		.loc 1 4863 13 is_stmt 1 view .LVU3181
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11856              		.loc 1 4863 20 is_stmt 0 view .LVU3182
 11857 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11858 0038 FFF7FEFF 		bl	__aeabi_i2d
 11859              	.LVL1323:
4864:Core/Src/bno055.c ****         }
 11860              		.loc 1 4864 13 is_stmt 1 view .LVU3183
4864:Core/Src/bno055.c ****         }
 11861              		.loc 1 4864 24 is_stmt 0 view .LVU3184
 11862 003c C5E90001 		strd	r0, [r5]
 11863              	.LVL1324:
 11864              	.L878:
4876:Core/Src/bno055.c **** }
 11865              		.loc 1 4876 5 is_stmt 1 view .LVU3185
4877:Core/Src/bno055.c **** 
 11866              		.loc 1 4877 1 is_stmt 0 view .LVU3186
 11867 0040 2046     		mov	r0, r4
 11868 0042 03B0     		add	sp, sp, #12
 11869              	.LCFI399:
 11870              		.cfi_remember_state
 11871              		.cfi_def_cfa_offset 12
 11872              		@ sp needed
 11873 0044 30BD     		pop	{r4, r5, pc}
 11874              	.LVL1325:
 11875              	.L882:
 11876              	.LCFI400:
ARM GAS  /tmp/cc9kYR4Z.s 			page 374


 11877              		.cfi_restore_state
4854:Core/Src/bno055.c ****     }
 11878              		.loc 1 4854 9 is_stmt 1 view .LVU3187
4854:Core/Src/bno055.c ****     }
 11879              		.loc 1 4854 21 is_stmt 0 view .LVU3188
 11880 0046 0120     		movs	r0, #1
 11881 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11882              	.LVL1326:
4854:Core/Src/bno055.c ****     }
 11883              		.loc 1 4854 18 view .LVU3189
 11884 004c 54FA80F4 		uxtab	r4, r4, r0
 11885              	.LVL1327:
4854:Core/Src/bno055.c ****     }
 11886              		.loc 1 4854 18 view .LVU3190
 11887 0050 64B2     		sxtb	r4, r4
 11888              	.LVL1328:
4854:Core/Src/bno055.c ****     }
 11889              		.loc 1 4854 18 view .LVU3191
 11890 0052 E6E7     		b	.L877
 11891              	.L879:
4873:Core/Src/bno055.c ****     }
 11892              		.loc 1 4873 18 view .LVU3192
 11893 0054 4FF0FF34 		mov	r4, #-1
 11894              	.LVL1329:
4873:Core/Src/bno055.c ****     }
 11895              		.loc 1 4873 18 view .LVU3193
 11896 0058 F2E7     		b	.L878
 11897              	.LVL1330:
 11898              	.L880:
4868:Core/Src/bno055.c ****         }
 11899              		.loc 1 4868 22 view .LVU3194
 11900 005a 4FF0FF34 		mov	r4, #-1
 11901              	.LVL1331:
4868:Core/Src/bno055.c ****         }
 11902              		.loc 1 4868 22 view .LVU3195
 11903 005e EFE7     		b	.L878
 11904              		.cfi_endproc
 11905              	.LFE82:
 11907              		.section	.text.bno055_convert_double_accel_z_msq,"ax",%progbits
 11908              		.align	1
 11909              		.global	bno055_convert_double_accel_z_msq
 11910              		.syntax unified
 11911              		.thumb
 11912              		.thumb_func
 11914              	bno055_convert_double_accel_z_msq:
 11915              	.LVL1332:
 11916              	.LFB83:
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 11917              		.loc 1 4892 1 is_stmt 1 view -0
 11918              		.cfi_startproc
 11919              		@ args = 0, pretend = 0, frame = 8
 11920              		@ frame_needed = 0, uses_anonymous_args = 0
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 11921              		.loc 1 4892 1 is_stmt 0 view .LVU3197
 11922 0000 30B5     		push	{r4, r5, lr}
 11923              	.LCFI401:
 11924              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 375


 11925              		.cfi_offset 4, -12
 11926              		.cfi_offset 5, -8
 11927              		.cfi_offset 14, -4
 11928 0002 83B0     		sub	sp, sp, #12
 11929              	.LCFI402:
 11930              		.cfi_def_cfa_offset 24
 11931 0004 0546     		mov	r5, r0
4895:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 11932              		.loc 1 4895 5 is_stmt 1 view .LVU3198
 11933              	.LVL1333:
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11934              		.loc 1 4896 5 view .LVU3199
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11935              		.loc 1 4896 9 is_stmt 0 view .LVU3200
 11936 0006 0023     		movs	r3, #0
 11937 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4897:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11938              		.loc 1 4897 5 is_stmt 1 view .LVU3201
 11939              	.LVL1334:
4898:Core/Src/bno055.c **** 
 11940              		.loc 1 4898 5 view .LVU3202
4898:Core/Src/bno055.c **** 
 11941              		.loc 1 4898 8 is_stmt 0 view .LVU3203
 11942 000c 8DF80530 		strb	r3, [sp, #5]
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11943              		.loc 1 4902 5 is_stmt 1 view .LVU3204
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11944              		.loc 1 4902 16 is_stmt 0 view .LVU3205
 11945 0010 0DF10500 		add	r0, sp, #5
 11946              	.LVL1335:
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11947              		.loc 1 4902 16 view .LVU3206
 11948 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11949              	.LVL1336:
 11950 0018 0446     		mov	r4, r0
 11951              	.LVL1337:
4903:Core/Src/bno055.c ****     {
 11952              		.loc 1 4903 5 is_stmt 1 view .LVU3207
4903:Core/Src/bno055.c ****     {
 11953              		.loc 1 4903 23 is_stmt 0 view .LVU3208
 11954 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4903:Core/Src/bno055.c ****     {
 11955              		.loc 1 4903 8 view .LVU3209
 11956 001e ABB9     		cbnz	r3, .L889
 11957              	.L884:
4907:Core/Src/bno055.c ****     {
 11958              		.loc 1 4907 5 is_stmt 1 view .LVU3210
4907:Core/Src/bno055.c ****     {
 11959              		.loc 1 4907 8 is_stmt 0 view .LVU3211
 11960 0020 DCB9     		cbnz	r4, .L886
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11961              		.loc 1 4910 9 is_stmt 1 view .LVU3212
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11962              		.loc 1 4910 21 is_stmt 0 view .LVU3213
 11963 0022 0DF10600 		add	r0, sp, #6
 11964 0026 FFF7FEFF 		bl	bno055_read_accel_z
 11965              	.LVL1338:
ARM GAS  /tmp/cc9kYR4Z.s 			page 376


4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11966              		.loc 1 4910 18 view .LVU3214
 11967 002a 54FA80F4 		uxtab	r4, r4, r0
 11968              	.LVL1339:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11969              		.loc 1 4910 18 view .LVU3215
 11970 002e 64B2     		sxtb	r4, r4
 11971              	.LVL1340:
4911:Core/Src/bno055.c ****         {
 11972              		.loc 1 4911 9 is_stmt 1 view .LVU3216
4911:Core/Src/bno055.c ****         {
 11973              		.loc 1 4911 12 is_stmt 0 view .LVU3217
 11974 0030 B4B9     		cbnz	r4, .L887
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11975              		.loc 1 4914 13 is_stmt 1 view .LVU3218
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11976              		.loc 1 4914 22 is_stmt 0 view .LVU3219
 11977 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11978 0036 FFF7FEFF 		bl	__aeabi_i2d
 11979              	.LVL1341:
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11980              		.loc 1 4914 20 view .LVU3220
 11981 003a 0022     		movs	r2, #0
 11982 003c 0A4B     		ldr	r3, .L890
 11983 003e FFF7FEFF 		bl	__aeabi_ddiv
 11984              	.LVL1342:
4915:Core/Src/bno055.c ****         }
 11985              		.loc 1 4915 13 is_stmt 1 view .LVU3221
4915:Core/Src/bno055.c ****         }
 11986              		.loc 1 4915 24 is_stmt 0 view .LVU3222
 11987 0042 C5E90001 		strd	r0, [r5]
 11988              	.LVL1343:
 11989              	.L885:
4927:Core/Src/bno055.c **** }
 11990              		.loc 1 4927 5 is_stmt 1 view .LVU3223
4928:Core/Src/bno055.c **** 
 11991              		.loc 1 4928 1 is_stmt 0 view .LVU3224
 11992 0046 2046     		mov	r0, r4
 11993 0048 03B0     		add	sp, sp, #12
 11994              	.LCFI403:
 11995              		.cfi_remember_state
 11996              		.cfi_def_cfa_offset 12
 11997              		@ sp needed
 11998 004a 30BD     		pop	{r4, r5, pc}
 11999              	.LVL1344:
 12000              	.L889:
 12001              	.LCFI404:
 12002              		.cfi_restore_state
4905:Core/Src/bno055.c ****     }
 12003              		.loc 1 4905 9 is_stmt 1 view .LVU3225
4905:Core/Src/bno055.c ****     }
 12004              		.loc 1 4905 21 is_stmt 0 view .LVU3226
 12005 004c 0020     		movs	r0, #0
 12006 004e FFF7FEFF 		bl	bno055_set_accel_unit
 12007              	.LVL1345:
4905:Core/Src/bno055.c ****     }
 12008              		.loc 1 4905 18 view .LVU3227
ARM GAS  /tmp/cc9kYR4Z.s 			page 377


 12009 0052 54FA80F4 		uxtab	r4, r4, r0
 12010              	.LVL1346:
4905:Core/Src/bno055.c ****     }
 12011              		.loc 1 4905 18 view .LVU3228
 12012 0056 64B2     		sxtb	r4, r4
 12013              	.LVL1347:
4905:Core/Src/bno055.c ****     }
 12014              		.loc 1 4905 18 view .LVU3229
 12015 0058 E2E7     		b	.L884
 12016              	.L886:
4924:Core/Src/bno055.c ****     }
 12017              		.loc 1 4924 18 view .LVU3230
 12018 005a 4FF0FF34 		mov	r4, #-1
 12019              	.LVL1348:
4924:Core/Src/bno055.c ****     }
 12020              		.loc 1 4924 18 view .LVU3231
 12021 005e F2E7     		b	.L885
 12022              	.LVL1349:
 12023              	.L887:
4919:Core/Src/bno055.c ****         }
 12024              		.loc 1 4919 22 view .LVU3232
 12025 0060 4FF0FF34 		mov	r4, #-1
 12026              	.LVL1350:
4919:Core/Src/bno055.c ****         }
 12027              		.loc 1 4919 22 view .LVU3233
 12028 0064 EFE7     		b	.L885
 12029              	.L891:
 12030 0066 00BF     		.align	2
 12031              	.L890:
 12032 0068 00005940 		.word	1079574528
 12033              		.cfi_endproc
 12034              	.LFE83:
 12036              		.section	.text.bno055_convert_double_accel_z_mg,"ax",%progbits
 12037              		.align	1
 12038              		.global	bno055_convert_double_accel_z_mg
 12039              		.syntax unified
 12040              		.thumb
 12041              		.thumb_func
 12043              	bno055_convert_double_accel_z_mg:
 12044              	.LVL1351:
 12045              	.LFB84:
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 12046              		.loc 1 4944 1 is_stmt 1 view -0
 12047              		.cfi_startproc
 12048              		@ args = 0, pretend = 0, frame = 8
 12049              		@ frame_needed = 0, uses_anonymous_args = 0
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 12050              		.loc 1 4944 1 is_stmt 0 view .LVU3235
 12051 0000 30B5     		push	{r4, r5, lr}
 12052              	.LCFI405:
 12053              		.cfi_def_cfa_offset 12
 12054              		.cfi_offset 4, -12
 12055              		.cfi_offset 5, -8
 12056              		.cfi_offset 14, -4
 12057 0002 83B0     		sub	sp, sp, #12
 12058              	.LCFI406:
 12059              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 378


 12060 0004 0546     		mov	r5, r0
4947:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 12061              		.loc 1 4947 5 is_stmt 1 view .LVU3236
 12062              	.LVL1352:
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12063              		.loc 1 4948 5 view .LVU3237
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12064              		.loc 1 4948 9 is_stmt 0 view .LVU3238
 12065 0006 0023     		movs	r3, #0
 12066 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4949:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12067              		.loc 1 4949 5 is_stmt 1 view .LVU3239
 12068              	.LVL1353:
4950:Core/Src/bno055.c **** 
 12069              		.loc 1 4950 5 view .LVU3240
4950:Core/Src/bno055.c **** 
 12070              		.loc 1 4950 8 is_stmt 0 view .LVU3241
 12071 000c 8DF80530 		strb	r3, [sp, #5]
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12072              		.loc 1 4954 5 is_stmt 1 view .LVU3242
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12073              		.loc 1 4954 16 is_stmt 0 view .LVU3243
 12074 0010 0DF10500 		add	r0, sp, #5
 12075              	.LVL1354:
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12076              		.loc 1 4954 16 view .LVU3244
 12077 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 12078              	.LVL1355:
 12079 0018 0446     		mov	r4, r0
 12080              	.LVL1356:
4955:Core/Src/bno055.c ****     {
 12081              		.loc 1 4955 5 is_stmt 1 view .LVU3245
4955:Core/Src/bno055.c ****     {
 12082              		.loc 1 4955 23 is_stmt 0 view .LVU3246
 12083 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4955:Core/Src/bno055.c ****     {
 12084              		.loc 1 4955 8 view .LVU3247
 12085 001e 012B     		cmp	r3, #1
 12086 0020 11D1     		bne	.L898
 12087              	.L893:
4959:Core/Src/bno055.c ****     {
 12088              		.loc 1 4959 5 is_stmt 1 view .LVU3248
4959:Core/Src/bno055.c ****     {
 12089              		.loc 1 4959 8 is_stmt 0 view .LVU3249
 12090 0022 BCB9     		cbnz	r4, .L895
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12091              		.loc 1 4962 9 is_stmt 1 view .LVU3250
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12092              		.loc 1 4962 21 is_stmt 0 view .LVU3251
 12093 0024 0DF10600 		add	r0, sp, #6
 12094 0028 FFF7FEFF 		bl	bno055_read_accel_z
 12095              	.LVL1357:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12096              		.loc 1 4962 18 view .LVU3252
 12097 002c 54FA80F4 		uxtab	r4, r4, r0
 12098              	.LVL1358:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 379


 12099              		.loc 1 4962 18 view .LVU3253
 12100 0030 64B2     		sxtb	r4, r4
 12101              	.LVL1359:
4963:Core/Src/bno055.c ****         {
 12102              		.loc 1 4963 9 is_stmt 1 view .LVU3254
4963:Core/Src/bno055.c ****         {
 12103              		.loc 1 4963 12 is_stmt 0 view .LVU3255
 12104 0032 94B9     		cbnz	r4, .L896
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12105              		.loc 1 4966 13 is_stmt 1 view .LVU3256
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12106              		.loc 1 4966 20 is_stmt 0 view .LVU3257
 12107 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12108 0038 FFF7FEFF 		bl	__aeabi_i2d
 12109              	.LVL1360:
4967:Core/Src/bno055.c ****         }
 12110              		.loc 1 4967 13 is_stmt 1 view .LVU3258
4967:Core/Src/bno055.c ****         }
 12111              		.loc 1 4967 24 is_stmt 0 view .LVU3259
 12112 003c C5E90001 		strd	r0, [r5]
 12113              	.LVL1361:
 12114              	.L894:
4979:Core/Src/bno055.c **** }
 12115              		.loc 1 4979 5 is_stmt 1 view .LVU3260
4980:Core/Src/bno055.c **** 
 12116              		.loc 1 4980 1 is_stmt 0 view .LVU3261
 12117 0040 2046     		mov	r0, r4
 12118 0042 03B0     		add	sp, sp, #12
 12119              	.LCFI407:
 12120              		.cfi_remember_state
 12121              		.cfi_def_cfa_offset 12
 12122              		@ sp needed
 12123 0044 30BD     		pop	{r4, r5, pc}
 12124              	.LVL1362:
 12125              	.L898:
 12126              	.LCFI408:
 12127              		.cfi_restore_state
4957:Core/Src/bno055.c ****     }
 12128              		.loc 1 4957 9 is_stmt 1 view .LVU3262
4957:Core/Src/bno055.c ****     }
 12129              		.loc 1 4957 21 is_stmt 0 view .LVU3263
 12130 0046 0120     		movs	r0, #1
 12131 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 12132              	.LVL1363:
4957:Core/Src/bno055.c ****     }
 12133              		.loc 1 4957 18 view .LVU3264
 12134 004c 54FA80F4 		uxtab	r4, r4, r0
 12135              	.LVL1364:
4957:Core/Src/bno055.c ****     }
 12136              		.loc 1 4957 18 view .LVU3265
 12137 0050 64B2     		sxtb	r4, r4
 12138              	.LVL1365:
4957:Core/Src/bno055.c ****     }
 12139              		.loc 1 4957 18 view .LVU3266
 12140 0052 E6E7     		b	.L893
 12141              	.L895:
4976:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 380


 12142              		.loc 1 4976 18 view .LVU3267
 12143 0054 4FF0FF34 		mov	r4, #-1
 12144              	.LVL1366:
4976:Core/Src/bno055.c ****     }
 12145              		.loc 1 4976 18 view .LVU3268
 12146 0058 F2E7     		b	.L894
 12147              	.LVL1367:
 12148              	.L896:
4971:Core/Src/bno055.c ****         }
 12149              		.loc 1 4971 22 view .LVU3269
 12150 005a 4FF0FF34 		mov	r4, #-1
 12151              	.LVL1368:
4971:Core/Src/bno055.c ****         }
 12152              		.loc 1 4971 22 view .LVU3270
 12153 005e EFE7     		b	.L894
 12154              		.cfi_endproc
 12155              	.LFE84:
 12157              		.section	.text.bno055_convert_double_accel_xyz_msq,"ax",%progbits
 12158              		.align	1
 12159              		.global	bno055_convert_double_accel_xyz_msq
 12160              		.syntax unified
 12161              		.thumb
 12162              		.thumb_func
 12164              	bno055_convert_double_accel_xyz_msq:
 12165              	.LVL1369:
 12166              	.LFB85:
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 12167              		.loc 1 5002 1 is_stmt 1 view -0
 12168              		.cfi_startproc
 12169              		@ args = 0, pretend = 0, frame = 16
 12170              		@ frame_needed = 0, uses_anonymous_args = 0
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 12171              		.loc 1 5002 1 is_stmt 0 view .LVU3272
 12172 0000 30B5     		push	{r4, r5, lr}
 12173              	.LCFI409:
 12174              		.cfi_def_cfa_offset 12
 12175              		.cfi_offset 4, -12
 12176              		.cfi_offset 5, -8
 12177              		.cfi_offset 14, -4
 12178 0002 85B0     		sub	sp, sp, #20
 12179              	.LCFI410:
 12180              		.cfi_def_cfa_offset 32
 12181 0004 0546     		mov	r5, r0
5005:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 12182              		.loc 1 5005 5 is_stmt 1 view .LVU3273
 12183              	.LVL1370:
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12184              		.loc 1 5006 5 view .LVU3274
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12185              		.loc 1 5006 27 is_stmt 0 view .LVU3275
 12186 0006 0023     		movs	r3, #0
 12187 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 12188 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12189 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5007:Core/Src/bno055.c **** 
 12190              		.loc 1 5007 5 is_stmt 1 view .LVU3276
5007:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 381


 12191              		.loc 1 5007 8 is_stmt 0 view .LVU3277
 12192 0014 8DF80730 		strb	r3, [sp, #7]
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12193              		.loc 1 5011 5 is_stmt 1 view .LVU3278
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12194              		.loc 1 5011 16 is_stmt 0 view .LVU3279
 12195 0018 0DF10700 		add	r0, sp, #7
 12196              	.LVL1371:
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12197              		.loc 1 5011 16 view .LVU3280
 12198 001c FFF7FEFF 		bl	bno055_get_accel_unit
 12199              	.LVL1372:
 12200 0020 0446     		mov	r4, r0
 12201              	.LVL1373:
5012:Core/Src/bno055.c ****     {
 12202              		.loc 1 5012 5 is_stmt 1 view .LVU3281
5012:Core/Src/bno055.c ****     {
 12203              		.loc 1 5012 23 is_stmt 0 view .LVU3282
 12204 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5012:Core/Src/bno055.c ****     {
 12205              		.loc 1 5012 8 view .LVU3283
 12206 0026 43BB     		cbnz	r3, .L905
 12207              	.L900:
5016:Core/Src/bno055.c ****     {
 12208              		.loc 1 5016 5 is_stmt 1 view .LVU3284
5016:Core/Src/bno055.c ****     {
 12209              		.loc 1 5016 8 is_stmt 0 view .LVU3285
 12210 0028 74BB     		cbnz	r4, .L902
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12211              		.loc 1 5019 9 is_stmt 1 view .LVU3286
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12212              		.loc 1 5019 21 is_stmt 0 view .LVU3287
 12213 002a 02A8     		add	r0, sp, #8
 12214 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 12215              	.LVL1374:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12216              		.loc 1 5019 18 view .LVU3288
 12217 0030 54FA80F4 		uxtab	r4, r4, r0
 12218              	.LVL1375:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12219              		.loc 1 5019 18 view .LVU3289
 12220 0034 64B2     		sxtb	r4, r4
 12221              	.LVL1376:
5020:Core/Src/bno055.c ****         {
 12222              		.loc 1 5020 9 is_stmt 1 view .LVU3290
5020:Core/Src/bno055.c ****         {
 12223              		.loc 1 5020 12 is_stmt 0 view .LVU3291
 12224 0036 54BB     		cbnz	r4, .L903
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12225              		.loc 1 5023 13 is_stmt 1 view .LVU3292
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12226              		.loc 1 5023 28 is_stmt 0 view .LVU3293
 12227 0038 BDF90800 		ldrsh	r0, [sp, #8]
 12228 003c FFF7FEFF 		bl	__aeabi_i2d
 12229              	.LVL1377:
 12230 0040 0022     		movs	r2, #0
 12231 0042 144B     		ldr	r3, .L906
ARM GAS  /tmp/cc9kYR4Z.s 			page 382


 12232 0044 FFF7FEFF 		bl	__aeabi_ddiv
 12233              	.LVL1378:
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12234              		.loc 1 5023 26 view .LVU3294
 12235 0048 C5E90001 		strd	r0, [r5]
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12236              		.loc 1 5024 13 is_stmt 1 view .LVU3295
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12237              		.loc 1 5024 28 is_stmt 0 view .LVU3296
 12238 004c BDF90A00 		ldrsh	r0, [sp, #10]
 12239 0050 FFF7FEFF 		bl	__aeabi_i2d
 12240              	.LVL1379:
 12241 0054 0022     		movs	r2, #0
 12242 0056 0F4B     		ldr	r3, .L906
 12243 0058 FFF7FEFF 		bl	__aeabi_ddiv
 12244              	.LVL1380:
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12245              		.loc 1 5024 26 view .LVU3297
 12246 005c C5E90201 		strd	r0, [r5, #8]
5025:Core/Src/bno055.c ****         }
 12247              		.loc 1 5025 13 is_stmt 1 view .LVU3298
5025:Core/Src/bno055.c ****         }
 12248              		.loc 1 5025 28 is_stmt 0 view .LVU3299
 12249 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 12250 0064 FFF7FEFF 		bl	__aeabi_i2d
 12251              	.LVL1381:
 12252 0068 0022     		movs	r2, #0
 12253 006a 0A4B     		ldr	r3, .L906
 12254 006c FFF7FEFF 		bl	__aeabi_ddiv
 12255              	.LVL1382:
5025:Core/Src/bno055.c ****         }
 12256              		.loc 1 5025 26 view .LVU3300
 12257 0070 C5E90401 		strd	r0, [r5, #16]
 12258              	.LVL1383:
 12259              	.L901:
5037:Core/Src/bno055.c **** }
 12260              		.loc 1 5037 5 is_stmt 1 view .LVU3301
5038:Core/Src/bno055.c **** 
 12261              		.loc 1 5038 1 is_stmt 0 view .LVU3302
 12262 0074 2046     		mov	r0, r4
 12263 0076 05B0     		add	sp, sp, #20
 12264              	.LCFI411:
 12265              		.cfi_remember_state
 12266              		.cfi_def_cfa_offset 12
 12267              		@ sp needed
 12268 0078 30BD     		pop	{r4, r5, pc}
 12269              	.LVL1384:
 12270              	.L905:
 12271              	.LCFI412:
 12272              		.cfi_restore_state
5014:Core/Src/bno055.c ****     }
 12273              		.loc 1 5014 9 is_stmt 1 view .LVU3303
5014:Core/Src/bno055.c ****     }
 12274              		.loc 1 5014 21 is_stmt 0 view .LVU3304
 12275 007a 0020     		movs	r0, #0
 12276 007c FFF7FEFF 		bl	bno055_set_accel_unit
 12277              	.LVL1385:
ARM GAS  /tmp/cc9kYR4Z.s 			page 383


5014:Core/Src/bno055.c ****     }
 12278              		.loc 1 5014 18 view .LVU3305
 12279 0080 54FA80F4 		uxtab	r4, r4, r0
 12280              	.LVL1386:
5014:Core/Src/bno055.c ****     }
 12281              		.loc 1 5014 18 view .LVU3306
 12282 0084 64B2     		sxtb	r4, r4
 12283              	.LVL1387:
5014:Core/Src/bno055.c ****     }
 12284              		.loc 1 5014 18 view .LVU3307
 12285 0086 CFE7     		b	.L900
 12286              	.L902:
5034:Core/Src/bno055.c ****     }
 12287              		.loc 1 5034 18 view .LVU3308
 12288 0088 4FF0FF34 		mov	r4, #-1
 12289              	.LVL1388:
5034:Core/Src/bno055.c ****     }
 12290              		.loc 1 5034 18 view .LVU3309
 12291 008c F2E7     		b	.L901
 12292              	.LVL1389:
 12293              	.L903:
5029:Core/Src/bno055.c ****         }
 12294              		.loc 1 5029 22 view .LVU3310
 12295 008e 4FF0FF34 		mov	r4, #-1
 12296              	.LVL1390:
5029:Core/Src/bno055.c ****         }
 12297              		.loc 1 5029 22 view .LVU3311
 12298 0092 EFE7     		b	.L901
 12299              	.L907:
 12300              		.align	2
 12301              	.L906:
 12302 0094 00005940 		.word	1079574528
 12303              		.cfi_endproc
 12304              	.LFE85:
 12306              		.section	.text.bno055_convert_double_accel_xyz_mg,"ax",%progbits
 12307              		.align	1
 12308              		.global	bno055_convert_double_accel_xyz_mg
 12309              		.syntax unified
 12310              		.thumb
 12311              		.thumb_func
 12313              	bno055_convert_double_accel_xyz_mg:
 12314              	.LVL1391:
 12315              	.LFB86:
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 12316              		.loc 1 5059 1 is_stmt 1 view -0
 12317              		.cfi_startproc
 12318              		@ args = 0, pretend = 0, frame = 16
 12319              		@ frame_needed = 0, uses_anonymous_args = 0
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 12320              		.loc 1 5059 1 is_stmt 0 view .LVU3313
 12321 0000 30B5     		push	{r4, r5, lr}
 12322              	.LCFI413:
 12323              		.cfi_def_cfa_offset 12
 12324              		.cfi_offset 4, -12
 12325              		.cfi_offset 5, -8
 12326              		.cfi_offset 14, -4
 12327 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/cc9kYR4Z.s 			page 384


 12328              	.LCFI414:
 12329              		.cfi_def_cfa_offset 32
 12330 0004 0546     		mov	r5, r0
5062:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 12331              		.loc 1 5062 5 is_stmt 1 view .LVU3314
 12332              	.LVL1392:
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12333              		.loc 1 5063 5 view .LVU3315
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12334              		.loc 1 5063 27 is_stmt 0 view .LVU3316
 12335 0006 0023     		movs	r3, #0
 12336 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 12337 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12338 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5064:Core/Src/bno055.c **** 
 12339              		.loc 1 5064 5 is_stmt 1 view .LVU3317
5064:Core/Src/bno055.c **** 
 12340              		.loc 1 5064 8 is_stmt 0 view .LVU3318
 12341 0014 8DF80730 		strb	r3, [sp, #7]
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12342              		.loc 1 5068 5 is_stmt 1 view .LVU3319
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12343              		.loc 1 5068 16 is_stmt 0 view .LVU3320
 12344 0018 0DF10700 		add	r0, sp, #7
 12345              	.LVL1393:
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12346              		.loc 1 5068 16 view .LVU3321
 12347 001c FFF7FEFF 		bl	bno055_get_accel_unit
 12348              	.LVL1394:
 12349 0020 0446     		mov	r4, r0
 12350              	.LVL1395:
5069:Core/Src/bno055.c ****     {
 12351              		.loc 1 5069 5 is_stmt 1 view .LVU3322
5069:Core/Src/bno055.c ****     {
 12352              		.loc 1 5069 23 is_stmt 0 view .LVU3323
 12353 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5069:Core/Src/bno055.c ****     {
 12354              		.loc 1 5069 8 view .LVU3324
 12355 0026 012B     		cmp	r3, #1
 12356 0028 1CD1     		bne	.L914
 12357              	.L909:
5073:Core/Src/bno055.c ****     {
 12358              		.loc 1 5073 5 is_stmt 1 view .LVU3325
5073:Core/Src/bno055.c ****     {
 12359              		.loc 1 5073 8 is_stmt 0 view .LVU3326
 12360 002a 14BB     		cbnz	r4, .L911
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12361              		.loc 1 5076 9 is_stmt 1 view .LVU3327
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12362              		.loc 1 5076 21 is_stmt 0 view .LVU3328
 12363 002c 02A8     		add	r0, sp, #8
 12364 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 12365              	.LVL1396:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12366              		.loc 1 5076 18 view .LVU3329
 12367 0032 54FA80F4 		uxtab	r4, r4, r0
 12368              	.LVL1397:
ARM GAS  /tmp/cc9kYR4Z.s 			page 385


5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12369              		.loc 1 5076 18 view .LVU3330
 12370 0036 64B2     		sxtb	r4, r4
 12371              	.LVL1398:
5077:Core/Src/bno055.c ****         {
 12372              		.loc 1 5077 9 is_stmt 1 view .LVU3331
5077:Core/Src/bno055.c ****         {
 12373              		.loc 1 5077 12 is_stmt 0 view .LVU3332
 12374 0038 F4B9     		cbnz	r4, .L912
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12375              		.loc 1 5080 13 is_stmt 1 view .LVU3333
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12376              		.loc 1 5080 28 is_stmt 0 view .LVU3334
 12377 003a BDF90800 		ldrsh	r0, [sp, #8]
 12378 003e FFF7FEFF 		bl	__aeabi_i2d
 12379              	.LVL1399:
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12380              		.loc 1 5080 26 view .LVU3335
 12381 0042 C5E90001 		strd	r0, [r5]
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12382              		.loc 1 5081 13 is_stmt 1 view .LVU3336
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12383              		.loc 1 5081 28 is_stmt 0 view .LVU3337
 12384 0046 BDF90A00 		ldrsh	r0, [sp, #10]
 12385 004a FFF7FEFF 		bl	__aeabi_i2d
 12386              	.LVL1400:
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12387              		.loc 1 5081 26 view .LVU3338
 12388 004e C5E90201 		strd	r0, [r5, #8]
5082:Core/Src/bno055.c ****         }
 12389              		.loc 1 5082 13 is_stmt 1 view .LVU3339
5082:Core/Src/bno055.c ****         }
 12390              		.loc 1 5082 28 is_stmt 0 view .LVU3340
 12391 0052 BDF90C00 		ldrsh	r0, [sp, #12]
 12392 0056 FFF7FEFF 		bl	__aeabi_i2d
 12393              	.LVL1401:
5082:Core/Src/bno055.c ****         }
 12394              		.loc 1 5082 26 view .LVU3341
 12395 005a C5E90401 		strd	r0, [r5, #16]
 12396              	.LVL1402:
 12397              	.L910:
5094:Core/Src/bno055.c **** }
 12398              		.loc 1 5094 5 is_stmt 1 view .LVU3342
5095:Core/Src/bno055.c **** 
 12399              		.loc 1 5095 1 is_stmt 0 view .LVU3343
 12400 005e 2046     		mov	r0, r4
 12401 0060 05B0     		add	sp, sp, #20
 12402              	.LCFI415:
 12403              		.cfi_remember_state
 12404              		.cfi_def_cfa_offset 12
 12405              		@ sp needed
 12406 0062 30BD     		pop	{r4, r5, pc}
 12407              	.LVL1403:
 12408              	.L914:
 12409              	.LCFI416:
 12410              		.cfi_restore_state
5071:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 386


 12411              		.loc 1 5071 9 is_stmt 1 view .LVU3344
5071:Core/Src/bno055.c ****     }
 12412              		.loc 1 5071 21 is_stmt 0 view .LVU3345
 12413 0064 0120     		movs	r0, #1
 12414 0066 FFF7FEFF 		bl	bno055_set_accel_unit
 12415              	.LVL1404:
5071:Core/Src/bno055.c ****     }
 12416              		.loc 1 5071 18 view .LVU3346
 12417 006a 54FA80F4 		uxtab	r4, r4, r0
 12418              	.LVL1405:
5071:Core/Src/bno055.c ****     }
 12419              		.loc 1 5071 18 view .LVU3347
 12420 006e 64B2     		sxtb	r4, r4
 12421              	.LVL1406:
5071:Core/Src/bno055.c ****     }
 12422              		.loc 1 5071 18 view .LVU3348
 12423 0070 DBE7     		b	.L909
 12424              	.L911:
5091:Core/Src/bno055.c ****     }
 12425              		.loc 1 5091 18 view .LVU3349
 12426 0072 4FF0FF34 		mov	r4, #-1
 12427              	.LVL1407:
5091:Core/Src/bno055.c ****     }
 12428              		.loc 1 5091 18 view .LVU3350
 12429 0076 F2E7     		b	.L910
 12430              	.LVL1408:
 12431              	.L912:
5086:Core/Src/bno055.c ****         }
 12432              		.loc 1 5086 22 view .LVU3351
 12433 0078 4FF0FF34 		mov	r4, #-1
 12434              	.LVL1409:
5086:Core/Src/bno055.c ****         }
 12435              		.loc 1 5086 22 view .LVU3352
 12436 007c EFE7     		b	.L910
 12437              		.cfi_endproc
 12438              	.LFE86:
 12440              		.section	.text.bno055_set_gyro_unit,"ax",%progbits
 12441              		.align	1
 12442              		.global	bno055_set_gyro_unit
 12443              		.syntax unified
 12444              		.thumb
 12445              		.thumb_func
 12447              	bno055_set_gyro_unit:
 12448              	.LVL1410:
 12449              	.LFB136:
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12450              		.loc 1 7597 1 is_stmt 1 view -0
 12451              		.cfi_startproc
 12452              		@ args = 0, pretend = 0, frame = 8
 12453              		@ frame_needed = 0, uses_anonymous_args = 0
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12454              		.loc 1 7597 1 is_stmt 0 view .LVU3354
 12455 0000 30B5     		push	{r4, r5, lr}
 12456              	.LCFI417:
 12457              		.cfi_def_cfa_offset 12
 12458              		.cfi_offset 4, -12
 12459              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 387


 12460              		.cfi_offset 14, -4
 12461 0002 83B0     		sub	sp, sp, #12
 12462              	.LCFI418:
 12463              		.cfi_def_cfa_offset 24
7598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 12464              		.loc 1 7598 5 is_stmt 1 view .LVU3355
 12465              	.LVL1411:
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12466              		.loc 1 7599 5 view .LVU3356
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12467              		.loc 1 7599 8 is_stmt 0 view .LVU3357
 12468 0004 0023     		movs	r3, #0
 12469 0006 8DF80730 		strb	r3, [sp, #7]
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12470              		.loc 1 7600 5 is_stmt 1 view .LVU3358
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12471              		.loc 1 7600 8 is_stmt 0 view .LVU3359
 12472 000a 8DF80630 		strb	r3, [sp, #6]
7601:Core/Src/bno055.c **** 
 12473              		.loc 1 7601 5 is_stmt 1 view .LVU3360
 12474              	.LVL1412:
7604:Core/Src/bno055.c ****     {
 12475              		.loc 1 7604 5 view .LVU3361
7604:Core/Src/bno055.c ****     {
 12476              		.loc 1 7604 18 is_stmt 0 view .LVU3362
 12477 000e 264B     		ldr	r3, .L925
 12478 0010 1B68     		ldr	r3, [r3]
7604:Core/Src/bno055.c ****     {
 12479              		.loc 1 7604 8 view .LVU3363
 12480 0012 002B     		cmp	r3, #0
 12481 0014 44D0     		beq	.L919
 12482 0016 0546     		mov	r5, r0
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12483              		.loc 1 7613 9 is_stmt 1 view .LVU3364
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12484              		.loc 1 7613 19 is_stmt 0 view .LVU3365
 12485 0018 0DF10600 		add	r0, sp, #6
 12486              	.LVL1413:
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12487              		.loc 1 7613 19 view .LVU3366
 12488 001c FFF7FEFF 		bl	bno055_get_operation_mode
 12489              	.LVL1414:
7614:Core/Src/bno055.c ****         {
 12490              		.loc 1 7614 9 is_stmt 1 view .LVU3367
7614:Core/Src/bno055.c ****         {
 12491              		.loc 1 7614 12 is_stmt 0 view .LVU3368
 12492 0020 0446     		mov	r4, r0
 12493 0022 60BB     		cbnz	r0, .L920
7616:Core/Src/bno055.c ****             {
 12494              		.loc 1 7616 13 is_stmt 1 view .LVU3369
7616:Core/Src/bno055.c ****             {
 12495              		.loc 1 7616 32 is_stmt 0 view .LVU3370
 12496 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7616:Core/Src/bno055.c ****             {
 12497              		.loc 1 7616 16 view .LVU3371
 12498 0028 1BBB     		cbnz	r3, .L923
 12499              	.LVL1415:
ARM GAS  /tmp/cc9kYR4Z.s 			page 388


 12500              	.L918:
7620:Core/Src/bno055.c ****             {
 12501              		.loc 1 7620 13 is_stmt 1 view .LVU3372
7620:Core/Src/bno055.c ****             {
 12502              		.loc 1 7620 16 is_stmt 0 view .LVU3373
 12503 002a 84BB     		cbnz	r4, .L921
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12504              		.loc 1 7623 17 is_stmt 1 view .LVU3374
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12505              		.loc 1 7623 36 is_stmt 0 view .LVU3375
 12506 002c 1E4B     		ldr	r3, .L925
 12507 002e 1868     		ldr	r0, [r3]
 12508 0030 0469     		ldr	r4, [r0, #16]
 12509              	.LVL1416:
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12510              		.loc 1 7623 28 view .LVU3376
 12511 0032 0123     		movs	r3, #1
 12512 0034 0DF10702 		add	r2, sp, #7
 12513 0038 3B21     		movs	r1, #59
 12514 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12515 003c A047     		blx	r4
 12516              	.LVL1417:
7627:Core/Src/bno055.c ****                 {
 12517              		.loc 1 7627 17 is_stmt 1 view .LVU3377
7627:Core/Src/bno055.c ****                 {
 12518              		.loc 1 7627 20 is_stmt 0 view .LVU3378
 12519 003e 0446     		mov	r4, r0
 12520 0040 F8B9     		cbnz	r0, .L917
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12521              		.loc 1 7629 21 is_stmt 1 view .LVU3379
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12522              		.loc 1 7629 32 is_stmt 0 view .LVU3380
 12523 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 12524 0046 23F00203 		bic	r3, r3, #2
 12525 004a 5BB2     		sxtb	r3, r3
 12526 004c 6800     		lsls	r0, r5, #1
 12527              	.LVL1418:
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12528              		.loc 1 7629 32 view .LVU3381
 12529 004e 00F00200 		and	r0, r0, #2
 12530 0052 0343     		orrs	r3, r3, r0
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12531              		.loc 1 7629 30 view .LVU3382
 12532 0054 8DF80730 		strb	r3, [sp, #7]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12533              		.loc 1 7630 21 is_stmt 1 view .LVU3383
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12534              		.loc 1 7630 41 is_stmt 0 view .LVU3384
 12535 0058 134B     		ldr	r3, .L925
 12536 005a 1868     		ldr	r0, [r3]
 12537 005c C568     		ldr	r5, [r0, #12]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12538              		.loc 1 7630 33 view .LVU3385
 12539 005e 0123     		movs	r3, #1
 12540 0060 0DF10702 		add	r2, sp, #7
 12541 0064 3B21     		movs	r1, #59
 12542 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 389


 12543 0068 A847     		blx	r5
 12544              	.LVL1419:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12545              		.loc 1 7630 30 view .LVU3386
 12546 006a 54FA80F0 		uxtab	r0, r4, r0
 12547 006e 44B2     		sxtb	r4, r0
 12548              	.LVL1420:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12549              		.loc 1 7630 30 view .LVU3387
 12550 0070 07E0     		b	.L917
 12551              	.LVL1421:
 12552              	.L923:
7618:Core/Src/bno055.c ****             }
 12553              		.loc 1 7618 17 is_stmt 1 view .LVU3388
7618:Core/Src/bno055.c ****             }
 12554              		.loc 1 7618 28 is_stmt 0 view .LVU3389
 12555 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 12556              	.LVL1422:
7618:Core/Src/bno055.c ****             }
 12557              		.loc 1 7618 25 view .LVU3390
 12558 0076 54FA80F4 		uxtab	r4, r4, r0
 12559 007a 64B2     		sxtb	r4, r4
 12560              	.LVL1423:
7618:Core/Src/bno055.c ****             }
 12561              		.loc 1 7618 25 view .LVU3391
 12562 007c D5E7     		b	.L918
 12563              	.LVL1424:
 12564              	.L920:
7643:Core/Src/bno055.c ****         }
 12565              		.loc 1 7643 22 view .LVU3392
 12566 007e 4FF0FF34 		mov	r4, #-1
 12567              	.LVL1425:
 12568              	.L917:
7646:Core/Src/bno055.c ****     {
 12569              		.loc 1 7646 5 is_stmt 1 view .LVU3393
7646:Core/Src/bno055.c ****     {
 12570              		.loc 1 7646 24 is_stmt 0 view .LVU3394
 12571 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7646:Core/Src/bno055.c ****     {
 12572              		.loc 1 7646 8 view .LVU3395
 12573 0086 28B9     		cbnz	r0, .L924
 12574              	.LVL1426:
 12575              	.L916:
7654:Core/Src/bno055.c **** 
 12576              		.loc 1 7654 1 view .LVU3396
 12577 0088 2046     		mov	r0, r4
 12578 008a 03B0     		add	sp, sp, #12
 12579              	.LCFI419:
 12580              		.cfi_remember_state
 12581              		.cfi_def_cfa_offset 12
 12582              		@ sp needed
 12583 008c 30BD     		pop	{r4, r5, pc}
 12584              	.LVL1427:
 12585              	.L921:
 12586              	.LCFI420:
 12587              		.cfi_restore_state
7638:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 390


 12588              		.loc 1 7638 26 view .LVU3397
 12589 008e 4FF0FF34 		mov	r4, #-1
 12590              	.LVL1428:
7638:Core/Src/bno055.c ****             }
 12591              		.loc 1 7638 26 view .LVU3398
 12592 0092 F6E7     		b	.L917
 12593              	.LVL1429:
 12594              	.L924:
7650:Core/Src/bno055.c ****     }
 12595              		.loc 1 7650 9 is_stmt 1 view .LVU3399
7650:Core/Src/bno055.c ****     }
 12596              		.loc 1 7650 21 is_stmt 0 view .LVU3400
 12597 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 12598              	.LVL1430:
7650:Core/Src/bno055.c ****     }
 12599              		.loc 1 7650 18 view .LVU3401
 12600 0098 54FA80F0 		uxtab	r0, r4, r0
 12601 009c 44B2     		sxtb	r4, r0
 12602              	.LVL1431:
7650:Core/Src/bno055.c ****     }
 12603              		.loc 1 7650 18 view .LVU3402
 12604 009e F3E7     		b	.L916
 12605              	.LVL1432:
 12606              	.L919:
7606:Core/Src/bno055.c ****     }
 12607              		.loc 1 7606 16 view .LVU3403
 12608 00a0 6FF07E04 		mvn	r4, #126
 12609 00a4 F0E7     		b	.L916
 12610              	.L926:
 12611 00a6 00BF     		.align	2
 12612              	.L925:
 12613 00a8 00000000 		.word	.LANCHOR0
 12614              		.cfi_endproc
 12615              	.LFE136:
 12617              		.section	.text.bno055_convert_float_gyro_x_dps,"ax",%progbits
 12618              		.align	1
 12619              		.global	bno055_convert_float_gyro_x_dps
 12620              		.syntax unified
 12621              		.thumb
 12622              		.thumb_func
 12624              	bno055_convert_float_gyro_x_dps:
 12625              	.LVL1433:
 12626              	.LFB53:
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12627              		.loc 1 3452 1 is_stmt 1 view -0
 12628              		.cfi_startproc
 12629              		@ args = 0, pretend = 0, frame = 8
 12630              		@ frame_needed = 0, uses_anonymous_args = 0
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12631              		.loc 1 3452 1 is_stmt 0 view .LVU3405
 12632 0000 30B5     		push	{r4, r5, lr}
 12633              	.LCFI421:
 12634              		.cfi_def_cfa_offset 12
 12635              		.cfi_offset 4, -12
 12636              		.cfi_offset 5, -8
 12637              		.cfi_offset 14, -4
 12638 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc9kYR4Z.s 			page 391


 12639              	.LCFI422:
 12640              		.cfi_def_cfa_offset 24
 12641 0004 0546     		mov	r5, r0
3455:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12642              		.loc 1 3455 5 is_stmt 1 view .LVU3406
 12643              	.LVL1434:
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12644              		.loc 1 3456 5 view .LVU3407
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12645              		.loc 1 3456 9 is_stmt 0 view .LVU3408
 12646 0006 0023     		movs	r3, #0
 12647 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3457:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12648              		.loc 1 3457 5 is_stmt 1 view .LVU3409
 12649              	.LVL1435:
3458:Core/Src/bno055.c **** 
 12650              		.loc 1 3458 5 view .LVU3410
3458:Core/Src/bno055.c **** 
 12651              		.loc 1 3458 8 is_stmt 0 view .LVU3411
 12652 000c 8DF80530 		strb	r3, [sp, #5]
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12653              		.loc 1 3462 5 is_stmt 1 view .LVU3412
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12654              		.loc 1 3462 16 is_stmt 0 view .LVU3413
 12655 0010 0DF10500 		add	r0, sp, #5
 12656              	.LVL1436:
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12657              		.loc 1 3462 16 view .LVU3414
 12658 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12659              	.LVL1437:
 12660 0018 0446     		mov	r4, r0
 12661              	.LVL1438:
3463:Core/Src/bno055.c ****     {
 12662              		.loc 1 3463 5 is_stmt 1 view .LVU3415
3463:Core/Src/bno055.c ****     {
 12663              		.loc 1 3463 22 is_stmt 0 view .LVU3416
 12664 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3463:Core/Src/bno055.c ****     {
 12665              		.loc 1 3463 8 view .LVU3417
 12666 001e B3B9     		cbnz	r3, .L933
 12667              	.L928:
3467:Core/Src/bno055.c ****     {
 12668              		.loc 1 3467 5 is_stmt 1 view .LVU3418
3467:Core/Src/bno055.c ****     {
 12669              		.loc 1 3467 8 is_stmt 0 view .LVU3419
 12670 0020 E4B9     		cbnz	r4, .L930
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12671              		.loc 1 3470 9 is_stmt 1 view .LVU3420
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12672              		.loc 1 3470 21 is_stmt 0 view .LVU3421
 12673 0022 0DF10600 		add	r0, sp, #6
 12674 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 12675              	.LVL1439:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12676              		.loc 1 3470 18 view .LVU3422
 12677 002a 54FA80F4 		uxtab	r4, r4, r0
 12678              	.LVL1440:
ARM GAS  /tmp/cc9kYR4Z.s 			page 392


3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12679              		.loc 1 3470 18 view .LVU3423
 12680 002e 64B2     		sxtb	r4, r4
 12681              	.LVL1441:
3471:Core/Src/bno055.c ****         {
 12682              		.loc 1 3471 9 is_stmt 1 view .LVU3424
3471:Core/Src/bno055.c ****         {
 12683              		.loc 1 3471 12 is_stmt 0 view .LVU3425
 12684 0030 BCB9     		cbnz	r4, .L931
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12685              		.loc 1 3474 13 is_stmt 1 view .LVU3426
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12686              		.loc 1 3474 45 is_stmt 0 view .LVU3427
 12687 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12688 0036 FFF7FEFF 		bl	__aeabi_i2d
 12689              	.LVL1442:
 12690 003a 0022     		movs	r2, #0
 12691 003c 0A4B     		ldr	r3, .L934
 12692 003e FFF7FEFF 		bl	__aeabi_dmul
 12693              	.LVL1443:
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12694              		.loc 1 3474 20 view .LVU3428
 12695 0042 FFF7FEFF 		bl	__aeabi_d2f
 12696              	.LVL1444:
3475:Core/Src/bno055.c ****         }
 12697              		.loc 1 3475 13 is_stmt 1 view .LVU3429
3475:Core/Src/bno055.c ****         }
 12698              		.loc 1 3475 23 is_stmt 0 view .LVU3430
 12699 0046 2860     		str	r0, [r5]	@ float
 12700              	.LVL1445:
 12701              	.L929:
3487:Core/Src/bno055.c **** }
 12702              		.loc 1 3487 5 is_stmt 1 view .LVU3431
3488:Core/Src/bno055.c **** 
 12703              		.loc 1 3488 1 is_stmt 0 view .LVU3432
 12704 0048 2046     		mov	r0, r4
 12705 004a 03B0     		add	sp, sp, #12
 12706              	.LCFI423:
 12707              		.cfi_remember_state
 12708              		.cfi_def_cfa_offset 12
 12709              		@ sp needed
 12710 004c 30BD     		pop	{r4, r5, pc}
 12711              	.LVL1446:
 12712              	.L933:
 12713              	.LCFI424:
 12714              		.cfi_restore_state
3465:Core/Src/bno055.c ****     }
 12715              		.loc 1 3465 9 is_stmt 1 view .LVU3433
3465:Core/Src/bno055.c ****     }
 12716              		.loc 1 3465 21 is_stmt 0 view .LVU3434
 12717 004e 0020     		movs	r0, #0
 12718 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12719              	.LVL1447:
3465:Core/Src/bno055.c ****     }
 12720              		.loc 1 3465 18 view .LVU3435
 12721 0054 54FA80F4 		uxtab	r4, r4, r0
 12722              	.LVL1448:
ARM GAS  /tmp/cc9kYR4Z.s 			page 393


3465:Core/Src/bno055.c ****     }
 12723              		.loc 1 3465 18 view .LVU3436
 12724 0058 64B2     		sxtb	r4, r4
 12725              	.LVL1449:
3465:Core/Src/bno055.c ****     }
 12726              		.loc 1 3465 18 view .LVU3437
 12727 005a E1E7     		b	.L928
 12728              	.L930:
3484:Core/Src/bno055.c ****     }
 12729              		.loc 1 3484 18 view .LVU3438
 12730 005c 4FF0FF34 		mov	r4, #-1
 12731              	.LVL1450:
3484:Core/Src/bno055.c ****     }
 12732              		.loc 1 3484 18 view .LVU3439
 12733 0060 F2E7     		b	.L929
 12734              	.LVL1451:
 12735              	.L931:
3479:Core/Src/bno055.c ****         }
 12736              		.loc 1 3479 22 view .LVU3440
 12737 0062 4FF0FF34 		mov	r4, #-1
 12738              	.LVL1452:
3479:Core/Src/bno055.c ****         }
 12739              		.loc 1 3479 22 view .LVU3441
 12740 0066 EFE7     		b	.L929
 12741              	.L935:
 12742              		.align	2
 12743              	.L934:
 12744 0068 0000B03F 		.word	1068498944
 12745              		.cfi_endproc
 12746              	.LFE53:
 12748              		.section	.text.bno055_convert_float_gyro_x_rps,"ax",%progbits
 12749              		.align	1
 12750              		.global	bno055_convert_float_gyro_x_rps
 12751              		.syntax unified
 12752              		.thumb
 12753              		.thumb_func
 12755              	bno055_convert_float_gyro_x_rps:
 12756              	.LVL1453:
 12757              	.LFB54:
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12758              		.loc 1 3504 1 is_stmt 1 view -0
 12759              		.cfi_startproc
 12760              		@ args = 0, pretend = 0, frame = 8
 12761              		@ frame_needed = 0, uses_anonymous_args = 0
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12762              		.loc 1 3504 1 is_stmt 0 view .LVU3443
 12763 0000 30B5     		push	{r4, r5, lr}
 12764              	.LCFI425:
 12765              		.cfi_def_cfa_offset 12
 12766              		.cfi_offset 4, -12
 12767              		.cfi_offset 5, -8
 12768              		.cfi_offset 14, -4
 12769 0002 83B0     		sub	sp, sp, #12
 12770              	.LCFI426:
 12771              		.cfi_def_cfa_offset 24
 12772 0004 0546     		mov	r5, r0
3507:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 394


 12773              		.loc 1 3507 5 is_stmt 1 view .LVU3444
 12774              	.LVL1454:
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12775              		.loc 1 3508 5 view .LVU3445
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12776              		.loc 1 3508 9 is_stmt 0 view .LVU3446
 12777 0006 0023     		movs	r3, #0
 12778 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3509:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12779              		.loc 1 3509 5 is_stmt 1 view .LVU3447
 12780              	.LVL1455:
3510:Core/Src/bno055.c **** 
 12781              		.loc 1 3510 5 view .LVU3448
3510:Core/Src/bno055.c **** 
 12782              		.loc 1 3510 8 is_stmt 0 view .LVU3449
 12783 000c 8DF80530 		strb	r3, [sp, #5]
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12784              		.loc 1 3514 5 is_stmt 1 view .LVU3450
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12785              		.loc 1 3514 16 is_stmt 0 view .LVU3451
 12786 0010 0DF10500 		add	r0, sp, #5
 12787              	.LVL1456:
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12788              		.loc 1 3514 16 view .LVU3452
 12789 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12790              	.LVL1457:
 12791 0018 0446     		mov	r4, r0
 12792              	.LVL1458:
3515:Core/Src/bno055.c ****     {
 12793              		.loc 1 3515 5 is_stmt 1 view .LVU3453
3515:Core/Src/bno055.c ****     {
 12794              		.loc 1 3515 22 is_stmt 0 view .LVU3454
 12795 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3515:Core/Src/bno055.c ****     {
 12796              		.loc 1 3515 8 view .LVU3455
 12797 001e 012B     		cmp	r3, #1
 12798 0020 16D1     		bne	.L942
 12799              	.L937:
3519:Core/Src/bno055.c ****     {
 12800              		.loc 1 3519 5 is_stmt 1 view .LVU3456
3519:Core/Src/bno055.c ****     {
 12801              		.loc 1 3519 8 is_stmt 0 view .LVU3457
 12802 0022 E4B9     		cbnz	r4, .L939
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12803              		.loc 1 3522 9 is_stmt 1 view .LVU3458
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12804              		.loc 1 3522 21 is_stmt 0 view .LVU3459
 12805 0024 0DF10600 		add	r0, sp, #6
 12806 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 12807              	.LVL1459:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12808              		.loc 1 3522 18 view .LVU3460
 12809 002c 54FA80F4 		uxtab	r4, r4, r0
 12810              	.LVL1460:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12811              		.loc 1 3522 18 view .LVU3461
 12812 0030 64B2     		sxtb	r4, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 395


 12813              	.LVL1461:
3523:Core/Src/bno055.c ****         {
 12814              		.loc 1 3523 9 is_stmt 1 view .LVU3462
3523:Core/Src/bno055.c ****         {
 12815              		.loc 1 3523 12 is_stmt 0 view .LVU3463
 12816 0032 BCB9     		cbnz	r4, .L940
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12817              		.loc 1 3526 13 is_stmt 1 view .LVU3464
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12818              		.loc 1 3526 45 is_stmt 0 view .LVU3465
 12819 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12820 0038 FFF7FEFF 		bl	__aeabi_i2d
 12821              	.LVL1462:
 12822 003c 0022     		movs	r2, #0
 12823 003e 0B4B     		ldr	r3, .L943
 12824 0040 FFF7FEFF 		bl	__aeabi_ddiv
 12825              	.LVL1463:
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12826              		.loc 1 3526 20 view .LVU3466
 12827 0044 FFF7FEFF 		bl	__aeabi_d2f
 12828              	.LVL1464:
3527:Core/Src/bno055.c ****         }
 12829              		.loc 1 3527 13 is_stmt 1 view .LVU3467
3527:Core/Src/bno055.c ****         }
 12830              		.loc 1 3527 23 is_stmt 0 view .LVU3468
 12831 0048 2860     		str	r0, [r5]	@ float
 12832              	.LVL1465:
 12833              	.L938:
3539:Core/Src/bno055.c **** }
 12834              		.loc 1 3539 5 is_stmt 1 view .LVU3469
3540:Core/Src/bno055.c **** 
 12835              		.loc 1 3540 1 is_stmt 0 view .LVU3470
 12836 004a 2046     		mov	r0, r4
 12837 004c 03B0     		add	sp, sp, #12
 12838              	.LCFI427:
 12839              		.cfi_remember_state
 12840              		.cfi_def_cfa_offset 12
 12841              		@ sp needed
 12842 004e 30BD     		pop	{r4, r5, pc}
 12843              	.LVL1466:
 12844              	.L942:
 12845              	.LCFI428:
 12846              		.cfi_restore_state
3517:Core/Src/bno055.c ****     }
 12847              		.loc 1 3517 9 is_stmt 1 view .LVU3471
3517:Core/Src/bno055.c ****     }
 12848              		.loc 1 3517 21 is_stmt 0 view .LVU3472
 12849 0050 0120     		movs	r0, #1
 12850 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 12851              	.LVL1467:
3517:Core/Src/bno055.c ****     }
 12852              		.loc 1 3517 18 view .LVU3473
 12853 0056 54FA80F4 		uxtab	r4, r4, r0
 12854              	.LVL1468:
3517:Core/Src/bno055.c ****     }
 12855              		.loc 1 3517 18 view .LVU3474
 12856 005a 64B2     		sxtb	r4, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 396


 12857              	.LVL1469:
3517:Core/Src/bno055.c ****     }
 12858              		.loc 1 3517 18 view .LVU3475
 12859 005c E1E7     		b	.L937
 12860              	.L939:
3536:Core/Src/bno055.c ****     }
 12861              		.loc 1 3536 18 view .LVU3476
 12862 005e 4FF0FF34 		mov	r4, #-1
 12863              	.LVL1470:
3536:Core/Src/bno055.c ****     }
 12864              		.loc 1 3536 18 view .LVU3477
 12865 0062 F2E7     		b	.L938
 12866              	.LVL1471:
 12867              	.L940:
3531:Core/Src/bno055.c ****         }
 12868              		.loc 1 3531 22 view .LVU3478
 12869 0064 4FF0FF34 		mov	r4, #-1
 12870              	.LVL1472:
3531:Core/Src/bno055.c ****         }
 12871              		.loc 1 3531 22 view .LVU3479
 12872 0068 EFE7     		b	.L938
 12873              	.L944:
 12874 006a 00BF     		.align	2
 12875              	.L943:
 12876 006c 00208C40 		.word	1082925056
 12877              		.cfi_endproc
 12878              	.LFE54:
 12880              		.section	.text.bno055_convert_float_gyro_y_dps,"ax",%progbits
 12881              		.align	1
 12882              		.global	bno055_convert_float_gyro_y_dps
 12883              		.syntax unified
 12884              		.thumb
 12885              		.thumb_func
 12887              	bno055_convert_float_gyro_y_dps:
 12888              	.LVL1473:
 12889              	.LFB55:
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 12890              		.loc 1 3556 1 is_stmt 1 view -0
 12891              		.cfi_startproc
 12892              		@ args = 0, pretend = 0, frame = 8
 12893              		@ frame_needed = 0, uses_anonymous_args = 0
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 12894              		.loc 1 3556 1 is_stmt 0 view .LVU3481
 12895 0000 30B5     		push	{r4, r5, lr}
 12896              	.LCFI429:
 12897              		.cfi_def_cfa_offset 12
 12898              		.cfi_offset 4, -12
 12899              		.cfi_offset 5, -8
 12900              		.cfi_offset 14, -4
 12901 0002 83B0     		sub	sp, sp, #12
 12902              	.LCFI430:
 12903              		.cfi_def_cfa_offset 24
 12904 0004 0546     		mov	r5, r0
3559:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 12905              		.loc 1 3559 5 is_stmt 1 view .LVU3482
 12906              	.LVL1474:
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 397


 12907              		.loc 1 3560 5 view .LVU3483
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12908              		.loc 1 3560 9 is_stmt 0 view .LVU3484
 12909 0006 0023     		movs	r3, #0
 12910 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3561:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12911              		.loc 1 3561 5 is_stmt 1 view .LVU3485
 12912              	.LVL1475:
3562:Core/Src/bno055.c **** 
 12913              		.loc 1 3562 5 view .LVU3486
3562:Core/Src/bno055.c **** 
 12914              		.loc 1 3562 8 is_stmt 0 view .LVU3487
 12915 000c 8DF80530 		strb	r3, [sp, #5]
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12916              		.loc 1 3566 5 is_stmt 1 view .LVU3488
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12917              		.loc 1 3566 16 is_stmt 0 view .LVU3489
 12918 0010 0DF10500 		add	r0, sp, #5
 12919              	.LVL1476:
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12920              		.loc 1 3566 16 view .LVU3490
 12921 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12922              	.LVL1477:
 12923 0018 0446     		mov	r4, r0
 12924              	.LVL1478:
3567:Core/Src/bno055.c ****     {
 12925              		.loc 1 3567 5 is_stmt 1 view .LVU3491
3567:Core/Src/bno055.c ****     {
 12926              		.loc 1 3567 22 is_stmt 0 view .LVU3492
 12927 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3567:Core/Src/bno055.c ****     {
 12928              		.loc 1 3567 8 view .LVU3493
 12929 001e B3B9     		cbnz	r3, .L951
 12930              	.L946:
3571:Core/Src/bno055.c ****     {
 12931              		.loc 1 3571 5 is_stmt 1 view .LVU3494
3571:Core/Src/bno055.c ****     {
 12932              		.loc 1 3571 8 is_stmt 0 view .LVU3495
 12933 0020 E4B9     		cbnz	r4, .L948
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12934              		.loc 1 3574 9 is_stmt 1 view .LVU3496
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12935              		.loc 1 3574 21 is_stmt 0 view .LVU3497
 12936 0022 0DF10600 		add	r0, sp, #6
 12937 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 12938              	.LVL1479:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12939              		.loc 1 3574 18 view .LVU3498
 12940 002a 54FA80F4 		uxtab	r4, r4, r0
 12941              	.LVL1480:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12942              		.loc 1 3574 18 view .LVU3499
 12943 002e 64B2     		sxtb	r4, r4
 12944              	.LVL1481:
3575:Core/Src/bno055.c ****         {
 12945              		.loc 1 3575 9 is_stmt 1 view .LVU3500
3575:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 398


 12946              		.loc 1 3575 12 is_stmt 0 view .LVU3501
 12947 0030 BCB9     		cbnz	r4, .L949
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12948              		.loc 1 3578 13 is_stmt 1 view .LVU3502
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12949              		.loc 1 3578 45 is_stmt 0 view .LVU3503
 12950 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12951 0036 FFF7FEFF 		bl	__aeabi_i2d
 12952              	.LVL1482:
 12953 003a 0022     		movs	r2, #0
 12954 003c 0A4B     		ldr	r3, .L952
 12955 003e FFF7FEFF 		bl	__aeabi_dmul
 12956              	.LVL1483:
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12957              		.loc 1 3578 20 view .LVU3504
 12958 0042 FFF7FEFF 		bl	__aeabi_d2f
 12959              	.LVL1484:
3579:Core/Src/bno055.c ****         }
 12960              		.loc 1 3579 13 is_stmt 1 view .LVU3505
3579:Core/Src/bno055.c ****         }
 12961              		.loc 1 3579 23 is_stmt 0 view .LVU3506
 12962 0046 2860     		str	r0, [r5]	@ float
 12963              	.LVL1485:
 12964              	.L947:
3591:Core/Src/bno055.c **** }
 12965              		.loc 1 3591 5 is_stmt 1 view .LVU3507
3592:Core/Src/bno055.c **** 
 12966              		.loc 1 3592 1 is_stmt 0 view .LVU3508
 12967 0048 2046     		mov	r0, r4
 12968 004a 03B0     		add	sp, sp, #12
 12969              	.LCFI431:
 12970              		.cfi_remember_state
 12971              		.cfi_def_cfa_offset 12
 12972              		@ sp needed
 12973 004c 30BD     		pop	{r4, r5, pc}
 12974              	.LVL1486:
 12975              	.L951:
 12976              	.LCFI432:
 12977              		.cfi_restore_state
3569:Core/Src/bno055.c ****     }
 12978              		.loc 1 3569 9 is_stmt 1 view .LVU3509
3569:Core/Src/bno055.c ****     }
 12979              		.loc 1 3569 21 is_stmt 0 view .LVU3510
 12980 004e 0020     		movs	r0, #0
 12981 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12982              	.LVL1487:
3569:Core/Src/bno055.c ****     }
 12983              		.loc 1 3569 18 view .LVU3511
 12984 0054 54FA80F4 		uxtab	r4, r4, r0
 12985              	.LVL1488:
3569:Core/Src/bno055.c ****     }
 12986              		.loc 1 3569 18 view .LVU3512
 12987 0058 64B2     		sxtb	r4, r4
 12988              	.LVL1489:
3569:Core/Src/bno055.c ****     }
 12989              		.loc 1 3569 18 view .LVU3513
 12990 005a E1E7     		b	.L946
ARM GAS  /tmp/cc9kYR4Z.s 			page 399


 12991              	.L948:
3588:Core/Src/bno055.c ****     }
 12992              		.loc 1 3588 18 view .LVU3514
 12993 005c 4FF0FF34 		mov	r4, #-1
 12994              	.LVL1490:
3588:Core/Src/bno055.c ****     }
 12995              		.loc 1 3588 18 view .LVU3515
 12996 0060 F2E7     		b	.L947
 12997              	.LVL1491:
 12998              	.L949:
3583:Core/Src/bno055.c ****         }
 12999              		.loc 1 3583 22 view .LVU3516
 13000 0062 4FF0FF34 		mov	r4, #-1
 13001              	.LVL1492:
3583:Core/Src/bno055.c ****         }
 13002              		.loc 1 3583 22 view .LVU3517
 13003 0066 EFE7     		b	.L947
 13004              	.L953:
 13005              		.align	2
 13006              	.L952:
 13007 0068 0000B03F 		.word	1068498944
 13008              		.cfi_endproc
 13009              	.LFE55:
 13011              		.section	.text.bno055_convert_float_gyro_y_rps,"ax",%progbits
 13012              		.align	1
 13013              		.global	bno055_convert_float_gyro_y_rps
 13014              		.syntax unified
 13015              		.thumb
 13016              		.thumb_func
 13018              	bno055_convert_float_gyro_y_rps:
 13019              	.LVL1493:
 13020              	.LFB56:
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 13021              		.loc 1 3609 1 is_stmt 1 view -0
 13022              		.cfi_startproc
 13023              		@ args = 0, pretend = 0, frame = 8
 13024              		@ frame_needed = 0, uses_anonymous_args = 0
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 13025              		.loc 1 3609 1 is_stmt 0 view .LVU3519
 13026 0000 30B5     		push	{r4, r5, lr}
 13027              	.LCFI433:
 13028              		.cfi_def_cfa_offset 12
 13029              		.cfi_offset 4, -12
 13030              		.cfi_offset 5, -8
 13031              		.cfi_offset 14, -4
 13032 0002 83B0     		sub	sp, sp, #12
 13033              	.LCFI434:
 13034              		.cfi_def_cfa_offset 24
 13035 0004 0546     		mov	r5, r0
3612:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 13036              		.loc 1 3612 5 is_stmt 1 view .LVU3520
 13037              	.LVL1494:
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13038              		.loc 1 3613 5 view .LVU3521
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13039              		.loc 1 3613 9 is_stmt 0 view .LVU3522
 13040 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 400


 13041 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3614:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13042              		.loc 1 3614 5 is_stmt 1 view .LVU3523
 13043              	.LVL1495:
3615:Core/Src/bno055.c **** 
 13044              		.loc 1 3615 5 view .LVU3524
3615:Core/Src/bno055.c **** 
 13045              		.loc 1 3615 8 is_stmt 0 view .LVU3525
 13046 000c 8DF80530 		strb	r3, [sp, #5]
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13047              		.loc 1 3619 5 is_stmt 1 view .LVU3526
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13048              		.loc 1 3619 16 is_stmt 0 view .LVU3527
 13049 0010 0DF10500 		add	r0, sp, #5
 13050              	.LVL1496:
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13051              		.loc 1 3619 16 view .LVU3528
 13052 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13053              	.LVL1497:
 13054 0018 0446     		mov	r4, r0
 13055              	.LVL1498:
3620:Core/Src/bno055.c ****     {
 13056              		.loc 1 3620 5 is_stmt 1 view .LVU3529
3620:Core/Src/bno055.c ****     {
 13057              		.loc 1 3620 22 is_stmt 0 view .LVU3530
 13058 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3620:Core/Src/bno055.c ****     {
 13059              		.loc 1 3620 8 view .LVU3531
 13060 001e 012B     		cmp	r3, #1
 13061 0020 16D1     		bne	.L960
 13062              	.L955:
3624:Core/Src/bno055.c ****     {
 13063              		.loc 1 3624 5 is_stmt 1 view .LVU3532
3624:Core/Src/bno055.c ****     {
 13064              		.loc 1 3624 8 is_stmt 0 view .LVU3533
 13065 0022 E4B9     		cbnz	r4, .L957
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13066              		.loc 1 3627 9 is_stmt 1 view .LVU3534
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13067              		.loc 1 3627 21 is_stmt 0 view .LVU3535
 13068 0024 0DF10600 		add	r0, sp, #6
 13069 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 13070              	.LVL1499:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13071              		.loc 1 3627 18 view .LVU3536
 13072 002c 54FA80F4 		uxtab	r4, r4, r0
 13073              	.LVL1500:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13074              		.loc 1 3627 18 view .LVU3537
 13075 0030 64B2     		sxtb	r4, r4
 13076              	.LVL1501:
3628:Core/Src/bno055.c ****         {
 13077              		.loc 1 3628 9 is_stmt 1 view .LVU3538
3628:Core/Src/bno055.c ****         {
 13078              		.loc 1 3628 12 is_stmt 0 view .LVU3539
 13079 0032 BCB9     		cbnz	r4, .L958
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
ARM GAS  /tmp/cc9kYR4Z.s 			page 401


 13080              		.loc 1 3631 13 is_stmt 1 view .LVU3540
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13081              		.loc 1 3631 45 is_stmt 0 view .LVU3541
 13082 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13083 0038 FFF7FEFF 		bl	__aeabi_i2d
 13084              	.LVL1502:
 13085 003c 0022     		movs	r2, #0
 13086 003e 0B4B     		ldr	r3, .L961
 13087 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13088              	.LVL1503:
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13089              		.loc 1 3631 20 view .LVU3542
 13090 0044 FFF7FEFF 		bl	__aeabi_d2f
 13091              	.LVL1504:
3632:Core/Src/bno055.c ****         }
 13092              		.loc 1 3632 13 is_stmt 1 view .LVU3543
3632:Core/Src/bno055.c ****         }
 13093              		.loc 1 3632 23 is_stmt 0 view .LVU3544
 13094 0048 2860     		str	r0, [r5]	@ float
 13095              	.LVL1505:
 13096              	.L956:
3644:Core/Src/bno055.c **** }
 13097              		.loc 1 3644 5 is_stmt 1 view .LVU3545
3645:Core/Src/bno055.c **** 
 13098              		.loc 1 3645 1 is_stmt 0 view .LVU3546
 13099 004a 2046     		mov	r0, r4
 13100 004c 03B0     		add	sp, sp, #12
 13101              	.LCFI435:
 13102              		.cfi_remember_state
 13103              		.cfi_def_cfa_offset 12
 13104              		@ sp needed
 13105 004e 30BD     		pop	{r4, r5, pc}
 13106              	.LVL1506:
 13107              	.L960:
 13108              	.LCFI436:
 13109              		.cfi_restore_state
3622:Core/Src/bno055.c ****     }
 13110              		.loc 1 3622 9 is_stmt 1 view .LVU3547
3622:Core/Src/bno055.c ****     }
 13111              		.loc 1 3622 21 is_stmt 0 view .LVU3548
 13112 0050 0120     		movs	r0, #1
 13113 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 13114              	.LVL1507:
3622:Core/Src/bno055.c ****     }
 13115              		.loc 1 3622 18 view .LVU3549
 13116 0056 54FA80F4 		uxtab	r4, r4, r0
 13117              	.LVL1508:
3622:Core/Src/bno055.c ****     }
 13118              		.loc 1 3622 18 view .LVU3550
 13119 005a 64B2     		sxtb	r4, r4
 13120              	.LVL1509:
3622:Core/Src/bno055.c ****     }
 13121              		.loc 1 3622 18 view .LVU3551
 13122 005c E1E7     		b	.L955
 13123              	.L957:
3641:Core/Src/bno055.c ****     }
 13124              		.loc 1 3641 18 view .LVU3552
ARM GAS  /tmp/cc9kYR4Z.s 			page 402


 13125 005e 4FF0FF34 		mov	r4, #-1
 13126              	.LVL1510:
3641:Core/Src/bno055.c ****     }
 13127              		.loc 1 3641 18 view .LVU3553
 13128 0062 F2E7     		b	.L956
 13129              	.LVL1511:
 13130              	.L958:
3636:Core/Src/bno055.c ****         }
 13131              		.loc 1 3636 22 view .LVU3554
 13132 0064 4FF0FF34 		mov	r4, #-1
 13133              	.LVL1512:
3636:Core/Src/bno055.c ****         }
 13134              		.loc 1 3636 22 view .LVU3555
 13135 0068 EFE7     		b	.L956
 13136              	.L962:
 13137 006a 00BF     		.align	2
 13138              	.L961:
 13139 006c 00208C40 		.word	1082925056
 13140              		.cfi_endproc
 13141              	.LFE56:
 13143              		.section	.text.bno055_convert_float_gyro_z_dps,"ax",%progbits
 13144              		.align	1
 13145              		.global	bno055_convert_float_gyro_z_dps
 13146              		.syntax unified
 13147              		.thumb
 13148              		.thumb_func
 13150              	bno055_convert_float_gyro_z_dps:
 13151              	.LVL1513:
 13152              	.LFB57:
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 13153              		.loc 1 3661 1 is_stmt 1 view -0
 13154              		.cfi_startproc
 13155              		@ args = 0, pretend = 0, frame = 8
 13156              		@ frame_needed = 0, uses_anonymous_args = 0
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 13157              		.loc 1 3661 1 is_stmt 0 view .LVU3557
 13158 0000 30B5     		push	{r4, r5, lr}
 13159              	.LCFI437:
 13160              		.cfi_def_cfa_offset 12
 13161              		.cfi_offset 4, -12
 13162              		.cfi_offset 5, -8
 13163              		.cfi_offset 14, -4
 13164 0002 83B0     		sub	sp, sp, #12
 13165              	.LCFI438:
 13166              		.cfi_def_cfa_offset 24
 13167 0004 0546     		mov	r5, r0
3664:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13168              		.loc 1 3664 5 is_stmt 1 view .LVU3558
 13169              	.LVL1514:
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13170              		.loc 1 3665 5 view .LVU3559
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13171              		.loc 1 3665 9 is_stmt 0 view .LVU3560
 13172 0006 0023     		movs	r3, #0
 13173 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3666:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13174              		.loc 1 3666 5 is_stmt 1 view .LVU3561
ARM GAS  /tmp/cc9kYR4Z.s 			page 403


 13175              	.LVL1515:
3667:Core/Src/bno055.c **** 
 13176              		.loc 1 3667 5 view .LVU3562
3667:Core/Src/bno055.c **** 
 13177              		.loc 1 3667 8 is_stmt 0 view .LVU3563
 13178 000c 8DF80530 		strb	r3, [sp, #5]
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13179              		.loc 1 3671 5 is_stmt 1 view .LVU3564
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13180              		.loc 1 3671 16 is_stmt 0 view .LVU3565
 13181 0010 0DF10500 		add	r0, sp, #5
 13182              	.LVL1516:
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13183              		.loc 1 3671 16 view .LVU3566
 13184 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13185              	.LVL1517:
 13186 0018 0446     		mov	r4, r0
 13187              	.LVL1518:
3672:Core/Src/bno055.c ****     {
 13188              		.loc 1 3672 5 is_stmt 1 view .LVU3567
3672:Core/Src/bno055.c ****     {
 13189              		.loc 1 3672 22 is_stmt 0 view .LVU3568
 13190 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3672:Core/Src/bno055.c ****     {
 13191              		.loc 1 3672 8 view .LVU3569
 13192 001e B3B9     		cbnz	r3, .L969
 13193              	.L964:
3676:Core/Src/bno055.c ****     {
 13194              		.loc 1 3676 5 is_stmt 1 view .LVU3570
3676:Core/Src/bno055.c ****     {
 13195              		.loc 1 3676 8 is_stmt 0 view .LVU3571
 13196 0020 E4B9     		cbnz	r4, .L966
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13197              		.loc 1 3679 9 is_stmt 1 view .LVU3572
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13198              		.loc 1 3679 21 is_stmt 0 view .LVU3573
 13199 0022 0DF10600 		add	r0, sp, #6
 13200 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 13201              	.LVL1519:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13202              		.loc 1 3679 18 view .LVU3574
 13203 002a 54FA80F4 		uxtab	r4, r4, r0
 13204              	.LVL1520:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13205              		.loc 1 3679 18 view .LVU3575
 13206 002e 64B2     		sxtb	r4, r4
 13207              	.LVL1521:
3680:Core/Src/bno055.c ****         {
 13208              		.loc 1 3680 9 is_stmt 1 view .LVU3576
3680:Core/Src/bno055.c ****         {
 13209              		.loc 1 3680 12 is_stmt 0 view .LVU3577
 13210 0030 BCB9     		cbnz	r4, .L967
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13211              		.loc 1 3683 13 is_stmt 1 view .LVU3578
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13212              		.loc 1 3683 45 is_stmt 0 view .LVU3579
 13213 0032 BDF90600 		ldrsh	r0, [sp, #6]
ARM GAS  /tmp/cc9kYR4Z.s 			page 404


 13214 0036 FFF7FEFF 		bl	__aeabi_i2d
 13215              	.LVL1522:
 13216 003a 0022     		movs	r2, #0
 13217 003c 0A4B     		ldr	r3, .L970
 13218 003e FFF7FEFF 		bl	__aeabi_dmul
 13219              	.LVL1523:
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13220              		.loc 1 3683 20 view .LVU3580
 13221 0042 FFF7FEFF 		bl	__aeabi_d2f
 13222              	.LVL1524:
3684:Core/Src/bno055.c ****         }
 13223              		.loc 1 3684 13 is_stmt 1 view .LVU3581
3684:Core/Src/bno055.c ****         }
 13224              		.loc 1 3684 23 is_stmt 0 view .LVU3582
 13225 0046 2860     		str	r0, [r5]	@ float
 13226              	.LVL1525:
 13227              	.L965:
3696:Core/Src/bno055.c **** }
 13228              		.loc 1 3696 5 is_stmt 1 view .LVU3583
3697:Core/Src/bno055.c **** 
 13229              		.loc 1 3697 1 is_stmt 0 view .LVU3584
 13230 0048 2046     		mov	r0, r4
 13231 004a 03B0     		add	sp, sp, #12
 13232              	.LCFI439:
 13233              		.cfi_remember_state
 13234              		.cfi_def_cfa_offset 12
 13235              		@ sp needed
 13236 004c 30BD     		pop	{r4, r5, pc}
 13237              	.LVL1526:
 13238              	.L969:
 13239              	.LCFI440:
 13240              		.cfi_restore_state
3674:Core/Src/bno055.c ****     }
 13241              		.loc 1 3674 9 is_stmt 1 view .LVU3585
3674:Core/Src/bno055.c ****     }
 13242              		.loc 1 3674 21 is_stmt 0 view .LVU3586
 13243 004e 0020     		movs	r0, #0
 13244 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13245              	.LVL1527:
3674:Core/Src/bno055.c ****     }
 13246              		.loc 1 3674 18 view .LVU3587
 13247 0054 54FA80F4 		uxtab	r4, r4, r0
 13248              	.LVL1528:
3674:Core/Src/bno055.c ****     }
 13249              		.loc 1 3674 18 view .LVU3588
 13250 0058 64B2     		sxtb	r4, r4
 13251              	.LVL1529:
3674:Core/Src/bno055.c ****     }
 13252              		.loc 1 3674 18 view .LVU3589
 13253 005a E1E7     		b	.L964
 13254              	.L966:
3693:Core/Src/bno055.c ****     }
 13255              		.loc 1 3693 18 view .LVU3590
 13256 005c 4FF0FF34 		mov	r4, #-1
 13257              	.LVL1530:
3693:Core/Src/bno055.c ****     }
 13258              		.loc 1 3693 18 view .LVU3591
ARM GAS  /tmp/cc9kYR4Z.s 			page 405


 13259 0060 F2E7     		b	.L965
 13260              	.LVL1531:
 13261              	.L967:
3688:Core/Src/bno055.c ****         }
 13262              		.loc 1 3688 22 view .LVU3592
 13263 0062 4FF0FF34 		mov	r4, #-1
 13264              	.LVL1532:
3688:Core/Src/bno055.c ****         }
 13265              		.loc 1 3688 22 view .LVU3593
 13266 0066 EFE7     		b	.L965
 13267              	.L971:
 13268              		.align	2
 13269              	.L970:
 13270 0068 0000B03F 		.word	1068498944
 13271              		.cfi_endproc
 13272              	.LFE57:
 13274              		.section	.text.bno055_convert_float_gyro_z_rps,"ax",%progbits
 13275              		.align	1
 13276              		.global	bno055_convert_float_gyro_z_rps
 13277              		.syntax unified
 13278              		.thumb
 13279              		.thumb_func
 13281              	bno055_convert_float_gyro_z_rps:
 13282              	.LVL1533:
 13283              	.LFB58:
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 13284              		.loc 1 3713 1 is_stmt 1 view -0
 13285              		.cfi_startproc
 13286              		@ args = 0, pretend = 0, frame = 8
 13287              		@ frame_needed = 0, uses_anonymous_args = 0
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 13288              		.loc 1 3713 1 is_stmt 0 view .LVU3595
 13289 0000 30B5     		push	{r4, r5, lr}
 13290              	.LCFI441:
 13291              		.cfi_def_cfa_offset 12
 13292              		.cfi_offset 4, -12
 13293              		.cfi_offset 5, -8
 13294              		.cfi_offset 14, -4
 13295 0002 83B0     		sub	sp, sp, #12
 13296              	.LCFI442:
 13297              		.cfi_def_cfa_offset 24
 13298 0004 0546     		mov	r5, r0
3716:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13299              		.loc 1 3716 5 is_stmt 1 view .LVU3596
 13300              	.LVL1534:
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13301              		.loc 1 3717 5 view .LVU3597
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13302              		.loc 1 3717 9 is_stmt 0 view .LVU3598
 13303 0006 0023     		movs	r3, #0
 13304 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3718:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13305              		.loc 1 3718 5 is_stmt 1 view .LVU3599
 13306              	.LVL1535:
3719:Core/Src/bno055.c **** 
 13307              		.loc 1 3719 5 view .LVU3600
3719:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 406


 13308              		.loc 1 3719 8 is_stmt 0 view .LVU3601
 13309 000c 8DF80530 		strb	r3, [sp, #5]
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13310              		.loc 1 3723 5 is_stmt 1 view .LVU3602
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13311              		.loc 1 3723 16 is_stmt 0 view .LVU3603
 13312 0010 0DF10500 		add	r0, sp, #5
 13313              	.LVL1536:
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13314              		.loc 1 3723 16 view .LVU3604
 13315 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13316              	.LVL1537:
 13317 0018 0446     		mov	r4, r0
 13318              	.LVL1538:
3724:Core/Src/bno055.c ****     {
 13319              		.loc 1 3724 5 is_stmt 1 view .LVU3605
3724:Core/Src/bno055.c ****     {
 13320              		.loc 1 3724 22 is_stmt 0 view .LVU3606
 13321 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3724:Core/Src/bno055.c ****     {
 13322              		.loc 1 3724 8 view .LVU3607
 13323 001e 012B     		cmp	r3, #1
 13324 0020 16D1     		bne	.L978
 13325              	.L973:
3728:Core/Src/bno055.c ****     {
 13326              		.loc 1 3728 5 is_stmt 1 view .LVU3608
3728:Core/Src/bno055.c ****     {
 13327              		.loc 1 3728 8 is_stmt 0 view .LVU3609
 13328 0022 E4B9     		cbnz	r4, .L975
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13329              		.loc 1 3731 9 is_stmt 1 view .LVU3610
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13330              		.loc 1 3731 21 is_stmt 0 view .LVU3611
 13331 0024 0DF10600 		add	r0, sp, #6
 13332 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 13333              	.LVL1539:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13334              		.loc 1 3731 18 view .LVU3612
 13335 002c 54FA80F4 		uxtab	r4, r4, r0
 13336              	.LVL1540:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13337              		.loc 1 3731 18 view .LVU3613
 13338 0030 64B2     		sxtb	r4, r4
 13339              	.LVL1541:
3732:Core/Src/bno055.c ****         {
 13340              		.loc 1 3732 9 is_stmt 1 view .LVU3614
3732:Core/Src/bno055.c ****         {
 13341              		.loc 1 3732 12 is_stmt 0 view .LVU3615
 13342 0032 BCB9     		cbnz	r4, .L976
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13343              		.loc 1 3735 13 is_stmt 1 view .LVU3616
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13344              		.loc 1 3735 45 is_stmt 0 view .LVU3617
 13345 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13346 0038 FFF7FEFF 		bl	__aeabi_i2d
 13347              	.LVL1542:
 13348 003c 0022     		movs	r2, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 407


 13349 003e 0B4B     		ldr	r3, .L979
 13350 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13351              	.LVL1543:
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13352              		.loc 1 3735 20 view .LVU3618
 13353 0044 FFF7FEFF 		bl	__aeabi_d2f
 13354              	.LVL1544:
3736:Core/Src/bno055.c ****         }
 13355              		.loc 1 3736 13 is_stmt 1 view .LVU3619
3736:Core/Src/bno055.c ****         }
 13356              		.loc 1 3736 23 is_stmt 0 view .LVU3620
 13357 0048 2860     		str	r0, [r5]	@ float
 13358              	.LVL1545:
 13359              	.L974:
3748:Core/Src/bno055.c **** }
 13360              		.loc 1 3748 5 is_stmt 1 view .LVU3621
3749:Core/Src/bno055.c **** 
 13361              		.loc 1 3749 1 is_stmt 0 view .LVU3622
 13362 004a 2046     		mov	r0, r4
 13363 004c 03B0     		add	sp, sp, #12
 13364              	.LCFI443:
 13365              		.cfi_remember_state
 13366              		.cfi_def_cfa_offset 12
 13367              		@ sp needed
 13368 004e 30BD     		pop	{r4, r5, pc}
 13369              	.LVL1546:
 13370              	.L978:
 13371              	.LCFI444:
 13372              		.cfi_restore_state
3726:Core/Src/bno055.c ****     }
 13373              		.loc 1 3726 9 is_stmt 1 view .LVU3623
3726:Core/Src/bno055.c ****     }
 13374              		.loc 1 3726 21 is_stmt 0 view .LVU3624
 13375 0050 0120     		movs	r0, #1
 13376 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 13377              	.LVL1547:
3726:Core/Src/bno055.c ****     }
 13378              		.loc 1 3726 18 view .LVU3625
 13379 0056 54FA80F4 		uxtab	r4, r4, r0
 13380              	.LVL1548:
3726:Core/Src/bno055.c ****     }
 13381              		.loc 1 3726 18 view .LVU3626
 13382 005a 64B2     		sxtb	r4, r4
 13383              	.LVL1549:
3726:Core/Src/bno055.c ****     }
 13384              		.loc 1 3726 18 view .LVU3627
 13385 005c E1E7     		b	.L973
 13386              	.L975:
3745:Core/Src/bno055.c ****     }
 13387              		.loc 1 3745 18 view .LVU3628
 13388 005e 4FF0FF34 		mov	r4, #-1
 13389              	.LVL1550:
3745:Core/Src/bno055.c ****     }
 13390              		.loc 1 3745 18 view .LVU3629
 13391 0062 F2E7     		b	.L974
 13392              	.LVL1551:
 13393              	.L976:
ARM GAS  /tmp/cc9kYR4Z.s 			page 408


3740:Core/Src/bno055.c ****         }
 13394              		.loc 1 3740 22 view .LVU3630
 13395 0064 4FF0FF34 		mov	r4, #-1
 13396              	.LVL1552:
3740:Core/Src/bno055.c ****         }
 13397              		.loc 1 3740 22 view .LVU3631
 13398 0068 EFE7     		b	.L974
 13399              	.L980:
 13400 006a 00BF     		.align	2
 13401              	.L979:
 13402 006c 00208C40 		.word	1082925056
 13403              		.cfi_endproc
 13404              	.LFE58:
 13406              		.section	.text.bno055_convert_float_gyro_xyz_dps,"ax",%progbits
 13407              		.align	1
 13408              		.global	bno055_convert_float_gyro_xyz_dps
 13409              		.syntax unified
 13410              		.thumb
 13411              		.thumb_func
 13413              	bno055_convert_float_gyro_xyz_dps:
 13414              	.LVL1553:
 13415              	.LFB59:
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 13416              		.loc 1 3771 1 is_stmt 1 view -0
 13417              		.cfi_startproc
 13418              		@ args = 0, pretend = 0, frame = 16
 13419              		@ frame_needed = 0, uses_anonymous_args = 0
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 13420              		.loc 1 3771 1 is_stmt 0 view .LVU3633
 13421 0000 30B5     		push	{r4, r5, lr}
 13422              	.LCFI445:
 13423              		.cfi_def_cfa_offset 12
 13424              		.cfi_offset 4, -12
 13425              		.cfi_offset 5, -8
 13426              		.cfi_offset 14, -4
 13427 0002 85B0     		sub	sp, sp, #20
 13428              	.LCFI446:
 13429              		.cfi_def_cfa_offset 32
 13430 0004 0546     		mov	r5, r0
3774:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13431              		.loc 1 3774 5 is_stmt 1 view .LVU3634
 13432              	.LVL1554:
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13433              		.loc 1 3775 5 view .LVU3635
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13434              		.loc 1 3775 26 is_stmt 0 view .LVU3636
 13435 0006 0023     		movs	r3, #0
 13436 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13437 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 13438 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3776:Core/Src/bno055.c **** 
 13439              		.loc 1 3776 5 is_stmt 1 view .LVU3637
3776:Core/Src/bno055.c **** 
 13440              		.loc 1 3776 8 is_stmt 0 view .LVU3638
 13441 0014 8DF80730 		strb	r3, [sp, #7]
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13442              		.loc 1 3780 5 is_stmt 1 view .LVU3639
ARM GAS  /tmp/cc9kYR4Z.s 			page 409


3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13443              		.loc 1 3780 16 is_stmt 0 view .LVU3640
 13444 0018 0DF10700 		add	r0, sp, #7
 13445              	.LVL1555:
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13446              		.loc 1 3780 16 view .LVU3641
 13447 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13448              	.LVL1556:
 13449 0020 0446     		mov	r4, r0
 13450              	.LVL1557:
3781:Core/Src/bno055.c ****     {
 13451              		.loc 1 3781 5 is_stmt 1 view .LVU3642
3781:Core/Src/bno055.c ****     {
 13452              		.loc 1 3781 22 is_stmt 0 view .LVU3643
 13453 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3781:Core/Src/bno055.c ****     {
 13454              		.loc 1 3781 8 view .LVU3644
 13455 0026 5BBB     		cbnz	r3, .L987
 13456              	.L982:
3785:Core/Src/bno055.c ****     {
 13457              		.loc 1 3785 5 is_stmt 1 view .LVU3645
3785:Core/Src/bno055.c ****     {
 13458              		.loc 1 3785 8 is_stmt 0 view .LVU3646
 13459 0028 8CBB     		cbnz	r4, .L984
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13460              		.loc 1 3788 9 is_stmt 1 view .LVU3647
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13461              		.loc 1 3788 21 is_stmt 0 view .LVU3648
 13462 002a 02A8     		add	r0, sp, #8
 13463 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 13464              	.LVL1558:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13465              		.loc 1 3788 18 view .LVU3649
 13466 0030 54FA80F4 		uxtab	r4, r4, r0
 13467              	.LVL1559:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13468              		.loc 1 3788 18 view .LVU3650
 13469 0034 64B2     		sxtb	r4, r4
 13470              	.LVL1560:
3789:Core/Src/bno055.c ****         {
 13471              		.loc 1 3789 9 is_stmt 1 view .LVU3651
3789:Core/Src/bno055.c ****         {
 13472              		.loc 1 3789 12 is_stmt 0 view .LVU3652
 13473 0036 6CBB     		cbnz	r4, .L985
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13474              		.loc 1 3792 13 is_stmt 1 view .LVU3653
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13475              		.loc 1 3792 51 is_stmt 0 view .LVU3654
 13476 0038 BDF90800 		ldrsh	r0, [sp, #8]
 13477 003c FFF7FEFF 		bl	__aeabi_i2d
 13478              	.LVL1561:
 13479 0040 0022     		movs	r2, #0
 13480 0042 164B     		ldr	r3, .L988
 13481 0044 FFF7FEFF 		bl	__aeabi_dmul
 13482              	.LVL1562:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13483              		.loc 1 3792 32 view .LVU3655
ARM GAS  /tmp/cc9kYR4Z.s 			page 410


 13484 0048 FFF7FEFF 		bl	__aeabi_d2f
 13485              	.LVL1563:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13486              		.loc 1 3792 30 view .LVU3656
 13487 004c 2860     		str	r0, [r5]	@ float
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13488              		.loc 1 3793 13 is_stmt 1 view .LVU3657
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13489              		.loc 1 3793 51 is_stmt 0 view .LVU3658
 13490 004e BDF90A00 		ldrsh	r0, [sp, #10]
 13491 0052 FFF7FEFF 		bl	__aeabi_i2d
 13492              	.LVL1564:
 13493 0056 0022     		movs	r2, #0
 13494 0058 104B     		ldr	r3, .L988
 13495 005a FFF7FEFF 		bl	__aeabi_dmul
 13496              	.LVL1565:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13497              		.loc 1 3793 32 view .LVU3659
 13498 005e FFF7FEFF 		bl	__aeabi_d2f
 13499              	.LVL1566:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13500              		.loc 1 3793 30 view .LVU3660
 13501 0062 6860     		str	r0, [r5, #4]	@ float
3794:Core/Src/bno055.c ****         }
 13502              		.loc 1 3794 13 is_stmt 1 view .LVU3661
3794:Core/Src/bno055.c ****         }
 13503              		.loc 1 3794 51 is_stmt 0 view .LVU3662
 13504 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 13505 0068 FFF7FEFF 		bl	__aeabi_i2d
 13506              	.LVL1567:
 13507 006c 0022     		movs	r2, #0
 13508 006e 0B4B     		ldr	r3, .L988
 13509 0070 FFF7FEFF 		bl	__aeabi_dmul
 13510              	.LVL1568:
3794:Core/Src/bno055.c ****         }
 13511              		.loc 1 3794 32 view .LVU3663
 13512 0074 FFF7FEFF 		bl	__aeabi_d2f
 13513              	.LVL1569:
3794:Core/Src/bno055.c ****         }
 13514              		.loc 1 3794 30 view .LVU3664
 13515 0078 A860     		str	r0, [r5, #8]	@ float
 13516              	.LVL1570:
 13517              	.L983:
3806:Core/Src/bno055.c **** }
 13518              		.loc 1 3806 5 is_stmt 1 view .LVU3665
3807:Core/Src/bno055.c **** 
 13519              		.loc 1 3807 1 is_stmt 0 view .LVU3666
 13520 007a 2046     		mov	r0, r4
 13521 007c 05B0     		add	sp, sp, #20
 13522              	.LCFI447:
 13523              		.cfi_remember_state
 13524              		.cfi_def_cfa_offset 12
 13525              		@ sp needed
 13526 007e 30BD     		pop	{r4, r5, pc}
 13527              	.LVL1571:
 13528              	.L987:
 13529              	.LCFI448:
ARM GAS  /tmp/cc9kYR4Z.s 			page 411


 13530              		.cfi_restore_state
3783:Core/Src/bno055.c ****     }
 13531              		.loc 1 3783 9 is_stmt 1 view .LVU3667
3783:Core/Src/bno055.c ****     }
 13532              		.loc 1 3783 21 is_stmt 0 view .LVU3668
 13533 0080 0020     		movs	r0, #0
 13534 0082 FFF7FEFF 		bl	bno055_set_gyro_unit
 13535              	.LVL1572:
3783:Core/Src/bno055.c ****     }
 13536              		.loc 1 3783 18 view .LVU3669
 13537 0086 54FA80F4 		uxtab	r4, r4, r0
 13538              	.LVL1573:
3783:Core/Src/bno055.c ****     }
 13539              		.loc 1 3783 18 view .LVU3670
 13540 008a 64B2     		sxtb	r4, r4
 13541              	.LVL1574:
3783:Core/Src/bno055.c ****     }
 13542              		.loc 1 3783 18 view .LVU3671
 13543 008c CCE7     		b	.L982
 13544              	.L984:
3803:Core/Src/bno055.c ****     }
 13545              		.loc 1 3803 18 view .LVU3672
 13546 008e 4FF0FF34 		mov	r4, #-1
 13547              	.LVL1575:
3803:Core/Src/bno055.c ****     }
 13548              		.loc 1 3803 18 view .LVU3673
 13549 0092 F2E7     		b	.L983
 13550              	.LVL1576:
 13551              	.L985:
3798:Core/Src/bno055.c ****         }
 13552              		.loc 1 3798 22 view .LVU3674
 13553 0094 4FF0FF34 		mov	r4, #-1
 13554              	.LVL1577:
3798:Core/Src/bno055.c ****         }
 13555              		.loc 1 3798 22 view .LVU3675
 13556 0098 EFE7     		b	.L983
 13557              	.L989:
 13558 009a 00BF     		.align	2
 13559              	.L988:
 13560 009c 0000B03F 		.word	1068498944
 13561              		.cfi_endproc
 13562              	.LFE59:
 13564              		.section	.text.bno055_convert_float_gyro_xyz_rps,"ax",%progbits
 13565              		.align	1
 13566              		.global	bno055_convert_float_gyro_xyz_rps
 13567              		.syntax unified
 13568              		.thumb
 13569              		.thumb_func
 13571              	bno055_convert_float_gyro_xyz_rps:
 13572              	.LVL1578:
 13573              	.LFB60:
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13574              		.loc 1 3829 1 is_stmt 1 view -0
 13575              		.cfi_startproc
 13576              		@ args = 0, pretend = 0, frame = 16
 13577              		@ frame_needed = 0, uses_anonymous_args = 0
3829:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/cc9kYR4Z.s 			page 412


 13578              		.loc 1 3829 1 is_stmt 0 view .LVU3677
 13579 0000 30B5     		push	{r4, r5, lr}
 13580              	.LCFI449:
 13581              		.cfi_def_cfa_offset 12
 13582              		.cfi_offset 4, -12
 13583              		.cfi_offset 5, -8
 13584              		.cfi_offset 14, -4
 13585 0002 85B0     		sub	sp, sp, #20
 13586              	.LCFI450:
 13587              		.cfi_def_cfa_offset 32
 13588 0004 0546     		mov	r5, r0
3832:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13589              		.loc 1 3832 5 is_stmt 1 view .LVU3678
 13590              	.LVL1579:
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13591              		.loc 1 3833 5 view .LVU3679
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13592              		.loc 1 3833 26 is_stmt 0 view .LVU3680
 13593 0006 0023     		movs	r3, #0
 13594 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13595 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 13596 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3834:Core/Src/bno055.c **** 
 13597              		.loc 1 3834 5 is_stmt 1 view .LVU3681
3834:Core/Src/bno055.c **** 
 13598              		.loc 1 3834 8 is_stmt 0 view .LVU3682
 13599 0014 8DF80730 		strb	r3, [sp, #7]
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13600              		.loc 1 3838 5 is_stmt 1 view .LVU3683
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13601              		.loc 1 3838 16 is_stmt 0 view .LVU3684
 13602 0018 0DF10700 		add	r0, sp, #7
 13603              	.LVL1580:
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13604              		.loc 1 3838 16 view .LVU3685
 13605 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13606              	.LVL1581:
 13607 0020 0446     		mov	r4, r0
 13608              	.LVL1582:
3839:Core/Src/bno055.c ****     {
 13609              		.loc 1 3839 5 is_stmt 1 view .LVU3686
3839:Core/Src/bno055.c ****     {
 13610              		.loc 1 3839 22 is_stmt 0 view .LVU3687
 13611 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3839:Core/Src/bno055.c ****     {
 13612              		.loc 1 3839 8 view .LVU3688
 13613 0026 012B     		cmp	r3, #1
 13614 0028 2BD1     		bne	.L996
 13615              	.L991:
3843:Core/Src/bno055.c ****     {
 13616              		.loc 1 3843 5 is_stmt 1 view .LVU3689
3843:Core/Src/bno055.c ****     {
 13617              		.loc 1 3843 8 is_stmt 0 view .LVU3690
 13618 002a 8CBB     		cbnz	r4, .L993
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13619              		.loc 1 3846 9 is_stmt 1 view .LVU3691
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 413


 13620              		.loc 1 3846 21 is_stmt 0 view .LVU3692
 13621 002c 02A8     		add	r0, sp, #8
 13622 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 13623              	.LVL1583:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13624              		.loc 1 3846 18 view .LVU3693
 13625 0032 54FA80F4 		uxtab	r4, r4, r0
 13626              	.LVL1584:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13627              		.loc 1 3846 18 view .LVU3694
 13628 0036 64B2     		sxtb	r4, r4
 13629              	.LVL1585:
3847:Core/Src/bno055.c ****         {
 13630              		.loc 1 3847 9 is_stmt 1 view .LVU3695
3847:Core/Src/bno055.c ****         {
 13631              		.loc 1 3847 12 is_stmt 0 view .LVU3696
 13632 0038 6CBB     		cbnz	r4, .L994
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13633              		.loc 1 3850 13 is_stmt 1 view .LVU3697
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13634              		.loc 1 3850 51 is_stmt 0 view .LVU3698
 13635 003a BDF90800 		ldrsh	r0, [sp, #8]
 13636 003e FFF7FEFF 		bl	__aeabi_i2d
 13637              	.LVL1586:
 13638 0042 0022     		movs	r2, #0
 13639 0044 154B     		ldr	r3, .L997
 13640 0046 FFF7FEFF 		bl	__aeabi_ddiv
 13641              	.LVL1587:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13642              		.loc 1 3850 32 view .LVU3699
 13643 004a FFF7FEFF 		bl	__aeabi_d2f
 13644              	.LVL1588:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13645              		.loc 1 3850 30 view .LVU3700
 13646 004e 2860     		str	r0, [r5]	@ float
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13647              		.loc 1 3851 13 is_stmt 1 view .LVU3701
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13648              		.loc 1 3851 51 is_stmt 0 view .LVU3702
 13649 0050 BDF90A00 		ldrsh	r0, [sp, #10]
 13650 0054 FFF7FEFF 		bl	__aeabi_i2d
 13651              	.LVL1589:
 13652 0058 0022     		movs	r2, #0
 13653 005a 104B     		ldr	r3, .L997
 13654 005c FFF7FEFF 		bl	__aeabi_ddiv
 13655              	.LVL1590:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13656              		.loc 1 3851 32 view .LVU3703
 13657 0060 FFF7FEFF 		bl	__aeabi_d2f
 13658              	.LVL1591:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13659              		.loc 1 3851 30 view .LVU3704
 13660 0064 6860     		str	r0, [r5, #4]	@ float
3852:Core/Src/bno055.c ****         }
 13661              		.loc 1 3852 13 is_stmt 1 view .LVU3705
3852:Core/Src/bno055.c ****         }
 13662              		.loc 1 3852 51 is_stmt 0 view .LVU3706
ARM GAS  /tmp/cc9kYR4Z.s 			page 414


 13663 0066 BDF90C00 		ldrsh	r0, [sp, #12]
 13664 006a FFF7FEFF 		bl	__aeabi_i2d
 13665              	.LVL1592:
 13666 006e 0022     		movs	r2, #0
 13667 0070 0A4B     		ldr	r3, .L997
 13668 0072 FFF7FEFF 		bl	__aeabi_ddiv
 13669              	.LVL1593:
3852:Core/Src/bno055.c ****         }
 13670              		.loc 1 3852 32 view .LVU3707
 13671 0076 FFF7FEFF 		bl	__aeabi_d2f
 13672              	.LVL1594:
3852:Core/Src/bno055.c ****         }
 13673              		.loc 1 3852 30 view .LVU3708
 13674 007a A860     		str	r0, [r5, #8]	@ float
 13675              	.LVL1595:
 13676              	.L992:
3864:Core/Src/bno055.c **** }
 13677              		.loc 1 3864 5 is_stmt 1 view .LVU3709
3865:Core/Src/bno055.c **** 
 13678              		.loc 1 3865 1 is_stmt 0 view .LVU3710
 13679 007c 2046     		mov	r0, r4
 13680 007e 05B0     		add	sp, sp, #20
 13681              	.LCFI451:
 13682              		.cfi_remember_state
 13683              		.cfi_def_cfa_offset 12
 13684              		@ sp needed
 13685 0080 30BD     		pop	{r4, r5, pc}
 13686              	.LVL1596:
 13687              	.L996:
 13688              	.LCFI452:
 13689              		.cfi_restore_state
3841:Core/Src/bno055.c ****     }
 13690              		.loc 1 3841 9 is_stmt 1 view .LVU3711
3841:Core/Src/bno055.c ****     }
 13691              		.loc 1 3841 21 is_stmt 0 view .LVU3712
 13692 0082 0120     		movs	r0, #1
 13693 0084 FFF7FEFF 		bl	bno055_set_gyro_unit
 13694              	.LVL1597:
3841:Core/Src/bno055.c ****     }
 13695              		.loc 1 3841 18 view .LVU3713
 13696 0088 54FA80F4 		uxtab	r4, r4, r0
 13697              	.LVL1598:
3841:Core/Src/bno055.c ****     }
 13698              		.loc 1 3841 18 view .LVU3714
 13699 008c 64B2     		sxtb	r4, r4
 13700              	.LVL1599:
3841:Core/Src/bno055.c ****     }
 13701              		.loc 1 3841 18 view .LVU3715
 13702 008e CCE7     		b	.L991
 13703              	.L993:
3861:Core/Src/bno055.c ****     }
 13704              		.loc 1 3861 18 view .LVU3716
 13705 0090 4FF0FF34 		mov	r4, #-1
 13706              	.LVL1600:
3861:Core/Src/bno055.c ****     }
 13707              		.loc 1 3861 18 view .LVU3717
 13708 0094 F2E7     		b	.L992
ARM GAS  /tmp/cc9kYR4Z.s 			page 415


 13709              	.LVL1601:
 13710              	.L994:
3856:Core/Src/bno055.c ****         }
 13711              		.loc 1 3856 22 view .LVU3718
 13712 0096 4FF0FF34 		mov	r4, #-1
 13713              	.LVL1602:
3856:Core/Src/bno055.c ****         }
 13714              		.loc 1 3856 22 view .LVU3719
 13715 009a EFE7     		b	.L992
 13716              	.L998:
 13717              		.align	2
 13718              	.L997:
 13719 009c 00208C40 		.word	1082925056
 13720              		.cfi_endproc
 13721              	.LFE60:
 13723              		.section	.text.bno055_convert_double_gyro_x_dps,"ax",%progbits
 13724              		.align	1
 13725              		.global	bno055_convert_double_gyro_x_dps
 13726              		.syntax unified
 13727              		.thumb
 13728              		.thumb_func
 13730              	bno055_convert_double_gyro_x_dps:
 13731              	.LVL1603:
 13732              	.LFB91:
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13733              		.loc 1 5269 1 is_stmt 1 view -0
 13734              		.cfi_startproc
 13735              		@ args = 0, pretend = 0, frame = 8
 13736              		@ frame_needed = 0, uses_anonymous_args = 0
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13737              		.loc 1 5269 1 is_stmt 0 view .LVU3721
 13738 0000 30B5     		push	{r4, r5, lr}
 13739              	.LCFI453:
 13740              		.cfi_def_cfa_offset 12
 13741              		.cfi_offset 4, -12
 13742              		.cfi_offset 5, -8
 13743              		.cfi_offset 14, -4
 13744 0002 83B0     		sub	sp, sp, #12
 13745              	.LCFI454:
 13746              		.cfi_def_cfa_offset 24
 13747 0004 0546     		mov	r5, r0
5272:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13748              		.loc 1 5272 5 is_stmt 1 view .LVU3722
 13749              	.LVL1604:
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13750              		.loc 1 5273 5 view .LVU3723
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13751              		.loc 1 5273 9 is_stmt 0 view .LVU3724
 13752 0006 0023     		movs	r3, #0
 13753 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5274:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13754              		.loc 1 5274 5 is_stmt 1 view .LVU3725
 13755              	.LVL1605:
5275:Core/Src/bno055.c **** 
 13756              		.loc 1 5275 5 view .LVU3726
5275:Core/Src/bno055.c **** 
 13757              		.loc 1 5275 8 is_stmt 0 view .LVU3727
ARM GAS  /tmp/cc9kYR4Z.s 			page 416


 13758 000c 8DF80530 		strb	r3, [sp, #5]
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13759              		.loc 1 5279 5 is_stmt 1 view .LVU3728
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13760              		.loc 1 5279 16 is_stmt 0 view .LVU3729
 13761 0010 0DF10500 		add	r0, sp, #5
 13762              	.LVL1606:
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13763              		.loc 1 5279 16 view .LVU3730
 13764 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13765              	.LVL1607:
 13766 0018 0446     		mov	r4, r0
 13767              	.LVL1608:
5280:Core/Src/bno055.c ****     {
 13768              		.loc 1 5280 5 is_stmt 1 view .LVU3731
5280:Core/Src/bno055.c ****     {
 13769              		.loc 1 5280 22 is_stmt 0 view .LVU3732
 13770 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5280:Core/Src/bno055.c ****     {
 13771              		.loc 1 5280 8 view .LVU3733
 13772 001e ABB9     		cbnz	r3, .L1005
 13773              	.L1000:
5284:Core/Src/bno055.c ****     {
 13774              		.loc 1 5284 5 is_stmt 1 view .LVU3734
5284:Core/Src/bno055.c ****     {
 13775              		.loc 1 5284 8 is_stmt 0 view .LVU3735
 13776 0020 DCB9     		cbnz	r4, .L1002
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13777              		.loc 1 5287 9 is_stmt 1 view .LVU3736
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13778              		.loc 1 5287 21 is_stmt 0 view .LVU3737
 13779 0022 0DF10600 		add	r0, sp, #6
 13780 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 13781              	.LVL1609:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13782              		.loc 1 5287 18 view .LVU3738
 13783 002a 54FA80F4 		uxtab	r4, r4, r0
 13784              	.LVL1610:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13785              		.loc 1 5287 18 view .LVU3739
 13786 002e 64B2     		sxtb	r4, r4
 13787              	.LVL1611:
5288:Core/Src/bno055.c ****         {
 13788              		.loc 1 5288 9 is_stmt 1 view .LVU3740
5288:Core/Src/bno055.c ****         {
 13789              		.loc 1 5288 12 is_stmt 0 view .LVU3741
 13790 0030 B4B9     		cbnz	r4, .L1003
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13791              		.loc 1 5291 13 is_stmt 1 view .LVU3742
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13792              		.loc 1 5291 22 is_stmt 0 view .LVU3743
 13793 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13794 0036 FFF7FEFF 		bl	__aeabi_i2d
 13795              	.LVL1612:
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13796              		.loc 1 5291 20 view .LVU3744
 13797 003a 0022     		movs	r2, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 417


 13798 003c 0A4B     		ldr	r3, .L1006
 13799 003e FFF7FEFF 		bl	__aeabi_dmul
 13800              	.LVL1613:
5292:Core/Src/bno055.c ****         }
 13801              		.loc 1 5292 13 is_stmt 1 view .LVU3745
5292:Core/Src/bno055.c ****         }
 13802              		.loc 1 5292 23 is_stmt 0 view .LVU3746
 13803 0042 C5E90001 		strd	r0, [r5]
 13804              	.LVL1614:
 13805              	.L1001:
5304:Core/Src/bno055.c **** }
 13806              		.loc 1 5304 5 is_stmt 1 view .LVU3747
5305:Core/Src/bno055.c **** 
 13807              		.loc 1 5305 1 is_stmt 0 view .LVU3748
 13808 0046 2046     		mov	r0, r4
 13809 0048 03B0     		add	sp, sp, #12
 13810              	.LCFI455:
 13811              		.cfi_remember_state
 13812              		.cfi_def_cfa_offset 12
 13813              		@ sp needed
 13814 004a 30BD     		pop	{r4, r5, pc}
 13815              	.LVL1615:
 13816              	.L1005:
 13817              	.LCFI456:
 13818              		.cfi_restore_state
5282:Core/Src/bno055.c ****     }
 13819              		.loc 1 5282 9 is_stmt 1 view .LVU3749
5282:Core/Src/bno055.c ****     }
 13820              		.loc 1 5282 21 is_stmt 0 view .LVU3750
 13821 004c 0020     		movs	r0, #0
 13822 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 13823              	.LVL1616:
5282:Core/Src/bno055.c ****     }
 13824              		.loc 1 5282 18 view .LVU3751
 13825 0052 54FA80F4 		uxtab	r4, r4, r0
 13826              	.LVL1617:
5282:Core/Src/bno055.c ****     }
 13827              		.loc 1 5282 18 view .LVU3752
 13828 0056 64B2     		sxtb	r4, r4
 13829              	.LVL1618:
5282:Core/Src/bno055.c ****     }
 13830              		.loc 1 5282 18 view .LVU3753
 13831 0058 E2E7     		b	.L1000
 13832              	.L1002:
5301:Core/Src/bno055.c ****     }
 13833              		.loc 1 5301 18 view .LVU3754
 13834 005a 4FF0FF34 		mov	r4, #-1
 13835              	.LVL1619:
5301:Core/Src/bno055.c ****     }
 13836              		.loc 1 5301 18 view .LVU3755
 13837 005e F2E7     		b	.L1001
 13838              	.LVL1620:
 13839              	.L1003:
5296:Core/Src/bno055.c ****         }
 13840              		.loc 1 5296 22 view .LVU3756
 13841 0060 4FF0FF34 		mov	r4, #-1
 13842              	.LVL1621:
ARM GAS  /tmp/cc9kYR4Z.s 			page 418


5296:Core/Src/bno055.c ****         }
 13843              		.loc 1 5296 22 view .LVU3757
 13844 0064 EFE7     		b	.L1001
 13845              	.L1007:
 13846 0066 00BF     		.align	2
 13847              	.L1006:
 13848 0068 0000B03F 		.word	1068498944
 13849              		.cfi_endproc
 13850              	.LFE91:
 13852              		.section	.text.bno055_convert_double_gyro_x_rps,"ax",%progbits
 13853              		.align	1
 13854              		.global	bno055_convert_double_gyro_x_rps
 13855              		.syntax unified
 13856              		.thumb
 13857              		.thumb_func
 13859              	bno055_convert_double_gyro_x_rps:
 13860              	.LVL1622:
 13861              	.LFB92:
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13862              		.loc 1 5322 1 is_stmt 1 view -0
 13863              		.cfi_startproc
 13864              		@ args = 0, pretend = 0, frame = 8
 13865              		@ frame_needed = 0, uses_anonymous_args = 0
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13866              		.loc 1 5322 1 is_stmt 0 view .LVU3759
 13867 0000 30B5     		push	{r4, r5, lr}
 13868              	.LCFI457:
 13869              		.cfi_def_cfa_offset 12
 13870              		.cfi_offset 4, -12
 13871              		.cfi_offset 5, -8
 13872              		.cfi_offset 14, -4
 13873 0002 83B0     		sub	sp, sp, #12
 13874              	.LCFI458:
 13875              		.cfi_def_cfa_offset 24
 13876 0004 0546     		mov	r5, r0
5325:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13877              		.loc 1 5325 5 is_stmt 1 view .LVU3760
 13878              	.LVL1623:
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13879              		.loc 1 5326 5 view .LVU3761
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13880              		.loc 1 5326 9 is_stmt 0 view .LVU3762
 13881 0006 0023     		movs	r3, #0
 13882 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5327:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13883              		.loc 1 5327 5 is_stmt 1 view .LVU3763
 13884              	.LVL1624:
5328:Core/Src/bno055.c **** 
 13885              		.loc 1 5328 5 view .LVU3764
5328:Core/Src/bno055.c **** 
 13886              		.loc 1 5328 8 is_stmt 0 view .LVU3765
 13887 000c 8DF80530 		strb	r3, [sp, #5]
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13888              		.loc 1 5332 5 is_stmt 1 view .LVU3766
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13889              		.loc 1 5332 16 is_stmt 0 view .LVU3767
 13890 0010 0DF10500 		add	r0, sp, #5
ARM GAS  /tmp/cc9kYR4Z.s 			page 419


 13891              	.LVL1625:
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13892              		.loc 1 5332 16 view .LVU3768
 13893 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13894              	.LVL1626:
 13895 0018 0446     		mov	r4, r0
 13896              	.LVL1627:
5333:Core/Src/bno055.c ****     {
 13897              		.loc 1 5333 5 is_stmt 1 view .LVU3769
5333:Core/Src/bno055.c ****     {
 13898              		.loc 1 5333 22 is_stmt 0 view .LVU3770
 13899 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5333:Core/Src/bno055.c ****     {
 13900              		.loc 1 5333 8 view .LVU3771
 13901 001e 012B     		cmp	r3, #1
 13902 0020 15D1     		bne	.L1014
 13903              	.L1009:
5337:Core/Src/bno055.c ****     {
 13904              		.loc 1 5337 5 is_stmt 1 view .LVU3772
5337:Core/Src/bno055.c ****     {
 13905              		.loc 1 5337 8 is_stmt 0 view .LVU3773
 13906 0022 DCB9     		cbnz	r4, .L1011
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13907              		.loc 1 5340 9 is_stmt 1 view .LVU3774
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13908              		.loc 1 5340 21 is_stmt 0 view .LVU3775
 13909 0024 0DF10600 		add	r0, sp, #6
 13910 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 13911              	.LVL1628:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13912              		.loc 1 5340 18 view .LVU3776
 13913 002c 54FA80F4 		uxtab	r4, r4, r0
 13914              	.LVL1629:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13915              		.loc 1 5340 18 view .LVU3777
 13916 0030 64B2     		sxtb	r4, r4
 13917              	.LVL1630:
5341:Core/Src/bno055.c ****         {
 13918              		.loc 1 5341 9 is_stmt 1 view .LVU3778
5341:Core/Src/bno055.c ****         {
 13919              		.loc 1 5341 12 is_stmt 0 view .LVU3779
 13920 0032 B4B9     		cbnz	r4, .L1012
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13921              		.loc 1 5344 13 is_stmt 1 view .LVU3780
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13922              		.loc 1 5344 22 is_stmt 0 view .LVU3781
 13923 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13924 0038 FFF7FEFF 		bl	__aeabi_i2d
 13925              	.LVL1631:
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13926              		.loc 1 5344 20 view .LVU3782
 13927 003c 0022     		movs	r2, #0
 13928 003e 0A4B     		ldr	r3, .L1015
 13929 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13930              	.LVL1632:
5345:Core/Src/bno055.c ****         }
 13931              		.loc 1 5345 13 is_stmt 1 view .LVU3783
ARM GAS  /tmp/cc9kYR4Z.s 			page 420


5345:Core/Src/bno055.c ****         }
 13932              		.loc 1 5345 23 is_stmt 0 view .LVU3784
 13933 0044 C5E90001 		strd	r0, [r5]
 13934              	.LVL1633:
 13935              	.L1010:
5357:Core/Src/bno055.c **** }
 13936              		.loc 1 5357 5 is_stmt 1 view .LVU3785
5358:Core/Src/bno055.c **** 
 13937              		.loc 1 5358 1 is_stmt 0 view .LVU3786
 13938 0048 2046     		mov	r0, r4
 13939 004a 03B0     		add	sp, sp, #12
 13940              	.LCFI459:
 13941              		.cfi_remember_state
 13942              		.cfi_def_cfa_offset 12
 13943              		@ sp needed
 13944 004c 30BD     		pop	{r4, r5, pc}
 13945              	.LVL1634:
 13946              	.L1014:
 13947              	.LCFI460:
 13948              		.cfi_restore_state
5335:Core/Src/bno055.c ****     }
 13949              		.loc 1 5335 9 is_stmt 1 view .LVU3787
5335:Core/Src/bno055.c ****     }
 13950              		.loc 1 5335 21 is_stmt 0 view .LVU3788
 13951 004e 0120     		movs	r0, #1
 13952 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13953              	.LVL1635:
5335:Core/Src/bno055.c ****     }
 13954              		.loc 1 5335 18 view .LVU3789
 13955 0054 54FA80F4 		uxtab	r4, r4, r0
 13956              	.LVL1636:
5335:Core/Src/bno055.c ****     }
 13957              		.loc 1 5335 18 view .LVU3790
 13958 0058 64B2     		sxtb	r4, r4
 13959              	.LVL1637:
5335:Core/Src/bno055.c ****     }
 13960              		.loc 1 5335 18 view .LVU3791
 13961 005a E2E7     		b	.L1009
 13962              	.L1011:
5354:Core/Src/bno055.c ****     }
 13963              		.loc 1 5354 18 view .LVU3792
 13964 005c 4FF0FF34 		mov	r4, #-1
 13965              	.LVL1638:
5354:Core/Src/bno055.c ****     }
 13966              		.loc 1 5354 18 view .LVU3793
 13967 0060 F2E7     		b	.L1010
 13968              	.LVL1639:
 13969              	.L1012:
5349:Core/Src/bno055.c ****         }
 13970              		.loc 1 5349 22 view .LVU3794
 13971 0062 4FF0FF34 		mov	r4, #-1
 13972              	.LVL1640:
5349:Core/Src/bno055.c ****         }
 13973              		.loc 1 5349 22 view .LVU3795
 13974 0066 EFE7     		b	.L1010
 13975              	.L1016:
 13976              		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 421


 13977              	.L1015:
 13978 0068 00208C40 		.word	1082925056
 13979              		.cfi_endproc
 13980              	.LFE92:
 13982              		.section	.text.bno055_convert_double_gyro_y_dps,"ax",%progbits
 13983              		.align	1
 13984              		.global	bno055_convert_double_gyro_y_dps
 13985              		.syntax unified
 13986              		.thumb
 13987              		.thumb_func
 13989              	bno055_convert_double_gyro_y_dps:
 13990              	.LVL1641:
 13991              	.LFB93:
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 13992              		.loc 1 5375 1 is_stmt 1 view -0
 13993              		.cfi_startproc
 13994              		@ args = 0, pretend = 0, frame = 8
 13995              		@ frame_needed = 0, uses_anonymous_args = 0
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 13996              		.loc 1 5375 1 is_stmt 0 view .LVU3797
 13997 0000 30B5     		push	{r4, r5, lr}
 13998              	.LCFI461:
 13999              		.cfi_def_cfa_offset 12
 14000              		.cfi_offset 4, -12
 14001              		.cfi_offset 5, -8
 14002              		.cfi_offset 14, -4
 14003 0002 83B0     		sub	sp, sp, #12
 14004              	.LCFI462:
 14005              		.cfi_def_cfa_offset 24
 14006 0004 0546     		mov	r5, r0
5378:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 14007              		.loc 1 5378 5 is_stmt 1 view .LVU3798
 14008              	.LVL1642:
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14009              		.loc 1 5379 5 view .LVU3799
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14010              		.loc 1 5379 9 is_stmt 0 view .LVU3800
 14011 0006 0023     		movs	r3, #0
 14012 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5380:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14013              		.loc 1 5380 5 is_stmt 1 view .LVU3801
 14014              	.LVL1643:
5381:Core/Src/bno055.c **** 
 14015              		.loc 1 5381 5 view .LVU3802
5381:Core/Src/bno055.c **** 
 14016              		.loc 1 5381 8 is_stmt 0 view .LVU3803
 14017 000c 8DF80530 		strb	r3, [sp, #5]
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14018              		.loc 1 5385 5 is_stmt 1 view .LVU3804
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14019              		.loc 1 5385 16 is_stmt 0 view .LVU3805
 14020 0010 0DF10500 		add	r0, sp, #5
 14021              	.LVL1644:
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14022              		.loc 1 5385 16 view .LVU3806
 14023 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14024              	.LVL1645:
ARM GAS  /tmp/cc9kYR4Z.s 			page 422


 14025 0018 0446     		mov	r4, r0
 14026              	.LVL1646:
5386:Core/Src/bno055.c ****     {
 14027              		.loc 1 5386 5 is_stmt 1 view .LVU3807
5386:Core/Src/bno055.c ****     {
 14028              		.loc 1 5386 22 is_stmt 0 view .LVU3808
 14029 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5386:Core/Src/bno055.c ****     {
 14030              		.loc 1 5386 8 view .LVU3809
 14031 001e ABB9     		cbnz	r3, .L1023
 14032              	.L1018:
5390:Core/Src/bno055.c ****     {
 14033              		.loc 1 5390 5 is_stmt 1 view .LVU3810
5390:Core/Src/bno055.c ****     {
 14034              		.loc 1 5390 8 is_stmt 0 view .LVU3811
 14035 0020 DCB9     		cbnz	r4, .L1020
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14036              		.loc 1 5393 9 is_stmt 1 view .LVU3812
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14037              		.loc 1 5393 21 is_stmt 0 view .LVU3813
 14038 0022 0DF10600 		add	r0, sp, #6
 14039 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 14040              	.LVL1647:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14041              		.loc 1 5393 18 view .LVU3814
 14042 002a 54FA80F4 		uxtab	r4, r4, r0
 14043              	.LVL1648:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14044              		.loc 1 5393 18 view .LVU3815
 14045 002e 64B2     		sxtb	r4, r4
 14046              	.LVL1649:
5394:Core/Src/bno055.c ****         {
 14047              		.loc 1 5394 9 is_stmt 1 view .LVU3816
5394:Core/Src/bno055.c ****         {
 14048              		.loc 1 5394 12 is_stmt 0 view .LVU3817
 14049 0030 B4B9     		cbnz	r4, .L1021
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14050              		.loc 1 5397 13 is_stmt 1 view .LVU3818
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14051              		.loc 1 5397 22 is_stmt 0 view .LVU3819
 14052 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14053 0036 FFF7FEFF 		bl	__aeabi_i2d
 14054              	.LVL1650:
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14055              		.loc 1 5397 20 view .LVU3820
 14056 003a 0022     		movs	r2, #0
 14057 003c 0A4B     		ldr	r3, .L1024
 14058 003e FFF7FEFF 		bl	__aeabi_dmul
 14059              	.LVL1651:
5398:Core/Src/bno055.c ****         }
 14060              		.loc 1 5398 13 is_stmt 1 view .LVU3821
5398:Core/Src/bno055.c ****         }
 14061              		.loc 1 5398 23 is_stmt 0 view .LVU3822
 14062 0042 C5E90001 		strd	r0, [r5]
 14063              	.LVL1652:
 14064              	.L1019:
5410:Core/Src/bno055.c **** }
ARM GAS  /tmp/cc9kYR4Z.s 			page 423


 14065              		.loc 1 5410 5 is_stmt 1 view .LVU3823
5411:Core/Src/bno055.c **** 
 14066              		.loc 1 5411 1 is_stmt 0 view .LVU3824
 14067 0046 2046     		mov	r0, r4
 14068 0048 03B0     		add	sp, sp, #12
 14069              	.LCFI463:
 14070              		.cfi_remember_state
 14071              		.cfi_def_cfa_offset 12
 14072              		@ sp needed
 14073 004a 30BD     		pop	{r4, r5, pc}
 14074              	.LVL1653:
 14075              	.L1023:
 14076              	.LCFI464:
 14077              		.cfi_restore_state
5388:Core/Src/bno055.c ****     }
 14078              		.loc 1 5388 9 is_stmt 1 view .LVU3825
5388:Core/Src/bno055.c ****     }
 14079              		.loc 1 5388 21 is_stmt 0 view .LVU3826
 14080 004c 0020     		movs	r0, #0
 14081 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 14082              	.LVL1654:
5388:Core/Src/bno055.c ****     }
 14083              		.loc 1 5388 18 view .LVU3827
 14084 0052 54FA80F4 		uxtab	r4, r4, r0
 14085              	.LVL1655:
5388:Core/Src/bno055.c ****     }
 14086              		.loc 1 5388 18 view .LVU3828
 14087 0056 64B2     		sxtb	r4, r4
 14088              	.LVL1656:
5388:Core/Src/bno055.c ****     }
 14089              		.loc 1 5388 18 view .LVU3829
 14090 0058 E2E7     		b	.L1018
 14091              	.L1020:
5407:Core/Src/bno055.c ****     }
 14092              		.loc 1 5407 18 view .LVU3830
 14093 005a 4FF0FF34 		mov	r4, #-1
 14094              	.LVL1657:
5407:Core/Src/bno055.c ****     }
 14095              		.loc 1 5407 18 view .LVU3831
 14096 005e F2E7     		b	.L1019
 14097              	.LVL1658:
 14098              	.L1021:
5402:Core/Src/bno055.c ****         }
 14099              		.loc 1 5402 22 view .LVU3832
 14100 0060 4FF0FF34 		mov	r4, #-1
 14101              	.LVL1659:
5402:Core/Src/bno055.c ****         }
 14102              		.loc 1 5402 22 view .LVU3833
 14103 0064 EFE7     		b	.L1019
 14104              	.L1025:
 14105 0066 00BF     		.align	2
 14106              	.L1024:
 14107 0068 0000B03F 		.word	1068498944
 14108              		.cfi_endproc
 14109              	.LFE93:
 14111              		.section	.text.bno055_convert_double_gyro_y_rps,"ax",%progbits
 14112              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 424


 14113              		.global	bno055_convert_double_gyro_y_rps
 14114              		.syntax unified
 14115              		.thumb
 14116              		.thumb_func
 14118              	bno055_convert_double_gyro_y_rps:
 14119              	.LVL1660:
 14120              	.LFB94:
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 14121              		.loc 1 5428 1 is_stmt 1 view -0
 14122              		.cfi_startproc
 14123              		@ args = 0, pretend = 0, frame = 8
 14124              		@ frame_needed = 0, uses_anonymous_args = 0
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 14125              		.loc 1 5428 1 is_stmt 0 view .LVU3835
 14126 0000 30B5     		push	{r4, r5, lr}
 14127              	.LCFI465:
 14128              		.cfi_def_cfa_offset 12
 14129              		.cfi_offset 4, -12
 14130              		.cfi_offset 5, -8
 14131              		.cfi_offset 14, -4
 14132 0002 83B0     		sub	sp, sp, #12
 14133              	.LCFI466:
 14134              		.cfi_def_cfa_offset 24
 14135 0004 0546     		mov	r5, r0
5431:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 14136              		.loc 1 5431 5 is_stmt 1 view .LVU3836
 14137              	.LVL1661:
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14138              		.loc 1 5432 5 view .LVU3837
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14139              		.loc 1 5432 9 is_stmt 0 view .LVU3838
 14140 0006 0023     		movs	r3, #0
 14141 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5433:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14142              		.loc 1 5433 5 is_stmt 1 view .LVU3839
 14143              	.LVL1662:
5434:Core/Src/bno055.c **** 
 14144              		.loc 1 5434 5 view .LVU3840
5434:Core/Src/bno055.c **** 
 14145              		.loc 1 5434 8 is_stmt 0 view .LVU3841
 14146 000c 8DF80530 		strb	r3, [sp, #5]
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14147              		.loc 1 5438 5 is_stmt 1 view .LVU3842
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14148              		.loc 1 5438 16 is_stmt 0 view .LVU3843
 14149 0010 0DF10500 		add	r0, sp, #5
 14150              	.LVL1663:
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14151              		.loc 1 5438 16 view .LVU3844
 14152 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14153              	.LVL1664:
 14154 0018 0446     		mov	r4, r0
 14155              	.LVL1665:
5439:Core/Src/bno055.c ****     {
 14156              		.loc 1 5439 5 is_stmt 1 view .LVU3845
5439:Core/Src/bno055.c ****     {
 14157              		.loc 1 5439 22 is_stmt 0 view .LVU3846
ARM GAS  /tmp/cc9kYR4Z.s 			page 425


 14158 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5439:Core/Src/bno055.c ****     {
 14159              		.loc 1 5439 8 view .LVU3847
 14160 001e 012B     		cmp	r3, #1
 14161 0020 15D1     		bne	.L1032
 14162              	.L1027:
5443:Core/Src/bno055.c ****     {
 14163              		.loc 1 5443 5 is_stmt 1 view .LVU3848
5443:Core/Src/bno055.c ****     {
 14164              		.loc 1 5443 8 is_stmt 0 view .LVU3849
 14165 0022 DCB9     		cbnz	r4, .L1029
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14166              		.loc 1 5446 9 is_stmt 1 view .LVU3850
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14167              		.loc 1 5446 21 is_stmt 0 view .LVU3851
 14168 0024 0DF10600 		add	r0, sp, #6
 14169 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 14170              	.LVL1666:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14171              		.loc 1 5446 18 view .LVU3852
 14172 002c 54FA80F4 		uxtab	r4, r4, r0
 14173              	.LVL1667:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14174              		.loc 1 5446 18 view .LVU3853
 14175 0030 64B2     		sxtb	r4, r4
 14176              	.LVL1668:
5447:Core/Src/bno055.c ****         {
 14177              		.loc 1 5447 9 is_stmt 1 view .LVU3854
5447:Core/Src/bno055.c ****         {
 14178              		.loc 1 5447 12 is_stmt 0 view .LVU3855
 14179 0032 B4B9     		cbnz	r4, .L1030
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14180              		.loc 1 5450 13 is_stmt 1 view .LVU3856
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14181              		.loc 1 5450 22 is_stmt 0 view .LVU3857
 14182 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14183 0038 FFF7FEFF 		bl	__aeabi_i2d
 14184              	.LVL1669:
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14185              		.loc 1 5450 20 view .LVU3858
 14186 003c 0022     		movs	r2, #0
 14187 003e 0A4B     		ldr	r3, .L1033
 14188 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14189              	.LVL1670:
5451:Core/Src/bno055.c ****         }
 14190              		.loc 1 5451 13 is_stmt 1 view .LVU3859
5451:Core/Src/bno055.c ****         }
 14191              		.loc 1 5451 23 is_stmt 0 view .LVU3860
 14192 0044 C5E90001 		strd	r0, [r5]
 14193              	.LVL1671:
 14194              	.L1028:
5463:Core/Src/bno055.c **** }
 14195              		.loc 1 5463 5 is_stmt 1 view .LVU3861
5464:Core/Src/bno055.c **** 
 14196              		.loc 1 5464 1 is_stmt 0 view .LVU3862
 14197 0048 2046     		mov	r0, r4
 14198 004a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/cc9kYR4Z.s 			page 426


 14199              	.LCFI467:
 14200              		.cfi_remember_state
 14201              		.cfi_def_cfa_offset 12
 14202              		@ sp needed
 14203 004c 30BD     		pop	{r4, r5, pc}
 14204              	.LVL1672:
 14205              	.L1032:
 14206              	.LCFI468:
 14207              		.cfi_restore_state
5441:Core/Src/bno055.c ****     }
 14208              		.loc 1 5441 9 is_stmt 1 view .LVU3863
5441:Core/Src/bno055.c ****     }
 14209              		.loc 1 5441 21 is_stmt 0 view .LVU3864
 14210 004e 0120     		movs	r0, #1
 14211 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14212              	.LVL1673:
5441:Core/Src/bno055.c ****     }
 14213              		.loc 1 5441 18 view .LVU3865
 14214 0054 54FA80F4 		uxtab	r4, r4, r0
 14215              	.LVL1674:
5441:Core/Src/bno055.c ****     }
 14216              		.loc 1 5441 18 view .LVU3866
 14217 0058 64B2     		sxtb	r4, r4
 14218              	.LVL1675:
5441:Core/Src/bno055.c ****     }
 14219              		.loc 1 5441 18 view .LVU3867
 14220 005a E2E7     		b	.L1027
 14221              	.L1029:
5460:Core/Src/bno055.c ****     }
 14222              		.loc 1 5460 18 view .LVU3868
 14223 005c 4FF0FF34 		mov	r4, #-1
 14224              	.LVL1676:
5460:Core/Src/bno055.c ****     }
 14225              		.loc 1 5460 18 view .LVU3869
 14226 0060 F2E7     		b	.L1028
 14227              	.LVL1677:
 14228              	.L1030:
5455:Core/Src/bno055.c ****         }
 14229              		.loc 1 5455 22 view .LVU3870
 14230 0062 4FF0FF34 		mov	r4, #-1
 14231              	.LVL1678:
5455:Core/Src/bno055.c ****         }
 14232              		.loc 1 5455 22 view .LVU3871
 14233 0066 EFE7     		b	.L1028
 14234              	.L1034:
 14235              		.align	2
 14236              	.L1033:
 14237 0068 00208C40 		.word	1082925056
 14238              		.cfi_endproc
 14239              	.LFE94:
 14241              		.section	.text.bno055_convert_double_gyro_z_dps,"ax",%progbits
 14242              		.align	1
 14243              		.global	bno055_convert_double_gyro_z_dps
 14244              		.syntax unified
 14245              		.thumb
 14246              		.thumb_func
 14248              	bno055_convert_double_gyro_z_dps:
ARM GAS  /tmp/cc9kYR4Z.s 			page 427


 14249              	.LVL1679:
 14250              	.LFB95:
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 14251              		.loc 1 5481 1 is_stmt 1 view -0
 14252              		.cfi_startproc
 14253              		@ args = 0, pretend = 0, frame = 8
 14254              		@ frame_needed = 0, uses_anonymous_args = 0
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 14255              		.loc 1 5481 1 is_stmt 0 view .LVU3873
 14256 0000 30B5     		push	{r4, r5, lr}
 14257              	.LCFI469:
 14258              		.cfi_def_cfa_offset 12
 14259              		.cfi_offset 4, -12
 14260              		.cfi_offset 5, -8
 14261              		.cfi_offset 14, -4
 14262 0002 83B0     		sub	sp, sp, #12
 14263              	.LCFI470:
 14264              		.cfi_def_cfa_offset 24
 14265 0004 0546     		mov	r5, r0
5484:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 14266              		.loc 1 5484 5 is_stmt 1 view .LVU3874
 14267              	.LVL1680:
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14268              		.loc 1 5485 5 view .LVU3875
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14269              		.loc 1 5485 9 is_stmt 0 view .LVU3876
 14270 0006 0023     		movs	r3, #0
 14271 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5486:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14272              		.loc 1 5486 5 is_stmt 1 view .LVU3877
 14273              	.LVL1681:
5487:Core/Src/bno055.c **** 
 14274              		.loc 1 5487 5 view .LVU3878
5487:Core/Src/bno055.c **** 
 14275              		.loc 1 5487 8 is_stmt 0 view .LVU3879
 14276 000c 8DF80530 		strb	r3, [sp, #5]
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14277              		.loc 1 5491 5 is_stmt 1 view .LVU3880
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14278              		.loc 1 5491 16 is_stmt 0 view .LVU3881
 14279 0010 0DF10500 		add	r0, sp, #5
 14280              	.LVL1682:
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14281              		.loc 1 5491 16 view .LVU3882
 14282 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14283              	.LVL1683:
 14284 0018 0446     		mov	r4, r0
 14285              	.LVL1684:
5492:Core/Src/bno055.c ****     {
 14286              		.loc 1 5492 5 is_stmt 1 view .LVU3883
5492:Core/Src/bno055.c ****     {
 14287              		.loc 1 5492 22 is_stmt 0 view .LVU3884
 14288 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5492:Core/Src/bno055.c ****     {
 14289              		.loc 1 5492 8 view .LVU3885
 14290 001e ABB9     		cbnz	r3, .L1041
 14291              	.L1036:
ARM GAS  /tmp/cc9kYR4Z.s 			page 428


5496:Core/Src/bno055.c ****     {
 14292              		.loc 1 5496 5 is_stmt 1 view .LVU3886
5496:Core/Src/bno055.c ****     {
 14293              		.loc 1 5496 8 is_stmt 0 view .LVU3887
 14294 0020 DCB9     		cbnz	r4, .L1038
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14295              		.loc 1 5499 9 is_stmt 1 view .LVU3888
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14296              		.loc 1 5499 21 is_stmt 0 view .LVU3889
 14297 0022 0DF10600 		add	r0, sp, #6
 14298 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 14299              	.LVL1685:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14300              		.loc 1 5499 18 view .LVU3890
 14301 002a 54FA80F4 		uxtab	r4, r4, r0
 14302              	.LVL1686:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14303              		.loc 1 5499 18 view .LVU3891
 14304 002e 64B2     		sxtb	r4, r4
 14305              	.LVL1687:
5500:Core/Src/bno055.c ****         {
 14306              		.loc 1 5500 9 is_stmt 1 view .LVU3892
5500:Core/Src/bno055.c ****         {
 14307              		.loc 1 5500 12 is_stmt 0 view .LVU3893
 14308 0030 B4B9     		cbnz	r4, .L1039
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14309              		.loc 1 5503 13 is_stmt 1 view .LVU3894
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14310              		.loc 1 5503 22 is_stmt 0 view .LVU3895
 14311 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14312 0036 FFF7FEFF 		bl	__aeabi_i2d
 14313              	.LVL1688:
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14314              		.loc 1 5503 20 view .LVU3896
 14315 003a 0022     		movs	r2, #0
 14316 003c 0A4B     		ldr	r3, .L1042
 14317 003e FFF7FEFF 		bl	__aeabi_dmul
 14318              	.LVL1689:
5504:Core/Src/bno055.c ****         }
 14319              		.loc 1 5504 13 is_stmt 1 view .LVU3897
5504:Core/Src/bno055.c ****         }
 14320              		.loc 1 5504 23 is_stmt 0 view .LVU3898
 14321 0042 C5E90001 		strd	r0, [r5]
 14322              	.LVL1690:
 14323              	.L1037:
5516:Core/Src/bno055.c **** }
 14324              		.loc 1 5516 5 is_stmt 1 view .LVU3899
5517:Core/Src/bno055.c **** 
 14325              		.loc 1 5517 1 is_stmt 0 view .LVU3900
 14326 0046 2046     		mov	r0, r4
 14327 0048 03B0     		add	sp, sp, #12
 14328              	.LCFI471:
 14329              		.cfi_remember_state
 14330              		.cfi_def_cfa_offset 12
 14331              		@ sp needed
 14332 004a 30BD     		pop	{r4, r5, pc}
 14333              	.LVL1691:
ARM GAS  /tmp/cc9kYR4Z.s 			page 429


 14334              	.L1041:
 14335              	.LCFI472:
 14336              		.cfi_restore_state
5494:Core/Src/bno055.c ****     }
 14337              		.loc 1 5494 9 is_stmt 1 view .LVU3901
5494:Core/Src/bno055.c ****     }
 14338              		.loc 1 5494 21 is_stmt 0 view .LVU3902
 14339 004c 0020     		movs	r0, #0
 14340 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 14341              	.LVL1692:
5494:Core/Src/bno055.c ****     }
 14342              		.loc 1 5494 18 view .LVU3903
 14343 0052 54FA80F4 		uxtab	r4, r4, r0
 14344              	.LVL1693:
5494:Core/Src/bno055.c ****     }
 14345              		.loc 1 5494 18 view .LVU3904
 14346 0056 64B2     		sxtb	r4, r4
 14347              	.LVL1694:
5494:Core/Src/bno055.c ****     }
 14348              		.loc 1 5494 18 view .LVU3905
 14349 0058 E2E7     		b	.L1036
 14350              	.L1038:
5513:Core/Src/bno055.c ****     }
 14351              		.loc 1 5513 18 view .LVU3906
 14352 005a 4FF0FF34 		mov	r4, #-1
 14353              	.LVL1695:
5513:Core/Src/bno055.c ****     }
 14354              		.loc 1 5513 18 view .LVU3907
 14355 005e F2E7     		b	.L1037
 14356              	.LVL1696:
 14357              	.L1039:
5508:Core/Src/bno055.c ****         }
 14358              		.loc 1 5508 22 view .LVU3908
 14359 0060 4FF0FF34 		mov	r4, #-1
 14360              	.LVL1697:
5508:Core/Src/bno055.c ****         }
 14361              		.loc 1 5508 22 view .LVU3909
 14362 0064 EFE7     		b	.L1037
 14363              	.L1043:
 14364 0066 00BF     		.align	2
 14365              	.L1042:
 14366 0068 0000B03F 		.word	1068498944
 14367              		.cfi_endproc
 14368              	.LFE95:
 14370              		.section	.text.bno055_convert_double_gyro_z_rps,"ax",%progbits
 14371              		.align	1
 14372              		.global	bno055_convert_double_gyro_z_rps
 14373              		.syntax unified
 14374              		.thumb
 14375              		.thumb_func
 14377              	bno055_convert_double_gyro_z_rps:
 14378              	.LVL1698:
 14379              	.LFB96:
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 14380              		.loc 1 5534 1 is_stmt 1 view -0
 14381              		.cfi_startproc
 14382              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc9kYR4Z.s 			page 430


 14383              		@ frame_needed = 0, uses_anonymous_args = 0
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 14384              		.loc 1 5534 1 is_stmt 0 view .LVU3911
 14385 0000 30B5     		push	{r4, r5, lr}
 14386              	.LCFI473:
 14387              		.cfi_def_cfa_offset 12
 14388              		.cfi_offset 4, -12
 14389              		.cfi_offset 5, -8
 14390              		.cfi_offset 14, -4
 14391 0002 83B0     		sub	sp, sp, #12
 14392              	.LCFI474:
 14393              		.cfi_def_cfa_offset 24
 14394 0004 0546     		mov	r5, r0
5537:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 14395              		.loc 1 5537 5 is_stmt 1 view .LVU3912
 14396              	.LVL1699:
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14397              		.loc 1 5538 5 view .LVU3913
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14398              		.loc 1 5538 9 is_stmt 0 view .LVU3914
 14399 0006 0023     		movs	r3, #0
 14400 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5539:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14401              		.loc 1 5539 5 is_stmt 1 view .LVU3915
 14402              	.LVL1700:
5540:Core/Src/bno055.c **** 
 14403              		.loc 1 5540 5 view .LVU3916
5540:Core/Src/bno055.c **** 
 14404              		.loc 1 5540 8 is_stmt 0 view .LVU3917
 14405 000c 8DF80530 		strb	r3, [sp, #5]
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14406              		.loc 1 5544 5 is_stmt 1 view .LVU3918
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14407              		.loc 1 5544 16 is_stmt 0 view .LVU3919
 14408 0010 0DF10500 		add	r0, sp, #5
 14409              	.LVL1701:
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14410              		.loc 1 5544 16 view .LVU3920
 14411 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14412              	.LVL1702:
 14413 0018 0446     		mov	r4, r0
 14414              	.LVL1703:
5545:Core/Src/bno055.c ****     {
 14415              		.loc 1 5545 5 is_stmt 1 view .LVU3921
5545:Core/Src/bno055.c ****     {
 14416              		.loc 1 5545 22 is_stmt 0 view .LVU3922
 14417 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5545:Core/Src/bno055.c ****     {
 14418              		.loc 1 5545 8 view .LVU3923
 14419 001e 012B     		cmp	r3, #1
 14420 0020 15D1     		bne	.L1050
 14421              	.L1045:
5549:Core/Src/bno055.c ****     {
 14422              		.loc 1 5549 5 is_stmt 1 view .LVU3924
5549:Core/Src/bno055.c ****     {
 14423              		.loc 1 5549 8 is_stmt 0 view .LVU3925
 14424 0022 DCB9     		cbnz	r4, .L1047
ARM GAS  /tmp/cc9kYR4Z.s 			page 431


5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14425              		.loc 1 5552 9 is_stmt 1 view .LVU3926
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14426              		.loc 1 5552 21 is_stmt 0 view .LVU3927
 14427 0024 0DF10600 		add	r0, sp, #6
 14428 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 14429              	.LVL1704:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14430              		.loc 1 5552 18 view .LVU3928
 14431 002c 54FA80F4 		uxtab	r4, r4, r0
 14432              	.LVL1705:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14433              		.loc 1 5552 18 view .LVU3929
 14434 0030 64B2     		sxtb	r4, r4
 14435              	.LVL1706:
5553:Core/Src/bno055.c ****         {
 14436              		.loc 1 5553 9 is_stmt 1 view .LVU3930
5553:Core/Src/bno055.c ****         {
 14437              		.loc 1 5553 12 is_stmt 0 view .LVU3931
 14438 0032 B4B9     		cbnz	r4, .L1048
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14439              		.loc 1 5556 13 is_stmt 1 view .LVU3932
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14440              		.loc 1 5556 22 is_stmt 0 view .LVU3933
 14441 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14442 0038 FFF7FEFF 		bl	__aeabi_i2d
 14443              	.LVL1707:
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14444              		.loc 1 5556 20 view .LVU3934
 14445 003c 0022     		movs	r2, #0
 14446 003e 0A4B     		ldr	r3, .L1051
 14447 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14448              	.LVL1708:
5557:Core/Src/bno055.c ****         }
 14449              		.loc 1 5557 13 is_stmt 1 view .LVU3935
5557:Core/Src/bno055.c ****         }
 14450              		.loc 1 5557 23 is_stmt 0 view .LVU3936
 14451 0044 C5E90001 		strd	r0, [r5]
 14452              	.LVL1709:
 14453              	.L1046:
5569:Core/Src/bno055.c **** }
 14454              		.loc 1 5569 5 is_stmt 1 view .LVU3937
5570:Core/Src/bno055.c **** 
 14455              		.loc 1 5570 1 is_stmt 0 view .LVU3938
 14456 0048 2046     		mov	r0, r4
 14457 004a 03B0     		add	sp, sp, #12
 14458              	.LCFI475:
 14459              		.cfi_remember_state
 14460              		.cfi_def_cfa_offset 12
 14461              		@ sp needed
 14462 004c 30BD     		pop	{r4, r5, pc}
 14463              	.LVL1710:
 14464              	.L1050:
 14465              	.LCFI476:
 14466              		.cfi_restore_state
5547:Core/Src/bno055.c ****     }
 14467              		.loc 1 5547 9 is_stmt 1 view .LVU3939
ARM GAS  /tmp/cc9kYR4Z.s 			page 432


5547:Core/Src/bno055.c ****     }
 14468              		.loc 1 5547 21 is_stmt 0 view .LVU3940
 14469 004e 0120     		movs	r0, #1
 14470 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14471              	.LVL1711:
5547:Core/Src/bno055.c ****     }
 14472              		.loc 1 5547 18 view .LVU3941
 14473 0054 54FA80F4 		uxtab	r4, r4, r0
 14474              	.LVL1712:
5547:Core/Src/bno055.c ****     }
 14475              		.loc 1 5547 18 view .LVU3942
 14476 0058 64B2     		sxtb	r4, r4
 14477              	.LVL1713:
5547:Core/Src/bno055.c ****     }
 14478              		.loc 1 5547 18 view .LVU3943
 14479 005a E2E7     		b	.L1045
 14480              	.L1047:
5566:Core/Src/bno055.c ****     }
 14481              		.loc 1 5566 18 view .LVU3944
 14482 005c 4FF0FF34 		mov	r4, #-1
 14483              	.LVL1714:
5566:Core/Src/bno055.c ****     }
 14484              		.loc 1 5566 18 view .LVU3945
 14485 0060 F2E7     		b	.L1046
 14486              	.LVL1715:
 14487              	.L1048:
5561:Core/Src/bno055.c ****         }
 14488              		.loc 1 5561 22 view .LVU3946
 14489 0062 4FF0FF34 		mov	r4, #-1
 14490              	.LVL1716:
5561:Core/Src/bno055.c ****         }
 14491              		.loc 1 5561 22 view .LVU3947
 14492 0066 EFE7     		b	.L1046
 14493              	.L1052:
 14494              		.align	2
 14495              	.L1051:
 14496 0068 00208C40 		.word	1082925056
 14497              		.cfi_endproc
 14498              	.LFE96:
 14500              		.section	.text.bno055_convert_double_gyro_xyz_dps,"ax",%progbits
 14501              		.align	1
 14502              		.global	bno055_convert_double_gyro_xyz_dps
 14503              		.syntax unified
 14504              		.thumb
 14505              		.thumb_func
 14507              	bno055_convert_double_gyro_xyz_dps:
 14508              	.LVL1717:
 14509              	.LFB97:
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14510              		.loc 1 5591 1 is_stmt 1 view -0
 14511              		.cfi_startproc
 14512              		@ args = 0, pretend = 0, frame = 16
 14513              		@ frame_needed = 0, uses_anonymous_args = 0
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14514              		.loc 1 5591 1 is_stmt 0 view .LVU3949
 14515 0000 30B5     		push	{r4, r5, lr}
 14516              	.LCFI477:
ARM GAS  /tmp/cc9kYR4Z.s 			page 433


 14517              		.cfi_def_cfa_offset 12
 14518              		.cfi_offset 4, -12
 14519              		.cfi_offset 5, -8
 14520              		.cfi_offset 14, -4
 14521 0002 85B0     		sub	sp, sp, #20
 14522              	.LCFI478:
 14523              		.cfi_def_cfa_offset 32
 14524 0004 0546     		mov	r5, r0
5594:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14525              		.loc 1 5594 5 is_stmt 1 view .LVU3950
 14526              	.LVL1718:
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14527              		.loc 1 5595 5 view .LVU3951
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14528              		.loc 1 5595 26 is_stmt 0 view .LVU3952
 14529 0006 0023     		movs	r3, #0
 14530 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14531 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14532 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5596:Core/Src/bno055.c **** 
 14533              		.loc 1 5596 5 is_stmt 1 view .LVU3953
5596:Core/Src/bno055.c **** 
 14534              		.loc 1 5596 8 is_stmt 0 view .LVU3954
 14535 0014 8DF80730 		strb	r3, [sp, #7]
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14536              		.loc 1 5600 5 is_stmt 1 view .LVU3955
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14537              		.loc 1 5600 16 is_stmt 0 view .LVU3956
 14538 0018 0DF10700 		add	r0, sp, #7
 14539              	.LVL1719:
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14540              		.loc 1 5600 16 view .LVU3957
 14541 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14542              	.LVL1720:
 14543 0020 0446     		mov	r4, r0
 14544              	.LVL1721:
5601:Core/Src/bno055.c ****     {
 14545              		.loc 1 5601 5 is_stmt 1 view .LVU3958
5601:Core/Src/bno055.c ****     {
 14546              		.loc 1 5601 22 is_stmt 0 view .LVU3959
 14547 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5601:Core/Src/bno055.c ****     {
 14548              		.loc 1 5601 8 view .LVU3960
 14549 0026 43BB     		cbnz	r3, .L1059
 14550              	.L1054:
5605:Core/Src/bno055.c ****     {
 14551              		.loc 1 5605 5 is_stmt 1 view .LVU3961
5605:Core/Src/bno055.c ****     {
 14552              		.loc 1 5605 8 is_stmt 0 view .LVU3962
 14553 0028 74BB     		cbnz	r4, .L1056
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14554              		.loc 1 5608 9 is_stmt 1 view .LVU3963
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14555              		.loc 1 5608 21 is_stmt 0 view .LVU3964
 14556 002a 02A8     		add	r0, sp, #8
 14557 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 14558              	.LVL1722:
ARM GAS  /tmp/cc9kYR4Z.s 			page 434


5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14559              		.loc 1 5608 18 view .LVU3965
 14560 0030 54FA80F4 		uxtab	r4, r4, r0
 14561              	.LVL1723:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14562              		.loc 1 5608 18 view .LVU3966
 14563 0034 64B2     		sxtb	r4, r4
 14564              	.LVL1724:
5609:Core/Src/bno055.c ****         {
 14565              		.loc 1 5609 9 is_stmt 1 view .LVU3967
5609:Core/Src/bno055.c ****         {
 14566              		.loc 1 5609 12 is_stmt 0 view .LVU3968
 14567 0036 54BB     		cbnz	r4, .L1057
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14568              		.loc 1 5612 13 is_stmt 1 view .LVU3969
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14569              		.loc 1 5612 27 is_stmt 0 view .LVU3970
 14570 0038 BDF90800 		ldrsh	r0, [sp, #8]
 14571 003c FFF7FEFF 		bl	__aeabi_i2d
 14572              	.LVL1725:
 14573 0040 0022     		movs	r2, #0
 14574 0042 144B     		ldr	r3, .L1060
 14575 0044 FFF7FEFF 		bl	__aeabi_dmul
 14576              	.LVL1726:
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14577              		.loc 1 5612 25 view .LVU3971
 14578 0048 C5E90001 		strd	r0, [r5]
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14579              		.loc 1 5613 13 is_stmt 1 view .LVU3972
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14580              		.loc 1 5613 27 is_stmt 0 view .LVU3973
 14581 004c BDF90A00 		ldrsh	r0, [sp, #10]
 14582 0050 FFF7FEFF 		bl	__aeabi_i2d
 14583              	.LVL1727:
 14584 0054 0022     		movs	r2, #0
 14585 0056 0F4B     		ldr	r3, .L1060
 14586 0058 FFF7FEFF 		bl	__aeabi_dmul
 14587              	.LVL1728:
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14588              		.loc 1 5613 25 view .LVU3974
 14589 005c C5E90201 		strd	r0, [r5, #8]
5614:Core/Src/bno055.c ****         }
 14590              		.loc 1 5614 13 is_stmt 1 view .LVU3975
5614:Core/Src/bno055.c ****         }
 14591              		.loc 1 5614 27 is_stmt 0 view .LVU3976
 14592 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 14593 0064 FFF7FEFF 		bl	__aeabi_i2d
 14594              	.LVL1729:
 14595 0068 0022     		movs	r2, #0
 14596 006a 0A4B     		ldr	r3, .L1060
 14597 006c FFF7FEFF 		bl	__aeabi_dmul
 14598              	.LVL1730:
5614:Core/Src/bno055.c ****         }
 14599              		.loc 1 5614 25 view .LVU3977
 14600 0070 C5E90401 		strd	r0, [r5, #16]
 14601              	.LVL1731:
 14602              	.L1055:
ARM GAS  /tmp/cc9kYR4Z.s 			page 435


5626:Core/Src/bno055.c **** }
 14603              		.loc 1 5626 5 is_stmt 1 view .LVU3978
5627:Core/Src/bno055.c **** 
 14604              		.loc 1 5627 1 is_stmt 0 view .LVU3979
 14605 0074 2046     		mov	r0, r4
 14606 0076 05B0     		add	sp, sp, #20
 14607              	.LCFI479:
 14608              		.cfi_remember_state
 14609              		.cfi_def_cfa_offset 12
 14610              		@ sp needed
 14611 0078 30BD     		pop	{r4, r5, pc}
 14612              	.LVL1732:
 14613              	.L1059:
 14614              	.LCFI480:
 14615              		.cfi_restore_state
5603:Core/Src/bno055.c ****     }
 14616              		.loc 1 5603 9 is_stmt 1 view .LVU3980
5603:Core/Src/bno055.c ****     }
 14617              		.loc 1 5603 21 is_stmt 0 view .LVU3981
 14618 007a 0020     		movs	r0, #0
 14619 007c FFF7FEFF 		bl	bno055_set_gyro_unit
 14620              	.LVL1733:
5603:Core/Src/bno055.c ****     }
 14621              		.loc 1 5603 18 view .LVU3982
 14622 0080 54FA80F4 		uxtab	r4, r4, r0
 14623              	.LVL1734:
5603:Core/Src/bno055.c ****     }
 14624              		.loc 1 5603 18 view .LVU3983
 14625 0084 64B2     		sxtb	r4, r4
 14626              	.LVL1735:
5603:Core/Src/bno055.c ****     }
 14627              		.loc 1 5603 18 view .LVU3984
 14628 0086 CFE7     		b	.L1054
 14629              	.L1056:
5623:Core/Src/bno055.c ****     }
 14630              		.loc 1 5623 18 view .LVU3985
 14631 0088 4FF0FF34 		mov	r4, #-1
 14632              	.LVL1736:
5623:Core/Src/bno055.c ****     }
 14633              		.loc 1 5623 18 view .LVU3986
 14634 008c F2E7     		b	.L1055
 14635              	.LVL1737:
 14636              	.L1057:
5618:Core/Src/bno055.c ****         }
 14637              		.loc 1 5618 22 view .LVU3987
 14638 008e 4FF0FF34 		mov	r4, #-1
 14639              	.LVL1738:
5618:Core/Src/bno055.c ****         }
 14640              		.loc 1 5618 22 view .LVU3988
 14641 0092 EFE7     		b	.L1055
 14642              	.L1061:
 14643              		.align	2
 14644              	.L1060:
 14645 0094 0000B03F 		.word	1068498944
 14646              		.cfi_endproc
 14647              	.LFE97:
 14649              		.section	.text.bno055_convert_double_gyro_xyz_rps,"ax",%progbits
ARM GAS  /tmp/cc9kYR4Z.s 			page 436


 14650              		.align	1
 14651              		.global	bno055_convert_double_gyro_xyz_rps
 14652              		.syntax unified
 14653              		.thumb
 14654              		.thumb_func
 14656              	bno055_convert_double_gyro_xyz_rps:
 14657              	.LVL1739:
 14658              	.LFB98:
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14659              		.loc 1 5648 1 is_stmt 1 view -0
 14660              		.cfi_startproc
 14661              		@ args = 0, pretend = 0, frame = 16
 14662              		@ frame_needed = 0, uses_anonymous_args = 0
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14663              		.loc 1 5648 1 is_stmt 0 view .LVU3990
 14664 0000 30B5     		push	{r4, r5, lr}
 14665              	.LCFI481:
 14666              		.cfi_def_cfa_offset 12
 14667              		.cfi_offset 4, -12
 14668              		.cfi_offset 5, -8
 14669              		.cfi_offset 14, -4
 14670 0002 85B0     		sub	sp, sp, #20
 14671              	.LCFI482:
 14672              		.cfi_def_cfa_offset 32
 14673 0004 0546     		mov	r5, r0
5651:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14674              		.loc 1 5651 5 is_stmt 1 view .LVU3991
 14675              	.LVL1740:
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14676              		.loc 1 5652 5 view .LVU3992
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14677              		.loc 1 5652 26 is_stmt 0 view .LVU3993
 14678 0006 0023     		movs	r3, #0
 14679 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14680 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14681 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5653:Core/Src/bno055.c **** 
 14682              		.loc 1 5653 5 is_stmt 1 view .LVU3994
5653:Core/Src/bno055.c **** 
 14683              		.loc 1 5653 8 is_stmt 0 view .LVU3995
 14684 0014 8DF80730 		strb	r3, [sp, #7]
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14685              		.loc 1 5657 5 is_stmt 1 view .LVU3996
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14686              		.loc 1 5657 16 is_stmt 0 view .LVU3997
 14687 0018 0DF10700 		add	r0, sp, #7
 14688              	.LVL1741:
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14689              		.loc 1 5657 16 view .LVU3998
 14690 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14691              	.LVL1742:
 14692 0020 0446     		mov	r4, r0
 14693              	.LVL1743:
5658:Core/Src/bno055.c ****     {
 14694              		.loc 1 5658 5 is_stmt 1 view .LVU3999
5658:Core/Src/bno055.c ****     {
 14695              		.loc 1 5658 22 is_stmt 0 view .LVU4000
ARM GAS  /tmp/cc9kYR4Z.s 			page 437


 14696 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5658:Core/Src/bno055.c ****     {
 14697              		.loc 1 5658 8 view .LVU4001
 14698 0026 012B     		cmp	r3, #1
 14699 0028 28D1     		bne	.L1068
 14700              	.L1063:
5662:Core/Src/bno055.c ****     {
 14701              		.loc 1 5662 5 is_stmt 1 view .LVU4002
5662:Core/Src/bno055.c ****     {
 14702              		.loc 1 5662 8 is_stmt 0 view .LVU4003
 14703 002a 74BB     		cbnz	r4, .L1065
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14704              		.loc 1 5665 9 is_stmt 1 view .LVU4004
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14705              		.loc 1 5665 21 is_stmt 0 view .LVU4005
 14706 002c 02A8     		add	r0, sp, #8
 14707 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 14708              	.LVL1744:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14709              		.loc 1 5665 18 view .LVU4006
 14710 0032 54FA80F4 		uxtab	r4, r4, r0
 14711              	.LVL1745:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14712              		.loc 1 5665 18 view .LVU4007
 14713 0036 64B2     		sxtb	r4, r4
 14714              	.LVL1746:
5666:Core/Src/bno055.c ****         {
 14715              		.loc 1 5666 9 is_stmt 1 view .LVU4008
5666:Core/Src/bno055.c ****         {
 14716              		.loc 1 5666 12 is_stmt 0 view .LVU4009
 14717 0038 54BB     		cbnz	r4, .L1066
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14718              		.loc 1 5669 13 is_stmt 1 view .LVU4010
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14719              		.loc 1 5669 27 is_stmt 0 view .LVU4011
 14720 003a BDF90800 		ldrsh	r0, [sp, #8]
 14721 003e FFF7FEFF 		bl	__aeabi_i2d
 14722              	.LVL1747:
 14723 0042 0022     		movs	r2, #0
 14724 0044 144B     		ldr	r3, .L1069
 14725 0046 FFF7FEFF 		bl	__aeabi_ddiv
 14726              	.LVL1748:
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14727              		.loc 1 5669 25 view .LVU4012
 14728 004a C5E90001 		strd	r0, [r5]
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14729              		.loc 1 5670 13 is_stmt 1 view .LVU4013
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14730              		.loc 1 5670 27 is_stmt 0 view .LVU4014
 14731 004e BDF90A00 		ldrsh	r0, [sp, #10]
 14732 0052 FFF7FEFF 		bl	__aeabi_i2d
 14733              	.LVL1749:
 14734 0056 0022     		movs	r2, #0
 14735 0058 0F4B     		ldr	r3, .L1069
 14736 005a FFF7FEFF 		bl	__aeabi_ddiv
 14737              	.LVL1750:
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
ARM GAS  /tmp/cc9kYR4Z.s 			page 438


 14738              		.loc 1 5670 25 view .LVU4015
 14739 005e C5E90201 		strd	r0, [r5, #8]
5671:Core/Src/bno055.c ****         }
 14740              		.loc 1 5671 13 is_stmt 1 view .LVU4016
5671:Core/Src/bno055.c ****         }
 14741              		.loc 1 5671 27 is_stmt 0 view .LVU4017
 14742 0062 BDF90C00 		ldrsh	r0, [sp, #12]
 14743 0066 FFF7FEFF 		bl	__aeabi_i2d
 14744              	.LVL1751:
 14745 006a 0022     		movs	r2, #0
 14746 006c 0A4B     		ldr	r3, .L1069
 14747 006e FFF7FEFF 		bl	__aeabi_ddiv
 14748              	.LVL1752:
5671:Core/Src/bno055.c ****         }
 14749              		.loc 1 5671 25 view .LVU4018
 14750 0072 C5E90401 		strd	r0, [r5, #16]
 14751              	.LVL1753:
 14752              	.L1064:
5683:Core/Src/bno055.c **** }
 14753              		.loc 1 5683 5 is_stmt 1 view .LVU4019
5684:Core/Src/bno055.c **** 
 14754              		.loc 1 5684 1 is_stmt 0 view .LVU4020
 14755 0076 2046     		mov	r0, r4
 14756 0078 05B0     		add	sp, sp, #20
 14757              	.LCFI483:
 14758              		.cfi_remember_state
 14759              		.cfi_def_cfa_offset 12
 14760              		@ sp needed
 14761 007a 30BD     		pop	{r4, r5, pc}
 14762              	.LVL1754:
 14763              	.L1068:
 14764              	.LCFI484:
 14765              		.cfi_restore_state
5660:Core/Src/bno055.c ****     }
 14766              		.loc 1 5660 9 is_stmt 1 view .LVU4021
5660:Core/Src/bno055.c ****     }
 14767              		.loc 1 5660 21 is_stmt 0 view .LVU4022
 14768 007c 0120     		movs	r0, #1
 14769 007e FFF7FEFF 		bl	bno055_set_gyro_unit
 14770              	.LVL1755:
5660:Core/Src/bno055.c ****     }
 14771              		.loc 1 5660 18 view .LVU4023
 14772 0082 54FA80F4 		uxtab	r4, r4, r0
 14773              	.LVL1756:
5660:Core/Src/bno055.c ****     }
 14774              		.loc 1 5660 18 view .LVU4024
 14775 0086 64B2     		sxtb	r4, r4
 14776              	.LVL1757:
5660:Core/Src/bno055.c ****     }
 14777              		.loc 1 5660 18 view .LVU4025
 14778 0088 CFE7     		b	.L1063
 14779              	.L1065:
5680:Core/Src/bno055.c ****     }
 14780              		.loc 1 5680 18 view .LVU4026
 14781 008a 4FF0FF34 		mov	r4, #-1
 14782              	.LVL1758:
5680:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 439


 14783              		.loc 1 5680 18 view .LVU4027
 14784 008e F2E7     		b	.L1064
 14785              	.LVL1759:
 14786              	.L1066:
5675:Core/Src/bno055.c ****         }
 14787              		.loc 1 5675 22 view .LVU4028
 14788 0090 4FF0FF34 		mov	r4, #-1
 14789              	.LVL1760:
5675:Core/Src/bno055.c ****         }
 14790              		.loc 1 5675 22 view .LVU4029
 14791 0094 EFE7     		b	.L1064
 14792              	.L1070:
 14793 0096 00BF     		.align	2
 14794              	.L1069:
 14795 0098 00208C40 		.word	1082925056
 14796              		.cfi_endproc
 14797              	.LFE98:
 14799              		.section	.text.bno055_set_euler_unit,"ax",%progbits
 14800              		.align	1
 14801              		.global	bno055_set_euler_unit
 14802              		.syntax unified
 14803              		.thumb
 14804              		.thumb_func
 14806              	bno055_set_euler_unit:
 14807              	.LVL1761:
 14808              	.LFB138:
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14809              		.loc 1 7731 1 is_stmt 1 view -0
 14810              		.cfi_startproc
 14811              		@ args = 0, pretend = 0, frame = 8
 14812              		@ frame_needed = 0, uses_anonymous_args = 0
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14813              		.loc 1 7731 1 is_stmt 0 view .LVU4031
 14814 0000 30B5     		push	{r4, r5, lr}
 14815              	.LCFI485:
 14816              		.cfi_def_cfa_offset 12
 14817              		.cfi_offset 4, -12
 14818              		.cfi_offset 5, -8
 14819              		.cfi_offset 14, -4
 14820 0002 83B0     		sub	sp, sp, #12
 14821              	.LCFI486:
 14822              		.cfi_def_cfa_offset 24
7732:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 14823              		.loc 1 7732 5 is_stmt 1 view .LVU4032
 14824              	.LVL1762:
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14825              		.loc 1 7733 5 view .LVU4033
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14826              		.loc 1 7733 8 is_stmt 0 view .LVU4034
 14827 0004 0023     		movs	r3, #0
 14828 0006 8DF80730 		strb	r3, [sp, #7]
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14829              		.loc 1 7734 5 is_stmt 1 view .LVU4035
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14830              		.loc 1 7734 8 is_stmt 0 view .LVU4036
 14831 000a 8DF80630 		strb	r3, [sp, #6]
7735:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 440


 14832              		.loc 1 7735 5 is_stmt 1 view .LVU4037
 14833              	.LVL1763:
7738:Core/Src/bno055.c ****     {
 14834              		.loc 1 7738 5 view .LVU4038
7738:Core/Src/bno055.c ****     {
 14835              		.loc 1 7738 18 is_stmt 0 view .LVU4039
 14836 000e 264B     		ldr	r3, .L1081
 14837 0010 1B68     		ldr	r3, [r3]
7738:Core/Src/bno055.c ****     {
 14838              		.loc 1 7738 8 view .LVU4040
 14839 0012 002B     		cmp	r3, #0
 14840 0014 44D0     		beq	.L1075
 14841 0016 0546     		mov	r5, r0
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14842              		.loc 1 7747 9 is_stmt 1 view .LVU4041
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14843              		.loc 1 7747 19 is_stmt 0 view .LVU4042
 14844 0018 0DF10600 		add	r0, sp, #6
 14845              	.LVL1764:
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14846              		.loc 1 7747 19 view .LVU4043
 14847 001c FFF7FEFF 		bl	bno055_get_operation_mode
 14848              	.LVL1765:
7748:Core/Src/bno055.c ****         {
 14849              		.loc 1 7748 9 is_stmt 1 view .LVU4044
7748:Core/Src/bno055.c ****         {
 14850              		.loc 1 7748 12 is_stmt 0 view .LVU4045
 14851 0020 0446     		mov	r4, r0
 14852 0022 60BB     		cbnz	r0, .L1076
7750:Core/Src/bno055.c ****             {
 14853              		.loc 1 7750 13 is_stmt 1 view .LVU4046
7750:Core/Src/bno055.c ****             {
 14854              		.loc 1 7750 32 is_stmt 0 view .LVU4047
 14855 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7750:Core/Src/bno055.c ****             {
 14856              		.loc 1 7750 16 view .LVU4048
 14857 0028 1BBB     		cbnz	r3, .L1079
 14858              	.LVL1766:
 14859              	.L1074:
7754:Core/Src/bno055.c ****             {
 14860              		.loc 1 7754 13 is_stmt 1 view .LVU4049
7754:Core/Src/bno055.c ****             {
 14861              		.loc 1 7754 16 is_stmt 0 view .LVU4050
 14862 002a 84BB     		cbnz	r4, .L1077
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14863              		.loc 1 7757 17 is_stmt 1 view .LVU4051
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14864              		.loc 1 7757 36 is_stmt 0 view .LVU4052
 14865 002c 1E4B     		ldr	r3, .L1081
 14866 002e 1868     		ldr	r0, [r3]
 14867 0030 0469     		ldr	r4, [r0, #16]
 14868              	.LVL1767:
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14869              		.loc 1 7757 28 view .LVU4053
 14870 0032 0123     		movs	r3, #1
 14871 0034 0DF10702 		add	r2, sp, #7
 14872 0038 3B21     		movs	r1, #59
ARM GAS  /tmp/cc9kYR4Z.s 			page 441


 14873 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 14874 003c A047     		blx	r4
 14875              	.LVL1768:
7761:Core/Src/bno055.c ****                 {
 14876              		.loc 1 7761 17 is_stmt 1 view .LVU4054
7761:Core/Src/bno055.c ****                 {
 14877              		.loc 1 7761 20 is_stmt 0 view .LVU4055
 14878 003e 0446     		mov	r4, r0
 14879 0040 F8B9     		cbnz	r0, .L1073
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14880              		.loc 1 7763 21 is_stmt 1 view .LVU4056
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14881              		.loc 1 7763 32 is_stmt 0 view .LVU4057
 14882 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 14883 0046 23F00403 		bic	r3, r3, #4
 14884 004a 5BB2     		sxtb	r3, r3
 14885 004c A800     		lsls	r0, r5, #2
 14886              	.LVL1769:
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14887              		.loc 1 7763 32 view .LVU4058
 14888 004e 00F00400 		and	r0, r0, #4
 14889 0052 0343     		orrs	r3, r3, r0
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14890              		.loc 1 7763 30 view .LVU4059
 14891 0054 8DF80730 		strb	r3, [sp, #7]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14892              		.loc 1 7764 21 is_stmt 1 view .LVU4060
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14893              		.loc 1 7764 41 is_stmt 0 view .LVU4061
 14894 0058 134B     		ldr	r3, .L1081
 14895 005a 1868     		ldr	r0, [r3]
 14896 005c C568     		ldr	r5, [r0, #12]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14897              		.loc 1 7764 33 view .LVU4062
 14898 005e 0123     		movs	r3, #1
 14899 0060 0DF10702 		add	r2, sp, #7
 14900 0064 3B21     		movs	r1, #59
 14901 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 14902 0068 A847     		blx	r5
 14903              	.LVL1770:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14904              		.loc 1 7764 30 view .LVU4063
 14905 006a 54FA80F0 		uxtab	r0, r4, r0
 14906 006e 44B2     		sxtb	r4, r0
 14907              	.LVL1771:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14908              		.loc 1 7764 30 view .LVU4064
 14909 0070 07E0     		b	.L1073
 14910              	.LVL1772:
 14911              	.L1079:
7752:Core/Src/bno055.c ****             }
 14912              		.loc 1 7752 17 is_stmt 1 view .LVU4065
7752:Core/Src/bno055.c ****             }
 14913              		.loc 1 7752 28 is_stmt 0 view .LVU4066
 14914 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 14915              	.LVL1773:
7752:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 442


 14916              		.loc 1 7752 25 view .LVU4067
 14917 0076 54FA80F4 		uxtab	r4, r4, r0
 14918 007a 64B2     		sxtb	r4, r4
 14919              	.LVL1774:
7752:Core/Src/bno055.c ****             }
 14920              		.loc 1 7752 25 view .LVU4068
 14921 007c D5E7     		b	.L1074
 14922              	.LVL1775:
 14923              	.L1076:
7777:Core/Src/bno055.c ****         }
 14924              		.loc 1 7777 22 view .LVU4069
 14925 007e 4FF0FF34 		mov	r4, #-1
 14926              	.LVL1776:
 14927              	.L1073:
7780:Core/Src/bno055.c ****     {
 14928              		.loc 1 7780 5 is_stmt 1 view .LVU4070
7780:Core/Src/bno055.c ****     {
 14929              		.loc 1 7780 24 is_stmt 0 view .LVU4071
 14930 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7780:Core/Src/bno055.c ****     {
 14931              		.loc 1 7780 8 view .LVU4072
 14932 0086 28B9     		cbnz	r0, .L1080
 14933              	.LVL1777:
 14934              	.L1072:
7788:Core/Src/bno055.c **** 
 14935              		.loc 1 7788 1 view .LVU4073
 14936 0088 2046     		mov	r0, r4
 14937 008a 03B0     		add	sp, sp, #12
 14938              	.LCFI487:
 14939              		.cfi_remember_state
 14940              		.cfi_def_cfa_offset 12
 14941              		@ sp needed
 14942 008c 30BD     		pop	{r4, r5, pc}
 14943              	.LVL1778:
 14944              	.L1077:
 14945              	.LCFI488:
 14946              		.cfi_restore_state
7772:Core/Src/bno055.c ****             }
 14947              		.loc 1 7772 26 view .LVU4074
 14948 008e 4FF0FF34 		mov	r4, #-1
 14949              	.LVL1779:
7772:Core/Src/bno055.c ****             }
 14950              		.loc 1 7772 26 view .LVU4075
 14951 0092 F6E7     		b	.L1073
 14952              	.LVL1780:
 14953              	.L1080:
7784:Core/Src/bno055.c ****     }
 14954              		.loc 1 7784 9 is_stmt 1 view .LVU4076
7784:Core/Src/bno055.c ****     }
 14955              		.loc 1 7784 21 is_stmt 0 view .LVU4077
 14956 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 14957              	.LVL1781:
7784:Core/Src/bno055.c ****     }
 14958              		.loc 1 7784 18 view .LVU4078
 14959 0098 54FA80F0 		uxtab	r0, r4, r0
 14960 009c 44B2     		sxtb	r4, r0
 14961              	.LVL1782:
ARM GAS  /tmp/cc9kYR4Z.s 			page 443


7784:Core/Src/bno055.c ****     }
 14962              		.loc 1 7784 18 view .LVU4079
 14963 009e F3E7     		b	.L1072
 14964              	.LVL1783:
 14965              	.L1075:
7740:Core/Src/bno055.c ****     }
 14966              		.loc 1 7740 16 view .LVU4080
 14967 00a0 6FF07E04 		mvn	r4, #126
 14968 00a4 F0E7     		b	.L1072
 14969              	.L1082:
 14970 00a6 00BF     		.align	2
 14971              	.L1081:
 14972 00a8 00000000 		.word	.LANCHOR0
 14973              		.cfi_endproc
 14974              	.LFE138:
 14976              		.section	.text.bno055_convert_float_euler_h_deg,"ax",%progbits
 14977              		.align	1
 14978              		.global	bno055_convert_float_euler_h_deg
 14979              		.syntax unified
 14980              		.thumb
 14981              		.thumb_func
 14983              	bno055_convert_float_euler_h_deg:
 14984              	.LVL1784:
 14985              	.LFB61:
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 14986              		.loc 1 3880 1 is_stmt 1 view -0
 14987              		.cfi_startproc
 14988              		@ args = 0, pretend = 0, frame = 8
 14989              		@ frame_needed = 0, uses_anonymous_args = 0
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 14990              		.loc 1 3880 1 is_stmt 0 view .LVU4082
 14991 0000 30B5     		push	{r4, r5, lr}
 14992              	.LCFI489:
 14993              		.cfi_def_cfa_offset 12
 14994              		.cfi_offset 4, -12
 14995              		.cfi_offset 5, -8
 14996              		.cfi_offset 14, -4
 14997 0002 83B0     		sub	sp, sp, #12
 14998              	.LCFI490:
 14999              		.cfi_def_cfa_offset 24
 15000 0004 0546     		mov	r5, r0
3883:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15001              		.loc 1 3883 5 is_stmt 1 view .LVU4083
 15002              	.LVL1785:
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15003              		.loc 1 3884 5 view .LVU4084
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15004              		.loc 1 3884 9 is_stmt 0 view .LVU4085
 15005 0006 0023     		movs	r3, #0
 15006 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3885:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15007              		.loc 1 3885 5 is_stmt 1 view .LVU4086
 15008              	.LVL1786:
3886:Core/Src/bno055.c **** 
 15009              		.loc 1 3886 5 view .LVU4087
3886:Core/Src/bno055.c **** 
 15010              		.loc 1 3886 8 is_stmt 0 view .LVU4088
ARM GAS  /tmp/cc9kYR4Z.s 			page 444


 15011 000c 8DF80530 		strb	r3, [sp, #5]
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15012              		.loc 1 3890 5 is_stmt 1 view .LVU4089
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15013              		.loc 1 3890 16 is_stmt 0 view .LVU4090
 15014 0010 0DF10500 		add	r0, sp, #5
 15015              	.LVL1787:
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15016              		.loc 1 3890 16 view .LVU4091
 15017 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15018              	.LVL1788:
 15019 0018 0446     		mov	r4, r0
 15020              	.LVL1789:
3891:Core/Src/bno055.c ****     {
 15021              		.loc 1 3891 5 is_stmt 1 view .LVU4092
3891:Core/Src/bno055.c ****     {
 15022              		.loc 1 3891 23 is_stmt 0 view .LVU4093
 15023 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3891:Core/Src/bno055.c ****     {
 15024              		.loc 1 3891 8 view .LVU4094
 15025 001e B3B9     		cbnz	r3, .L1089
 15026              	.L1084:
3895:Core/Src/bno055.c ****     {
 15027              		.loc 1 3895 5 is_stmt 1 view .LVU4095
3895:Core/Src/bno055.c ****     {
 15028              		.loc 1 3895 8 is_stmt 0 view .LVU4096
 15029 0020 E4B9     		cbnz	r4, .L1086
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15030              		.loc 1 3898 9 is_stmt 1 view .LVU4097
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15031              		.loc 1 3898 21 is_stmt 0 view .LVU4098
 15032 0022 0DF10600 		add	r0, sp, #6
 15033 0026 FFF7FEFF 		bl	bno055_read_euler_h
 15034              	.LVL1790:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15035              		.loc 1 3898 18 view .LVU4099
 15036 002a 54FA80F4 		uxtab	r4, r4, r0
 15037              	.LVL1791:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15038              		.loc 1 3898 18 view .LVU4100
 15039 002e 64B2     		sxtb	r4, r4
 15040              	.LVL1792:
3899:Core/Src/bno055.c ****         {
 15041              		.loc 1 3899 9 is_stmt 1 view .LVU4101
3899:Core/Src/bno055.c ****         {
 15042              		.loc 1 3899 12 is_stmt 0 view .LVU4102
 15043 0030 BCB9     		cbnz	r4, .L1087
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15044              		.loc 1 3902 13 is_stmt 1 view .LVU4103
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15045              		.loc 1 3902 46 is_stmt 0 view .LVU4104
 15046 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15047 0036 FFF7FEFF 		bl	__aeabi_i2d
 15048              	.LVL1793:
 15049 003a 0022     		movs	r2, #0
 15050 003c 0A4B     		ldr	r3, .L1090
 15051 003e FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cc9kYR4Z.s 			page 445


 15052              	.LVL1794:
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15053              		.loc 1 3902 20 view .LVU4105
 15054 0042 FFF7FEFF 		bl	__aeabi_d2f
 15055              	.LVL1795:
3903:Core/Src/bno055.c ****         }
 15056              		.loc 1 3903 13 is_stmt 1 view .LVU4106
3903:Core/Src/bno055.c ****         }
 15057              		.loc 1 3903 24 is_stmt 0 view .LVU4107
 15058 0046 2860     		str	r0, [r5]	@ float
 15059              	.LVL1796:
 15060              	.L1085:
3915:Core/Src/bno055.c **** }
 15061              		.loc 1 3915 5 is_stmt 1 view .LVU4108
3916:Core/Src/bno055.c **** 
 15062              		.loc 1 3916 1 is_stmt 0 view .LVU4109
 15063 0048 2046     		mov	r0, r4
 15064 004a 03B0     		add	sp, sp, #12
 15065              	.LCFI491:
 15066              		.cfi_remember_state
 15067              		.cfi_def_cfa_offset 12
 15068              		@ sp needed
 15069 004c 30BD     		pop	{r4, r5, pc}
 15070              	.LVL1797:
 15071              	.L1089:
 15072              	.LCFI492:
 15073              		.cfi_restore_state
3893:Core/Src/bno055.c ****     }
 15074              		.loc 1 3893 9 is_stmt 1 view .LVU4110
3893:Core/Src/bno055.c ****     }
 15075              		.loc 1 3893 21 is_stmt 0 view .LVU4111
 15076 004e 0020     		movs	r0, #0
 15077 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15078              	.LVL1798:
3893:Core/Src/bno055.c ****     }
 15079              		.loc 1 3893 18 view .LVU4112
 15080 0054 54FA80F4 		uxtab	r4, r4, r0
 15081              	.LVL1799:
3893:Core/Src/bno055.c ****     }
 15082              		.loc 1 3893 18 view .LVU4113
 15083 0058 64B2     		sxtb	r4, r4
 15084              	.LVL1800:
3893:Core/Src/bno055.c ****     }
 15085              		.loc 1 3893 18 view .LVU4114
 15086 005a E1E7     		b	.L1084
 15087              	.L1086:
3912:Core/Src/bno055.c ****     }
 15088              		.loc 1 3912 18 view .LVU4115
 15089 005c 4FF0FF34 		mov	r4, #-1
 15090              	.LVL1801:
3912:Core/Src/bno055.c ****     }
 15091              		.loc 1 3912 18 view .LVU4116
 15092 0060 F2E7     		b	.L1085
 15093              	.LVL1802:
 15094              	.L1087:
3907:Core/Src/bno055.c ****         }
 15095              		.loc 1 3907 22 view .LVU4117
ARM GAS  /tmp/cc9kYR4Z.s 			page 446


 15096 0062 4FF0FF34 		mov	r4, #-1
 15097              	.LVL1803:
3907:Core/Src/bno055.c ****         }
 15098              		.loc 1 3907 22 view .LVU4118
 15099 0066 EFE7     		b	.L1085
 15100              	.L1091:
 15101              		.align	2
 15102              	.L1090:
 15103 0068 0000B03F 		.word	1068498944
 15104              		.cfi_endproc
 15105              	.LFE61:
 15107              		.section	.text.bno055_convert_float_euler_h_rad,"ax",%progbits
 15108              		.align	1
 15109              		.global	bno055_convert_float_euler_h_rad
 15110              		.syntax unified
 15111              		.thumb
 15112              		.thumb_func
 15114              	bno055_convert_float_euler_h_rad:
 15115              	.LVL1804:
 15116              	.LFB62:
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15117              		.loc 1 3931 1 is_stmt 1 view -0
 15118              		.cfi_startproc
 15119              		@ args = 0, pretend = 0, frame = 8
 15120              		@ frame_needed = 0, uses_anonymous_args = 0
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15121              		.loc 1 3931 1 is_stmt 0 view .LVU4120
 15122 0000 30B5     		push	{r4, r5, lr}
 15123              	.LCFI493:
 15124              		.cfi_def_cfa_offset 12
 15125              		.cfi_offset 4, -12
 15126              		.cfi_offset 5, -8
 15127              		.cfi_offset 14, -4
 15128 0002 83B0     		sub	sp, sp, #12
 15129              	.LCFI494:
 15130              		.cfi_def_cfa_offset 24
 15131 0004 0546     		mov	r5, r0
3932:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15132              		.loc 1 3932 5 is_stmt 1 view .LVU4121
 15133              	.LVL1805:
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15134              		.loc 1 3933 5 view .LVU4122
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15135              		.loc 1 3933 9 is_stmt 0 view .LVU4123
 15136 0006 0023     		movs	r3, #0
 15137 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3934:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15138              		.loc 1 3934 5 is_stmt 1 view .LVU4124
 15139              	.LVL1806:
3935:Core/Src/bno055.c **** 
 15140              		.loc 1 3935 5 view .LVU4125
3935:Core/Src/bno055.c **** 
 15141              		.loc 1 3935 8 is_stmt 0 view .LVU4126
 15142 000c 8DF80530 		strb	r3, [sp, #5]
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15143              		.loc 1 3937 5 is_stmt 1 view .LVU4127
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
ARM GAS  /tmp/cc9kYR4Z.s 			page 447


 15144              		.loc 1 3937 16 is_stmt 0 view .LVU4128
 15145 0010 0DF10500 		add	r0, sp, #5
 15146              	.LVL1807:
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15147              		.loc 1 3937 16 view .LVU4129
 15148 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15149              	.LVL1808:
 15150 0018 0446     		mov	r4, r0
 15151              	.LVL1809:
3938:Core/Src/bno055.c ****     {
 15152              		.loc 1 3938 5 is_stmt 1 view .LVU4130
3938:Core/Src/bno055.c ****     {
 15153              		.loc 1 3938 23 is_stmt 0 view .LVU4131
 15154 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3938:Core/Src/bno055.c ****     {
 15155              		.loc 1 3938 8 view .LVU4132
 15156 001e 012B     		cmp	r3, #1
 15157 0020 16D1     		bne	.L1098
 15158              	.L1093:
3944:Core/Src/bno055.c ****     {
 15159              		.loc 1 3944 5 is_stmt 1 view .LVU4133
3944:Core/Src/bno055.c ****     {
 15160              		.loc 1 3944 8 is_stmt 0 view .LVU4134
 15161 0022 E4B9     		cbnz	r4, .L1095
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15162              		.loc 1 3947 9 is_stmt 1 view .LVU4135
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15163              		.loc 1 3947 21 is_stmt 0 view .LVU4136
 15164 0024 0DF10600 		add	r0, sp, #6
 15165 0028 FFF7FEFF 		bl	bno055_read_euler_h
 15166              	.LVL1810:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15167              		.loc 1 3947 18 view .LVU4137
 15168 002c 54FA80F4 		uxtab	r4, r4, r0
 15169              	.LVL1811:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15170              		.loc 1 3947 18 view .LVU4138
 15171 0030 64B2     		sxtb	r4, r4
 15172              	.LVL1812:
3948:Core/Src/bno055.c ****         {
 15173              		.loc 1 3948 9 is_stmt 1 view .LVU4139
3948:Core/Src/bno055.c ****         {
 15174              		.loc 1 3948 12 is_stmt 0 view .LVU4140
 15175 0032 BCB9     		cbnz	r4, .L1096
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15176              		.loc 1 3951 13 is_stmt 1 view .LVU4141
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15177              		.loc 1 3951 46 is_stmt 0 view .LVU4142
 15178 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15179 0038 FFF7FEFF 		bl	__aeabi_i2d
 15180              	.LVL1813:
 15181 003c 0022     		movs	r2, #0
 15182 003e 0B4B     		ldr	r3, .L1099
 15183 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15184              	.LVL1814:
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15185              		.loc 1 3951 20 view .LVU4143
ARM GAS  /tmp/cc9kYR4Z.s 			page 448


 15186 0044 FFF7FEFF 		bl	__aeabi_d2f
 15187              	.LVL1815:
3952:Core/Src/bno055.c ****         }
 15188              		.loc 1 3952 13 is_stmt 1 view .LVU4144
3952:Core/Src/bno055.c ****         }
 15189              		.loc 1 3952 24 is_stmt 0 view .LVU4145
 15190 0048 2860     		str	r0, [r5]	@ float
 15191              	.LVL1816:
 15192              	.L1094:
3964:Core/Src/bno055.c **** }
 15193              		.loc 1 3964 5 is_stmt 1 view .LVU4146
3965:Core/Src/bno055.c **** 
 15194              		.loc 1 3965 1 is_stmt 0 view .LVU4147
 15195 004a 2046     		mov	r0, r4
 15196 004c 03B0     		add	sp, sp, #12
 15197              	.LCFI495:
 15198              		.cfi_remember_state
 15199              		.cfi_def_cfa_offset 12
 15200              		@ sp needed
 15201 004e 30BD     		pop	{r4, r5, pc}
 15202              	.LVL1817:
 15203              	.L1098:
 15204              	.LCFI496:
 15205              		.cfi_restore_state
3942:Core/Src/bno055.c ****     }
 15206              		.loc 1 3942 9 is_stmt 1 view .LVU4148
3942:Core/Src/bno055.c ****     }
 15207              		.loc 1 3942 21 is_stmt 0 view .LVU4149
 15208 0050 0120     		movs	r0, #1
 15209 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15210              	.LVL1818:
3942:Core/Src/bno055.c ****     }
 15211              		.loc 1 3942 18 view .LVU4150
 15212 0056 54FA80F4 		uxtab	r4, r4, r0
 15213              	.LVL1819:
3942:Core/Src/bno055.c ****     }
 15214              		.loc 1 3942 18 view .LVU4151
 15215 005a 64B2     		sxtb	r4, r4
 15216              	.LVL1820:
3942:Core/Src/bno055.c ****     }
 15217              		.loc 1 3942 18 view .LVU4152
 15218 005c E1E7     		b	.L1093
 15219              	.L1095:
3961:Core/Src/bno055.c ****     }
 15220              		.loc 1 3961 18 view .LVU4153
 15221 005e 4FF0FF34 		mov	r4, #-1
 15222              	.LVL1821:
3961:Core/Src/bno055.c ****     }
 15223              		.loc 1 3961 18 view .LVU4154
 15224 0062 F2E7     		b	.L1094
 15225              	.LVL1822:
 15226              	.L1096:
3956:Core/Src/bno055.c ****         }
 15227              		.loc 1 3956 22 view .LVU4155
 15228 0064 4FF0FF34 		mov	r4, #-1
 15229              	.LVL1823:
3956:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 449


 15230              		.loc 1 3956 22 view .LVU4156
 15231 0068 EFE7     		b	.L1094
 15232              	.L1100:
 15233 006a 00BF     		.align	2
 15234              	.L1099:
 15235 006c 00208C40 		.word	1082925056
 15236              		.cfi_endproc
 15237              	.LFE62:
 15239              		.section	.text.bno055_convert_float_euler_r_deg,"ax",%progbits
 15240              		.align	1
 15241              		.global	bno055_convert_float_euler_r_deg
 15242              		.syntax unified
 15243              		.thumb
 15244              		.thumb_func
 15246              	bno055_convert_float_euler_r_deg:
 15247              	.LVL1824:
 15248              	.LFB63:
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15249              		.loc 1 3979 1 is_stmt 1 view -0
 15250              		.cfi_startproc
 15251              		@ args = 0, pretend = 0, frame = 8
 15252              		@ frame_needed = 0, uses_anonymous_args = 0
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15253              		.loc 1 3979 1 is_stmt 0 view .LVU4158
 15254 0000 30B5     		push	{r4, r5, lr}
 15255              	.LCFI497:
 15256              		.cfi_def_cfa_offset 12
 15257              		.cfi_offset 4, -12
 15258              		.cfi_offset 5, -8
 15259              		.cfi_offset 14, -4
 15260 0002 83B0     		sub	sp, sp, #12
 15261              	.LCFI498:
 15262              		.cfi_def_cfa_offset 24
 15263 0004 0546     		mov	r5, r0
3980:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
 15264              		.loc 1 3980 5 is_stmt 1 view .LVU4159
 15265              	.LVL1825:
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15266              		.loc 1 3981 5 view .LVU4160
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15267              		.loc 1 3981 9 is_stmt 0 view .LVU4161
 15268 0006 0023     		movs	r3, #0
 15269 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3982:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15270              		.loc 1 3982 5 is_stmt 1 view .LVU4162
 15271              	.LVL1826:
3983:Core/Src/bno055.c **** 
 15272              		.loc 1 3983 5 view .LVU4163
3983:Core/Src/bno055.c **** 
 15273              		.loc 1 3983 8 is_stmt 0 view .LVU4164
 15274 000c 8DF80530 		strb	r3, [sp, #5]
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15275              		.loc 1 3987 5 is_stmt 1 view .LVU4165
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15276              		.loc 1 3987 16 is_stmt 0 view .LVU4166
 15277 0010 0DF10500 		add	r0, sp, #5
 15278              	.LVL1827:
ARM GAS  /tmp/cc9kYR4Z.s 			page 450


3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15279              		.loc 1 3987 16 view .LVU4167
 15280 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15281              	.LVL1828:
 15282 0018 0446     		mov	r4, r0
 15283              	.LVL1829:
3988:Core/Src/bno055.c ****     {
 15284              		.loc 1 3988 5 is_stmt 1 view .LVU4168
3988:Core/Src/bno055.c ****     {
 15285              		.loc 1 3988 23 is_stmt 0 view .LVU4169
 15286 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3988:Core/Src/bno055.c ****     {
 15287              		.loc 1 3988 8 view .LVU4170
 15288 001e B3B9     		cbnz	r3, .L1107
 15289              	.L1102:
3992:Core/Src/bno055.c ****     {
 15290              		.loc 1 3992 5 is_stmt 1 view .LVU4171
3992:Core/Src/bno055.c ****     {
 15291              		.loc 1 3992 8 is_stmt 0 view .LVU4172
 15292 0020 E4B9     		cbnz	r4, .L1104
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15293              		.loc 1 3995 9 is_stmt 1 view .LVU4173
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15294              		.loc 1 3995 21 is_stmt 0 view .LVU4174
 15295 0022 0DF10600 		add	r0, sp, #6
 15296 0026 FFF7FEFF 		bl	bno055_read_euler_r
 15297              	.LVL1830:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15298              		.loc 1 3995 18 view .LVU4175
 15299 002a 54FA80F4 		uxtab	r4, r4, r0
 15300              	.LVL1831:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15301              		.loc 1 3995 18 view .LVU4176
 15302 002e 64B2     		sxtb	r4, r4
 15303              	.LVL1832:
3996:Core/Src/bno055.c ****         {
 15304              		.loc 1 3996 9 is_stmt 1 view .LVU4177
3996:Core/Src/bno055.c ****         {
 15305              		.loc 1 3996 12 is_stmt 0 view .LVU4178
 15306 0030 BCB9     		cbnz	r4, .L1105
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15307              		.loc 1 3999 13 is_stmt 1 view .LVU4179
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15308              		.loc 1 3999 42 is_stmt 0 view .LVU4180
 15309 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15310 0036 FFF7FEFF 		bl	__aeabi_i2d
 15311              	.LVL1833:
 15312 003a 0022     		movs	r2, #0
 15313 003c 0A4B     		ldr	r3, .L1108
 15314 003e FFF7FEFF 		bl	__aeabi_dmul
 15315              	.LVL1834:
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15316              		.loc 1 3999 20 view .LVU4181
 15317 0042 FFF7FEFF 		bl	__aeabi_d2f
 15318              	.LVL1835:
4000:Core/Src/bno055.c ****         }
 15319              		.loc 1 4000 13 is_stmt 1 view .LVU4182
ARM GAS  /tmp/cc9kYR4Z.s 			page 451


4000:Core/Src/bno055.c ****         }
 15320              		.loc 1 4000 24 is_stmt 0 view .LVU4183
 15321 0046 2860     		str	r0, [r5]	@ float
 15322              	.LVL1836:
 15323              	.L1103:
4012:Core/Src/bno055.c **** }
 15324              		.loc 1 4012 5 is_stmt 1 view .LVU4184
4013:Core/Src/bno055.c **** 
 15325              		.loc 1 4013 1 is_stmt 0 view .LVU4185
 15326 0048 2046     		mov	r0, r4
 15327 004a 03B0     		add	sp, sp, #12
 15328              	.LCFI499:
 15329              		.cfi_remember_state
 15330              		.cfi_def_cfa_offset 12
 15331              		@ sp needed
 15332 004c 30BD     		pop	{r4, r5, pc}
 15333              	.LVL1837:
 15334              	.L1107:
 15335              	.LCFI500:
 15336              		.cfi_restore_state
3990:Core/Src/bno055.c ****     }
 15337              		.loc 1 3990 9 is_stmt 1 view .LVU4186
3990:Core/Src/bno055.c ****     }
 15338              		.loc 1 3990 21 is_stmt 0 view .LVU4187
 15339 004e 0020     		movs	r0, #0
 15340 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15341              	.LVL1838:
3990:Core/Src/bno055.c ****     }
 15342              		.loc 1 3990 18 view .LVU4188
 15343 0054 54FA80F4 		uxtab	r4, r4, r0
 15344              	.LVL1839:
3990:Core/Src/bno055.c ****     }
 15345              		.loc 1 3990 18 view .LVU4189
 15346 0058 64B2     		sxtb	r4, r4
 15347              	.LVL1840:
3990:Core/Src/bno055.c ****     }
 15348              		.loc 1 3990 18 view .LVU4190
 15349 005a E1E7     		b	.L1102
 15350              	.L1104:
4009:Core/Src/bno055.c ****     }
 15351              		.loc 1 4009 18 view .LVU4191
 15352 005c 4FF0FF34 		mov	r4, #-1
 15353              	.LVL1841:
4009:Core/Src/bno055.c ****     }
 15354              		.loc 1 4009 18 view .LVU4192
 15355 0060 F2E7     		b	.L1103
 15356              	.LVL1842:
 15357              	.L1105:
4004:Core/Src/bno055.c ****         }
 15358              		.loc 1 4004 22 view .LVU4193
 15359 0062 4FF0FF34 		mov	r4, #-1
 15360              	.LVL1843:
4004:Core/Src/bno055.c ****         }
 15361              		.loc 1 4004 22 view .LVU4194
 15362 0066 EFE7     		b	.L1103
 15363              	.L1109:
 15364              		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 452


 15365              	.L1108:
 15366 0068 0000B03F 		.word	1068498944
 15367              		.cfi_endproc
 15368              	.LFE63:
 15370              		.section	.text.bno055_convert_float_euler_r_rad,"ax",%progbits
 15371              		.align	1
 15372              		.global	bno055_convert_float_euler_r_rad
 15373              		.syntax unified
 15374              		.thumb
 15375              		.thumb_func
 15377              	bno055_convert_float_euler_r_rad:
 15378              	.LVL1844:
 15379              	.LFB64:
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15380              		.loc 1 4027 1 is_stmt 1 view -0
 15381              		.cfi_startproc
 15382              		@ args = 0, pretend = 0, frame = 8
 15383              		@ frame_needed = 0, uses_anonymous_args = 0
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15384              		.loc 1 4027 1 is_stmt 0 view .LVU4196
 15385 0000 30B5     		push	{r4, r5, lr}
 15386              	.LCFI501:
 15387              		.cfi_def_cfa_offset 12
 15388              		.cfi_offset 4, -12
 15389              		.cfi_offset 5, -8
 15390              		.cfi_offset 14, -4
 15391 0002 83B0     		sub	sp, sp, #12
 15392              	.LCFI502:
 15393              		.cfi_def_cfa_offset 24
 15394 0004 0546     		mov	r5, r0
4028:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
 15395              		.loc 1 4028 5 is_stmt 1 view .LVU4197
 15396              	.LVL1845:
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15397              		.loc 1 4029 5 view .LVU4198
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15398              		.loc 1 4029 9 is_stmt 0 view .LVU4199
 15399 0006 0023     		movs	r3, #0
 15400 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4030:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15401              		.loc 1 4030 5 is_stmt 1 view .LVU4200
 15402              	.LVL1846:
4031:Core/Src/bno055.c **** 
 15403              		.loc 1 4031 5 view .LVU4201
4031:Core/Src/bno055.c **** 
 15404              		.loc 1 4031 8 is_stmt 0 view .LVU4202
 15405 000c 8DF80530 		strb	r3, [sp, #5]
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15406              		.loc 1 4035 5 is_stmt 1 view .LVU4203
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15407              		.loc 1 4035 16 is_stmt 0 view .LVU4204
 15408 0010 0DF10500 		add	r0, sp, #5
 15409              	.LVL1847:
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15410              		.loc 1 4035 16 view .LVU4205
 15411 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15412              	.LVL1848:
ARM GAS  /tmp/cc9kYR4Z.s 			page 453


 15413 0018 0446     		mov	r4, r0
 15414              	.LVL1849:
4036:Core/Src/bno055.c ****     {
 15415              		.loc 1 4036 5 is_stmt 1 view .LVU4206
4036:Core/Src/bno055.c ****     {
 15416              		.loc 1 4036 23 is_stmt 0 view .LVU4207
 15417 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4036:Core/Src/bno055.c ****     {
 15418              		.loc 1 4036 8 view .LVU4208
 15419 001e 012B     		cmp	r3, #1
 15420 0020 16D1     		bne	.L1116
 15421              	.L1111:
4040:Core/Src/bno055.c ****     {
 15422              		.loc 1 4040 5 is_stmt 1 view .LVU4209
4040:Core/Src/bno055.c ****     {
 15423              		.loc 1 4040 8 is_stmt 0 view .LVU4210
 15424 0022 E4B9     		cbnz	r4, .L1113
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15425              		.loc 1 4043 9 is_stmt 1 view .LVU4211
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15426              		.loc 1 4043 21 is_stmt 0 view .LVU4212
 15427 0024 0DF10600 		add	r0, sp, #6
 15428 0028 FFF7FEFF 		bl	bno055_read_euler_r
 15429              	.LVL1850:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15430              		.loc 1 4043 18 view .LVU4213
 15431 002c 54FA80F4 		uxtab	r4, r4, r0
 15432              	.LVL1851:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15433              		.loc 1 4043 18 view .LVU4214
 15434 0030 64B2     		sxtb	r4, r4
 15435              	.LVL1852:
4044:Core/Src/bno055.c ****         {
 15436              		.loc 1 4044 9 is_stmt 1 view .LVU4215
4044:Core/Src/bno055.c ****         {
 15437              		.loc 1 4044 12 is_stmt 0 view .LVU4216
 15438 0032 BCB9     		cbnz	r4, .L1114
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15439              		.loc 1 4047 13 is_stmt 1 view .LVU4217
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15440              		.loc 1 4047 44 is_stmt 0 view .LVU4218
 15441 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15442 0038 FFF7FEFF 		bl	__aeabi_i2d
 15443              	.LVL1853:
 15444 003c 0022     		movs	r2, #0
 15445 003e 0B4B     		ldr	r3, .L1117
 15446 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15447              	.LVL1854:
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15448              		.loc 1 4047 20 view .LVU4219
 15449 0044 FFF7FEFF 		bl	__aeabi_d2f
 15450              	.LVL1855:
4048:Core/Src/bno055.c ****         }
 15451              		.loc 1 4048 13 is_stmt 1 view .LVU4220
4048:Core/Src/bno055.c ****         }
 15452              		.loc 1 4048 24 is_stmt 0 view .LVU4221
 15453 0048 2860     		str	r0, [r5]	@ float
ARM GAS  /tmp/cc9kYR4Z.s 			page 454


 15454              	.LVL1856:
 15455              	.L1112:
4060:Core/Src/bno055.c **** }
 15456              		.loc 1 4060 5 is_stmt 1 view .LVU4222
4061:Core/Src/bno055.c **** 
 15457              		.loc 1 4061 1 is_stmt 0 view .LVU4223
 15458 004a 2046     		mov	r0, r4
 15459 004c 03B0     		add	sp, sp, #12
 15460              	.LCFI503:
 15461              		.cfi_remember_state
 15462              		.cfi_def_cfa_offset 12
 15463              		@ sp needed
 15464 004e 30BD     		pop	{r4, r5, pc}
 15465              	.LVL1857:
 15466              	.L1116:
 15467              	.LCFI504:
 15468              		.cfi_restore_state
4038:Core/Src/bno055.c ****     }
 15469              		.loc 1 4038 9 is_stmt 1 view .LVU4224
4038:Core/Src/bno055.c ****     }
 15470              		.loc 1 4038 21 is_stmt 0 view .LVU4225
 15471 0050 0120     		movs	r0, #1
 15472 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15473              	.LVL1858:
4038:Core/Src/bno055.c ****     }
 15474              		.loc 1 4038 18 view .LVU4226
 15475 0056 54FA80F4 		uxtab	r4, r4, r0
 15476              	.LVL1859:
4038:Core/Src/bno055.c ****     }
 15477              		.loc 1 4038 18 view .LVU4227
 15478 005a 64B2     		sxtb	r4, r4
 15479              	.LVL1860:
4038:Core/Src/bno055.c ****     }
 15480              		.loc 1 4038 18 view .LVU4228
 15481 005c E1E7     		b	.L1111
 15482              	.L1113:
4057:Core/Src/bno055.c ****     }
 15483              		.loc 1 4057 18 view .LVU4229
 15484 005e 4FF0FF34 		mov	r4, #-1
 15485              	.LVL1861:
4057:Core/Src/bno055.c ****     }
 15486              		.loc 1 4057 18 view .LVU4230
 15487 0062 F2E7     		b	.L1112
 15488              	.LVL1862:
 15489              	.L1114:
4052:Core/Src/bno055.c ****         }
 15490              		.loc 1 4052 22 view .LVU4231
 15491 0064 4FF0FF34 		mov	r4, #-1
 15492              	.LVL1863:
4052:Core/Src/bno055.c ****         }
 15493              		.loc 1 4052 22 view .LVU4232
 15494 0068 EFE7     		b	.L1112
 15495              	.L1118:
 15496 006a 00BF     		.align	2
 15497              	.L1117:
 15498 006c 00208C40 		.word	1082925056
 15499              		.cfi_endproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 455


 15500              	.LFE64:
 15502              		.section	.text.bno055_convert_float_euler_p_deg,"ax",%progbits
 15503              		.align	1
 15504              		.global	bno055_convert_float_euler_p_deg
 15505              		.syntax unified
 15506              		.thumb
 15507              		.thumb_func
 15509              	bno055_convert_float_euler_p_deg:
 15510              	.LVL1864:
 15511              	.LFB65:
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15512              		.loc 1 4075 1 is_stmt 1 view -0
 15513              		.cfi_startproc
 15514              		@ args = 0, pretend = 0, frame = 8
 15515              		@ frame_needed = 0, uses_anonymous_args = 0
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15516              		.loc 1 4075 1 is_stmt 0 view .LVU4234
 15517 0000 30B5     		push	{r4, r5, lr}
 15518              	.LCFI505:
 15519              		.cfi_def_cfa_offset 12
 15520              		.cfi_offset 4, -12
 15521              		.cfi_offset 5, -8
 15522              		.cfi_offset 14, -4
 15523 0002 83B0     		sub	sp, sp, #12
 15524              	.LCFI506:
 15525              		.cfi_def_cfa_offset 24
 15526 0004 0546     		mov	r5, r0
4076:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15527              		.loc 1 4076 5 is_stmt 1 view .LVU4235
 15528              	.LVL1865:
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15529              		.loc 1 4077 5 view .LVU4236
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15530              		.loc 1 4077 9 is_stmt 0 view .LVU4237
 15531 0006 0023     		movs	r3, #0
 15532 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4078:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15533              		.loc 1 4078 5 is_stmt 1 view .LVU4238
 15534              	.LVL1866:
4079:Core/Src/bno055.c **** 
 15535              		.loc 1 4079 5 view .LVU4239
4079:Core/Src/bno055.c **** 
 15536              		.loc 1 4079 8 is_stmt 0 view .LVU4240
 15537 000c 8DF80530 		strb	r3, [sp, #5]
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15538              		.loc 1 4083 5 is_stmt 1 view .LVU4241
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15539              		.loc 1 4083 16 is_stmt 0 view .LVU4242
 15540 0010 0DF10500 		add	r0, sp, #5
 15541              	.LVL1867:
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15542              		.loc 1 4083 16 view .LVU4243
 15543 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15544              	.LVL1868:
 15545 0018 0446     		mov	r4, r0
 15546              	.LVL1869:
4084:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 456


 15547              		.loc 1 4084 5 is_stmt 1 view .LVU4244
4084:Core/Src/bno055.c ****     {
 15548              		.loc 1 4084 23 is_stmt 0 view .LVU4245
 15549 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4084:Core/Src/bno055.c ****     {
 15550              		.loc 1 4084 8 view .LVU4246
 15551 001e B3B9     		cbnz	r3, .L1125
 15552              	.L1120:
4088:Core/Src/bno055.c ****     {
 15553              		.loc 1 4088 5 is_stmt 1 view .LVU4247
4088:Core/Src/bno055.c ****     {
 15554              		.loc 1 4088 8 is_stmt 0 view .LVU4248
 15555 0020 E4B9     		cbnz	r4, .L1122
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15556              		.loc 1 4091 9 is_stmt 1 view .LVU4249
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15557              		.loc 1 4091 21 is_stmt 0 view .LVU4250
 15558 0022 0DF10600 		add	r0, sp, #6
 15559 0026 FFF7FEFF 		bl	bno055_read_euler_p
 15560              	.LVL1870:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15561              		.loc 1 4091 18 view .LVU4251
 15562 002a 54FA80F4 		uxtab	r4, r4, r0
 15563              	.LVL1871:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15564              		.loc 1 4091 18 view .LVU4252
 15565 002e 64B2     		sxtb	r4, r4
 15566              	.LVL1872:
4092:Core/Src/bno055.c ****         {
 15567              		.loc 1 4092 9 is_stmt 1 view .LVU4253
4092:Core/Src/bno055.c ****         {
 15568              		.loc 1 4092 12 is_stmt 0 view .LVU4254
 15569 0030 BCB9     		cbnz	r4, .L1123
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15570              		.loc 1 4095 13 is_stmt 1 view .LVU4255
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15571              		.loc 1 4095 44 is_stmt 0 view .LVU4256
 15572 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15573 0036 FFF7FEFF 		bl	__aeabi_i2d
 15574              	.LVL1873:
 15575 003a 0022     		movs	r2, #0
 15576 003c 0A4B     		ldr	r3, .L1126
 15577 003e FFF7FEFF 		bl	__aeabi_dmul
 15578              	.LVL1874:
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15579              		.loc 1 4095 20 view .LVU4257
 15580 0042 FFF7FEFF 		bl	__aeabi_d2f
 15581              	.LVL1875:
4096:Core/Src/bno055.c ****         }
 15582              		.loc 1 4096 13 is_stmt 1 view .LVU4258
4096:Core/Src/bno055.c ****         }
 15583              		.loc 1 4096 24 is_stmt 0 view .LVU4259
 15584 0046 2860     		str	r0, [r5]	@ float
 15585              	.LVL1876:
 15586              	.L1121:
4108:Core/Src/bno055.c **** }
 15587              		.loc 1 4108 5 is_stmt 1 view .LVU4260
ARM GAS  /tmp/cc9kYR4Z.s 			page 457


4109:Core/Src/bno055.c **** 
 15588              		.loc 1 4109 1 is_stmt 0 view .LVU4261
 15589 0048 2046     		mov	r0, r4
 15590 004a 03B0     		add	sp, sp, #12
 15591              	.LCFI507:
 15592              		.cfi_remember_state
 15593              		.cfi_def_cfa_offset 12
 15594              		@ sp needed
 15595 004c 30BD     		pop	{r4, r5, pc}
 15596              	.LVL1877:
 15597              	.L1125:
 15598              	.LCFI508:
 15599              		.cfi_restore_state
4086:Core/Src/bno055.c ****     }
 15600              		.loc 1 4086 9 is_stmt 1 view .LVU4262
4086:Core/Src/bno055.c ****     }
 15601              		.loc 1 4086 21 is_stmt 0 view .LVU4263
 15602 004e 0020     		movs	r0, #0
 15603 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15604              	.LVL1878:
4086:Core/Src/bno055.c ****     }
 15605              		.loc 1 4086 18 view .LVU4264
 15606 0054 54FA80F4 		uxtab	r4, r4, r0
 15607              	.LVL1879:
4086:Core/Src/bno055.c ****     }
 15608              		.loc 1 4086 18 view .LVU4265
 15609 0058 64B2     		sxtb	r4, r4
 15610              	.LVL1880:
4086:Core/Src/bno055.c ****     }
 15611              		.loc 1 4086 18 view .LVU4266
 15612 005a E1E7     		b	.L1120
 15613              	.L1122:
4105:Core/Src/bno055.c ****     }
 15614              		.loc 1 4105 18 view .LVU4267
 15615 005c 4FF0FF34 		mov	r4, #-1
 15616              	.LVL1881:
4105:Core/Src/bno055.c ****     }
 15617              		.loc 1 4105 18 view .LVU4268
 15618 0060 F2E7     		b	.L1121
 15619              	.LVL1882:
 15620              	.L1123:
4100:Core/Src/bno055.c ****         }
 15621              		.loc 1 4100 22 view .LVU4269
 15622 0062 4FF0FF34 		mov	r4, #-1
 15623              	.LVL1883:
4100:Core/Src/bno055.c ****         }
 15624              		.loc 1 4100 22 view .LVU4270
 15625 0066 EFE7     		b	.L1121
 15626              	.L1127:
 15627              		.align	2
 15628              	.L1126:
 15629 0068 0000B03F 		.word	1068498944
 15630              		.cfi_endproc
 15631              	.LFE65:
 15633              		.section	.text.bno055_convert_float_euler_p_rad,"ax",%progbits
 15634              		.align	1
 15635              		.global	bno055_convert_float_euler_p_rad
ARM GAS  /tmp/cc9kYR4Z.s 			page 458


 15636              		.syntax unified
 15637              		.thumb
 15638              		.thumb_func
 15640              	bno055_convert_float_euler_p_rad:
 15641              	.LVL1884:
 15642              	.LFB66:
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15643              		.loc 1 4124 1 is_stmt 1 view -0
 15644              		.cfi_startproc
 15645              		@ args = 0, pretend = 0, frame = 8
 15646              		@ frame_needed = 0, uses_anonymous_args = 0
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15647              		.loc 1 4124 1 is_stmt 0 view .LVU4272
 15648 0000 30B5     		push	{r4, r5, lr}
 15649              	.LCFI509:
 15650              		.cfi_def_cfa_offset 12
 15651              		.cfi_offset 4, -12
 15652              		.cfi_offset 5, -8
 15653              		.cfi_offset 14, -4
 15654 0002 83B0     		sub	sp, sp, #12
 15655              	.LCFI510:
 15656              		.cfi_def_cfa_offset 24
 15657 0004 0546     		mov	r5, r0
4125:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15658              		.loc 1 4125 5 is_stmt 1 view .LVU4273
 15659              	.LVL1885:
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15660              		.loc 1 4126 5 view .LVU4274
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15661              		.loc 1 4126 9 is_stmt 0 view .LVU4275
 15662 0006 0023     		movs	r3, #0
 15663 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4127:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15664              		.loc 1 4127 5 is_stmt 1 view .LVU4276
 15665              	.LVL1886:
4128:Core/Src/bno055.c **** 
 15666              		.loc 1 4128 5 view .LVU4277
4128:Core/Src/bno055.c **** 
 15667              		.loc 1 4128 8 is_stmt 0 view .LVU4278
 15668 000c 8DF80530 		strb	r3, [sp, #5]
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15669              		.loc 1 4132 5 is_stmt 1 view .LVU4279
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15670              		.loc 1 4132 16 is_stmt 0 view .LVU4280
 15671 0010 0DF10500 		add	r0, sp, #5
 15672              	.LVL1887:
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15673              		.loc 1 4132 16 view .LVU4281
 15674 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15675              	.LVL1888:
 15676 0018 0446     		mov	r4, r0
 15677              	.LVL1889:
4133:Core/Src/bno055.c ****     {
 15678              		.loc 1 4133 5 is_stmt 1 view .LVU4282
4133:Core/Src/bno055.c ****     {
 15679              		.loc 1 4133 23 is_stmt 0 view .LVU4283
 15680 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 459


4133:Core/Src/bno055.c ****     {
 15681              		.loc 1 4133 8 view .LVU4284
 15682 001e 012B     		cmp	r3, #1
 15683 0020 16D1     		bne	.L1134
 15684              	.L1129:
4137:Core/Src/bno055.c ****     {
 15685              		.loc 1 4137 5 is_stmt 1 view .LVU4285
4137:Core/Src/bno055.c ****     {
 15686              		.loc 1 4137 8 is_stmt 0 view .LVU4286
 15687 0022 E4B9     		cbnz	r4, .L1131
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15688              		.loc 1 4140 9 is_stmt 1 view .LVU4287
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15689              		.loc 1 4140 21 is_stmt 0 view .LVU4288
 15690 0024 0DF10600 		add	r0, sp, #6
 15691 0028 FFF7FEFF 		bl	bno055_read_euler_p
 15692              	.LVL1890:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15693              		.loc 1 4140 18 view .LVU4289
 15694 002c 54FA80F4 		uxtab	r4, r4, r0
 15695              	.LVL1891:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15696              		.loc 1 4140 18 view .LVU4290
 15697 0030 64B2     		sxtb	r4, r4
 15698              	.LVL1892:
4141:Core/Src/bno055.c ****         {
 15699              		.loc 1 4141 9 is_stmt 1 view .LVU4291
4141:Core/Src/bno055.c ****         {
 15700              		.loc 1 4141 12 is_stmt 0 view .LVU4292
 15701 0032 BCB9     		cbnz	r4, .L1132
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15702              		.loc 1 4144 13 is_stmt 1 view .LVU4293
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15703              		.loc 1 4144 44 is_stmt 0 view .LVU4294
 15704 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15705 0038 FFF7FEFF 		bl	__aeabi_i2d
 15706              	.LVL1893:
 15707 003c 0022     		movs	r2, #0
 15708 003e 0B4B     		ldr	r3, .L1135
 15709 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15710              	.LVL1894:
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15711              		.loc 1 4144 20 view .LVU4295
 15712 0044 FFF7FEFF 		bl	__aeabi_d2f
 15713              	.LVL1895:
4145:Core/Src/bno055.c ****         }
 15714              		.loc 1 4145 13 is_stmt 1 view .LVU4296
4145:Core/Src/bno055.c ****         }
 15715              		.loc 1 4145 24 is_stmt 0 view .LVU4297
 15716 0048 2860     		str	r0, [r5]	@ float
 15717              	.LVL1896:
 15718              	.L1130:
4157:Core/Src/bno055.c **** }
 15719              		.loc 1 4157 5 is_stmt 1 view .LVU4298
4158:Core/Src/bno055.c **** 
 15720              		.loc 1 4158 1 is_stmt 0 view .LVU4299
 15721 004a 2046     		mov	r0, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 460


 15722 004c 03B0     		add	sp, sp, #12
 15723              	.LCFI511:
 15724              		.cfi_remember_state
 15725              		.cfi_def_cfa_offset 12
 15726              		@ sp needed
 15727 004e 30BD     		pop	{r4, r5, pc}
 15728              	.LVL1897:
 15729              	.L1134:
 15730              	.LCFI512:
 15731              		.cfi_restore_state
4135:Core/Src/bno055.c ****     }
 15732              		.loc 1 4135 9 is_stmt 1 view .LVU4300
4135:Core/Src/bno055.c ****     }
 15733              		.loc 1 4135 21 is_stmt 0 view .LVU4301
 15734 0050 0120     		movs	r0, #1
 15735 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15736              	.LVL1898:
4135:Core/Src/bno055.c ****     }
 15737              		.loc 1 4135 18 view .LVU4302
 15738 0056 54FA80F4 		uxtab	r4, r4, r0
 15739              	.LVL1899:
4135:Core/Src/bno055.c ****     }
 15740              		.loc 1 4135 18 view .LVU4303
 15741 005a 64B2     		sxtb	r4, r4
 15742              	.LVL1900:
4135:Core/Src/bno055.c ****     }
 15743              		.loc 1 4135 18 view .LVU4304
 15744 005c E1E7     		b	.L1129
 15745              	.L1131:
4154:Core/Src/bno055.c ****     }
 15746              		.loc 1 4154 18 view .LVU4305
 15747 005e 4FF0FF34 		mov	r4, #-1
 15748              	.LVL1901:
4154:Core/Src/bno055.c ****     }
 15749              		.loc 1 4154 18 view .LVU4306
 15750 0062 F2E7     		b	.L1130
 15751              	.LVL1902:
 15752              	.L1132:
4149:Core/Src/bno055.c ****         }
 15753              		.loc 1 4149 22 view .LVU4307
 15754 0064 4FF0FF34 		mov	r4, #-1
 15755              	.LVL1903:
4149:Core/Src/bno055.c ****         }
 15756              		.loc 1 4149 22 view .LVU4308
 15757 0068 EFE7     		b	.L1130
 15758              	.L1136:
 15759 006a 00BF     		.align	2
 15760              	.L1135:
 15761 006c 00208C40 		.word	1082925056
 15762              		.cfi_endproc
 15763              	.LFE66:
 15765              		.section	.text.bno055_convert_float_euler_hpr_deg,"ax",%progbits
 15766              		.align	1
 15767              		.global	bno055_convert_float_euler_hpr_deg
 15768              		.syntax unified
 15769              		.thumb
 15770              		.thumb_func
ARM GAS  /tmp/cc9kYR4Z.s 			page 461


 15772              	bno055_convert_float_euler_hpr_deg:
 15773              	.LVL1904:
 15774              	.LFB67:
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15775              		.loc 1 4179 1 is_stmt 1 view -0
 15776              		.cfi_startproc
 15777              		@ args = 0, pretend = 0, frame = 16
 15778              		@ frame_needed = 0, uses_anonymous_args = 0
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15779              		.loc 1 4179 1 is_stmt 0 view .LVU4310
 15780 0000 30B5     		push	{r4, r5, lr}
 15781              	.LCFI513:
 15782              		.cfi_def_cfa_offset 12
 15783              		.cfi_offset 4, -12
 15784              		.cfi_offset 5, -8
 15785              		.cfi_offset 14, -4
 15786 0002 85B0     		sub	sp, sp, #20
 15787              	.LCFI514:
 15788              		.cfi_def_cfa_offset 32
 15789 0004 0546     		mov	r5, r0
4182:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15790              		.loc 1 4182 5 is_stmt 1 view .LVU4311
 15791              	.LVL1905:
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15792              		.loc 1 4183 5 view .LVU4312
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15793              		.loc 1 4183 27 is_stmt 0 view .LVU4313
 15794 0006 0023     		movs	r3, #0
 15795 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15796 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 15797 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4184:Core/Src/bno055.c **** 
 15798              		.loc 1 4184 5 is_stmt 1 view .LVU4314
4184:Core/Src/bno055.c **** 
 15799              		.loc 1 4184 8 is_stmt 0 view .LVU4315
 15800 0014 8DF80730 		strb	r3, [sp, #7]
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15801              		.loc 1 4188 5 is_stmt 1 view .LVU4316
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15802              		.loc 1 4188 16 is_stmt 0 view .LVU4317
 15803 0018 0DF10700 		add	r0, sp, #7
 15804              	.LVL1906:
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15805              		.loc 1 4188 16 view .LVU4318
 15806 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15807              	.LVL1907:
 15808 0020 0446     		mov	r4, r0
 15809              	.LVL1908:
4189:Core/Src/bno055.c ****     {
 15810              		.loc 1 4189 5 is_stmt 1 view .LVU4319
4189:Core/Src/bno055.c ****     {
 15811              		.loc 1 4189 23 is_stmt 0 view .LVU4320
 15812 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4189:Core/Src/bno055.c ****     {
 15813              		.loc 1 4189 8 view .LVU4321
 15814 0026 5BBB     		cbnz	r3, .L1143
 15815              	.L1138:
ARM GAS  /tmp/cc9kYR4Z.s 			page 462


4193:Core/Src/bno055.c ****     {
 15816              		.loc 1 4193 5 is_stmt 1 view .LVU4322
4193:Core/Src/bno055.c ****     {
 15817              		.loc 1 4193 8 is_stmt 0 view .LVU4323
 15818 0028 8CBB     		cbnz	r4, .L1140
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15819              		.loc 1 4196 9 is_stmt 1 view .LVU4324
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15820              		.loc 1 4196 21 is_stmt 0 view .LVU4325
 15821 002a 02A8     		add	r0, sp, #8
 15822 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 15823              	.LVL1909:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15824              		.loc 1 4196 18 view .LVU4326
 15825 0030 54FA80F4 		uxtab	r4, r4, r0
 15826              	.LVL1910:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15827              		.loc 1 4196 18 view .LVU4327
 15828 0034 64B2     		sxtb	r4, r4
 15829              	.LVL1911:
4197:Core/Src/bno055.c ****         {
 15830              		.loc 1 4197 9 is_stmt 1 view .LVU4328
4197:Core/Src/bno055.c ****         {
 15831              		.loc 1 4197 12 is_stmt 0 view .LVU4329
 15832 0036 6CBB     		cbnz	r4, .L1141
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15833              		.loc 1 4200 13 is_stmt 1 view .LVU4330
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15834              		.loc 1 4200 48 is_stmt 0 view .LVU4331
 15835 0038 BDF90800 		ldrsh	r0, [sp, #8]
 15836 003c FFF7FEFF 		bl	__aeabi_i2d
 15837              	.LVL1912:
 15838 0040 0022     		movs	r2, #0
 15839 0042 164B     		ldr	r3, .L1144
 15840 0044 FFF7FEFF 		bl	__aeabi_dmul
 15841              	.LVL1913:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15842              		.loc 1 4200 28 view .LVU4332
 15843 0048 FFF7FEFF 		bl	__aeabi_d2f
 15844              	.LVL1914:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15845              		.loc 1 4200 26 view .LVU4333
 15846 004c 2860     		str	r0, [r5]	@ float
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15847              		.loc 1 4201 13 is_stmt 1 view .LVU4334
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15848              		.loc 1 4201 48 is_stmt 0 view .LVU4335
 15849 004e BDF90C00 		ldrsh	r0, [sp, #12]
 15850 0052 FFF7FEFF 		bl	__aeabi_i2d
 15851              	.LVL1915:
 15852 0056 0022     		movs	r2, #0
 15853 0058 104B     		ldr	r3, .L1144
 15854 005a FFF7FEFF 		bl	__aeabi_dmul
 15855              	.LVL1916:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15856              		.loc 1 4201 28 view .LVU4336
 15857 005e FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/cc9kYR4Z.s 			page 463


 15858              	.LVL1917:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15859              		.loc 1 4201 26 view .LVU4337
 15860 0062 A860     		str	r0, [r5, #8]	@ float
4202:Core/Src/bno055.c ****         }
 15861              		.loc 1 4202 13 is_stmt 1 view .LVU4338
4202:Core/Src/bno055.c ****         }
 15862              		.loc 1 4202 48 is_stmt 0 view .LVU4339
 15863 0064 BDF90A00 		ldrsh	r0, [sp, #10]
 15864 0068 FFF7FEFF 		bl	__aeabi_i2d
 15865              	.LVL1918:
 15866 006c 0022     		movs	r2, #0
 15867 006e 0B4B     		ldr	r3, .L1144
 15868 0070 FFF7FEFF 		bl	__aeabi_dmul
 15869              	.LVL1919:
4202:Core/Src/bno055.c ****         }
 15870              		.loc 1 4202 28 view .LVU4340
 15871 0074 FFF7FEFF 		bl	__aeabi_d2f
 15872              	.LVL1920:
4202:Core/Src/bno055.c ****         }
 15873              		.loc 1 4202 26 view .LVU4341
 15874 0078 6860     		str	r0, [r5, #4]	@ float
 15875              	.LVL1921:
 15876              	.L1139:
4214:Core/Src/bno055.c **** }
 15877              		.loc 1 4214 5 is_stmt 1 view .LVU4342
4215:Core/Src/bno055.c **** 
 15878              		.loc 1 4215 1 is_stmt 0 view .LVU4343
 15879 007a 2046     		mov	r0, r4
 15880 007c 05B0     		add	sp, sp, #20
 15881              	.LCFI515:
 15882              		.cfi_remember_state
 15883              		.cfi_def_cfa_offset 12
 15884              		@ sp needed
 15885 007e 30BD     		pop	{r4, r5, pc}
 15886              	.LVL1922:
 15887              	.L1143:
 15888              	.LCFI516:
 15889              		.cfi_restore_state
4191:Core/Src/bno055.c ****     }
 15890              		.loc 1 4191 9 is_stmt 1 view .LVU4344
4191:Core/Src/bno055.c ****     }
 15891              		.loc 1 4191 21 is_stmt 0 view .LVU4345
 15892 0080 0020     		movs	r0, #0
 15893 0082 FFF7FEFF 		bl	bno055_set_euler_unit
 15894              	.LVL1923:
4191:Core/Src/bno055.c ****     }
 15895              		.loc 1 4191 18 view .LVU4346
 15896 0086 54FA80F4 		uxtab	r4, r4, r0
 15897              	.LVL1924:
4191:Core/Src/bno055.c ****     }
 15898              		.loc 1 4191 18 view .LVU4347
 15899 008a 64B2     		sxtb	r4, r4
 15900              	.LVL1925:
4191:Core/Src/bno055.c ****     }
 15901              		.loc 1 4191 18 view .LVU4348
 15902 008c CCE7     		b	.L1138
ARM GAS  /tmp/cc9kYR4Z.s 			page 464


 15903              	.L1140:
4211:Core/Src/bno055.c ****     }
 15904              		.loc 1 4211 18 view .LVU4349
 15905 008e 4FF0FF34 		mov	r4, #-1
 15906              	.LVL1926:
4211:Core/Src/bno055.c ****     }
 15907              		.loc 1 4211 18 view .LVU4350
 15908 0092 F2E7     		b	.L1139
 15909              	.LVL1927:
 15910              	.L1141:
4206:Core/Src/bno055.c ****         }
 15911              		.loc 1 4206 22 view .LVU4351
 15912 0094 4FF0FF34 		mov	r4, #-1
 15913              	.LVL1928:
4206:Core/Src/bno055.c ****         }
 15914              		.loc 1 4206 22 view .LVU4352
 15915 0098 EFE7     		b	.L1139
 15916              	.L1145:
 15917 009a 00BF     		.align	2
 15918              	.L1144:
 15919 009c 0000B03F 		.word	1068498944
 15920              		.cfi_endproc
 15921              	.LFE67:
 15923              		.section	.text.bno055_convert_float_euler_hpr_rad,"ax",%progbits
 15924              		.align	1
 15925              		.global	bno055_convert_float_euler_hpr_rad
 15926              		.syntax unified
 15927              		.thumb
 15928              		.thumb_func
 15930              	bno055_convert_float_euler_hpr_rad:
 15931              	.LVL1929:
 15932              	.LFB68:
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 15933              		.loc 1 4236 1 is_stmt 1 view -0
 15934              		.cfi_startproc
 15935              		@ args = 0, pretend = 0, frame = 16
 15936              		@ frame_needed = 0, uses_anonymous_args = 0
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 15937              		.loc 1 4236 1 is_stmt 0 view .LVU4354
 15938 0000 30B5     		push	{r4, r5, lr}
 15939              	.LCFI517:
 15940              		.cfi_def_cfa_offset 12
 15941              		.cfi_offset 4, -12
 15942              		.cfi_offset 5, -8
 15943              		.cfi_offset 14, -4
 15944 0002 85B0     		sub	sp, sp, #20
 15945              	.LCFI518:
 15946              		.cfi_def_cfa_offset 32
 15947 0004 0546     		mov	r5, r0
4239:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15948              		.loc 1 4239 5 is_stmt 1 view .LVU4355
 15949              	.LVL1930:
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15950              		.loc 1 4240 5 view .LVU4356
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15951              		.loc 1 4240 27 is_stmt 0 view .LVU4357
 15952 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 465


 15953 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15954 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 15955 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4241:Core/Src/bno055.c **** 
 15956              		.loc 1 4241 5 is_stmt 1 view .LVU4358
4241:Core/Src/bno055.c **** 
 15957              		.loc 1 4241 8 is_stmt 0 view .LVU4359
 15958 0014 8DF80730 		strb	r3, [sp, #7]
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15959              		.loc 1 4245 5 is_stmt 1 view .LVU4360
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15960              		.loc 1 4245 16 is_stmt 0 view .LVU4361
 15961 0018 0DF10700 		add	r0, sp, #7
 15962              	.LVL1931:
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15963              		.loc 1 4245 16 view .LVU4362
 15964 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15965              	.LVL1932:
 15966 0020 0446     		mov	r4, r0
 15967              	.LVL1933:
4246:Core/Src/bno055.c ****     {
 15968              		.loc 1 4246 5 is_stmt 1 view .LVU4363
4246:Core/Src/bno055.c ****     {
 15969              		.loc 1 4246 23 is_stmt 0 view .LVU4364
 15970 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4246:Core/Src/bno055.c ****     {
 15971              		.loc 1 4246 8 view .LVU4365
 15972 0026 012B     		cmp	r3, #1
 15973 0028 2BD1     		bne	.L1152
 15974              	.L1147:
4250:Core/Src/bno055.c ****     {
 15975              		.loc 1 4250 5 is_stmt 1 view .LVU4366
4250:Core/Src/bno055.c ****     {
 15976              		.loc 1 4250 8 is_stmt 0 view .LVU4367
 15977 002a 8CBB     		cbnz	r4, .L1149
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15978              		.loc 1 4253 9 is_stmt 1 view .LVU4368
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15979              		.loc 1 4253 21 is_stmt 0 view .LVU4369
 15980 002c 02A8     		add	r0, sp, #8
 15981 002e FFF7FEFF 		bl	bno055_read_euler_hrp
 15982              	.LVL1934:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15983              		.loc 1 4253 18 view .LVU4370
 15984 0032 54FA80F4 		uxtab	r4, r4, r0
 15985              	.LVL1935:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15986              		.loc 1 4253 18 view .LVU4371
 15987 0036 64B2     		sxtb	r4, r4
 15988              	.LVL1936:
4254:Core/Src/bno055.c ****         {
 15989              		.loc 1 4254 9 is_stmt 1 view .LVU4372
4254:Core/Src/bno055.c ****         {
 15990              		.loc 1 4254 12 is_stmt 0 view .LVU4373
 15991 0038 6CBB     		cbnz	r4, .L1150
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 15992              		.loc 1 4257 13 is_stmt 1 view .LVU4374
ARM GAS  /tmp/cc9kYR4Z.s 			page 466


4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 15993              		.loc 1 4257 48 is_stmt 0 view .LVU4375
 15994 003a BDF90800 		ldrsh	r0, [sp, #8]
 15995 003e FFF7FEFF 		bl	__aeabi_i2d
 15996              	.LVL1937:
 15997 0042 0022     		movs	r2, #0
 15998 0044 154B     		ldr	r3, .L1153
 15999 0046 FFF7FEFF 		bl	__aeabi_ddiv
 16000              	.LVL1938:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16001              		.loc 1 4257 28 view .LVU4376
 16002 004a FFF7FEFF 		bl	__aeabi_d2f
 16003              	.LVL1939:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16004              		.loc 1 4257 26 view .LVU4377
 16005 004e 2860     		str	r0, [r5]	@ float
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16006              		.loc 1 4258 13 is_stmt 1 view .LVU4378
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16007              		.loc 1 4258 48 is_stmt 0 view .LVU4379
 16008 0050 BDF90C00 		ldrsh	r0, [sp, #12]
 16009 0054 FFF7FEFF 		bl	__aeabi_i2d
 16010              	.LVL1940:
 16011 0058 0022     		movs	r2, #0
 16012 005a 104B     		ldr	r3, .L1153
 16013 005c FFF7FEFF 		bl	__aeabi_ddiv
 16014              	.LVL1941:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16015              		.loc 1 4258 28 view .LVU4380
 16016 0060 FFF7FEFF 		bl	__aeabi_d2f
 16017              	.LVL1942:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16018              		.loc 1 4258 26 view .LVU4381
 16019 0064 A860     		str	r0, [r5, #8]	@ float
4259:Core/Src/bno055.c ****         }
 16020              		.loc 1 4259 13 is_stmt 1 view .LVU4382
4259:Core/Src/bno055.c ****         }
 16021              		.loc 1 4259 48 is_stmt 0 view .LVU4383
 16022 0066 BDF90A00 		ldrsh	r0, [sp, #10]
 16023 006a FFF7FEFF 		bl	__aeabi_i2d
 16024              	.LVL1943:
 16025 006e 0022     		movs	r2, #0
 16026 0070 0A4B     		ldr	r3, .L1153
 16027 0072 FFF7FEFF 		bl	__aeabi_ddiv
 16028              	.LVL1944:
4259:Core/Src/bno055.c ****         }
 16029              		.loc 1 4259 28 view .LVU4384
 16030 0076 FFF7FEFF 		bl	__aeabi_d2f
 16031              	.LVL1945:
4259:Core/Src/bno055.c ****         }
 16032              		.loc 1 4259 26 view .LVU4385
 16033 007a 6860     		str	r0, [r5, #4]	@ float
 16034              	.LVL1946:
 16035              	.L1148:
4271:Core/Src/bno055.c **** }
 16036              		.loc 1 4271 5 is_stmt 1 view .LVU4386
4272:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 467


 16037              		.loc 1 4272 1 is_stmt 0 view .LVU4387
 16038 007c 2046     		mov	r0, r4
 16039 007e 05B0     		add	sp, sp, #20
 16040              	.LCFI519:
 16041              		.cfi_remember_state
 16042              		.cfi_def_cfa_offset 12
 16043              		@ sp needed
 16044 0080 30BD     		pop	{r4, r5, pc}
 16045              	.LVL1947:
 16046              	.L1152:
 16047              	.LCFI520:
 16048              		.cfi_restore_state
4248:Core/Src/bno055.c ****     }
 16049              		.loc 1 4248 9 is_stmt 1 view .LVU4388
4248:Core/Src/bno055.c ****     }
 16050              		.loc 1 4248 21 is_stmt 0 view .LVU4389
 16051 0082 0120     		movs	r0, #1
 16052 0084 FFF7FEFF 		bl	bno055_set_euler_unit
 16053              	.LVL1948:
4248:Core/Src/bno055.c ****     }
 16054              		.loc 1 4248 18 view .LVU4390
 16055 0088 54FA80F4 		uxtab	r4, r4, r0
 16056              	.LVL1949:
4248:Core/Src/bno055.c ****     }
 16057              		.loc 1 4248 18 view .LVU4391
 16058 008c 64B2     		sxtb	r4, r4
 16059              	.LVL1950:
4248:Core/Src/bno055.c ****     }
 16060              		.loc 1 4248 18 view .LVU4392
 16061 008e CCE7     		b	.L1147
 16062              	.L1149:
4268:Core/Src/bno055.c ****     }
 16063              		.loc 1 4268 18 view .LVU4393
 16064 0090 4FF0FF34 		mov	r4, #-1
 16065              	.LVL1951:
4268:Core/Src/bno055.c ****     }
 16066              		.loc 1 4268 18 view .LVU4394
 16067 0094 F2E7     		b	.L1148
 16068              	.LVL1952:
 16069              	.L1150:
4263:Core/Src/bno055.c ****         }
 16070              		.loc 1 4263 22 view .LVU4395
 16071 0096 4FF0FF34 		mov	r4, #-1
 16072              	.LVL1953:
4263:Core/Src/bno055.c ****         }
 16073              		.loc 1 4263 22 view .LVU4396
 16074 009a EFE7     		b	.L1148
 16075              	.L1154:
 16076              		.align	2
 16077              	.L1153:
 16078 009c 00208C40 		.word	1082925056
 16079              		.cfi_endproc
 16080              	.LFE68:
 16082              		.section	.text.bno055_convert_double_euler_h_deg,"ax",%progbits
 16083              		.align	1
 16084              		.global	bno055_convert_double_euler_h_deg
 16085              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 468


 16086              		.thumb
 16087              		.thumb_func
 16089              	bno055_convert_double_euler_h_deg:
 16090              	.LVL1954:
 16091              	.LFB99:
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16092              		.loc 1 5699 1 is_stmt 1 view -0
 16093              		.cfi_startproc
 16094              		@ args = 0, pretend = 0, frame = 8
 16095              		@ frame_needed = 0, uses_anonymous_args = 0
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16096              		.loc 1 5699 1 is_stmt 0 view .LVU4398
 16097 0000 30B5     		push	{r4, r5, lr}
 16098              	.LCFI521:
 16099              		.cfi_def_cfa_offset 12
 16100              		.cfi_offset 4, -12
 16101              		.cfi_offset 5, -8
 16102              		.cfi_offset 14, -4
 16103 0002 83B0     		sub	sp, sp, #12
 16104              	.LCFI522:
 16105              		.cfi_def_cfa_offset 24
 16106 0004 0546     		mov	r5, r0
5700:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 16107              		.loc 1 5700 5 is_stmt 1 view .LVU4399
 16108              	.LVL1955:
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16109              		.loc 1 5701 5 view .LVU4400
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16110              		.loc 1 5701 9 is_stmt 0 view .LVU4401
 16111 0006 0023     		movs	r3, #0
 16112 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5702:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16113              		.loc 1 5702 5 is_stmt 1 view .LVU4402
 16114              	.LVL1956:
5703:Core/Src/bno055.c **** 
 16115              		.loc 1 5703 5 view .LVU4403
5703:Core/Src/bno055.c **** 
 16116              		.loc 1 5703 8 is_stmt 0 view .LVU4404
 16117 000c 8DF80530 		strb	r3, [sp, #5]
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16118              		.loc 1 5707 5 is_stmt 1 view .LVU4405
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16119              		.loc 1 5707 16 is_stmt 0 view .LVU4406
 16120 0010 0DF10500 		add	r0, sp, #5
 16121              	.LVL1957:
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16122              		.loc 1 5707 16 view .LVU4407
 16123 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16124              	.LVL1958:
 16125 0018 0446     		mov	r4, r0
 16126              	.LVL1959:
5708:Core/Src/bno055.c ****     {
 16127              		.loc 1 5708 5 is_stmt 1 view .LVU4408
5708:Core/Src/bno055.c ****     {
 16128              		.loc 1 5708 23 is_stmt 0 view .LVU4409
 16129 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5708:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 469


 16130              		.loc 1 5708 8 view .LVU4410
 16131 001e ABB9     		cbnz	r3, .L1161
 16132              	.L1156:
5712:Core/Src/bno055.c ****     {
 16133              		.loc 1 5712 5 is_stmt 1 view .LVU4411
5712:Core/Src/bno055.c ****     {
 16134              		.loc 1 5712 8 is_stmt 0 view .LVU4412
 16135 0020 DCB9     		cbnz	r4, .L1158
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16136              		.loc 1 5715 9 is_stmt 1 view .LVU4413
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16137              		.loc 1 5715 21 is_stmt 0 view .LVU4414
 16138 0022 0DF10600 		add	r0, sp, #6
 16139 0026 FFF7FEFF 		bl	bno055_read_euler_h
 16140              	.LVL1960:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16141              		.loc 1 5715 18 view .LVU4415
 16142 002a 54FA80F4 		uxtab	r4, r4, r0
 16143              	.LVL1961:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16144              		.loc 1 5715 18 view .LVU4416
 16145 002e 64B2     		sxtb	r4, r4
 16146              	.LVL1962:
5716:Core/Src/bno055.c ****         {
 16147              		.loc 1 5716 9 is_stmt 1 view .LVU4417
5716:Core/Src/bno055.c ****         {
 16148              		.loc 1 5716 12 is_stmt 0 view .LVU4418
 16149 0030 B4B9     		cbnz	r4, .L1159
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16150              		.loc 1 5719 13 is_stmt 1 view .LVU4419
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16151              		.loc 1 5719 22 is_stmt 0 view .LVU4420
 16152 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16153 0036 FFF7FEFF 		bl	__aeabi_i2d
 16154              	.LVL1963:
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16155              		.loc 1 5719 20 view .LVU4421
 16156 003a 0022     		movs	r2, #0
 16157 003c 0A4B     		ldr	r3, .L1162
 16158 003e FFF7FEFF 		bl	__aeabi_dmul
 16159              	.LVL1964:
5720:Core/Src/bno055.c ****         }
 16160              		.loc 1 5720 13 is_stmt 1 view .LVU4422
5720:Core/Src/bno055.c ****         }
 16161              		.loc 1 5720 24 is_stmt 0 view .LVU4423
 16162 0042 C5E90001 		strd	r0, [r5]
 16163              	.LVL1965:
 16164              	.L1157:
5732:Core/Src/bno055.c **** }
 16165              		.loc 1 5732 5 is_stmt 1 view .LVU4424
5733:Core/Src/bno055.c **** 
 16166              		.loc 1 5733 1 is_stmt 0 view .LVU4425
 16167 0046 2046     		mov	r0, r4
 16168 0048 03B0     		add	sp, sp, #12
 16169              	.LCFI523:
 16170              		.cfi_remember_state
 16171              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 470


 16172              		@ sp needed
 16173 004a 30BD     		pop	{r4, r5, pc}
 16174              	.LVL1966:
 16175              	.L1161:
 16176              	.LCFI524:
 16177              		.cfi_restore_state
5710:Core/Src/bno055.c ****     }
 16178              		.loc 1 5710 9 is_stmt 1 view .LVU4426
5710:Core/Src/bno055.c ****     }
 16179              		.loc 1 5710 21 is_stmt 0 view .LVU4427
 16180 004c 0020     		movs	r0, #0
 16181 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16182              	.LVL1967:
5710:Core/Src/bno055.c ****     }
 16183              		.loc 1 5710 18 view .LVU4428
 16184 0052 54FA80F4 		uxtab	r4, r4, r0
 16185              	.LVL1968:
5710:Core/Src/bno055.c ****     }
 16186              		.loc 1 5710 18 view .LVU4429
 16187 0056 64B2     		sxtb	r4, r4
 16188              	.LVL1969:
5710:Core/Src/bno055.c ****     }
 16189              		.loc 1 5710 18 view .LVU4430
 16190 0058 E2E7     		b	.L1156
 16191              	.L1158:
5729:Core/Src/bno055.c ****     }
 16192              		.loc 1 5729 18 view .LVU4431
 16193 005a 4FF0FF34 		mov	r4, #-1
 16194              	.LVL1970:
5729:Core/Src/bno055.c ****     }
 16195              		.loc 1 5729 18 view .LVU4432
 16196 005e F2E7     		b	.L1157
 16197              	.LVL1971:
 16198              	.L1159:
5724:Core/Src/bno055.c ****         }
 16199              		.loc 1 5724 22 view .LVU4433
 16200 0060 4FF0FF34 		mov	r4, #-1
 16201              	.LVL1972:
5724:Core/Src/bno055.c ****         }
 16202              		.loc 1 5724 22 view .LVU4434
 16203 0064 EFE7     		b	.L1157
 16204              	.L1163:
 16205 0066 00BF     		.align	2
 16206              	.L1162:
 16207 0068 0000B03F 		.word	1068498944
 16208              		.cfi_endproc
 16209              	.LFE99:
 16211              		.section	.text.bno055_convert_double_euler_h_rad,"ax",%progbits
 16212              		.align	1
 16213              		.global	bno055_convert_double_euler_h_rad
 16214              		.syntax unified
 16215              		.thumb
 16216              		.thumb_func
 16218              	bno055_convert_double_euler_h_rad:
 16219              	.LVL1973:
 16220              	.LFB100:
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 471


 16221              		.loc 1 5748 1 is_stmt 1 view -0
 16222              		.cfi_startproc
 16223              		@ args = 0, pretend = 0, frame = 8
 16224              		@ frame_needed = 0, uses_anonymous_args = 0
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16225              		.loc 1 5748 1 is_stmt 0 view .LVU4436
 16226 0000 30B5     		push	{r4, r5, lr}
 16227              	.LCFI525:
 16228              		.cfi_def_cfa_offset 12
 16229              		.cfi_offset 4, -12
 16230              		.cfi_offset 5, -8
 16231              		.cfi_offset 14, -4
 16232 0002 83B0     		sub	sp, sp, #12
 16233              	.LCFI526:
 16234              		.cfi_def_cfa_offset 24
 16235 0004 0546     		mov	r5, r0
5749:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 16236              		.loc 1 5749 5 is_stmt 1 view .LVU4437
 16237              	.LVL1974:
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16238              		.loc 1 5750 5 view .LVU4438
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16239              		.loc 1 5750 9 is_stmt 0 view .LVU4439
 16240 0006 0023     		movs	r3, #0
 16241 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5751:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16242              		.loc 1 5751 5 is_stmt 1 view .LVU4440
 16243              	.LVL1975:
5752:Core/Src/bno055.c **** 
 16244              		.loc 1 5752 5 view .LVU4441
5752:Core/Src/bno055.c **** 
 16245              		.loc 1 5752 8 is_stmt 0 view .LVU4442
 16246 000c 8DF80530 		strb	r3, [sp, #5]
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16247              		.loc 1 5756 5 is_stmt 1 view .LVU4443
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16248              		.loc 1 5756 16 is_stmt 0 view .LVU4444
 16249 0010 0DF10500 		add	r0, sp, #5
 16250              	.LVL1976:
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16251              		.loc 1 5756 16 view .LVU4445
 16252 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16253              	.LVL1977:
 16254 0018 0446     		mov	r4, r0
 16255              	.LVL1978:
5757:Core/Src/bno055.c ****     {
 16256              		.loc 1 5757 5 is_stmt 1 view .LVU4446
5757:Core/Src/bno055.c ****     {
 16257              		.loc 1 5757 23 is_stmt 0 view .LVU4447
 16258 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5757:Core/Src/bno055.c ****     {
 16259              		.loc 1 5757 8 view .LVU4448
 16260 001e 012B     		cmp	r3, #1
 16261 0020 15D1     		bne	.L1170
 16262              	.L1165:
5761:Core/Src/bno055.c ****     {
 16263              		.loc 1 5761 5 is_stmt 1 view .LVU4449
ARM GAS  /tmp/cc9kYR4Z.s 			page 472


5761:Core/Src/bno055.c ****     {
 16264              		.loc 1 5761 8 is_stmt 0 view .LVU4450
 16265 0022 DCB9     		cbnz	r4, .L1167
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16266              		.loc 1 5764 9 is_stmt 1 view .LVU4451
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16267              		.loc 1 5764 21 is_stmt 0 view .LVU4452
 16268 0024 0DF10600 		add	r0, sp, #6
 16269 0028 FFF7FEFF 		bl	bno055_read_euler_h
 16270              	.LVL1979:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16271              		.loc 1 5764 18 view .LVU4453
 16272 002c 54FA80F4 		uxtab	r4, r4, r0
 16273              	.LVL1980:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16274              		.loc 1 5764 18 view .LVU4454
 16275 0030 64B2     		sxtb	r4, r4
 16276              	.LVL1981:
5765:Core/Src/bno055.c ****         {
 16277              		.loc 1 5765 9 is_stmt 1 view .LVU4455
5765:Core/Src/bno055.c ****         {
 16278              		.loc 1 5765 12 is_stmt 0 view .LVU4456
 16279 0032 B4B9     		cbnz	r4, .L1168
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16280              		.loc 1 5768 13 is_stmt 1 view .LVU4457
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16281              		.loc 1 5768 22 is_stmt 0 view .LVU4458
 16282 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16283 0038 FFF7FEFF 		bl	__aeabi_i2d
 16284              	.LVL1982:
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16285              		.loc 1 5768 20 view .LVU4459
 16286 003c 0022     		movs	r2, #0
 16287 003e 0A4B     		ldr	r3, .L1171
 16288 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16289              	.LVL1983:
5769:Core/Src/bno055.c ****         }
 16290              		.loc 1 5769 13 is_stmt 1 view .LVU4460
5769:Core/Src/bno055.c ****         }
 16291              		.loc 1 5769 24 is_stmt 0 view .LVU4461
 16292 0044 C5E90001 		strd	r0, [r5]
 16293              	.LVL1984:
 16294              	.L1166:
5781:Core/Src/bno055.c **** }
 16295              		.loc 1 5781 5 is_stmt 1 view .LVU4462
5782:Core/Src/bno055.c **** 
 16296              		.loc 1 5782 1 is_stmt 0 view .LVU4463
 16297 0048 2046     		mov	r0, r4
 16298 004a 03B0     		add	sp, sp, #12
 16299              	.LCFI527:
 16300              		.cfi_remember_state
 16301              		.cfi_def_cfa_offset 12
 16302              		@ sp needed
 16303 004c 30BD     		pop	{r4, r5, pc}
 16304              	.LVL1985:
 16305              	.L1170:
 16306              	.LCFI528:
ARM GAS  /tmp/cc9kYR4Z.s 			page 473


 16307              		.cfi_restore_state
5759:Core/Src/bno055.c ****     }
 16308              		.loc 1 5759 9 is_stmt 1 view .LVU4464
5759:Core/Src/bno055.c ****     }
 16309              		.loc 1 5759 21 is_stmt 0 view .LVU4465
 16310 004e 0120     		movs	r0, #1
 16311 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16312              	.LVL1986:
5759:Core/Src/bno055.c ****     }
 16313              		.loc 1 5759 18 view .LVU4466
 16314 0054 54FA80F4 		uxtab	r4, r4, r0
 16315              	.LVL1987:
5759:Core/Src/bno055.c ****     }
 16316              		.loc 1 5759 18 view .LVU4467
 16317 0058 64B2     		sxtb	r4, r4
 16318              	.LVL1988:
5759:Core/Src/bno055.c ****     }
 16319              		.loc 1 5759 18 view .LVU4468
 16320 005a E2E7     		b	.L1165
 16321              	.L1167:
5778:Core/Src/bno055.c ****     }
 16322              		.loc 1 5778 18 view .LVU4469
 16323 005c 4FF0FF34 		mov	r4, #-1
 16324              	.LVL1989:
5778:Core/Src/bno055.c ****     }
 16325              		.loc 1 5778 18 view .LVU4470
 16326 0060 F2E7     		b	.L1166
 16327              	.LVL1990:
 16328              	.L1168:
5773:Core/Src/bno055.c ****         }
 16329              		.loc 1 5773 22 view .LVU4471
 16330 0062 4FF0FF34 		mov	r4, #-1
 16331              	.LVL1991:
5773:Core/Src/bno055.c ****         }
 16332              		.loc 1 5773 22 view .LVU4472
 16333 0066 EFE7     		b	.L1166
 16334              	.L1172:
 16335              		.align	2
 16336              	.L1171:
 16337 0068 00208C40 		.word	1082925056
 16338              		.cfi_endproc
 16339              	.LFE100:
 16341              		.section	.text.bno055_convert_double_euler_r_deg,"ax",%progbits
 16342              		.align	1
 16343              		.global	bno055_convert_double_euler_r_deg
 16344              		.syntax unified
 16345              		.thumb
 16346              		.thumb_func
 16348              	bno055_convert_double_euler_r_deg:
 16349              	.LVL1992:
 16350              	.LFB101:
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16351              		.loc 1 5797 1 is_stmt 1 view -0
 16352              		.cfi_startproc
 16353              		@ args = 0, pretend = 0, frame = 8
 16354              		@ frame_needed = 0, uses_anonymous_args = 0
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 474


 16355              		.loc 1 5797 1 is_stmt 0 view .LVU4474
 16356 0000 30B5     		push	{r4, r5, lr}
 16357              	.LCFI529:
 16358              		.cfi_def_cfa_offset 12
 16359              		.cfi_offset 4, -12
 16360              		.cfi_offset 5, -8
 16361              		.cfi_offset 14, -4
 16362 0002 83B0     		sub	sp, sp, #12
 16363              	.LCFI530:
 16364              		.cfi_def_cfa_offset 24
 16365 0004 0546     		mov	r5, r0
5798:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 16366              		.loc 1 5798 5 is_stmt 1 view .LVU4475
 16367              	.LVL1993:
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16368              		.loc 1 5799 5 view .LVU4476
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16369              		.loc 1 5799 9 is_stmt 0 view .LVU4477
 16370 0006 0023     		movs	r3, #0
 16371 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5800:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16372              		.loc 1 5800 5 is_stmt 1 view .LVU4478
 16373              	.LVL1994:
5801:Core/Src/bno055.c **** 
 16374              		.loc 1 5801 5 view .LVU4479
5801:Core/Src/bno055.c **** 
 16375              		.loc 1 5801 8 is_stmt 0 view .LVU4480
 16376 000c 8DF80530 		strb	r3, [sp, #5]
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16377              		.loc 1 5805 5 is_stmt 1 view .LVU4481
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16378              		.loc 1 5805 16 is_stmt 0 view .LVU4482
 16379 0010 0DF10500 		add	r0, sp, #5
 16380              	.LVL1995:
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16381              		.loc 1 5805 16 view .LVU4483
 16382 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16383              	.LVL1996:
 16384 0018 0446     		mov	r4, r0
 16385              	.LVL1997:
5806:Core/Src/bno055.c ****     {
 16386              		.loc 1 5806 5 is_stmt 1 view .LVU4484
5806:Core/Src/bno055.c ****     {
 16387              		.loc 1 5806 23 is_stmt 0 view .LVU4485
 16388 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5806:Core/Src/bno055.c ****     {
 16389              		.loc 1 5806 8 view .LVU4486
 16390 001e ABB9     		cbnz	r3, .L1179
 16391              	.L1174:
5810:Core/Src/bno055.c ****     {
 16392              		.loc 1 5810 5 is_stmt 1 view .LVU4487
5810:Core/Src/bno055.c ****     {
 16393              		.loc 1 5810 8 is_stmt 0 view .LVU4488
 16394 0020 DCB9     		cbnz	r4, .L1176
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16395              		.loc 1 5813 9 is_stmt 1 view .LVU4489
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 475


 16396              		.loc 1 5813 21 is_stmt 0 view .LVU4490
 16397 0022 0DF10600 		add	r0, sp, #6
 16398 0026 FFF7FEFF 		bl	bno055_read_euler_r
 16399              	.LVL1998:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16400              		.loc 1 5813 18 view .LVU4491
 16401 002a 54FA80F4 		uxtab	r4, r4, r0
 16402              	.LVL1999:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16403              		.loc 1 5813 18 view .LVU4492
 16404 002e 64B2     		sxtb	r4, r4
 16405              	.LVL2000:
5814:Core/Src/bno055.c ****         {
 16406              		.loc 1 5814 9 is_stmt 1 view .LVU4493
5814:Core/Src/bno055.c ****         {
 16407              		.loc 1 5814 12 is_stmt 0 view .LVU4494
 16408 0030 B4B9     		cbnz	r4, .L1177
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16409              		.loc 1 5817 13 is_stmt 1 view .LVU4495
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16410              		.loc 1 5817 22 is_stmt 0 view .LVU4496
 16411 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16412 0036 FFF7FEFF 		bl	__aeabi_i2d
 16413              	.LVL2001:
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16414              		.loc 1 5817 20 view .LVU4497
 16415 003a 0022     		movs	r2, #0
 16416 003c 0A4B     		ldr	r3, .L1180
 16417 003e FFF7FEFF 		bl	__aeabi_dmul
 16418              	.LVL2002:
5818:Core/Src/bno055.c ****         }
 16419              		.loc 1 5818 13 is_stmt 1 view .LVU4498
5818:Core/Src/bno055.c ****         }
 16420              		.loc 1 5818 24 is_stmt 0 view .LVU4499
 16421 0042 C5E90001 		strd	r0, [r5]
 16422              	.LVL2003:
 16423              	.L1175:
5830:Core/Src/bno055.c **** }
 16424              		.loc 1 5830 5 is_stmt 1 view .LVU4500
5831:Core/Src/bno055.c **** 
 16425              		.loc 1 5831 1 is_stmt 0 view .LVU4501
 16426 0046 2046     		mov	r0, r4
 16427 0048 03B0     		add	sp, sp, #12
 16428              	.LCFI531:
 16429              		.cfi_remember_state
 16430              		.cfi_def_cfa_offset 12
 16431              		@ sp needed
 16432 004a 30BD     		pop	{r4, r5, pc}
 16433              	.LVL2004:
 16434              	.L1179:
 16435              	.LCFI532:
 16436              		.cfi_restore_state
5808:Core/Src/bno055.c ****     }
 16437              		.loc 1 5808 9 is_stmt 1 view .LVU4502
5808:Core/Src/bno055.c ****     }
 16438              		.loc 1 5808 21 is_stmt 0 view .LVU4503
 16439 004c 0020     		movs	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 476


 16440 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16441              	.LVL2005:
5808:Core/Src/bno055.c ****     }
 16442              		.loc 1 5808 18 view .LVU4504
 16443 0052 54FA80F4 		uxtab	r4, r4, r0
 16444              	.LVL2006:
5808:Core/Src/bno055.c ****     }
 16445              		.loc 1 5808 18 view .LVU4505
 16446 0056 64B2     		sxtb	r4, r4
 16447              	.LVL2007:
5808:Core/Src/bno055.c ****     }
 16448              		.loc 1 5808 18 view .LVU4506
 16449 0058 E2E7     		b	.L1174
 16450              	.L1176:
5827:Core/Src/bno055.c ****     }
 16451              		.loc 1 5827 18 view .LVU4507
 16452 005a 4FF0FF34 		mov	r4, #-1
 16453              	.LVL2008:
5827:Core/Src/bno055.c ****     }
 16454              		.loc 1 5827 18 view .LVU4508
 16455 005e F2E7     		b	.L1175
 16456              	.LVL2009:
 16457              	.L1177:
5822:Core/Src/bno055.c ****         }
 16458              		.loc 1 5822 22 view .LVU4509
 16459 0060 4FF0FF34 		mov	r4, #-1
 16460              	.LVL2010:
5822:Core/Src/bno055.c ****         }
 16461              		.loc 1 5822 22 view .LVU4510
 16462 0064 EFE7     		b	.L1175
 16463              	.L1181:
 16464 0066 00BF     		.align	2
 16465              	.L1180:
 16466 0068 0000B03F 		.word	1068498944
 16467              		.cfi_endproc
 16468              	.LFE101:
 16470              		.section	.text.bno055_convert_double_euler_r_rad,"ax",%progbits
 16471              		.align	1
 16472              		.global	bno055_convert_double_euler_r_rad
 16473              		.syntax unified
 16474              		.thumb
 16475              		.thumb_func
 16477              	bno055_convert_double_euler_r_rad:
 16478              	.LVL2011:
 16479              	.LFB102:
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16480              		.loc 1 5846 1 is_stmt 1 view -0
 16481              		.cfi_startproc
 16482              		@ args = 0, pretend = 0, frame = 8
 16483              		@ frame_needed = 0, uses_anonymous_args = 0
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16484              		.loc 1 5846 1 is_stmt 0 view .LVU4512
 16485 0000 30B5     		push	{r4, r5, lr}
 16486              	.LCFI533:
 16487              		.cfi_def_cfa_offset 12
 16488              		.cfi_offset 4, -12
 16489              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 477


 16490              		.cfi_offset 14, -4
 16491 0002 83B0     		sub	sp, sp, #12
 16492              	.LCFI534:
 16493              		.cfi_def_cfa_offset 24
 16494 0004 0546     		mov	r5, r0
5847:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 16495              		.loc 1 5847 5 is_stmt 1 view .LVU4513
 16496              	.LVL2012:
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16497              		.loc 1 5848 5 view .LVU4514
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16498              		.loc 1 5848 9 is_stmt 0 view .LVU4515
 16499 0006 0023     		movs	r3, #0
 16500 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5849:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16501              		.loc 1 5849 5 is_stmt 1 view .LVU4516
 16502              	.LVL2013:
5850:Core/Src/bno055.c **** 
 16503              		.loc 1 5850 5 view .LVU4517
5850:Core/Src/bno055.c **** 
 16504              		.loc 1 5850 8 is_stmt 0 view .LVU4518
 16505 000c 8DF80530 		strb	r3, [sp, #5]
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16506              		.loc 1 5854 5 is_stmt 1 view .LVU4519
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16507              		.loc 1 5854 16 is_stmt 0 view .LVU4520
 16508 0010 0DF10500 		add	r0, sp, #5
 16509              	.LVL2014:
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16510              		.loc 1 5854 16 view .LVU4521
 16511 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16512              	.LVL2015:
 16513 0018 0446     		mov	r4, r0
 16514              	.LVL2016:
5855:Core/Src/bno055.c ****     {
 16515              		.loc 1 5855 5 is_stmt 1 view .LVU4522
5855:Core/Src/bno055.c ****     {
 16516              		.loc 1 5855 23 is_stmt 0 view .LVU4523
 16517 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5855:Core/Src/bno055.c ****     {
 16518              		.loc 1 5855 8 view .LVU4524
 16519 001e 012B     		cmp	r3, #1
 16520 0020 15D1     		bne	.L1188
 16521              	.L1183:
5859:Core/Src/bno055.c ****     {
 16522              		.loc 1 5859 5 is_stmt 1 view .LVU4525
5859:Core/Src/bno055.c ****     {
 16523              		.loc 1 5859 8 is_stmt 0 view .LVU4526
 16524 0022 DCB9     		cbnz	r4, .L1185
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16525              		.loc 1 5862 9 is_stmt 1 view .LVU4527
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16526              		.loc 1 5862 21 is_stmt 0 view .LVU4528
 16527 0024 0DF10600 		add	r0, sp, #6
 16528 0028 FFF7FEFF 		bl	bno055_read_euler_r
 16529              	.LVL2017:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 478


 16530              		.loc 1 5862 18 view .LVU4529
 16531 002c 54FA80F4 		uxtab	r4, r4, r0
 16532              	.LVL2018:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16533              		.loc 1 5862 18 view .LVU4530
 16534 0030 64B2     		sxtb	r4, r4
 16535              	.LVL2019:
5863:Core/Src/bno055.c ****         {
 16536              		.loc 1 5863 9 is_stmt 1 view .LVU4531
5863:Core/Src/bno055.c ****         {
 16537              		.loc 1 5863 12 is_stmt 0 view .LVU4532
 16538 0032 B4B9     		cbnz	r4, .L1186
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16539              		.loc 1 5866 13 is_stmt 1 view .LVU4533
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16540              		.loc 1 5866 22 is_stmt 0 view .LVU4534
 16541 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16542 0038 FFF7FEFF 		bl	__aeabi_i2d
 16543              	.LVL2020:
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16544              		.loc 1 5866 20 view .LVU4535
 16545 003c 0022     		movs	r2, #0
 16546 003e 0A4B     		ldr	r3, .L1189
 16547 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16548              	.LVL2021:
5867:Core/Src/bno055.c ****         }
 16549              		.loc 1 5867 13 is_stmt 1 view .LVU4536
5867:Core/Src/bno055.c ****         }
 16550              		.loc 1 5867 24 is_stmt 0 view .LVU4537
 16551 0044 C5E90001 		strd	r0, [r5]
 16552              	.LVL2022:
 16553              	.L1184:
5879:Core/Src/bno055.c **** }
 16554              		.loc 1 5879 5 is_stmt 1 view .LVU4538
5880:Core/Src/bno055.c **** 
 16555              		.loc 1 5880 1 is_stmt 0 view .LVU4539
 16556 0048 2046     		mov	r0, r4
 16557 004a 03B0     		add	sp, sp, #12
 16558              	.LCFI535:
 16559              		.cfi_remember_state
 16560              		.cfi_def_cfa_offset 12
 16561              		@ sp needed
 16562 004c 30BD     		pop	{r4, r5, pc}
 16563              	.LVL2023:
 16564              	.L1188:
 16565              	.LCFI536:
 16566              		.cfi_restore_state
5857:Core/Src/bno055.c ****     }
 16567              		.loc 1 5857 9 is_stmt 1 view .LVU4540
5857:Core/Src/bno055.c ****     }
 16568              		.loc 1 5857 21 is_stmt 0 view .LVU4541
 16569 004e 0120     		movs	r0, #1
 16570 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16571              	.LVL2024:
5857:Core/Src/bno055.c ****     }
 16572              		.loc 1 5857 18 view .LVU4542
 16573 0054 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 479


 16574              	.LVL2025:
5857:Core/Src/bno055.c ****     }
 16575              		.loc 1 5857 18 view .LVU4543
 16576 0058 64B2     		sxtb	r4, r4
 16577              	.LVL2026:
5857:Core/Src/bno055.c ****     }
 16578              		.loc 1 5857 18 view .LVU4544
 16579 005a E2E7     		b	.L1183
 16580              	.L1185:
5876:Core/Src/bno055.c ****     }
 16581              		.loc 1 5876 18 view .LVU4545
 16582 005c 4FF0FF34 		mov	r4, #-1
 16583              	.LVL2027:
5876:Core/Src/bno055.c ****     }
 16584              		.loc 1 5876 18 view .LVU4546
 16585 0060 F2E7     		b	.L1184
 16586              	.LVL2028:
 16587              	.L1186:
5871:Core/Src/bno055.c ****         }
 16588              		.loc 1 5871 22 view .LVU4547
 16589 0062 4FF0FF34 		mov	r4, #-1
 16590              	.LVL2029:
5871:Core/Src/bno055.c ****         }
 16591              		.loc 1 5871 22 view .LVU4548
 16592 0066 EFE7     		b	.L1184
 16593              	.L1190:
 16594              		.align	2
 16595              	.L1189:
 16596 0068 00208C40 		.word	1082925056
 16597              		.cfi_endproc
 16598              	.LFE102:
 16600              		.section	.text.bno055_convert_double_euler_p_deg,"ax",%progbits
 16601              		.align	1
 16602              		.global	bno055_convert_double_euler_p_deg
 16603              		.syntax unified
 16604              		.thumb
 16605              		.thumb_func
 16607              	bno055_convert_double_euler_p_deg:
 16608              	.LVL2030:
 16609              	.LFB103:
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16610              		.loc 1 5895 1 is_stmt 1 view -0
 16611              		.cfi_startproc
 16612              		@ args = 0, pretend = 0, frame = 8
 16613              		@ frame_needed = 0, uses_anonymous_args = 0
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16614              		.loc 1 5895 1 is_stmt 0 view .LVU4550
 16615 0000 30B5     		push	{r4, r5, lr}
 16616              	.LCFI537:
 16617              		.cfi_def_cfa_offset 12
 16618              		.cfi_offset 4, -12
 16619              		.cfi_offset 5, -8
 16620              		.cfi_offset 14, -4
 16621 0002 83B0     		sub	sp, sp, #12
 16622              	.LCFI538:
 16623              		.cfi_def_cfa_offset 24
 16624 0004 0546     		mov	r5, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 480


5896:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16625              		.loc 1 5896 5 is_stmt 1 view .LVU4551
 16626              	.LVL2031:
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16627              		.loc 1 5897 5 view .LVU4552
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16628              		.loc 1 5897 9 is_stmt 0 view .LVU4553
 16629 0006 0023     		movs	r3, #0
 16630 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5898:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16631              		.loc 1 5898 5 is_stmt 1 view .LVU4554
 16632              	.LVL2032:
5899:Core/Src/bno055.c **** 
 16633              		.loc 1 5899 5 view .LVU4555
5899:Core/Src/bno055.c **** 
 16634              		.loc 1 5899 8 is_stmt 0 view .LVU4556
 16635 000c 8DF80530 		strb	r3, [sp, #5]
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16636              		.loc 1 5903 5 is_stmt 1 view .LVU4557
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16637              		.loc 1 5903 16 is_stmt 0 view .LVU4558
 16638 0010 0DF10500 		add	r0, sp, #5
 16639              	.LVL2033:
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16640              		.loc 1 5903 16 view .LVU4559
 16641 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16642              	.LVL2034:
 16643 0018 0446     		mov	r4, r0
 16644              	.LVL2035:
5904:Core/Src/bno055.c ****     {
 16645              		.loc 1 5904 5 is_stmt 1 view .LVU4560
5904:Core/Src/bno055.c ****     {
 16646              		.loc 1 5904 23 is_stmt 0 view .LVU4561
 16647 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5904:Core/Src/bno055.c ****     {
 16648              		.loc 1 5904 8 view .LVU4562
 16649 001e ABB9     		cbnz	r3, .L1197
 16650              	.L1192:
5908:Core/Src/bno055.c ****     {
 16651              		.loc 1 5908 5 is_stmt 1 view .LVU4563
5908:Core/Src/bno055.c ****     {
 16652              		.loc 1 5908 8 is_stmt 0 view .LVU4564
 16653 0020 DCB9     		cbnz	r4, .L1194
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16654              		.loc 1 5911 9 is_stmt 1 view .LVU4565
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16655              		.loc 1 5911 21 is_stmt 0 view .LVU4566
 16656 0022 0DF10600 		add	r0, sp, #6
 16657 0026 FFF7FEFF 		bl	bno055_read_euler_p
 16658              	.LVL2036:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16659              		.loc 1 5911 18 view .LVU4567
 16660 002a 54FA80F4 		uxtab	r4, r4, r0
 16661              	.LVL2037:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16662              		.loc 1 5911 18 view .LVU4568
 16663 002e 64B2     		sxtb	r4, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 481


 16664              	.LVL2038:
5912:Core/Src/bno055.c ****         {
 16665              		.loc 1 5912 9 is_stmt 1 view .LVU4569
5912:Core/Src/bno055.c ****         {
 16666              		.loc 1 5912 12 is_stmt 0 view .LVU4570
 16667 0030 B4B9     		cbnz	r4, .L1195
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16668              		.loc 1 5915 13 is_stmt 1 view .LVU4571
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16669              		.loc 1 5915 22 is_stmt 0 view .LVU4572
 16670 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16671 0036 FFF7FEFF 		bl	__aeabi_i2d
 16672              	.LVL2039:
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16673              		.loc 1 5915 20 view .LVU4573
 16674 003a 0022     		movs	r2, #0
 16675 003c 0A4B     		ldr	r3, .L1198
 16676 003e FFF7FEFF 		bl	__aeabi_dmul
 16677              	.LVL2040:
5916:Core/Src/bno055.c ****         }
 16678              		.loc 1 5916 13 is_stmt 1 view .LVU4574
5916:Core/Src/bno055.c ****         }
 16679              		.loc 1 5916 24 is_stmt 0 view .LVU4575
 16680 0042 C5E90001 		strd	r0, [r5]
 16681              	.LVL2041:
 16682              	.L1193:
5928:Core/Src/bno055.c **** }
 16683              		.loc 1 5928 5 is_stmt 1 view .LVU4576
5929:Core/Src/bno055.c **** 
 16684              		.loc 1 5929 1 is_stmt 0 view .LVU4577
 16685 0046 2046     		mov	r0, r4
 16686 0048 03B0     		add	sp, sp, #12
 16687              	.LCFI539:
 16688              		.cfi_remember_state
 16689              		.cfi_def_cfa_offset 12
 16690              		@ sp needed
 16691 004a 30BD     		pop	{r4, r5, pc}
 16692              	.LVL2042:
 16693              	.L1197:
 16694              	.LCFI540:
 16695              		.cfi_restore_state
5906:Core/Src/bno055.c ****     }
 16696              		.loc 1 5906 9 is_stmt 1 view .LVU4578
5906:Core/Src/bno055.c ****     }
 16697              		.loc 1 5906 21 is_stmt 0 view .LVU4579
 16698 004c 0020     		movs	r0, #0
 16699 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16700              	.LVL2043:
5906:Core/Src/bno055.c ****     }
 16701              		.loc 1 5906 18 view .LVU4580
 16702 0052 54FA80F4 		uxtab	r4, r4, r0
 16703              	.LVL2044:
5906:Core/Src/bno055.c ****     }
 16704              		.loc 1 5906 18 view .LVU4581
 16705 0056 64B2     		sxtb	r4, r4
 16706              	.LVL2045:
5906:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 482


 16707              		.loc 1 5906 18 view .LVU4582
 16708 0058 E2E7     		b	.L1192
 16709              	.L1194:
5925:Core/Src/bno055.c ****     }
 16710              		.loc 1 5925 18 view .LVU4583
 16711 005a 4FF0FF34 		mov	r4, #-1
 16712              	.LVL2046:
5925:Core/Src/bno055.c ****     }
 16713              		.loc 1 5925 18 view .LVU4584
 16714 005e F2E7     		b	.L1193
 16715              	.LVL2047:
 16716              	.L1195:
5920:Core/Src/bno055.c ****         }
 16717              		.loc 1 5920 22 view .LVU4585
 16718 0060 4FF0FF34 		mov	r4, #-1
 16719              	.LVL2048:
5920:Core/Src/bno055.c ****         }
 16720              		.loc 1 5920 22 view .LVU4586
 16721 0064 EFE7     		b	.L1193
 16722              	.L1199:
 16723 0066 00BF     		.align	2
 16724              	.L1198:
 16725 0068 0000B03F 		.word	1068498944
 16726              		.cfi_endproc
 16727              	.LFE103:
 16729              		.section	.text.bno055_convert_double_euler_p_rad,"ax",%progbits
 16730              		.align	1
 16731              		.global	bno055_convert_double_euler_p_rad
 16732              		.syntax unified
 16733              		.thumb
 16734              		.thumb_func
 16736              	bno055_convert_double_euler_p_rad:
 16737              	.LVL2049:
 16738              	.LFB104:
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16739              		.loc 1 5944 1 is_stmt 1 view -0
 16740              		.cfi_startproc
 16741              		@ args = 0, pretend = 0, frame = 8
 16742              		@ frame_needed = 0, uses_anonymous_args = 0
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16743              		.loc 1 5944 1 is_stmt 0 view .LVU4588
 16744 0000 30B5     		push	{r4, r5, lr}
 16745              	.LCFI541:
 16746              		.cfi_def_cfa_offset 12
 16747              		.cfi_offset 4, -12
 16748              		.cfi_offset 5, -8
 16749              		.cfi_offset 14, -4
 16750 0002 83B0     		sub	sp, sp, #12
 16751              	.LCFI542:
 16752              		.cfi_def_cfa_offset 24
 16753 0004 0546     		mov	r5, r0
5945:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16754              		.loc 1 5945 5 is_stmt 1 view .LVU4589
 16755              	.LVL2050:
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16756              		.loc 1 5946 5 view .LVU4590
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 483


 16757              		.loc 1 5946 9 is_stmt 0 view .LVU4591
 16758 0006 0023     		movs	r3, #0
 16759 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5947:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16760              		.loc 1 5947 5 is_stmt 1 view .LVU4592
 16761              	.LVL2051:
5948:Core/Src/bno055.c **** 
 16762              		.loc 1 5948 5 view .LVU4593
5948:Core/Src/bno055.c **** 
 16763              		.loc 1 5948 8 is_stmt 0 view .LVU4594
 16764 000c 8DF80530 		strb	r3, [sp, #5]
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16765              		.loc 1 5952 5 is_stmt 1 view .LVU4595
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16766              		.loc 1 5952 16 is_stmt 0 view .LVU4596
 16767 0010 0DF10500 		add	r0, sp, #5
 16768              	.LVL2052:
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16769              		.loc 1 5952 16 view .LVU4597
 16770 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16771              	.LVL2053:
 16772 0018 0446     		mov	r4, r0
 16773              	.LVL2054:
5953:Core/Src/bno055.c ****     {
 16774              		.loc 1 5953 5 is_stmt 1 view .LVU4598
5953:Core/Src/bno055.c ****     {
 16775              		.loc 1 5953 23 is_stmt 0 view .LVU4599
 16776 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5953:Core/Src/bno055.c ****     {
 16777              		.loc 1 5953 8 view .LVU4600
 16778 001e 012B     		cmp	r3, #1
 16779 0020 15D1     		bne	.L1206
 16780              	.L1201:
5957:Core/Src/bno055.c ****     {
 16781              		.loc 1 5957 5 is_stmt 1 view .LVU4601
5957:Core/Src/bno055.c ****     {
 16782              		.loc 1 5957 8 is_stmt 0 view .LVU4602
 16783 0022 DCB9     		cbnz	r4, .L1203
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16784              		.loc 1 5960 9 is_stmt 1 view .LVU4603
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16785              		.loc 1 5960 21 is_stmt 0 view .LVU4604
 16786 0024 0DF10600 		add	r0, sp, #6
 16787 0028 FFF7FEFF 		bl	bno055_read_euler_p
 16788              	.LVL2055:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16789              		.loc 1 5960 18 view .LVU4605
 16790 002c 54FA80F4 		uxtab	r4, r4, r0
 16791              	.LVL2056:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16792              		.loc 1 5960 18 view .LVU4606
 16793 0030 64B2     		sxtb	r4, r4
 16794              	.LVL2057:
5961:Core/Src/bno055.c ****         {
 16795              		.loc 1 5961 9 is_stmt 1 view .LVU4607
5961:Core/Src/bno055.c ****         {
 16796              		.loc 1 5961 12 is_stmt 0 view .LVU4608
ARM GAS  /tmp/cc9kYR4Z.s 			page 484


 16797 0032 B4B9     		cbnz	r4, .L1204
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16798              		.loc 1 5964 13 is_stmt 1 view .LVU4609
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16799              		.loc 1 5964 22 is_stmt 0 view .LVU4610
 16800 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16801 0038 FFF7FEFF 		bl	__aeabi_i2d
 16802              	.LVL2058:
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16803              		.loc 1 5964 20 view .LVU4611
 16804 003c 0022     		movs	r2, #0
 16805 003e 0A4B     		ldr	r3, .L1207
 16806 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16807              	.LVL2059:
5965:Core/Src/bno055.c ****         }
 16808              		.loc 1 5965 13 is_stmt 1 view .LVU4612
5965:Core/Src/bno055.c ****         }
 16809              		.loc 1 5965 24 is_stmt 0 view .LVU4613
 16810 0044 C5E90001 		strd	r0, [r5]
 16811              	.LVL2060:
 16812              	.L1202:
5977:Core/Src/bno055.c **** }
 16813              		.loc 1 5977 5 is_stmt 1 view .LVU4614
5978:Core/Src/bno055.c **** 
 16814              		.loc 1 5978 1 is_stmt 0 view .LVU4615
 16815 0048 2046     		mov	r0, r4
 16816 004a 03B0     		add	sp, sp, #12
 16817              	.LCFI543:
 16818              		.cfi_remember_state
 16819              		.cfi_def_cfa_offset 12
 16820              		@ sp needed
 16821 004c 30BD     		pop	{r4, r5, pc}
 16822              	.LVL2061:
 16823              	.L1206:
 16824              	.LCFI544:
 16825              		.cfi_restore_state
5955:Core/Src/bno055.c ****     }
 16826              		.loc 1 5955 9 is_stmt 1 view .LVU4616
5955:Core/Src/bno055.c ****     }
 16827              		.loc 1 5955 21 is_stmt 0 view .LVU4617
 16828 004e 0120     		movs	r0, #1
 16829 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16830              	.LVL2062:
5955:Core/Src/bno055.c ****     }
 16831              		.loc 1 5955 18 view .LVU4618
 16832 0054 54FA80F4 		uxtab	r4, r4, r0
 16833              	.LVL2063:
5955:Core/Src/bno055.c ****     }
 16834              		.loc 1 5955 18 view .LVU4619
 16835 0058 64B2     		sxtb	r4, r4
 16836              	.LVL2064:
5955:Core/Src/bno055.c ****     }
 16837              		.loc 1 5955 18 view .LVU4620
 16838 005a E2E7     		b	.L1201
 16839              	.L1203:
5974:Core/Src/bno055.c ****     }
 16840              		.loc 1 5974 18 view .LVU4621
ARM GAS  /tmp/cc9kYR4Z.s 			page 485


 16841 005c 4FF0FF34 		mov	r4, #-1
 16842              	.LVL2065:
5974:Core/Src/bno055.c ****     }
 16843              		.loc 1 5974 18 view .LVU4622
 16844 0060 F2E7     		b	.L1202
 16845              	.LVL2066:
 16846              	.L1204:
5969:Core/Src/bno055.c ****         }
 16847              		.loc 1 5969 22 view .LVU4623
 16848 0062 4FF0FF34 		mov	r4, #-1
 16849              	.LVL2067:
5969:Core/Src/bno055.c ****         }
 16850              		.loc 1 5969 22 view .LVU4624
 16851 0066 EFE7     		b	.L1202
 16852              	.L1208:
 16853              		.align	2
 16854              	.L1207:
 16855 0068 00208C40 		.word	1082925056
 16856              		.cfi_endproc
 16857              	.LFE104:
 16859              		.section	.text.bno055_convert_double_euler_hpr_deg,"ax",%progbits
 16860              		.align	1
 16861              		.global	bno055_convert_double_euler_hpr_deg
 16862              		.syntax unified
 16863              		.thumb
 16864              		.thumb_func
 16866              	bno055_convert_double_euler_hpr_deg:
 16867              	.LVL2068:
 16868              	.LFB105:
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 16869              		.loc 1 5999 1 is_stmt 1 view -0
 16870              		.cfi_startproc
 16871              		@ args = 0, pretend = 0, frame = 16
 16872              		@ frame_needed = 0, uses_anonymous_args = 0
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 16873              		.loc 1 5999 1 is_stmt 0 view .LVU4626
 16874 0000 30B5     		push	{r4, r5, lr}
 16875              	.LCFI545:
 16876              		.cfi_def_cfa_offset 12
 16877              		.cfi_offset 4, -12
 16878              		.cfi_offset 5, -8
 16879              		.cfi_offset 14, -4
 16880 0002 85B0     		sub	sp, sp, #20
 16881              	.LCFI546:
 16882              		.cfi_def_cfa_offset 32
 16883 0004 0546     		mov	r5, r0
6002:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 16884              		.loc 1 6002 5 is_stmt 1 view .LVU4627
 16885              	.LVL2069:
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16886              		.loc 1 6003 5 view .LVU4628
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16887              		.loc 1 6003 27 is_stmt 0 view .LVU4629
 16888 0006 0023     		movs	r3, #0
 16889 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 16890 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 16891 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
ARM GAS  /tmp/cc9kYR4Z.s 			page 486


6004:Core/Src/bno055.c **** 
 16892              		.loc 1 6004 5 is_stmt 1 view .LVU4630
6004:Core/Src/bno055.c **** 
 16893              		.loc 1 6004 8 is_stmt 0 view .LVU4631
 16894 0014 8DF80730 		strb	r3, [sp, #7]
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16895              		.loc 1 6008 5 is_stmt 1 view .LVU4632
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16896              		.loc 1 6008 16 is_stmt 0 view .LVU4633
 16897 0018 0DF10700 		add	r0, sp, #7
 16898              	.LVL2070:
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16899              		.loc 1 6008 16 view .LVU4634
 16900 001c FFF7FEFF 		bl	bno055_get_euler_unit
 16901              	.LVL2071:
 16902 0020 0446     		mov	r4, r0
 16903              	.LVL2072:
6009:Core/Src/bno055.c ****     {
 16904              		.loc 1 6009 5 is_stmt 1 view .LVU4635
6009:Core/Src/bno055.c ****     {
 16905              		.loc 1 6009 23 is_stmt 0 view .LVU4636
 16906 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6009:Core/Src/bno055.c ****     {
 16907              		.loc 1 6009 8 view .LVU4637
 16908 0026 43BB     		cbnz	r3, .L1215
 16909              	.L1210:
6013:Core/Src/bno055.c ****     {
 16910              		.loc 1 6013 5 is_stmt 1 view .LVU4638
6013:Core/Src/bno055.c ****     {
 16911              		.loc 1 6013 8 is_stmt 0 view .LVU4639
 16912 0028 74BB     		cbnz	r4, .L1212
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16913              		.loc 1 6016 9 is_stmt 1 view .LVU4640
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16914              		.loc 1 6016 21 is_stmt 0 view .LVU4641
 16915 002a 02A8     		add	r0, sp, #8
 16916 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 16917              	.LVL2073:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16918              		.loc 1 6016 18 view .LVU4642
 16919 0030 54FA80F4 		uxtab	r4, r4, r0
 16920              	.LVL2074:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16921              		.loc 1 6016 18 view .LVU4643
 16922 0034 64B2     		sxtb	r4, r4
 16923              	.LVL2075:
6017:Core/Src/bno055.c ****         {
 16924              		.loc 1 6017 9 is_stmt 1 view .LVU4644
6017:Core/Src/bno055.c ****         {
 16925              		.loc 1 6017 12 is_stmt 0 view .LVU4645
 16926 0036 54BB     		cbnz	r4, .L1213
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16927              		.loc 1 6020 13 is_stmt 1 view .LVU4646
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16928              		.loc 1 6020 28 is_stmt 0 view .LVU4647
 16929 0038 BDF90800 		ldrsh	r0, [sp, #8]
 16930 003c FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cc9kYR4Z.s 			page 487


 16931              	.LVL2076:
 16932 0040 0022     		movs	r2, #0
 16933 0042 144B     		ldr	r3, .L1216
 16934 0044 FFF7FEFF 		bl	__aeabi_dmul
 16935              	.LVL2077:
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16936              		.loc 1 6020 26 view .LVU4648
 16937 0048 C5E90001 		strd	r0, [r5]
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16938              		.loc 1 6021 13 is_stmt 1 view .LVU4649
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16939              		.loc 1 6021 28 is_stmt 0 view .LVU4650
 16940 004c BDF90C00 		ldrsh	r0, [sp, #12]
 16941 0050 FFF7FEFF 		bl	__aeabi_i2d
 16942              	.LVL2078:
 16943 0054 0022     		movs	r2, #0
 16944 0056 0F4B     		ldr	r3, .L1216
 16945 0058 FFF7FEFF 		bl	__aeabi_dmul
 16946              	.LVL2079:
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16947              		.loc 1 6021 26 view .LVU4651
 16948 005c C5E90401 		strd	r0, [r5, #16]
6022:Core/Src/bno055.c ****         }
 16949              		.loc 1 6022 13 is_stmt 1 view .LVU4652
6022:Core/Src/bno055.c ****         }
 16950              		.loc 1 6022 28 is_stmt 0 view .LVU4653
 16951 0060 BDF90A00 		ldrsh	r0, [sp, #10]
 16952 0064 FFF7FEFF 		bl	__aeabi_i2d
 16953              	.LVL2080:
 16954 0068 0022     		movs	r2, #0
 16955 006a 0A4B     		ldr	r3, .L1216
 16956 006c FFF7FEFF 		bl	__aeabi_dmul
 16957              	.LVL2081:
6022:Core/Src/bno055.c ****         }
 16958              		.loc 1 6022 26 view .LVU4654
 16959 0070 C5E90201 		strd	r0, [r5, #8]
 16960              	.LVL2082:
 16961              	.L1211:
6034:Core/Src/bno055.c **** }
 16962              		.loc 1 6034 5 is_stmt 1 view .LVU4655
6035:Core/Src/bno055.c **** 
 16963              		.loc 1 6035 1 is_stmt 0 view .LVU4656
 16964 0074 2046     		mov	r0, r4
 16965 0076 05B0     		add	sp, sp, #20
 16966              	.LCFI547:
 16967              		.cfi_remember_state
 16968              		.cfi_def_cfa_offset 12
 16969              		@ sp needed
 16970 0078 30BD     		pop	{r4, r5, pc}
 16971              	.LVL2083:
 16972              	.L1215:
 16973              	.LCFI548:
 16974              		.cfi_restore_state
6011:Core/Src/bno055.c ****     }
 16975              		.loc 1 6011 9 is_stmt 1 view .LVU4657
6011:Core/Src/bno055.c ****     }
 16976              		.loc 1 6011 21 is_stmt 0 view .LVU4658
ARM GAS  /tmp/cc9kYR4Z.s 			page 488


 16977 007a 0020     		movs	r0, #0
 16978 007c FFF7FEFF 		bl	bno055_set_euler_unit
 16979              	.LVL2084:
6011:Core/Src/bno055.c ****     }
 16980              		.loc 1 6011 18 view .LVU4659
 16981 0080 54FA80F4 		uxtab	r4, r4, r0
 16982              	.LVL2085:
6011:Core/Src/bno055.c ****     }
 16983              		.loc 1 6011 18 view .LVU4660
 16984 0084 64B2     		sxtb	r4, r4
 16985              	.LVL2086:
6011:Core/Src/bno055.c ****     }
 16986              		.loc 1 6011 18 view .LVU4661
 16987 0086 CFE7     		b	.L1210
 16988              	.L1212:
6031:Core/Src/bno055.c ****     }
 16989              		.loc 1 6031 18 view .LVU4662
 16990 0088 4FF0FF34 		mov	r4, #-1
 16991              	.LVL2087:
6031:Core/Src/bno055.c ****     }
 16992              		.loc 1 6031 18 view .LVU4663
 16993 008c F2E7     		b	.L1211
 16994              	.LVL2088:
 16995              	.L1213:
6026:Core/Src/bno055.c ****         }
 16996              		.loc 1 6026 22 view .LVU4664
 16997 008e 4FF0FF34 		mov	r4, #-1
 16998              	.LVL2089:
6026:Core/Src/bno055.c ****         }
 16999              		.loc 1 6026 22 view .LVU4665
 17000 0092 EFE7     		b	.L1211
 17001              	.L1217:
 17002              		.align	2
 17003              	.L1216:
 17004 0094 0000B03F 		.word	1068498944
 17005              		.cfi_endproc
 17006              	.LFE105:
 17008              		.section	.text.bno055_convert_double_euler_hpr_rad,"ax",%progbits
 17009              		.align	1
 17010              		.global	bno055_convert_double_euler_hpr_rad
 17011              		.syntax unified
 17012              		.thumb
 17013              		.thumb_func
 17015              	bno055_convert_double_euler_hpr_rad:
 17016              	.LVL2090:
 17017              	.LFB106:
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 17018              		.loc 1 6056 1 is_stmt 1 view -0
 17019              		.cfi_startproc
 17020              		@ args = 0, pretend = 0, frame = 16
 17021              		@ frame_needed = 0, uses_anonymous_args = 0
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 17022              		.loc 1 6056 1 is_stmt 0 view .LVU4667
 17023 0000 30B5     		push	{r4, r5, lr}
 17024              	.LCFI549:
 17025              		.cfi_def_cfa_offset 12
 17026              		.cfi_offset 4, -12
ARM GAS  /tmp/cc9kYR4Z.s 			page 489


 17027              		.cfi_offset 5, -8
 17028              		.cfi_offset 14, -4
 17029 0002 85B0     		sub	sp, sp, #20
 17030              	.LCFI550:
 17031              		.cfi_def_cfa_offset 32
 17032 0004 0446     		mov	r4, r0
6059:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 17033              		.loc 1 6059 5 is_stmt 1 view .LVU4668
 17034              	.LVL2091:
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17035              		.loc 1 6060 5 view .LVU4669
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17036              		.loc 1 6060 27 is_stmt 0 view .LVU4670
 17037 0006 0023     		movs	r3, #0
 17038 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 17039 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 17040 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6061:Core/Src/bno055.c **** 
 17041              		.loc 1 6061 5 is_stmt 1 view .LVU4671
6061:Core/Src/bno055.c **** 
 17042              		.loc 1 6061 8 is_stmt 0 view .LVU4672
 17043 0014 8DF80730 		strb	r3, [sp, #7]
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17044              		.loc 1 6065 5 is_stmt 1 view .LVU4673
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17045              		.loc 1 6065 16 is_stmt 0 view .LVU4674
 17046 0018 0DF10700 		add	r0, sp, #7
 17047              	.LVL2092:
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17048              		.loc 1 6065 16 view .LVU4675
 17049 001c FFF7FEFF 		bl	bno055_get_euler_unit
 17050              	.LVL2093:
6066:Core/Src/bno055.c ****     {
 17051              		.loc 1 6066 5 is_stmt 1 view .LVU4676
6066:Core/Src/bno055.c ****     {
 17052              		.loc 1 6066 23 is_stmt 0 view .LVU4677
 17053 0020 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6066:Core/Src/bno055.c ****     {
 17054              		.loc 1 6066 8 view .LVU4678
 17055 0024 012B     		cmp	r3, #1
 17056 0026 26D1     		bne	.L1224
 17057              	.L1219:
6070:Core/Src/bno055.c ****     {
 17058              		.loc 1 6070 5 is_stmt 1 view .LVU4679
6070:Core/Src/bno055.c ****     {
 17059              		.loc 1 6070 8 is_stmt 0 view .LVU4680
 17060 0028 48BB     		cbnz	r0, .L1221
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17061              		.loc 1 6073 9 is_stmt 1 view .LVU4681
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17062              		.loc 1 6073 20 is_stmt 0 view .LVU4682
 17063 002a 02A8     		add	r0, sp, #8
 17064              	.LVL2094:
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17065              		.loc 1 6073 20 view .LVU4683
 17066 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 17067              	.LVL2095:
ARM GAS  /tmp/cc9kYR4Z.s 			page 490


6074:Core/Src/bno055.c ****         {
 17068              		.loc 1 6074 9 is_stmt 1 view .LVU4684
6074:Core/Src/bno055.c ****         {
 17069              		.loc 1 6074 12 is_stmt 0 view .LVU4685
 17070 0030 0546     		mov	r5, r0
 17071 0032 38BB     		cbnz	r0, .L1222
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17072              		.loc 1 6077 13 is_stmt 1 view .LVU4686
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17073              		.loc 1 6077 28 is_stmt 0 view .LVU4687
 17074 0034 BDF90800 		ldrsh	r0, [sp, #8]
 17075              	.LVL2096:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17076              		.loc 1 6077 28 view .LVU4688
 17077 0038 FFF7FEFF 		bl	__aeabi_i2d
 17078              	.LVL2097:
 17079 003c 0022     		movs	r2, #0
 17080 003e 134B     		ldr	r3, .L1225
 17081 0040 FFF7FEFF 		bl	__aeabi_ddiv
 17082              	.LVL2098:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17083              		.loc 1 6077 26 view .LVU4689
 17084 0044 C4E90001 		strd	r0, [r4]
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17085              		.loc 1 6078 13 is_stmt 1 view .LVU4690
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17086              		.loc 1 6078 28 is_stmt 0 view .LVU4691
 17087 0048 BDF90C00 		ldrsh	r0, [sp, #12]
 17088 004c FFF7FEFF 		bl	__aeabi_i2d
 17089              	.LVL2099:
 17090 0050 0022     		movs	r2, #0
 17091 0052 0E4B     		ldr	r3, .L1225
 17092 0054 FFF7FEFF 		bl	__aeabi_ddiv
 17093              	.LVL2100:
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17094              		.loc 1 6078 26 view .LVU4692
 17095 0058 C4E90401 		strd	r0, [r4, #16]
6079:Core/Src/bno055.c ****         }
 17096              		.loc 1 6079 13 is_stmt 1 view .LVU4693
6079:Core/Src/bno055.c ****         }
 17097              		.loc 1 6079 28 is_stmt 0 view .LVU4694
 17098 005c BDF90A00 		ldrsh	r0, [sp, #10]
 17099 0060 FFF7FEFF 		bl	__aeabi_i2d
 17100              	.LVL2101:
 17101 0064 0022     		movs	r2, #0
 17102 0066 094B     		ldr	r3, .L1225
 17103 0068 FFF7FEFF 		bl	__aeabi_ddiv
 17104              	.LVL2102:
6079:Core/Src/bno055.c ****         }
 17105              		.loc 1 6079 26 view .LVU4695
 17106 006c C4E90201 		strd	r0, [r4, #8]
 17107              	.L1220:
 17108              	.LVL2103:
6091:Core/Src/bno055.c **** }
 17109              		.loc 1 6091 5 is_stmt 1 view .LVU4696
6092:Core/Src/bno055.c **** 
 17110              		.loc 1 6092 1 is_stmt 0 view .LVU4697
ARM GAS  /tmp/cc9kYR4Z.s 			page 491


 17111 0070 2846     		mov	r0, r5
 17112 0072 05B0     		add	sp, sp, #20
 17113              	.LCFI551:
 17114              		.cfi_remember_state
 17115              		.cfi_def_cfa_offset 12
 17116              		@ sp needed
 17117 0074 30BD     		pop	{r4, r5, pc}
 17118              	.LVL2104:
 17119              	.L1224:
 17120              	.LCFI552:
 17121              		.cfi_restore_state
6068:Core/Src/bno055.c ****     }
 17122              		.loc 1 6068 9 is_stmt 1 view .LVU4698
6068:Core/Src/bno055.c ****     }
 17123              		.loc 1 6068 20 is_stmt 0 view .LVU4699
 17124 0076 0120     		movs	r0, #1
 17125              	.LVL2105:
6068:Core/Src/bno055.c ****     }
 17126              		.loc 1 6068 20 view .LVU4700
 17127 0078 FFF7FEFF 		bl	bno055_set_euler_unit
 17128              	.LVL2106:
6068:Core/Src/bno055.c ****     }
 17129              		.loc 1 6068 20 view .LVU4701
 17130 007c D4E7     		b	.L1219
 17131              	.L1221:
6088:Core/Src/bno055.c ****     }
 17132              		.loc 1 6088 18 view .LVU4702
 17133 007e 4FF0FF35 		mov	r5, #-1
 17134 0082 F5E7     		b	.L1220
 17135              	.L1222:
6083:Core/Src/bno055.c ****         }
 17136              		.loc 1 6083 22 view .LVU4703
 17137 0084 4FF0FF35 		mov	r5, #-1
 17138 0088 F2E7     		b	.L1220
 17139              	.L1226:
 17140 008a 00BF     		.align	2
 17141              	.L1225:
 17142 008c 00208C40 		.word	1082925056
 17143              		.cfi_endproc
 17144              	.LFE106:
 17146              		.section	.text.bno055_set_tilt_unit,"ax",%progbits
 17147              		.align	1
 17148              		.global	bno055_set_tilt_unit
 17149              		.syntax unified
 17150              		.thumb
 17151              		.thumb_func
 17153              	bno055_set_tilt_unit:
 17154              	.LVL2107:
 17155              	.LFB140:
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17156              		.loc 1 7868 1 is_stmt 1 view -0
 17157              		.cfi_startproc
 17158              		@ args = 0, pretend = 0, frame = 8
 17159              		@ frame_needed = 0, uses_anonymous_args = 0
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17160              		.loc 1 7868 1 is_stmt 0 view .LVU4705
 17161 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 492


 17162              	.LCFI553:
 17163              		.cfi_def_cfa_offset 12
 17164              		.cfi_offset 4, -12
 17165              		.cfi_offset 5, -8
 17166              		.cfi_offset 14, -4
 17167 0002 83B0     		sub	sp, sp, #12
 17168              	.LCFI554:
 17169              		.cfi_def_cfa_offset 24
7869:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17170              		.loc 1 7869 5 is_stmt 1 view .LVU4706
 17171              	.LVL2108:
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17172              		.loc 1 7870 5 view .LVU4707
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17173              		.loc 1 7870 8 is_stmt 0 view .LVU4708
 17174 0004 0023     		movs	r3, #0
 17175 0006 8DF80730 		strb	r3, [sp, #7]
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17176              		.loc 1 7871 5 is_stmt 1 view .LVU4709
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17177              		.loc 1 7871 8 is_stmt 0 view .LVU4710
 17178 000a 8DF80630 		strb	r3, [sp, #6]
7872:Core/Src/bno055.c **** 
 17179              		.loc 1 7872 5 is_stmt 1 view .LVU4711
 17180              	.LVL2109:
7875:Core/Src/bno055.c ****     {
 17181              		.loc 1 7875 5 view .LVU4712
7875:Core/Src/bno055.c ****     {
 17182              		.loc 1 7875 18 is_stmt 0 view .LVU4713
 17183 000e 264B     		ldr	r3, .L1237
 17184 0010 1B68     		ldr	r3, [r3]
7875:Core/Src/bno055.c ****     {
 17185              		.loc 1 7875 8 view .LVU4714
 17186 0012 002B     		cmp	r3, #0
 17187 0014 44D0     		beq	.L1231
 17188 0016 0546     		mov	r5, r0
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17189              		.loc 1 7884 9 is_stmt 1 view .LVU4715
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17190              		.loc 1 7884 19 is_stmt 0 view .LVU4716
 17191 0018 0DF10600 		add	r0, sp, #6
 17192              	.LVL2110:
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17193              		.loc 1 7884 19 view .LVU4717
 17194 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17195              	.LVL2111:
7885:Core/Src/bno055.c ****         {
 17196              		.loc 1 7885 9 is_stmt 1 view .LVU4718
7885:Core/Src/bno055.c ****         {
 17197              		.loc 1 7885 12 is_stmt 0 view .LVU4719
 17198 0020 0446     		mov	r4, r0
 17199 0022 60BB     		cbnz	r0, .L1232
7887:Core/Src/bno055.c ****             {
 17200              		.loc 1 7887 13 is_stmt 1 view .LVU4720
7887:Core/Src/bno055.c ****             {
 17201              		.loc 1 7887 32 is_stmt 0 view .LVU4721
 17202 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 493


7887:Core/Src/bno055.c ****             {
 17203              		.loc 1 7887 16 view .LVU4722
 17204 0028 1BBB     		cbnz	r3, .L1235
 17205              	.LVL2112:
 17206              	.L1230:
7891:Core/Src/bno055.c ****             {
 17207              		.loc 1 7891 13 is_stmt 1 view .LVU4723
7891:Core/Src/bno055.c ****             {
 17208              		.loc 1 7891 16 is_stmt 0 view .LVU4724
 17209 002a 84BB     		cbnz	r4, .L1233
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17210              		.loc 1 7893 17 is_stmt 1 view .LVU4725
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17211              		.loc 1 7893 36 is_stmt 0 view .LVU4726
 17212 002c 1E4B     		ldr	r3, .L1237
 17213 002e 1868     		ldr	r0, [r3]
 17214 0030 0469     		ldr	r4, [r0, #16]
 17215              	.LVL2113:
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17216              		.loc 1 7893 28 view .LVU4727
 17217 0032 0123     		movs	r3, #1
 17218 0034 0DF10702 		add	r2, sp, #7
 17219 0038 3B21     		movs	r1, #59
 17220 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17221 003c A047     		blx	r4
 17222              	.LVL2114:
7897:Core/Src/bno055.c ****                 {
 17223              		.loc 1 7897 17 is_stmt 1 view .LVU4728
7897:Core/Src/bno055.c ****                 {
 17224              		.loc 1 7897 20 is_stmt 0 view .LVU4729
 17225 003e 0446     		mov	r4, r0
 17226 0040 F8B9     		cbnz	r0, .L1229
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17227              		.loc 1 7899 21 is_stmt 1 view .LVU4730
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17228              		.loc 1 7899 32 is_stmt 0 view .LVU4731
 17229 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 17230 0046 23F00803 		bic	r3, r3, #8
 17231 004a 5BB2     		sxtb	r3, r3
 17232 004c E800     		lsls	r0, r5, #3
 17233              	.LVL2115:
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17234              		.loc 1 7899 32 view .LVU4732
 17235 004e 00F00800 		and	r0, r0, #8
 17236 0052 0343     		orrs	r3, r3, r0
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17237              		.loc 1 7899 30 view .LVU4733
 17238 0054 8DF80730 		strb	r3, [sp, #7]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17239              		.loc 1 7900 21 is_stmt 1 view .LVU4734
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17240              		.loc 1 7900 41 is_stmt 0 view .LVU4735
 17241 0058 134B     		ldr	r3, .L1237
 17242 005a 1868     		ldr	r0, [r3]
 17243 005c C568     		ldr	r5, [r0, #12]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17244              		.loc 1 7900 33 view .LVU4736
ARM GAS  /tmp/cc9kYR4Z.s 			page 494


 17245 005e 0123     		movs	r3, #1
 17246 0060 0DF10702 		add	r2, sp, #7
 17247 0064 3B21     		movs	r1, #59
 17248 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17249 0068 A847     		blx	r5
 17250              	.LVL2116:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17251              		.loc 1 7900 30 view .LVU4737
 17252 006a 54FA80F0 		uxtab	r0, r4, r0
 17253 006e 44B2     		sxtb	r4, r0
 17254              	.LVL2117:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17255              		.loc 1 7900 30 view .LVU4738
 17256 0070 07E0     		b	.L1229
 17257              	.LVL2118:
 17258              	.L1235:
7889:Core/Src/bno055.c ****             }
 17259              		.loc 1 7889 17 is_stmt 1 view .LVU4739
7889:Core/Src/bno055.c ****             }
 17260              		.loc 1 7889 28 is_stmt 0 view .LVU4740
 17261 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 17262              	.LVL2119:
7889:Core/Src/bno055.c ****             }
 17263              		.loc 1 7889 25 view .LVU4741
 17264 0076 54FA80F4 		uxtab	r4, r4, r0
 17265 007a 64B2     		sxtb	r4, r4
 17266              	.LVL2120:
7889:Core/Src/bno055.c ****             }
 17267              		.loc 1 7889 25 view .LVU4742
 17268 007c D5E7     		b	.L1230
 17269              	.LVL2121:
 17270              	.L1232:
7913:Core/Src/bno055.c ****         }
 17271              		.loc 1 7913 22 view .LVU4743
 17272 007e 4FF0FF34 		mov	r4, #-1
 17273              	.LVL2122:
 17274              	.L1229:
7916:Core/Src/bno055.c ****     {
 17275              		.loc 1 7916 5 is_stmt 1 view .LVU4744
7916:Core/Src/bno055.c ****     {
 17276              		.loc 1 7916 24 is_stmt 0 view .LVU4745
 17277 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7916:Core/Src/bno055.c ****     {
 17278              		.loc 1 7916 8 view .LVU4746
 17279 0086 28B9     		cbnz	r0, .L1236
 17280              	.LVL2123:
 17281              	.L1228:
7924:Core/Src/bno055.c **** 
 17282              		.loc 1 7924 1 view .LVU4747
 17283 0088 2046     		mov	r0, r4
 17284 008a 03B0     		add	sp, sp, #12
 17285              	.LCFI555:
 17286              		.cfi_remember_state
 17287              		.cfi_def_cfa_offset 12
 17288              		@ sp needed
 17289 008c 30BD     		pop	{r4, r5, pc}
 17290              	.LVL2124:
ARM GAS  /tmp/cc9kYR4Z.s 			page 495


 17291              	.L1233:
 17292              	.LCFI556:
 17293              		.cfi_restore_state
7908:Core/Src/bno055.c ****             }
 17294              		.loc 1 7908 26 view .LVU4748
 17295 008e 4FF0FF34 		mov	r4, #-1
 17296              	.LVL2125:
7908:Core/Src/bno055.c ****             }
 17297              		.loc 1 7908 26 view .LVU4749
 17298 0092 F6E7     		b	.L1229
 17299              	.LVL2126:
 17300              	.L1236:
7920:Core/Src/bno055.c ****     }
 17301              		.loc 1 7920 9 is_stmt 1 view .LVU4750
7920:Core/Src/bno055.c ****     }
 17302              		.loc 1 7920 21 is_stmt 0 view .LVU4751
 17303 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 17304              	.LVL2127:
7920:Core/Src/bno055.c ****     }
 17305              		.loc 1 7920 18 view .LVU4752
 17306 0098 54FA80F0 		uxtab	r0, r4, r0
 17307 009c 44B2     		sxtb	r4, r0
 17308              	.LVL2128:
7920:Core/Src/bno055.c ****     }
 17309              		.loc 1 7920 18 view .LVU4753
 17310 009e F3E7     		b	.L1228
 17311              	.LVL2129:
 17312              	.L1231:
7877:Core/Src/bno055.c ****     }
 17313              		.loc 1 7877 16 view .LVU4754
 17314 00a0 6FF07E04 		mvn	r4, #126
 17315 00a4 F0E7     		b	.L1228
 17316              	.L1238:
 17317 00a6 00BF     		.align	2
 17318              	.L1237:
 17319 00a8 00000000 		.word	.LANCHOR0
 17320              		.cfi_endproc
 17321              	.LFE140:
 17323              		.section	.text.bno055_set_temp_unit,"ax",%progbits
 17324              		.align	1
 17325              		.global	bno055_set_temp_unit
 17326              		.syntax unified
 17327              		.thumb
 17328              		.thumb_func
 17330              	bno055_set_temp_unit:
 17331              	.LVL2130:
 17332              	.LFB142:
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17333              		.loc 1 8000 1 is_stmt 1 view -0
 17334              		.cfi_startproc
 17335              		@ args = 0, pretend = 0, frame = 8
 17336              		@ frame_needed = 0, uses_anonymous_args = 0
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17337              		.loc 1 8000 1 is_stmt 0 view .LVU4756
 17338 0000 30B5     		push	{r4, r5, lr}
 17339              	.LCFI557:
 17340              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 496


 17341              		.cfi_offset 4, -12
 17342              		.cfi_offset 5, -8
 17343              		.cfi_offset 14, -4
 17344 0002 83B0     		sub	sp, sp, #12
 17345              	.LCFI558:
 17346              		.cfi_def_cfa_offset 24
8001:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17347              		.loc 1 8001 5 is_stmt 1 view .LVU4757
 17348              	.LVL2131:
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17349              		.loc 1 8002 5 view .LVU4758
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17350              		.loc 1 8002 8 is_stmt 0 view .LVU4759
 17351 0004 0023     		movs	r3, #0
 17352 0006 8DF80730 		strb	r3, [sp, #7]
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17353              		.loc 1 8003 5 is_stmt 1 view .LVU4760
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17354              		.loc 1 8003 8 is_stmt 0 view .LVU4761
 17355 000a 8DF80630 		strb	r3, [sp, #6]
8004:Core/Src/bno055.c **** 
 17356              		.loc 1 8004 5 is_stmt 1 view .LVU4762
 17357              	.LVL2132:
8007:Core/Src/bno055.c ****     {
 17358              		.loc 1 8007 5 view .LVU4763
8007:Core/Src/bno055.c ****     {
 17359              		.loc 1 8007 18 is_stmt 0 view .LVU4764
 17360 000e 264B     		ldr	r3, .L1249
 17361 0010 1B68     		ldr	r3, [r3]
8007:Core/Src/bno055.c ****     {
 17362              		.loc 1 8007 8 view .LVU4765
 17363 0012 002B     		cmp	r3, #0
 17364 0014 44D0     		beq	.L1243
 17365 0016 0546     		mov	r5, r0
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17366              		.loc 1 8016 9 is_stmt 1 view .LVU4766
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17367              		.loc 1 8016 19 is_stmt 0 view .LVU4767
 17368 0018 0DF10600 		add	r0, sp, #6
 17369              	.LVL2133:
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17370              		.loc 1 8016 19 view .LVU4768
 17371 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17372              	.LVL2134:
8017:Core/Src/bno055.c ****         {
 17373              		.loc 1 8017 9 is_stmt 1 view .LVU4769
8017:Core/Src/bno055.c ****         {
 17374              		.loc 1 8017 12 is_stmt 0 view .LVU4770
 17375 0020 0446     		mov	r4, r0
 17376 0022 60BB     		cbnz	r0, .L1244
8019:Core/Src/bno055.c ****             {
 17377              		.loc 1 8019 13 is_stmt 1 view .LVU4771
8019:Core/Src/bno055.c ****             {
 17378              		.loc 1 8019 32 is_stmt 0 view .LVU4772
 17379 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8019:Core/Src/bno055.c ****             {
 17380              		.loc 1 8019 16 view .LVU4773
ARM GAS  /tmp/cc9kYR4Z.s 			page 497


 17381 0028 1BBB     		cbnz	r3, .L1247
 17382              	.LVL2135:
 17383              	.L1242:
8023:Core/Src/bno055.c ****             {
 17384              		.loc 1 8023 13 is_stmt 1 view .LVU4774
8023:Core/Src/bno055.c ****             {
 17385              		.loc 1 8023 16 is_stmt 0 view .LVU4775
 17386 002a 84BB     		cbnz	r4, .L1245
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17387              		.loc 1 8026 17 is_stmt 1 view .LVU4776
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17388              		.loc 1 8026 36 is_stmt 0 view .LVU4777
 17389 002c 1E4B     		ldr	r3, .L1249
 17390 002e 1868     		ldr	r0, [r3]
 17391 0030 0469     		ldr	r4, [r0, #16]
 17392              	.LVL2136:
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17393              		.loc 1 8026 28 view .LVU4778
 17394 0032 0123     		movs	r3, #1
 17395 0034 0DF10702 		add	r2, sp, #7
 17396 0038 3B21     		movs	r1, #59
 17397 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17398 003c A047     		blx	r4
 17399              	.LVL2137:
8030:Core/Src/bno055.c ****                 {
 17400              		.loc 1 8030 17 is_stmt 1 view .LVU4779
8030:Core/Src/bno055.c ****                 {
 17401              		.loc 1 8030 20 is_stmt 0 view .LVU4780
 17402 003e 0446     		mov	r4, r0
 17403 0040 F8B9     		cbnz	r0, .L1241
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17404              		.loc 1 8032 21 is_stmt 1 view .LVU4781
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17405              		.loc 1 8032 32 is_stmt 0 view .LVU4782
 17406 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 17407 0046 23F01003 		bic	r3, r3, #16
 17408 004a 5BB2     		sxtb	r3, r3
 17409 004c 2801     		lsls	r0, r5, #4
 17410              	.LVL2138:
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17411              		.loc 1 8032 32 view .LVU4783
 17412 004e 00F01000 		and	r0, r0, #16
 17413 0052 0343     		orrs	r3, r3, r0
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17414              		.loc 1 8032 30 view .LVU4784
 17415 0054 8DF80730 		strb	r3, [sp, #7]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17416              		.loc 1 8033 21 is_stmt 1 view .LVU4785
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17417              		.loc 1 8033 41 is_stmt 0 view .LVU4786
 17418 0058 134B     		ldr	r3, .L1249
 17419 005a 1868     		ldr	r0, [r3]
 17420 005c C568     		ldr	r5, [r0, #12]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17421              		.loc 1 8033 33 view .LVU4787
 17422 005e 0123     		movs	r3, #1
 17423 0060 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/cc9kYR4Z.s 			page 498


 17424 0064 3B21     		movs	r1, #59
 17425 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17426 0068 A847     		blx	r5
 17427              	.LVL2139:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17428              		.loc 1 8033 30 view .LVU4788
 17429 006a 54FA80F0 		uxtab	r0, r4, r0
 17430 006e 44B2     		sxtb	r4, r0
 17431              	.LVL2140:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17432              		.loc 1 8033 30 view .LVU4789
 17433 0070 07E0     		b	.L1241
 17434              	.LVL2141:
 17435              	.L1247:
8021:Core/Src/bno055.c ****             }
 17436              		.loc 1 8021 17 is_stmt 1 view .LVU4790
8021:Core/Src/bno055.c ****             }
 17437              		.loc 1 8021 28 is_stmt 0 view .LVU4791
 17438 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 17439              	.LVL2142:
8021:Core/Src/bno055.c ****             }
 17440              		.loc 1 8021 25 view .LVU4792
 17441 0076 54FA80F4 		uxtab	r4, r4, r0
 17442 007a 64B2     		sxtb	r4, r4
 17443              	.LVL2143:
8021:Core/Src/bno055.c ****             }
 17444              		.loc 1 8021 25 view .LVU4793
 17445 007c D5E7     		b	.L1242
 17446              	.LVL2144:
 17447              	.L1244:
8046:Core/Src/bno055.c ****         }
 17448              		.loc 1 8046 22 view .LVU4794
 17449 007e 4FF0FF34 		mov	r4, #-1
 17450              	.LVL2145:
 17451              	.L1241:
8049:Core/Src/bno055.c ****     {
 17452              		.loc 1 8049 5 is_stmt 1 view .LVU4795
8049:Core/Src/bno055.c ****     {
 17453              		.loc 1 8049 24 is_stmt 0 view .LVU4796
 17454 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8049:Core/Src/bno055.c ****     {
 17455              		.loc 1 8049 8 view .LVU4797
 17456 0086 28B9     		cbnz	r0, .L1248
 17457              	.LVL2146:
 17458              	.L1240:
8057:Core/Src/bno055.c **** 
 17459              		.loc 1 8057 1 view .LVU4798
 17460 0088 2046     		mov	r0, r4
 17461 008a 03B0     		add	sp, sp, #12
 17462              	.LCFI559:
 17463              		.cfi_remember_state
 17464              		.cfi_def_cfa_offset 12
 17465              		@ sp needed
 17466 008c 30BD     		pop	{r4, r5, pc}
 17467              	.LVL2147:
 17468              	.L1245:
 17469              	.LCFI560:
ARM GAS  /tmp/cc9kYR4Z.s 			page 499


 17470              		.cfi_restore_state
8041:Core/Src/bno055.c ****             }
 17471              		.loc 1 8041 26 view .LVU4799
 17472 008e 4FF0FF34 		mov	r4, #-1
 17473              	.LVL2148:
8041:Core/Src/bno055.c ****             }
 17474              		.loc 1 8041 26 view .LVU4800
 17475 0092 F6E7     		b	.L1241
 17476              	.LVL2149:
 17477              	.L1248:
8053:Core/Src/bno055.c ****     }
 17478              		.loc 1 8053 9 is_stmt 1 view .LVU4801
8053:Core/Src/bno055.c ****     }
 17479              		.loc 1 8053 21 is_stmt 0 view .LVU4802
 17480 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 17481              	.LVL2150:
8053:Core/Src/bno055.c ****     }
 17482              		.loc 1 8053 18 view .LVU4803
 17483 0098 54FA80F0 		uxtab	r0, r4, r0
 17484 009c 44B2     		sxtb	r4, r0
 17485              	.LVL2151:
8053:Core/Src/bno055.c ****     }
 17486              		.loc 1 8053 18 view .LVU4804
 17487 009e F3E7     		b	.L1240
 17488              	.LVL2152:
 17489              	.L1243:
8009:Core/Src/bno055.c ****     }
 17490              		.loc 1 8009 16 view .LVU4805
 17491 00a0 6FF07E04 		mvn	r4, #126
 17492 00a4 F0E7     		b	.L1240
 17493              	.L1250:
 17494 00a6 00BF     		.align	2
 17495              	.L1249:
 17496 00a8 00000000 		.word	.LANCHOR0
 17497              		.cfi_endproc
 17498              	.LFE142:
 17500              		.global	__aeabi_dadd
 17501              		.section	.text.bno055_convert_float_temp_fahrenheit,"ax",%progbits
 17502              		.align	1
 17503              		.global	bno055_convert_float_temp_fahrenheit
 17504              		.syntax unified
 17505              		.thumb
 17506              		.thumb_func
 17508              	bno055_convert_float_temp_fahrenheit:
 17509              	.LVL2153:
 17510              	.LFB77:
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 17511              		.loc 1 4573 1 is_stmt 1 view -0
 17512              		.cfi_startproc
 17513              		@ args = 0, pretend = 0, frame = 8
 17514              		@ frame_needed = 0, uses_anonymous_args = 0
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 17515              		.loc 1 4573 1 is_stmt 0 view .LVU4807
 17516 0000 30B5     		push	{r4, r5, lr}
 17517              	.LCFI561:
 17518              		.cfi_def_cfa_offset 12
 17519              		.cfi_offset 4, -12
ARM GAS  /tmp/cc9kYR4Z.s 			page 500


 17520              		.cfi_offset 5, -8
 17521              		.cfi_offset 14, -4
 17522 0002 83B0     		sub	sp, sp, #12
 17523              	.LCFI562:
 17524              		.cfi_def_cfa_offset 24
 17525 0004 0546     		mov	r5, r0
4576:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17526              		.loc 1 4576 5 is_stmt 1 view .LVU4808
 17527              	.LVL2154:
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17528              		.loc 1 4577 5 view .LVU4809
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17529              		.loc 1 4577 8 is_stmt 0 view .LVU4810
 17530 0006 0023     		movs	r3, #0
 17531 0008 8DF80730 		strb	r3, [sp, #7]
4578:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17532              		.loc 1 4578 5 is_stmt 1 view .LVU4811
 17533              	.LVL2155:
4579:Core/Src/bno055.c **** 
 17534              		.loc 1 4579 5 view .LVU4812
4579:Core/Src/bno055.c **** 
 17535              		.loc 1 4579 8 is_stmt 0 view .LVU4813
 17536 000c 8DF80630 		strb	r3, [sp, #6]
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17537              		.loc 1 4583 5 is_stmt 1 view .LVU4814
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17538              		.loc 1 4583 16 is_stmt 0 view .LVU4815
 17539 0010 0DF10600 		add	r0, sp, #6
 17540              	.LVL2156:
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17541              		.loc 1 4583 16 view .LVU4816
 17542 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17543              	.LVL2157:
 17544 0018 0446     		mov	r4, r0
 17545              	.LVL2158:
4584:Core/Src/bno055.c ****     {
 17546              		.loc 1 4584 5 is_stmt 1 view .LVU4817
4584:Core/Src/bno055.c ****     {
 17547              		.loc 1 4584 22 is_stmt 0 view .LVU4818
 17548 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4584:Core/Src/bno055.c ****     {
 17549              		.loc 1 4584 8 view .LVU4819
 17550 001e 012B     		cmp	r3, #1
 17551 0020 16D1     		bne	.L1257
 17552              	.L1252:
4588:Core/Src/bno055.c ****     {
 17553              		.loc 1 4588 5 is_stmt 1 view .LVU4820
4588:Core/Src/bno055.c ****     {
 17554              		.loc 1 4588 8 is_stmt 0 view .LVU4821
 17555 0022 E4B9     		cbnz	r4, .L1254
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17556              		.loc 1 4591 9 is_stmt 1 view .LVU4822
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17557              		.loc 1 4591 21 is_stmt 0 view .LVU4823
 17558 0024 0DF10700 		add	r0, sp, #7
 17559 0028 FFF7FEFF 		bl	bno055_read_temp_data
 17560              	.LVL2159:
ARM GAS  /tmp/cc9kYR4Z.s 			page 501


4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17561              		.loc 1 4591 18 view .LVU4824
 17562 002c 54FA80F4 		uxtab	r4, r4, r0
 17563              	.LVL2160:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17564              		.loc 1 4591 18 view .LVU4825
 17565 0030 64B2     		sxtb	r4, r4
 17566              	.LVL2161:
4592:Core/Src/bno055.c ****         {
 17567              		.loc 1 4592 9 is_stmt 1 view .LVU4826
4592:Core/Src/bno055.c ****         {
 17568              		.loc 1 4592 12 is_stmt 0 view .LVU4827
 17569 0032 BCB9     		cbnz	r4, .L1255
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17570              		.loc 1 4595 13 is_stmt 1 view .LVU4828
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17571              		.loc 1 4595 42 is_stmt 0 view .LVU4829
 17572 0034 9DF90700 		ldrsb	r0, [sp, #7]
 17573 0038 FFF7FEFF 		bl	__aeabi_i2d
 17574              	.LVL2162:
 17575 003c 0246     		mov	r2, r0
 17576 003e 0B46     		mov	r3, r1
 17577 0040 FFF7FEFF 		bl	__aeabi_dadd
 17578              	.LVL2163:
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17579              		.loc 1 4595 20 view .LVU4830
 17580 0044 FFF7FEFF 		bl	__aeabi_d2f
 17581              	.LVL2164:
4596:Core/Src/bno055.c ****         }
 17582              		.loc 1 4596 13 is_stmt 1 view .LVU4831
4596:Core/Src/bno055.c ****         }
 17583              		.loc 1 4596 21 is_stmt 0 view .LVU4832
 17584 0048 2860     		str	r0, [r5]	@ float
 17585              	.LVL2165:
 17586              	.L1253:
4608:Core/Src/bno055.c **** }
 17587              		.loc 1 4608 5 is_stmt 1 view .LVU4833
4609:Core/Src/bno055.c **** 
 17588              		.loc 1 4609 1 is_stmt 0 view .LVU4834
 17589 004a 2046     		mov	r0, r4
 17590 004c 03B0     		add	sp, sp, #12
 17591              	.LCFI563:
 17592              		.cfi_remember_state
 17593              		.cfi_def_cfa_offset 12
 17594              		@ sp needed
 17595 004e 30BD     		pop	{r4, r5, pc}
 17596              	.LVL2166:
 17597              	.L1257:
 17598              	.LCFI564:
 17599              		.cfi_restore_state
4586:Core/Src/bno055.c ****     }
 17600              		.loc 1 4586 9 is_stmt 1 view .LVU4835
4586:Core/Src/bno055.c ****     }
 17601              		.loc 1 4586 21 is_stmt 0 view .LVU4836
 17602 0050 0120     		movs	r0, #1
 17603 0052 FFF7FEFF 		bl	bno055_set_temp_unit
 17604              	.LVL2167:
ARM GAS  /tmp/cc9kYR4Z.s 			page 502


4586:Core/Src/bno055.c ****     }
 17605              		.loc 1 4586 18 view .LVU4837
 17606 0056 54FA80F4 		uxtab	r4, r4, r0
 17607              	.LVL2168:
4586:Core/Src/bno055.c ****     }
 17608              		.loc 1 4586 18 view .LVU4838
 17609 005a 64B2     		sxtb	r4, r4
 17610              	.LVL2169:
4586:Core/Src/bno055.c ****     }
 17611              		.loc 1 4586 18 view .LVU4839
 17612 005c E1E7     		b	.L1252
 17613              	.L1254:
4605:Core/Src/bno055.c ****     }
 17614              		.loc 1 4605 18 view .LVU4840
 17615 005e 4FF0FF34 		mov	r4, #-1
 17616              	.LVL2170:
4605:Core/Src/bno055.c ****     }
 17617              		.loc 1 4605 18 view .LVU4841
 17618 0062 F2E7     		b	.L1253
 17619              	.LVL2171:
 17620              	.L1255:
4600:Core/Src/bno055.c ****         }
 17621              		.loc 1 4600 22 view .LVU4842
 17622 0064 4FF0FF34 		mov	r4, #-1
 17623              	.LVL2172:
4600:Core/Src/bno055.c ****         }
 17624              		.loc 1 4600 22 view .LVU4843
 17625 0068 EFE7     		b	.L1253
 17626              		.cfi_endproc
 17627              	.LFE77:
 17629              		.section	.text.bno055_convert_float_temp_celsius,"ax",%progbits
 17630              		.align	1
 17631              		.global	bno055_convert_float_temp_celsius
 17632              		.syntax unified
 17633              		.thumb
 17634              		.thumb_func
 17636              	bno055_convert_float_temp_celsius:
 17637              	.LVL2173:
 17638              	.LFB78:
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17639              		.loc 1 4625 1 is_stmt 1 view -0
 17640              		.cfi_startproc
 17641              		@ args = 0, pretend = 0, frame = 8
 17642              		@ frame_needed = 0, uses_anonymous_args = 0
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17643              		.loc 1 4625 1 is_stmt 0 view .LVU4845
 17644 0000 30B5     		push	{r4, r5, lr}
 17645              	.LCFI565:
 17646              		.cfi_def_cfa_offset 12
 17647              		.cfi_offset 4, -12
 17648              		.cfi_offset 5, -8
 17649              		.cfi_offset 14, -4
 17650 0002 83B0     		sub	sp, sp, #12
 17651              	.LCFI566:
 17652              		.cfi_def_cfa_offset 24
 17653 0004 0546     		mov	r5, r0
4628:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 503


 17654              		.loc 1 4628 5 is_stmt 1 view .LVU4846
 17655              	.LVL2174:
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17656              		.loc 1 4629 5 view .LVU4847
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17657              		.loc 1 4629 8 is_stmt 0 view .LVU4848
 17658 0006 0023     		movs	r3, #0
 17659 0008 8DF80730 		strb	r3, [sp, #7]
4630:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17660              		.loc 1 4630 5 is_stmt 1 view .LVU4849
 17661              	.LVL2175:
4631:Core/Src/bno055.c **** 
 17662              		.loc 1 4631 5 view .LVU4850
4631:Core/Src/bno055.c **** 
 17663              		.loc 1 4631 8 is_stmt 0 view .LVU4851
 17664 000c 8DF80630 		strb	r3, [sp, #6]
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17665              		.loc 1 4635 5 is_stmt 1 view .LVU4852
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17666              		.loc 1 4635 16 is_stmt 0 view .LVU4853
 17667 0010 0DF10600 		add	r0, sp, #6
 17668              	.LVL2176:
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17669              		.loc 1 4635 16 view .LVU4854
 17670 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17671              	.LVL2177:
 17672 0018 0446     		mov	r4, r0
 17673              	.LVL2178:
4636:Core/Src/bno055.c ****     {
 17674              		.loc 1 4636 5 is_stmt 1 view .LVU4855
4636:Core/Src/bno055.c ****     {
 17675              		.loc 1 4636 22 is_stmt 0 view .LVU4856
 17676 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4636:Core/Src/bno055.c ****     {
 17677              		.loc 1 4636 8 view .LVU4857
 17678 001e 93B9     		cbnz	r3, .L1264
 17679              	.L1259:
4640:Core/Src/bno055.c ****     {
 17680              		.loc 1 4640 5 is_stmt 1 view .LVU4858
4640:Core/Src/bno055.c ****     {
 17681              		.loc 1 4640 8 is_stmt 0 view .LVU4859
 17682 0020 C4B9     		cbnz	r4, .L1261
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17683              		.loc 1 4643 9 is_stmt 1 view .LVU4860
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17684              		.loc 1 4643 21 is_stmt 0 view .LVU4861
 17685 0022 0DF10700 		add	r0, sp, #7
 17686 0026 FFF7FEFF 		bl	bno055_read_temp_data
 17687              	.LVL2179:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17688              		.loc 1 4643 18 view .LVU4862
 17689 002a 54FA80F4 		uxtab	r4, r4, r0
 17690              	.LVL2180:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17691              		.loc 1 4643 18 view .LVU4863
 17692 002e 64B2     		sxtb	r4, r4
 17693              	.LVL2181:
ARM GAS  /tmp/cc9kYR4Z.s 			page 504


4644:Core/Src/bno055.c ****         {
 17694              		.loc 1 4644 9 is_stmt 1 view .LVU4864
4644:Core/Src/bno055.c ****         {
 17695              		.loc 1 4644 12 is_stmt 0 view .LVU4865
 17696 0030 9CB9     		cbnz	r4, .L1262
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17697              		.loc 1 4647 13 is_stmt 1 view .LVU4866
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17698              		.loc 1 4647 42 is_stmt 0 view .LVU4867
 17699 0032 9DF90700 		ldrsb	r0, [sp, #7]
 17700 0036 FFF7FEFF 		bl	__aeabi_i2d
 17701              	.LVL2182:
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17702              		.loc 1 4647 20 view .LVU4868
 17703 003a FFF7FEFF 		bl	__aeabi_d2f
 17704              	.LVL2183:
4648:Core/Src/bno055.c ****         }
 17705              		.loc 1 4648 13 is_stmt 1 view .LVU4869
4648:Core/Src/bno055.c ****         }
 17706              		.loc 1 4648 21 is_stmt 0 view .LVU4870
 17707 003e 2860     		str	r0, [r5]	@ float
 17708              	.LVL2184:
 17709              	.L1260:
4660:Core/Src/bno055.c **** }
 17710              		.loc 1 4660 5 is_stmt 1 view .LVU4871
4661:Core/Src/bno055.c **** #endif
 17711              		.loc 1 4661 1 is_stmt 0 view .LVU4872
 17712 0040 2046     		mov	r0, r4
 17713 0042 03B0     		add	sp, sp, #12
 17714              	.LCFI567:
 17715              		.cfi_remember_state
 17716              		.cfi_def_cfa_offset 12
 17717              		@ sp needed
 17718 0044 30BD     		pop	{r4, r5, pc}
 17719              	.LVL2185:
 17720              	.L1264:
 17721              	.LCFI568:
 17722              		.cfi_restore_state
4638:Core/Src/bno055.c ****     }
 17723              		.loc 1 4638 9 is_stmt 1 view .LVU4873
4638:Core/Src/bno055.c ****     }
 17724              		.loc 1 4638 21 is_stmt 0 view .LVU4874
 17725 0046 0020     		movs	r0, #0
 17726 0048 FFF7FEFF 		bl	bno055_set_temp_unit
 17727              	.LVL2186:
4638:Core/Src/bno055.c ****     }
 17728              		.loc 1 4638 18 view .LVU4875
 17729 004c 54FA80F4 		uxtab	r4, r4, r0
 17730              	.LVL2187:
4638:Core/Src/bno055.c ****     }
 17731              		.loc 1 4638 18 view .LVU4876
 17732 0050 64B2     		sxtb	r4, r4
 17733              	.LVL2188:
4638:Core/Src/bno055.c ****     }
 17734              		.loc 1 4638 18 view .LVU4877
 17735 0052 E5E7     		b	.L1259
 17736              	.L1261:
ARM GAS  /tmp/cc9kYR4Z.s 			page 505


4657:Core/Src/bno055.c ****     }
 17737              		.loc 1 4657 18 view .LVU4878
 17738 0054 4FF0FF34 		mov	r4, #-1
 17739              	.LVL2189:
4657:Core/Src/bno055.c ****     }
 17740              		.loc 1 4657 18 view .LVU4879
 17741 0058 F2E7     		b	.L1260
 17742              	.LVL2190:
 17743              	.L1262:
4652:Core/Src/bno055.c ****         }
 17744              		.loc 1 4652 22 view .LVU4880
 17745 005a 4FF0FF34 		mov	r4, #-1
 17746              	.LVL2191:
4652:Core/Src/bno055.c ****         }
 17747              		.loc 1 4652 22 view .LVU4881
 17748 005e EFE7     		b	.L1260
 17749              		.cfi_endproc
 17750              	.LFE78:
 17752              		.section	.text.bno055_convert_double_temp_fahrenheit,"ax",%progbits
 17753              		.align	1
 17754              		.global	bno055_convert_double_temp_fahrenheit
 17755              		.syntax unified
 17756              		.thumb
 17757              		.thumb_func
 17759              	bno055_convert_double_temp_fahrenheit:
 17760              	.LVL2192:
 17761              	.LFB115:
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17762              		.loc 1 6399 1 is_stmt 1 view -0
 17763              		.cfi_startproc
 17764              		@ args = 0, pretend = 0, frame = 8
 17765              		@ frame_needed = 0, uses_anonymous_args = 0
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17766              		.loc 1 6399 1 is_stmt 0 view .LVU4883
 17767 0000 30B5     		push	{r4, r5, lr}
 17768              	.LCFI569:
 17769              		.cfi_def_cfa_offset 12
 17770              		.cfi_offset 4, -12
 17771              		.cfi_offset 5, -8
 17772              		.cfi_offset 14, -4
 17773 0002 83B0     		sub	sp, sp, #12
 17774              	.LCFI570:
 17775              		.cfi_def_cfa_offset 24
 17776 0004 0546     		mov	r5, r0
6400:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17777              		.loc 1 6400 5 is_stmt 1 view .LVU4884
 17778              	.LVL2193:
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17779              		.loc 1 6401 5 view .LVU4885
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17780              		.loc 1 6401 8 is_stmt 0 view .LVU4886
 17781 0006 0023     		movs	r3, #0
 17782 0008 8DF80730 		strb	r3, [sp, #7]
6402:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17783              		.loc 1 6402 5 is_stmt 1 view .LVU4887
 17784              	.LVL2194:
6403:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 506


 17785              		.loc 1 6403 5 view .LVU4888
6403:Core/Src/bno055.c **** 
 17786              		.loc 1 6403 8 is_stmt 0 view .LVU4889
 17787 000c 8DF80630 		strb	r3, [sp, #6]
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17788              		.loc 1 6407 5 is_stmt 1 view .LVU4890
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17789              		.loc 1 6407 16 is_stmt 0 view .LVU4891
 17790 0010 0DF10600 		add	r0, sp, #6
 17791              	.LVL2195:
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17792              		.loc 1 6407 16 view .LVU4892
 17793 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17794              	.LVL2196:
 17795 0018 0446     		mov	r4, r0
 17796              	.LVL2197:
6408:Core/Src/bno055.c ****     {
 17797              		.loc 1 6408 5 is_stmt 1 view .LVU4893
6408:Core/Src/bno055.c ****     {
 17798              		.loc 1 6408 22 is_stmt 0 view .LVU4894
 17799 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6408:Core/Src/bno055.c ****     {
 17800              		.loc 1 6408 8 view .LVU4895
 17801 001e 012B     		cmp	r3, #1
 17802 0020 05D1     		bne	.L1271
 17803              	.L1266:
6412:Core/Src/bno055.c ****     {
 17804              		.loc 1 6412 5 is_stmt 1 view .LVU4896
6412:Core/Src/bno055.c ****     {
 17805              		.loc 1 6412 8 is_stmt 0 view .LVU4897
 17806 0022 5CB1     		cbz	r4, .L1272
6429:Core/Src/bno055.c ****     }
 17807              		.loc 1 6429 9 is_stmt 1 view .LVU4898
6429:Core/Src/bno055.c ****     }
 17808              		.loc 1 6429 18 is_stmt 0 view .LVU4899
 17809 0024 013C     		subs	r4, r4, #1
 17810              	.LVL2198:
6429:Core/Src/bno055.c ****     }
 17811              		.loc 1 6429 18 view .LVU4900
 17812 0026 64B2     		sxtb	r4, r4
 17813              	.LVL2199:
 17814              	.L1269:
6432:Core/Src/bno055.c **** }
 17815              		.loc 1 6432 5 is_stmt 1 view .LVU4901
6433:Core/Src/bno055.c **** 
 17816              		.loc 1 6433 1 is_stmt 0 view .LVU4902
 17817 0028 2046     		mov	r0, r4
 17818 002a 03B0     		add	sp, sp, #12
 17819              	.LCFI571:
 17820              		.cfi_remember_state
 17821              		.cfi_def_cfa_offset 12
 17822              		@ sp needed
 17823 002c 30BD     		pop	{r4, r5, pc}
 17824              	.LVL2200:
 17825              	.L1271:
 17826              	.LCFI572:
 17827              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 507


6410:Core/Src/bno055.c ****     }
 17828              		.loc 1 6410 9 is_stmt 1 view .LVU4903
6410:Core/Src/bno055.c ****     }
 17829              		.loc 1 6410 21 is_stmt 0 view .LVU4904
 17830 002e 0120     		movs	r0, #1
 17831 0030 FFF7FEFF 		bl	bno055_set_temp_unit
 17832              	.LVL2201:
6410:Core/Src/bno055.c ****     }
 17833              		.loc 1 6410 18 view .LVU4905
 17834 0034 54FA80F4 		uxtab	r4, r4, r0
 17835              	.LVL2202:
6410:Core/Src/bno055.c ****     }
 17836              		.loc 1 6410 18 view .LVU4906
 17837 0038 64B2     		sxtb	r4, r4
 17838              	.LVL2203:
6410:Core/Src/bno055.c ****     }
 17839              		.loc 1 6410 18 view .LVU4907
 17840 003a F2E7     		b	.L1266
 17841              	.L1272:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17842              		.loc 1 6415 9 is_stmt 1 view .LVU4908
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17843              		.loc 1 6415 21 is_stmt 0 view .LVU4909
 17844 003c 0DF10700 		add	r0, sp, #7
 17845 0040 FFF7FEFF 		bl	bno055_read_temp_data
 17846              	.LVL2204:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17847              		.loc 1 6415 18 view .LVU4910
 17848 0044 54FA80F0 		uxtab	r0, r4, r0
 17849 0048 C3B2     		uxtb	r3, r0
 17850 004a 44B2     		sxtb	r4, r0
 17851              	.LVL2205:
6416:Core/Src/bno055.c ****         {
 17852              		.loc 1 6416 9 is_stmt 1 view .LVU4911
6416:Core/Src/bno055.c ****         {
 17853              		.loc 1 6416 12 is_stmt 0 view .LVU4912
 17854 004c 54B9     		cbnz	r4, .L1268
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17855              		.loc 1 6419 13 is_stmt 1 view .LVU4913
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17856              		.loc 1 6419 22 is_stmt 0 view .LVU4914
 17857 004e 9DF90700 		ldrsb	r0, [sp, #7]
 17858 0052 FFF7FEFF 		bl	__aeabi_i2d
 17859              	.LVL2206:
 17860 0056 0246     		mov	r2, r0
 17861 0058 0B46     		mov	r3, r1
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17862              		.loc 1 6419 20 view .LVU4915
 17863 005a FFF7FEFF 		bl	__aeabi_dadd
 17864              	.LVL2207:
6420:Core/Src/bno055.c ****         }
 17865              		.loc 1 6420 13 is_stmt 1 view .LVU4916
6420:Core/Src/bno055.c ****         }
 17866              		.loc 1 6420 21 is_stmt 0 view .LVU4917
 17867 005e C5E90001 		strd	r0, [r5]
 17868 0062 E1E7     		b	.L1269
 17869              	.LVL2208:
ARM GAS  /tmp/cc9kYR4Z.s 			page 508


 17870              	.L1268:
6424:Core/Src/bno055.c ****         }
 17871              		.loc 1 6424 13 is_stmt 1 view .LVU4918
6424:Core/Src/bno055.c ****         }
 17872              		.loc 1 6424 22 is_stmt 0 view .LVU4919
 17873 0064 013B     		subs	r3, r3, #1
 17874 0066 5CB2     		sxtb	r4, r3
 17875              	.LVL2209:
6424:Core/Src/bno055.c ****         }
 17876              		.loc 1 6424 22 view .LVU4920
 17877 0068 DEE7     		b	.L1269
 17878              		.cfi_endproc
 17879              	.LFE115:
 17881              		.section	.text.bno055_convert_double_temp_celsius,"ax",%progbits
 17882              		.align	1
 17883              		.global	bno055_convert_double_temp_celsius
 17884              		.syntax unified
 17885              		.thumb
 17886              		.thumb_func
 17888              	bno055_convert_double_temp_celsius:
 17889              	.LVL2210:
 17890              	.LFB116:
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17891              		.loc 1 6448 1 is_stmt 1 view -0
 17892              		.cfi_startproc
 17893              		@ args = 0, pretend = 0, frame = 8
 17894              		@ frame_needed = 0, uses_anonymous_args = 0
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17895              		.loc 1 6448 1 is_stmt 0 view .LVU4922
 17896 0000 30B5     		push	{r4, r5, lr}
 17897              	.LCFI573:
 17898              		.cfi_def_cfa_offset 12
 17899              		.cfi_offset 4, -12
 17900              		.cfi_offset 5, -8
 17901              		.cfi_offset 14, -4
 17902 0002 83B0     		sub	sp, sp, #12
 17903              	.LCFI574:
 17904              		.cfi_def_cfa_offset 24
 17905 0004 0546     		mov	r5, r0
6449:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17906              		.loc 1 6449 5 is_stmt 1 view .LVU4923
 17907              	.LVL2211:
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17908              		.loc 1 6450 5 view .LVU4924
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17909              		.loc 1 6450 8 is_stmt 0 view .LVU4925
 17910 0006 0023     		movs	r3, #0
 17911 0008 8DF80730 		strb	r3, [sp, #7]
6451:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17912              		.loc 1 6451 5 is_stmt 1 view .LVU4926
 17913              	.LVL2212:
6452:Core/Src/bno055.c **** 
 17914              		.loc 1 6452 5 view .LVU4927
6452:Core/Src/bno055.c **** 
 17915              		.loc 1 6452 8 is_stmt 0 view .LVU4928
 17916 000c 8DF80630 		strb	r3, [sp, #6]
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 509


 17917              		.loc 1 6456 5 is_stmt 1 view .LVU4929
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17918              		.loc 1 6456 16 is_stmt 0 view .LVU4930
 17919 0010 0DF10600 		add	r0, sp, #6
 17920              	.LVL2213:
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17921              		.loc 1 6456 16 view .LVU4931
 17922 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17923              	.LVL2214:
 17924 0018 0446     		mov	r4, r0
 17925              	.LVL2215:
6457:Core/Src/bno055.c ****     {
 17926              		.loc 1 6457 5 is_stmt 1 view .LVU4932
6457:Core/Src/bno055.c ****     {
 17927              		.loc 1 6457 22 is_stmt 0 view .LVU4933
 17928 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6457:Core/Src/bno055.c ****     {
 17929              		.loc 1 6457 8 view .LVU4934
 17930 001e 2BB9     		cbnz	r3, .L1279
 17931              	.L1274:
6461:Core/Src/bno055.c ****     {
 17932              		.loc 1 6461 5 is_stmt 1 view .LVU4935
6461:Core/Src/bno055.c ****     {
 17933              		.loc 1 6461 8 is_stmt 0 view .LVU4936
 17934 0020 5CB1     		cbz	r4, .L1280
6478:Core/Src/bno055.c ****     }
 17935              		.loc 1 6478 9 is_stmt 1 view .LVU4937
6478:Core/Src/bno055.c ****     }
 17936              		.loc 1 6478 18 is_stmt 0 view .LVU4938
 17937 0022 013C     		subs	r4, r4, #1
 17938              	.LVL2216:
6478:Core/Src/bno055.c ****     }
 17939              		.loc 1 6478 18 view .LVU4939
 17940 0024 64B2     		sxtb	r4, r4
 17941              	.LVL2217:
 17942              	.L1277:
6481:Core/Src/bno055.c **** }
 17943              		.loc 1 6481 5 is_stmt 1 view .LVU4940
6482:Core/Src/bno055.c **** #endif
 17944              		.loc 1 6482 1 is_stmt 0 view .LVU4941
 17945 0026 2046     		mov	r0, r4
 17946 0028 03B0     		add	sp, sp, #12
 17947              	.LCFI575:
 17948              		.cfi_remember_state
 17949              		.cfi_def_cfa_offset 12
 17950              		@ sp needed
 17951 002a 30BD     		pop	{r4, r5, pc}
 17952              	.LVL2218:
 17953              	.L1279:
 17954              	.LCFI576:
 17955              		.cfi_restore_state
6459:Core/Src/bno055.c ****     }
 17956              		.loc 1 6459 9 is_stmt 1 view .LVU4942
6459:Core/Src/bno055.c ****     }
 17957              		.loc 1 6459 21 is_stmt 0 view .LVU4943
 17958 002c 0020     		movs	r0, #0
 17959 002e FFF7FEFF 		bl	bno055_set_temp_unit
ARM GAS  /tmp/cc9kYR4Z.s 			page 510


 17960              	.LVL2219:
6459:Core/Src/bno055.c ****     }
 17961              		.loc 1 6459 18 view .LVU4944
 17962 0032 54FA80F4 		uxtab	r4, r4, r0
 17963              	.LVL2220:
6459:Core/Src/bno055.c ****     }
 17964              		.loc 1 6459 18 view .LVU4945
 17965 0036 64B2     		sxtb	r4, r4
 17966              	.LVL2221:
6459:Core/Src/bno055.c ****     }
 17967              		.loc 1 6459 18 view .LVU4946
 17968 0038 F2E7     		b	.L1274
 17969              	.L1280:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17970              		.loc 1 6464 9 is_stmt 1 view .LVU4947
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17971              		.loc 1 6464 21 is_stmt 0 view .LVU4948
 17972 003a 0DF10700 		add	r0, sp, #7
 17973 003e FFF7FEFF 		bl	bno055_read_temp_data
 17974              	.LVL2222:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17975              		.loc 1 6464 18 view .LVU4949
 17976 0042 54FA80F0 		uxtab	r0, r4, r0
 17977 0046 C3B2     		uxtb	r3, r0
 17978 0048 44B2     		sxtb	r4, r0
 17979              	.LVL2223:
6465:Core/Src/bno055.c ****         {
 17980              		.loc 1 6465 9 is_stmt 1 view .LVU4950
6465:Core/Src/bno055.c ****         {
 17981              		.loc 1 6465 12 is_stmt 0 view .LVU4951
 17982 004a 34B9     		cbnz	r4, .L1276
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 17983              		.loc 1 6468 13 is_stmt 1 view .LVU4952
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 17984              		.loc 1 6468 20 is_stmt 0 view .LVU4953
 17985 004c 9DF90700 		ldrsb	r0, [sp, #7]
 17986 0050 FFF7FEFF 		bl	__aeabi_i2d
 17987              	.LVL2224:
6469:Core/Src/bno055.c ****         }
 17988              		.loc 1 6469 13 is_stmt 1 view .LVU4954
6469:Core/Src/bno055.c ****         }
 17989              		.loc 1 6469 21 is_stmt 0 view .LVU4955
 17990 0054 C5E90001 		strd	r0, [r5]
 17991 0058 E5E7     		b	.L1277
 17992              	.LVL2225:
 17993              	.L1276:
6473:Core/Src/bno055.c ****         }
 17994              		.loc 1 6473 13 is_stmt 1 view .LVU4956
6473:Core/Src/bno055.c ****         }
 17995              		.loc 1 6473 22 is_stmt 0 view .LVU4957
 17996 005a 013B     		subs	r3, r3, #1
 17997 005c 5CB2     		sxtb	r4, r3
 17998              	.LVL2226:
6473:Core/Src/bno055.c ****         }
 17999              		.loc 1 6473 22 view .LVU4958
 18000 005e E2E7     		b	.L1277
 18001              		.cfi_endproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 511


 18002              	.LFE116:
 18004              		.section	.text.bno055_set_data_output_format,"ax",%progbits
 18005              		.align	1
 18006              		.global	bno055_set_data_output_format
 18007              		.syntax unified
 18008              		.thumb
 18009              		.thumb_func
 18011              	bno055_set_data_output_format:
 18012              	.LVL2227:
 18013              	.LFB144:
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18014              		.loc 1 8133 1 is_stmt 1 view -0
 18015              		.cfi_startproc
 18016              		@ args = 0, pretend = 0, frame = 8
 18017              		@ frame_needed = 0, uses_anonymous_args = 0
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18018              		.loc 1 8133 1 is_stmt 0 view .LVU4960
 18019 0000 30B5     		push	{r4, r5, lr}
 18020              	.LCFI577:
 18021              		.cfi_def_cfa_offset 12
 18022              		.cfi_offset 4, -12
 18023              		.cfi_offset 5, -8
 18024              		.cfi_offset 14, -4
 18025 0002 83B0     		sub	sp, sp, #12
 18026              	.LCFI578:
 18027              		.cfi_def_cfa_offset 24
8134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18028              		.loc 1 8134 5 is_stmt 1 view .LVU4961
 18029              	.LVL2228:
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18030              		.loc 1 8135 5 view .LVU4962
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18031              		.loc 1 8135 8 is_stmt 0 view .LVU4963
 18032 0004 0023     		movs	r3, #0
 18033 0006 8DF80730 		strb	r3, [sp, #7]
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18034              		.loc 1 8136 5 is_stmt 1 view .LVU4964
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18035              		.loc 1 8136 8 is_stmt 0 view .LVU4965
 18036 000a 8DF80630 		strb	r3, [sp, #6]
8137:Core/Src/bno055.c **** 
 18037              		.loc 1 8137 5 is_stmt 1 view .LVU4966
 18038              	.LVL2229:
8140:Core/Src/bno055.c ****     {
 18039              		.loc 1 8140 5 view .LVU4967
8140:Core/Src/bno055.c ****     {
 18040              		.loc 1 8140 18 is_stmt 0 view .LVU4968
 18041 000e 244B     		ldr	r3, .L1291
 18042 0010 1B68     		ldr	r3, [r3]
8140:Core/Src/bno055.c ****     {
 18043              		.loc 1 8140 8 view .LVU4969
 18044 0012 002B     		cmp	r3, #0
 18045 0014 41D0     		beq	.L1285
 18046 0016 0546     		mov	r5, r0
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18047              		.loc 1 8149 9 is_stmt 1 view .LVU4970
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 512


 18048              		.loc 1 8149 19 is_stmt 0 view .LVU4971
 18049 0018 0DF10600 		add	r0, sp, #6
 18050              	.LVL2230:
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18051              		.loc 1 8149 19 view .LVU4972
 18052 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18053              	.LVL2231:
8150:Core/Src/bno055.c ****         {
 18054              		.loc 1 8150 9 is_stmt 1 view .LVU4973
8150:Core/Src/bno055.c ****         {
 18055              		.loc 1 8150 12 is_stmt 0 view .LVU4974
 18056 0020 0446     		mov	r4, r0
 18057 0022 48BB     		cbnz	r0, .L1286
8152:Core/Src/bno055.c ****             {
 18058              		.loc 1 8152 13 is_stmt 1 view .LVU4975
8152:Core/Src/bno055.c ****             {
 18059              		.loc 1 8152 32 is_stmt 0 view .LVU4976
 18060 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8152:Core/Src/bno055.c ****             {
 18061              		.loc 1 8152 16 view .LVU4977
 18062 0028 03BB     		cbnz	r3, .L1289
 18063              	.LVL2232:
 18064              	.L1284:
8156:Core/Src/bno055.c ****             {
 18065              		.loc 1 8156 13 is_stmt 1 view .LVU4978
8156:Core/Src/bno055.c ****             {
 18066              		.loc 1 8156 16 is_stmt 0 view .LVU4979
 18067 002a 6CBB     		cbnz	r4, .L1287
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18068              		.loc 1 8159 17 is_stmt 1 view .LVU4980
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18069              		.loc 1 8159 36 is_stmt 0 view .LVU4981
 18070 002c 1C4B     		ldr	r3, .L1291
 18071 002e 1868     		ldr	r0, [r3]
 18072 0030 0469     		ldr	r4, [r0, #16]
 18073              	.LVL2233:
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18074              		.loc 1 8159 28 view .LVU4982
 18075 0032 0123     		movs	r3, #1
 18076 0034 0DF10702 		add	r2, sp, #7
 18077 0038 3B21     		movs	r1, #59
 18078 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18079 003c A047     		blx	r4
 18080              	.LVL2234:
8163:Core/Src/bno055.c ****                 {
 18081              		.loc 1 8163 17 is_stmt 1 view .LVU4983
8163:Core/Src/bno055.c ****                 {
 18082              		.loc 1 8163 20 is_stmt 0 view .LVU4984
 18083 003e 0446     		mov	r4, r0
 18084 0040 E0B9     		cbnz	r0, .L1283
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18085              		.loc 1 8165 21 is_stmt 1 view .LVU4985
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18086              		.loc 1 8165 32 is_stmt 0 view .LVU4986
 18087 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18088 0046 03F07F03 		and	r3, r3, #127
 18089 004a 43EAC513 		orr	r3, r3, r5, lsl #7
ARM GAS  /tmp/cc9kYR4Z.s 			page 513


8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18090              		.loc 1 8165 30 view .LVU4987
 18091 004e 8DF80730 		strb	r3, [sp, #7]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18092              		.loc 1 8166 21 is_stmt 1 view .LVU4988
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18093              		.loc 1 8166 41 is_stmt 0 view .LVU4989
 18094 0052 134B     		ldr	r3, .L1291
 18095 0054 1868     		ldr	r0, [r3]
 18096              	.LVL2235:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18097              		.loc 1 8166 41 view .LVU4990
 18098 0056 C568     		ldr	r5, [r0, #12]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18099              		.loc 1 8166 33 view .LVU4991
 18100 0058 0123     		movs	r3, #1
 18101 005a 0DF10702 		add	r2, sp, #7
 18102 005e 3B21     		movs	r1, #59
 18103 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18104 0062 A847     		blx	r5
 18105              	.LVL2236:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18106              		.loc 1 8166 30 view .LVU4992
 18107 0064 54FA80F0 		uxtab	r0, r4, r0
 18108 0068 44B2     		sxtb	r4, r0
 18109              	.LVL2237:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18110              		.loc 1 8166 30 view .LVU4993
 18111 006a 07E0     		b	.L1283
 18112              	.LVL2238:
 18113              	.L1289:
8154:Core/Src/bno055.c ****             }
 18114              		.loc 1 8154 17 is_stmt 1 view .LVU4994
8154:Core/Src/bno055.c ****             }
 18115              		.loc 1 8154 28 is_stmt 0 view .LVU4995
 18116 006c FFF7FEFF 		bl	bno055_set_operation_mode
 18117              	.LVL2239:
8154:Core/Src/bno055.c ****             }
 18118              		.loc 1 8154 25 view .LVU4996
 18119 0070 54FA80F4 		uxtab	r4, r4, r0
 18120 0074 64B2     		sxtb	r4, r4
 18121              	.LVL2240:
8154:Core/Src/bno055.c ****             }
 18122              		.loc 1 8154 25 view .LVU4997
 18123 0076 D8E7     		b	.L1284
 18124              	.LVL2241:
 18125              	.L1286:
8179:Core/Src/bno055.c ****         }
 18126              		.loc 1 8179 22 view .LVU4998
 18127 0078 4FF0FF34 		mov	r4, #-1
 18128              	.LVL2242:
 18129              	.L1283:
8182:Core/Src/bno055.c ****     {
 18130              		.loc 1 8182 5 is_stmt 1 view .LVU4999
8182:Core/Src/bno055.c ****     {
 18131              		.loc 1 8182 24 is_stmt 0 view .LVU5000
 18132 007c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 514


8182:Core/Src/bno055.c ****     {
 18133              		.loc 1 8182 8 view .LVU5001
 18134 0080 28B9     		cbnz	r0, .L1290
 18135              	.LVL2243:
 18136              	.L1282:
8190:Core/Src/bno055.c **** 
 18137              		.loc 1 8190 1 view .LVU5002
 18138 0082 2046     		mov	r0, r4
 18139 0084 03B0     		add	sp, sp, #12
 18140              	.LCFI579:
 18141              		.cfi_remember_state
 18142              		.cfi_def_cfa_offset 12
 18143              		@ sp needed
 18144 0086 30BD     		pop	{r4, r5, pc}
 18145              	.LVL2244:
 18146              	.L1287:
 18147              	.LCFI580:
 18148              		.cfi_restore_state
8174:Core/Src/bno055.c ****             }
 18149              		.loc 1 8174 26 view .LVU5003
 18150 0088 4FF0FF34 		mov	r4, #-1
 18151              	.LVL2245:
8174:Core/Src/bno055.c ****             }
 18152              		.loc 1 8174 26 view .LVU5004
 18153 008c F6E7     		b	.L1283
 18154              	.LVL2246:
 18155              	.L1290:
8186:Core/Src/bno055.c ****     }
 18156              		.loc 1 8186 9 is_stmt 1 view .LVU5005
8186:Core/Src/bno055.c ****     }
 18157              		.loc 1 8186 21 is_stmt 0 view .LVU5006
 18158 008e FFF7FEFF 		bl	bno055_set_operation_mode
 18159              	.LVL2247:
8186:Core/Src/bno055.c ****     }
 18160              		.loc 1 8186 18 view .LVU5007
 18161 0092 54FA80F0 		uxtab	r0, r4, r0
 18162 0096 44B2     		sxtb	r4, r0
 18163              	.LVL2248:
8186:Core/Src/bno055.c ****     }
 18164              		.loc 1 8186 18 view .LVU5008
 18165 0098 F3E7     		b	.L1282
 18166              	.LVL2249:
 18167              	.L1285:
8142:Core/Src/bno055.c ****     }
 18168              		.loc 1 8142 16 view .LVU5009
 18169 009a 6FF07E04 		mvn	r4, #126
 18170 009e F0E7     		b	.L1282
 18171              	.L1292:
 18172              		.align	2
 18173              	.L1291:
 18174 00a0 00000000 		.word	.LANCHOR0
 18175              		.cfi_endproc
 18176              	.LFE144:
 18178              		.section	.text.bno055_get_power_mode,"ax",%progbits
 18179              		.align	1
 18180              		.global	bno055_get_power_mode
 18181              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 515


 18182              		.thumb
 18183              		.thumb_func
 18185              	bno055_get_power_mode:
 18186              	.LVL2250:
 18187              	.LFB147:
8403:Core/Src/bno055.c **** 
8404:Core/Src/bno055.c **** /*! @brief This API used to read the power mode
8405:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8406:Core/Src/bno055.c ****  *
8407:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8408:Core/Src/bno055.c ****  *
8409:Core/Src/bno055.c ****  * power_mode_u8|      result           | comments
8410:Core/Src/bno055.c ****  * ---------|---------------------------|-------------------------------------
8411:Core/Src/bno055.c ****  *  0x00    |BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8412:Core/Src/bno055.c ****  *    -     |       -                   | map and the internal peripherals
8413:Core/Src/bno055.c ****  *    -     |       -                   | of the MCU are always
8414:Core/Src/bno055.c ****  *    -     |       -                   | operative in this mode
8415:Core/Src/bno055.c ****  *  0x01    |BNO055_POWER_MODE_LOWPOWER | This is first level of power
8416:Core/Src/bno055.c ****  *          |       -                   | saving mode
8417:Core/Src/bno055.c ****  *  0x02    |BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8418:Core/Src/bno055.c ****  *   -      |      -                    | paused and all the sensors and
8419:Core/Src/bno055.c ****  *   -      |      -                    | the micro controller are
8420:Core/Src/bno055.c ****  *   -      |      -                    | put into sleep mode.
8421:Core/Src/bno055.c ****  *
8422:Core/Src/bno055.c ****  *  @return results of bus communication function
8423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8425:Core/Src/bno055.c ****  *
8426:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8427:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8428:Core/Src/bno055.c ****  *
8429:Core/Src/bno055.c ****  */
8430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_power_mode(u8 *power_mode_u8)
8431:Core/Src/bno055.c **** {
 18188              		.loc 1 8431 1 is_stmt 1 view -0
 18189              		.cfi_startproc
 18190              		@ args = 0, pretend = 0, frame = 8
 18191              		@ frame_needed = 0, uses_anonymous_args = 0
 18192              		.loc 1 8431 1 is_stmt 0 view .LVU5011
 18193 0000 30B5     		push	{r4, r5, lr}
 18194              	.LCFI581:
 18195              		.cfi_def_cfa_offset 12
 18196              		.cfi_offset 4, -12
 18197              		.cfi_offset 5, -8
 18198              		.cfi_offset 14, -4
 18199 0002 83B0     		sub	sp, sp, #12
 18200              	.LCFI582:
 18201              		.cfi_def_cfa_offset 24
8432:Core/Src/bno055.c ****     /* Variable used to return value of
8433:Core/Src/bno055.c ****      * communication routine*/
8434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18202              		.loc 1 8434 5 is_stmt 1 view .LVU5012
 18203              	.LVL2251:
8435:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18204              		.loc 1 8435 5 view .LVU5013
 18205              		.loc 1 8435 8 is_stmt 0 view .LVU5014
 18206 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 516


 18207 0006 8DF80730 		strb	r3, [sp, #7]
8436:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18208              		.loc 1 8436 5 is_stmt 1 view .LVU5015
 18209              	.LVL2252:
8437:Core/Src/bno055.c **** 
8438:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8439:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18210              		.loc 1 8439 5 view .LVU5016
 18211              		.loc 1 8439 18 is_stmt 0 view .LVU5017
 18212 000a 134B     		ldr	r3, .L1301
 18213 000c 1B68     		ldr	r3, [r3]
 18214              		.loc 1 8439 8 view .LVU5018
 18215 000e E3B1     		cbz	r3, .L1297
 18216 0010 0446     		mov	r4, r0
8440:Core/Src/bno055.c ****     {
8441:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8442:Core/Src/bno055.c ****     }
8443:Core/Src/bno055.c ****     else
8444:Core/Src/bno055.c ****     {
8445:Core/Src/bno055.c ****         /*condition check for page, power mode is
8446:Core/Src/bno055.c ****          * available in the page zero*/
8447:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18217              		.loc 1 8447 9 is_stmt 1 view .LVU5019
 18218              		.loc 1 8447 21 is_stmt 0 view .LVU5020
 18219 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18220              		.loc 1 8447 12 view .LVU5021
 18221 0014 9BB9     		cbnz	r3, .L1300
 18222              	.LVL2253:
 18223              	.L1295:
8448:Core/Src/bno055.c ****         {
8449:Core/Src/bno055.c ****             /* Write the page zero*/
8450:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8451:Core/Src/bno055.c ****         }
8452:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18224              		.loc 1 8452 53 discriminator 1 view .LVU5022
 18225 0016 104B     		ldr	r3, .L1301
 18226 0018 1B68     		ldr	r3, [r3]
 18227 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18228              		.loc 1 8452 41 discriminator 1 view .LVU5023
 18229 001c C3B9     		cbnz	r3, .L1298
 18230              	.L1296:
8453:Core/Src/bno055.c ****         {
8454:Core/Src/bno055.c ****             /* Read the value of power mode */
8455:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18231              		.loc 1 8455 13 is_stmt 1 view .LVU5024
 18232              		.loc 1 8455 32 is_stmt 0 view .LVU5025
 18233 001e 0E4B     		ldr	r3, .L1301
 18234 0020 1868     		ldr	r0, [r3]
 18235 0022 0569     		ldr	r5, [r0, #16]
 18236              		.loc 1 8455 24 view .LVU5026
 18237 0024 0123     		movs	r3, #1
 18238 0026 0DF10702 		add	r2, sp, #7
 18239 002a 3E21     		movs	r1, #62
 18240 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18241 002e A847     		blx	r5
 18242              	.LVL2254:
8456:Core/Src/bno055.c ****                                                       BNO055_POWER_MODE_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 517


8457:Core/Src/bno055.c ****                                                       &data_u8r,
8458:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8459:Core/Src/bno055.c ****             *power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_POWER_MODE);
 18243              		.loc 1 8459 13 is_stmt 1 view .LVU5027
 18244              		.loc 1 8459 30 is_stmt 0 view .LVU5028
 18245 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18246 0034 03F00303 		and	r3, r3, #3
 18247              		.loc 1 8459 28 view .LVU5029
 18248 0038 2370     		strb	r3, [r4]
 18249              	.LVL2255:
 18250              	.L1294:
8460:Core/Src/bno055.c ****         }
8461:Core/Src/bno055.c ****         else
8462:Core/Src/bno055.c ****         {
8463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8464:Core/Src/bno055.c ****         }
8465:Core/Src/bno055.c ****     }
8466:Core/Src/bno055.c **** 
8467:Core/Src/bno055.c ****     return com_rslt;
8468:Core/Src/bno055.c **** }
 18251              		.loc 1 8468 1 view .LVU5030
 18252 003a 03B0     		add	sp, sp, #12
 18253              	.LCFI583:
 18254              		.cfi_remember_state
 18255              		.cfi_def_cfa_offset 12
 18256              		@ sp needed
 18257 003c 30BD     		pop	{r4, r5, pc}
 18258              	.LVL2256:
 18259              	.L1300:
 18260              	.LCFI584:
 18261              		.cfi_restore_state
8450:Core/Src/bno055.c ****         }
 18262              		.loc 1 8450 13 is_stmt 1 view .LVU5031
8450:Core/Src/bno055.c ****         }
 18263              		.loc 1 8450 23 is_stmt 0 view .LVU5032
 18264 003e 0020     		movs	r0, #0
 18265              	.LVL2257:
8450:Core/Src/bno055.c ****         }
 18266              		.loc 1 8450 23 view .LVU5033
 18267 0040 FFF7FEFF 		bl	bno055_write_page_id
 18268              	.LVL2258:
8452:Core/Src/bno055.c ****         {
 18269              		.loc 1 8452 9 is_stmt 1 view .LVU5034
8452:Core/Src/bno055.c ****         {
 18270              		.loc 1 8452 12 is_stmt 0 view .LVU5035
 18271 0044 0028     		cmp	r0, #0
 18272 0046 EAD0     		beq	.L1296
 18273 0048 E5E7     		b	.L1295
 18274              	.LVL2259:
 18275              	.L1297:
8441:Core/Src/bno055.c ****     }
 18276              		.loc 1 8441 16 view .LVU5036
 18277 004a 6FF07E00 		mvn	r0, #126
 18278              	.LVL2260:
8441:Core/Src/bno055.c ****     }
 18279              		.loc 1 8441 16 view .LVU5037
 18280 004e F4E7     		b	.L1294
ARM GAS  /tmp/cc9kYR4Z.s 			page 518


 18281              	.LVL2261:
 18282              	.L1298:
8463:Core/Src/bno055.c ****         }
 18283              		.loc 1 8463 22 view .LVU5038
 18284 0050 4FF0FF30 		mov	r0, #-1
 18285 0054 F1E7     		b	.L1294
 18286              	.L1302:
 18287 0056 00BF     		.align	2
 18288              	.L1301:
 18289 0058 00000000 		.word	.LANCHOR0
 18290              		.cfi_endproc
 18291              	.LFE147:
 18293              		.section	.text.bno055_set_power_mode,"ax",%progbits
 18294              		.align	1
 18295              		.global	bno055_set_power_mode
 18296              		.syntax unified
 18297              		.thumb
 18298              		.thumb_func
 18300              	bno055_set_power_mode:
 18301              	.LVL2262:
 18302              	.LFB148:
8469:Core/Src/bno055.c **** 
8470:Core/Src/bno055.c **** /*! @brief This API used to write the power mode
8471:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8472:Core/Src/bno055.c ****  *
8473:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8474:Core/Src/bno055.c ****  *
8475:Core/Src/bno055.c ****  *
8476:Core/Src/bno055.c ****  * power_mode_u8|      result          | comments
8477:Core/Src/bno055.c ****  * -------|----------------------------|---------------------------------
8478:Core/Src/bno055.c ****  *  0x00  | BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8479:Core/Src/bno055.c ****  *    -   |       -                    | map and the internal peripherals
8480:Core/Src/bno055.c ****  *    -   |       -                    | of the MCU are always
8481:Core/Src/bno055.c ****  *    -   |       -                    | operative in this mode
8482:Core/Src/bno055.c ****  *  0x01  | BNO055_POWER_MODE_LOWPOWER | This is first level of power
8483:Core/Src/bno055.c ****  *        |     -                      | saving mode
8484:Core/Src/bno055.c ****  *  0x02  | BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8485:Core/Src/bno055.c ****  *   -    |      -                     | paused and all the sensors and
8486:Core/Src/bno055.c ****  *   -    |      -                     | the micro controller are
8487:Core/Src/bno055.c ****  *   -    |      -                     | put into sleep mode.
8488:Core/Src/bno055.c ****  *
8489:Core/Src/bno055.c ****  *  @return results of bus communication function
8490:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8491:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8492:Core/Src/bno055.c ****  *
8493:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8494:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8495:Core/Src/bno055.c ****  *
8496:Core/Src/bno055.c ****  */
8497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_power_mode(u8 power_mode_u8)
8498:Core/Src/bno055.c **** {
 18303              		.loc 1 8498 1 is_stmt 1 view -0
 18304              		.cfi_startproc
 18305              		@ args = 0, pretend = 0, frame = 8
 18306              		@ frame_needed = 0, uses_anonymous_args = 0
 18307              		.loc 1 8498 1 is_stmt 0 view .LVU5040
 18308 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 519


 18309              	.LCFI585:
 18310              		.cfi_def_cfa_offset 12
 18311              		.cfi_offset 4, -12
 18312              		.cfi_offset 5, -8
 18313              		.cfi_offset 14, -4
 18314 0002 83B0     		sub	sp, sp, #12
 18315              	.LCFI586:
 18316              		.cfi_def_cfa_offset 24
8499:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18317              		.loc 1 8499 5 is_stmt 1 view .LVU5041
 18318              	.LVL2263:
8500:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18319              		.loc 1 8500 5 view .LVU5042
 18320              		.loc 1 8500 8 is_stmt 0 view .LVU5043
 18321 0004 0023     		movs	r3, #0
 18322 0006 8DF80730 		strb	r3, [sp, #7]
8501:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18323              		.loc 1 8501 5 is_stmt 1 view .LVU5044
 18324              		.loc 1 8501 8 is_stmt 0 view .LVU5045
 18325 000a 8DF80630 		strb	r3, [sp, #6]
8502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18326              		.loc 1 8502 5 is_stmt 1 view .LVU5046
 18327              	.LVL2264:
8503:Core/Src/bno055.c **** 
8504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18328              		.loc 1 8505 5 view .LVU5047
 18329              		.loc 1 8505 18 is_stmt 0 view .LVU5048
 18330 000e 254B     		ldr	r3, .L1313
 18331 0010 1B68     		ldr	r3, [r3]
 18332              		.loc 1 8505 8 view .LVU5049
 18333 0012 002B     		cmp	r3, #0
 18334 0014 43D0     		beq	.L1307
 18335 0016 0546     		mov	r5, r0
8506:Core/Src/bno055.c ****     {
8507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8508:Core/Src/bno055.c ****     }
8509:Core/Src/bno055.c ****     else
8510:Core/Src/bno055.c ****     {
8511:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8512:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8513:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8514:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 18336              		.loc 1 8514 9 is_stmt 1 view .LVU5050
 18337              		.loc 1 8514 19 is_stmt 0 view .LVU5051
 18338 0018 0DF10600 		add	r0, sp, #6
 18339              	.LVL2265:
 18340              		.loc 1 8514 19 view .LVU5052
 18341 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18342              	.LVL2266:
8515:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18343              		.loc 1 8515 9 is_stmt 1 view .LVU5053
 18344              		.loc 1 8515 12 is_stmt 0 view .LVU5054
 18345 0020 0446     		mov	r4, r0
 18346 0022 58BB     		cbnz	r0, .L1308
8516:Core/Src/bno055.c ****         {
8517:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/cc9kYR4Z.s 			page 520


 18347              		.loc 1 8517 13 is_stmt 1 view .LVU5055
 18348              		.loc 1 8517 32 is_stmt 0 view .LVU5056
 18349 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 18350              		.loc 1 8517 16 view .LVU5057
 18351 0028 13BB     		cbnz	r3, .L1311
 18352              	.LVL2267:
 18353              	.L1306:
8518:Core/Src/bno055.c ****             {
8519:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8520:Core/Src/bno055.c ****             }
8521:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 18354              		.loc 1 8521 13 is_stmt 1 view .LVU5058
 18355              		.loc 1 8521 16 is_stmt 0 view .LVU5059
 18356 002a 7CBB     		cbnz	r4, .L1309
8522:Core/Src/bno055.c ****             {
8523:Core/Src/bno055.c ****                 /* Write the value of power mode */
8524:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18357              		.loc 1 8524 17 is_stmt 1 view .LVU5060
 18358              		.loc 1 8524 36 is_stmt 0 view .LVU5061
 18359 002c 1D4B     		ldr	r3, .L1313
 18360 002e 1868     		ldr	r0, [r3]
 18361 0030 0469     		ldr	r4, [r0, #16]
 18362              	.LVL2268:
 18363              		.loc 1 8524 28 view .LVU5062
 18364 0032 0123     		movs	r3, #1
 18365 0034 0DF10702 		add	r2, sp, #7
 18366 0038 3E21     		movs	r1, #62
 18367 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18368 003c A047     		blx	r4
 18369              	.LVL2269:
8525:Core/Src/bno055.c ****                                                           BNO055_POWER_MODE_REG,
8526:Core/Src/bno055.c ****                                                           &data_u8r,
8527:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8528:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 18370              		.loc 1 8528 17 is_stmt 1 view .LVU5063
 18371              		.loc 1 8528 20 is_stmt 0 view .LVU5064
 18372 003e 0446     		mov	r4, r0
 18373 0040 F0B9     		cbnz	r0, .L1305
8529:Core/Src/bno055.c ****                 {
8530:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_POWER_MODE, power_mode_u8);
 18374              		.loc 1 8530 21 is_stmt 1 view .LVU5065
 18375              		.loc 1 8530 32 is_stmt 0 view .LVU5066
 18376 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18377 0046 23F00303 		bic	r3, r3, #3
 18378 004a 5BB2     		sxtb	r3, r3
 18379 004c 05F00300 		and	r0, r5, #3
 18380              	.LVL2270:
 18381              		.loc 1 8530 32 view .LVU5067
 18382 0050 0343     		orrs	r3, r3, r0
 18383              		.loc 1 8530 30 view .LVU5068
 18384 0052 8DF80730 		strb	r3, [sp, #7]
8531:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18385              		.loc 1 8531 21 is_stmt 1 view .LVU5069
 18386              		.loc 1 8531 41 is_stmt 0 view .LVU5070
 18387 0056 134B     		ldr	r3, .L1313
 18388 0058 1868     		ldr	r0, [r3]
 18389 005a C568     		ldr	r5, [r0, #12]
ARM GAS  /tmp/cc9kYR4Z.s 			page 521


 18390              		.loc 1 8531 33 view .LVU5071
 18391 005c 0123     		movs	r3, #1
 18392 005e 0DF10702 		add	r2, sp, #7
 18393 0062 3E21     		movs	r1, #62
 18394 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18395 0066 A847     		blx	r5
 18396              	.LVL2271:
 18397              		.loc 1 8531 30 view .LVU5072
 18398 0068 54FA80F0 		uxtab	r0, r4, r0
 18399 006c 44B2     		sxtb	r4, r0
 18400              	.LVL2272:
 18401              		.loc 1 8531 30 view .LVU5073
 18402 006e 07E0     		b	.L1305
 18403              	.LVL2273:
 18404              	.L1311:
8519:Core/Src/bno055.c ****             }
 18405              		.loc 1 8519 17 is_stmt 1 view .LVU5074
8519:Core/Src/bno055.c ****             }
 18406              		.loc 1 8519 28 is_stmt 0 view .LVU5075
 18407 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 18408              	.LVL2274:
8519:Core/Src/bno055.c ****             }
 18409              		.loc 1 8519 25 view .LVU5076
 18410 0074 54FA80F4 		uxtab	r4, r4, r0
 18411 0078 64B2     		sxtb	r4, r4
 18412              	.LVL2275:
8519:Core/Src/bno055.c ****             }
 18413              		.loc 1 8519 25 view .LVU5077
 18414 007a D6E7     		b	.L1306
 18415              	.LVL2276:
 18416              	.L1308:
8532:Core/Src/bno055.c ****                                                                 BNO055_POWER_MODE_REG,
8533:Core/Src/bno055.c ****                                                                 &data_u8r,
8534:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8535:Core/Src/bno055.c ****                 }
8536:Core/Src/bno055.c ****             }
8537:Core/Src/bno055.c ****             else
8538:Core/Src/bno055.c ****             {
8539:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8540:Core/Src/bno055.c ****             }
8541:Core/Src/bno055.c ****         }
8542:Core/Src/bno055.c ****         else
8543:Core/Src/bno055.c ****         {
8544:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 18417              		.loc 1 8544 22 view .LVU5078
 18418 007c 4FF0FF34 		mov	r4, #-1
 18419              	.LVL2277:
 18420              	.L1305:
8545:Core/Src/bno055.c ****         }
8546:Core/Src/bno055.c ****     }
8547:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18421              		.loc 1 8547 5 is_stmt 1 view .LVU5079
 18422              		.loc 1 8547 24 is_stmt 0 view .LVU5080
 18423 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 18424              		.loc 1 8547 8 view .LVU5081
 18425 0084 28B9     		cbnz	r0, .L1312
 18426              	.LVL2278:
ARM GAS  /tmp/cc9kYR4Z.s 			page 522


 18427              	.L1304:
8548:Core/Src/bno055.c ****     {
8549:Core/Src/bno055.c ****         /* set the operation mode
8550:Core/Src/bno055.c ****          * of previous operation mode*/
8551:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8552:Core/Src/bno055.c ****     }
8553:Core/Src/bno055.c **** 
8554:Core/Src/bno055.c ****     return com_rslt;
8555:Core/Src/bno055.c **** }
 18428              		.loc 1 8555 1 view .LVU5082
 18429 0086 2046     		mov	r0, r4
 18430 0088 03B0     		add	sp, sp, #12
 18431              	.LCFI587:
 18432              		.cfi_remember_state
 18433              		.cfi_def_cfa_offset 12
 18434              		@ sp needed
 18435 008a 30BD     		pop	{r4, r5, pc}
 18436              	.LVL2279:
 18437              	.L1309:
 18438              	.LCFI588:
 18439              		.cfi_restore_state
8539:Core/Src/bno055.c ****             }
 18440              		.loc 1 8539 26 view .LVU5083
 18441 008c 4FF0FF34 		mov	r4, #-1
 18442              	.LVL2280:
8539:Core/Src/bno055.c ****             }
 18443              		.loc 1 8539 26 view .LVU5084
 18444 0090 F6E7     		b	.L1305
 18445              	.LVL2281:
 18446              	.L1312:
8551:Core/Src/bno055.c ****     }
 18447              		.loc 1 8551 9 is_stmt 1 view .LVU5085
8551:Core/Src/bno055.c ****     }
 18448              		.loc 1 8551 21 is_stmt 0 view .LVU5086
 18449 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 18450              	.LVL2282:
8551:Core/Src/bno055.c ****     }
 18451              		.loc 1 8551 18 view .LVU5087
 18452 0096 54FA80F0 		uxtab	r0, r4, r0
 18453 009a 44B2     		sxtb	r4, r0
 18454              	.LVL2283:
8551:Core/Src/bno055.c ****     }
 18455              		.loc 1 8551 18 view .LVU5088
 18456 009c F3E7     		b	.L1304
 18457              	.LVL2284:
 18458              	.L1307:
8507:Core/Src/bno055.c ****     }
 18459              		.loc 1 8507 16 view .LVU5089
 18460 009e 6FF07E04 		mvn	r4, #126
 18461 00a2 F0E7     		b	.L1304
 18462              	.L1314:
 18463              		.align	2
 18464              	.L1313:
 18465 00a4 00000000 		.word	.LANCHOR0
 18466              		.cfi_endproc
 18467              	.LFE148:
 18469              		.section	.text.bno055_get_intr_rst,"ax",%progbits
ARM GAS  /tmp/cc9kYR4Z.s 			page 523


 18470              		.align	1
 18471              		.global	bno055_get_intr_rst
 18472              		.syntax unified
 18473              		.thumb
 18474              		.thumb_func
 18476              	bno055_get_intr_rst:
 18477              	.LVL2285:
 18478              	.LFB149:
8556:Core/Src/bno055.c **** 
8557:Core/Src/bno055.c **** /*!
8558:Core/Src/bno055.c ****  *  @brief This API used to read the reset interrupt
8559:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8560:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8561:Core/Src/bno055.c ****  *
8562:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8563:Core/Src/bno055.c ****  *
8564:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8565:Core/Src/bno055.c ****  *   ------------ |----------
8566:Core/Src/bno055.c ****  *     0x01       | BNO055_BIT_ENABLE
8567:Core/Src/bno055.c ****  *     0x00       | BNO055_BIT_DISABLE
8568:Core/Src/bno055.c ****  *
8569:Core/Src/bno055.c ****  *  @return results of bus communication function
8570:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8571:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8572:Core/Src/bno055.c ****  *
8573:Core/Src/bno055.c ****  */
8574:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_rst(u8 *intr_rst_u8)
8575:Core/Src/bno055.c **** {
 18479              		.loc 1 8575 1 is_stmt 1 view -0
 18480              		.cfi_startproc
 18481              		@ args = 0, pretend = 0, frame = 8
 18482              		@ frame_needed = 0, uses_anonymous_args = 0
 18483              		.loc 1 8575 1 is_stmt 0 view .LVU5091
 18484 0000 30B5     		push	{r4, r5, lr}
 18485              	.LCFI589:
 18486              		.cfi_def_cfa_offset 12
 18487              		.cfi_offset 4, -12
 18488              		.cfi_offset 5, -8
 18489              		.cfi_offset 14, -4
 18490 0002 83B0     		sub	sp, sp, #12
 18491              	.LCFI590:
 18492              		.cfi_def_cfa_offset 24
8576:Core/Src/bno055.c ****     /* Variable used to return value of
8577:Core/Src/bno055.c ****      * communication routine*/
8578:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18493              		.loc 1 8578 5 is_stmt 1 view .LVU5092
 18494              	.LVL2286:
8579:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18495              		.loc 1 8579 5 view .LVU5093
 18496              		.loc 1 8579 8 is_stmt 0 view .LVU5094
 18497 0004 0023     		movs	r3, #0
 18498 0006 8DF80730 		strb	r3, [sp, #7]
8580:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18499              		.loc 1 8580 5 is_stmt 1 view .LVU5095
 18500              	.LVL2287:
8581:Core/Src/bno055.c **** 
8582:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/cc9kYR4Z.s 			page 524


8583:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18501              		.loc 1 8583 5 view .LVU5096
 18502              		.loc 1 8583 18 is_stmt 0 view .LVU5097
 18503 000a 134B     		ldr	r3, .L1323
 18504 000c 1B68     		ldr	r3, [r3]
 18505              		.loc 1 8583 8 view .LVU5098
 18506 000e E3B1     		cbz	r3, .L1319
 18507 0010 0446     		mov	r4, r0
8584:Core/Src/bno055.c ****     {
8585:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8586:Core/Src/bno055.c ****     }
8587:Core/Src/bno055.c ****     else
8588:Core/Src/bno055.c ****     {
8589:Core/Src/bno055.c ****         /*condition check for page,  reset interrupt is
8590:Core/Src/bno055.c ****          * available in the page zero*/
8591:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18508              		.loc 1 8591 9 is_stmt 1 view .LVU5099
 18509              		.loc 1 8591 21 is_stmt 0 view .LVU5100
 18510 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18511              		.loc 1 8591 12 view .LVU5101
 18512 0014 9BB9     		cbnz	r3, .L1322
 18513              	.LVL2288:
 18514              	.L1317:
8592:Core/Src/bno055.c ****         {
8593:Core/Src/bno055.c ****             /* Write the page zero*/
8594:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8595:Core/Src/bno055.c ****         }
8596:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18515              		.loc 1 8596 53 discriminator 1 view .LVU5102
 18516 0016 104B     		ldr	r3, .L1323
 18517 0018 1B68     		ldr	r3, [r3]
 18518 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18519              		.loc 1 8596 41 discriminator 1 view .LVU5103
 18520 001c C3B9     		cbnz	r3, .L1320
 18521              	.L1318:
8597:Core/Src/bno055.c ****         {
8598:Core/Src/bno055.c ****             /* Read the value of reset interrupt*/
8599:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18522              		.loc 1 8599 13 is_stmt 1 view .LVU5104
 18523              		.loc 1 8599 32 is_stmt 0 view .LVU5105
 18524 001e 0E4B     		ldr	r3, .L1323
 18525 0020 1868     		ldr	r0, [r3]
 18526 0022 0569     		ldr	r5, [r0, #16]
 18527              		.loc 1 8599 24 view .LVU5106
 18528 0024 0123     		movs	r3, #1
 18529 0026 0DF10702 		add	r2, sp, #7
 18530 002a 3F21     		movs	r1, #63
 18531 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18532 002e A847     		blx	r5
 18533              	.LVL2289:
8600:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8601:Core/Src/bno055.c ****                                                       &data_u8r,
8602:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8603:Core/Src/bno055.c ****             *intr_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_RST);
 18534              		.loc 1 8603 13 is_stmt 1 view .LVU5107
 18535              		.loc 1 8603 28 is_stmt 0 view .LVU5108
 18536 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 525


 18537 0034 C3F38013 		ubfx	r3, r3, #6, #1
 18538              		.loc 1 8603 26 view .LVU5109
 18539 0038 2370     		strb	r3, [r4]
 18540              	.LVL2290:
 18541              	.L1316:
8604:Core/Src/bno055.c ****         }
8605:Core/Src/bno055.c ****         else
8606:Core/Src/bno055.c ****         {
8607:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8608:Core/Src/bno055.c ****         }
8609:Core/Src/bno055.c ****     }
8610:Core/Src/bno055.c **** 
8611:Core/Src/bno055.c ****     return com_rslt;
8612:Core/Src/bno055.c **** }
 18542              		.loc 1 8612 1 view .LVU5110
 18543 003a 03B0     		add	sp, sp, #12
 18544              	.LCFI591:
 18545              		.cfi_remember_state
 18546              		.cfi_def_cfa_offset 12
 18547              		@ sp needed
 18548 003c 30BD     		pop	{r4, r5, pc}
 18549              	.LVL2291:
 18550              	.L1322:
 18551              	.LCFI592:
 18552              		.cfi_restore_state
8594:Core/Src/bno055.c ****         }
 18553              		.loc 1 8594 13 is_stmt 1 view .LVU5111
8594:Core/Src/bno055.c ****         }
 18554              		.loc 1 8594 23 is_stmt 0 view .LVU5112
 18555 003e 0020     		movs	r0, #0
 18556              	.LVL2292:
8594:Core/Src/bno055.c ****         }
 18557              		.loc 1 8594 23 view .LVU5113
 18558 0040 FFF7FEFF 		bl	bno055_write_page_id
 18559              	.LVL2293:
8596:Core/Src/bno055.c ****         {
 18560              		.loc 1 8596 9 is_stmt 1 view .LVU5114
8596:Core/Src/bno055.c ****         {
 18561              		.loc 1 8596 12 is_stmt 0 view .LVU5115
 18562 0044 0028     		cmp	r0, #0
 18563 0046 EAD0     		beq	.L1318
 18564 0048 E5E7     		b	.L1317
 18565              	.LVL2294:
 18566              	.L1319:
8585:Core/Src/bno055.c ****     }
 18567              		.loc 1 8585 16 view .LVU5116
 18568 004a 6FF07E00 		mvn	r0, #126
 18569              	.LVL2295:
8585:Core/Src/bno055.c ****     }
 18570              		.loc 1 8585 16 view .LVU5117
 18571 004e F4E7     		b	.L1316
 18572              	.LVL2296:
 18573              	.L1320:
8607:Core/Src/bno055.c ****         }
 18574              		.loc 1 8607 22 view .LVU5118
 18575 0050 4FF0FF30 		mov	r0, #-1
 18576 0054 F1E7     		b	.L1316
ARM GAS  /tmp/cc9kYR4Z.s 			page 526


 18577              	.L1324:
 18578 0056 00BF     		.align	2
 18579              	.L1323:
 18580 0058 00000000 		.word	.LANCHOR0
 18581              		.cfi_endproc
 18582              	.LFE149:
 18584              		.section	.text.bno055_set_intr_rst,"ax",%progbits
 18585              		.align	1
 18586              		.global	bno055_set_intr_rst
 18587              		.syntax unified
 18588              		.thumb
 18589              		.thumb_func
 18591              	bno055_set_intr_rst:
 18592              	.LVL2297:
 18593              	.LFB150:
8613:Core/Src/bno055.c **** 
8614:Core/Src/bno055.c **** /*!
8615:Core/Src/bno055.c ****  *  @brief This API used to write the reset interrupt
8616:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8617:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8618:Core/Src/bno055.c ****  *
8619:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8620:Core/Src/bno055.c ****  *
8621:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8622:Core/Src/bno055.c ****  *   -------------- |----------
8623:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8624:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8625:Core/Src/bno055.c ****  *
8626:Core/Src/bno055.c ****  *  @return results of bus communication function
8627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8629:Core/Src/bno055.c ****  *
8630:Core/Src/bno055.c ****  */
8631:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_rst(u8 intr_rst_u8)
8632:Core/Src/bno055.c **** {
 18594              		.loc 1 8632 1 is_stmt 1 view -0
 18595              		.cfi_startproc
 18596              		@ args = 0, pretend = 0, frame = 8
 18597              		@ frame_needed = 0, uses_anonymous_args = 0
 18598              		.loc 1 8632 1 is_stmt 0 view .LVU5120
 18599 0000 30B5     		push	{r4, r5, lr}
 18600              	.LCFI593:
 18601              		.cfi_def_cfa_offset 12
 18602              		.cfi_offset 4, -12
 18603              		.cfi_offset 5, -8
 18604              		.cfi_offset 14, -4
 18605 0002 83B0     		sub	sp, sp, #12
 18606              	.LCFI594:
 18607              		.cfi_def_cfa_offset 24
8633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18608              		.loc 1 8633 5 is_stmt 1 view .LVU5121
 18609              	.LVL2298:
8634:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18610              		.loc 1 8634 5 view .LVU5122
 18611              		.loc 1 8634 8 is_stmt 0 view .LVU5123
 18612 0004 0023     		movs	r3, #0
 18613 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/cc9kYR4Z.s 			page 527


8635:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18614              		.loc 1 8635 5 is_stmt 1 view .LVU5124
 18615              	.LVL2299:
8636:Core/Src/bno055.c **** 
8637:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8638:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18616              		.loc 1 8638 5 view .LVU5125
 18617              		.loc 1 8638 18 is_stmt 0 view .LVU5126
 18618 000a 1E4B     		ldr	r3, .L1333
 18619 000c 1B68     		ldr	r3, [r3]
 18620              		.loc 1 8638 8 view .LVU5127
 18621 000e 002B     		cmp	r3, #0
 18622 0010 31D0     		beq	.L1329
 18623 0012 0446     		mov	r4, r0
8639:Core/Src/bno055.c ****     {
8640:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8641:Core/Src/bno055.c ****     }
8642:Core/Src/bno055.c ****     else
8643:Core/Src/bno055.c ****     {
8644:Core/Src/bno055.c ****         /*condition check for page, reset interrupt
8645:Core/Src/bno055.c ****          * available in the page zero*/
8646:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18624              		.loc 1 8646 9 is_stmt 1 view .LVU5128
 18625              		.loc 1 8646 21 is_stmt 0 view .LVU5129
 18626 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18627              		.loc 1 8646 12 view .LVU5130
 18628 0016 43BB     		cbnz	r3, .L1332
 18629              	.LVL2300:
 18630              	.L1327:
8647:Core/Src/bno055.c ****         {
8648:Core/Src/bno055.c ****             /* Write the page zero*/
8649:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8650:Core/Src/bno055.c ****         }
8651:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18631              		.loc 1 8651 53 discriminator 1 view .LVU5131
 18632 0018 1A4B     		ldr	r3, .L1333
 18633 001a 1B68     		ldr	r3, [r3]
 18634 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18635              		.loc 1 8651 41 discriminator 1 view .LVU5132
 18636 001e 6BBB     		cbnz	r3, .L1330
 18637              	.L1328:
8652:Core/Src/bno055.c ****         {
8653:Core/Src/bno055.c ****             /* Write the value of reset interrupt */
8654:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18638              		.loc 1 8654 13 is_stmt 1 view .LVU5133
 18639              		.loc 1 8654 32 is_stmt 0 view .LVU5134
 18640 0020 184B     		ldr	r3, .L1333
 18641 0022 1868     		ldr	r0, [r3]
 18642 0024 0569     		ldr	r5, [r0, #16]
 18643              		.loc 1 8654 24 view .LVU5135
 18644 0026 0123     		movs	r3, #1
 18645 0028 0DF10702 		add	r2, sp, #7
 18646 002c 3F21     		movs	r1, #63
 18647 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18648 0030 A847     		blx	r5
 18649              	.LVL2301:
8655:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 528


8656:Core/Src/bno055.c ****                                                       &data_u8r,
8657:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8658:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18650              		.loc 1 8658 13 is_stmt 1 view .LVU5136
 18651              		.loc 1 8658 16 is_stmt 0 view .LVU5137
 18652 0032 0546     		mov	r5, r0
 18653 0034 B0B9     		cbnz	r0, .L1326
8659:Core/Src/bno055.c ****             {
8660:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_INTR_RST, intr_rst_u8);
 18654              		.loc 1 8660 17 is_stmt 1 view .LVU5138
 18655              		.loc 1 8660 28 is_stmt 0 view .LVU5139
 18656 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18657 003a 23F04003 		bic	r3, r3, #64
 18658 003e 5BB2     		sxtb	r3, r3
 18659 0040 A401     		lsls	r4, r4, #6
 18660 0042 04F04004 		and	r4, r4, #64
 18661 0046 2343     		orrs	r3, r3, r4
 18662              		.loc 1 8660 26 view .LVU5140
 18663 0048 8DF80730 		strb	r3, [sp, #7]
8661:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18664              		.loc 1 8661 17 is_stmt 1 view .LVU5141
 18665              		.loc 1 8661 37 is_stmt 0 view .LVU5142
 18666 004c 0D4B     		ldr	r3, .L1333
 18667 004e 1868     		ldr	r0, [r3]
 18668              	.LVL2302:
 18669              		.loc 1 8661 37 view .LVU5143
 18670 0050 C468     		ldr	r4, [r0, #12]
 18671              		.loc 1 8661 29 view .LVU5144
 18672 0052 0123     		movs	r3, #1
 18673 0054 0DF10702 		add	r2, sp, #7
 18674 0058 3F21     		movs	r1, #63
 18675 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18676 005c A047     		blx	r4
 18677              	.LVL2303:
 18678              		.loc 1 8661 26 view .LVU5145
 18679 005e 55FA80F0 		uxtab	r0, r5, r0
 18680 0062 45B2     		sxtb	r5, r0
 18681              	.LVL2304:
 18682              	.L1326:
8662:Core/Src/bno055.c ****                                                             BNO055_INTR_RST_REG,
8663:Core/Src/bno055.c ****                                                             &data_u8r,
8664:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8665:Core/Src/bno055.c ****             }
8666:Core/Src/bno055.c ****         }
8667:Core/Src/bno055.c ****         else
8668:Core/Src/bno055.c ****         {
8669:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8670:Core/Src/bno055.c ****         }
8671:Core/Src/bno055.c ****     }
8672:Core/Src/bno055.c **** 
8673:Core/Src/bno055.c ****     return com_rslt;
8674:Core/Src/bno055.c **** }
 18683              		.loc 1 8674 1 view .LVU5146
 18684 0064 2846     		mov	r0, r5
 18685 0066 03B0     		add	sp, sp, #12
 18686              	.LCFI595:
 18687              		.cfi_remember_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 529


 18688              		.cfi_def_cfa_offset 12
 18689              		@ sp needed
 18690 0068 30BD     		pop	{r4, r5, pc}
 18691              	.LVL2305:
 18692              	.L1332:
 18693              	.LCFI596:
 18694              		.cfi_restore_state
8649:Core/Src/bno055.c ****         }
 18695              		.loc 1 8649 13 is_stmt 1 view .LVU5147
8649:Core/Src/bno055.c ****         }
 18696              		.loc 1 8649 23 is_stmt 0 view .LVU5148
 18697 006a 0020     		movs	r0, #0
 18698              	.LVL2306:
8649:Core/Src/bno055.c ****         }
 18699              		.loc 1 8649 23 view .LVU5149
 18700 006c FFF7FEFF 		bl	bno055_write_page_id
 18701              	.LVL2307:
8651:Core/Src/bno055.c ****         {
 18702              		.loc 1 8651 9 is_stmt 1 view .LVU5150
8651:Core/Src/bno055.c ****         {
 18703              		.loc 1 8651 12 is_stmt 0 view .LVU5151
 18704 0070 0028     		cmp	r0, #0
 18705 0072 D5D0     		beq	.L1328
 18706 0074 D0E7     		b	.L1327
 18707              	.LVL2308:
 18708              	.L1329:
8640:Core/Src/bno055.c ****     }
 18709              		.loc 1 8640 16 view .LVU5152
 18710 0076 6FF07E05 		mvn	r5, #126
 18711 007a F3E7     		b	.L1326
 18712              	.LVL2309:
 18713              	.L1330:
8669:Core/Src/bno055.c ****         }
 18714              		.loc 1 8669 22 view .LVU5153
 18715 007c 4FF0FF35 		mov	r5, #-1
 18716 0080 F0E7     		b	.L1326
 18717              	.L1334:
 18718 0082 00BF     		.align	2
 18719              	.L1333:
 18720 0084 00000000 		.word	.LANCHOR0
 18721              		.cfi_endproc
 18722              	.LFE150:
 18724              		.section	.text.bno055_get_clk_src,"ax",%progbits
 18725              		.align	1
 18726              		.global	bno055_get_clk_src
 18727              		.syntax unified
 18728              		.thumb
 18729              		.thumb_func
 18731              	bno055_get_clk_src:
 18732              	.LVL2310:
 18733              	.LFB151:
8675:Core/Src/bno055.c **** 
8676:Core/Src/bno055.c **** /*!
8677:Core/Src/bno055.c ****  *  @brief This API used to read the clk source
8678:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8679:Core/Src/bno055.c ****  *
8680:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
ARM GAS  /tmp/cc9kYR4Z.s 			page 530


8681:Core/Src/bno055.c ****  *
8682:Core/Src/bno055.c ****  *   clk_src_u8   | result
8683:Core/Src/bno055.c ****  *   -------------- |----------
8684:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8685:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8686:Core/Src/bno055.c ****  *
8687:Core/Src/bno055.c ****  *  @return results of bus communication function
8688:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8689:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8690:Core/Src/bno055.c ****  *
8691:Core/Src/bno055.c ****  */
8692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_clk_src(u8 *clk_src_u8)
8693:Core/Src/bno055.c **** {
 18734              		.loc 1 8693 1 is_stmt 1 view -0
 18735              		.cfi_startproc
 18736              		@ args = 0, pretend = 0, frame = 8
 18737              		@ frame_needed = 0, uses_anonymous_args = 0
 18738              		.loc 1 8693 1 is_stmt 0 view .LVU5155
 18739 0000 30B5     		push	{r4, r5, lr}
 18740              	.LCFI597:
 18741              		.cfi_def_cfa_offset 12
 18742              		.cfi_offset 4, -12
 18743              		.cfi_offset 5, -8
 18744              		.cfi_offset 14, -4
 18745 0002 83B0     		sub	sp, sp, #12
 18746              	.LCFI598:
 18747              		.cfi_def_cfa_offset 24
8694:Core/Src/bno055.c ****     /* Variable used to return value of
8695:Core/Src/bno055.c ****      * communication routine*/
8696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18748              		.loc 1 8696 5 is_stmt 1 view .LVU5156
 18749              	.LVL2311:
8697:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18750              		.loc 1 8697 5 view .LVU5157
 18751              		.loc 1 8697 8 is_stmt 0 view .LVU5158
 18752 0004 0023     		movs	r3, #0
 18753 0006 8DF80730 		strb	r3, [sp, #7]
8698:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18754              		.loc 1 8698 5 is_stmt 1 view .LVU5159
 18755              	.LVL2312:
8699:Core/Src/bno055.c **** 
8700:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8701:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18756              		.loc 1 8701 5 view .LVU5160
 18757              		.loc 1 8701 18 is_stmt 0 view .LVU5161
 18758 000a 124B     		ldr	r3, .L1343
 18759 000c 1B68     		ldr	r3, [r3]
 18760              		.loc 1 8701 8 view .LVU5162
 18761 000e DBB1     		cbz	r3, .L1339
 18762 0010 0446     		mov	r4, r0
8702:Core/Src/bno055.c ****     {
8703:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8704:Core/Src/bno055.c ****     }
8705:Core/Src/bno055.c ****     else
8706:Core/Src/bno055.c ****     {
8707:Core/Src/bno055.c ****         /*condition check for page, clk source is
8708:Core/Src/bno055.c ****          * available in the page zero*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 531


8709:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18763              		.loc 1 8709 9 is_stmt 1 view .LVU5163
 18764              		.loc 1 8709 21 is_stmt 0 view .LVU5164
 18765 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18766              		.loc 1 8709 12 view .LVU5165
 18767 0014 93B9     		cbnz	r3, .L1342
 18768              	.LVL2313:
 18769              	.L1337:
8710:Core/Src/bno055.c ****         {
8711:Core/Src/bno055.c ****             /* Write the page zero*/
8712:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8713:Core/Src/bno055.c ****         }
8714:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18770              		.loc 1 8714 53 discriminator 1 view .LVU5166
 18771 0016 0F4B     		ldr	r3, .L1343
 18772 0018 1B68     		ldr	r3, [r3]
 18773 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18774              		.loc 1 8714 41 discriminator 1 view .LVU5167
 18775 001c BBB9     		cbnz	r3, .L1340
 18776              	.L1338:
8715:Core/Src/bno055.c ****         {
8716:Core/Src/bno055.c ****             /* Read the value of clk source */
8717:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18777              		.loc 1 8717 13 is_stmt 1 view .LVU5168
 18778              		.loc 1 8717 32 is_stmt 0 view .LVU5169
 18779 001e 0D4B     		ldr	r3, .L1343
 18780 0020 1868     		ldr	r0, [r3]
 18781 0022 0569     		ldr	r5, [r0, #16]
 18782              		.loc 1 8717 24 view .LVU5170
 18783 0024 0123     		movs	r3, #1
 18784 0026 0DF10702 		add	r2, sp, #7
 18785 002a 3F21     		movs	r1, #63
 18786 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18787 002e A847     		blx	r5
 18788              	.LVL2314:
8718:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8719:Core/Src/bno055.c ****                                                       &data_u8r,
8720:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8721:Core/Src/bno055.c ****             *clk_src_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_CLK_SRC);
 18789              		.loc 1 8721 13 is_stmt 1 view .LVU5171
 18790              		.loc 1 8721 27 is_stmt 0 view .LVU5172
 18791 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18792 0034 DB09     		lsrs	r3, r3, #7
 18793              		.loc 1 8721 25 view .LVU5173
 18794 0036 2370     		strb	r3, [r4]
 18795              	.LVL2315:
 18796              	.L1336:
8722:Core/Src/bno055.c ****         }
8723:Core/Src/bno055.c ****         else
8724:Core/Src/bno055.c ****         {
8725:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8726:Core/Src/bno055.c ****         }
8727:Core/Src/bno055.c ****     }
8728:Core/Src/bno055.c **** 
8729:Core/Src/bno055.c ****     return com_rslt;
8730:Core/Src/bno055.c **** }
 18797              		.loc 1 8730 1 view .LVU5174
ARM GAS  /tmp/cc9kYR4Z.s 			page 532


 18798 0038 03B0     		add	sp, sp, #12
 18799              	.LCFI599:
 18800              		.cfi_remember_state
 18801              		.cfi_def_cfa_offset 12
 18802              		@ sp needed
 18803 003a 30BD     		pop	{r4, r5, pc}
 18804              	.LVL2316:
 18805              	.L1342:
 18806              	.LCFI600:
 18807              		.cfi_restore_state
8712:Core/Src/bno055.c ****         }
 18808              		.loc 1 8712 13 is_stmt 1 view .LVU5175
8712:Core/Src/bno055.c ****         }
 18809              		.loc 1 8712 23 is_stmt 0 view .LVU5176
 18810 003c 0020     		movs	r0, #0
 18811              	.LVL2317:
8712:Core/Src/bno055.c ****         }
 18812              		.loc 1 8712 23 view .LVU5177
 18813 003e FFF7FEFF 		bl	bno055_write_page_id
 18814              	.LVL2318:
8714:Core/Src/bno055.c ****         {
 18815              		.loc 1 8714 9 is_stmt 1 view .LVU5178
8714:Core/Src/bno055.c ****         {
 18816              		.loc 1 8714 12 is_stmt 0 view .LVU5179
 18817 0042 0028     		cmp	r0, #0
 18818 0044 EBD0     		beq	.L1338
 18819 0046 E6E7     		b	.L1337
 18820              	.LVL2319:
 18821              	.L1339:
8703:Core/Src/bno055.c ****     }
 18822              		.loc 1 8703 16 view .LVU5180
 18823 0048 6FF07E00 		mvn	r0, #126
 18824              	.LVL2320:
8703:Core/Src/bno055.c ****     }
 18825              		.loc 1 8703 16 view .LVU5181
 18826 004c F4E7     		b	.L1336
 18827              	.LVL2321:
 18828              	.L1340:
8725:Core/Src/bno055.c ****         }
 18829              		.loc 1 8725 22 view .LVU5182
 18830 004e 4FF0FF30 		mov	r0, #-1
 18831 0052 F1E7     		b	.L1336
 18832              	.L1344:
 18833              		.align	2
 18834              	.L1343:
 18835 0054 00000000 		.word	.LANCHOR0
 18836              		.cfi_endproc
 18837              	.LFE151:
 18839              		.section	.text.bno055_set_clk_src,"ax",%progbits
 18840              		.align	1
 18841              		.global	bno055_set_clk_src
 18842              		.syntax unified
 18843              		.thumb
 18844              		.thumb_func
 18846              	bno055_set_clk_src:
 18847              	.LVL2322:
 18848              	.LFB152:
ARM GAS  /tmp/cc9kYR4Z.s 			page 533


8731:Core/Src/bno055.c **** 
8732:Core/Src/bno055.c **** /*!
8733:Core/Src/bno055.c ****  *  @brief This API used to write the clk source
8734:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8735:Core/Src/bno055.c ****  *
8736:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8737:Core/Src/bno055.c ****  *
8738:Core/Src/bno055.c ****  *   clk_src_u8   | result
8739:Core/Src/bno055.c ****  *   -------------- |----------
8740:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8741:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8742:Core/Src/bno055.c ****  *
8743:Core/Src/bno055.c ****  *  @return results of bus communication function
8744:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8745:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8746:Core/Src/bno055.c ****  *
8747:Core/Src/bno055.c ****  */
8748:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_clk_src(u8 clk_src_u8)
8749:Core/Src/bno055.c **** {
 18849              		.loc 1 8749 1 is_stmt 1 view -0
 18850              		.cfi_startproc
 18851              		@ args = 0, pretend = 0, frame = 8
 18852              		@ frame_needed = 0, uses_anonymous_args = 0
 18853              		.loc 1 8749 1 is_stmt 0 view .LVU5184
 18854 0000 30B5     		push	{r4, r5, lr}
 18855              	.LCFI601:
 18856              		.cfi_def_cfa_offset 12
 18857              		.cfi_offset 4, -12
 18858              		.cfi_offset 5, -8
 18859              		.cfi_offset 14, -4
 18860 0002 83B0     		sub	sp, sp, #12
 18861              	.LCFI602:
 18862              		.cfi_def_cfa_offset 24
8750:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18863              		.loc 1 8750 5 is_stmt 1 view .LVU5185
 18864              	.LVL2323:
8751:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18865              		.loc 1 8751 5 view .LVU5186
 18866              		.loc 1 8751 8 is_stmt 0 view .LVU5187
 18867 0004 0023     		movs	r3, #0
 18868 0006 8DF80730 		strb	r3, [sp, #7]
8752:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18869              		.loc 1 8752 5 is_stmt 1 view .LVU5188
 18870              	.LVL2324:
8753:Core/Src/bno055.c **** 
8754:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8755:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18871              		.loc 1 8755 5 view .LVU5189
 18872              		.loc 1 8755 18 is_stmt 0 view .LVU5190
 18873 000a 1C4B     		ldr	r3, .L1353
 18874 000c 1B68     		ldr	r3, [r3]
 18875              		.loc 1 8755 8 view .LVU5191
 18876 000e 002B     		cmp	r3, #0
 18877 0010 2ED0     		beq	.L1349
 18878 0012 0446     		mov	r4, r0
8756:Core/Src/bno055.c ****     {
8757:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 534


8758:Core/Src/bno055.c ****     }
8759:Core/Src/bno055.c ****     else
8760:Core/Src/bno055.c ****     {
8761:Core/Src/bno055.c ****         /*condition check for page, clk source is
8762:Core/Src/bno055.c ****          * available in the page zero*/
8763:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18879              		.loc 1 8763 9 is_stmt 1 view .LVU5192
 18880              		.loc 1 8763 21 is_stmt 0 view .LVU5193
 18881 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18882              		.loc 1 8763 12 view .LVU5194
 18883 0016 2BBB     		cbnz	r3, .L1352
 18884              	.LVL2325:
 18885              	.L1347:
8764:Core/Src/bno055.c ****         {
8765:Core/Src/bno055.c ****             /* Write the page zero*/
8766:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8767:Core/Src/bno055.c ****         }
8768:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18886              		.loc 1 8768 53 discriminator 1 view .LVU5195
 18887 0018 184B     		ldr	r3, .L1353
 18888 001a 1B68     		ldr	r3, [r3]
 18889 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18890              		.loc 1 8768 41 discriminator 1 view .LVU5196
 18891 001e 53BB     		cbnz	r3, .L1350
 18892              	.L1348:
8769:Core/Src/bno055.c ****         {
8770:Core/Src/bno055.c ****             /* Write the value of clk source */
8771:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18893              		.loc 1 8771 13 is_stmt 1 view .LVU5197
 18894              		.loc 1 8771 32 is_stmt 0 view .LVU5198
 18895 0020 164B     		ldr	r3, .L1353
 18896 0022 1868     		ldr	r0, [r3]
 18897 0024 0569     		ldr	r5, [r0, #16]
 18898              		.loc 1 8771 24 view .LVU5199
 18899 0026 0123     		movs	r3, #1
 18900 0028 0DF10702 		add	r2, sp, #7
 18901 002c 3F21     		movs	r1, #63
 18902 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18903 0030 A847     		blx	r5
 18904              	.LVL2326:
8772:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8773:Core/Src/bno055.c ****                                                       &data_u8r,
8774:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8775:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18905              		.loc 1 8775 13 is_stmt 1 view .LVU5200
 18906              		.loc 1 8775 16 is_stmt 0 view .LVU5201
 18907 0032 0546     		mov	r5, r0
 18908 0034 98B9     		cbnz	r0, .L1346
8776:Core/Src/bno055.c ****             {
8777:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_CLK_SRC, clk_src_u8);
 18909              		.loc 1 8777 17 is_stmt 1 view .LVU5202
 18910              		.loc 1 8777 28 is_stmt 0 view .LVU5203
 18911 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18912 003a 03F07F03 		and	r3, r3, #127
 18913 003e 43EAC413 		orr	r3, r3, r4, lsl #7
 18914              		.loc 1 8777 26 view .LVU5204
 18915 0042 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/cc9kYR4Z.s 			page 535


8778:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18916              		.loc 1 8778 17 is_stmt 1 view .LVU5205
 18917              		.loc 1 8778 37 is_stmt 0 view .LVU5206
 18918 0046 0D4B     		ldr	r3, .L1353
 18919 0048 1868     		ldr	r0, [r3]
 18920              	.LVL2327:
 18921              		.loc 1 8778 37 view .LVU5207
 18922 004a C468     		ldr	r4, [r0, #12]
 18923              		.loc 1 8778 29 view .LVU5208
 18924 004c 0123     		movs	r3, #1
 18925 004e 0DF10702 		add	r2, sp, #7
 18926 0052 3F21     		movs	r1, #63
 18927 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18928 0056 A047     		blx	r4
 18929              	.LVL2328:
 18930              		.loc 1 8778 26 view .LVU5209
 18931 0058 55FA80F0 		uxtab	r0, r5, r0
 18932 005c 45B2     		sxtb	r5, r0
 18933              	.LVL2329:
 18934              	.L1346:
8779:Core/Src/bno055.c ****                                                             BNO055_CLK_SRC_REG,
8780:Core/Src/bno055.c ****                                                             &data_u8r,
8781:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8782:Core/Src/bno055.c ****             }
8783:Core/Src/bno055.c ****         }
8784:Core/Src/bno055.c ****         else
8785:Core/Src/bno055.c ****         {
8786:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8787:Core/Src/bno055.c ****         }
8788:Core/Src/bno055.c ****     }
8789:Core/Src/bno055.c **** 
8790:Core/Src/bno055.c ****     return com_rslt;
8791:Core/Src/bno055.c **** }
 18935              		.loc 1 8791 1 view .LVU5210
 18936 005e 2846     		mov	r0, r5
 18937 0060 03B0     		add	sp, sp, #12
 18938              	.LCFI603:
 18939              		.cfi_remember_state
 18940              		.cfi_def_cfa_offset 12
 18941              		@ sp needed
 18942 0062 30BD     		pop	{r4, r5, pc}
 18943              	.LVL2330:
 18944              	.L1352:
 18945              	.LCFI604:
 18946              		.cfi_restore_state
8766:Core/Src/bno055.c ****         }
 18947              		.loc 1 8766 13 is_stmt 1 view .LVU5211
8766:Core/Src/bno055.c ****         }
 18948              		.loc 1 8766 23 is_stmt 0 view .LVU5212
 18949 0064 0020     		movs	r0, #0
 18950              	.LVL2331:
8766:Core/Src/bno055.c ****         }
 18951              		.loc 1 8766 23 view .LVU5213
 18952 0066 FFF7FEFF 		bl	bno055_write_page_id
 18953              	.LVL2332:
8768:Core/Src/bno055.c ****         {
 18954              		.loc 1 8768 9 is_stmt 1 view .LVU5214
ARM GAS  /tmp/cc9kYR4Z.s 			page 536


8768:Core/Src/bno055.c ****         {
 18955              		.loc 1 8768 12 is_stmt 0 view .LVU5215
 18956 006a 0028     		cmp	r0, #0
 18957 006c D8D0     		beq	.L1348
 18958 006e D3E7     		b	.L1347
 18959              	.LVL2333:
 18960              	.L1349:
8757:Core/Src/bno055.c ****     }
 18961              		.loc 1 8757 16 view .LVU5216
 18962 0070 6FF07E05 		mvn	r5, #126
 18963 0074 F3E7     		b	.L1346
 18964              	.LVL2334:
 18965              	.L1350:
8786:Core/Src/bno055.c ****         }
 18966              		.loc 1 8786 22 view .LVU5217
 18967 0076 4FF0FF35 		mov	r5, #-1
 18968 007a F0E7     		b	.L1346
 18969              	.L1354:
 18970              		.align	2
 18971              	.L1353:
 18972 007c 00000000 		.word	.LANCHOR0
 18973              		.cfi_endproc
 18974              	.LFE152:
 18976              		.section	.text.bno055_get_sys_rst,"ax",%progbits
 18977              		.align	1
 18978              		.global	bno055_get_sys_rst
 18979              		.syntax unified
 18980              		.thumb
 18981              		.thumb_func
 18983              	bno055_get_sys_rst:
 18984              	.LVL2335:
 18985              	.LFB153:
8792:Core/Src/bno055.c **** 
8793:Core/Src/bno055.c **** /*!
8794:Core/Src/bno055.c ****  *  @brief This API used to read the reset system
8795:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8796:Core/Src/bno055.c ****  *
8797:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8798:Core/Src/bno055.c ****  *
8799:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8800:Core/Src/bno055.c ****  *   -------------- |----------
8801:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8802:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8803:Core/Src/bno055.c ****  *
8804:Core/Src/bno055.c ****  *  @return results of bus communication function
8805:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8806:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8807:Core/Src/bno055.c ****  *
8808:Core/Src/bno055.c ****  *  @note It resets the whole system
8809:Core/Src/bno055.c ****  */
8810:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_rst(u8 *sys_rst_u8)
8811:Core/Src/bno055.c **** {
 18986              		.loc 1 8811 1 is_stmt 1 view -0
 18987              		.cfi_startproc
 18988              		@ args = 0, pretend = 0, frame = 8
 18989              		@ frame_needed = 0, uses_anonymous_args = 0
 18990              		.loc 1 8811 1 is_stmt 0 view .LVU5219
ARM GAS  /tmp/cc9kYR4Z.s 			page 537


 18991 0000 30B5     		push	{r4, r5, lr}
 18992              	.LCFI605:
 18993              		.cfi_def_cfa_offset 12
 18994              		.cfi_offset 4, -12
 18995              		.cfi_offset 5, -8
 18996              		.cfi_offset 14, -4
 18997 0002 83B0     		sub	sp, sp, #12
 18998              	.LCFI606:
 18999              		.cfi_def_cfa_offset 24
8812:Core/Src/bno055.c ****     /* Variable used to return value of
8813:Core/Src/bno055.c ****      * communication routine*/
8814:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19000              		.loc 1 8814 5 is_stmt 1 view .LVU5220
 19001              	.LVL2336:
8815:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19002              		.loc 1 8815 5 view .LVU5221
 19003              		.loc 1 8815 8 is_stmt 0 view .LVU5222
 19004 0004 0023     		movs	r3, #0
 19005 0006 8DF80730 		strb	r3, [sp, #7]
8816:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19006              		.loc 1 8816 5 is_stmt 1 view .LVU5223
 19007              	.LVL2337:
8817:Core/Src/bno055.c **** 
8818:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8819:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19008              		.loc 1 8819 5 view .LVU5224
 19009              		.loc 1 8819 18 is_stmt 0 view .LVU5225
 19010 000a 134B     		ldr	r3, .L1363
 19011 000c 1B68     		ldr	r3, [r3]
 19012              		.loc 1 8819 8 view .LVU5226
 19013 000e E3B1     		cbz	r3, .L1359
 19014 0010 0446     		mov	r4, r0
8820:Core/Src/bno055.c ****     {
8821:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8822:Core/Src/bno055.c ****     }
8823:Core/Src/bno055.c ****     else
8824:Core/Src/bno055.c ****     {
8825:Core/Src/bno055.c ****         /*condition check for page, reset system is
8826:Core/Src/bno055.c ****          * available in the page zero*/
8827:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19015              		.loc 1 8827 9 is_stmt 1 view .LVU5227
 19016              		.loc 1 8827 21 is_stmt 0 view .LVU5228
 19017 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19018              		.loc 1 8827 12 view .LVU5229
 19019 0014 9BB9     		cbnz	r3, .L1362
 19020              	.LVL2338:
 19021              	.L1357:
8828:Core/Src/bno055.c ****         {
8829:Core/Src/bno055.c ****             /* Write the page zero*/
8830:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8831:Core/Src/bno055.c ****         }
8832:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19022              		.loc 1 8832 53 discriminator 1 view .LVU5230
 19023 0016 104B     		ldr	r3, .L1363
 19024 0018 1B68     		ldr	r3, [r3]
 19025 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19026              		.loc 1 8832 41 discriminator 1 view .LVU5231
ARM GAS  /tmp/cc9kYR4Z.s 			page 538


 19027 001c C3B9     		cbnz	r3, .L1360
 19028              	.L1358:
8833:Core/Src/bno055.c ****         {
8834:Core/Src/bno055.c ****             /* Read the value of reset system */
8835:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19029              		.loc 1 8835 13 is_stmt 1 view .LVU5232
 19030              		.loc 1 8835 32 is_stmt 0 view .LVU5233
 19031 001e 0E4B     		ldr	r3, .L1363
 19032 0020 1868     		ldr	r0, [r3]
 19033 0022 0569     		ldr	r5, [r0, #16]
 19034              		.loc 1 8835 24 view .LVU5234
 19035 0024 0123     		movs	r3, #1
 19036 0026 0DF10702 		add	r2, sp, #7
 19037 002a 3F21     		movs	r1, #63
 19038 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19039 002e A847     		blx	r5
 19040              	.LVL2339:
8836:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8837:Core/Src/bno055.c ****                                                       &data_u8r,
8838:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8839:Core/Src/bno055.c ****             *sys_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_RST);
 19041              		.loc 1 8839 13 is_stmt 1 view .LVU5235
 19042              		.loc 1 8839 27 is_stmt 0 view .LVU5236
 19043 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19044 0034 C3F34013 		ubfx	r3, r3, #5, #1
 19045              		.loc 1 8839 25 view .LVU5237
 19046 0038 2370     		strb	r3, [r4]
 19047              	.LVL2340:
 19048              	.L1356:
8840:Core/Src/bno055.c ****         }
8841:Core/Src/bno055.c ****         else
8842:Core/Src/bno055.c ****         {
8843:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8844:Core/Src/bno055.c ****         }
8845:Core/Src/bno055.c ****     }
8846:Core/Src/bno055.c **** 
8847:Core/Src/bno055.c ****     return com_rslt;
8848:Core/Src/bno055.c **** }
 19049              		.loc 1 8848 1 view .LVU5238
 19050 003a 03B0     		add	sp, sp, #12
 19051              	.LCFI607:
 19052              		.cfi_remember_state
 19053              		.cfi_def_cfa_offset 12
 19054              		@ sp needed
 19055 003c 30BD     		pop	{r4, r5, pc}
 19056              	.LVL2341:
 19057              	.L1362:
 19058              	.LCFI608:
 19059              		.cfi_restore_state
8830:Core/Src/bno055.c ****         }
 19060              		.loc 1 8830 13 is_stmt 1 view .LVU5239
8830:Core/Src/bno055.c ****         }
 19061              		.loc 1 8830 23 is_stmt 0 view .LVU5240
 19062 003e 0020     		movs	r0, #0
 19063              	.LVL2342:
8830:Core/Src/bno055.c ****         }
 19064              		.loc 1 8830 23 view .LVU5241
ARM GAS  /tmp/cc9kYR4Z.s 			page 539


 19065 0040 FFF7FEFF 		bl	bno055_write_page_id
 19066              	.LVL2343:
8832:Core/Src/bno055.c ****         {
 19067              		.loc 1 8832 9 is_stmt 1 view .LVU5242
8832:Core/Src/bno055.c ****         {
 19068              		.loc 1 8832 12 is_stmt 0 view .LVU5243
 19069 0044 0028     		cmp	r0, #0
 19070 0046 EAD0     		beq	.L1358
 19071 0048 E5E7     		b	.L1357
 19072              	.LVL2344:
 19073              	.L1359:
8821:Core/Src/bno055.c ****     }
 19074              		.loc 1 8821 16 view .LVU5244
 19075 004a 6FF07E00 		mvn	r0, #126
 19076              	.LVL2345:
8821:Core/Src/bno055.c ****     }
 19077              		.loc 1 8821 16 view .LVU5245
 19078 004e F4E7     		b	.L1356
 19079              	.LVL2346:
 19080              	.L1360:
8843:Core/Src/bno055.c ****         }
 19081              		.loc 1 8843 22 view .LVU5246
 19082 0050 4FF0FF30 		mov	r0, #-1
 19083 0054 F1E7     		b	.L1356
 19084              	.L1364:
 19085 0056 00BF     		.align	2
 19086              	.L1363:
 19087 0058 00000000 		.word	.LANCHOR0
 19088              		.cfi_endproc
 19089              	.LFE153:
 19091              		.section	.text.bno055_set_sys_rst,"ax",%progbits
 19092              		.align	1
 19093              		.global	bno055_set_sys_rst
 19094              		.syntax unified
 19095              		.thumb
 19096              		.thumb_func
 19098              	bno055_set_sys_rst:
 19099              	.LVL2347:
 19100              	.LFB154:
8849:Core/Src/bno055.c **** 
8850:Core/Src/bno055.c **** /*!
8851:Core/Src/bno055.c ****  *  @brief This API used to write the reset system
8852:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8853:Core/Src/bno055.c ****  *
8854:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8855:Core/Src/bno055.c ****  *
8856:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8857:Core/Src/bno055.c ****  *   -------------- |----------
8858:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8859:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8860:Core/Src/bno055.c ****  *
8861:Core/Src/bno055.c ****  *  @return results of bus communication function
8862:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8863:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8864:Core/Src/bno055.c ****  *
8865:Core/Src/bno055.c ****  *  @note It resets the whole system
8866:Core/Src/bno055.c ****  */
ARM GAS  /tmp/cc9kYR4Z.s 			page 540


8867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_sys_rst(u8 sys_rst_u8)
8868:Core/Src/bno055.c **** {
 19101              		.loc 1 8868 1 is_stmt 1 view -0
 19102              		.cfi_startproc
 19103              		@ args = 0, pretend = 0, frame = 8
 19104              		@ frame_needed = 0, uses_anonymous_args = 0
 19105              		.loc 1 8868 1 is_stmt 0 view .LVU5248
 19106 0000 30B5     		push	{r4, r5, lr}
 19107              	.LCFI609:
 19108              		.cfi_def_cfa_offset 12
 19109              		.cfi_offset 4, -12
 19110              		.cfi_offset 5, -8
 19111              		.cfi_offset 14, -4
 19112 0002 83B0     		sub	sp, sp, #12
 19113              	.LCFI610:
 19114              		.cfi_def_cfa_offset 24
8869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19115              		.loc 1 8869 5 is_stmt 1 view .LVU5249
 19116              	.LVL2348:
8870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19117              		.loc 1 8870 5 view .LVU5250
 19118              		.loc 1 8870 8 is_stmt 0 view .LVU5251
 19119 0004 0023     		movs	r3, #0
 19120 0006 8DF80730 		strb	r3, [sp, #7]
8871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19121              		.loc 1 8871 5 is_stmt 1 view .LVU5252
 19122              	.LVL2349:
8872:Core/Src/bno055.c **** 
8873:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8874:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19123              		.loc 1 8874 5 view .LVU5253
 19124              		.loc 1 8874 18 is_stmt 0 view .LVU5254
 19125 000a 1B4B     		ldr	r3, .L1373
 19126 000c 1B68     		ldr	r3, [r3]
 19127              		.loc 1 8874 8 view .LVU5255
 19128 000e 63B3     		cbz	r3, .L1369
 19129 0010 0446     		mov	r4, r0
8875:Core/Src/bno055.c ****     {
8876:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8877:Core/Src/bno055.c ****     }
8878:Core/Src/bno055.c ****     else
8879:Core/Src/bno055.c ****     {
8880:Core/Src/bno055.c ****         /*condition check for page, reset system is
8881:Core/Src/bno055.c ****          * available in the page zero*/
8882:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19130              		.loc 1 8882 9 is_stmt 1 view .LVU5256
 19131              		.loc 1 8882 21 is_stmt 0 view .LVU5257
 19132 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19133              		.loc 1 8882 12 view .LVU5258
 19134 0014 1BBB     		cbnz	r3, .L1372
 19135              	.LVL2350:
 19136              	.L1367:
8883:Core/Src/bno055.c ****         {
8884:Core/Src/bno055.c ****             /* Write the page zero*/
8885:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8886:Core/Src/bno055.c ****         }
8887:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
ARM GAS  /tmp/cc9kYR4Z.s 			page 541


 19137              		.loc 1 8887 53 discriminator 1 view .LVU5259
 19138 0016 184B     		ldr	r3, .L1373
 19139 0018 1B68     		ldr	r3, [r3]
 19140 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19141              		.loc 1 8887 41 discriminator 1 view .LVU5260
 19142 001c 43BB     		cbnz	r3, .L1370
 19143              	.L1368:
8888:Core/Src/bno055.c ****         {
8889:Core/Src/bno055.c ****             /* Write the value of reset system */
8890:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19144              		.loc 1 8890 13 is_stmt 1 view .LVU5261
 19145              		.loc 1 8890 32 is_stmt 0 view .LVU5262
 19146 001e 164B     		ldr	r3, .L1373
 19147 0020 1868     		ldr	r0, [r3]
 19148 0022 0569     		ldr	r5, [r0, #16]
 19149              		.loc 1 8890 24 view .LVU5263
 19150 0024 0123     		movs	r3, #1
 19151 0026 0DF10702 		add	r2, sp, #7
 19152 002a 3F21     		movs	r1, #63
 19153 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19154 002e A847     		blx	r5
 19155              	.LVL2351:
8891:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8892:Core/Src/bno055.c ****                                                       &data_u8r,
8893:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8894:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 19156              		.loc 1 8894 13 is_stmt 1 view .LVU5264
 19157              		.loc 1 8894 16 is_stmt 0 view .LVU5265
 19158 0030 98B9     		cbnz	r0, .L1366
8895:Core/Src/bno055.c ****             {
8896:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SYS_RST, sys_rst_u8);
 19159              		.loc 1 8896 17 is_stmt 1 view .LVU5266
 19160              		.loc 1 8896 28 is_stmt 0 view .LVU5267
 19161 0032 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19162 0036 23F02003 		bic	r3, r3, #32
 19163 003a 5BB2     		sxtb	r3, r3
 19164 003c 6401     		lsls	r4, r4, #5
 19165 003e 04F02004 		and	r4, r4, #32
 19166 0042 2343     		orrs	r3, r3, r4
 19167              		.loc 1 8896 26 view .LVU5268
 19168 0044 8DF80730 		strb	r3, [sp, #7]
8897:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19169              		.loc 1 8897 17 is_stmt 1 view .LVU5269
 19170              		.loc 1 8897 36 is_stmt 0 view .LVU5270
 19171 0048 0B4B     		ldr	r3, .L1373
 19172 004a 1868     		ldr	r0, [r3]
 19173              	.LVL2352:
 19174              		.loc 1 8897 36 view .LVU5271
 19175 004c C468     		ldr	r4, [r0, #12]
 19176              		.loc 1 8897 28 view .LVU5272
 19177 004e 0123     		movs	r3, #1
 19178 0050 0DF10702 		add	r2, sp, #7
 19179 0054 3F21     		movs	r1, #63
 19180 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19181 0058 A047     		blx	r4
 19182              	.LVL2353:
 19183              	.L1366:
ARM GAS  /tmp/cc9kYR4Z.s 			page 542


8898:Core/Src/bno055.c ****                                                            BNO055_SYS_RST_REG,
8899:Core/Src/bno055.c ****                                                            &data_u8r,
8900:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
8901:Core/Src/bno055.c ****             }
8902:Core/Src/bno055.c ****         }
8903:Core/Src/bno055.c ****         else
8904:Core/Src/bno055.c ****         {
8905:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8906:Core/Src/bno055.c ****         }
8907:Core/Src/bno055.c ****     }
8908:Core/Src/bno055.c **** 
8909:Core/Src/bno055.c ****     return com_rslt;
8910:Core/Src/bno055.c **** }
 19184              		.loc 1 8910 1 view .LVU5273
 19185 005a 03B0     		add	sp, sp, #12
 19186              	.LCFI611:
 19187              		.cfi_remember_state
 19188              		.cfi_def_cfa_offset 12
 19189              		@ sp needed
 19190 005c 30BD     		pop	{r4, r5, pc}
 19191              	.LVL2354:
 19192              	.L1372:
 19193              	.LCFI612:
 19194              		.cfi_restore_state
8885:Core/Src/bno055.c ****         }
 19195              		.loc 1 8885 13 is_stmt 1 view .LVU5274
8885:Core/Src/bno055.c ****         }
 19196              		.loc 1 8885 23 is_stmt 0 view .LVU5275
 19197 005e 0020     		movs	r0, #0
 19198              	.LVL2355:
8885:Core/Src/bno055.c ****         }
 19199              		.loc 1 8885 23 view .LVU5276
 19200 0060 FFF7FEFF 		bl	bno055_write_page_id
 19201              	.LVL2356:
8887:Core/Src/bno055.c ****         {
 19202              		.loc 1 8887 9 is_stmt 1 view .LVU5277
8887:Core/Src/bno055.c ****         {
 19203              		.loc 1 8887 12 is_stmt 0 view .LVU5278
 19204 0064 0028     		cmp	r0, #0
 19205 0066 DAD0     		beq	.L1368
 19206 0068 D5E7     		b	.L1367
 19207              	.LVL2357:
 19208              	.L1369:
8876:Core/Src/bno055.c ****     }
 19209              		.loc 1 8876 16 view .LVU5279
 19210 006a 6FF07E00 		mvn	r0, #126
 19211              	.LVL2358:
8876:Core/Src/bno055.c ****     }
 19212              		.loc 1 8876 16 view .LVU5280
 19213 006e F4E7     		b	.L1366
 19214              	.LVL2359:
 19215              	.L1370:
8905:Core/Src/bno055.c ****         }
 19216              		.loc 1 8905 22 view .LVU5281
 19217 0070 4FF0FF30 		mov	r0, #-1
 19218 0074 F1E7     		b	.L1366
 19219              	.L1374:
ARM GAS  /tmp/cc9kYR4Z.s 			page 543


 19220 0076 00BF     		.align	2
 19221              	.L1373:
 19222 0078 00000000 		.word	.LANCHOR0
 19223              		.cfi_endproc
 19224              	.LFE154:
 19226              		.section	.text.bno055_get_selftest,"ax",%progbits
 19227              		.align	1
 19228              		.global	bno055_get_selftest
 19229              		.syntax unified
 19230              		.thumb
 19231              		.thumb_func
 19233              	bno055_get_selftest:
 19234              	.LVL2360:
 19235              	.LFB155:
8911:Core/Src/bno055.c **** 
8912:Core/Src/bno055.c **** /*!
8913:Core/Src/bno055.c ****  *  @brief This API used to read the self test
8914:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8915:Core/Src/bno055.c ****  *
8916:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8917:Core/Src/bno055.c ****  *
8918:Core/Src/bno055.c ****  *   selftest_u8  | result
8919:Core/Src/bno055.c ****  *   -------------- |----------
8920:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8921:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8922:Core/Src/bno055.c ****  *
8923:Core/Src/bno055.c ****  *  @return results of bus communication function
8924:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8925:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8926:Core/Src/bno055.c ****  *
8927:Core/Src/bno055.c ****  *  @note It triggers the self test
8928:Core/Src/bno055.c ****  */
8929:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest(u8 *selftest_u8)
8930:Core/Src/bno055.c **** {
 19236              		.loc 1 8930 1 is_stmt 1 view -0
 19237              		.cfi_startproc
 19238              		@ args = 0, pretend = 0, frame = 8
 19239              		@ frame_needed = 0, uses_anonymous_args = 0
 19240              		.loc 1 8930 1 is_stmt 0 view .LVU5283
 19241 0000 30B5     		push	{r4, r5, lr}
 19242              	.LCFI613:
 19243              		.cfi_def_cfa_offset 12
 19244              		.cfi_offset 4, -12
 19245              		.cfi_offset 5, -8
 19246              		.cfi_offset 14, -4
 19247 0002 83B0     		sub	sp, sp, #12
 19248              	.LCFI614:
 19249              		.cfi_def_cfa_offset 24
8931:Core/Src/bno055.c ****     /* Variable used to return value of
8932:Core/Src/bno055.c ****      * communication routine*/
8933:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19250              		.loc 1 8933 5 is_stmt 1 view .LVU5284
 19251              	.LVL2361:
8934:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19252              		.loc 1 8934 5 view .LVU5285
 19253              		.loc 1 8934 8 is_stmt 0 view .LVU5286
 19254 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 544


 19255 0006 8DF80730 		strb	r3, [sp, #7]
8935:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19256              		.loc 1 8935 5 is_stmt 1 view .LVU5287
 19257              	.LVL2362:
8936:Core/Src/bno055.c **** 
8937:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8938:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19258              		.loc 1 8938 5 view .LVU5288
 19259              		.loc 1 8938 18 is_stmt 0 view .LVU5289
 19260 000a 134B     		ldr	r3, .L1383
 19261 000c 1B68     		ldr	r3, [r3]
 19262              		.loc 1 8938 8 view .LVU5290
 19263 000e E3B1     		cbz	r3, .L1379
 19264 0010 0446     		mov	r4, r0
8939:Core/Src/bno055.c ****     {
8940:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8941:Core/Src/bno055.c ****     }
8942:Core/Src/bno055.c ****     else
8943:Core/Src/bno055.c ****     {
8944:Core/Src/bno055.c ****         /*condition check for page, self test is
8945:Core/Src/bno055.c ****          * available in the page zero*/
8946:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19265              		.loc 1 8946 9 is_stmt 1 view .LVU5291
 19266              		.loc 1 8946 21 is_stmt 0 view .LVU5292
 19267 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19268              		.loc 1 8946 12 view .LVU5293
 19269 0014 9BB9     		cbnz	r3, .L1382
 19270              	.LVL2363:
 19271              	.L1377:
8947:Core/Src/bno055.c ****         {
8948:Core/Src/bno055.c ****             /* Write the page zero*/
8949:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8950:Core/Src/bno055.c ****         }
8951:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19272              		.loc 1 8951 53 discriminator 1 view .LVU5294
 19273 0016 104B     		ldr	r3, .L1383
 19274 0018 1B68     		ldr	r3, [r3]
 19275 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19276              		.loc 1 8951 41 discriminator 1 view .LVU5295
 19277 001c C3B9     		cbnz	r3, .L1380
 19278              	.L1378:
8952:Core/Src/bno055.c ****         {
8953:Core/Src/bno055.c ****             /* Read the value of self test */
8954:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19279              		.loc 1 8954 13 is_stmt 1 view .LVU5296
 19280              		.loc 1 8954 32 is_stmt 0 view .LVU5297
 19281 001e 0E4B     		ldr	r3, .L1383
 19282 0020 1868     		ldr	r0, [r3]
 19283 0022 0569     		ldr	r5, [r0, #16]
 19284              		.loc 1 8954 24 view .LVU5298
 19285 0024 0123     		movs	r3, #1
 19286 0026 0DF10702 		add	r2, sp, #7
 19287 002a 3F21     		movs	r1, #63
 19288 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19289 002e A847     		blx	r5
 19290              	.LVL2364:
8955:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 545


8956:Core/Src/bno055.c ****                                                       &data_u8r,
8957:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8958:Core/Src/bno055.c ****             *selftest_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST);
 19291              		.loc 1 8958 13 is_stmt 1 view .LVU5299
 19292              		.loc 1 8958 28 is_stmt 0 view .LVU5300
 19293 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19294 0034 03F00103 		and	r3, r3, #1
 19295              		.loc 1 8958 26 view .LVU5301
 19296 0038 2370     		strb	r3, [r4]
 19297              	.LVL2365:
 19298              	.L1376:
8959:Core/Src/bno055.c ****         }
8960:Core/Src/bno055.c ****         else
8961:Core/Src/bno055.c ****         {
8962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8963:Core/Src/bno055.c ****         }
8964:Core/Src/bno055.c ****     }
8965:Core/Src/bno055.c **** 
8966:Core/Src/bno055.c ****     return com_rslt;
8967:Core/Src/bno055.c **** }
 19299              		.loc 1 8967 1 view .LVU5302
 19300 003a 03B0     		add	sp, sp, #12
 19301              	.LCFI615:
 19302              		.cfi_remember_state
 19303              		.cfi_def_cfa_offset 12
 19304              		@ sp needed
 19305 003c 30BD     		pop	{r4, r5, pc}
 19306              	.LVL2366:
 19307              	.L1382:
 19308              	.LCFI616:
 19309              		.cfi_restore_state
8949:Core/Src/bno055.c ****         }
 19310              		.loc 1 8949 13 is_stmt 1 view .LVU5303
8949:Core/Src/bno055.c ****         }
 19311              		.loc 1 8949 23 is_stmt 0 view .LVU5304
 19312 003e 0020     		movs	r0, #0
 19313              	.LVL2367:
8949:Core/Src/bno055.c ****         }
 19314              		.loc 1 8949 23 view .LVU5305
 19315 0040 FFF7FEFF 		bl	bno055_write_page_id
 19316              	.LVL2368:
8951:Core/Src/bno055.c ****         {
 19317              		.loc 1 8951 9 is_stmt 1 view .LVU5306
8951:Core/Src/bno055.c ****         {
 19318              		.loc 1 8951 12 is_stmt 0 view .LVU5307
 19319 0044 0028     		cmp	r0, #0
 19320 0046 EAD0     		beq	.L1378
 19321 0048 E5E7     		b	.L1377
 19322              	.LVL2369:
 19323              	.L1379:
8940:Core/Src/bno055.c ****     }
 19324              		.loc 1 8940 16 view .LVU5308
 19325 004a 6FF07E00 		mvn	r0, #126
 19326              	.LVL2370:
8940:Core/Src/bno055.c ****     }
 19327              		.loc 1 8940 16 view .LVU5309
 19328 004e F4E7     		b	.L1376
ARM GAS  /tmp/cc9kYR4Z.s 			page 546


 19329              	.LVL2371:
 19330              	.L1380:
8962:Core/Src/bno055.c ****         }
 19331              		.loc 1 8962 22 view .LVU5310
 19332 0050 4FF0FF30 		mov	r0, #-1
 19333 0054 F1E7     		b	.L1376
 19334              	.L1384:
 19335 0056 00BF     		.align	2
 19336              	.L1383:
 19337 0058 00000000 		.word	.LANCHOR0
 19338              		.cfi_endproc
 19339              	.LFE155:
 19341              		.section	.text.bno055_set_selftest,"ax",%progbits
 19342              		.align	1
 19343              		.global	bno055_set_selftest
 19344              		.syntax unified
 19345              		.thumb
 19346              		.thumb_func
 19348              	bno055_set_selftest:
 19349              	.LVL2372:
 19350              	.LFB156:
8968:Core/Src/bno055.c **** 
8969:Core/Src/bno055.c **** /*!
8970:Core/Src/bno055.c ****  *  @brief This API used to write the self test
8971:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8972:Core/Src/bno055.c ****  *
8973:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8974:Core/Src/bno055.c ****  *
8975:Core/Src/bno055.c ****  *   selftest_u8  | result
8976:Core/Src/bno055.c ****  *   -------------- |----------
8977:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8978:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8979:Core/Src/bno055.c ****  *
8980:Core/Src/bno055.c ****  *  @return results of bus communication function
8981:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8982:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8983:Core/Src/bno055.c ****  *
8984:Core/Src/bno055.c ****  *  @note It triggers the self test
8985:Core/Src/bno055.c ****  *
8986:Core/Src/bno055.c ****  *
8987:Core/Src/bno055.c ****  */
8988:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_selftest(u8 selftest_u8)
8989:Core/Src/bno055.c **** {
 19351              		.loc 1 8989 1 is_stmt 1 view -0
 19352              		.cfi_startproc
 19353              		@ args = 0, pretend = 0, frame = 8
 19354              		@ frame_needed = 0, uses_anonymous_args = 0
 19355              		.loc 1 8989 1 is_stmt 0 view .LVU5312
 19356 0000 30B5     		push	{r4, r5, lr}
 19357              	.LCFI617:
 19358              		.cfi_def_cfa_offset 12
 19359              		.cfi_offset 4, -12
 19360              		.cfi_offset 5, -8
 19361              		.cfi_offset 14, -4
 19362 0002 83B0     		sub	sp, sp, #12
 19363              	.LCFI618:
 19364              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 547


8990:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19365              		.loc 1 8990 5 is_stmt 1 view .LVU5313
 19366              	.LVL2373:
8991:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19367              		.loc 1 8991 5 view .LVU5314
 19368              		.loc 1 8991 8 is_stmt 0 view .LVU5315
 19369 0004 0023     		movs	r3, #0
 19370 0006 8DF80730 		strb	r3, [sp, #7]
8992:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19371              		.loc 1 8992 5 is_stmt 1 view .LVU5316
 19372              		.loc 1 8992 8 is_stmt 0 view .LVU5317
 19373 000a 8DF80630 		strb	r3, [sp, #6]
8993:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19374              		.loc 1 8993 5 is_stmt 1 view .LVU5318
 19375              	.LVL2374:
8994:Core/Src/bno055.c **** 
8995:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8996:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19376              		.loc 1 8996 5 view .LVU5319
 19377              		.loc 1 8996 18 is_stmt 0 view .LVU5320
 19378 000e 254B     		ldr	r3, .L1395
 19379 0010 1B68     		ldr	r3, [r3]
 19380              		.loc 1 8996 8 view .LVU5321
 19381 0012 002B     		cmp	r3, #0
 19382 0014 43D0     		beq	.L1389
 19383 0016 0546     		mov	r5, r0
8997:Core/Src/bno055.c ****     {
8998:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8999:Core/Src/bno055.c ****     }
9000:Core/Src/bno055.c ****     else
9001:Core/Src/bno055.c ****     {
9002:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9003:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9004:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9005:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19384              		.loc 1 9005 9 is_stmt 1 view .LVU5322
 19385              		.loc 1 9005 19 is_stmt 0 view .LVU5323
 19386 0018 0DF10600 		add	r0, sp, #6
 19387              	.LVL2375:
 19388              		.loc 1 9005 19 view .LVU5324
 19389 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19390              	.LVL2376:
9006:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19391              		.loc 1 9006 9 is_stmt 1 view .LVU5325
 19392              		.loc 1 9006 12 is_stmt 0 view .LVU5326
 19393 0020 0446     		mov	r4, r0
 19394 0022 58BB     		cbnz	r0, .L1390
9007:Core/Src/bno055.c ****         {
9008:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19395              		.loc 1 9008 13 is_stmt 1 view .LVU5327
 19396              		.loc 1 9008 32 is_stmt 0 view .LVU5328
 19397 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19398              		.loc 1 9008 16 view .LVU5329
 19399 0028 13BB     		cbnz	r3, .L1393
 19400              	.LVL2377:
 19401              	.L1388:
9009:Core/Src/bno055.c ****             {
ARM GAS  /tmp/cc9kYR4Z.s 			page 548


9010:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9011:Core/Src/bno055.c ****             }
9012:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19402              		.loc 1 9012 13 is_stmt 1 view .LVU5330
 19403              		.loc 1 9012 16 is_stmt 0 view .LVU5331
 19404 002a 7CBB     		cbnz	r4, .L1391
9013:Core/Src/bno055.c ****             {
9014:Core/Src/bno055.c ****                 /* Write the value of self test */
9015:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19405              		.loc 1 9015 17 is_stmt 1 view .LVU5332
 19406              		.loc 1 9015 36 is_stmt 0 view .LVU5333
 19407 002c 1D4B     		ldr	r3, .L1395
 19408 002e 1868     		ldr	r0, [r3]
 19409 0030 0469     		ldr	r4, [r0, #16]
 19410              	.LVL2378:
 19411              		.loc 1 9015 28 view .LVU5334
 19412 0032 0123     		movs	r3, #1
 19413 0034 0DF10702 		add	r2, sp, #7
 19414 0038 3F21     		movs	r1, #63
 19415 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19416 003c A047     		blx	r4
 19417              	.LVL2379:
9016:Core/Src/bno055.c ****                                                           BNO055_SELFTEST_REG,
9017:Core/Src/bno055.c ****                                                           &data_u8r,
9018:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9019:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19418              		.loc 1 9019 17 is_stmt 1 view .LVU5335
 19419              		.loc 1 9019 20 is_stmt 0 view .LVU5336
 19420 003e 0446     		mov	r4, r0
 19421 0040 F0B9     		cbnz	r0, .L1387
9020:Core/Src/bno055.c ****                 {
9021:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SELFTEST, selftest_u8);
 19422              		.loc 1 9021 21 is_stmt 1 view .LVU5337
 19423              		.loc 1 9021 32 is_stmt 0 view .LVU5338
 19424 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19425 0046 23F00103 		bic	r3, r3, #1
 19426 004a 5BB2     		sxtb	r3, r3
 19427 004c 05F00100 		and	r0, r5, #1
 19428              	.LVL2380:
 19429              		.loc 1 9021 32 view .LVU5339
 19430 0050 0343     		orrs	r3, r3, r0
 19431              		.loc 1 9021 30 view .LVU5340
 19432 0052 8DF80730 		strb	r3, [sp, #7]
9022:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19433              		.loc 1 9022 21 is_stmt 1 view .LVU5341
 19434              		.loc 1 9022 41 is_stmt 0 view .LVU5342
 19435 0056 134B     		ldr	r3, .L1395
 19436 0058 1868     		ldr	r0, [r3]
 19437 005a C568     		ldr	r5, [r0, #12]
 19438              		.loc 1 9022 33 view .LVU5343
 19439 005c 0123     		movs	r3, #1
 19440 005e 0DF10702 		add	r2, sp, #7
 19441 0062 3F21     		movs	r1, #63
 19442 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19443 0066 A847     		blx	r5
 19444              	.LVL2381:
 19445              		.loc 1 9022 30 view .LVU5344
ARM GAS  /tmp/cc9kYR4Z.s 			page 549


 19446 0068 54FA80F0 		uxtab	r0, r4, r0
 19447 006c 44B2     		sxtb	r4, r0
 19448              	.LVL2382:
 19449              		.loc 1 9022 30 view .LVU5345
 19450 006e 07E0     		b	.L1387
 19451              	.LVL2383:
 19452              	.L1393:
9010:Core/Src/bno055.c ****             }
 19453              		.loc 1 9010 17 is_stmt 1 view .LVU5346
9010:Core/Src/bno055.c ****             }
 19454              		.loc 1 9010 28 is_stmt 0 view .LVU5347
 19455 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19456              	.LVL2384:
9010:Core/Src/bno055.c ****             }
 19457              		.loc 1 9010 25 view .LVU5348
 19458 0074 54FA80F4 		uxtab	r4, r4, r0
 19459 0078 64B2     		sxtb	r4, r4
 19460              	.LVL2385:
9010:Core/Src/bno055.c ****             }
 19461              		.loc 1 9010 25 view .LVU5349
 19462 007a D6E7     		b	.L1388
 19463              	.LVL2386:
 19464              	.L1390:
9023:Core/Src/bno055.c ****                                                                 BNO055_SELFTEST_REG,
9024:Core/Src/bno055.c ****                                                                 &data_u8r,
9025:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9026:Core/Src/bno055.c ****                 }
9027:Core/Src/bno055.c ****             }
9028:Core/Src/bno055.c ****             else
9029:Core/Src/bno055.c ****             {
9030:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9031:Core/Src/bno055.c ****             }
9032:Core/Src/bno055.c ****         }
9033:Core/Src/bno055.c ****         else
9034:Core/Src/bno055.c ****         {
9035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19465              		.loc 1 9035 22 view .LVU5350
 19466 007c 4FF0FF34 		mov	r4, #-1
 19467              	.LVL2387:
 19468              	.L1387:
9036:Core/Src/bno055.c ****         }
9037:Core/Src/bno055.c ****     }
9038:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19469              		.loc 1 9038 5 is_stmt 1 view .LVU5351
 19470              		.loc 1 9038 24 is_stmt 0 view .LVU5352
 19471 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19472              		.loc 1 9038 8 view .LVU5353
 19473 0084 28B9     		cbnz	r0, .L1394
 19474              	.LVL2388:
 19475              	.L1386:
9039:Core/Src/bno055.c ****     {
9040:Core/Src/bno055.c ****         /* set the operation mode
9041:Core/Src/bno055.c ****          * of previous operation mode*/
9042:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9043:Core/Src/bno055.c ****     }
9044:Core/Src/bno055.c **** 
9045:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 550


9046:Core/Src/bno055.c **** }
 19476              		.loc 1 9046 1 view .LVU5354
 19477 0086 2046     		mov	r0, r4
 19478 0088 03B0     		add	sp, sp, #12
 19479              	.LCFI619:
 19480              		.cfi_remember_state
 19481              		.cfi_def_cfa_offset 12
 19482              		@ sp needed
 19483 008a 30BD     		pop	{r4, r5, pc}
 19484              	.LVL2389:
 19485              	.L1391:
 19486              	.LCFI620:
 19487              		.cfi_restore_state
9030:Core/Src/bno055.c ****             }
 19488              		.loc 1 9030 26 view .LVU5355
 19489 008c 4FF0FF34 		mov	r4, #-1
 19490              	.LVL2390:
9030:Core/Src/bno055.c ****             }
 19491              		.loc 1 9030 26 view .LVU5356
 19492 0090 F6E7     		b	.L1387
 19493              	.LVL2391:
 19494              	.L1394:
9042:Core/Src/bno055.c ****     }
 19495              		.loc 1 9042 9 is_stmt 1 view .LVU5357
9042:Core/Src/bno055.c ****     }
 19496              		.loc 1 9042 21 is_stmt 0 view .LVU5358
 19497 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19498              	.LVL2392:
9042:Core/Src/bno055.c ****     }
 19499              		.loc 1 9042 18 view .LVU5359
 19500 0096 54FA80F0 		uxtab	r0, r4, r0
 19501 009a 44B2     		sxtb	r4, r0
 19502              	.LVL2393:
9042:Core/Src/bno055.c ****     }
 19503              		.loc 1 9042 18 view .LVU5360
 19504 009c F3E7     		b	.L1386
 19505              	.LVL2394:
 19506              	.L1389:
8998:Core/Src/bno055.c ****     }
 19507              		.loc 1 8998 16 view .LVU5361
 19508 009e 6FF07E04 		mvn	r4, #126
 19509 00a2 F0E7     		b	.L1386
 19510              	.L1396:
 19511              		.align	2
 19512              	.L1395:
 19513 00a4 00000000 		.word	.LANCHOR0
 19514              		.cfi_endproc
 19515              	.LFE156:
 19517              		.section	.text.bno055_get_temp_source,"ax",%progbits
 19518              		.align	1
 19519              		.global	bno055_get_temp_source
 19520              		.syntax unified
 19521              		.thumb
 19522              		.thumb_func
 19524              	bno055_get_temp_source:
 19525              	.LVL2395:
 19526              	.LFB157:
ARM GAS  /tmp/cc9kYR4Z.s 			page 551


9047:Core/Src/bno055.c **** 
9048:Core/Src/bno055.c **** /*!
9049:Core/Src/bno055.c ****  *  @brief This API used to read the temperature source
9050:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9051:Core/Src/bno055.c ****  *
9052:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9053:Core/Src/bno055.c ****  *
9054:Core/Src/bno055.c ****  *     temp_source_u8 | result
9055:Core/Src/bno055.c ****  *    ----------------  |---------------
9056:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9057:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9058:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9059:Core/Src/bno055.c ****  *
9060:Core/Src/bno055.c ****  *  @return results of bus communication function
9061:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9062:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9063:Core/Src/bno055.c ****  *
9064:Core/Src/bno055.c ****  */
9065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_source(u8 *temp_source_u8)
9066:Core/Src/bno055.c **** {
 19527              		.loc 1 9066 1 is_stmt 1 view -0
 19528              		.cfi_startproc
 19529              		@ args = 0, pretend = 0, frame = 8
 19530              		@ frame_needed = 0, uses_anonymous_args = 0
 19531              		.loc 1 9066 1 is_stmt 0 view .LVU5363
 19532 0000 30B5     		push	{r4, r5, lr}
 19533              	.LCFI621:
 19534              		.cfi_def_cfa_offset 12
 19535              		.cfi_offset 4, -12
 19536              		.cfi_offset 5, -8
 19537              		.cfi_offset 14, -4
 19538 0002 83B0     		sub	sp, sp, #12
 19539              	.LCFI622:
 19540              		.cfi_def_cfa_offset 24
9067:Core/Src/bno055.c ****     /* Variable used to return value of
9068:Core/Src/bno055.c ****      * communication routine*/
9069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19541              		.loc 1 9069 5 is_stmt 1 view .LVU5364
 19542              	.LVL2396:
9070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19543              		.loc 1 9070 5 view .LVU5365
 19544              		.loc 1 9070 8 is_stmt 0 view .LVU5366
 19545 0004 0023     		movs	r3, #0
 19546 0006 8DF80730 		strb	r3, [sp, #7]
9071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19547              		.loc 1 9071 5 is_stmt 1 view .LVU5367
 19548              	.LVL2397:
9072:Core/Src/bno055.c **** 
9073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19549              		.loc 1 9074 5 view .LVU5368
 19550              		.loc 1 9074 18 is_stmt 0 view .LVU5369
 19551 000a 134B     		ldr	r3, .L1405
 19552 000c 1B68     		ldr	r3, [r3]
 19553              		.loc 1 9074 8 view .LVU5370
 19554 000e E3B1     		cbz	r3, .L1401
 19555 0010 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 552


9075:Core/Src/bno055.c ****     {
9076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9077:Core/Src/bno055.c ****     }
9078:Core/Src/bno055.c ****     else
9079:Core/Src/bno055.c ****     {
9080:Core/Src/bno055.c ****         /*condition check for page, temperature source is
9081:Core/Src/bno055.c ****          * available in the page zero*/
9082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19556              		.loc 1 9082 9 is_stmt 1 view .LVU5371
 19557              		.loc 1 9082 21 is_stmt 0 view .LVU5372
 19558 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19559              		.loc 1 9082 12 view .LVU5373
 19560 0014 9BB9     		cbnz	r3, .L1404
 19561              	.LVL2398:
 19562              	.L1399:
9083:Core/Src/bno055.c ****         {
9084:Core/Src/bno055.c ****             /* Write the page zero*/
9085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9086:Core/Src/bno055.c ****         }
9087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19563              		.loc 1 9087 53 discriminator 1 view .LVU5374
 19564 0016 104B     		ldr	r3, .L1405
 19565 0018 1B68     		ldr	r3, [r3]
 19566 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19567              		.loc 1 9087 41 discriminator 1 view .LVU5375
 19568 001c C3B9     		cbnz	r3, .L1402
 19569              	.L1400:
9088:Core/Src/bno055.c ****         {
9089:Core/Src/bno055.c ****             /* Read the value of temperature source */
9090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19570              		.loc 1 9090 13 is_stmt 1 view .LVU5376
 19571              		.loc 1 9090 32 is_stmt 0 view .LVU5377
 19572 001e 0E4B     		ldr	r3, .L1405
 19573 0020 1868     		ldr	r0, [r3]
 19574 0022 0569     		ldr	r5, [r0, #16]
 19575              		.loc 1 9090 24 view .LVU5378
 19576 0024 0123     		movs	r3, #1
 19577 0026 0DF10702 		add	r2, sp, #7
 19578 002a 4021     		movs	r1, #64
 19579 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19580 002e A847     		blx	r5
 19581              	.LVL2399:
9091:Core/Src/bno055.c ****                                                       BNO055_TEMP_SOURCE_REG,
9092:Core/Src/bno055.c ****                                                       &data_u8r,
9093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9094:Core/Src/bno055.c ****             *temp_source_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE);
 19582              		.loc 1 9094 13 is_stmt 1 view .LVU5379
 19583              		.loc 1 9094 31 is_stmt 0 view .LVU5380
 19584 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19585 0034 03F00303 		and	r3, r3, #3
 19586              		.loc 1 9094 29 view .LVU5381
 19587 0038 2370     		strb	r3, [r4]
 19588              	.LVL2400:
 19589              	.L1398:
9095:Core/Src/bno055.c ****         }
9096:Core/Src/bno055.c ****         else
9097:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 553


9098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9099:Core/Src/bno055.c ****         }
9100:Core/Src/bno055.c ****     }
9101:Core/Src/bno055.c **** 
9102:Core/Src/bno055.c ****     return com_rslt;
9103:Core/Src/bno055.c **** }
 19590              		.loc 1 9103 1 view .LVU5382
 19591 003a 03B0     		add	sp, sp, #12
 19592              	.LCFI623:
 19593              		.cfi_remember_state
 19594              		.cfi_def_cfa_offset 12
 19595              		@ sp needed
 19596 003c 30BD     		pop	{r4, r5, pc}
 19597              	.LVL2401:
 19598              	.L1404:
 19599              	.LCFI624:
 19600              		.cfi_restore_state
9085:Core/Src/bno055.c ****         }
 19601              		.loc 1 9085 13 is_stmt 1 view .LVU5383
9085:Core/Src/bno055.c ****         }
 19602              		.loc 1 9085 23 is_stmt 0 view .LVU5384
 19603 003e 0020     		movs	r0, #0
 19604              	.LVL2402:
9085:Core/Src/bno055.c ****         }
 19605              		.loc 1 9085 23 view .LVU5385
 19606 0040 FFF7FEFF 		bl	bno055_write_page_id
 19607              	.LVL2403:
9087:Core/Src/bno055.c ****         {
 19608              		.loc 1 9087 9 is_stmt 1 view .LVU5386
9087:Core/Src/bno055.c ****         {
 19609              		.loc 1 9087 12 is_stmt 0 view .LVU5387
 19610 0044 0028     		cmp	r0, #0
 19611 0046 EAD0     		beq	.L1400
 19612 0048 E5E7     		b	.L1399
 19613              	.LVL2404:
 19614              	.L1401:
9076:Core/Src/bno055.c ****     }
 19615              		.loc 1 9076 16 view .LVU5388
 19616 004a 6FF07E00 		mvn	r0, #126
 19617              	.LVL2405:
9076:Core/Src/bno055.c ****     }
 19618              		.loc 1 9076 16 view .LVU5389
 19619 004e F4E7     		b	.L1398
 19620              	.LVL2406:
 19621              	.L1402:
9098:Core/Src/bno055.c ****         }
 19622              		.loc 1 9098 22 view .LVU5390
 19623 0050 4FF0FF30 		mov	r0, #-1
 19624 0054 F1E7     		b	.L1398
 19625              	.L1406:
 19626 0056 00BF     		.align	2
 19627              	.L1405:
 19628 0058 00000000 		.word	.LANCHOR0
 19629              		.cfi_endproc
 19630              	.LFE157:
 19632              		.section	.text.bno055_set_temp_source,"ax",%progbits
 19633              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 554


 19634              		.global	bno055_set_temp_source
 19635              		.syntax unified
 19636              		.thumb
 19637              		.thumb_func
 19639              	bno055_set_temp_source:
 19640              	.LVL2407:
 19641              	.LFB158:
9104:Core/Src/bno055.c **** 
9105:Core/Src/bno055.c **** /*!
9106:Core/Src/bno055.c ****  *  @brief This API used to write the temperature source
9107:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9108:Core/Src/bno055.c ****  *
9109:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9110:Core/Src/bno055.c ****  *
9111:Core/Src/bno055.c ****  *     temp_source_u8 | result
9112:Core/Src/bno055.c ****  *    ----------------  |---------------
9113:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9114:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9115:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9116:Core/Src/bno055.c ****  *
9117:Core/Src/bno055.c ****  *  @return results of bus communication function
9118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9120:Core/Src/bno055.c ****  *
9121:Core/Src/bno055.c ****  */
9122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_source(u8 temp_source_u8)
9123:Core/Src/bno055.c **** {
 19642              		.loc 1 9123 1 is_stmt 1 view -0
 19643              		.cfi_startproc
 19644              		@ args = 0, pretend = 0, frame = 8
 19645              		@ frame_needed = 0, uses_anonymous_args = 0
 19646              		.loc 1 9123 1 is_stmt 0 view .LVU5392
 19647 0000 30B5     		push	{r4, r5, lr}
 19648              	.LCFI625:
 19649              		.cfi_def_cfa_offset 12
 19650              		.cfi_offset 4, -12
 19651              		.cfi_offset 5, -8
 19652              		.cfi_offset 14, -4
 19653 0002 83B0     		sub	sp, sp, #12
 19654              	.LCFI626:
 19655              		.cfi_def_cfa_offset 24
9124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19656              		.loc 1 9124 5 is_stmt 1 view .LVU5393
 19657              	.LVL2408:
9125:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19658              		.loc 1 9125 5 view .LVU5394
 19659              		.loc 1 9125 8 is_stmt 0 view .LVU5395
 19660 0004 0023     		movs	r3, #0
 19661 0006 8DF80730 		strb	r3, [sp, #7]
9126:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19662              		.loc 1 9126 5 is_stmt 1 view .LVU5396
 19663              		.loc 1 9126 8 is_stmt 0 view .LVU5397
 19664 000a 8DF80630 		strb	r3, [sp, #6]
9127:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19665              		.loc 1 9127 5 is_stmt 1 view .LVU5398
 19666              	.LVL2409:
9128:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 555


9129:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9130:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19667              		.loc 1 9130 5 view .LVU5399
 19668              		.loc 1 9130 18 is_stmt 0 view .LVU5400
 19669 000e 254B     		ldr	r3, .L1417
 19670 0010 1B68     		ldr	r3, [r3]
 19671              		.loc 1 9130 8 view .LVU5401
 19672 0012 002B     		cmp	r3, #0
 19673 0014 43D0     		beq	.L1411
 19674 0016 0546     		mov	r5, r0
9131:Core/Src/bno055.c ****     {
9132:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9133:Core/Src/bno055.c ****     }
9134:Core/Src/bno055.c ****     else
9135:Core/Src/bno055.c ****     {
9136:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9137:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9138:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9139:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19675              		.loc 1 9139 9 is_stmt 1 view .LVU5402
 19676              		.loc 1 9139 19 is_stmt 0 view .LVU5403
 19677 0018 0DF10600 		add	r0, sp, #6
 19678              	.LVL2410:
 19679              		.loc 1 9139 19 view .LVU5404
 19680 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19681              	.LVL2411:
9140:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19682              		.loc 1 9140 9 is_stmt 1 view .LVU5405
 19683              		.loc 1 9140 12 is_stmt 0 view .LVU5406
 19684 0020 0446     		mov	r4, r0
 19685 0022 58BB     		cbnz	r0, .L1412
9141:Core/Src/bno055.c ****         {
9142:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19686              		.loc 1 9142 13 is_stmt 1 view .LVU5407
 19687              		.loc 1 9142 32 is_stmt 0 view .LVU5408
 19688 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19689              		.loc 1 9142 16 view .LVU5409
 19690 0028 13BB     		cbnz	r3, .L1415
 19691              	.LVL2412:
 19692              	.L1410:
9143:Core/Src/bno055.c ****             {
9144:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9145:Core/Src/bno055.c ****             }
9146:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19693              		.loc 1 9146 13 is_stmt 1 view .LVU5410
 19694              		.loc 1 9146 16 is_stmt 0 view .LVU5411
 19695 002a 7CBB     		cbnz	r4, .L1413
9147:Core/Src/bno055.c ****             {
9148:Core/Src/bno055.c ****                 /* Write the value of temperature source*/
9149:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19696              		.loc 1 9149 17 is_stmt 1 view .LVU5412
 19697              		.loc 1 9149 36 is_stmt 0 view .LVU5413
 19698 002c 1D4B     		ldr	r3, .L1417
 19699 002e 1868     		ldr	r0, [r3]
 19700 0030 0469     		ldr	r4, [r0, #16]
 19701              	.LVL2413:
 19702              		.loc 1 9149 28 view .LVU5414
ARM GAS  /tmp/cc9kYR4Z.s 			page 556


 19703 0032 0123     		movs	r3, #1
 19704 0034 0DF10702 		add	r2, sp, #7
 19705 0038 4021     		movs	r1, #64
 19706 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19707 003c A047     		blx	r4
 19708              	.LVL2414:
9150:Core/Src/bno055.c ****                                                           BNO055_TEMP_SOURCE_REG,
9151:Core/Src/bno055.c ****                                                           &data_u8r,
9152:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9153:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19709              		.loc 1 9153 17 is_stmt 1 view .LVU5415
 19710              		.loc 1 9153 20 is_stmt 0 view .LVU5416
 19711 003e 0446     		mov	r4, r0
 19712 0040 F0B9     		cbnz	r0, .L1409
9154:Core/Src/bno055.c ****                 {
9155:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE, temp_source_u8);
 19713              		.loc 1 9155 21 is_stmt 1 view .LVU5417
 19714              		.loc 1 9155 32 is_stmt 0 view .LVU5418
 19715 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19716 0046 23F00303 		bic	r3, r3, #3
 19717 004a 5BB2     		sxtb	r3, r3
 19718 004c 05F00300 		and	r0, r5, #3
 19719              	.LVL2415:
 19720              		.loc 1 9155 32 view .LVU5419
 19721 0050 0343     		orrs	r3, r3, r0
 19722              		.loc 1 9155 30 view .LVU5420
 19723 0052 8DF80730 		strb	r3, [sp, #7]
9156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19724              		.loc 1 9156 21 is_stmt 1 view .LVU5421
 19725              		.loc 1 9156 41 is_stmt 0 view .LVU5422
 19726 0056 134B     		ldr	r3, .L1417
 19727 0058 1868     		ldr	r0, [r3]
 19728 005a C568     		ldr	r5, [r0, #12]
 19729              		.loc 1 9156 33 view .LVU5423
 19730 005c 0123     		movs	r3, #1
 19731 005e 0DF10702 		add	r2, sp, #7
 19732 0062 4021     		movs	r1, #64
 19733 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19734 0066 A847     		blx	r5
 19735              	.LVL2416:
 19736              		.loc 1 9156 30 view .LVU5424
 19737 0068 54FA80F0 		uxtab	r0, r4, r0
 19738 006c 44B2     		sxtb	r4, r0
 19739              	.LVL2417:
 19740              		.loc 1 9156 30 view .LVU5425
 19741 006e 07E0     		b	.L1409
 19742              	.LVL2418:
 19743              	.L1415:
9144:Core/Src/bno055.c ****             }
 19744              		.loc 1 9144 17 is_stmt 1 view .LVU5426
9144:Core/Src/bno055.c ****             }
 19745              		.loc 1 9144 28 is_stmt 0 view .LVU5427
 19746 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19747              	.LVL2419:
9144:Core/Src/bno055.c ****             }
 19748              		.loc 1 9144 25 view .LVU5428
 19749 0074 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 557


 19750 0078 64B2     		sxtb	r4, r4
 19751              	.LVL2420:
9144:Core/Src/bno055.c ****             }
 19752              		.loc 1 9144 25 view .LVU5429
 19753 007a D6E7     		b	.L1410
 19754              	.LVL2421:
 19755              	.L1412:
9157:Core/Src/bno055.c ****                                                                 BNO055_TEMP_SOURCE_REG,
9158:Core/Src/bno055.c ****                                                                 &data_u8r,
9159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9160:Core/Src/bno055.c ****                 }
9161:Core/Src/bno055.c ****             }
9162:Core/Src/bno055.c ****             else
9163:Core/Src/bno055.c ****             {
9164:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9165:Core/Src/bno055.c ****             }
9166:Core/Src/bno055.c ****         }
9167:Core/Src/bno055.c ****         else
9168:Core/Src/bno055.c ****         {
9169:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19756              		.loc 1 9169 22 view .LVU5430
 19757 007c 4FF0FF34 		mov	r4, #-1
 19758              	.LVL2422:
 19759              	.L1409:
9170:Core/Src/bno055.c ****         }
9171:Core/Src/bno055.c ****     }
9172:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19760              		.loc 1 9172 5 is_stmt 1 view .LVU5431
 19761              		.loc 1 9172 24 is_stmt 0 view .LVU5432
 19762 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19763              		.loc 1 9172 8 view .LVU5433
 19764 0084 28B9     		cbnz	r0, .L1416
 19765              	.LVL2423:
 19766              	.L1408:
9173:Core/Src/bno055.c ****     {
9174:Core/Src/bno055.c ****         /* set the operation mode
9175:Core/Src/bno055.c ****          * of previous operation mode*/
9176:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9177:Core/Src/bno055.c ****     }
9178:Core/Src/bno055.c **** 
9179:Core/Src/bno055.c ****     return com_rslt;
9180:Core/Src/bno055.c **** }
 19767              		.loc 1 9180 1 view .LVU5434
 19768 0086 2046     		mov	r0, r4
 19769 0088 03B0     		add	sp, sp, #12
 19770              	.LCFI627:
 19771              		.cfi_remember_state
 19772              		.cfi_def_cfa_offset 12
 19773              		@ sp needed
 19774 008a 30BD     		pop	{r4, r5, pc}
 19775              	.LVL2424:
 19776              	.L1413:
 19777              	.LCFI628:
 19778              		.cfi_restore_state
9164:Core/Src/bno055.c ****             }
 19779              		.loc 1 9164 26 view .LVU5435
 19780 008c 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/cc9kYR4Z.s 			page 558


 19781              	.LVL2425:
9164:Core/Src/bno055.c ****             }
 19782              		.loc 1 9164 26 view .LVU5436
 19783 0090 F6E7     		b	.L1409
 19784              	.LVL2426:
 19785              	.L1416:
9176:Core/Src/bno055.c ****     }
 19786              		.loc 1 9176 9 is_stmt 1 view .LVU5437
9176:Core/Src/bno055.c ****     }
 19787              		.loc 1 9176 21 is_stmt 0 view .LVU5438
 19788 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19789              	.LVL2427:
9176:Core/Src/bno055.c ****     }
 19790              		.loc 1 9176 18 view .LVU5439
 19791 0096 54FA80F0 		uxtab	r0, r4, r0
 19792 009a 44B2     		sxtb	r4, r0
 19793              	.LVL2428:
9176:Core/Src/bno055.c ****     }
 19794              		.loc 1 9176 18 view .LVU5440
 19795 009c F3E7     		b	.L1408
 19796              	.LVL2429:
 19797              	.L1411:
9132:Core/Src/bno055.c ****     }
 19798              		.loc 1 9132 16 view .LVU5441
 19799 009e 6FF07E04 		mvn	r4, #126
 19800 00a2 F0E7     		b	.L1408
 19801              	.L1418:
 19802              		.align	2
 19803              	.L1417:
 19804 00a4 00000000 		.word	.LANCHOR0
 19805              		.cfi_endproc
 19806              	.LFE158:
 19808              		.section	.text.bno055_get_axis_remap_value,"ax",%progbits
 19809              		.align	1
 19810              		.global	bno055_get_axis_remap_value
 19811              		.syntax unified
 19812              		.thumb
 19813              		.thumb_func
 19815              	bno055_get_axis_remap_value:
 19816              	.LVL2430:
 19817              	.LFB159:
9181:Core/Src/bno055.c **** 
9182:Core/Src/bno055.c **** /*!
9183:Core/Src/bno055.c ****  *  @brief This API used to read the axis remap value
9184:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9185:Core/Src/bno055.c ****  *
9186:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9187:Core/Src/bno055.c ****  *
9188:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9189:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9190:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9191:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9192:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9193:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9194:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9195:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9196:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 559


9197:Core/Src/bno055.c ****  *  @return results of bus communication function
9198:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9199:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9200:Core/Src/bno055.c ****  *
9201:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9202:Core/Src/bno055.c ****  *  x-axis :
9203:Core/Src/bno055.c ****  *
9204:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9205:Core/Src/bno055.c ****  *
9206:Core/Src/bno055.c ****  *  y-axis :
9207:Core/Src/bno055.c ****  *
9208:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9209:Core/Src/bno055.c ****  *
9210:Core/Src/bno055.c ****  *  z-axis :
9211:Core/Src/bno055.c ****  *
9212:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9213:Core/Src/bno055.c ****  *
9214:Core/Src/bno055.c ****  */
9215:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_axis_remap_value(u8 *remap_axis_u8)
9216:Core/Src/bno055.c **** {
 19818              		.loc 1 9216 1 is_stmt 1 view -0
 19819              		.cfi_startproc
 19820              		@ args = 0, pretend = 0, frame = 8
 19821              		@ frame_needed = 0, uses_anonymous_args = 0
 19822              		.loc 1 9216 1 is_stmt 0 view .LVU5443
 19823 0000 30B5     		push	{r4, r5, lr}
 19824              	.LCFI629:
 19825              		.cfi_def_cfa_offset 12
 19826              		.cfi_offset 4, -12
 19827              		.cfi_offset 5, -8
 19828              		.cfi_offset 14, -4
 19829 0002 83B0     		sub	sp, sp, #12
 19830              	.LCFI630:
 19831              		.cfi_def_cfa_offset 24
9217:Core/Src/bno055.c ****     /* Variable used to return value of
9218:Core/Src/bno055.c ****      * communication routine*/
9219:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19832              		.loc 1 9219 5 is_stmt 1 view .LVU5444
 19833              	.LVL2431:
9220:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19834              		.loc 1 9220 5 view .LVU5445
 19835              		.loc 1 9220 8 is_stmt 0 view .LVU5446
 19836 0004 0023     		movs	r3, #0
 19837 0006 8DF80730 		strb	r3, [sp, #7]
9221:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19838              		.loc 1 9221 5 is_stmt 1 view .LVU5447
 19839              	.LVL2432:
9222:Core/Src/bno055.c **** 
9223:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9224:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19840              		.loc 1 9224 5 view .LVU5448
 19841              		.loc 1 9224 18 is_stmt 0 view .LVU5449
 19842 000a 134B     		ldr	r3, .L1427
 19843 000c 1B68     		ldr	r3, [r3]
 19844              		.loc 1 9224 8 view .LVU5450
 19845 000e E3B1     		cbz	r3, .L1423
 19846 0010 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 560


9225:Core/Src/bno055.c ****     {
9226:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9227:Core/Src/bno055.c ****     }
9228:Core/Src/bno055.c ****     else
9229:Core/Src/bno055.c ****     {
9230:Core/Src/bno055.c ****         /*condition check for page, axis remap is
9231:Core/Src/bno055.c ****          * available in the page zero*/
9232:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19847              		.loc 1 9232 9 is_stmt 1 view .LVU5451
 19848              		.loc 1 9232 21 is_stmt 0 view .LVU5452
 19849 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19850              		.loc 1 9232 12 view .LVU5453
 19851 0014 9BB9     		cbnz	r3, .L1426
 19852              	.LVL2433:
 19853              	.L1421:
9233:Core/Src/bno055.c ****         {
9234:Core/Src/bno055.c ****             /* Write the page zero*/
9235:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9236:Core/Src/bno055.c ****         }
9237:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19854              		.loc 1 9237 53 discriminator 1 view .LVU5454
 19855 0016 104B     		ldr	r3, .L1427
 19856 0018 1B68     		ldr	r3, [r3]
 19857 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19858              		.loc 1 9237 41 discriminator 1 view .LVU5455
 19859 001c C3B9     		cbnz	r3, .L1424
 19860              	.L1422:
9238:Core/Src/bno055.c ****         {
9239:Core/Src/bno055.c ****             /* Read the value of axis remap*/
9240:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19861              		.loc 1 9240 13 is_stmt 1 view .LVU5456
 19862              		.loc 1 9240 32 is_stmt 0 view .LVU5457
 19863 001e 0E4B     		ldr	r3, .L1427
 19864 0020 1868     		ldr	r0, [r3]
 19865 0022 0569     		ldr	r5, [r0, #16]
 19866              		.loc 1 9240 24 view .LVU5458
 19867 0024 0123     		movs	r3, #1
 19868 0026 0DF10702 		add	r2, sp, #7
 19869 002a 4121     		movs	r1, #65
 19870 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19871 002e A847     		blx	r5
 19872              	.LVL2434:
9241:Core/Src/bno055.c ****                                                       BNO055_REMAP_AXIS_VALUE_REG,
9242:Core/Src/bno055.c ****                                                       &data_u8r,
9243:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9244:Core/Src/bno055.c ****             *remap_axis_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE);
 19873              		.loc 1 9244 13 is_stmt 1 view .LVU5459
 19874              		.loc 1 9244 30 is_stmt 0 view .LVU5460
 19875 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19876 0034 03F03F03 		and	r3, r3, #63
 19877              		.loc 1 9244 28 view .LVU5461
 19878 0038 2370     		strb	r3, [r4]
 19879              	.LVL2435:
 19880              	.L1420:
9245:Core/Src/bno055.c ****         }
9246:Core/Src/bno055.c ****         else
9247:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 561


9248:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9249:Core/Src/bno055.c ****         }
9250:Core/Src/bno055.c ****     }
9251:Core/Src/bno055.c **** 
9252:Core/Src/bno055.c ****     return com_rslt;
9253:Core/Src/bno055.c **** }
 19881              		.loc 1 9253 1 view .LVU5462
 19882 003a 03B0     		add	sp, sp, #12
 19883              	.LCFI631:
 19884              		.cfi_remember_state
 19885              		.cfi_def_cfa_offset 12
 19886              		@ sp needed
 19887 003c 30BD     		pop	{r4, r5, pc}
 19888              	.LVL2436:
 19889              	.L1426:
 19890              	.LCFI632:
 19891              		.cfi_restore_state
9235:Core/Src/bno055.c ****         }
 19892              		.loc 1 9235 13 is_stmt 1 view .LVU5463
9235:Core/Src/bno055.c ****         }
 19893              		.loc 1 9235 23 is_stmt 0 view .LVU5464
 19894 003e 0020     		movs	r0, #0
 19895              	.LVL2437:
9235:Core/Src/bno055.c ****         }
 19896              		.loc 1 9235 23 view .LVU5465
 19897 0040 FFF7FEFF 		bl	bno055_write_page_id
 19898              	.LVL2438:
9237:Core/Src/bno055.c ****         {
 19899              		.loc 1 9237 9 is_stmt 1 view .LVU5466
9237:Core/Src/bno055.c ****         {
 19900              		.loc 1 9237 12 is_stmt 0 view .LVU5467
 19901 0044 0028     		cmp	r0, #0
 19902 0046 EAD0     		beq	.L1422
 19903 0048 E5E7     		b	.L1421
 19904              	.LVL2439:
 19905              	.L1423:
9226:Core/Src/bno055.c ****     }
 19906              		.loc 1 9226 16 view .LVU5468
 19907 004a 6FF07E00 		mvn	r0, #126
 19908              	.LVL2440:
9226:Core/Src/bno055.c ****     }
 19909              		.loc 1 9226 16 view .LVU5469
 19910 004e F4E7     		b	.L1420
 19911              	.LVL2441:
 19912              	.L1424:
9248:Core/Src/bno055.c ****         }
 19913              		.loc 1 9248 22 view .LVU5470
 19914 0050 4FF0FF30 		mov	r0, #-1
 19915 0054 F1E7     		b	.L1420
 19916              	.L1428:
 19917 0056 00BF     		.align	2
 19918              	.L1427:
 19919 0058 00000000 		.word	.LANCHOR0
 19920              		.cfi_endproc
 19921              	.LFE159:
 19923              		.section	.text.bno055_set_axis_remap_value,"ax",%progbits
 19924              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 562


 19925              		.global	bno055_set_axis_remap_value
 19926              		.syntax unified
 19927              		.thumb
 19928              		.thumb_func
 19930              	bno055_set_axis_remap_value:
 19931              	.LVL2442:
 19932              	.LFB160:
9254:Core/Src/bno055.c **** 
9255:Core/Src/bno055.c **** /*!
9256:Core/Src/bno055.c ****  *  @brief This API used to write the axis remap value
9257:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9258:Core/Src/bno055.c ****  *
9259:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9260:Core/Src/bno055.c ****  *
9261:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9262:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9263:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9264:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9265:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9266:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9267:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9268:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9269:Core/Src/bno055.c ****  *
9270:Core/Src/bno055.c ****  *  @return results of bus communication function
9271:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9272:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9273:Core/Src/bno055.c ****  *
9274:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9275:Core/Src/bno055.c ****  *  x-axis :
9276:Core/Src/bno055.c ****  *
9277:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9278:Core/Src/bno055.c ****  *
9279:Core/Src/bno055.c ****  *  y-axis :
9280:Core/Src/bno055.c ****  *
9281:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9282:Core/Src/bno055.c ****  *
9283:Core/Src/bno055.c ****  *  z-axis :
9284:Core/Src/bno055.c ****  *
9285:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9286:Core/Src/bno055.c ****  *
9287:Core/Src/bno055.c ****  */
9288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_axis_remap_value(u8 remap_axis_u8)
9289:Core/Src/bno055.c **** {
 19933              		.loc 1 9289 1 is_stmt 1 view -0
 19934              		.cfi_startproc
 19935              		@ args = 0, pretend = 0, frame = 8
 19936              		@ frame_needed = 0, uses_anonymous_args = 0
 19937              		.loc 1 9289 1 is_stmt 0 view .LVU5472
 19938 0000 30B5     		push	{r4, r5, lr}
 19939              	.LCFI633:
 19940              		.cfi_def_cfa_offset 12
 19941              		.cfi_offset 4, -12
 19942              		.cfi_offset 5, -8
 19943              		.cfi_offset 14, -4
 19944 0002 83B0     		sub	sp, sp, #12
 19945              	.LCFI634:
 19946              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 563


9290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19947              		.loc 1 9290 5 is_stmt 1 view .LVU5473
 19948              	.LVL2443:
9291:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19949              		.loc 1 9291 5 view .LVU5474
 19950              		.loc 1 9291 8 is_stmt 0 view .LVU5475
 19951 0004 0023     		movs	r3, #0
 19952 0006 8DF80730 		strb	r3, [sp, #7]
9292:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19953              		.loc 1 9292 5 is_stmt 1 view .LVU5476
 19954              		.loc 1 9292 8 is_stmt 0 view .LVU5477
 19955 000a 8DF80630 		strb	r3, [sp, #6]
9293:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19956              		.loc 1 9293 5 is_stmt 1 view .LVU5478
 19957              	.LVL2444:
9294:Core/Src/bno055.c **** 
9295:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9296:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19958              		.loc 1 9296 5 view .LVU5479
 19959              		.loc 1 9296 18 is_stmt 0 view .LVU5480
 19960 000e 3C4B     		ldr	r3, .L1441
 19961 0010 1B68     		ldr	r3, [r3]
 19962              		.loc 1 9296 8 view .LVU5481
 19963 0012 002B     		cmp	r3, #0
 19964 0014 71D0     		beq	.L1434
 19965 0016 0546     		mov	r5, r0
9297:Core/Src/bno055.c ****     {
9298:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9299:Core/Src/bno055.c ****     }
9300:Core/Src/bno055.c ****     else
9301:Core/Src/bno055.c ****     {
9302:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9303:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9304:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9305:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19966              		.loc 1 9305 9 is_stmt 1 view .LVU5482
 19967              		.loc 1 9305 19 is_stmt 0 view .LVU5483
 19968 0018 0DF10600 		add	r0, sp, #6
 19969              	.LVL2445:
 19970              		.loc 1 9305 19 view .LVU5484
 19971 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19972              	.LVL2446:
9306:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19973              		.loc 1 9306 9 is_stmt 1 view .LVU5485
 19974              		.loc 1 9306 12 is_stmt 0 view .LVU5486
 19975 0020 0446     		mov	r4, r0
 19976 0022 0028     		cmp	r0, #0
 19977 0024 58D1     		bne	.L1435
9307:Core/Src/bno055.c ****         {
9308:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19978              		.loc 1 9308 13 is_stmt 1 view .LVU5487
 19979              		.loc 1 9308 32 is_stmt 0 view .LVU5488
 19980 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19981              		.loc 1 9308 16 view .LVU5489
 19982 002a 6BBB     		cbnz	r3, .L1438
 19983              	.LVL2447:
 19984              	.L1432:
ARM GAS  /tmp/cc9kYR4Z.s 			page 564


9309:Core/Src/bno055.c ****             {
9310:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9311:Core/Src/bno055.c ****             }
9312:Core/Src/bno055.c **** 
9313:Core/Src/bno055.c ****             /* Write the value of axis remap */
9314:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19985              		.loc 1 9314 13 is_stmt 1 view .LVU5490
 19986              		.loc 1 9314 16 is_stmt 0 view .LVU5491
 19987 002c 002C     		cmp	r4, #0
 19988 002e 5BD1     		bne	.L1436
9315:Core/Src/bno055.c ****             {
9316:Core/Src/bno055.c ****                 switch (remap_axis_u8)
 19989              		.loc 1 9316 17 is_stmt 1 view .LVU5492
 19990 0030 AB1F     		subs	r3, r5, #6
 19991 0032 DBB2     		uxtb	r3, r3
 19992 0034 1E2B     		cmp	r3, #30
 19993 0036 05D8     		bhi	.L1433
 19994 0038 324A     		ldr	r2, .L1441+4
 19995 003a 22FA03F3 		lsr	r3, r2, r3
 19996 003e 13F0010F 		tst	r3, #1
 19997 0042 27D1     		bne	.L1439
 19998              	.L1433:
9317:Core/Src/bno055.c ****                 {
9318:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y:
9319:Core/Src/bno055.c ****                     case BNO055_REMAP_Y_Z:
9320:Core/Src/bno055.c ****                     case BNO055_REMAP_Z_X:
9321:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE0:
9322:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE1:
9323:Core/Src/bno055.c ****                     case BNO055_DEFAULT_AXIS:
9324:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
9325:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9326:Core/Src/bno055.c ****                                                                   &data_u8r,
9327:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9328:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
9329:Core/Src/bno055.c ****                         {
9330:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, remap
9331:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
9332:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9333:Core/Src/bno055.c ****                                                                         &data_u8r,
9334:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9335:Core/Src/bno055.c ****                         }
9336:Core/Src/bno055.c ****                         break;
9337:Core/Src/bno055.c ****                     default:
9338:Core/Src/bno055.c **** 
9339:Core/Src/bno055.c ****                         /* Write the default axis remap value */
9340:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19999              		.loc 1 9340 25 view .LVU5493
 20000              		.loc 1 9340 44 is_stmt 0 view .LVU5494
 20001 0044 2E4B     		ldr	r3, .L1441
 20002 0046 1868     		ldr	r0, [r3]
 20003 0048 0469     		ldr	r4, [r0, #16]
 20004              	.LVL2448:
 20005              		.loc 1 9340 36 view .LVU5495
 20006 004a 0123     		movs	r3, #1
 20007 004c 0DF10702 		add	r2, sp, #7
 20008 0050 4121     		movs	r1, #65
 20009 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 565


 20010 0054 A047     		blx	r4
 20011              	.LVL2449:
9341:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9342:Core/Src/bno055.c ****                                                                   &data_u8r,
9343:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9344:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 20012              		.loc 1 9344 25 is_stmt 1 view .LVU5496
 20013              		.loc 1 9344 28 is_stmt 0 view .LVU5497
 20014 0056 0446     		mov	r4, r0
 20015 0058 0028     		cmp	r0, #0
 20016 005a 3FD1     		bne	.L1431
9345:Core/Src/bno055.c ****                         {
9346:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, BNO05
 20017              		.loc 1 9346 29 is_stmt 1 view .LVU5498
 20018              		.loc 1 9346 40 is_stmt 0 view .LVU5499
 20019 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20020 0060 23F03F03 		bic	r3, r3, #63
 20021 0064 5BB2     		sxtb	r3, r3
 20022 0066 43F02403 		orr	r3, r3, #36
 20023              		.loc 1 9346 38 view .LVU5500
 20024 006a 8DF80730 		strb	r3, [sp, #7]
9347:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20025              		.loc 1 9347 29 is_stmt 1 view .LVU5501
 20026              		.loc 1 9347 49 is_stmt 0 view .LVU5502
 20027 006e 244B     		ldr	r3, .L1441
 20028 0070 1868     		ldr	r0, [r3]
 20029              	.LVL2450:
 20030              		.loc 1 9347 49 view .LVU5503
 20031 0072 C568     		ldr	r5, [r0, #12]
 20032              		.loc 1 9347 41 view .LVU5504
 20033 0074 0123     		movs	r3, #1
 20034 0076 0DF10702 		add	r2, sp, #7
 20035 007a 4121     		movs	r1, #65
 20036 007c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20037 007e A847     		blx	r5
 20038              	.LVL2451:
 20039              		.loc 1 9347 38 view .LVU5505
 20040 0080 54FA80F0 		uxtab	r0, r4, r0
 20041 0084 44B2     		sxtb	r4, r0
 20042              	.LVL2452:
 20043              		.loc 1 9347 38 view .LVU5506
 20044 0086 29E0     		b	.L1431
 20045              	.LVL2453:
 20046              	.L1438:
9310:Core/Src/bno055.c ****             }
 20047              		.loc 1 9310 17 is_stmt 1 view .LVU5507
9310:Core/Src/bno055.c ****             }
 20048              		.loc 1 9310 28 is_stmt 0 view .LVU5508
 20049 0088 FFF7FEFF 		bl	bno055_set_operation_mode
 20050              	.LVL2454:
9310:Core/Src/bno055.c ****             }
 20051              		.loc 1 9310 25 view .LVU5509
 20052 008c 54FA80F4 		uxtab	r4, r4, r0
 20053 0090 64B2     		sxtb	r4, r4
 20054              	.LVL2455:
9310:Core/Src/bno055.c ****             }
 20055              		.loc 1 9310 25 view .LVU5510
ARM GAS  /tmp/cc9kYR4Z.s 			page 566


 20056 0092 CBE7     		b	.L1432
 20057              	.L1439:
9324:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
 20058              		.loc 1 9324 25 is_stmt 1 view .LVU5511
9324:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
 20059              		.loc 1 9324 44 is_stmt 0 view .LVU5512
 20060 0094 1A4B     		ldr	r3, .L1441
 20061 0096 1868     		ldr	r0, [r3]
 20062 0098 0469     		ldr	r4, [r0, #16]
 20063              	.LVL2456:
9324:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
 20064              		.loc 1 9324 36 view .LVU5513
 20065 009a 0123     		movs	r3, #1
 20066 009c 0DF10702 		add	r2, sp, #7
 20067 00a0 4121     		movs	r1, #65
 20068 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20069 00a4 A047     		blx	r4
 20070              	.LVL2457:
9328:Core/Src/bno055.c ****                         {
 20071              		.loc 1 9328 25 is_stmt 1 view .LVU5514
9328:Core/Src/bno055.c ****                         {
 20072              		.loc 1 9328 28 is_stmt 0 view .LVU5515
 20073 00a6 0446     		mov	r4, r0
 20074 00a8 C0B9     		cbnz	r0, .L1431
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20075              		.loc 1 9330 29 is_stmt 1 view .LVU5516
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20076              		.loc 1 9330 40 is_stmt 0 view .LVU5517
 20077 00aa 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20078 00ae 23F03F03 		bic	r3, r3, #63
 20079 00b2 5BB2     		sxtb	r3, r3
 20080 00b4 05F03F00 		and	r0, r5, #63
 20081              	.LVL2458:
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20082              		.loc 1 9330 40 view .LVU5518
 20083 00b8 0343     		orrs	r3, r3, r0
9330:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20084              		.loc 1 9330 38 view .LVU5519
 20085 00ba 8DF80730 		strb	r3, [sp, #7]
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 20086              		.loc 1 9331 29 is_stmt 1 view .LVU5520
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 20087              		.loc 1 9331 49 is_stmt 0 view .LVU5521
 20088 00be 104B     		ldr	r3, .L1441
 20089 00c0 1868     		ldr	r0, [r3]
 20090 00c2 C568     		ldr	r5, [r0, #12]
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 20091              		.loc 1 9331 41 view .LVU5522
 20092 00c4 0123     		movs	r3, #1
 20093 00c6 0DF10702 		add	r2, sp, #7
 20094 00ca 4121     		movs	r1, #65
 20095 00cc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20096 00ce A847     		blx	r5
 20097              	.LVL2459:
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 20098              		.loc 1 9331 38 view .LVU5523
 20099 00d0 54FA80F0 		uxtab	r0, r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 567


 20100 00d4 44B2     		sxtb	r4, r0
 20101              	.LVL2460:
9331:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
 20102              		.loc 1 9331 38 view .LVU5524
 20103 00d6 01E0     		b	.L1431
 20104              	.LVL2461:
 20105              	.L1435:
9348:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9349:Core/Src/bno055.c ****                                                                         &data_u8r,
9350:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9351:Core/Src/bno055.c ****                         }
9352:Core/Src/bno055.c ****                         break;
9353:Core/Src/bno055.c ****                 }
9354:Core/Src/bno055.c ****             }
9355:Core/Src/bno055.c ****             else
9356:Core/Src/bno055.c ****             {
9357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9358:Core/Src/bno055.c ****             }
9359:Core/Src/bno055.c ****         }
9360:Core/Src/bno055.c ****         else
9361:Core/Src/bno055.c ****         {
9362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20106              		.loc 1 9362 22 view .LVU5525
 20107 00d8 4FF0FF34 		mov	r4, #-1
 20108              	.LVL2462:
 20109              	.L1431:
9363:Core/Src/bno055.c ****         }
9364:Core/Src/bno055.c ****     }
9365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20110              		.loc 1 9365 5 is_stmt 1 view .LVU5526
 20111              		.loc 1 9365 24 is_stmt 0 view .LVU5527
 20112 00dc 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20113              		.loc 1 9365 8 view .LVU5528
 20114 00e0 28B9     		cbnz	r0, .L1440
 20115              	.LVL2463:
 20116              	.L1430:
9366:Core/Src/bno055.c ****     {
9367:Core/Src/bno055.c ****         /* set the operation mode
9368:Core/Src/bno055.c ****          * of previous operation mode*/
9369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9370:Core/Src/bno055.c ****     }
9371:Core/Src/bno055.c **** 
9372:Core/Src/bno055.c ****     return com_rslt;
9373:Core/Src/bno055.c **** }
 20117              		.loc 1 9373 1 view .LVU5529
 20118 00e2 2046     		mov	r0, r4
 20119 00e4 03B0     		add	sp, sp, #12
 20120              	.LCFI635:
 20121              		.cfi_remember_state
 20122              		.cfi_def_cfa_offset 12
 20123              		@ sp needed
 20124 00e6 30BD     		pop	{r4, r5, pc}
 20125              	.LVL2464:
 20126              	.L1436:
 20127              	.LCFI636:
 20128              		.cfi_restore_state
9357:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 568


 20129              		.loc 1 9357 26 view .LVU5530
 20130 00e8 4FF0FF34 		mov	r4, #-1
 20131              	.LVL2465:
9357:Core/Src/bno055.c ****             }
 20132              		.loc 1 9357 26 view .LVU5531
 20133 00ec F6E7     		b	.L1431
 20134              	.LVL2466:
 20135              	.L1440:
9369:Core/Src/bno055.c ****     }
 20136              		.loc 1 9369 9 is_stmt 1 view .LVU5532
9369:Core/Src/bno055.c ****     }
 20137              		.loc 1 9369 21 is_stmt 0 view .LVU5533
 20138 00ee FFF7FEFF 		bl	bno055_set_operation_mode
 20139              	.LVL2467:
9369:Core/Src/bno055.c ****     }
 20140              		.loc 1 9369 18 view .LVU5534
 20141 00f2 54FA80F0 		uxtab	r0, r4, r0
 20142 00f6 44B2     		sxtb	r4, r0
 20143              	.LVL2468:
9369:Core/Src/bno055.c ****     }
 20144              		.loc 1 9369 18 view .LVU5535
 20145 00f8 F3E7     		b	.L1430
 20146              	.LVL2469:
 20147              	.L1434:
9298:Core/Src/bno055.c ****     }
 20148              		.loc 1 9298 16 view .LVU5536
 20149 00fa 6FF07E04 		mvn	r4, #126
 20150 00fe F0E7     		b	.L1430
 20151              	.L1442:
 20152              		.align	2
 20153              	.L1441:
 20154 0100 00000000 		.word	.LANCHOR0
 20155 0104 09100448 		.word	1208225801
 20156              		.cfi_endproc
 20157              	.LFE160:
 20159              		.section	.text.bno055_get_remap_x_sign,"ax",%progbits
 20160              		.align	1
 20161              		.global	bno055_get_remap_x_sign
 20162              		.syntax unified
 20163              		.thumb
 20164              		.thumb_func
 20166              	bno055_get_remap_x_sign:
 20167              	.LVL2470:
 20168              	.LFB161:
9374:Core/Src/bno055.c **** 
9375:Core/Src/bno055.c **** /*!
9376:Core/Src/bno055.c ****  *  @brief This API used to read the x-axis remap
9377:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9378:Core/Src/bno055.c ****  *
9379:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9380:Core/Src/bno055.c ****  *
9381:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9382:Core/Src/bno055.c ****  *   ------------------- |--------------------
9383:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9384:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9385:Core/Src/bno055.c ****  *
9386:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/cc9kYR4Z.s 			page 569


9387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9389:Core/Src/bno055.c ****  *
9390:Core/Src/bno055.c ****  */
9391:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_x_sign(u8 *remap_x_sign_u8)
9392:Core/Src/bno055.c **** {
 20169              		.loc 1 9392 1 is_stmt 1 view -0
 20170              		.cfi_startproc
 20171              		@ args = 0, pretend = 0, frame = 8
 20172              		@ frame_needed = 0, uses_anonymous_args = 0
 20173              		.loc 1 9392 1 is_stmt 0 view .LVU5538
 20174 0000 30B5     		push	{r4, r5, lr}
 20175              	.LCFI637:
 20176              		.cfi_def_cfa_offset 12
 20177              		.cfi_offset 4, -12
 20178              		.cfi_offset 5, -8
 20179              		.cfi_offset 14, -4
 20180 0002 83B0     		sub	sp, sp, #12
 20181              	.LCFI638:
 20182              		.cfi_def_cfa_offset 24
9393:Core/Src/bno055.c ****     /* Variable used to return value of
9394:Core/Src/bno055.c ****      * communication routine*/
9395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20183              		.loc 1 9395 5 is_stmt 1 view .LVU5539
 20184              	.LVL2471:
9396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20185              		.loc 1 9396 5 view .LVU5540
 20186              		.loc 1 9396 8 is_stmt 0 view .LVU5541
 20187 0004 0023     		movs	r3, #0
 20188 0006 8DF80730 		strb	r3, [sp, #7]
9397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20189              		.loc 1 9397 5 is_stmt 1 view .LVU5542
 20190              	.LVL2472:
9398:Core/Src/bno055.c **** 
9399:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9400:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20191              		.loc 1 9400 5 view .LVU5543
 20192              		.loc 1 9400 18 is_stmt 0 view .LVU5544
 20193 000a 134B     		ldr	r3, .L1451
 20194 000c 1B68     		ldr	r3, [r3]
 20195              		.loc 1 9400 8 view .LVU5545
 20196 000e E3B1     		cbz	r3, .L1447
 20197 0010 0446     		mov	r4, r0
9401:Core/Src/bno055.c ****     {
9402:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9403:Core/Src/bno055.c ****     }
9404:Core/Src/bno055.c ****     else
9405:Core/Src/bno055.c ****     {
9406:Core/Src/bno055.c ****         /*condition check for page, x-axis remap sign is
9407:Core/Src/bno055.c ****          * available in the page zero*/
9408:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20198              		.loc 1 9408 9 is_stmt 1 view .LVU5546
 20199              		.loc 1 9408 21 is_stmt 0 view .LVU5547
 20200 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20201              		.loc 1 9408 12 view .LVU5548
 20202 0014 9BB9     		cbnz	r3, .L1450
 20203              	.LVL2473:
ARM GAS  /tmp/cc9kYR4Z.s 			page 570


 20204              	.L1445:
9409:Core/Src/bno055.c ****         {
9410:Core/Src/bno055.c ****             /* Write the page zero*/
9411:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9412:Core/Src/bno055.c ****         }
9413:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20205              		.loc 1 9413 53 discriminator 1 view .LVU5549
 20206 0016 104B     		ldr	r3, .L1451
 20207 0018 1B68     		ldr	r3, [r3]
 20208 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20209              		.loc 1 9413 41 discriminator 1 view .LVU5550
 20210 001c C3B9     		cbnz	r3, .L1448
 20211              	.L1446:
9414:Core/Src/bno055.c ****         {
9415:Core/Src/bno055.c ****             /* Read the value of x-axis remap sign */
9416:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20212              		.loc 1 9416 13 is_stmt 1 view .LVU5551
 20213              		.loc 1 9416 32 is_stmt 0 view .LVU5552
 20214 001e 0E4B     		ldr	r3, .L1451
 20215 0020 1868     		ldr	r0, [r3]
 20216 0022 0569     		ldr	r5, [r0, #16]
 20217              		.loc 1 9416 24 view .LVU5553
 20218 0024 0123     		movs	r3, #1
 20219 0026 0DF10702 		add	r2, sp, #7
 20220 002a 4221     		movs	r1, #66
 20221 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20222 002e A847     		blx	r5
 20223              	.LVL2474:
9417:Core/Src/bno055.c ****                                                       BNO055_REMAP_X_SIGN_REG,
9418:Core/Src/bno055.c ****                                                       &data_u8r,
9419:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9420:Core/Src/bno055.c ****             *remap_x_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN);
 20224              		.loc 1 9420 13 is_stmt 1 view .LVU5554
 20225              		.loc 1 9420 32 is_stmt 0 view .LVU5555
 20226 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20227 0034 C3F38003 		ubfx	r3, r3, #2, #1
 20228              		.loc 1 9420 30 view .LVU5556
 20229 0038 2370     		strb	r3, [r4]
 20230              	.LVL2475:
 20231              	.L1444:
9421:Core/Src/bno055.c ****         }
9422:Core/Src/bno055.c ****         else
9423:Core/Src/bno055.c ****         {
9424:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9425:Core/Src/bno055.c ****         }
9426:Core/Src/bno055.c ****     }
9427:Core/Src/bno055.c **** 
9428:Core/Src/bno055.c ****     return com_rslt;
9429:Core/Src/bno055.c **** }
 20232              		.loc 1 9429 1 view .LVU5557
 20233 003a 03B0     		add	sp, sp, #12
 20234              	.LCFI639:
 20235              		.cfi_remember_state
 20236              		.cfi_def_cfa_offset 12
 20237              		@ sp needed
 20238 003c 30BD     		pop	{r4, r5, pc}
 20239              	.LVL2476:
ARM GAS  /tmp/cc9kYR4Z.s 			page 571


 20240              	.L1450:
 20241              	.LCFI640:
 20242              		.cfi_restore_state
9411:Core/Src/bno055.c ****         }
 20243              		.loc 1 9411 13 is_stmt 1 view .LVU5558
9411:Core/Src/bno055.c ****         }
 20244              		.loc 1 9411 23 is_stmt 0 view .LVU5559
 20245 003e 0020     		movs	r0, #0
 20246              	.LVL2477:
9411:Core/Src/bno055.c ****         }
 20247              		.loc 1 9411 23 view .LVU5560
 20248 0040 FFF7FEFF 		bl	bno055_write_page_id
 20249              	.LVL2478:
9413:Core/Src/bno055.c ****         {
 20250              		.loc 1 9413 9 is_stmt 1 view .LVU5561
9413:Core/Src/bno055.c ****         {
 20251              		.loc 1 9413 12 is_stmt 0 view .LVU5562
 20252 0044 0028     		cmp	r0, #0
 20253 0046 EAD0     		beq	.L1446
 20254 0048 E5E7     		b	.L1445
 20255              	.LVL2479:
 20256              	.L1447:
9402:Core/Src/bno055.c ****     }
 20257              		.loc 1 9402 16 view .LVU5563
 20258 004a 6FF07E00 		mvn	r0, #126
 20259              	.LVL2480:
9402:Core/Src/bno055.c ****     }
 20260              		.loc 1 9402 16 view .LVU5564
 20261 004e F4E7     		b	.L1444
 20262              	.LVL2481:
 20263              	.L1448:
9424:Core/Src/bno055.c ****         }
 20264              		.loc 1 9424 22 view .LVU5565
 20265 0050 4FF0FF30 		mov	r0, #-1
 20266 0054 F1E7     		b	.L1444
 20267              	.L1452:
 20268 0056 00BF     		.align	2
 20269              	.L1451:
 20270 0058 00000000 		.word	.LANCHOR0
 20271              		.cfi_endproc
 20272              	.LFE161:
 20274              		.section	.text.bno055_set_remap_x_sign,"ax",%progbits
 20275              		.align	1
 20276              		.global	bno055_set_remap_x_sign
 20277              		.syntax unified
 20278              		.thumb
 20279              		.thumb_func
 20281              	bno055_set_remap_x_sign:
 20282              	.LVL2482:
 20283              	.LFB162:
9430:Core/Src/bno055.c **** 
9431:Core/Src/bno055.c **** /*!
9432:Core/Src/bno055.c ****  *  @brief This API used to write the x-axis remap
9433:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9434:Core/Src/bno055.c ****  *
9435:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9436:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 572


9437:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9438:Core/Src/bno055.c ****  *   ------------------- |--------------------
9439:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9440:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9441:Core/Src/bno055.c ****  *
9442:Core/Src/bno055.c ****  *  @return results of bus communication function
9443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9445:Core/Src/bno055.c ****  *
9446:Core/Src/bno055.c ****  */
9447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_x_sign(u8 remap_x_sign_u8)
9448:Core/Src/bno055.c **** {
 20284              		.loc 1 9448 1 is_stmt 1 view -0
 20285              		.cfi_startproc
 20286              		@ args = 0, pretend = 0, frame = 8
 20287              		@ frame_needed = 0, uses_anonymous_args = 0
 20288              		.loc 1 9448 1 is_stmt 0 view .LVU5567
 20289 0000 30B5     		push	{r4, r5, lr}
 20290              	.LCFI641:
 20291              		.cfi_def_cfa_offset 12
 20292              		.cfi_offset 4, -12
 20293              		.cfi_offset 5, -8
 20294              		.cfi_offset 14, -4
 20295 0002 83B0     		sub	sp, sp, #12
 20296              	.LCFI642:
 20297              		.cfi_def_cfa_offset 24
9449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20298              		.loc 1 9449 5 is_stmt 1 view .LVU5568
 20299              	.LVL2483:
9450:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20300              		.loc 1 9450 5 view .LVU5569
 20301              		.loc 1 9450 8 is_stmt 0 view .LVU5570
 20302 0004 0023     		movs	r3, #0
 20303 0006 8DF80730 		strb	r3, [sp, #7]
9451:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20304              		.loc 1 9451 5 is_stmt 1 view .LVU5571
 20305              		.loc 1 9451 8 is_stmt 0 view .LVU5572
 20306 000a 8DF80630 		strb	r3, [sp, #6]
9452:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20307              		.loc 1 9452 5 is_stmt 1 view .LVU5573
 20308              	.LVL2484:
9453:Core/Src/bno055.c **** 
9454:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9455:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20309              		.loc 1 9455 5 view .LVU5574
 20310              		.loc 1 9455 18 is_stmt 0 view .LVU5575
 20311 000e 264B     		ldr	r3, .L1463
 20312 0010 1B68     		ldr	r3, [r3]
 20313              		.loc 1 9455 8 view .LVU5576
 20314 0012 002B     		cmp	r3, #0
 20315 0014 44D0     		beq	.L1457
 20316 0016 0546     		mov	r5, r0
9456:Core/Src/bno055.c ****     {
9457:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9458:Core/Src/bno055.c ****     }
9459:Core/Src/bno055.c ****     else
9460:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 573


9461:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9462:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9463:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9464:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20317              		.loc 1 9464 9 is_stmt 1 view .LVU5577
 20318              		.loc 1 9464 19 is_stmt 0 view .LVU5578
 20319 0018 0DF10600 		add	r0, sp, #6
 20320              	.LVL2485:
 20321              		.loc 1 9464 19 view .LVU5579
 20322 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20323              	.LVL2486:
9465:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20324              		.loc 1 9465 9 is_stmt 1 view .LVU5580
 20325              		.loc 1 9465 12 is_stmt 0 view .LVU5581
 20326 0020 0446     		mov	r4, r0
 20327 0022 60BB     		cbnz	r0, .L1458
9466:Core/Src/bno055.c ****         {
9467:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20328              		.loc 1 9467 13 is_stmt 1 view .LVU5582
 20329              		.loc 1 9467 32 is_stmt 0 view .LVU5583
 20330 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20331              		.loc 1 9467 16 view .LVU5584
 20332 0028 1BBB     		cbnz	r3, .L1461
 20333              	.LVL2487:
 20334              	.L1456:
9468:Core/Src/bno055.c ****             {
9469:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9470:Core/Src/bno055.c ****             }
9471:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20335              		.loc 1 9471 13 is_stmt 1 view .LVU5585
 20336              		.loc 1 9471 16 is_stmt 0 view .LVU5586
 20337 002a 84BB     		cbnz	r4, .L1459
9472:Core/Src/bno055.c ****             {
9473:Core/Src/bno055.c ****                 /* Write the value of x-axis remap */
9474:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20338              		.loc 1 9474 17 is_stmt 1 view .LVU5587
 20339              		.loc 1 9474 36 is_stmt 0 view .LVU5588
 20340 002c 1E4B     		ldr	r3, .L1463
 20341 002e 1868     		ldr	r0, [r3]
 20342 0030 0469     		ldr	r4, [r0, #16]
 20343              	.LVL2488:
 20344              		.loc 1 9474 28 view .LVU5589
 20345 0032 0123     		movs	r3, #1
 20346 0034 0DF10702 		add	r2, sp, #7
 20347 0038 4221     		movs	r1, #66
 20348 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20349 003c A047     		blx	r4
 20350              	.LVL2489:
9475:Core/Src/bno055.c ****                                                           BNO055_REMAP_X_SIGN_REG,
9476:Core/Src/bno055.c ****                                                           &data_u8r,
9477:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9478:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20351              		.loc 1 9478 17 is_stmt 1 view .LVU5590
 20352              		.loc 1 9478 20 is_stmt 0 view .LVU5591
 20353 003e 0446     		mov	r4, r0
 20354 0040 F8B9     		cbnz	r0, .L1455
9479:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/cc9kYR4Z.s 			page 574


9480:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN, remap_x_sign_u8);
 20355              		.loc 1 9480 21 is_stmt 1 view .LVU5592
 20356              		.loc 1 9480 32 is_stmt 0 view .LVU5593
 20357 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20358 0046 23F00403 		bic	r3, r3, #4
 20359 004a 5BB2     		sxtb	r3, r3
 20360 004c A800     		lsls	r0, r5, #2
 20361              	.LVL2490:
 20362              		.loc 1 9480 32 view .LVU5594
 20363 004e 00F00400 		and	r0, r0, #4
 20364 0052 0343     		orrs	r3, r3, r0
 20365              		.loc 1 9480 30 view .LVU5595
 20366 0054 8DF80730 		strb	r3, [sp, #7]
9481:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20367              		.loc 1 9481 21 is_stmt 1 view .LVU5596
 20368              		.loc 1 9481 41 is_stmt 0 view .LVU5597
 20369 0058 134B     		ldr	r3, .L1463
 20370 005a 1868     		ldr	r0, [r3]
 20371 005c C568     		ldr	r5, [r0, #12]
 20372              		.loc 1 9481 33 view .LVU5598
 20373 005e 0123     		movs	r3, #1
 20374 0060 0DF10702 		add	r2, sp, #7
 20375 0064 4221     		movs	r1, #66
 20376 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20377 0068 A847     		blx	r5
 20378              	.LVL2491:
 20379              		.loc 1 9481 30 view .LVU5599
 20380 006a 54FA80F0 		uxtab	r0, r4, r0
 20381 006e 44B2     		sxtb	r4, r0
 20382              	.LVL2492:
 20383              		.loc 1 9481 30 view .LVU5600
 20384 0070 07E0     		b	.L1455
 20385              	.LVL2493:
 20386              	.L1461:
9469:Core/Src/bno055.c ****             }
 20387              		.loc 1 9469 17 is_stmt 1 view .LVU5601
9469:Core/Src/bno055.c ****             }
 20388              		.loc 1 9469 28 is_stmt 0 view .LVU5602
 20389 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 20390              	.LVL2494:
9469:Core/Src/bno055.c ****             }
 20391              		.loc 1 9469 25 view .LVU5603
 20392 0076 54FA80F4 		uxtab	r4, r4, r0
 20393 007a 64B2     		sxtb	r4, r4
 20394              	.LVL2495:
9469:Core/Src/bno055.c ****             }
 20395              		.loc 1 9469 25 view .LVU5604
 20396 007c D5E7     		b	.L1456
 20397              	.LVL2496:
 20398              	.L1458:
9482:Core/Src/bno055.c ****                                                                 BNO055_REMAP_X_SIGN_REG,
9483:Core/Src/bno055.c ****                                                                 &data_u8r,
9484:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9485:Core/Src/bno055.c ****                 }
9486:Core/Src/bno055.c ****             }
9487:Core/Src/bno055.c ****             else
9488:Core/Src/bno055.c ****             {
ARM GAS  /tmp/cc9kYR4Z.s 			page 575


9489:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9490:Core/Src/bno055.c ****             }
9491:Core/Src/bno055.c ****         }
9492:Core/Src/bno055.c ****         else
9493:Core/Src/bno055.c ****         {
9494:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20399              		.loc 1 9494 22 view .LVU5605
 20400 007e 4FF0FF34 		mov	r4, #-1
 20401              	.LVL2497:
 20402              	.L1455:
9495:Core/Src/bno055.c ****         }
9496:Core/Src/bno055.c ****     }
9497:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20403              		.loc 1 9497 5 is_stmt 1 view .LVU5606
 20404              		.loc 1 9497 24 is_stmt 0 view .LVU5607
 20405 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20406              		.loc 1 9497 8 view .LVU5608
 20407 0086 28B9     		cbnz	r0, .L1462
 20408              	.LVL2498:
 20409              	.L1454:
9498:Core/Src/bno055.c ****     {
9499:Core/Src/bno055.c ****         /* set the operation mode
9500:Core/Src/bno055.c ****          * of previous operation mode*/
9501:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9502:Core/Src/bno055.c ****     }
9503:Core/Src/bno055.c **** 
9504:Core/Src/bno055.c ****     return com_rslt;
9505:Core/Src/bno055.c **** }
 20410              		.loc 1 9505 1 view .LVU5609
 20411 0088 2046     		mov	r0, r4
 20412 008a 03B0     		add	sp, sp, #12
 20413              	.LCFI643:
 20414              		.cfi_remember_state
 20415              		.cfi_def_cfa_offset 12
 20416              		@ sp needed
 20417 008c 30BD     		pop	{r4, r5, pc}
 20418              	.LVL2499:
 20419              	.L1459:
 20420              	.LCFI644:
 20421              		.cfi_restore_state
9489:Core/Src/bno055.c ****             }
 20422              		.loc 1 9489 26 view .LVU5610
 20423 008e 4FF0FF34 		mov	r4, #-1
 20424              	.LVL2500:
9489:Core/Src/bno055.c ****             }
 20425              		.loc 1 9489 26 view .LVU5611
 20426 0092 F6E7     		b	.L1455
 20427              	.LVL2501:
 20428              	.L1462:
9501:Core/Src/bno055.c ****     }
 20429              		.loc 1 9501 9 is_stmt 1 view .LVU5612
9501:Core/Src/bno055.c ****     }
 20430              		.loc 1 9501 21 is_stmt 0 view .LVU5613
 20431 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 20432              	.LVL2502:
9501:Core/Src/bno055.c ****     }
 20433              		.loc 1 9501 18 view .LVU5614
ARM GAS  /tmp/cc9kYR4Z.s 			page 576


 20434 0098 54FA80F0 		uxtab	r0, r4, r0
 20435 009c 44B2     		sxtb	r4, r0
 20436              	.LVL2503:
9501:Core/Src/bno055.c ****     }
 20437              		.loc 1 9501 18 view .LVU5615
 20438 009e F3E7     		b	.L1454
 20439              	.LVL2504:
 20440              	.L1457:
9457:Core/Src/bno055.c ****     }
 20441              		.loc 1 9457 16 view .LVU5616
 20442 00a0 6FF07E04 		mvn	r4, #126
 20443 00a4 F0E7     		b	.L1454
 20444              	.L1464:
 20445 00a6 00BF     		.align	2
 20446              	.L1463:
 20447 00a8 00000000 		.word	.LANCHOR0
 20448              		.cfi_endproc
 20449              	.LFE162:
 20451              		.section	.text.bno055_get_remap_y_sign,"ax",%progbits
 20452              		.align	1
 20453              		.global	bno055_get_remap_y_sign
 20454              		.syntax unified
 20455              		.thumb
 20456              		.thumb_func
 20458              	bno055_get_remap_y_sign:
 20459              	.LVL2505:
 20460              	.LFB163:
9506:Core/Src/bno055.c **** 
9507:Core/Src/bno055.c **** /*!
9508:Core/Src/bno055.c ****  *  @brief This API used to read the y-axis remap
9509:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9510:Core/Src/bno055.c ****  *
9511:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9512:Core/Src/bno055.c ****  *
9513:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9514:Core/Src/bno055.c ****  *   ------------------- |--------------------
9515:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9516:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9517:Core/Src/bno055.c ****  *
9518:Core/Src/bno055.c ****  *  @return results of bus communication function
9519:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9520:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9521:Core/Src/bno055.c ****  *
9522:Core/Src/bno055.c ****  */
9523:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_y_sign(u8 *remap_y_sign_u8)
9524:Core/Src/bno055.c **** {
 20461              		.loc 1 9524 1 is_stmt 1 view -0
 20462              		.cfi_startproc
 20463              		@ args = 0, pretend = 0, frame = 8
 20464              		@ frame_needed = 0, uses_anonymous_args = 0
 20465              		.loc 1 9524 1 is_stmt 0 view .LVU5618
 20466 0000 30B5     		push	{r4, r5, lr}
 20467              	.LCFI645:
 20468              		.cfi_def_cfa_offset 12
 20469              		.cfi_offset 4, -12
 20470              		.cfi_offset 5, -8
 20471              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9kYR4Z.s 			page 577


 20472 0002 83B0     		sub	sp, sp, #12
 20473              	.LCFI646:
 20474              		.cfi_def_cfa_offset 24
9525:Core/Src/bno055.c ****     /* Variable used to return value of
9526:Core/Src/bno055.c ****      * communication routine*/
9527:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20475              		.loc 1 9527 5 is_stmt 1 view .LVU5619
 20476              	.LVL2506:
9528:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20477              		.loc 1 9528 5 view .LVU5620
 20478              		.loc 1 9528 8 is_stmt 0 view .LVU5621
 20479 0004 0023     		movs	r3, #0
 20480 0006 8DF80730 		strb	r3, [sp, #7]
9529:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20481              		.loc 1 9529 5 is_stmt 1 view .LVU5622
 20482              	.LVL2507:
9530:Core/Src/bno055.c **** 
9531:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9532:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20483              		.loc 1 9532 5 view .LVU5623
 20484              		.loc 1 9532 18 is_stmt 0 view .LVU5624
 20485 000a 134B     		ldr	r3, .L1473
 20486 000c 1B68     		ldr	r3, [r3]
 20487              		.loc 1 9532 8 view .LVU5625
 20488 000e E3B1     		cbz	r3, .L1469
 20489 0010 0446     		mov	r4, r0
9533:Core/Src/bno055.c ****     {
9534:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9535:Core/Src/bno055.c ****     }
9536:Core/Src/bno055.c ****     else
9537:Core/Src/bno055.c ****     {
9538:Core/Src/bno055.c ****         /*condition check for page, y-axis remap sign is
9539:Core/Src/bno055.c ****          * available in the page zero*/
9540:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20490              		.loc 1 9540 9 is_stmt 1 view .LVU5626
 20491              		.loc 1 9540 21 is_stmt 0 view .LVU5627
 20492 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20493              		.loc 1 9540 12 view .LVU5628
 20494 0014 9BB9     		cbnz	r3, .L1472
 20495              	.LVL2508:
 20496              	.L1467:
9541:Core/Src/bno055.c ****         {
9542:Core/Src/bno055.c ****             /* Write the page zero*/
9543:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9544:Core/Src/bno055.c ****         }
9545:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20497              		.loc 1 9545 53 discriminator 1 view .LVU5629
 20498 0016 104B     		ldr	r3, .L1473
 20499 0018 1B68     		ldr	r3, [r3]
 20500 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20501              		.loc 1 9545 41 discriminator 1 view .LVU5630
 20502 001c C3B9     		cbnz	r3, .L1470
 20503              	.L1468:
9546:Core/Src/bno055.c ****         {
9547:Core/Src/bno055.c ****             /* Read the value of y-axis remap sign*/
9548:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20504              		.loc 1 9548 13 is_stmt 1 view .LVU5631
ARM GAS  /tmp/cc9kYR4Z.s 			page 578


 20505              		.loc 1 9548 32 is_stmt 0 view .LVU5632
 20506 001e 0E4B     		ldr	r3, .L1473
 20507 0020 1868     		ldr	r0, [r3]
 20508 0022 0569     		ldr	r5, [r0, #16]
 20509              		.loc 1 9548 24 view .LVU5633
 20510 0024 0123     		movs	r3, #1
 20511 0026 0DF10702 		add	r2, sp, #7
 20512 002a 4221     		movs	r1, #66
 20513 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20514 002e A847     		blx	r5
 20515              	.LVL2509:
9549:Core/Src/bno055.c ****                                                       BNO055_REMAP_Y_SIGN_REG,
9550:Core/Src/bno055.c ****                                                       &data_u8r,
9551:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9552:Core/Src/bno055.c ****             *remap_y_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN);
 20516              		.loc 1 9552 13 is_stmt 1 view .LVU5634
 20517              		.loc 1 9552 32 is_stmt 0 view .LVU5635
 20518 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20519 0034 C3F34003 		ubfx	r3, r3, #1, #1
 20520              		.loc 1 9552 30 view .LVU5636
 20521 0038 2370     		strb	r3, [r4]
 20522              	.LVL2510:
 20523              	.L1466:
9553:Core/Src/bno055.c ****         }
9554:Core/Src/bno055.c ****         else
9555:Core/Src/bno055.c ****         {
9556:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9557:Core/Src/bno055.c ****         }
9558:Core/Src/bno055.c ****     }
9559:Core/Src/bno055.c **** 
9560:Core/Src/bno055.c ****     return com_rslt;
9561:Core/Src/bno055.c **** }
 20524              		.loc 1 9561 1 view .LVU5637
 20525 003a 03B0     		add	sp, sp, #12
 20526              	.LCFI647:
 20527              		.cfi_remember_state
 20528              		.cfi_def_cfa_offset 12
 20529              		@ sp needed
 20530 003c 30BD     		pop	{r4, r5, pc}
 20531              	.LVL2511:
 20532              	.L1472:
 20533              	.LCFI648:
 20534              		.cfi_restore_state
9543:Core/Src/bno055.c ****         }
 20535              		.loc 1 9543 13 is_stmt 1 view .LVU5638
9543:Core/Src/bno055.c ****         }
 20536              		.loc 1 9543 23 is_stmt 0 view .LVU5639
 20537 003e 0020     		movs	r0, #0
 20538              	.LVL2512:
9543:Core/Src/bno055.c ****         }
 20539              		.loc 1 9543 23 view .LVU5640
 20540 0040 FFF7FEFF 		bl	bno055_write_page_id
 20541              	.LVL2513:
9545:Core/Src/bno055.c ****         {
 20542              		.loc 1 9545 9 is_stmt 1 view .LVU5641
9545:Core/Src/bno055.c ****         {
 20543              		.loc 1 9545 12 is_stmt 0 view .LVU5642
ARM GAS  /tmp/cc9kYR4Z.s 			page 579


 20544 0044 0028     		cmp	r0, #0
 20545 0046 EAD0     		beq	.L1468
 20546 0048 E5E7     		b	.L1467
 20547              	.LVL2514:
 20548              	.L1469:
9534:Core/Src/bno055.c ****     }
 20549              		.loc 1 9534 16 view .LVU5643
 20550 004a 6FF07E00 		mvn	r0, #126
 20551              	.LVL2515:
9534:Core/Src/bno055.c ****     }
 20552              		.loc 1 9534 16 view .LVU5644
 20553 004e F4E7     		b	.L1466
 20554              	.LVL2516:
 20555              	.L1470:
9556:Core/Src/bno055.c ****         }
 20556              		.loc 1 9556 22 view .LVU5645
 20557 0050 4FF0FF30 		mov	r0, #-1
 20558 0054 F1E7     		b	.L1466
 20559              	.L1474:
 20560 0056 00BF     		.align	2
 20561              	.L1473:
 20562 0058 00000000 		.word	.LANCHOR0
 20563              		.cfi_endproc
 20564              	.LFE163:
 20566              		.section	.text.bno055_set_remap_y_sign,"ax",%progbits
 20567              		.align	1
 20568              		.global	bno055_set_remap_y_sign
 20569              		.syntax unified
 20570              		.thumb
 20571              		.thumb_func
 20573              	bno055_set_remap_y_sign:
 20574              	.LVL2517:
 20575              	.LFB164:
9562:Core/Src/bno055.c **** 
9563:Core/Src/bno055.c **** /*!
9564:Core/Src/bno055.c ****  *  @brief This API used to write the y-axis remap
9565:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9566:Core/Src/bno055.c ****  *
9567:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9568:Core/Src/bno055.c ****  *
9569:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9570:Core/Src/bno055.c ****  *   ------------------- |--------------------
9571:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9572:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9573:Core/Src/bno055.c ****  *
9574:Core/Src/bno055.c ****  *  @return results of bus communication function
9575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9577:Core/Src/bno055.c ****  *
9578:Core/Src/bno055.c ****  */
9579:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_y_sign(u8 remap_y_sign_u8)
9580:Core/Src/bno055.c **** {
 20576              		.loc 1 9580 1 is_stmt 1 view -0
 20577              		.cfi_startproc
 20578              		@ args = 0, pretend = 0, frame = 8
 20579              		@ frame_needed = 0, uses_anonymous_args = 0
 20580              		.loc 1 9580 1 is_stmt 0 view .LVU5647
ARM GAS  /tmp/cc9kYR4Z.s 			page 580


 20581 0000 30B5     		push	{r4, r5, lr}
 20582              	.LCFI649:
 20583              		.cfi_def_cfa_offset 12
 20584              		.cfi_offset 4, -12
 20585              		.cfi_offset 5, -8
 20586              		.cfi_offset 14, -4
 20587 0002 83B0     		sub	sp, sp, #12
 20588              	.LCFI650:
 20589              		.cfi_def_cfa_offset 24
9581:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20590              		.loc 1 9581 5 is_stmt 1 view .LVU5648
 20591              	.LVL2518:
9582:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20592              		.loc 1 9582 5 view .LVU5649
 20593              		.loc 1 9582 8 is_stmt 0 view .LVU5650
 20594 0004 0023     		movs	r3, #0
 20595 0006 8DF80730 		strb	r3, [sp, #7]
9583:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20596              		.loc 1 9583 5 is_stmt 1 view .LVU5651
 20597              		.loc 1 9583 8 is_stmt 0 view .LVU5652
 20598 000a 8DF80630 		strb	r3, [sp, #6]
9584:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20599              		.loc 1 9584 5 is_stmt 1 view .LVU5653
 20600              	.LVL2519:
9585:Core/Src/bno055.c **** 
9586:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9587:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20601              		.loc 1 9587 5 view .LVU5654
 20602              		.loc 1 9587 18 is_stmt 0 view .LVU5655
 20603 000e 264B     		ldr	r3, .L1485
 20604 0010 1B68     		ldr	r3, [r3]
 20605              		.loc 1 9587 8 view .LVU5656
 20606 0012 002B     		cmp	r3, #0
 20607 0014 44D0     		beq	.L1479
 20608 0016 0546     		mov	r5, r0
9588:Core/Src/bno055.c ****     {
9589:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9590:Core/Src/bno055.c ****     }
9591:Core/Src/bno055.c ****     else
9592:Core/Src/bno055.c ****     {
9593:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9594:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9595:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9596:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20609              		.loc 1 9596 9 is_stmt 1 view .LVU5657
 20610              		.loc 1 9596 19 is_stmt 0 view .LVU5658
 20611 0018 0DF10600 		add	r0, sp, #6
 20612              	.LVL2520:
 20613              		.loc 1 9596 19 view .LVU5659
 20614 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20615              	.LVL2521:
9597:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20616              		.loc 1 9597 9 is_stmt 1 view .LVU5660
 20617              		.loc 1 9597 12 is_stmt 0 view .LVU5661
 20618 0020 0446     		mov	r4, r0
 20619 0022 60BB     		cbnz	r0, .L1480
9598:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 581


9599:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20620              		.loc 1 9599 13 is_stmt 1 view .LVU5662
 20621              		.loc 1 9599 32 is_stmt 0 view .LVU5663
 20622 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20623              		.loc 1 9599 16 view .LVU5664
 20624 0028 1BBB     		cbnz	r3, .L1483
 20625              	.LVL2522:
 20626              	.L1478:
9600:Core/Src/bno055.c ****             {
9601:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9602:Core/Src/bno055.c ****             }
9603:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20627              		.loc 1 9603 13 is_stmt 1 view .LVU5665
 20628              		.loc 1 9603 16 is_stmt 0 view .LVU5666
 20629 002a 84BB     		cbnz	r4, .L1481
9604:Core/Src/bno055.c ****             {
9605:Core/Src/bno055.c ****                 /* Write the value of y-axis remap sign*/
9606:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20630              		.loc 1 9606 17 is_stmt 1 view .LVU5667
 20631              		.loc 1 9606 36 is_stmt 0 view .LVU5668
 20632 002c 1E4B     		ldr	r3, .L1485
 20633 002e 1868     		ldr	r0, [r3]
 20634 0030 0469     		ldr	r4, [r0, #16]
 20635              	.LVL2523:
 20636              		.loc 1 9606 28 view .LVU5669
 20637 0032 0123     		movs	r3, #1
 20638 0034 0DF10702 		add	r2, sp, #7
 20639 0038 4221     		movs	r1, #66
 20640 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20641 003c A047     		blx	r4
 20642              	.LVL2524:
9607:Core/Src/bno055.c ****                                                           BNO055_REMAP_Y_SIGN_REG,
9608:Core/Src/bno055.c ****                                                           &data_u8r,
9609:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9610:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20643              		.loc 1 9610 17 is_stmt 1 view .LVU5670
 20644              		.loc 1 9610 20 is_stmt 0 view .LVU5671
 20645 003e 0446     		mov	r4, r0
 20646 0040 F8B9     		cbnz	r0, .L1477
9611:Core/Src/bno055.c ****                 {
9612:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN, remap_y_sign_u8);
 20647              		.loc 1 9612 21 is_stmt 1 view .LVU5672
 20648              		.loc 1 9612 32 is_stmt 0 view .LVU5673
 20649 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20650 0046 23F00203 		bic	r3, r3, #2
 20651 004a 5BB2     		sxtb	r3, r3
 20652 004c 6800     		lsls	r0, r5, #1
 20653              	.LVL2525:
 20654              		.loc 1 9612 32 view .LVU5674
 20655 004e 00F00200 		and	r0, r0, #2
 20656 0052 0343     		orrs	r3, r3, r0
 20657              		.loc 1 9612 30 view .LVU5675
 20658 0054 8DF80730 		strb	r3, [sp, #7]
9613:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20659              		.loc 1 9613 21 is_stmt 1 view .LVU5676
 20660              		.loc 1 9613 41 is_stmt 0 view .LVU5677
 20661 0058 134B     		ldr	r3, .L1485
ARM GAS  /tmp/cc9kYR4Z.s 			page 582


 20662 005a 1868     		ldr	r0, [r3]
 20663 005c C568     		ldr	r5, [r0, #12]
 20664              		.loc 1 9613 33 view .LVU5678
 20665 005e 0123     		movs	r3, #1
 20666 0060 0DF10702 		add	r2, sp, #7
 20667 0064 4221     		movs	r1, #66
 20668 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20669 0068 A847     		blx	r5
 20670              	.LVL2526:
 20671              		.loc 1 9613 30 view .LVU5679
 20672 006a 54FA80F0 		uxtab	r0, r4, r0
 20673 006e 44B2     		sxtb	r4, r0
 20674              	.LVL2527:
 20675              		.loc 1 9613 30 view .LVU5680
 20676 0070 07E0     		b	.L1477
 20677              	.LVL2528:
 20678              	.L1483:
9601:Core/Src/bno055.c ****             }
 20679              		.loc 1 9601 17 is_stmt 1 view .LVU5681
9601:Core/Src/bno055.c ****             }
 20680              		.loc 1 9601 28 is_stmt 0 view .LVU5682
 20681 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 20682              	.LVL2529:
9601:Core/Src/bno055.c ****             }
 20683              		.loc 1 9601 25 view .LVU5683
 20684 0076 54FA80F4 		uxtab	r4, r4, r0
 20685 007a 64B2     		sxtb	r4, r4
 20686              	.LVL2530:
9601:Core/Src/bno055.c ****             }
 20687              		.loc 1 9601 25 view .LVU5684
 20688 007c D5E7     		b	.L1478
 20689              	.LVL2531:
 20690              	.L1480:
9614:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Y_SIGN_REG,
9615:Core/Src/bno055.c ****                                                                 &data_u8r,
9616:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9617:Core/Src/bno055.c ****                 }
9618:Core/Src/bno055.c ****             }
9619:Core/Src/bno055.c ****             else
9620:Core/Src/bno055.c ****             {
9621:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9622:Core/Src/bno055.c ****             }
9623:Core/Src/bno055.c ****         }
9624:Core/Src/bno055.c ****         else
9625:Core/Src/bno055.c ****         {
9626:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20691              		.loc 1 9626 22 view .LVU5685
 20692 007e 4FF0FF34 		mov	r4, #-1
 20693              	.LVL2532:
 20694              	.L1477:
9627:Core/Src/bno055.c ****         }
9628:Core/Src/bno055.c ****     }
9629:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20695              		.loc 1 9629 5 is_stmt 1 view .LVU5686
 20696              		.loc 1 9629 24 is_stmt 0 view .LVU5687
 20697 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20698              		.loc 1 9629 8 view .LVU5688
ARM GAS  /tmp/cc9kYR4Z.s 			page 583


 20699 0086 28B9     		cbnz	r0, .L1484
 20700              	.LVL2533:
 20701              	.L1476:
9630:Core/Src/bno055.c ****     {
9631:Core/Src/bno055.c ****         /* set the operation mode
9632:Core/Src/bno055.c ****          * of previous operation mode*/
9633:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9634:Core/Src/bno055.c ****     }
9635:Core/Src/bno055.c **** 
9636:Core/Src/bno055.c ****     return com_rslt;
9637:Core/Src/bno055.c **** }
 20702              		.loc 1 9637 1 view .LVU5689
 20703 0088 2046     		mov	r0, r4
 20704 008a 03B0     		add	sp, sp, #12
 20705              	.LCFI651:
 20706              		.cfi_remember_state
 20707              		.cfi_def_cfa_offset 12
 20708              		@ sp needed
 20709 008c 30BD     		pop	{r4, r5, pc}
 20710              	.LVL2534:
 20711              	.L1481:
 20712              	.LCFI652:
 20713              		.cfi_restore_state
9621:Core/Src/bno055.c ****             }
 20714              		.loc 1 9621 26 view .LVU5690
 20715 008e 4FF0FF34 		mov	r4, #-1
 20716              	.LVL2535:
9621:Core/Src/bno055.c ****             }
 20717              		.loc 1 9621 26 view .LVU5691
 20718 0092 F6E7     		b	.L1477
 20719              	.LVL2536:
 20720              	.L1484:
9633:Core/Src/bno055.c ****     }
 20721              		.loc 1 9633 9 is_stmt 1 view .LVU5692
9633:Core/Src/bno055.c ****     }
 20722              		.loc 1 9633 21 is_stmt 0 view .LVU5693
 20723 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 20724              	.LVL2537:
9633:Core/Src/bno055.c ****     }
 20725              		.loc 1 9633 18 view .LVU5694
 20726 0098 54FA80F0 		uxtab	r0, r4, r0
 20727 009c 44B2     		sxtb	r4, r0
 20728              	.LVL2538:
9633:Core/Src/bno055.c ****     }
 20729              		.loc 1 9633 18 view .LVU5695
 20730 009e F3E7     		b	.L1476
 20731              	.LVL2539:
 20732              	.L1479:
9589:Core/Src/bno055.c ****     }
 20733              		.loc 1 9589 16 view .LVU5696
 20734 00a0 6FF07E04 		mvn	r4, #126
 20735 00a4 F0E7     		b	.L1476
 20736              	.L1486:
 20737 00a6 00BF     		.align	2
 20738              	.L1485:
 20739 00a8 00000000 		.word	.LANCHOR0
 20740              		.cfi_endproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 584


 20741              	.LFE164:
 20743              		.section	.text.bno055_get_remap_z_sign,"ax",%progbits
 20744              		.align	1
 20745              		.global	bno055_get_remap_z_sign
 20746              		.syntax unified
 20747              		.thumb
 20748              		.thumb_func
 20750              	bno055_get_remap_z_sign:
 20751              	.LVL2540:
 20752              	.LFB165:
9638:Core/Src/bno055.c **** 
9639:Core/Src/bno055.c **** /*!
9640:Core/Src/bno055.c ****  *  @brief This API used to read the z-axis remap
9641:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9642:Core/Src/bno055.c ****  *
9643:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9644:Core/Src/bno055.c ****  *
9645:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9646:Core/Src/bno055.c ****  *   ------------------- |--------------------
9647:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9648:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9649:Core/Src/bno055.c ****  *
9650:Core/Src/bno055.c ****  *  @return results of bus communication function
9651:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9652:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9653:Core/Src/bno055.c ****  *
9654:Core/Src/bno055.c ****  */
9655:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_z_sign(u8 *remap_z_sign_u8)
9656:Core/Src/bno055.c **** {
 20753              		.loc 1 9656 1 is_stmt 1 view -0
 20754              		.cfi_startproc
 20755              		@ args = 0, pretend = 0, frame = 8
 20756              		@ frame_needed = 0, uses_anonymous_args = 0
 20757              		.loc 1 9656 1 is_stmt 0 view .LVU5698
 20758 0000 30B5     		push	{r4, r5, lr}
 20759              	.LCFI653:
 20760              		.cfi_def_cfa_offset 12
 20761              		.cfi_offset 4, -12
 20762              		.cfi_offset 5, -8
 20763              		.cfi_offset 14, -4
 20764 0002 83B0     		sub	sp, sp, #12
 20765              	.LCFI654:
 20766              		.cfi_def_cfa_offset 24
9657:Core/Src/bno055.c ****     /* Variable used to return value of
9658:Core/Src/bno055.c ****      * communication routine*/
9659:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20767              		.loc 1 9659 5 is_stmt 1 view .LVU5699
 20768              	.LVL2541:
9660:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20769              		.loc 1 9660 5 view .LVU5700
 20770              		.loc 1 9660 8 is_stmt 0 view .LVU5701
 20771 0004 0023     		movs	r3, #0
 20772 0006 8DF80730 		strb	r3, [sp, #7]
9661:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20773              		.loc 1 9661 5 is_stmt 1 view .LVU5702
 20774              	.LVL2542:
9662:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 585


9663:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9664:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20775              		.loc 1 9664 5 view .LVU5703
 20776              		.loc 1 9664 18 is_stmt 0 view .LVU5704
 20777 000a 134B     		ldr	r3, .L1495
 20778 000c 1B68     		ldr	r3, [r3]
 20779              		.loc 1 9664 8 view .LVU5705
 20780 000e E3B1     		cbz	r3, .L1491
 20781 0010 0446     		mov	r4, r0
9665:Core/Src/bno055.c ****     {
9666:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9667:Core/Src/bno055.c ****     }
9668:Core/Src/bno055.c ****     else
9669:Core/Src/bno055.c ****     {
9670:Core/Src/bno055.c ****         /*condition check for page, z-axis remap sign is
9671:Core/Src/bno055.c ****          * available in the page zero*/
9672:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20782              		.loc 1 9672 9 is_stmt 1 view .LVU5706
 20783              		.loc 1 9672 21 is_stmt 0 view .LVU5707
 20784 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20785              		.loc 1 9672 12 view .LVU5708
 20786 0014 9BB9     		cbnz	r3, .L1494
 20787              	.LVL2543:
 20788              	.L1489:
9673:Core/Src/bno055.c ****         {
9674:Core/Src/bno055.c ****             /* Write the page zero*/
9675:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9676:Core/Src/bno055.c ****         }
9677:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20789              		.loc 1 9677 53 discriminator 1 view .LVU5709
 20790 0016 104B     		ldr	r3, .L1495
 20791 0018 1B68     		ldr	r3, [r3]
 20792 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20793              		.loc 1 9677 41 discriminator 1 view .LVU5710
 20794 001c C3B9     		cbnz	r3, .L1492
 20795              	.L1490:
9678:Core/Src/bno055.c ****         {
9679:Core/Src/bno055.c ****             /* Read the value of z-axis remap sign*/
9680:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20796              		.loc 1 9680 13 is_stmt 1 view .LVU5711
 20797              		.loc 1 9680 32 is_stmt 0 view .LVU5712
 20798 001e 0E4B     		ldr	r3, .L1495
 20799 0020 1868     		ldr	r0, [r3]
 20800 0022 0569     		ldr	r5, [r0, #16]
 20801              		.loc 1 9680 24 view .LVU5713
 20802 0024 0123     		movs	r3, #1
 20803 0026 0DF10702 		add	r2, sp, #7
 20804 002a 4221     		movs	r1, #66
 20805 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20806 002e A847     		blx	r5
 20807              	.LVL2544:
9681:Core/Src/bno055.c ****                                                       BNO055_REMAP_Z_SIGN_REG,
9682:Core/Src/bno055.c ****                                                       &data_u8r,
9683:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9684:Core/Src/bno055.c ****             *remap_z_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN);
 20808              		.loc 1 9684 13 is_stmt 1 view .LVU5714
 20809              		.loc 1 9684 32 is_stmt 0 view .LVU5715
ARM GAS  /tmp/cc9kYR4Z.s 			page 586


 20810 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20811 0034 03F00103 		and	r3, r3, #1
 20812              		.loc 1 9684 30 view .LVU5716
 20813 0038 2370     		strb	r3, [r4]
 20814              	.LVL2545:
 20815              	.L1488:
9685:Core/Src/bno055.c ****         }
9686:Core/Src/bno055.c ****         else
9687:Core/Src/bno055.c ****         {
9688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9689:Core/Src/bno055.c ****         }
9690:Core/Src/bno055.c ****     }
9691:Core/Src/bno055.c **** 
9692:Core/Src/bno055.c ****     return com_rslt;
9693:Core/Src/bno055.c **** }
 20816              		.loc 1 9693 1 view .LVU5717
 20817 003a 03B0     		add	sp, sp, #12
 20818              	.LCFI655:
 20819              		.cfi_remember_state
 20820              		.cfi_def_cfa_offset 12
 20821              		@ sp needed
 20822 003c 30BD     		pop	{r4, r5, pc}
 20823              	.LVL2546:
 20824              	.L1494:
 20825              	.LCFI656:
 20826              		.cfi_restore_state
9675:Core/Src/bno055.c ****         }
 20827              		.loc 1 9675 13 is_stmt 1 view .LVU5718
9675:Core/Src/bno055.c ****         }
 20828              		.loc 1 9675 23 is_stmt 0 view .LVU5719
 20829 003e 0020     		movs	r0, #0
 20830              	.LVL2547:
9675:Core/Src/bno055.c ****         }
 20831              		.loc 1 9675 23 view .LVU5720
 20832 0040 FFF7FEFF 		bl	bno055_write_page_id
 20833              	.LVL2548:
9677:Core/Src/bno055.c ****         {
 20834              		.loc 1 9677 9 is_stmt 1 view .LVU5721
9677:Core/Src/bno055.c ****         {
 20835              		.loc 1 9677 12 is_stmt 0 view .LVU5722
 20836 0044 0028     		cmp	r0, #0
 20837 0046 EAD0     		beq	.L1490
 20838 0048 E5E7     		b	.L1489
 20839              	.LVL2549:
 20840              	.L1491:
9666:Core/Src/bno055.c ****     }
 20841              		.loc 1 9666 16 view .LVU5723
 20842 004a 6FF07E00 		mvn	r0, #126
 20843              	.LVL2550:
9666:Core/Src/bno055.c ****     }
 20844              		.loc 1 9666 16 view .LVU5724
 20845 004e F4E7     		b	.L1488
 20846              	.LVL2551:
 20847              	.L1492:
9688:Core/Src/bno055.c ****         }
 20848              		.loc 1 9688 22 view .LVU5725
 20849 0050 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cc9kYR4Z.s 			page 587


 20850 0054 F1E7     		b	.L1488
 20851              	.L1496:
 20852 0056 00BF     		.align	2
 20853              	.L1495:
 20854 0058 00000000 		.word	.LANCHOR0
 20855              		.cfi_endproc
 20856              	.LFE165:
 20858              		.section	.text.bno055_set_remap_z_sign,"ax",%progbits
 20859              		.align	1
 20860              		.global	bno055_set_remap_z_sign
 20861              		.syntax unified
 20862              		.thumb
 20863              		.thumb_func
 20865              	bno055_set_remap_z_sign:
 20866              	.LVL2552:
 20867              	.LFB166:
9694:Core/Src/bno055.c **** 
9695:Core/Src/bno055.c **** /*!
9696:Core/Src/bno055.c ****  *  @brief This API used to write the z-axis remap
9697:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9698:Core/Src/bno055.c ****  *
9699:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9700:Core/Src/bno055.c ****  *
9701:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9702:Core/Src/bno055.c ****  *   ------------------- |--------------------
9703:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9704:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9705:Core/Src/bno055.c ****  *
9706:Core/Src/bno055.c ****  *  @return results of bus communication function
9707:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9708:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9709:Core/Src/bno055.c ****  *
9710:Core/Src/bno055.c ****  */
9711:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_z_sign(u8 remap_z_sign_u8)
9712:Core/Src/bno055.c **** {
 20868              		.loc 1 9712 1 is_stmt 1 view -0
 20869              		.cfi_startproc
 20870              		@ args = 0, pretend = 0, frame = 8
 20871              		@ frame_needed = 0, uses_anonymous_args = 0
 20872              		.loc 1 9712 1 is_stmt 0 view .LVU5727
 20873 0000 30B5     		push	{r4, r5, lr}
 20874              	.LCFI657:
 20875              		.cfi_def_cfa_offset 12
 20876              		.cfi_offset 4, -12
 20877              		.cfi_offset 5, -8
 20878              		.cfi_offset 14, -4
 20879 0002 83B0     		sub	sp, sp, #12
 20880              	.LCFI658:
 20881              		.cfi_def_cfa_offset 24
9713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20882              		.loc 1 9713 5 is_stmt 1 view .LVU5728
 20883              	.LVL2553:
9714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20884              		.loc 1 9714 5 view .LVU5729
 20885              		.loc 1 9714 8 is_stmt 0 view .LVU5730
 20886 0004 0023     		movs	r3, #0
 20887 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/cc9kYR4Z.s 			page 588


9715:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20888              		.loc 1 9715 5 is_stmt 1 view .LVU5731
 20889              		.loc 1 9715 8 is_stmt 0 view .LVU5732
 20890 000a 8DF80630 		strb	r3, [sp, #6]
9716:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20891              		.loc 1 9716 5 is_stmt 1 view .LVU5733
 20892              	.LVL2554:
9717:Core/Src/bno055.c **** 
9718:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9719:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20893              		.loc 1 9719 5 view .LVU5734
 20894              		.loc 1 9719 18 is_stmt 0 view .LVU5735
 20895 000e 254B     		ldr	r3, .L1507
 20896 0010 1B68     		ldr	r3, [r3]
 20897              		.loc 1 9719 8 view .LVU5736
 20898 0012 002B     		cmp	r3, #0
 20899 0014 43D0     		beq	.L1501
 20900 0016 0546     		mov	r5, r0
9720:Core/Src/bno055.c ****     {
9721:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9722:Core/Src/bno055.c ****     }
9723:Core/Src/bno055.c ****     else
9724:Core/Src/bno055.c ****     {
9725:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9726:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9727:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9728:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20901              		.loc 1 9728 9 is_stmt 1 view .LVU5737
 20902              		.loc 1 9728 19 is_stmt 0 view .LVU5738
 20903 0018 0DF10600 		add	r0, sp, #6
 20904              	.LVL2555:
 20905              		.loc 1 9728 19 view .LVU5739
 20906 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20907              	.LVL2556:
9729:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20908              		.loc 1 9729 9 is_stmt 1 view .LVU5740
 20909              		.loc 1 9729 12 is_stmt 0 view .LVU5741
 20910 0020 0446     		mov	r4, r0
 20911 0022 58BB     		cbnz	r0, .L1502
9730:Core/Src/bno055.c ****         {
9731:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20912              		.loc 1 9731 13 is_stmt 1 view .LVU5742
 20913              		.loc 1 9731 32 is_stmt 0 view .LVU5743
 20914 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20915              		.loc 1 9731 16 view .LVU5744
 20916 0028 13BB     		cbnz	r3, .L1505
 20917              	.LVL2557:
 20918              	.L1500:
9732:Core/Src/bno055.c ****             {
9733:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9734:Core/Src/bno055.c ****             }
9735:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20919              		.loc 1 9735 13 is_stmt 1 view .LVU5745
 20920              		.loc 1 9735 16 is_stmt 0 view .LVU5746
 20921 002a 7CBB     		cbnz	r4, .L1503
9736:Core/Src/bno055.c ****             {
9737:Core/Src/bno055.c ****                 /* Write the value of z-axis remap sign*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 589


9738:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20922              		.loc 1 9738 17 is_stmt 1 view .LVU5747
 20923              		.loc 1 9738 36 is_stmt 0 view .LVU5748
 20924 002c 1D4B     		ldr	r3, .L1507
 20925 002e 1868     		ldr	r0, [r3]
 20926 0030 0469     		ldr	r4, [r0, #16]
 20927              	.LVL2558:
 20928              		.loc 1 9738 28 view .LVU5749
 20929 0032 0123     		movs	r3, #1
 20930 0034 0DF10702 		add	r2, sp, #7
 20931 0038 4221     		movs	r1, #66
 20932 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20933 003c A047     		blx	r4
 20934              	.LVL2559:
9739:Core/Src/bno055.c ****                                                           BNO055_REMAP_Z_SIGN_REG,
9740:Core/Src/bno055.c ****                                                           &data_u8r,
9741:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9742:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20935              		.loc 1 9742 17 is_stmt 1 view .LVU5750
 20936              		.loc 1 9742 20 is_stmt 0 view .LVU5751
 20937 003e 0446     		mov	r4, r0
 20938 0040 F0B9     		cbnz	r0, .L1499
9743:Core/Src/bno055.c ****                 {
9744:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN, remap_z_sign_u8);
 20939              		.loc 1 9744 21 is_stmt 1 view .LVU5752
 20940              		.loc 1 9744 32 is_stmt 0 view .LVU5753
 20941 0042 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20942 0046 23F00103 		bic	r3, r3, #1
 20943 004a 5BB2     		sxtb	r3, r3
 20944 004c 05F00100 		and	r0, r5, #1
 20945              	.LVL2560:
 20946              		.loc 1 9744 32 view .LVU5754
 20947 0050 0343     		orrs	r3, r3, r0
 20948              		.loc 1 9744 30 view .LVU5755
 20949 0052 8DF80730 		strb	r3, [sp, #7]
9745:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20950              		.loc 1 9745 21 is_stmt 1 view .LVU5756
 20951              		.loc 1 9745 41 is_stmt 0 view .LVU5757
 20952 0056 134B     		ldr	r3, .L1507
 20953 0058 1868     		ldr	r0, [r3]
 20954 005a C568     		ldr	r5, [r0, #12]
 20955              		.loc 1 9745 33 view .LVU5758
 20956 005c 0123     		movs	r3, #1
 20957 005e 0DF10702 		add	r2, sp, #7
 20958 0062 4221     		movs	r1, #66
 20959 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20960 0066 A847     		blx	r5
 20961              	.LVL2561:
 20962              		.loc 1 9745 30 view .LVU5759
 20963 0068 54FA80F0 		uxtab	r0, r4, r0
 20964 006c 44B2     		sxtb	r4, r0
 20965              	.LVL2562:
 20966              		.loc 1 9745 30 view .LVU5760
 20967 006e 07E0     		b	.L1499
 20968              	.LVL2563:
 20969              	.L1505:
9733:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 590


 20970              		.loc 1 9733 17 is_stmt 1 view .LVU5761
9733:Core/Src/bno055.c ****             }
 20971              		.loc 1 9733 28 is_stmt 0 view .LVU5762
 20972 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 20973              	.LVL2564:
9733:Core/Src/bno055.c ****             }
 20974              		.loc 1 9733 25 view .LVU5763
 20975 0074 54FA80F4 		uxtab	r4, r4, r0
 20976 0078 64B2     		sxtb	r4, r4
 20977              	.LVL2565:
9733:Core/Src/bno055.c ****             }
 20978              		.loc 1 9733 25 view .LVU5764
 20979 007a D6E7     		b	.L1500
 20980              	.LVL2566:
 20981              	.L1502:
9746:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Z_SIGN_REG,
9747:Core/Src/bno055.c ****                                                                 &data_u8r,
9748:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9749:Core/Src/bno055.c ****                 }
9750:Core/Src/bno055.c ****             }
9751:Core/Src/bno055.c ****             else
9752:Core/Src/bno055.c ****             {
9753:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9754:Core/Src/bno055.c ****             }
9755:Core/Src/bno055.c ****         }
9756:Core/Src/bno055.c ****         else
9757:Core/Src/bno055.c ****         {
9758:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20982              		.loc 1 9758 22 view .LVU5765
 20983 007c 4FF0FF34 		mov	r4, #-1
 20984              	.LVL2567:
 20985              	.L1499:
9759:Core/Src/bno055.c ****         }
9760:Core/Src/bno055.c ****     }
9761:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20986              		.loc 1 9761 5 is_stmt 1 view .LVU5766
 20987              		.loc 1 9761 24 is_stmt 0 view .LVU5767
 20988 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20989              		.loc 1 9761 8 view .LVU5768
 20990 0084 28B9     		cbnz	r0, .L1506
 20991              	.LVL2568:
 20992              	.L1498:
9762:Core/Src/bno055.c ****     {
9763:Core/Src/bno055.c ****         /* set the operation mode
9764:Core/Src/bno055.c ****          * of previous operation mode*/
9765:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9766:Core/Src/bno055.c ****     }
9767:Core/Src/bno055.c **** 
9768:Core/Src/bno055.c ****     return com_rslt;
9769:Core/Src/bno055.c **** }
 20993              		.loc 1 9769 1 view .LVU5769
 20994 0086 2046     		mov	r0, r4
 20995 0088 03B0     		add	sp, sp, #12
 20996              	.LCFI659:
 20997              		.cfi_remember_state
 20998              		.cfi_def_cfa_offset 12
 20999              		@ sp needed
ARM GAS  /tmp/cc9kYR4Z.s 			page 591


 21000 008a 30BD     		pop	{r4, r5, pc}
 21001              	.LVL2569:
 21002              	.L1503:
 21003              	.LCFI660:
 21004              		.cfi_restore_state
9753:Core/Src/bno055.c ****             }
 21005              		.loc 1 9753 26 view .LVU5770
 21006 008c 4FF0FF34 		mov	r4, #-1
 21007              	.LVL2570:
9753:Core/Src/bno055.c ****             }
 21008              		.loc 1 9753 26 view .LVU5771
 21009 0090 F6E7     		b	.L1499
 21010              	.LVL2571:
 21011              	.L1506:
9765:Core/Src/bno055.c ****     }
 21012              		.loc 1 9765 9 is_stmt 1 view .LVU5772
9765:Core/Src/bno055.c ****     }
 21013              		.loc 1 9765 21 is_stmt 0 view .LVU5773
 21014 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 21015              	.LVL2572:
9765:Core/Src/bno055.c ****     }
 21016              		.loc 1 9765 18 view .LVU5774
 21017 0096 54FA80F0 		uxtab	r0, r4, r0
 21018 009a 44B2     		sxtb	r4, r0
 21019              	.LVL2573:
9765:Core/Src/bno055.c ****     }
 21020              		.loc 1 9765 18 view .LVU5775
 21021 009c F3E7     		b	.L1498
 21022              	.LVL2574:
 21023              	.L1501:
9721:Core/Src/bno055.c ****     }
 21024              		.loc 1 9721 16 view .LVU5776
 21025 009e 6FF07E04 		mvn	r4, #126
 21026 00a2 F0E7     		b	.L1498
 21027              	.L1508:
 21028              		.align	2
 21029              	.L1507:
 21030 00a4 00000000 		.word	.LANCHOR0
 21031              		.cfi_endproc
 21032              	.LFE166:
 21034              		.section	.text.bno055_read_sic_matrix,"ax",%progbits
 21035              		.align	1
 21036              		.global	bno055_read_sic_matrix
 21037              		.syntax unified
 21038              		.thumb
 21039              		.thumb_func
 21041              	bno055_read_sic_matrix:
 21042              	.LVL2575:
 21043              	.LFB167:
9770:Core/Src/bno055.c **** 
9771:Core/Src/bno055.c **** /*!
9772:Core/Src/bno055.c ****  *  @brief This API is used to read soft iron calibration matrix
9773:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9774:Core/Src/bno055.c ****  *
9775:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9776:Core/Src/bno055.c ****  *
9777:Core/Src/bno055.c ****  *  sic_matrix         |           result
ARM GAS  /tmp/cc9kYR4Z.s 			page 592


9778:Core/Src/bno055.c ****  * --------------------|----------------------------------
9779:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9780:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9781:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9782:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9783:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9784:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9785:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9786:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9787:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9788:Core/Src/bno055.c ****  *
9789:Core/Src/bno055.c ****  *
9790:Core/Src/bno055.c ****  *  @return results of bus communication function
9791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9793:Core/Src/bno055.c ****  *
9794:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9795:Core/Src/bno055.c ****  */
9796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9797:Core/Src/bno055.c **** {
 21044              		.loc 1 9797 1 is_stmt 1 view -0
 21045              		.cfi_startproc
 21046              		@ args = 0, pretend = 0, frame = 24
 21047              		@ frame_needed = 0, uses_anonymous_args = 0
 21048              		.loc 1 9797 1 is_stmt 0 view .LVU5778
 21049 0000 30B5     		push	{r4, r5, lr}
 21050              	.LCFI661:
 21051              		.cfi_def_cfa_offset 12
 21052              		.cfi_offset 4, -12
 21053              		.cfi_offset 5, -8
 21054              		.cfi_offset 14, -4
 21055 0002 87B0     		sub	sp, sp, #28
 21056              	.LCFI662:
 21057              		.cfi_def_cfa_offset 40
 21058 0004 0446     		mov	r4, r0
9798:Core/Src/bno055.c ****     /* Variable used to return value of
9799:Core/Src/bno055.c ****      * communication routine*/
9800:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21059              		.loc 1 9800 5 is_stmt 1 view .LVU5779
 21060              	.LVL2576:
9801:Core/Src/bno055.c **** 
9802:Core/Src/bno055.c ****     /* Array holding the soft iron calibration matrix values
9803:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] - sic_0->LSB
9804:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] - sic_0->MSB
9805:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] - sic_1->LSB
9806:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] - sic_1->MSB
9807:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] - sic_2->LSB
9808:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] - sic_2->MSB
9809:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] - sic_3->LSB
9810:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] - sic_3->MSB
9811:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] - sic_4->LSB
9812:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] - sic_4->MSB
9813:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] - sic_5->LSB
9814:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] - sic_5->MSB
9815:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] - sic_6->LSB
9816:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] - sic_6->MSB
9817:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] - sic_7->LSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 593


9818:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] - sic_7->MSB
9819:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] - sic_8->LSB
9820:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] - sic_8->MSB
9821:Core/Src/bno055.c ****      */
9822:Core/Src/bno055.c ****     u8 data_u8[BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE] = {
 21061              		.loc 1 9822 5 view .LVU5780
 21062              		.loc 1 9822 8 is_stmt 0 view .LVU5781
 21063 0006 0DF1040C 		add	ip, sp, #4
 21064 000a 364D     		ldr	r5, .L1518
 21065 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21066              	.LVL2577:
 21067              		.loc 1 9822 8 view .LVU5782
 21068 000e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 21069 0012 2B68     		ldr	r3, [r5]
 21070 0014 ACF80030 		strh	r3, [ip]	@ movhi
9823:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9824:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9825:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9826:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
9827:Core/Src/bno055.c ****     };
9828:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21071              		.loc 1 9828 5 is_stmt 1 view .LVU5783
 21072              	.LVL2578:
9829:Core/Src/bno055.c **** 
9830:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9831:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21073              		.loc 1 9831 5 view .LVU5784
 21074              		.loc 1 9831 18 is_stmt 0 view .LVU5785
 21075 0018 334B     		ldr	r3, .L1518+4
 21076 001a 1B68     		ldr	r3, [r3]
 21077              		.loc 1 9831 8 view .LVU5786
 21078 001c 002B     		cmp	r3, #0
 21079 001e 58D0     		beq	.L1513
9832:Core/Src/bno055.c ****     {
9833:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9834:Core/Src/bno055.c ****     }
9835:Core/Src/bno055.c ****     else
9836:Core/Src/bno055.c ****     {
9837:Core/Src/bno055.c ****         /*condition check for page, soft iron calibration matrix is
9838:Core/Src/bno055.c ****          * available in the page zero*/
9839:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 21080              		.loc 1 9839 9 is_stmt 1 view .LVU5787
 21081              		.loc 1 9839 21 is_stmt 0 view .LVU5788
 21082 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21083              		.loc 1 9839 12 view .LVU5789
 21084 0022 002B     		cmp	r3, #0
 21085 0024 4FD1     		bne	.L1517
 21086              	.LVL2579:
 21087              	.L1511:
9840:Core/Src/bno055.c ****         {
9841:Core/Src/bno055.c ****             /* Write the page zero*/
9842:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9843:Core/Src/bno055.c ****         }
9844:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 21088              		.loc 1 9844 53 discriminator 1 view .LVU5790
 21089 0026 304B     		ldr	r3, .L1518+4
 21090 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 594


 21091 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21092              		.loc 1 9844 41 discriminator 1 view .LVU5791
 21093 002c 002B     		cmp	r3, #0
 21094 002e 53D1     		bne	.L1514
 21095              	.L1512:
9845:Core/Src/bno055.c ****         {
9846:Core/Src/bno055.c ****             /* Read soft iron calibration matrix value
9847:Core/Src/bno055.c ****              * it is eighteen bytes of data */
9848:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21096              		.loc 1 9848 13 is_stmt 1 view .LVU5792
 21097              		.loc 1 9848 32 is_stmt 0 view .LVU5793
 21098 0030 2D4B     		ldr	r3, .L1518+4
 21099 0032 1868     		ldr	r0, [r3]
 21100 0034 0569     		ldr	r5, [r0, #16]
 21101              		.loc 1 9848 24 view .LVU5794
 21102 0036 1223     		movs	r3, #18
 21103 0038 01AA     		add	r2, sp, #4
 21104 003a 4321     		movs	r1, #67
 21105 003c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21106 003e A847     		blx	r5
 21107              	.LVL2580:
9849:Core/Src/bno055.c ****                                                       BNO055_SIC_MATRIX_0_LSB_REG,
9850:Core/Src/bno055.c ****                                                       data_u8,
9851:Core/Src/bno055.c ****                                                       BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE);
9852:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 21108              		.loc 1 9852 13 is_stmt 1 view .LVU5795
 21109              		.loc 1 9852 16 is_stmt 0 view .LVU5796
 21110 0040 0028     		cmp	r0, #0
 21111 0042 4CD1     		bne	.L1515
9853:Core/Src/bno055.c ****             {
9854:Core/Src/bno055.c ****                 /*soft iron calibration matrix zero*/
9855:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21112              		.loc 1 9855 17 is_stmt 1 view .LVU5797
9856:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_LSB
9857:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21113              		.loc 1 9857 17 view .LVU5798
9858:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_MSB
9859:Core/Src/bno055.c ****                 sic_matrix->sic_0 =
 21114              		.loc 1 9859 17 view .LVU5799
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21115              		.loc 1 9860 34 is_stmt 0 view .LVU5800
 21116 0044 9DF90520 		ldrsb	r2, [sp, #5]
9861:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_0_LSB]));
 21117              		.loc 1 9861 35 view .LVU5801
 21118 0048 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21119              		.loc 1 9860 21 view .LVU5802
 21120 004c 43EA0223 		orr	r3, r3, r2, lsl #8
9859:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21121              		.loc 1 9859 35 view .LVU5803
 21122 0050 2380     		strh	r3, [r4]	@ movhi
9862:Core/Src/bno055.c **** 
9863:Core/Src/bno055.c ****                 /*soft iron calibration matrix one*/
9864:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21123              		.loc 1 9864 17 is_stmt 1 view .LVU5804
9865:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_LSB
9866:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
ARM GAS  /tmp/cc9kYR4Z.s 			page 595


 21124              		.loc 1 9866 17 view .LVU5805
9867:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_MSB
9868:Core/Src/bno055.c ****                 sic_matrix->sic_1 =
 21125              		.loc 1 9868 17 view .LVU5806
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21126              		.loc 1 9869 34 is_stmt 0 view .LVU5807
 21127 0052 9DF90720 		ldrsb	r2, [sp, #7]
9870:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_1_LSB]));
 21128              		.loc 1 9870 35 view .LVU5808
 21129 0056 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21130              		.loc 1 9869 21 view .LVU5809
 21131 005a 43EA0223 		orr	r3, r3, r2, lsl #8
9868:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21132              		.loc 1 9868 35 view .LVU5810
 21133 005e 6380     		strh	r3, [r4, #2]	@ movhi
9871:Core/Src/bno055.c **** 
9872:Core/Src/bno055.c ****                 /*soft iron calibration matrix two*/
9873:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21134              		.loc 1 9873 17 is_stmt 1 view .LVU5811
9874:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_LSB
9875:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21135              		.loc 1 9875 17 view .LVU5812
9876:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_MSB
9877:Core/Src/bno055.c ****                 sic_matrix->sic_2 =
 21136              		.loc 1 9877 17 view .LVU5813
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21137              		.loc 1 9878 34 is_stmt 0 view .LVU5814
 21138 0060 9DF90920 		ldrsb	r2, [sp, #9]
9879:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_2_LSB]));
 21139              		.loc 1 9879 35 view .LVU5815
 21140 0064 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21141              		.loc 1 9878 21 view .LVU5816
 21142 0068 43EA0223 		orr	r3, r3, r2, lsl #8
9877:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21143              		.loc 1 9877 35 view .LVU5817
 21144 006c A380     		strh	r3, [r4, #4]	@ movhi
9880:Core/Src/bno055.c **** 
9881:Core/Src/bno055.c ****                 /*soft iron calibration matrix three*/
9882:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21145              		.loc 1 9882 17 is_stmt 1 view .LVU5818
9883:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9884:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21146              		.loc 1 9884 17 view .LVU5819
9885:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9886:Core/Src/bno055.c ****                 sic_matrix->sic_3 =
 21147              		.loc 1 9886 17 view .LVU5820
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21148              		.loc 1 9887 34 is_stmt 0 view .LVU5821
 21149 006e 9DF90B20 		ldrsb	r2, [sp, #11]
9888:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_3_LSB]));
 21150              		.loc 1 9888 35 view .LVU5822
 21151 0072 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21152              		.loc 1 9887 21 view .LVU5823
 21153 0076 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/cc9kYR4Z.s 			page 596


9886:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21154              		.loc 1 9886 35 view .LVU5824
 21155 007a E380     		strh	r3, [r4, #6]	@ movhi
9889:Core/Src/bno055.c **** 
9890:Core/Src/bno055.c ****                 /*soft iron calibration matrix four*/
9891:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21156              		.loc 1 9891 17 is_stmt 1 view .LVU5825
9892:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9893:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21157              		.loc 1 9893 17 view .LVU5826
9894:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9895:Core/Src/bno055.c ****                 sic_matrix->sic_4 =
 21158              		.loc 1 9895 17 view .LVU5827
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21159              		.loc 1 9896 34 is_stmt 0 view .LVU5828
 21160 007c 9DF90D20 		ldrsb	r2, [sp, #13]
9897:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_4_LSB]));
 21161              		.loc 1 9897 35 view .LVU5829
 21162 0080 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21163              		.loc 1 9896 21 view .LVU5830
 21164 0084 43EA0223 		orr	r3, r3, r2, lsl #8
9895:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21165              		.loc 1 9895 35 view .LVU5831
 21166 0088 2381     		strh	r3, [r4, #8]	@ movhi
9898:Core/Src/bno055.c **** 
9899:Core/Src/bno055.c ****                 /*soft iron calibration matrix five*/
9900:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21167              		.loc 1 9900 17 is_stmt 1 view .LVU5832
9901:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9902:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21168              		.loc 1 9902 17 view .LVU5833
9903:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9904:Core/Src/bno055.c ****                 sic_matrix->sic_5 =
 21169              		.loc 1 9904 17 view .LVU5834
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21170              		.loc 1 9905 34 is_stmt 0 view .LVU5835
 21171 008a 9DF90F20 		ldrsb	r2, [sp, #15]
9906:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_5_LSB]));
 21172              		.loc 1 9906 35 view .LVU5836
 21173 008e 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21174              		.loc 1 9905 21 view .LVU5837
 21175 0092 43EA0223 		orr	r3, r3, r2, lsl #8
9904:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21176              		.loc 1 9904 35 view .LVU5838
 21177 0096 6381     		strh	r3, [r4, #10]	@ movhi
9907:Core/Src/bno055.c **** 
9908:Core/Src/bno055.c ****                 /*soft iron calibration matrix six*/
9909:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21178              		.loc 1 9909 17 is_stmt 1 view .LVU5839
9910:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9911:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21179              		.loc 1 9911 17 view .LVU5840
9912:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9913:Core/Src/bno055.c ****                 sic_matrix->sic_6 =
 21180              		.loc 1 9913 17 view .LVU5841
ARM GAS  /tmp/cc9kYR4Z.s 			page 597


9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21181              		.loc 1 9914 34 is_stmt 0 view .LVU5842
 21182 0098 9DF91120 		ldrsb	r2, [sp, #17]
9915:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_6_LSB]));
 21183              		.loc 1 9915 35 view .LVU5843
 21184 009c 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21185              		.loc 1 9914 21 view .LVU5844
 21186 00a0 43EA0223 		orr	r3, r3, r2, lsl #8
9913:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21187              		.loc 1 9913 35 view .LVU5845
 21188 00a4 A381     		strh	r3, [r4, #12]	@ movhi
9916:Core/Src/bno055.c **** 
9917:Core/Src/bno055.c ****                 /*soft iron calibration matrix seven*/
9918:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21189              		.loc 1 9918 17 is_stmt 1 view .LVU5846
9919:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9920:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21190              		.loc 1 9920 17 view .LVU5847
9921:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9922:Core/Src/bno055.c ****                 sic_matrix->sic_7 =
 21191              		.loc 1 9922 17 view .LVU5848
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21192              		.loc 1 9923 34 is_stmt 0 view .LVU5849
 21193 00a6 9DF91320 		ldrsb	r2, [sp, #19]
9924:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_7_LSB]));
 21194              		.loc 1 9924 35 view .LVU5850
 21195 00aa 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21196              		.loc 1 9923 21 view .LVU5851
 21197 00ae 43EA0223 		orr	r3, r3, r2, lsl #8
9922:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21198              		.loc 1 9922 35 view .LVU5852
 21199 00b2 E381     		strh	r3, [r4, #14]	@ movhi
9925:Core/Src/bno055.c **** 
9926:Core/Src/bno055.c ****                 /*soft iron calibration matrix eight*/
9927:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21200              		.loc 1 9927 17 is_stmt 1 view .LVU5853
9928:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9929:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21201              		.loc 1 9929 17 view .LVU5854
9930:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9931:Core/Src/bno055.c ****                 sic_matrix->sic_8 =
 21202              		.loc 1 9931 17 view .LVU5855
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21203              		.loc 1 9932 34 is_stmt 0 view .LVU5856
 21204 00b4 9DF91520 		ldrsb	r2, [sp, #21]
9933:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_8_LSB]));
 21205              		.loc 1 9933 35 view .LVU5857
 21206 00b8 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21207              		.loc 1 9932 21 view .LVU5858
 21208 00bc 43EA0223 		orr	r3, r3, r2, lsl #8
9931:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21209              		.loc 1 9931 35 view .LVU5859
 21210 00c0 2382     		strh	r3, [r4, #16]	@ movhi
 21211              	.LVL2581:
ARM GAS  /tmp/cc9kYR4Z.s 			page 598


 21212              	.L1510:
9934:Core/Src/bno055.c ****             }
9935:Core/Src/bno055.c ****             else
9936:Core/Src/bno055.c ****             {
9937:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9938:Core/Src/bno055.c ****             }
9939:Core/Src/bno055.c ****         }
9940:Core/Src/bno055.c ****         else
9941:Core/Src/bno055.c ****         {
9942:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9943:Core/Src/bno055.c ****         }
9944:Core/Src/bno055.c ****     }
9945:Core/Src/bno055.c **** 
9946:Core/Src/bno055.c ****     return com_rslt;
9947:Core/Src/bno055.c **** }
 21213              		.loc 1 9947 1 view .LVU5860
 21214 00c2 07B0     		add	sp, sp, #28
 21215              	.LCFI663:
 21216              		.cfi_remember_state
 21217              		.cfi_def_cfa_offset 12
 21218              		@ sp needed
 21219 00c4 30BD     		pop	{r4, r5, pc}
 21220              	.LVL2582:
 21221              	.L1517:
 21222              	.LCFI664:
 21223              		.cfi_restore_state
9842:Core/Src/bno055.c ****         }
 21224              		.loc 1 9842 13 is_stmt 1 view .LVU5861
9842:Core/Src/bno055.c ****         }
 21225              		.loc 1 9842 23 is_stmt 0 view .LVU5862
 21226 00c6 0020     		movs	r0, #0
 21227 00c8 FFF7FEFF 		bl	bno055_write_page_id
 21228              	.LVL2583:
9844:Core/Src/bno055.c ****         {
 21229              		.loc 1 9844 9 is_stmt 1 view .LVU5863
9844:Core/Src/bno055.c ****         {
 21230              		.loc 1 9844 12 is_stmt 0 view .LVU5864
 21231 00cc 0028     		cmp	r0, #0
 21232 00ce AFD0     		beq	.L1512
 21233 00d0 A9E7     		b	.L1511
 21234              	.LVL2584:
 21235              	.L1513:
9833:Core/Src/bno055.c ****     }
 21236              		.loc 1 9833 16 view .LVU5865
 21237 00d2 6FF07E00 		mvn	r0, #126
 21238 00d6 F4E7     		b	.L1510
 21239              	.LVL2585:
 21240              	.L1514:
9942:Core/Src/bno055.c ****         }
 21241              		.loc 1 9942 22 view .LVU5866
 21242 00d8 4FF0FF30 		mov	r0, #-1
 21243 00dc F1E7     		b	.L1510
 21244              	.LVL2586:
 21245              	.L1515:
9937:Core/Src/bno055.c ****             }
 21246              		.loc 1 9937 26 view .LVU5867
 21247 00de 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cc9kYR4Z.s 			page 599


 21248              	.LVL2587:
9937:Core/Src/bno055.c ****             }
 21249              		.loc 1 9937 26 view .LVU5868
 21250 00e2 EEE7     		b	.L1510
 21251              	.L1519:
 21252              		.align	2
 21253              	.L1518:
 21254 00e4 10000000 		.word	.LANCHOR1+16
 21255 00e8 00000000 		.word	.LANCHOR0
 21256              		.cfi_endproc
 21257              	.LFE167:
 21259              		.section	.text.bno055_write_sic_matrix,"ax",%progbits
 21260              		.align	1
 21261              		.global	bno055_write_sic_matrix
 21262              		.syntax unified
 21263              		.thumb
 21264              		.thumb_func
 21266              	bno055_write_sic_matrix:
 21267              	.LVL2588:
 21268              	.LFB168:
9948:Core/Src/bno055.c **** 
9949:Core/Src/bno055.c **** /*!
9950:Core/Src/bno055.c ****  *  @brief This API is used to write soft iron calibration matrix
9951:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9952:Core/Src/bno055.c ****  *
9953:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9954:Core/Src/bno055.c ****  *
9955:Core/Src/bno055.c ****  *  sic_matrix         |           result
9956:Core/Src/bno055.c ****  * --------------------|----------------------------------
9957:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9958:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9959:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9960:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9961:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9962:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9963:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9964:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9965:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9966:Core/Src/bno055.c ****  *
9967:Core/Src/bno055.c ****  *
9968:Core/Src/bno055.c ****  *  @return results of bus communication function
9969:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9970:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9971:Core/Src/bno055.c ****  *
9972:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9973:Core/Src/bno055.c ****  */
9974:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9975:Core/Src/bno055.c **** {
 21269              		.loc 1 9975 1 is_stmt 1 view -0
 21270              		.cfi_startproc
 21271              		@ args = 0, pretend = 0, frame = 8
 21272              		@ frame_needed = 0, uses_anonymous_args = 0
 21273              		.loc 1 9975 1 is_stmt 0 view .LVU5870
 21274 0000 70B5     		push	{r4, r5, r6, lr}
 21275              	.LCFI665:
 21276              		.cfi_def_cfa_offset 16
 21277              		.cfi_offset 4, -16
ARM GAS  /tmp/cc9kYR4Z.s 			page 600


 21278              		.cfi_offset 5, -12
 21279              		.cfi_offset 6, -8
 21280              		.cfi_offset 14, -4
 21281 0002 82B0     		sub	sp, sp, #8
 21282              	.LCFI666:
 21283              		.cfi_def_cfa_offset 24
9976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21284              		.loc 1 9976 5 is_stmt 1 view .LVU5871
 21285              	.LVL2589:
9977:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 21286              		.loc 1 9977 5 view .LVU5872
9978:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 21287              		.loc 1 9978 5 view .LVU5873
 21288              		.loc 1 9978 8 is_stmt 0 view .LVU5874
 21289 0004 0023     		movs	r3, #0
 21290 0006 8DF80730 		strb	r3, [sp, #7]
9979:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 21291              		.loc 1 9979 5 is_stmt 1 view .LVU5875
 21292              		.loc 1 9979 8 is_stmt 0 view .LVU5876
 21293 000a 8DF80630 		strb	r3, [sp, #6]
9980:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21294              		.loc 1 9980 5 is_stmt 1 view .LVU5877
 21295              	.LVL2590:
9981:Core/Src/bno055.c **** 
9982:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9983:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21296              		.loc 1 9983 5 view .LVU5878
 21297              		.loc 1 9983 18 is_stmt 0 view .LVU5879
 21298 000e A74B     		ldr	r3, .L1547
 21299 0010 1B68     		ldr	r3, [r3]
 21300              		.loc 1 9983 8 view .LVU5880
 21301 0012 002B     		cmp	r3, #0
 21302 0014 00F04682 		beq	.L1541
 21303 0018 0546     		mov	r5, r0
9984:Core/Src/bno055.c ****     {
9985:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9986:Core/Src/bno055.c ****     }
9987:Core/Src/bno055.c ****     else
9988:Core/Src/bno055.c ****     {
9989:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9990:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9991:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9992:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 21304              		.loc 1 9992 9 is_stmt 1 view .LVU5881
 21305              		.loc 1 9992 19 is_stmt 0 view .LVU5882
 21306 001a 0DF10600 		add	r0, sp, #6
 21307              	.LVL2591:
 21308              		.loc 1 9992 19 view .LVU5883
 21309 001e FFF7FEFF 		bl	bno055_get_operation_mode
 21310              	.LVL2592:
9993:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 21311              		.loc 1 9993 9 is_stmt 1 view .LVU5884
 21312              		.loc 1 9993 12 is_stmt 0 view .LVU5885
 21313 0022 0446     		mov	r4, r0
 21314 0024 0028     		cmp	r0, #0
 21315 0026 40F02C82 		bne	.L1542
9994:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 601


9995:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21316              		.loc 1 9995 13 is_stmt 1 view .LVU5886
 21317              		.loc 1 9995 32 is_stmt 0 view .LVU5887
 21318 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 21319              		.loc 1 9995 16 view .LVU5888
 21320 002e 002B     		cmp	r3, #0
 21321 0030 40F02182 		bne	.L1545
 21322              	.LVL2593:
 21323              	.L1523:
9996:Core/Src/bno055.c ****             {
9997:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9998:Core/Src/bno055.c ****             }
9999:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 21324              		.loc 1 9999 13 is_stmt 1 view .LVU5889
 21325              		.loc 1 9999 16 is_stmt 0 view .LVU5890
 21326 0034 002C     		cmp	r4, #0
 21327 0036 40F02C82 		bne	.L1543
10000:Core/Src/bno055.c ****             {
10001:Core/Src/bno055.c ****                 /* write soft iron calibration
10002:Core/Src/bno055.c ****                  * matrix zero value*/
10003:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21328              		.loc 1 10003 17 is_stmt 1 view .LVU5891
 21329              		.loc 1 10003 36 is_stmt 0 view .LVU5892
 21330 003a 9C4B     		ldr	r3, .L1547
 21331 003c 1868     		ldr	r0, [r3]
 21332 003e 0469     		ldr	r4, [r0, #16]
 21333              	.LVL2594:
 21334              		.loc 1 10003 28 view .LVU5893
 21335 0040 0123     		movs	r3, #1
 21336 0042 0DF10702 		add	r2, sp, #7
 21337 0046 4321     		movs	r1, #67
 21338 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21339 004a A047     		blx	r4
 21340              	.LVL2595:
10004:Core/Src/bno055.c ****                                                           BNO055_SIC_MATRIX_0_LSB_REG,
10005:Core/Src/bno055.c ****                                                           &data2_u8r,
10006:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10007:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21341              		.loc 1 10007 17 is_stmt 1 view .LVU5894
 21342              		.loc 1 10007 20 is_stmt 0 view .LVU5895
 21343 004c 0446     		mov	r4, r0
 21344 004e 78B9     		cbnz	r0, .L1524
10008:Core/Src/bno055.c ****                 {
10009:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21345              		.loc 1 10009 21 is_stmt 1 view .LVU5896
 21346              		.loc 1 10009 49 is_stmt 0 view .LVU5897
 21347 0050 B5F90030 		ldrsh	r3, [r5]
 21348              	.LVL2596:
10010:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_LSB, data1_u8r);
 21349              		.loc 1 10010 21 is_stmt 1 view .LVU5898
 21350              		.loc 1 10010 31 is_stmt 0 view .LVU5899
 21351 0054 8DF80730 		strb	r3, [sp, #7]
10011:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21352              		.loc 1 10011 21 is_stmt 1 view .LVU5900
 21353              		.loc 1 10011 41 is_stmt 0 view .LVU5901
 21354 0058 944B     		ldr	r3, .L1547
 21355              	.LVL2597:
ARM GAS  /tmp/cc9kYR4Z.s 			page 602


 21356              		.loc 1 10011 41 view .LVU5902
 21357 005a 1868     		ldr	r0, [r3]
 21358              	.LVL2598:
 21359              		.loc 1 10011 41 view .LVU5903
 21360 005c C668     		ldr	r6, [r0, #12]
 21361              		.loc 1 10011 33 view .LVU5904
 21362 005e 0123     		movs	r3, #1
 21363 0060 0DF10702 		add	r2, sp, #7
 21364              	.LVL2599:
 21365              		.loc 1 10011 33 view .LVU5905
 21366 0064 4321     		movs	r1, #67
 21367 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21368 0068 B047     		blx	r6
 21369              	.LVL2600:
 21370              		.loc 1 10011 30 view .LVU5906
 21371 006a 54FA80F0 		uxtab	r0, r4, r0
 21372 006e 44B2     		sxtb	r4, r0
 21373              	.LVL2601:
 21374              	.L1524:
10012:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_LSB_REG,
10013:Core/Src/bno055.c ****                                                                 &data2_u8r,
10014:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10015:Core/Src/bno055.c ****                 }
10016:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21375              		.loc 1 10016 17 is_stmt 1 view .LVU5907
 21376              		.loc 1 10016 37 is_stmt 0 view .LVU5908
 21377 0070 8E4B     		ldr	r3, .L1547
 21378 0072 1868     		ldr	r0, [r3]
 21379 0074 0669     		ldr	r6, [r0, #16]
 21380              		.loc 1 10016 29 view .LVU5909
 21381 0076 0123     		movs	r3, #1
 21382 0078 0DF10702 		add	r2, sp, #7
 21383 007c 4421     		movs	r1, #68
 21384 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21385 0080 B047     		blx	r6
 21386              	.LVL2602:
 21387              		.loc 1 10016 26 view .LVU5910
 21388 0082 54FA80F4 		uxtab	r4, r4, r0
 21389              	.LVL2603:
 21390              		.loc 1 10016 26 view .LVU5911
 21391 0086 E6B2     		uxtb	r6, r4
 21392 0088 64B2     		sxtb	r4, r4
 21393              	.LVL2604:
10017:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_0_MSB_REG,
10018:Core/Src/bno055.c ****                                                            &data2_u8r,
10019:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10020:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21394              		.loc 1 10020 17 is_stmt 1 view .LVU5912
 21395              		.loc 1 10020 20 is_stmt 0 view .LVU5913
 21396 008a 7CB9     		cbnz	r4, .L1525
10021:Core/Src/bno055.c ****                 {
10022:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21397              		.loc 1 10022 21 is_stmt 1 view .LVU5914
 21398              		.loc 1 10022 34 is_stmt 0 view .LVU5915
 21399 008c 95F90130 		ldrsb	r3, [r5, #1]
 21400              	.LVL2605:
10023:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_MSB, data1_u8r);
ARM GAS  /tmp/cc9kYR4Z.s 			page 603


 21401              		.loc 1 10023 21 is_stmt 1 view .LVU5916
 21402              		.loc 1 10023 31 is_stmt 0 view .LVU5917
 21403 0090 8DF80730 		strb	r3, [sp, #7]
10024:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21404              		.loc 1 10024 21 is_stmt 1 view .LVU5918
 21405              		.loc 1 10024 41 is_stmt 0 view .LVU5919
 21406 0094 854B     		ldr	r3, .L1547
 21407              	.LVL2606:
 21408              		.loc 1 10024 41 view .LVU5920
 21409 0096 1868     		ldr	r0, [r3]
 21410 0098 C468     		ldr	r4, [r0, #12]
 21411              	.LVL2607:
 21412              		.loc 1 10024 33 view .LVU5921
 21413 009a 0123     		movs	r3, #1
 21414 009c 0DF10702 		add	r2, sp, #7
 21415              	.LVL2608:
 21416              		.loc 1 10024 33 view .LVU5922
 21417 00a0 4421     		movs	r1, #68
 21418 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21419 00a4 A047     		blx	r4
 21420              	.LVL2609:
 21421              		.loc 1 10024 30 view .LVU5923
 21422 00a6 56FA80F4 		uxtab	r4, r6, r0
 21423 00aa 64B2     		sxtb	r4, r4
 21424              	.LVL2610:
 21425              	.L1525:
10025:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_MSB_REG,
10026:Core/Src/bno055.c ****                                                                 &data2_u8r,
10027:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10028:Core/Src/bno055.c ****                 }
10029:Core/Src/bno055.c **** 
10030:Core/Src/bno055.c ****                 /* write soft iron calibration
10031:Core/Src/bno055.c ****                  * matrix one value*/
10032:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21426              		.loc 1 10032 17 is_stmt 1 view .LVU5924
 21427              		.loc 1 10032 37 is_stmt 0 view .LVU5925
 21428 00ac 7F4B     		ldr	r3, .L1547
 21429 00ae 1868     		ldr	r0, [r3]
 21430 00b0 0669     		ldr	r6, [r0, #16]
 21431              		.loc 1 10032 29 view .LVU5926
 21432 00b2 0123     		movs	r3, #1
 21433 00b4 0DF10702 		add	r2, sp, #7
 21434 00b8 4521     		movs	r1, #69
 21435 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21436 00bc B047     		blx	r6
 21437              	.LVL2611:
 21438              		.loc 1 10032 26 view .LVU5927
 21439 00be 54FA80F4 		uxtab	r4, r4, r0
 21440              	.LVL2612:
 21441              		.loc 1 10032 26 view .LVU5928
 21442 00c2 E6B2     		uxtb	r6, r4
 21443 00c4 64B2     		sxtb	r4, r4
 21444              	.LVL2613:
10033:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_LSB_REG,
10034:Core/Src/bno055.c ****                                                            &data2_u8r,
10035:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10036:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 604


 21445              		.loc 1 10036 17 is_stmt 1 view .LVU5929
 21446              		.loc 1 10036 20 is_stmt 0 view .LVU5930
 21447 00c6 7CB9     		cbnz	r4, .L1526
10037:Core/Src/bno055.c ****                 {
10038:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21448              		.loc 1 10038 21 is_stmt 1 view .LVU5931
 21449              		.loc 1 10038 49 is_stmt 0 view .LVU5932
 21450 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 21451              	.LVL2614:
10039:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_LSB, data1_u8r);
 21452              		.loc 1 10039 21 is_stmt 1 view .LVU5933
 21453              		.loc 1 10039 31 is_stmt 0 view .LVU5934
 21454 00cc 8DF80730 		strb	r3, [sp, #7]
10040:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21455              		.loc 1 10040 21 is_stmt 1 view .LVU5935
 21456              		.loc 1 10040 41 is_stmt 0 view .LVU5936
 21457 00d0 764B     		ldr	r3, .L1547
 21458              	.LVL2615:
 21459              		.loc 1 10040 41 view .LVU5937
 21460 00d2 1868     		ldr	r0, [r3]
 21461 00d4 C468     		ldr	r4, [r0, #12]
 21462              	.LVL2616:
 21463              		.loc 1 10040 33 view .LVU5938
 21464 00d6 0123     		movs	r3, #1
 21465 00d8 0DF10702 		add	r2, sp, #7
 21466              	.LVL2617:
 21467              		.loc 1 10040 33 view .LVU5939
 21468 00dc 4521     		movs	r1, #69
 21469 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21470 00e0 A047     		blx	r4
 21471              	.LVL2618:
 21472              		.loc 1 10040 30 view .LVU5940
 21473 00e2 56FA80F4 		uxtab	r4, r6, r0
 21474 00e6 64B2     		sxtb	r4, r4
 21475              	.LVL2619:
 21476              	.L1526:
10041:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_LSB_REG,
10042:Core/Src/bno055.c ****                                                                 &data2_u8r,
10043:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10044:Core/Src/bno055.c ****                 }
10045:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21477              		.loc 1 10045 17 is_stmt 1 view .LVU5941
 21478              		.loc 1 10045 37 is_stmt 0 view .LVU5942
 21479 00e8 704B     		ldr	r3, .L1547
 21480 00ea 1868     		ldr	r0, [r3]
 21481 00ec 0669     		ldr	r6, [r0, #16]
 21482              		.loc 1 10045 29 view .LVU5943
 21483 00ee 0123     		movs	r3, #1
 21484 00f0 0DF10702 		add	r2, sp, #7
 21485 00f4 4621     		movs	r1, #70
 21486 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21487 00f8 B047     		blx	r6
 21488              	.LVL2620:
 21489              		.loc 1 10045 26 view .LVU5944
 21490 00fa 54FA80F4 		uxtab	r4, r4, r0
 21491              	.LVL2621:
 21492              		.loc 1 10045 26 view .LVU5945
ARM GAS  /tmp/cc9kYR4Z.s 			page 605


 21493 00fe E6B2     		uxtb	r6, r4
 21494 0100 64B2     		sxtb	r4, r4
 21495              	.LVL2622:
10046:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_MSB_REG,
10047:Core/Src/bno055.c ****                                                            &data2_u8r,
10048:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10049:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21496              		.loc 1 10049 17 is_stmt 1 view .LVU5946
 21497              		.loc 1 10049 20 is_stmt 0 view .LVU5947
 21498 0102 7CB9     		cbnz	r4, .L1527
10050:Core/Src/bno055.c ****                 {
10051:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21499              		.loc 1 10051 21 is_stmt 1 view .LVU5948
 21500              		.loc 1 10051 34 is_stmt 0 view .LVU5949
 21501 0104 95F90330 		ldrsb	r3, [r5, #3]
 21502              	.LVL2623:
10052:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_MSB, data1_u8r);
 21503              		.loc 1 10052 21 is_stmt 1 view .LVU5950
 21504              		.loc 1 10052 31 is_stmt 0 view .LVU5951
 21505 0108 8DF80730 		strb	r3, [sp, #7]
10053:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21506              		.loc 1 10053 21 is_stmt 1 view .LVU5952
 21507              		.loc 1 10053 41 is_stmt 0 view .LVU5953
 21508 010c 674B     		ldr	r3, .L1547
 21509              	.LVL2624:
 21510              		.loc 1 10053 41 view .LVU5954
 21511 010e 1868     		ldr	r0, [r3]
 21512 0110 C468     		ldr	r4, [r0, #12]
 21513              	.LVL2625:
 21514              		.loc 1 10053 33 view .LVU5955
 21515 0112 0123     		movs	r3, #1
 21516 0114 0DF10702 		add	r2, sp, #7
 21517              	.LVL2626:
 21518              		.loc 1 10053 33 view .LVU5956
 21519 0118 4621     		movs	r1, #70
 21520 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21521 011c A047     		blx	r4
 21522              	.LVL2627:
 21523              		.loc 1 10053 30 view .LVU5957
 21524 011e 56FA80F4 		uxtab	r4, r6, r0
 21525 0122 64B2     		sxtb	r4, r4
 21526              	.LVL2628:
 21527              	.L1527:
10054:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_MSB_REG,
10055:Core/Src/bno055.c ****                                                                 &data2_u8r,
10056:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10057:Core/Src/bno055.c ****                 }
10058:Core/Src/bno055.c **** 
10059:Core/Src/bno055.c ****                 /* write soft iron calibration
10060:Core/Src/bno055.c ****                  * matrix two value*/
10061:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21528              		.loc 1 10061 17 is_stmt 1 view .LVU5958
 21529              		.loc 1 10061 37 is_stmt 0 view .LVU5959
 21530 0124 614B     		ldr	r3, .L1547
 21531 0126 1868     		ldr	r0, [r3]
 21532 0128 0669     		ldr	r6, [r0, #16]
 21533              		.loc 1 10061 29 view .LVU5960
ARM GAS  /tmp/cc9kYR4Z.s 			page 606


 21534 012a 0123     		movs	r3, #1
 21535 012c 0DF10702 		add	r2, sp, #7
 21536 0130 4721     		movs	r1, #71
 21537 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21538 0134 B047     		blx	r6
 21539              	.LVL2629:
 21540              		.loc 1 10061 26 view .LVU5961
 21541 0136 54FA80F4 		uxtab	r4, r4, r0
 21542              	.LVL2630:
 21543              		.loc 1 10061 26 view .LVU5962
 21544 013a E6B2     		uxtb	r6, r4
 21545 013c 64B2     		sxtb	r4, r4
 21546              	.LVL2631:
10062:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_LSB_REG,
10063:Core/Src/bno055.c ****                                                            &data2_u8r,
10064:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10065:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21547              		.loc 1 10065 17 is_stmt 1 view .LVU5963
 21548              		.loc 1 10065 20 is_stmt 0 view .LVU5964
 21549 013e 7CB9     		cbnz	r4, .L1528
10066:Core/Src/bno055.c ****                 {
10067:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21550              		.loc 1 10067 21 is_stmt 1 view .LVU5965
 21551              		.loc 1 10067 49 is_stmt 0 view .LVU5966
 21552 0140 B5F90430 		ldrsh	r3, [r5, #4]
 21553              	.LVL2632:
10068:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_LSB, data1_u8r);
 21554              		.loc 1 10068 21 is_stmt 1 view .LVU5967
 21555              		.loc 1 10068 31 is_stmt 0 view .LVU5968
 21556 0144 8DF80730 		strb	r3, [sp, #7]
10069:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21557              		.loc 1 10069 21 is_stmt 1 view .LVU5969
 21558              		.loc 1 10069 41 is_stmt 0 view .LVU5970
 21559 0148 584B     		ldr	r3, .L1547
 21560              	.LVL2633:
 21561              		.loc 1 10069 41 view .LVU5971
 21562 014a 1868     		ldr	r0, [r3]
 21563 014c C468     		ldr	r4, [r0, #12]
 21564              	.LVL2634:
 21565              		.loc 1 10069 33 view .LVU5972
 21566 014e 0123     		movs	r3, #1
 21567 0150 0DF10702 		add	r2, sp, #7
 21568              	.LVL2635:
 21569              		.loc 1 10069 33 view .LVU5973
 21570 0154 4721     		movs	r1, #71
 21571 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21572 0158 A047     		blx	r4
 21573              	.LVL2636:
 21574              		.loc 1 10069 30 view .LVU5974
 21575 015a 56FA80F4 		uxtab	r4, r6, r0
 21576 015e 64B2     		sxtb	r4, r4
 21577              	.LVL2637:
 21578              	.L1528:
10070:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_LSB_REG,
10071:Core/Src/bno055.c ****                                                                 &data2_u8r,
10072:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10073:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/cc9kYR4Z.s 			page 607


10074:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21579              		.loc 1 10074 17 is_stmt 1 view .LVU5975
 21580              		.loc 1 10074 37 is_stmt 0 view .LVU5976
 21581 0160 524B     		ldr	r3, .L1547
 21582 0162 1868     		ldr	r0, [r3]
 21583 0164 0669     		ldr	r6, [r0, #16]
 21584              		.loc 1 10074 29 view .LVU5977
 21585 0166 0123     		movs	r3, #1
 21586 0168 0DF10702 		add	r2, sp, #7
 21587 016c 4821     		movs	r1, #72
 21588 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21589 0170 B047     		blx	r6
 21590              	.LVL2638:
 21591              		.loc 1 10074 26 view .LVU5978
 21592 0172 54FA80F4 		uxtab	r4, r4, r0
 21593              	.LVL2639:
 21594              		.loc 1 10074 26 view .LVU5979
 21595 0176 E6B2     		uxtb	r6, r4
 21596 0178 64B2     		sxtb	r4, r4
 21597              	.LVL2640:
10075:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_MSB_REG,
10076:Core/Src/bno055.c ****                                                            &data2_u8r,
10077:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10078:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21598              		.loc 1 10078 17 is_stmt 1 view .LVU5980
 21599              		.loc 1 10078 20 is_stmt 0 view .LVU5981
 21600 017a 7CB9     		cbnz	r4, .L1529
10079:Core/Src/bno055.c ****                 {
10080:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21601              		.loc 1 10080 21 is_stmt 1 view .LVU5982
 21602              		.loc 1 10080 34 is_stmt 0 view .LVU5983
 21603 017c 95F90530 		ldrsb	r3, [r5, #5]
 21604              	.LVL2641:
10081:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_MSB, data1_u8r);
 21605              		.loc 1 10081 21 is_stmt 1 view .LVU5984
 21606              		.loc 1 10081 31 is_stmt 0 view .LVU5985
 21607 0180 8DF80730 		strb	r3, [sp, #7]
10082:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21608              		.loc 1 10082 21 is_stmt 1 view .LVU5986
 21609              		.loc 1 10082 41 is_stmt 0 view .LVU5987
 21610 0184 494B     		ldr	r3, .L1547
 21611              	.LVL2642:
 21612              		.loc 1 10082 41 view .LVU5988
 21613 0186 1868     		ldr	r0, [r3]
 21614 0188 C468     		ldr	r4, [r0, #12]
 21615              	.LVL2643:
 21616              		.loc 1 10082 33 view .LVU5989
 21617 018a 0123     		movs	r3, #1
 21618 018c 0DF10702 		add	r2, sp, #7
 21619              	.LVL2644:
 21620              		.loc 1 10082 33 view .LVU5990
 21621 0190 4821     		movs	r1, #72
 21622 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21623 0194 A047     		blx	r4
 21624              	.LVL2645:
 21625              		.loc 1 10082 30 view .LVU5991
 21626 0196 56FA80F4 		uxtab	r4, r6, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 608


 21627 019a 64B2     		sxtb	r4, r4
 21628              	.LVL2646:
 21629              	.L1529:
10083:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_MSB_REG,
10084:Core/Src/bno055.c ****                                                                 &data2_u8r,
10085:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10086:Core/Src/bno055.c ****                 }
10087:Core/Src/bno055.c **** 
10088:Core/Src/bno055.c ****                 /* write soft iron calibration
10089:Core/Src/bno055.c ****                  * matrix three value*/
10090:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21630              		.loc 1 10090 17 is_stmt 1 view .LVU5992
 21631              		.loc 1 10090 37 is_stmt 0 view .LVU5993
 21632 019c 434B     		ldr	r3, .L1547
 21633 019e 1868     		ldr	r0, [r3]
 21634 01a0 0669     		ldr	r6, [r0, #16]
 21635              		.loc 1 10090 29 view .LVU5994
 21636 01a2 0123     		movs	r3, #1
 21637 01a4 0DF10702 		add	r2, sp, #7
 21638 01a8 4921     		movs	r1, #73
 21639 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21640 01ac B047     		blx	r6
 21641              	.LVL2647:
 21642              		.loc 1 10090 26 view .LVU5995
 21643 01ae 54FA80F4 		uxtab	r4, r4, r0
 21644              	.LVL2648:
 21645              		.loc 1 10090 26 view .LVU5996
 21646 01b2 E6B2     		uxtb	r6, r4
 21647 01b4 64B2     		sxtb	r4, r4
 21648              	.LVL2649:
10091:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_LSB_REG,
10092:Core/Src/bno055.c ****                                                            &data2_u8r,
10093:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10094:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21649              		.loc 1 10094 17 is_stmt 1 view .LVU5997
 21650              		.loc 1 10094 20 is_stmt 0 view .LVU5998
 21651 01b6 7CB9     		cbnz	r4, .L1530
10095:Core/Src/bno055.c ****                 {
10096:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21652              		.loc 1 10096 21 is_stmt 1 view .LVU5999
 21653              		.loc 1 10096 49 is_stmt 0 view .LVU6000
 21654 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 21655              	.LVL2650:
10097:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_LSB, data1_u8r);
 21656              		.loc 1 10097 21 is_stmt 1 view .LVU6001
 21657              		.loc 1 10097 31 is_stmt 0 view .LVU6002
 21658 01bc 8DF80730 		strb	r3, [sp, #7]
10098:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21659              		.loc 1 10098 21 is_stmt 1 view .LVU6003
 21660              		.loc 1 10098 41 is_stmt 0 view .LVU6004
 21661 01c0 3A4B     		ldr	r3, .L1547
 21662              	.LVL2651:
 21663              		.loc 1 10098 41 view .LVU6005
 21664 01c2 1868     		ldr	r0, [r3]
 21665 01c4 C468     		ldr	r4, [r0, #12]
 21666              	.LVL2652:
 21667              		.loc 1 10098 33 view .LVU6006
ARM GAS  /tmp/cc9kYR4Z.s 			page 609


 21668 01c6 0123     		movs	r3, #1
 21669 01c8 0DF10702 		add	r2, sp, #7
 21670              	.LVL2653:
 21671              		.loc 1 10098 33 view .LVU6007
 21672 01cc 4921     		movs	r1, #73
 21673 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21674 01d0 A047     		blx	r4
 21675              	.LVL2654:
 21676              		.loc 1 10098 30 view .LVU6008
 21677 01d2 56FA80F4 		uxtab	r4, r6, r0
 21678 01d6 64B2     		sxtb	r4, r4
 21679              	.LVL2655:
 21680              	.L1530:
10099:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_LSB_REG,
10100:Core/Src/bno055.c ****                                                                 &data2_u8r,
10101:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10102:Core/Src/bno055.c ****                 }
10103:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21681              		.loc 1 10103 17 is_stmt 1 view .LVU6009
 21682              		.loc 1 10103 37 is_stmt 0 view .LVU6010
 21683 01d8 344B     		ldr	r3, .L1547
 21684 01da 1868     		ldr	r0, [r3]
 21685 01dc 0669     		ldr	r6, [r0, #16]
 21686              		.loc 1 10103 29 view .LVU6011
 21687 01de 0123     		movs	r3, #1
 21688 01e0 0DF10702 		add	r2, sp, #7
 21689 01e4 4A21     		movs	r1, #74
 21690 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21691 01e8 B047     		blx	r6
 21692              	.LVL2656:
 21693              		.loc 1 10103 26 view .LVU6012
 21694 01ea 54FA80F4 		uxtab	r4, r4, r0
 21695              	.LVL2657:
 21696              		.loc 1 10103 26 view .LVU6013
 21697 01ee E6B2     		uxtb	r6, r4
 21698 01f0 64B2     		sxtb	r4, r4
 21699              	.LVL2658:
10104:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_MSB_REG,
10105:Core/Src/bno055.c ****                                                            &data2_u8r,
10106:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10107:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21700              		.loc 1 10107 17 is_stmt 1 view .LVU6014
 21701              		.loc 1 10107 20 is_stmt 0 view .LVU6015
 21702 01f2 7CB9     		cbnz	r4, .L1531
10108:Core/Src/bno055.c ****                 {
10109:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21703              		.loc 1 10109 21 is_stmt 1 view .LVU6016
 21704              		.loc 1 10109 34 is_stmt 0 view .LVU6017
 21705 01f4 95F90730 		ldrsb	r3, [r5, #7]
 21706              	.LVL2659:
10110:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_MSB, data1_u8r);
 21707              		.loc 1 10110 21 is_stmt 1 view .LVU6018
 21708              		.loc 1 10110 31 is_stmt 0 view .LVU6019
 21709 01f8 8DF80730 		strb	r3, [sp, #7]
10111:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21710              		.loc 1 10111 21 is_stmt 1 view .LVU6020
 21711              		.loc 1 10111 41 is_stmt 0 view .LVU6021
ARM GAS  /tmp/cc9kYR4Z.s 			page 610


 21712 01fc 2B4B     		ldr	r3, .L1547
 21713              	.LVL2660:
 21714              		.loc 1 10111 41 view .LVU6022
 21715 01fe 1868     		ldr	r0, [r3]
 21716 0200 C468     		ldr	r4, [r0, #12]
 21717              	.LVL2661:
 21718              		.loc 1 10111 33 view .LVU6023
 21719 0202 0123     		movs	r3, #1
 21720 0204 0DF10702 		add	r2, sp, #7
 21721              	.LVL2662:
 21722              		.loc 1 10111 33 view .LVU6024
 21723 0208 4A21     		movs	r1, #74
 21724 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21725 020c A047     		blx	r4
 21726              	.LVL2663:
 21727              		.loc 1 10111 30 view .LVU6025
 21728 020e 56FA80F4 		uxtab	r4, r6, r0
 21729 0212 64B2     		sxtb	r4, r4
 21730              	.LVL2664:
 21731              	.L1531:
10112:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_MSB_REG,
10113:Core/Src/bno055.c ****                                                                 &data2_u8r,
10114:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10115:Core/Src/bno055.c ****                 }
10116:Core/Src/bno055.c **** 
10117:Core/Src/bno055.c ****                 /* write soft iron calibration
10118:Core/Src/bno055.c ****                  * matrix four value*/
10119:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21732              		.loc 1 10119 17 is_stmt 1 view .LVU6026
 21733              		.loc 1 10119 37 is_stmt 0 view .LVU6027
 21734 0214 254B     		ldr	r3, .L1547
 21735 0216 1868     		ldr	r0, [r3]
 21736 0218 0669     		ldr	r6, [r0, #16]
 21737              		.loc 1 10119 29 view .LVU6028
 21738 021a 0123     		movs	r3, #1
 21739 021c 0DF10702 		add	r2, sp, #7
 21740 0220 4B21     		movs	r1, #75
 21741 0222 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21742 0224 B047     		blx	r6
 21743              	.LVL2665:
 21744              		.loc 1 10119 26 view .LVU6029
 21745 0226 54FA80F4 		uxtab	r4, r4, r0
 21746              	.LVL2666:
 21747              		.loc 1 10119 26 view .LVU6030
 21748 022a E6B2     		uxtb	r6, r4
 21749 022c 64B2     		sxtb	r4, r4
 21750              	.LVL2667:
10120:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_LSB_REG,
10121:Core/Src/bno055.c ****                                                            &data2_u8r,
10122:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10123:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21751              		.loc 1 10123 17 is_stmt 1 view .LVU6031
 21752              		.loc 1 10123 20 is_stmt 0 view .LVU6032
 21753 022e 7CB9     		cbnz	r4, .L1532
10124:Core/Src/bno055.c ****                 {
10125:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21754              		.loc 1 10125 21 is_stmt 1 view .LVU6033
ARM GAS  /tmp/cc9kYR4Z.s 			page 611


 21755              		.loc 1 10125 49 is_stmt 0 view .LVU6034
 21756 0230 B5F90830 		ldrsh	r3, [r5, #8]
 21757              	.LVL2668:
10126:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_LSB, data1_u8r);
 21758              		.loc 1 10126 21 is_stmt 1 view .LVU6035
 21759              		.loc 1 10126 31 is_stmt 0 view .LVU6036
 21760 0234 8DF80730 		strb	r3, [sp, #7]
10127:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21761              		.loc 1 10127 21 is_stmt 1 view .LVU6037
 21762              		.loc 1 10127 41 is_stmt 0 view .LVU6038
 21763 0238 1C4B     		ldr	r3, .L1547
 21764              	.LVL2669:
 21765              		.loc 1 10127 41 view .LVU6039
 21766 023a 1868     		ldr	r0, [r3]
 21767 023c C468     		ldr	r4, [r0, #12]
 21768              	.LVL2670:
 21769              		.loc 1 10127 33 view .LVU6040
 21770 023e 0123     		movs	r3, #1
 21771 0240 0DF10702 		add	r2, sp, #7
 21772              	.LVL2671:
 21773              		.loc 1 10127 33 view .LVU6041
 21774 0244 4B21     		movs	r1, #75
 21775 0246 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21776 0248 A047     		blx	r4
 21777              	.LVL2672:
 21778              		.loc 1 10127 30 view .LVU6042
 21779 024a 56FA80F4 		uxtab	r4, r6, r0
 21780 024e 64B2     		sxtb	r4, r4
 21781              	.LVL2673:
 21782              	.L1532:
10128:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_LSB_REG,
10129:Core/Src/bno055.c ****                                                                 &data2_u8r,
10130:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10131:Core/Src/bno055.c ****                 }
10132:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21783              		.loc 1 10132 17 is_stmt 1 view .LVU6043
 21784              		.loc 1 10132 37 is_stmt 0 view .LVU6044
 21785 0250 164B     		ldr	r3, .L1547
 21786 0252 1868     		ldr	r0, [r3]
 21787 0254 0669     		ldr	r6, [r0, #16]
 21788              		.loc 1 10132 29 view .LVU6045
 21789 0256 0123     		movs	r3, #1
 21790 0258 0DF10702 		add	r2, sp, #7
 21791 025c 4C21     		movs	r1, #76
 21792 025e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21793 0260 B047     		blx	r6
 21794              	.LVL2674:
 21795              		.loc 1 10132 26 view .LVU6046
 21796 0262 54FA80F4 		uxtab	r4, r4, r0
 21797              	.LVL2675:
 21798              		.loc 1 10132 26 view .LVU6047
 21799 0266 E6B2     		uxtb	r6, r4
 21800 0268 64B2     		sxtb	r4, r4
 21801              	.LVL2676:
10133:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_MSB_REG,
10134:Core/Src/bno055.c ****                                                            &data2_u8r,
10135:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/cc9kYR4Z.s 			page 612


10136:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21802              		.loc 1 10136 17 is_stmt 1 view .LVU6048
 21803              		.loc 1 10136 20 is_stmt 0 view .LVU6049
 21804 026a 7CB9     		cbnz	r4, .L1533
10137:Core/Src/bno055.c ****                 {
10138:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21805              		.loc 1 10138 21 is_stmt 1 view .LVU6050
 21806              		.loc 1 10138 34 is_stmt 0 view .LVU6051
 21807 026c 95F90930 		ldrsb	r3, [r5, #9]
 21808              	.LVL2677:
10139:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_MSB, data1_u8r);
 21809              		.loc 1 10139 21 is_stmt 1 view .LVU6052
 21810              		.loc 1 10139 31 is_stmt 0 view .LVU6053
 21811 0270 8DF80730 		strb	r3, [sp, #7]
10140:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21812              		.loc 1 10140 21 is_stmt 1 view .LVU6054
 21813              		.loc 1 10140 41 is_stmt 0 view .LVU6055
 21814 0274 0D4B     		ldr	r3, .L1547
 21815              	.LVL2678:
 21816              		.loc 1 10140 41 view .LVU6056
 21817 0276 1868     		ldr	r0, [r3]
 21818 0278 C468     		ldr	r4, [r0, #12]
 21819              	.LVL2679:
 21820              		.loc 1 10140 33 view .LVU6057
 21821 027a 0123     		movs	r3, #1
 21822 027c 0DF10702 		add	r2, sp, #7
 21823              	.LVL2680:
 21824              		.loc 1 10140 33 view .LVU6058
 21825 0280 4C21     		movs	r1, #76
 21826 0282 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21827 0284 A047     		blx	r4
 21828              	.LVL2681:
 21829              		.loc 1 10140 30 view .LVU6059
 21830 0286 56FA80F4 		uxtab	r4, r6, r0
 21831 028a 64B2     		sxtb	r4, r4
 21832              	.LVL2682:
 21833              	.L1533:
10141:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_MSB_REG,
10142:Core/Src/bno055.c ****                                                                 &data2_u8r,
10143:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10144:Core/Src/bno055.c ****                 }
10145:Core/Src/bno055.c **** 
10146:Core/Src/bno055.c ****                 /* write soft iron calibration
10147:Core/Src/bno055.c ****                  * matrix five value*/
10148:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21834              		.loc 1 10148 17 is_stmt 1 view .LVU6060
 21835              		.loc 1 10148 37 is_stmt 0 view .LVU6061
 21836 028c 074B     		ldr	r3, .L1547
 21837 028e 1868     		ldr	r0, [r3]
 21838 0290 0669     		ldr	r6, [r0, #16]
 21839              		.loc 1 10148 29 view .LVU6062
 21840 0292 0123     		movs	r3, #1
 21841 0294 0DF10702 		add	r2, sp, #7
 21842 0298 4D21     		movs	r1, #77
 21843 029a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21844 029c B047     		blx	r6
 21845              	.LVL2683:
ARM GAS  /tmp/cc9kYR4Z.s 			page 613


 21846              		.loc 1 10148 26 view .LVU6063
 21847 029e 54FA80F4 		uxtab	r4, r4, r0
 21848              	.LVL2684:
 21849              		.loc 1 10148 26 view .LVU6064
 21850 02a2 E6B2     		uxtb	r6, r4
 21851 02a4 64B2     		sxtb	r4, r4
 21852              	.LVL2685:
10149:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_LSB_REG,
10150:Core/Src/bno055.c ****                                                            &data2_u8r,
10151:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10152:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21853              		.loc 1 10152 17 is_stmt 1 view .LVU6065
 21854              		.loc 1 10152 20 is_stmt 0 view .LVU6066
 21855 02a6 9CB9     		cbnz	r4, .L1534
 21856 02a8 02E0     		b	.L1548
 21857              	.L1549:
 21858 02aa 00BF     		.align	2
 21859              	.L1547:
 21860 02ac 00000000 		.word	.LANCHOR0
 21861              	.L1548:
10153:Core/Src/bno055.c ****                 {
10154:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21862              		.loc 1 10154 21 is_stmt 1 view .LVU6067
 21863              		.loc 1 10154 49 is_stmt 0 view .LVU6068
 21864 02b0 B5F90A30 		ldrsh	r3, [r5, #10]
 21865              	.LVL2686:
10155:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_LSB, data1_u8r);
 21866              		.loc 1 10155 21 is_stmt 1 view .LVU6069
 21867              		.loc 1 10155 31 is_stmt 0 view .LVU6070
 21868 02b4 8DF80730 		strb	r3, [sp, #7]
10156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21869              		.loc 1 10156 21 is_stmt 1 view .LVU6071
 21870              		.loc 1 10156 41 is_stmt 0 view .LVU6072
 21871 02b8 7C4B     		ldr	r3, .L1550
 21872              	.LVL2687:
 21873              		.loc 1 10156 41 view .LVU6073
 21874 02ba 1868     		ldr	r0, [r3]
 21875 02bc C468     		ldr	r4, [r0, #12]
 21876              	.LVL2688:
 21877              		.loc 1 10156 33 view .LVU6074
 21878 02be 0123     		movs	r3, #1
 21879 02c0 0DF10702 		add	r2, sp, #7
 21880              	.LVL2689:
 21881              		.loc 1 10156 33 view .LVU6075
 21882 02c4 4D21     		movs	r1, #77
 21883 02c6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21884 02c8 A047     		blx	r4
 21885              	.LVL2690:
 21886              		.loc 1 10156 30 view .LVU6076
 21887 02ca 56FA80F4 		uxtab	r4, r6, r0
 21888 02ce 64B2     		sxtb	r4, r4
 21889              	.LVL2691:
 21890              	.L1534:
10157:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_LSB_REG,
10158:Core/Src/bno055.c ****                                                                 &data2_u8r,
10159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10160:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/cc9kYR4Z.s 			page 614


10161:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21891              		.loc 1 10161 17 is_stmt 1 view .LVU6077
 21892              		.loc 1 10161 37 is_stmt 0 view .LVU6078
 21893 02d0 764B     		ldr	r3, .L1550
 21894 02d2 1868     		ldr	r0, [r3]
 21895 02d4 0669     		ldr	r6, [r0, #16]
 21896              		.loc 1 10161 29 view .LVU6079
 21897 02d6 0123     		movs	r3, #1
 21898 02d8 0DF10702 		add	r2, sp, #7
 21899 02dc 4E21     		movs	r1, #78
 21900 02de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21901 02e0 B047     		blx	r6
 21902              	.LVL2692:
 21903              		.loc 1 10161 26 view .LVU6080
 21904 02e2 54FA80F4 		uxtab	r4, r4, r0
 21905              	.LVL2693:
 21906              		.loc 1 10161 26 view .LVU6081
 21907 02e6 E6B2     		uxtb	r6, r4
 21908 02e8 64B2     		sxtb	r4, r4
 21909              	.LVL2694:
10162:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_MSB_REG,
10163:Core/Src/bno055.c ****                                                            &data2_u8r,
10164:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10165:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21910              		.loc 1 10165 17 is_stmt 1 view .LVU6082
 21911              		.loc 1 10165 20 is_stmt 0 view .LVU6083
 21912 02ea 7CB9     		cbnz	r4, .L1535
10166:Core/Src/bno055.c ****                 {
10167:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21913              		.loc 1 10167 21 is_stmt 1 view .LVU6084
 21914              		.loc 1 10167 34 is_stmt 0 view .LVU6085
 21915 02ec 95F90B30 		ldrsb	r3, [r5, #11]
 21916              	.LVL2695:
10168:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_MSB, data1_u8r);
 21917              		.loc 1 10168 21 is_stmt 1 view .LVU6086
 21918              		.loc 1 10168 31 is_stmt 0 view .LVU6087
 21919 02f0 8DF80730 		strb	r3, [sp, #7]
10169:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21920              		.loc 1 10169 21 is_stmt 1 view .LVU6088
 21921              		.loc 1 10169 41 is_stmt 0 view .LVU6089
 21922 02f4 6D4B     		ldr	r3, .L1550
 21923              	.LVL2696:
 21924              		.loc 1 10169 41 view .LVU6090
 21925 02f6 1868     		ldr	r0, [r3]
 21926 02f8 C468     		ldr	r4, [r0, #12]
 21927              	.LVL2697:
 21928              		.loc 1 10169 33 view .LVU6091
 21929 02fa 0123     		movs	r3, #1
 21930 02fc 0DF10702 		add	r2, sp, #7
 21931              	.LVL2698:
 21932              		.loc 1 10169 33 view .LVU6092
 21933 0300 4E21     		movs	r1, #78
 21934 0302 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21935 0304 A047     		blx	r4
 21936              	.LVL2699:
 21937              		.loc 1 10169 30 view .LVU6093
 21938 0306 56FA80F4 		uxtab	r4, r6, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 615


 21939 030a 64B2     		sxtb	r4, r4
 21940              	.LVL2700:
 21941              	.L1535:
10170:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_MSB_REG,
10171:Core/Src/bno055.c ****                                                                 &data2_u8r,
10172:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10173:Core/Src/bno055.c ****                 }
10174:Core/Src/bno055.c **** 
10175:Core/Src/bno055.c ****                 /* write soft iron calibration
10176:Core/Src/bno055.c ****                  * matrix six value*/
10177:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21942              		.loc 1 10177 17 is_stmt 1 view .LVU6094
 21943              		.loc 1 10177 37 is_stmt 0 view .LVU6095
 21944 030c 674B     		ldr	r3, .L1550
 21945 030e 1868     		ldr	r0, [r3]
 21946 0310 0669     		ldr	r6, [r0, #16]
 21947              		.loc 1 10177 29 view .LVU6096
 21948 0312 0123     		movs	r3, #1
 21949 0314 0DF10702 		add	r2, sp, #7
 21950 0318 4F21     		movs	r1, #79
 21951 031a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21952 031c B047     		blx	r6
 21953              	.LVL2701:
 21954              		.loc 1 10177 26 view .LVU6097
 21955 031e 54FA80F4 		uxtab	r4, r4, r0
 21956              	.LVL2702:
 21957              		.loc 1 10177 26 view .LVU6098
 21958 0322 E6B2     		uxtb	r6, r4
 21959 0324 64B2     		sxtb	r4, r4
 21960              	.LVL2703:
10178:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_LSB_REG,
10179:Core/Src/bno055.c ****                                                            &data2_u8r,
10180:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10181:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21961              		.loc 1 10181 17 is_stmt 1 view .LVU6099
 21962              		.loc 1 10181 20 is_stmt 0 view .LVU6100
 21963 0326 7CB9     		cbnz	r4, .L1536
10182:Core/Src/bno055.c ****                 {
10183:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21964              		.loc 1 10183 21 is_stmt 1 view .LVU6101
 21965              		.loc 1 10183 49 is_stmt 0 view .LVU6102
 21966 0328 B5F90C30 		ldrsh	r3, [r5, #12]
 21967              	.LVL2704:
10184:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_LSB, data1_u8r);
 21968              		.loc 1 10184 21 is_stmt 1 view .LVU6103
 21969              		.loc 1 10184 31 is_stmt 0 view .LVU6104
 21970 032c 8DF80730 		strb	r3, [sp, #7]
10185:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21971              		.loc 1 10185 21 is_stmt 1 view .LVU6105
 21972              		.loc 1 10185 41 is_stmt 0 view .LVU6106
 21973 0330 5E4B     		ldr	r3, .L1550
 21974              	.LVL2705:
 21975              		.loc 1 10185 41 view .LVU6107
 21976 0332 1868     		ldr	r0, [r3]
 21977 0334 C468     		ldr	r4, [r0, #12]
 21978              	.LVL2706:
 21979              		.loc 1 10185 33 view .LVU6108
ARM GAS  /tmp/cc9kYR4Z.s 			page 616


 21980 0336 0123     		movs	r3, #1
 21981 0338 0DF10702 		add	r2, sp, #7
 21982              	.LVL2707:
 21983              		.loc 1 10185 33 view .LVU6109
 21984 033c 4F21     		movs	r1, #79
 21985 033e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21986 0340 A047     		blx	r4
 21987              	.LVL2708:
 21988              		.loc 1 10185 30 view .LVU6110
 21989 0342 56FA80F4 		uxtab	r4, r6, r0
 21990 0346 64B2     		sxtb	r4, r4
 21991              	.LVL2709:
 21992              	.L1536:
10186:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_LSB_REG,
10187:Core/Src/bno055.c ****                                                                 &data2_u8r,
10188:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10189:Core/Src/bno055.c ****                 }
10190:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21993              		.loc 1 10190 17 is_stmt 1 view .LVU6111
 21994              		.loc 1 10190 37 is_stmt 0 view .LVU6112
 21995 0348 584B     		ldr	r3, .L1550
 21996 034a 1868     		ldr	r0, [r3]
 21997 034c 0669     		ldr	r6, [r0, #16]
 21998              		.loc 1 10190 29 view .LVU6113
 21999 034e 0123     		movs	r3, #1
 22000 0350 0DF10702 		add	r2, sp, #7
 22001 0354 5021     		movs	r1, #80
 22002 0356 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22003 0358 B047     		blx	r6
 22004              	.LVL2710:
 22005              		.loc 1 10190 26 view .LVU6114
 22006 035a 54FA80F4 		uxtab	r4, r4, r0
 22007              	.LVL2711:
 22008              		.loc 1 10190 26 view .LVU6115
 22009 035e E6B2     		uxtb	r6, r4
 22010 0360 64B2     		sxtb	r4, r4
 22011              	.LVL2712:
10191:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_MSB_REG,
10192:Core/Src/bno055.c ****                                                            &data2_u8r,
10193:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10194:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22012              		.loc 1 10194 17 is_stmt 1 view .LVU6116
 22013              		.loc 1 10194 20 is_stmt 0 view .LVU6117
 22014 0362 7CB9     		cbnz	r4, .L1537
10195:Core/Src/bno055.c ****                 {
10196:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22015              		.loc 1 10196 21 is_stmt 1 view .LVU6118
 22016              		.loc 1 10196 34 is_stmt 0 view .LVU6119
 22017 0364 95F90D30 		ldrsb	r3, [r5, #13]
 22018              	.LVL2713:
10197:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_MSB, data1_u8r);
 22019              		.loc 1 10197 21 is_stmt 1 view .LVU6120
 22020              		.loc 1 10197 31 is_stmt 0 view .LVU6121
 22021 0368 8DF80730 		strb	r3, [sp, #7]
10198:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22022              		.loc 1 10198 21 is_stmt 1 view .LVU6122
 22023              		.loc 1 10198 41 is_stmt 0 view .LVU6123
ARM GAS  /tmp/cc9kYR4Z.s 			page 617


 22024 036c 4F4B     		ldr	r3, .L1550
 22025              	.LVL2714:
 22026              		.loc 1 10198 41 view .LVU6124
 22027 036e 1868     		ldr	r0, [r3]
 22028 0370 C468     		ldr	r4, [r0, #12]
 22029              	.LVL2715:
 22030              		.loc 1 10198 33 view .LVU6125
 22031 0372 0123     		movs	r3, #1
 22032 0374 0DF10702 		add	r2, sp, #7
 22033              	.LVL2716:
 22034              		.loc 1 10198 33 view .LVU6126
 22035 0378 5021     		movs	r1, #80
 22036 037a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22037 037c A047     		blx	r4
 22038              	.LVL2717:
 22039              		.loc 1 10198 30 view .LVU6127
 22040 037e 56FA80F4 		uxtab	r4, r6, r0
 22041 0382 64B2     		sxtb	r4, r4
 22042              	.LVL2718:
 22043              	.L1537:
10199:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_MSB_REG,
10200:Core/Src/bno055.c ****                                                                 &data2_u8r,
10201:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10202:Core/Src/bno055.c ****                 }
10203:Core/Src/bno055.c **** 
10204:Core/Src/bno055.c ****                 /* write soft iron calibration
10205:Core/Src/bno055.c ****                  * matrix seven value*/
10206:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22044              		.loc 1 10206 17 is_stmt 1 view .LVU6128
 22045              		.loc 1 10206 37 is_stmt 0 view .LVU6129
 22046 0384 494B     		ldr	r3, .L1550
 22047 0386 1868     		ldr	r0, [r3]
 22048 0388 0669     		ldr	r6, [r0, #16]
 22049              		.loc 1 10206 29 view .LVU6130
 22050 038a 0123     		movs	r3, #1
 22051 038c 0DF10702 		add	r2, sp, #7
 22052 0390 5121     		movs	r1, #81
 22053 0392 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22054 0394 B047     		blx	r6
 22055              	.LVL2719:
 22056              		.loc 1 10206 26 view .LVU6131
 22057 0396 54FA80F4 		uxtab	r4, r4, r0
 22058              	.LVL2720:
 22059              		.loc 1 10206 26 view .LVU6132
 22060 039a E6B2     		uxtb	r6, r4
 22061 039c 64B2     		sxtb	r4, r4
 22062              	.LVL2721:
10207:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_LSB_REG,
10208:Core/Src/bno055.c ****                                                            &data2_u8r,
10209:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10210:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22063              		.loc 1 10210 17 is_stmt 1 view .LVU6133
 22064              		.loc 1 10210 20 is_stmt 0 view .LVU6134
 22065 039e 7CB9     		cbnz	r4, .L1538
10211:Core/Src/bno055.c ****                 {
10212:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22066              		.loc 1 10212 21 is_stmt 1 view .LVU6135
ARM GAS  /tmp/cc9kYR4Z.s 			page 618


 22067              		.loc 1 10212 49 is_stmt 0 view .LVU6136
 22068 03a0 B5F90E30 		ldrsh	r3, [r5, #14]
 22069              	.LVL2722:
10213:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_LSB, data1_u8r);
 22070              		.loc 1 10213 21 is_stmt 1 view .LVU6137
 22071              		.loc 1 10213 31 is_stmt 0 view .LVU6138
 22072 03a4 8DF80730 		strb	r3, [sp, #7]
10214:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22073              		.loc 1 10214 21 is_stmt 1 view .LVU6139
 22074              		.loc 1 10214 41 is_stmt 0 view .LVU6140
 22075 03a8 404B     		ldr	r3, .L1550
 22076              	.LVL2723:
 22077              		.loc 1 10214 41 view .LVU6141
 22078 03aa 1868     		ldr	r0, [r3]
 22079 03ac C468     		ldr	r4, [r0, #12]
 22080              	.LVL2724:
 22081              		.loc 1 10214 33 view .LVU6142
 22082 03ae 0123     		movs	r3, #1
 22083 03b0 0DF10702 		add	r2, sp, #7
 22084              	.LVL2725:
 22085              		.loc 1 10214 33 view .LVU6143
 22086 03b4 5121     		movs	r1, #81
 22087 03b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22088 03b8 A047     		blx	r4
 22089              	.LVL2726:
 22090              		.loc 1 10214 30 view .LVU6144
 22091 03ba 56FA80F4 		uxtab	r4, r6, r0
 22092 03be 64B2     		sxtb	r4, r4
 22093              	.LVL2727:
 22094              	.L1538:
10215:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_LSB_REG,
10216:Core/Src/bno055.c ****                                                                 &data2_u8r,
10217:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10218:Core/Src/bno055.c ****                 }
10219:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22095              		.loc 1 10219 17 is_stmt 1 view .LVU6145
 22096              		.loc 1 10219 37 is_stmt 0 view .LVU6146
 22097 03c0 3A4B     		ldr	r3, .L1550
 22098 03c2 1868     		ldr	r0, [r3]
 22099 03c4 0669     		ldr	r6, [r0, #16]
 22100              		.loc 1 10219 29 view .LVU6147
 22101 03c6 0123     		movs	r3, #1
 22102 03c8 0DF10702 		add	r2, sp, #7
 22103 03cc 5221     		movs	r1, #82
 22104 03ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22105 03d0 B047     		blx	r6
 22106              	.LVL2728:
 22107              		.loc 1 10219 26 view .LVU6148
 22108 03d2 54FA80F4 		uxtab	r4, r4, r0
 22109              	.LVL2729:
 22110              		.loc 1 10219 26 view .LVU6149
 22111 03d6 E6B2     		uxtb	r6, r4
 22112 03d8 64B2     		sxtb	r4, r4
 22113              	.LVL2730:
10220:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_MSB_REG,
10221:Core/Src/bno055.c ****                                                            &data2_u8r,
10222:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/cc9kYR4Z.s 			page 619


10223:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22114              		.loc 1 10223 17 is_stmt 1 view .LVU6150
 22115              		.loc 1 10223 20 is_stmt 0 view .LVU6151
 22116 03da 7CB9     		cbnz	r4, .L1539
10224:Core/Src/bno055.c ****                 {
10225:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22117              		.loc 1 10225 21 is_stmt 1 view .LVU6152
 22118              		.loc 1 10225 34 is_stmt 0 view .LVU6153
 22119 03dc 95F90F30 		ldrsb	r3, [r5, #15]
 22120              	.LVL2731:
10226:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_MSB, data1_u8r);
 22121              		.loc 1 10226 21 is_stmt 1 view .LVU6154
 22122              		.loc 1 10226 31 is_stmt 0 view .LVU6155
 22123 03e0 8DF80730 		strb	r3, [sp, #7]
10227:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22124              		.loc 1 10227 21 is_stmt 1 view .LVU6156
 22125              		.loc 1 10227 41 is_stmt 0 view .LVU6157
 22126 03e4 314B     		ldr	r3, .L1550
 22127              	.LVL2732:
 22128              		.loc 1 10227 41 view .LVU6158
 22129 03e6 1868     		ldr	r0, [r3]
 22130 03e8 C468     		ldr	r4, [r0, #12]
 22131              	.LVL2733:
 22132              		.loc 1 10227 33 view .LVU6159
 22133 03ea 0123     		movs	r3, #1
 22134 03ec 0DF10702 		add	r2, sp, #7
 22135              	.LVL2734:
 22136              		.loc 1 10227 33 view .LVU6160
 22137 03f0 5221     		movs	r1, #82
 22138 03f2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22139 03f4 A047     		blx	r4
 22140              	.LVL2735:
 22141              		.loc 1 10227 30 view .LVU6161
 22142 03f6 56FA80F4 		uxtab	r4, r6, r0
 22143 03fa 64B2     		sxtb	r4, r4
 22144              	.LVL2736:
 22145              	.L1539:
10228:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_MSB_REG,
10229:Core/Src/bno055.c ****                                                                 &data2_u8r,
10230:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10231:Core/Src/bno055.c ****                 }
10232:Core/Src/bno055.c **** 
10233:Core/Src/bno055.c ****                 /* write soft iron calibration
10234:Core/Src/bno055.c ****                  * matrix eight value*/
10235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22146              		.loc 1 10235 17 is_stmt 1 view .LVU6162
 22147              		.loc 1 10235 37 is_stmt 0 view .LVU6163
 22148 03fc 2B4B     		ldr	r3, .L1550
 22149 03fe 1868     		ldr	r0, [r3]
 22150 0400 0669     		ldr	r6, [r0, #16]
 22151              		.loc 1 10235 29 view .LVU6164
 22152 0402 0123     		movs	r3, #1
 22153 0404 0DF10702 		add	r2, sp, #7
 22154 0408 5321     		movs	r1, #83
 22155 040a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22156 040c B047     		blx	r6
 22157              	.LVL2737:
ARM GAS  /tmp/cc9kYR4Z.s 			page 620


 22158              		.loc 1 10235 26 view .LVU6165
 22159 040e 54FA80F4 		uxtab	r4, r4, r0
 22160              	.LVL2738:
 22161              		.loc 1 10235 26 view .LVU6166
 22162 0412 E6B2     		uxtb	r6, r4
 22163 0414 64B2     		sxtb	r4, r4
 22164              	.LVL2739:
10236:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_LSB_REG,
10237:Core/Src/bno055.c ****                                                            &data2_u8r,
10238:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10239:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22165              		.loc 1 10239 17 is_stmt 1 view .LVU6167
 22166              		.loc 1 10239 20 is_stmt 0 view .LVU6168
 22167 0416 7CB9     		cbnz	r4, .L1540
10240:Core/Src/bno055.c ****                 {
10241:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22168              		.loc 1 10241 21 is_stmt 1 view .LVU6169
 22169              		.loc 1 10241 49 is_stmt 0 view .LVU6170
 22170 0418 B5F91030 		ldrsh	r3, [r5, #16]
 22171              	.LVL2740:
10242:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_LSB, data1_u8r);
 22172              		.loc 1 10242 21 is_stmt 1 view .LVU6171
 22173              		.loc 1 10242 31 is_stmt 0 view .LVU6172
 22174 041c 8DF80730 		strb	r3, [sp, #7]
10243:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22175              		.loc 1 10243 21 is_stmt 1 view .LVU6173
 22176              		.loc 1 10243 41 is_stmt 0 view .LVU6174
 22177 0420 224B     		ldr	r3, .L1550
 22178              	.LVL2741:
 22179              		.loc 1 10243 41 view .LVU6175
 22180 0422 1868     		ldr	r0, [r3]
 22181 0424 C468     		ldr	r4, [r0, #12]
 22182              	.LVL2742:
 22183              		.loc 1 10243 33 view .LVU6176
 22184 0426 0123     		movs	r3, #1
 22185 0428 0DF10702 		add	r2, sp, #7
 22186              	.LVL2743:
 22187              		.loc 1 10243 33 view .LVU6177
 22188 042c 5321     		movs	r1, #83
 22189 042e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22190 0430 A047     		blx	r4
 22191              	.LVL2744:
 22192              		.loc 1 10243 30 view .LVU6178
 22193 0432 56FA80F4 		uxtab	r4, r6, r0
 22194 0436 64B2     		sxtb	r4, r4
 22195              	.LVL2745:
 22196              	.L1540:
10244:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_LSB_REG,
10245:Core/Src/bno055.c ****                                                                 &data2_u8r,
10246:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10247:Core/Src/bno055.c ****                 }
10248:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22197              		.loc 1 10248 17 is_stmt 1 view .LVU6179
 22198              		.loc 1 10248 37 is_stmt 0 view .LVU6180
 22199 0438 1C4B     		ldr	r3, .L1550
 22200 043a 1868     		ldr	r0, [r3]
 22201 043c 0669     		ldr	r6, [r0, #16]
ARM GAS  /tmp/cc9kYR4Z.s 			page 621


 22202              		.loc 1 10248 29 view .LVU6181
 22203 043e 0123     		movs	r3, #1
 22204 0440 0DF10702 		add	r2, sp, #7
 22205 0444 5421     		movs	r1, #84
 22206 0446 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22207 0448 B047     		blx	r6
 22208              	.LVL2746:
 22209              		.loc 1 10248 26 view .LVU6182
 22210 044a 54FA80F4 		uxtab	r4, r4, r0
 22211              	.LVL2747:
 22212              		.loc 1 10248 26 view .LVU6183
 22213 044e E6B2     		uxtb	r6, r4
 22214 0450 64B2     		sxtb	r4, r4
 22215              	.LVL2748:
10249:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_MSB_REG,
10250:Core/Src/bno055.c ****                                                            &data2_u8r,
10251:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10252:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22216              		.loc 1 10252 17 is_stmt 1 view .LVU6184
 22217              		.loc 1 10252 20 is_stmt 0 view .LVU6185
 22218 0452 C4B9     		cbnz	r4, .L1522
10253:Core/Src/bno055.c ****                 {
10254:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22219              		.loc 1 10254 21 is_stmt 1 view .LVU6186
 22220              		.loc 1 10254 34 is_stmt 0 view .LVU6187
 22221 0454 95F91130 		ldrsb	r3, [r5, #17]
 22222              	.LVL2749:
10255:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_MSB, data1_u8r);
 22223              		.loc 1 10255 21 is_stmt 1 view .LVU6188
 22224              		.loc 1 10255 31 is_stmt 0 view .LVU6189
 22225 0458 8DF80730 		strb	r3, [sp, #7]
10256:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22226              		.loc 1 10256 21 is_stmt 1 view .LVU6190
 22227              		.loc 1 10256 41 is_stmt 0 view .LVU6191
 22228 045c 134B     		ldr	r3, .L1550
 22229              	.LVL2750:
 22230              		.loc 1 10256 41 view .LVU6192
 22231 045e 1868     		ldr	r0, [r3]
 22232 0460 C468     		ldr	r4, [r0, #12]
 22233              	.LVL2751:
 22234              		.loc 1 10256 33 view .LVU6193
 22235 0462 0123     		movs	r3, #1
 22236 0464 0DF10702 		add	r2, sp, #7
 22237              	.LVL2752:
 22238              		.loc 1 10256 33 view .LVU6194
 22239 0468 5421     		movs	r1, #84
 22240 046a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22241 046c A047     		blx	r4
 22242              	.LVL2753:
 22243              		.loc 1 10256 30 view .LVU6195
 22244 046e 56FA80F4 		uxtab	r4, r6, r0
 22245 0472 64B2     		sxtb	r4, r4
 22246              	.LVL2754:
 22247              		.loc 1 10256 30 view .LVU6196
 22248 0474 07E0     		b	.L1522
 22249              	.LVL2755:
 22250              	.L1545:
ARM GAS  /tmp/cc9kYR4Z.s 			page 622


9997:Core/Src/bno055.c ****             }
 22251              		.loc 1 9997 17 is_stmt 1 view .LVU6197
9997:Core/Src/bno055.c ****             }
 22252              		.loc 1 9997 28 is_stmt 0 view .LVU6198
 22253 0476 FFF7FEFF 		bl	bno055_set_operation_mode
 22254              	.LVL2756:
9997:Core/Src/bno055.c ****             }
 22255              		.loc 1 9997 25 view .LVU6199
 22256 047a 54FA80F4 		uxtab	r4, r4, r0
 22257 047e 64B2     		sxtb	r4, r4
 22258              	.LVL2757:
9997:Core/Src/bno055.c ****             }
 22259              		.loc 1 9997 25 view .LVU6200
 22260 0480 D8E5     		b	.L1523
 22261              	.LVL2758:
 22262              	.L1542:
10257:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_MSB_REG,
10258:Core/Src/bno055.c ****                                                                 &data2_u8r,
10259:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10260:Core/Src/bno055.c ****                 }
10261:Core/Src/bno055.c ****             }
10262:Core/Src/bno055.c ****             else
10263:Core/Src/bno055.c ****             {
10264:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10265:Core/Src/bno055.c ****             }
10266:Core/Src/bno055.c ****         }
10267:Core/Src/bno055.c ****         else
10268:Core/Src/bno055.c ****         {
10269:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 22263              		.loc 1 10269 22 view .LVU6201
 22264 0482 4FF0FF34 		mov	r4, #-1
 22265              	.LVL2759:
 22266              	.L1522:
10270:Core/Src/bno055.c ****         }
10271:Core/Src/bno055.c ****     }
10272:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22267              		.loc 1 10272 5 is_stmt 1 view .LVU6202
 22268              		.loc 1 10272 24 is_stmt 0 view .LVU6203
 22269 0486 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 22270              		.loc 1 10272 8 view .LVU6204
 22271 048a 28B9     		cbnz	r0, .L1546
 22272              	.LVL2760:
 22273              	.L1521:
10273:Core/Src/bno055.c ****     {
10274:Core/Src/bno055.c ****         /* set the operation mode
10275:Core/Src/bno055.c ****          * of previous operation mode*/
10276:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10277:Core/Src/bno055.c ****     }
10278:Core/Src/bno055.c **** 
10279:Core/Src/bno055.c ****     return com_rslt;
10280:Core/Src/bno055.c **** }
 22274              		.loc 1 10280 1 view .LVU6205
 22275 048c 2046     		mov	r0, r4
 22276 048e 02B0     		add	sp, sp, #8
 22277              	.LCFI667:
 22278              		.cfi_remember_state
 22279              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc9kYR4Z.s 			page 623


 22280              		@ sp needed
 22281 0490 70BD     		pop	{r4, r5, r6, pc}
 22282              	.LVL2761:
 22283              	.L1543:
 22284              	.LCFI668:
 22285              		.cfi_restore_state
10264:Core/Src/bno055.c ****             }
 22286              		.loc 1 10264 26 view .LVU6206
 22287 0492 4FF0FF34 		mov	r4, #-1
 22288              	.LVL2762:
10264:Core/Src/bno055.c ****             }
 22289              		.loc 1 10264 26 view .LVU6207
 22290 0496 F6E7     		b	.L1522
 22291              	.LVL2763:
 22292              	.L1546:
10276:Core/Src/bno055.c ****     }
 22293              		.loc 1 10276 9 is_stmt 1 view .LVU6208
10276:Core/Src/bno055.c ****     }
 22294              		.loc 1 10276 21 is_stmt 0 view .LVU6209
 22295 0498 FFF7FEFF 		bl	bno055_set_operation_mode
 22296              	.LVL2764:
10276:Core/Src/bno055.c ****     }
 22297              		.loc 1 10276 18 view .LVU6210
 22298 049c 54FA80F4 		uxtab	r4, r4, r0
 22299              	.LVL2765:
10276:Core/Src/bno055.c ****     }
 22300              		.loc 1 10276 18 view .LVU6211
 22301 04a0 64B2     		sxtb	r4, r4
 22302              	.LVL2766:
10276:Core/Src/bno055.c ****     }
 22303              		.loc 1 10276 18 view .LVU6212
 22304 04a2 F3E7     		b	.L1521
 22305              	.LVL2767:
 22306              	.L1541:
9985:Core/Src/bno055.c ****     }
 22307              		.loc 1 9985 16 view .LVU6213
 22308 04a4 6FF07E04 		mvn	r4, #126
 22309 04a8 F0E7     		b	.L1521
 22310              	.L1551:
 22311 04aa 00BF     		.align	2
 22312              	.L1550:
 22313 04ac 00000000 		.word	.LANCHOR0
 22314              		.cfi_endproc
 22315              	.LFE168:
 22317              		.section	.text.bno055_read_accel_offset,"ax",%progbits
 22318              		.align	1
 22319              		.global	bno055_read_accel_offset
 22320              		.syntax unified
 22321              		.thumb
 22322              		.thumb_func
 22324              	bno055_read_accel_offset:
 22325              	.LVL2768:
 22326              	.LFB169:
10281:Core/Src/bno055.c **** 
10282:Core/Src/bno055.c **** /*!
10283:Core/Src/bno055.c ****  *  @brief This API is used to read accel offset and accel radius
10284:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
ARM GAS  /tmp/cc9kYR4Z.s 			page 624


10285:Core/Src/bno055.c ****  *
10286:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10287:Core/Src/bno055.c ****  *
10288:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10289:Core/Src/bno055.c ****  *      ------------------- | ----------------
10290:Core/Src/bno055.c ****  *               x          |  accel offset x
10291:Core/Src/bno055.c ****  *               y          |  accel offset y
10292:Core/Src/bno055.c ****  *               z          |  accel offset z
10293:Core/Src/bno055.c ****  *               r          |  accel offset r
10294:Core/Src/bno055.c ****  *
10295:Core/Src/bno055.c ****  *
10296:Core/Src/bno055.c ****  *  @return results of bus communication function
10297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10299:Core/Src/bno055.c ****  *
10300:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10301:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10302:Core/Src/bno055.c ****  *
10303:Core/Src/bno055.c ****  *  accel G range   |  offset range
10304:Core/Src/bno055.c ****  * ---------------  |  --------------
10305:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10306:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10307:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10308:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10309:Core/Src/bno055.c ****  *
10310:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10311:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10312:Core/Src/bno055.c ****  */
10313:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10314:Core/Src/bno055.c **** {
 22327              		.loc 1 10314 1 is_stmt 1 view -0
 22328              		.cfi_startproc
 22329              		@ args = 0, pretend = 0, frame = 8
 22330              		@ frame_needed = 0, uses_anonymous_args = 0
 22331              		.loc 1 10314 1 is_stmt 0 view .LVU6215
 22332 0000 70B5     		push	{r4, r5, r6, lr}
 22333              	.LCFI669:
 22334              		.cfi_def_cfa_offset 16
 22335              		.cfi_offset 4, -16
 22336              		.cfi_offset 5, -12
 22337              		.cfi_offset 6, -8
 22338              		.cfi_offset 14, -4
 22339 0002 82B0     		sub	sp, sp, #8
 22340              	.LCFI670:
 22341              		.cfi_def_cfa_offset 24
 22342 0004 0446     		mov	r4, r0
10315:Core/Src/bno055.c ****     /* Variable used to return value of
10316:Core/Src/bno055.c ****      * communication routine*/
10317:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22343              		.loc 1 10317 5 is_stmt 1 view .LVU6216
 22344              	.LVL2769:
10318:Core/Src/bno055.c **** 
10319:Core/Src/bno055.c ****     /* Array holding the accel offset values
10320:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10321:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10322:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10323:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 625


10324:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10325:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10326:Core/Src/bno055.c ****      */
10327:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_OFFSET_ARRAY] = {
 22345              		.loc 1 10327 5 view .LVU6217
 22346              		.loc 1 10327 8 is_stmt 0 view .LVU6218
 22347 0006 2C4B     		ldr	r3, .L1562
 22348 0008 93E80300 		ldm	r3, {r0, r1}
 22349              	.LVL2770:
 22350              		.loc 1 10327 8 view .LVU6219
 22351 000c 0090     		str	r0, [sp]
 22352 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10328:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10329:Core/Src/bno055.c ****     };
10330:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22353              		.loc 1 10330 5 is_stmt 1 view .LVU6220
 22354              	.LVL2771:
10331:Core/Src/bno055.c **** 
10332:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10333:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22355              		.loc 1 10333 5 view .LVU6221
 22356              		.loc 1 10333 18 is_stmt 0 view .LVU6222
 22357 0012 2A4B     		ldr	r3, .L1562+4
 22358 0014 1B68     		ldr	r3, [r3]
 22359              		.loc 1 10333 8 view .LVU6223
 22360 0016 002B     		cmp	r3, #0
 22361 0018 42D0     		beq	.L1556
10334:Core/Src/bno055.c ****     {
10335:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10336:Core/Src/bno055.c ****     }
10337:Core/Src/bno055.c ****     else
10338:Core/Src/bno055.c ****     {
10339:Core/Src/bno055.c ****         /*condition check for page, accel offset is
10340:Core/Src/bno055.c ****          * available in the page zero*/
10341:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 22362              		.loc 1 10341 9 is_stmt 1 view .LVU6224
 22363              		.loc 1 10341 21 is_stmt 0 view .LVU6225
 22364 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22365              		.loc 1 10341 12 view .LVU6226
 22366 001c 002B     		cmp	r3, #0
 22367 001e 39D1     		bne	.L1561
 22368              	.LVL2772:
 22369              	.L1554:
10342:Core/Src/bno055.c ****         {
10343:Core/Src/bno055.c ****             /* Write the page zero*/
10344:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10345:Core/Src/bno055.c ****         }
10346:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 22370              		.loc 1 10346 53 discriminator 1 view .LVU6227
 22371 0020 264B     		ldr	r3, .L1562+4
 22372 0022 1B68     		ldr	r3, [r3]
 22373 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22374              		.loc 1 10346 41 discriminator 1 view .LVU6228
 22375 0026 002B     		cmp	r3, #0
 22376 0028 3DD1     		bne	.L1557
 22377              	.L1555:
10347:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 626


10348:Core/Src/bno055.c ****             /* Read accel offset value it is six bytes of data*/
10349:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22378              		.loc 1 10349 13 is_stmt 1 view .LVU6229
 22379              		.loc 1 10349 32 is_stmt 0 view .LVU6230
 22380 002a 244B     		ldr	r3, .L1562+4
 22381 002c 1868     		ldr	r0, [r3]
 22382 002e 0569     		ldr	r5, [r0, #16]
 22383              		.loc 1 10349 24 view .LVU6231
 22384 0030 0623     		movs	r3, #6
 22385 0032 6A46     		mov	r2, sp
 22386 0034 5521     		movs	r1, #85
 22387 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22388 0038 A847     		blx	r5
 22389              	.LVL2773:
10350:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_X_LSB_REG,
10351:Core/Src/bno055.c ****                                                       data_u8,
10352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_ARRAY);
10353:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 22390              		.loc 1 10353 13 is_stmt 1 view .LVU6232
 22391              		.loc 1 10353 16 is_stmt 0 view .LVU6233
 22392 003a 0546     		mov	r5, r0
 22393 003c 0028     		cmp	r0, #0
 22394 003e 35D1     		bne	.L1558
10354:Core/Src/bno055.c ****             {
10355:Core/Src/bno055.c ****                 /* Read accel x offset value*/
10356:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22395              		.loc 1 10356 17 is_stmt 1 view .LVU6234
10357:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10358:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22396              		.loc 1 10358 17 view .LVU6235
10359:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10360:Core/Src/bno055.c ****                 accel_offset->x =
 22397              		.loc 1 10360 17 view .LVU6236
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22398              		.loc 1 10361 34 is_stmt 0 view .LVU6237
 22399 0040 9DF90120 		ldrsb	r2, [sp, #1]
10362:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 22400              		.loc 1 10362 35 view .LVU6238
 22401 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22402              		.loc 1 10361 21 view .LVU6239
 22403 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10360:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22404              		.loc 1 10360 33 view .LVU6240
 22405 004c 2380     		strh	r3, [r4]	@ movhi
10363:Core/Src/bno055.c **** 
10364:Core/Src/bno055.c ****                 /* Read accel y offset value*/
10365:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22406              		.loc 1 10365 17 is_stmt 1 view .LVU6241
10366:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10367:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22407              		.loc 1 10367 17 view .LVU6242
10368:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10369:Core/Src/bno055.c ****                 accel_offset->y =
 22408              		.loc 1 10369 17 view .LVU6243
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22409              		.loc 1 10370 34 is_stmt 0 view .LVU6244
ARM GAS  /tmp/cc9kYR4Z.s 			page 627


 22410 004e 9DF90320 		ldrsb	r2, [sp, #3]
10371:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 22411              		.loc 1 10371 35 view .LVU6245
 22412 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22413              		.loc 1 10370 21 view .LVU6246
 22414 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10369:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22415              		.loc 1 10369 33 view .LVU6247
 22416 005a 6380     		strh	r3, [r4, #2]	@ movhi
10372:Core/Src/bno055.c **** 
10373:Core/Src/bno055.c ****                 /* Read accel z offset value*/
10374:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22417              		.loc 1 10374 17 is_stmt 1 view .LVU6248
10375:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10376:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22418              		.loc 1 10376 17 view .LVU6249
10377:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10378:Core/Src/bno055.c ****                 accel_offset->z =
 22419              		.loc 1 10378 17 view .LVU6250
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22420              		.loc 1 10379 34 is_stmt 0 view .LVU6251
 22421 005c 9DF90520 		ldrsb	r2, [sp, #5]
10380:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 22422              		.loc 1 10380 35 view .LVU6252
 22423 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22424              		.loc 1 10379 21 view .LVU6253
 22425 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10378:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22426              		.loc 1 10378 33 view .LVU6254
 22427 0068 A380     		strh	r3, [r4, #4]	@ movhi
10381:Core/Src/bno055.c **** 
10382:Core/Src/bno055.c ****                 /* Read accel radius value
10383:Core/Src/bno055.c ****                  * it is two bytes of data*/
10384:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22428              		.loc 1 10384 17 is_stmt 1 view .LVU6255
 22429              		.loc 1 10384 37 is_stmt 0 view .LVU6256
 22430 006a 144B     		ldr	r3, .L1562+4
 22431 006c 1868     		ldr	r0, [r3]
 22432              	.LVL2774:
 22433              		.loc 1 10384 37 view .LVU6257
 22434 006e 0669     		ldr	r6, [r0, #16]
 22435              		.loc 1 10384 29 view .LVU6258
 22436 0070 0223     		movs	r3, #2
 22437 0072 6A46     		mov	r2, sp
 22438 0074 6721     		movs	r1, #103
 22439 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22440 0078 B047     		blx	r6
 22441              	.LVL2775:
 22442              		.loc 1 10384 26 view .LVU6259
 22443 007a 55FA80F0 		uxtab	r0, r5, r0
 22444 007e 40B2     		sxtb	r0, r0
 22445              	.LVL2776:
10385:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10386:Core/Src/bno055.c ****                                                            data_u8,
10387:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
ARM GAS  /tmp/cc9kYR4Z.s 			page 628


10388:Core/Src/bno055.c **** 
10389:Core/Src/bno055.c ****                 /* Array holding the accel radius values
10390:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_LSB] - radius->LSB
10391:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_MSB] - radius->MSB
10392:Core/Src/bno055.c ****                  */
10393:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22446              		.loc 1 10393 17 is_stmt 1 view .LVU6260
 22447              		.loc 1 10393 20 is_stmt 0 view .LVU6261
 22448 0080 B8B9     		cbnz	r0, .L1559
10394:Core/Src/bno055.c ****                 {
10395:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22449              		.loc 1 10395 21 is_stmt 1 view .LVU6262
10396:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_LSB
10397:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22450              		.loc 1 10397 21 view .LVU6263
10398:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_MSB
10399:Core/Src/bno055.c ****                     accel_offset->r =
 22451              		.loc 1 10399 21 view .LVU6264
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22452              		.loc 1 10400 38 is_stmt 0 view .LVU6265
 22453 0082 9DF90120 		ldrsb	r2, [sp, #1]
10401:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 22454              		.loc 1 10401 39 view .LVU6266
 22455 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22456              		.loc 1 10400 25 view .LVU6267
 22457 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10399:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22458              		.loc 1 10399 37 view .LVU6268
 22459 008e E380     		strh	r3, [r4, #6]	@ movhi
 22460              	.LVL2777:
 22461              	.L1553:
10402:Core/Src/bno055.c ****                 }
10403:Core/Src/bno055.c ****                 else
10404:Core/Src/bno055.c ****                 {
10405:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10406:Core/Src/bno055.c ****                 }
10407:Core/Src/bno055.c ****             }
10408:Core/Src/bno055.c ****             else
10409:Core/Src/bno055.c ****             {
10410:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10411:Core/Src/bno055.c ****             }
10412:Core/Src/bno055.c ****         }
10413:Core/Src/bno055.c ****         else
10414:Core/Src/bno055.c ****         {
10415:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
10416:Core/Src/bno055.c ****         }
10417:Core/Src/bno055.c ****     }
10418:Core/Src/bno055.c **** 
10419:Core/Src/bno055.c ****     return com_rslt;
10420:Core/Src/bno055.c **** }
 22462              		.loc 1 10420 1 view .LVU6269
 22463 0090 02B0     		add	sp, sp, #8
 22464              	.LCFI671:
 22465              		.cfi_remember_state
 22466              		.cfi_def_cfa_offset 16
 22467              		@ sp needed
ARM GAS  /tmp/cc9kYR4Z.s 			page 629


 22468 0092 70BD     		pop	{r4, r5, r6, pc}
 22469              	.LVL2778:
 22470              	.L1561:
 22471              	.LCFI672:
 22472              		.cfi_restore_state
10344:Core/Src/bno055.c ****         }
 22473              		.loc 1 10344 13 is_stmt 1 view .LVU6270
10344:Core/Src/bno055.c ****         }
 22474              		.loc 1 10344 23 is_stmt 0 view .LVU6271
 22475 0094 0020     		movs	r0, #0
 22476 0096 FFF7FEFF 		bl	bno055_write_page_id
 22477              	.LVL2779:
10346:Core/Src/bno055.c ****         {
 22478              		.loc 1 10346 9 is_stmt 1 view .LVU6272
10346:Core/Src/bno055.c ****         {
 22479              		.loc 1 10346 12 is_stmt 0 view .LVU6273
 22480 009a 0028     		cmp	r0, #0
 22481 009c C5D0     		beq	.L1555
 22482 009e BFE7     		b	.L1554
 22483              	.LVL2780:
 22484              	.L1556:
10335:Core/Src/bno055.c ****     }
 22485              		.loc 1 10335 16 view .LVU6274
 22486 00a0 6FF07E00 		mvn	r0, #126
 22487 00a4 F4E7     		b	.L1553
 22488              	.LVL2781:
 22489              	.L1557:
10415:Core/Src/bno055.c ****         }
 22490              		.loc 1 10415 22 view .LVU6275
 22491 00a6 4FF0FF30 		mov	r0, #-1
 22492 00aa F1E7     		b	.L1553
 22493              	.LVL2782:
 22494              	.L1558:
10410:Core/Src/bno055.c ****             }
 22495              		.loc 1 10410 26 view .LVU6276
 22496 00ac 4FF0FF30 		mov	r0, #-1
 22497              	.LVL2783:
10410:Core/Src/bno055.c ****             }
 22498              		.loc 1 10410 26 view .LVU6277
 22499 00b0 EEE7     		b	.L1553
 22500              	.LVL2784:
 22501              	.L1559:
10405:Core/Src/bno055.c ****                 }
 22502              		.loc 1 10405 30 view .LVU6278
 22503 00b2 4FF0FF30 		mov	r0, #-1
 22504              	.LVL2785:
10405:Core/Src/bno055.c ****                 }
 22505              		.loc 1 10405 30 view .LVU6279
 22506 00b6 EBE7     		b	.L1553
 22507              	.L1563:
 22508              		.align	2
 22509              	.L1562:
 22510 00b8 00000000 		.word	.LANCHOR1
 22511 00bc 00000000 		.word	.LANCHOR0
 22512              		.cfi_endproc
 22513              	.LFE169:
 22515              		.section	.text.bno055_write_accel_offset,"ax",%progbits
ARM GAS  /tmp/cc9kYR4Z.s 			page 630


 22516              		.align	1
 22517              		.global	bno055_write_accel_offset
 22518              		.syntax unified
 22519              		.thumb
 22520              		.thumb_func
 22522              	bno055_write_accel_offset:
 22523              	.LVL2786:
 22524              	.LFB170:
10421:Core/Src/bno055.c **** 
10422:Core/Src/bno055.c **** /*!
10423:Core/Src/bno055.c ****  *  @brief This API is used to write accel offset and accel radius
10424:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10425:Core/Src/bno055.c ****  *
10426:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10427:Core/Src/bno055.c ****  *
10428:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10429:Core/Src/bno055.c ****  *      ------------------- | ----------------
10430:Core/Src/bno055.c ****  *               x          |  accel offset x
10431:Core/Src/bno055.c ****  *               y          |  accel offset y
10432:Core/Src/bno055.c ****  *               z          |  accel offset z
10433:Core/Src/bno055.c ****  *               r          |  accel offset r
10434:Core/Src/bno055.c ****  *
10435:Core/Src/bno055.c ****  *
10436:Core/Src/bno055.c ****  *  @return results of bus communication function
10437:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10438:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10439:Core/Src/bno055.c ****  *
10440:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10441:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10442:Core/Src/bno055.c ****  *
10443:Core/Src/bno055.c ****  *  accel G range   |  offset range
10444:Core/Src/bno055.c ****  * ---------------  |  --------------
10445:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10446:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10447:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10448:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10449:Core/Src/bno055.c ****  *
10450:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10451:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10452:Core/Src/bno055.c ****  */
10453:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10454:Core/Src/bno055.c **** {
 22525              		.loc 1 10454 1 is_stmt 1 view -0
 22526              		.cfi_startproc
 22527              		@ args = 0, pretend = 0, frame = 8
 22528              		@ frame_needed = 0, uses_anonymous_args = 0
 22529              		.loc 1 10454 1 is_stmt 0 view .LVU6281
 22530 0000 70B5     		push	{r4, r5, r6, lr}
 22531              	.LCFI673:
 22532              		.cfi_def_cfa_offset 16
 22533              		.cfi_offset 4, -16
 22534              		.cfi_offset 5, -12
 22535              		.cfi_offset 6, -8
 22536              		.cfi_offset 14, -4
 22537 0002 82B0     		sub	sp, sp, #8
 22538              	.LCFI674:
 22539              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 631


10455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22540              		.loc 1 10455 5 is_stmt 1 view .LVU6282
 22541              	.LVL2787:
10456:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 22542              		.loc 1 10456 5 view .LVU6283
10457:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 22543              		.loc 1 10457 5 view .LVU6284
 22544              		.loc 1 10457 8 is_stmt 0 view .LVU6285
 22545 0004 0023     		movs	r3, #0
 22546 0006 8DF80730 		strb	r3, [sp, #7]
10458:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 22547              		.loc 1 10458 5 is_stmt 1 view .LVU6286
 22548              		.loc 1 10458 8 is_stmt 0 view .LVU6287
 22549 000a 8DF80630 		strb	r3, [sp, #6]
10459:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22550              		.loc 1 10459 5 is_stmt 1 view .LVU6288
 22551              	.LVL2788:
10460:Core/Src/bno055.c **** 
10461:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10462:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22552              		.loc 1 10462 5 view .LVU6289
 22553              		.loc 1 10462 18 is_stmt 0 view .LVU6290
 22554 000e 8C4B     		ldr	r3, .L1581
 22555 0010 1B68     		ldr	r3, [r3]
 22556              		.loc 1 10462 8 view .LVU6291
 22557 0012 002B     		cmp	r3, #0
 22558 0014 00F01081 		beq	.L1575
 22559 0018 0546     		mov	r5, r0
10463:Core/Src/bno055.c ****     {
10464:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10465:Core/Src/bno055.c ****     }
10466:Core/Src/bno055.c ****     else
10467:Core/Src/bno055.c ****     {
10468:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10469:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10470:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10471:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 22560              		.loc 1 10471 9 is_stmt 1 view .LVU6292
 22561              		.loc 1 10471 19 is_stmt 0 view .LVU6293
 22562 001a 0DF10600 		add	r0, sp, #6
 22563              	.LVL2789:
 22564              		.loc 1 10471 19 view .LVU6294
 22565 001e FFF7FEFF 		bl	bno055_get_operation_mode
 22566              	.LVL2790:
10472:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 22567              		.loc 1 10472 9 is_stmt 1 view .LVU6295
 22568              		.loc 1 10472 12 is_stmt 0 view .LVU6296
 22569 0022 0446     		mov	r4, r0
 22570 0024 0028     		cmp	r0, #0
 22571 0026 40F0F680 		bne	.L1576
10473:Core/Src/bno055.c ****         {
10474:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22572              		.loc 1 10474 13 is_stmt 1 view .LVU6297
 22573              		.loc 1 10474 32 is_stmt 0 view .LVU6298
 22574 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 22575              		.loc 1 10474 16 view .LVU6299
 22576 002e 002B     		cmp	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 632


 22577 0030 40F0EB80 		bne	.L1579
 22578              	.LVL2791:
 22579              	.L1567:
10475:Core/Src/bno055.c ****             {
10476:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10477:Core/Src/bno055.c ****             }
10478:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 22580              		.loc 1 10478 13 is_stmt 1 view .LVU6300
 22581              		.loc 1 10478 16 is_stmt 0 view .LVU6301
 22582 0034 002C     		cmp	r4, #0
 22583 0036 40F0F680 		bne	.L1577
10479:Core/Src/bno055.c ****             {
10480:Core/Src/bno055.c ****                 /* write accel offset x value*/
10481:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22584              		.loc 1 10481 17 is_stmt 1 view .LVU6302
 22585              		.loc 1 10481 36 is_stmt 0 view .LVU6303
 22586 003a 814B     		ldr	r3, .L1581
 22587 003c 1868     		ldr	r0, [r3]
 22588 003e 0469     		ldr	r4, [r0, #16]
 22589              	.LVL2792:
 22590              		.loc 1 10481 28 view .LVU6304
 22591 0040 0123     		movs	r3, #1
 22592 0042 0DF10702 		add	r2, sp, #7
 22593 0046 5521     		movs	r1, #85
 22594 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22595 004a A047     		blx	r4
 22596              	.LVL2793:
10482:Core/Src/bno055.c ****                                                           BNO055_ACCEL_OFFSET_X_LSB_REG,
10483:Core/Src/bno055.c ****                                                           &data2_u8r,
10484:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10485:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22597              		.loc 1 10485 17 is_stmt 1 view .LVU6305
 22598              		.loc 1 10485 20 is_stmt 0 view .LVU6306
 22599 004c 0446     		mov	r4, r0
 22600 004e 78B9     		cbnz	r0, .L1568
10486:Core/Src/bno055.c ****                 {
10487:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 22601              		.loc 1 10487 21 is_stmt 1 view .LVU6307
 22602              		.loc 1 10487 51 is_stmt 0 view .LVU6308
 22603 0050 B5F90030 		ldrsh	r3, [r5]
 22604              	.LVL2794:
10488:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_LSB, data1_u8r
 22605              		.loc 1 10488 21 is_stmt 1 view .LVU6309
 22606              		.loc 1 10488 31 is_stmt 0 view .LVU6310
 22607 0054 8DF80730 		strb	r3, [sp, #7]
10489:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22608              		.loc 1 10489 21 is_stmt 1 view .LVU6311
 22609              		.loc 1 10489 41 is_stmt 0 view .LVU6312
 22610 0058 794B     		ldr	r3, .L1581
 22611              	.LVL2795:
 22612              		.loc 1 10489 41 view .LVU6313
 22613 005a 1868     		ldr	r0, [r3]
 22614              	.LVL2796:
 22615              		.loc 1 10489 41 view .LVU6314
 22616 005c C668     		ldr	r6, [r0, #12]
 22617              		.loc 1 10489 33 view .LVU6315
 22618 005e 0123     		movs	r3, #1
ARM GAS  /tmp/cc9kYR4Z.s 			page 633


 22619 0060 0DF10702 		add	r2, sp, #7
 22620              	.LVL2797:
 22621              		.loc 1 10489 33 view .LVU6316
 22622 0064 5521     		movs	r1, #85
 22623 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22624 0068 B047     		blx	r6
 22625              	.LVL2798:
 22626              		.loc 1 10489 30 view .LVU6317
 22627 006a 54FA80F0 		uxtab	r0, r4, r0
 22628 006e 44B2     		sxtb	r4, r0
 22629              	.LVL2799:
 22630              	.L1568:
10490:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_LSB_REG,
10491:Core/Src/bno055.c ****                                                                 &data2_u8r,
10492:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10493:Core/Src/bno055.c ****                 }
10494:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22631              		.loc 1 10494 17 is_stmt 1 view .LVU6318
 22632              		.loc 1 10494 37 is_stmt 0 view .LVU6319
 22633 0070 734B     		ldr	r3, .L1581
 22634 0072 1868     		ldr	r0, [r3]
 22635 0074 0669     		ldr	r6, [r0, #16]
 22636              		.loc 1 10494 29 view .LVU6320
 22637 0076 0123     		movs	r3, #1
 22638 0078 0DF10702 		add	r2, sp, #7
 22639 007c 5621     		movs	r1, #86
 22640 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22641 0080 B047     		blx	r6
 22642              	.LVL2800:
 22643              		.loc 1 10494 26 view .LVU6321
 22644 0082 54FA80F4 		uxtab	r4, r4, r0
 22645              	.LVL2801:
 22646              		.loc 1 10494 26 view .LVU6322
 22647 0086 E6B2     		uxtb	r6, r4
 22648 0088 64B2     		sxtb	r4, r4
 22649              	.LVL2802:
10495:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_X_MSB_REG,
10496:Core/Src/bno055.c ****                                                            &data2_u8r,
10497:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10498:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22650              		.loc 1 10498 17 is_stmt 1 view .LVU6323
 22651              		.loc 1 10498 20 is_stmt 0 view .LVU6324
 22652 008a 7CB9     		cbnz	r4, .L1569
10499:Core/Src/bno055.c ****                 {
10500:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22653              		.loc 1 10500 21 is_stmt 1 view .LVU6325
 22654              		.loc 1 10500 34 is_stmt 0 view .LVU6326
 22655 008c 95F90130 		ldrsb	r3, [r5, #1]
 22656              	.LVL2803:
10501:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_MSB, data1_u8r
 22657              		.loc 1 10501 21 is_stmt 1 view .LVU6327
 22658              		.loc 1 10501 31 is_stmt 0 view .LVU6328
 22659 0090 8DF80730 		strb	r3, [sp, #7]
10502:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22660              		.loc 1 10502 21 is_stmt 1 view .LVU6329
 22661              		.loc 1 10502 41 is_stmt 0 view .LVU6330
 22662 0094 6A4B     		ldr	r3, .L1581
ARM GAS  /tmp/cc9kYR4Z.s 			page 634


 22663              	.LVL2804:
 22664              		.loc 1 10502 41 view .LVU6331
 22665 0096 1868     		ldr	r0, [r3]
 22666 0098 C468     		ldr	r4, [r0, #12]
 22667              	.LVL2805:
 22668              		.loc 1 10502 33 view .LVU6332
 22669 009a 0123     		movs	r3, #1
 22670 009c 0DF10702 		add	r2, sp, #7
 22671              	.LVL2806:
 22672              		.loc 1 10502 33 view .LVU6333
 22673 00a0 5621     		movs	r1, #86
 22674 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22675 00a4 A047     		blx	r4
 22676              	.LVL2807:
 22677              		.loc 1 10502 30 view .LVU6334
 22678 00a6 56FA80F4 		uxtab	r4, r6, r0
 22679 00aa 64B2     		sxtb	r4, r4
 22680              	.LVL2808:
 22681              	.L1569:
10503:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_MSB_REG,
10504:Core/Src/bno055.c ****                                                                 &data2_u8r,
10505:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10506:Core/Src/bno055.c ****                 }
10507:Core/Src/bno055.c **** 
10508:Core/Src/bno055.c ****                 /* write accel offset y value*/
10509:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22682              		.loc 1 10509 17 is_stmt 1 view .LVU6335
 22683              		.loc 1 10509 37 is_stmt 0 view .LVU6336
 22684 00ac 644B     		ldr	r3, .L1581
 22685 00ae 1868     		ldr	r0, [r3]
 22686 00b0 0669     		ldr	r6, [r0, #16]
 22687              		.loc 1 10509 29 view .LVU6337
 22688 00b2 0123     		movs	r3, #1
 22689 00b4 0DF10702 		add	r2, sp, #7
 22690 00b8 5721     		movs	r1, #87
 22691 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22692 00bc B047     		blx	r6
 22693              	.LVL2809:
 22694              		.loc 1 10509 26 view .LVU6338
 22695 00be 54FA80F4 		uxtab	r4, r4, r0
 22696              	.LVL2810:
 22697              		.loc 1 10509 26 view .LVU6339
 22698 00c2 E6B2     		uxtb	r6, r4
 22699 00c4 64B2     		sxtb	r4, r4
 22700              	.LVL2811:
10510:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_LSB_REG,
10511:Core/Src/bno055.c ****                                                            &data2_u8r,
10512:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10513:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22701              		.loc 1 10513 17 is_stmt 1 view .LVU6340
 22702              		.loc 1 10513 20 is_stmt 0 view .LVU6341
 22703 00c6 7CB9     		cbnz	r4, .L1570
10514:Core/Src/bno055.c ****                 {
10515:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 22704              		.loc 1 10515 21 is_stmt 1 view .LVU6342
 22705              		.loc 1 10515 51 is_stmt 0 view .LVU6343
 22706 00c8 B5F90230 		ldrsh	r3, [r5, #2]
ARM GAS  /tmp/cc9kYR4Z.s 			page 635


 22707              	.LVL2812:
10516:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_LSB, data1_u8r
 22708              		.loc 1 10516 21 is_stmt 1 view .LVU6344
 22709              		.loc 1 10516 31 is_stmt 0 view .LVU6345
 22710 00cc 8DF80730 		strb	r3, [sp, #7]
10517:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22711              		.loc 1 10517 21 is_stmt 1 view .LVU6346
 22712              		.loc 1 10517 41 is_stmt 0 view .LVU6347
 22713 00d0 5B4B     		ldr	r3, .L1581
 22714              	.LVL2813:
 22715              		.loc 1 10517 41 view .LVU6348
 22716 00d2 1868     		ldr	r0, [r3]
 22717 00d4 C468     		ldr	r4, [r0, #12]
 22718              	.LVL2814:
 22719              		.loc 1 10517 33 view .LVU6349
 22720 00d6 0123     		movs	r3, #1
 22721 00d8 0DF10702 		add	r2, sp, #7
 22722              	.LVL2815:
 22723              		.loc 1 10517 33 view .LVU6350
 22724 00dc 5721     		movs	r1, #87
 22725 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22726 00e0 A047     		blx	r4
 22727              	.LVL2816:
 22728              		.loc 1 10517 30 view .LVU6351
 22729 00e2 56FA80F4 		uxtab	r4, r6, r0
 22730 00e6 64B2     		sxtb	r4, r4
 22731              	.LVL2817:
 22732              	.L1570:
10518:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_LSB_REG,
10519:Core/Src/bno055.c ****                                                                 &data2_u8r,
10520:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10521:Core/Src/bno055.c ****                 }
10522:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22733              		.loc 1 10522 17 is_stmt 1 view .LVU6352
 22734              		.loc 1 10522 37 is_stmt 0 view .LVU6353
 22735 00e8 554B     		ldr	r3, .L1581
 22736 00ea 1868     		ldr	r0, [r3]
 22737 00ec 0669     		ldr	r6, [r0, #16]
 22738              		.loc 1 10522 29 view .LVU6354
 22739 00ee 0123     		movs	r3, #1
 22740 00f0 0DF10702 		add	r2, sp, #7
 22741 00f4 5821     		movs	r1, #88
 22742 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22743 00f8 B047     		blx	r6
 22744              	.LVL2818:
 22745              		.loc 1 10522 26 view .LVU6355
 22746 00fa 54FA80F4 		uxtab	r4, r4, r0
 22747              	.LVL2819:
 22748              		.loc 1 10522 26 view .LVU6356
 22749 00fe E6B2     		uxtb	r6, r4
 22750 0100 64B2     		sxtb	r4, r4
 22751              	.LVL2820:
10523:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_MSB_REG,
10524:Core/Src/bno055.c ****                                                            &data2_u8r,
10525:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10526:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22752              		.loc 1 10526 17 is_stmt 1 view .LVU6357
ARM GAS  /tmp/cc9kYR4Z.s 			page 636


 22753              		.loc 1 10526 20 is_stmt 0 view .LVU6358
 22754 0102 7CB9     		cbnz	r4, .L1571
10527:Core/Src/bno055.c ****                 {
10528:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22755              		.loc 1 10528 21 is_stmt 1 view .LVU6359
 22756              		.loc 1 10528 34 is_stmt 0 view .LVU6360
 22757 0104 95F90330 		ldrsb	r3, [r5, #3]
 22758              	.LVL2821:
10529:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_MSB, data1_u8r
 22759              		.loc 1 10529 21 is_stmt 1 view .LVU6361
 22760              		.loc 1 10529 31 is_stmt 0 view .LVU6362
 22761 0108 8DF80730 		strb	r3, [sp, #7]
10530:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22762              		.loc 1 10530 21 is_stmt 1 view .LVU6363
 22763              		.loc 1 10530 41 is_stmt 0 view .LVU6364
 22764 010c 4C4B     		ldr	r3, .L1581
 22765              	.LVL2822:
 22766              		.loc 1 10530 41 view .LVU6365
 22767 010e 1868     		ldr	r0, [r3]
 22768 0110 C468     		ldr	r4, [r0, #12]
 22769              	.LVL2823:
 22770              		.loc 1 10530 33 view .LVU6366
 22771 0112 0123     		movs	r3, #1
 22772 0114 0DF10702 		add	r2, sp, #7
 22773              	.LVL2824:
 22774              		.loc 1 10530 33 view .LVU6367
 22775 0118 5821     		movs	r1, #88
 22776 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22777 011c A047     		blx	r4
 22778              	.LVL2825:
 22779              		.loc 1 10530 30 view .LVU6368
 22780 011e 56FA80F4 		uxtab	r4, r6, r0
 22781 0122 64B2     		sxtb	r4, r4
 22782              	.LVL2826:
 22783              	.L1571:
10531:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_MSB_REG,
10532:Core/Src/bno055.c ****                                                                 &data2_u8r,
10533:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10534:Core/Src/bno055.c ****                 }
10535:Core/Src/bno055.c **** 
10536:Core/Src/bno055.c ****                 /* write accel offset z value*/
10537:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22784              		.loc 1 10537 17 is_stmt 1 view .LVU6369
 22785              		.loc 1 10537 37 is_stmt 0 view .LVU6370
 22786 0124 464B     		ldr	r3, .L1581
 22787 0126 1868     		ldr	r0, [r3]
 22788 0128 0669     		ldr	r6, [r0, #16]
 22789              		.loc 1 10537 29 view .LVU6371
 22790 012a 0123     		movs	r3, #1
 22791 012c 0DF10702 		add	r2, sp, #7
 22792 0130 5921     		movs	r1, #89
 22793 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22794 0134 B047     		blx	r6
 22795              	.LVL2827:
 22796              		.loc 1 10537 26 view .LVU6372
 22797 0136 54FA80F4 		uxtab	r4, r4, r0
 22798              	.LVL2828:
ARM GAS  /tmp/cc9kYR4Z.s 			page 637


 22799              		.loc 1 10537 26 view .LVU6373
 22800 013a E6B2     		uxtb	r6, r4
 22801 013c 64B2     		sxtb	r4, r4
 22802              	.LVL2829:
10538:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_LSB_REG,
10539:Core/Src/bno055.c ****                                                            &data2_u8r,
10540:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10541:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22803              		.loc 1 10541 17 is_stmt 1 view .LVU6374
 22804              		.loc 1 10541 20 is_stmt 0 view .LVU6375
 22805 013e 7CB9     		cbnz	r4, .L1572
10542:Core/Src/bno055.c ****                 {
10543:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 22806              		.loc 1 10543 21 is_stmt 1 view .LVU6376
 22807              		.loc 1 10543 51 is_stmt 0 view .LVU6377
 22808 0140 B5F90430 		ldrsh	r3, [r5, #4]
 22809              	.LVL2830:
10544:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_LSB, data1_u8r
 22810              		.loc 1 10544 21 is_stmt 1 view .LVU6378
 22811              		.loc 1 10544 31 is_stmt 0 view .LVU6379
 22812 0144 8DF80730 		strb	r3, [sp, #7]
10545:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22813              		.loc 1 10545 21 is_stmt 1 view .LVU6380
 22814              		.loc 1 10545 41 is_stmt 0 view .LVU6381
 22815 0148 3D4B     		ldr	r3, .L1581
 22816              	.LVL2831:
 22817              		.loc 1 10545 41 view .LVU6382
 22818 014a 1868     		ldr	r0, [r3]
 22819 014c C468     		ldr	r4, [r0, #12]
 22820              	.LVL2832:
 22821              		.loc 1 10545 33 view .LVU6383
 22822 014e 0123     		movs	r3, #1
 22823 0150 0DF10702 		add	r2, sp, #7
 22824              	.LVL2833:
 22825              		.loc 1 10545 33 view .LVU6384
 22826 0154 5921     		movs	r1, #89
 22827 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22828 0158 A047     		blx	r4
 22829              	.LVL2834:
 22830              		.loc 1 10545 30 view .LVU6385
 22831 015a 56FA80F4 		uxtab	r4, r6, r0
 22832 015e 64B2     		sxtb	r4, r4
 22833              	.LVL2835:
 22834              	.L1572:
10546:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_LSB_REG,
10547:Core/Src/bno055.c ****                                                                 &data2_u8r,
10548:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10549:Core/Src/bno055.c ****                 }
10550:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22835              		.loc 1 10550 17 is_stmt 1 view .LVU6386
 22836              		.loc 1 10550 37 is_stmt 0 view .LVU6387
 22837 0160 374B     		ldr	r3, .L1581
 22838 0162 1868     		ldr	r0, [r3]
 22839 0164 0669     		ldr	r6, [r0, #16]
 22840              		.loc 1 10550 29 view .LVU6388
 22841 0166 0123     		movs	r3, #1
 22842 0168 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/cc9kYR4Z.s 			page 638


 22843 016c 5A21     		movs	r1, #90
 22844 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22845 0170 B047     		blx	r6
 22846              	.LVL2836:
 22847              		.loc 1 10550 26 view .LVU6389
 22848 0172 54FA80F4 		uxtab	r4, r4, r0
 22849              	.LVL2837:
 22850              		.loc 1 10550 26 view .LVU6390
 22851 0176 E6B2     		uxtb	r6, r4
 22852 0178 64B2     		sxtb	r4, r4
 22853              	.LVL2838:
10551:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_MSB_REG,
10552:Core/Src/bno055.c ****                                                            &data2_u8r,
10553:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10554:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22854              		.loc 1 10554 17 is_stmt 1 view .LVU6391
 22855              		.loc 1 10554 20 is_stmt 0 view .LVU6392
 22856 017a 7CB9     		cbnz	r4, .L1573
10555:Core/Src/bno055.c ****                 {
10556:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22857              		.loc 1 10556 21 is_stmt 1 view .LVU6393
 22858              		.loc 1 10556 34 is_stmt 0 view .LVU6394
 22859 017c 95F90530 		ldrsb	r3, [r5, #5]
 22860              	.LVL2839:
10557:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_MSB, data1_u8r
 22861              		.loc 1 10557 21 is_stmt 1 view .LVU6395
 22862              		.loc 1 10557 31 is_stmt 0 view .LVU6396
 22863 0180 8DF80730 		strb	r3, [sp, #7]
10558:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22864              		.loc 1 10558 21 is_stmt 1 view .LVU6397
 22865              		.loc 1 10558 41 is_stmt 0 view .LVU6398
 22866 0184 2E4B     		ldr	r3, .L1581
 22867              	.LVL2840:
 22868              		.loc 1 10558 41 view .LVU6399
 22869 0186 1868     		ldr	r0, [r3]
 22870 0188 C468     		ldr	r4, [r0, #12]
 22871              	.LVL2841:
 22872              		.loc 1 10558 33 view .LVU6400
 22873 018a 0123     		movs	r3, #1
 22874 018c 0DF10702 		add	r2, sp, #7
 22875              	.LVL2842:
 22876              		.loc 1 10558 33 view .LVU6401
 22877 0190 5A21     		movs	r1, #90
 22878 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22879 0194 A047     		blx	r4
 22880              	.LVL2843:
 22881              		.loc 1 10558 30 view .LVU6402
 22882 0196 56FA80F4 		uxtab	r4, r6, r0
 22883 019a 64B2     		sxtb	r4, r4
 22884              	.LVL2844:
 22885              	.L1573:
10559:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_MSB_REG,
10560:Core/Src/bno055.c ****                                                                 &data2_u8r,
10561:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10562:Core/Src/bno055.c ****                 }
10563:Core/Src/bno055.c **** 
10564:Core/Src/bno055.c ****                 /*write accel radius value*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 639


10565:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22886              		.loc 1 10565 17 is_stmt 1 view .LVU6403
 22887              		.loc 1 10565 37 is_stmt 0 view .LVU6404
 22888 019c 284B     		ldr	r3, .L1581
 22889 019e 1868     		ldr	r0, [r3]
 22890 01a0 0669     		ldr	r6, [r0, #16]
 22891              		.loc 1 10565 29 view .LVU6405
 22892 01a2 0123     		movs	r3, #1
 22893 01a4 0DF10702 		add	r2, sp, #7
 22894 01a8 6721     		movs	r1, #103
 22895 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22896 01ac B047     		blx	r6
 22897              	.LVL2845:
 22898              		.loc 1 10565 26 view .LVU6406
 22899 01ae 54FA80F4 		uxtab	r4, r4, r0
 22900              	.LVL2846:
 22901              		.loc 1 10565 26 view .LVU6407
 22902 01b2 64B2     		sxtb	r4, r4
 22903              	.LVL2847:
10566:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10567:Core/Src/bno055.c ****                                                            &data2_u8r,
10568:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10569:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22904              		.loc 1 10569 17 is_stmt 1 view .LVU6408
 22905              		.loc 1 10569 20 is_stmt 0 view .LVU6409
 22906 01b4 6CB9     		cbnz	r4, .L1574
10570:Core/Src/bno055.c ****                 {
10571:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 22907              		.loc 1 10571 21 is_stmt 1 view .LVU6410
 22908              		.loc 1 10571 51 is_stmt 0 view .LVU6411
 22909 01b6 B5F90630 		ldrsh	r3, [r5, #6]
 22910              	.LVL2848:
10572:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_LSB, data1_u8r);
 22911              		.loc 1 10572 21 is_stmt 1 view .LVU6412
 22912              		.loc 1 10572 31 is_stmt 0 view .LVU6413
 22913 01ba 8DF80730 		strb	r3, [sp, #7]
10573:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22914              		.loc 1 10573 21 is_stmt 1 view .LVU6414
 22915              		.loc 1 10573 40 is_stmt 0 view .LVU6415
 22916 01be 204B     		ldr	r3, .L1581
 22917              	.LVL2849:
 22918              		.loc 1 10573 40 view .LVU6416
 22919 01c0 1868     		ldr	r0, [r3]
 22920 01c2 C468     		ldr	r4, [r0, #12]
 22921              	.LVL2850:
 22922              		.loc 1 10573 32 view .LVU6417
 22923 01c4 0123     		movs	r3, #1
 22924 01c6 0DF10702 		add	r2, sp, #7
 22925              	.LVL2851:
 22926              		.loc 1 10573 32 view .LVU6418
 22927 01ca 6721     		movs	r1, #103
 22928 01cc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22929 01ce A047     		blx	r4
 22930              	.LVL2852:
 22931              		.loc 1 10573 32 view .LVU6419
 22932 01d0 0446     		mov	r4, r0
 22933              	.LVL2853:
ARM GAS  /tmp/cc9kYR4Z.s 			page 640


 22934              	.L1574:
10574:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_LSB_REG,
10575:Core/Src/bno055.c ****                                                                &data2_u8r,
10576:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10577:Core/Src/bno055.c ****                 }
10578:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22935              		.loc 1 10578 17 is_stmt 1 view .LVU6420
 22936              		.loc 1 10578 37 is_stmt 0 view .LVU6421
 22937 01d2 1B4B     		ldr	r3, .L1581
 22938 01d4 1868     		ldr	r0, [r3]
 22939 01d6 0669     		ldr	r6, [r0, #16]
 22940              		.loc 1 10578 29 view .LVU6422
 22941 01d8 0123     		movs	r3, #1
 22942 01da 0DF10702 		add	r2, sp, #7
 22943 01de 6821     		movs	r1, #104
 22944 01e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22945 01e2 B047     		blx	r6
 22946              	.LVL2854:
 22947              		.loc 1 10578 26 view .LVU6423
 22948 01e4 54FA80F4 		uxtab	r4, r4, r0
 22949              	.LVL2855:
 22950              		.loc 1 10578 26 view .LVU6424
 22951 01e8 64B2     		sxtb	r4, r4
 22952              	.LVL2856:
10579:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_MSB_REG,
10580:Core/Src/bno055.c ****                                                            &data2_u8r,
10581:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10582:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22953              		.loc 1 10582 17 is_stmt 1 view .LVU6425
 22954              		.loc 1 10582 20 is_stmt 0 view .LVU6426
 22955 01ea B4B9     		cbnz	r4, .L1566
10583:Core/Src/bno055.c ****                 {
10584:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22956              		.loc 1 10584 21 is_stmt 1 view .LVU6427
 22957              		.loc 1 10584 34 is_stmt 0 view .LVU6428
 22958 01ec 95F90730 		ldrsb	r3, [r5, #7]
 22959              	.LVL2857:
10585:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_MSB, data1_u8r);
 22960              		.loc 1 10585 21 is_stmt 1 view .LVU6429
 22961              		.loc 1 10585 31 is_stmt 0 view .LVU6430
 22962 01f0 8DF80730 		strb	r3, [sp, #7]
10586:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22963              		.loc 1 10586 21 is_stmt 1 view .LVU6431
 22964              		.loc 1 10586 40 is_stmt 0 view .LVU6432
 22965 01f4 124B     		ldr	r3, .L1581
 22966              	.LVL2858:
 22967              		.loc 1 10586 40 view .LVU6433
 22968 01f6 1868     		ldr	r0, [r3]
 22969 01f8 C468     		ldr	r4, [r0, #12]
 22970              	.LVL2859:
 22971              		.loc 1 10586 32 view .LVU6434
 22972 01fa 0123     		movs	r3, #1
 22973 01fc 0DF10702 		add	r2, sp, #7
 22974              	.LVL2860:
 22975              		.loc 1 10586 32 view .LVU6435
 22976 0200 6821     		movs	r1, #104
 22977 0202 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 641


 22978 0204 A047     		blx	r4
 22979              	.LVL2861:
 22980              		.loc 1 10586 32 view .LVU6436
 22981 0206 0446     		mov	r4, r0
 22982              	.LVL2862:
 22983              		.loc 1 10586 32 view .LVU6437
 22984 0208 07E0     		b	.L1566
 22985              	.LVL2863:
 22986              	.L1579:
10476:Core/Src/bno055.c ****             }
 22987              		.loc 1 10476 17 is_stmt 1 view .LVU6438
10476:Core/Src/bno055.c ****             }
 22988              		.loc 1 10476 28 is_stmt 0 view .LVU6439
 22989 020a FFF7FEFF 		bl	bno055_set_operation_mode
 22990              	.LVL2864:
10476:Core/Src/bno055.c ****             }
 22991              		.loc 1 10476 25 view .LVU6440
 22992 020e 54FA80F4 		uxtab	r4, r4, r0
 22993 0212 64B2     		sxtb	r4, r4
 22994              	.LVL2865:
10476:Core/Src/bno055.c ****             }
 22995              		.loc 1 10476 25 view .LVU6441
 22996 0214 0EE7     		b	.L1567
 22997              	.LVL2866:
 22998              	.L1576:
10587:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_MSB_REG,
10588:Core/Src/bno055.c ****                                                                &data2_u8r,
10589:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10590:Core/Src/bno055.c ****                 }
10591:Core/Src/bno055.c ****             }
10592:Core/Src/bno055.c ****             else
10593:Core/Src/bno055.c ****             {
10594:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10595:Core/Src/bno055.c ****             }
10596:Core/Src/bno055.c ****         }
10597:Core/Src/bno055.c ****         else
10598:Core/Src/bno055.c ****         {
10599:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 22999              		.loc 1 10599 22 view .LVU6442
 23000 0216 4FF0FF34 		mov	r4, #-1
 23001              	.LVL2867:
 23002              	.L1566:
10600:Core/Src/bno055.c ****         }
10601:Core/Src/bno055.c ****     }
10602:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23003              		.loc 1 10602 5 is_stmt 1 view .LVU6443
 23004              		.loc 1 10602 24 is_stmt 0 view .LVU6444
 23005 021a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23006              		.loc 1 10602 8 view .LVU6445
 23007 021e 28B9     		cbnz	r0, .L1580
 23008              	.LVL2868:
 23009              	.L1565:
10603:Core/Src/bno055.c ****     {
10604:Core/Src/bno055.c ****         /* set the operation mode
10605:Core/Src/bno055.c ****          * of previous operation mode*/
10606:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10607:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 642


10608:Core/Src/bno055.c **** 
10609:Core/Src/bno055.c ****     return com_rslt;
10610:Core/Src/bno055.c **** }
 23010              		.loc 1 10610 1 view .LVU6446
 23011 0220 2046     		mov	r0, r4
 23012 0222 02B0     		add	sp, sp, #8
 23013              	.LCFI675:
 23014              		.cfi_remember_state
 23015              		.cfi_def_cfa_offset 16
 23016              		@ sp needed
 23017 0224 70BD     		pop	{r4, r5, r6, pc}
 23018              	.LVL2869:
 23019              	.L1577:
 23020              	.LCFI676:
 23021              		.cfi_restore_state
10594:Core/Src/bno055.c ****             }
 23022              		.loc 1 10594 26 view .LVU6447
 23023 0226 4FF0FF34 		mov	r4, #-1
 23024              	.LVL2870:
10594:Core/Src/bno055.c ****             }
 23025              		.loc 1 10594 26 view .LVU6448
 23026 022a F6E7     		b	.L1566
 23027              	.LVL2871:
 23028              	.L1580:
10606:Core/Src/bno055.c ****     }
 23029              		.loc 1 10606 9 is_stmt 1 view .LVU6449
10606:Core/Src/bno055.c ****     }
 23030              		.loc 1 10606 21 is_stmt 0 view .LVU6450
 23031 022c FFF7FEFF 		bl	bno055_set_operation_mode
 23032              	.LVL2872:
10606:Core/Src/bno055.c ****     }
 23033              		.loc 1 10606 18 view .LVU6451
 23034 0230 54FA80F4 		uxtab	r4, r4, r0
 23035              	.LVL2873:
10606:Core/Src/bno055.c ****     }
 23036              		.loc 1 10606 18 view .LVU6452
 23037 0234 64B2     		sxtb	r4, r4
 23038              	.LVL2874:
10606:Core/Src/bno055.c ****     }
 23039              		.loc 1 10606 18 view .LVU6453
 23040 0236 F3E7     		b	.L1565
 23041              	.LVL2875:
 23042              	.L1575:
10464:Core/Src/bno055.c ****     }
 23043              		.loc 1 10464 16 view .LVU6454
 23044 0238 6FF07E04 		mvn	r4, #126
 23045 023c F0E7     		b	.L1565
 23046              	.L1582:
 23047 023e 00BF     		.align	2
 23048              	.L1581:
 23049 0240 00000000 		.word	.LANCHOR0
 23050              		.cfi_endproc
 23051              	.LFE170:
 23053              		.section	.text.bno055_read_mag_offset,"ax",%progbits
 23054              		.align	1
 23055              		.global	bno055_read_mag_offset
 23056              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 643


 23057              		.thumb
 23058              		.thumb_func
 23060              	bno055_read_mag_offset:
 23061              	.LVL2876:
 23062              	.LFB171:
10611:Core/Src/bno055.c **** 
10612:Core/Src/bno055.c **** /*!
10613:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10614:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10615:Core/Src/bno055.c ****  *
10616:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10617:Core/Src/bno055.c ****  *
10618:Core/Src/bno055.c ****  *      bno055_mag_offset_t   |     result
10619:Core/Src/bno055.c ****  *      ------------------- | ----------------
10620:Core/Src/bno055.c ****  *               x          |  mag offset x
10621:Core/Src/bno055.c ****  *               y          |  mag offset y
10622:Core/Src/bno055.c ****  *               z          |  mag offset z
10623:Core/Src/bno055.c ****  *               r          |  mag radius r
10624:Core/Src/bno055.c ****  *
10625:Core/Src/bno055.c ****  *
10626:Core/Src/bno055.c ****  *  @return results of bus communication function
10627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10629:Core/Src/bno055.c ****  *
10630:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10631:Core/Src/bno055.c ****  */
10632:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_offset(struct bno055_mag_offset_t  *mag_offset)
10633:Core/Src/bno055.c **** {
 23063              		.loc 1 10633 1 is_stmt 1 view -0
 23064              		.cfi_startproc
 23065              		@ args = 0, pretend = 0, frame = 8
 23066              		@ frame_needed = 0, uses_anonymous_args = 0
 23067              		.loc 1 10633 1 is_stmt 0 view .LVU6456
 23068 0000 70B5     		push	{r4, r5, r6, lr}
 23069              	.LCFI677:
 23070              		.cfi_def_cfa_offset 16
 23071              		.cfi_offset 4, -16
 23072              		.cfi_offset 5, -12
 23073              		.cfi_offset 6, -8
 23074              		.cfi_offset 14, -4
 23075 0002 82B0     		sub	sp, sp, #8
 23076              	.LCFI678:
 23077              		.cfi_def_cfa_offset 24
 23078 0004 0446     		mov	r4, r0
10634:Core/Src/bno055.c ****     /* Variable used to return value of
10635:Core/Src/bno055.c ****      * communication routine*/
10636:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23079              		.loc 1 10636 5 is_stmt 1 view .LVU6457
 23080              	.LVL2877:
10637:Core/Src/bno055.c **** 
10638:Core/Src/bno055.c ****     /* Array holding the mag offset values
10639:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10640:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10641:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10642:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10643:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10644:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 644


10645:Core/Src/bno055.c ****      */
10646:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_OFFSET_ARRAY] = {
 23081              		.loc 1 10646 5 view .LVU6458
 23082              		.loc 1 10646 8 is_stmt 0 view .LVU6459
 23083 0006 2C4B     		ldr	r3, .L1593
 23084 0008 93E80300 		ldm	r3, {r0, r1}
 23085              	.LVL2878:
 23086              		.loc 1 10646 8 view .LVU6460
 23087 000c 0090     		str	r0, [sp]
 23088 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10647:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10648:Core/Src/bno055.c ****     };
10649:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23089              		.loc 1 10649 5 is_stmt 1 view .LVU6461
 23090              	.LVL2879:
10650:Core/Src/bno055.c **** 
10651:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10652:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23091              		.loc 1 10652 5 view .LVU6462
 23092              		.loc 1 10652 18 is_stmt 0 view .LVU6463
 23093 0012 2A4B     		ldr	r3, .L1593+4
 23094 0014 1B68     		ldr	r3, [r3]
 23095              		.loc 1 10652 8 view .LVU6464
 23096 0016 002B     		cmp	r3, #0
 23097 0018 42D0     		beq	.L1587
10653:Core/Src/bno055.c ****     {
10654:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10655:Core/Src/bno055.c ****     }
10656:Core/Src/bno055.c ****     else
10657:Core/Src/bno055.c ****     {
10658:Core/Src/bno055.c ****         /*condition check for page, mag offset is
10659:Core/Src/bno055.c ****          * available in the page zero*/
10660:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 23098              		.loc 1 10660 9 is_stmt 1 view .LVU6465
 23099              		.loc 1 10660 21 is_stmt 0 view .LVU6466
 23100 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23101              		.loc 1 10660 12 view .LVU6467
 23102 001c 002B     		cmp	r3, #0
 23103 001e 39D1     		bne	.L1592
 23104              	.LVL2880:
 23105              	.L1585:
10661:Core/Src/bno055.c ****         {
10662:Core/Src/bno055.c ****             /* Write the page zero*/
10663:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10664:Core/Src/bno055.c ****         }
10665:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 23106              		.loc 1 10665 53 discriminator 1 view .LVU6468
 23107 0020 264B     		ldr	r3, .L1593+4
 23108 0022 1B68     		ldr	r3, [r3]
 23109 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23110              		.loc 1 10665 41 discriminator 1 view .LVU6469
 23111 0026 002B     		cmp	r3, #0
 23112 0028 3DD1     		bne	.L1588
 23113              	.L1586:
10666:Core/Src/bno055.c ****         {
10667:Core/Src/bno055.c ****             /* Read mag offset value it the six bytes of data */
10668:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 645


 23114              		.loc 1 10668 13 is_stmt 1 view .LVU6470
 23115              		.loc 1 10668 32 is_stmt 0 view .LVU6471
 23116 002a 244B     		ldr	r3, .L1593+4
 23117 002c 1868     		ldr	r0, [r3]
 23118 002e 0569     		ldr	r5, [r0, #16]
 23119              		.loc 1 10668 24 view .LVU6472
 23120 0030 0623     		movs	r3, #6
 23121 0032 6A46     		mov	r2, sp
 23122 0034 5B21     		movs	r1, #91
 23123 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23124 0038 A847     		blx	r5
 23125              	.LVL2881:
10669:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_X_LSB_REG,
10670:Core/Src/bno055.c ****                                                       data_u8,
10671:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_ARRAY);
10672:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 23126              		.loc 1 10672 13 is_stmt 1 view .LVU6473
 23127              		.loc 1 10672 16 is_stmt 0 view .LVU6474
 23128 003a 0546     		mov	r5, r0
 23129 003c 0028     		cmp	r0, #0
 23130 003e 35D1     		bne	.L1589
10673:Core/Src/bno055.c ****             {
10674:Core/Src/bno055.c ****                 /* Read mag x offset value*/
10675:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23131              		.loc 1 10675 17 is_stmt 1 view .LVU6475
10676:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10677:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23132              		.loc 1 10677 17 view .LVU6476
10678:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10679:Core/Src/bno055.c ****                 mag_offset->x =
 23133              		.loc 1 10679 17 view .LVU6477
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23134              		.loc 1 10680 34 is_stmt 0 view .LVU6478
 23135 0040 9DF90120 		ldrsb	r2, [sp, #1]
10681:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 23136              		.loc 1 10681 35 view .LVU6479
 23137 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23138              		.loc 1 10680 21 view .LVU6480
 23139 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10679:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23140              		.loc 1 10679 31 view .LVU6481
 23141 004c 2380     		strh	r3, [r4]	@ movhi
10682:Core/Src/bno055.c **** 
10683:Core/Src/bno055.c ****                 /* Read mag y offset value*/
10684:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23142              		.loc 1 10684 17 is_stmt 1 view .LVU6482
10685:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10686:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23143              		.loc 1 10686 17 view .LVU6483
10687:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10688:Core/Src/bno055.c ****                 mag_offset->y =
 23144              		.loc 1 10688 17 view .LVU6484
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23145              		.loc 1 10689 34 is_stmt 0 view .LVU6485
 23146 004e 9DF90320 		ldrsb	r2, [sp, #3]
10690:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
ARM GAS  /tmp/cc9kYR4Z.s 			page 646


 23147              		.loc 1 10690 35 view .LVU6486
 23148 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23149              		.loc 1 10689 21 view .LVU6487
 23150 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10688:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23151              		.loc 1 10688 31 view .LVU6488
 23152 005a 6380     		strh	r3, [r4, #2]	@ movhi
10691:Core/Src/bno055.c **** 
10692:Core/Src/bno055.c ****                 /* Read mag z offset value*/
10693:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23153              		.loc 1 10693 17 is_stmt 1 view .LVU6489
10694:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10695:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23154              		.loc 1 10695 17 view .LVU6490
10696:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10697:Core/Src/bno055.c ****                 mag_offset->z =
 23155              		.loc 1 10697 17 view .LVU6491
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23156              		.loc 1 10698 34 is_stmt 0 view .LVU6492
 23157 005c 9DF90520 		ldrsb	r2, [sp, #5]
10699:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 23158              		.loc 1 10699 35 view .LVU6493
 23159 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23160              		.loc 1 10698 21 view .LVU6494
 23161 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10697:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23162              		.loc 1 10697 31 view .LVU6495
 23163 0068 A380     		strh	r3, [r4, #4]	@ movhi
10700:Core/Src/bno055.c **** 
10701:Core/Src/bno055.c ****                 /* Read mag radius value
10702:Core/Src/bno055.c ****                  * it the two bytes of data */
10703:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23164              		.loc 1 10703 17 is_stmt 1 view .LVU6496
 23165              		.loc 1 10703 37 is_stmt 0 view .LVU6497
 23166 006a 144B     		ldr	r3, .L1593+4
 23167 006c 1868     		ldr	r0, [r3]
 23168              	.LVL2882:
 23169              		.loc 1 10703 37 view .LVU6498
 23170 006e 0669     		ldr	r6, [r0, #16]
 23171              		.loc 1 10703 29 view .LVU6499
 23172 0070 0223     		movs	r3, #2
 23173 0072 6A46     		mov	r2, sp
 23174 0074 6921     		movs	r1, #105
 23175 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23176 0078 B047     		blx	r6
 23177              	.LVL2883:
 23178              		.loc 1 10703 26 view .LVU6500
 23179 007a 55FA80F0 		uxtab	r0, r5, r0
 23180 007e 40B2     		sxtb	r0, r0
 23181              	.LVL2884:
10704:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10705:Core/Src/bno055.c ****                                                            data_u8,
10706:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10707:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23182              		.loc 1 10707 17 is_stmt 1 view .LVU6501
ARM GAS  /tmp/cc9kYR4Z.s 			page 647


 23183              		.loc 1 10707 20 is_stmt 0 view .LVU6502
 23184 0080 B8B9     		cbnz	r0, .L1590
10708:Core/Src/bno055.c ****                 {
10709:Core/Src/bno055.c ****                     /* Array holding the mag radius values
10710:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_LSB] -
10711:Core/Src/bno055.c ****                      * radius->LSB
10712:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_MSB] -
10713:Core/Src/bno055.c ****                      * radius->MSB
10714:Core/Src/bno055.c ****                      */
10715:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 23185              		.loc 1 10715 21 is_stmt 1 view .LVU6503
10716:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_LSB);
10717:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 23186              		.loc 1 10717 21 view .LVU6504
10718:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_MSB);
10719:Core/Src/bno055.c ****                     mag_offset->r =
 23187              		.loc 1 10719 21 view .LVU6505
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23188              		.loc 1 10720 38 is_stmt 0 view .LVU6506
 23189 0082 9DF90120 		ldrsb	r2, [sp, #1]
10721:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 23190              		.loc 1 10721 39 view .LVU6507
 23191 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23192              		.loc 1 10720 25 view .LVU6508
 23193 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10719:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23194              		.loc 1 10719 35 view .LVU6509
 23195 008e E380     		strh	r3, [r4, #6]	@ movhi
 23196              	.LVL2885:
 23197              	.L1584:
10722:Core/Src/bno055.c ****                 }
10723:Core/Src/bno055.c ****                 else
10724:Core/Src/bno055.c ****                 {
10725:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10726:Core/Src/bno055.c ****                 }
10727:Core/Src/bno055.c ****             }
10728:Core/Src/bno055.c ****             else
10729:Core/Src/bno055.c ****             {
10730:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10731:Core/Src/bno055.c ****             }
10732:Core/Src/bno055.c ****         }
10733:Core/Src/bno055.c ****         else
10734:Core/Src/bno055.c ****         {
10735:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
10736:Core/Src/bno055.c ****         }
10737:Core/Src/bno055.c ****     }
10738:Core/Src/bno055.c **** 
10739:Core/Src/bno055.c ****     return com_rslt;
10740:Core/Src/bno055.c **** }
 23198              		.loc 1 10740 1 view .LVU6510
 23199 0090 02B0     		add	sp, sp, #8
 23200              	.LCFI679:
 23201              		.cfi_remember_state
 23202              		.cfi_def_cfa_offset 16
 23203              		@ sp needed
 23204 0092 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc9kYR4Z.s 			page 648


 23205              	.LVL2886:
 23206              	.L1592:
 23207              	.LCFI680:
 23208              		.cfi_restore_state
10663:Core/Src/bno055.c ****         }
 23209              		.loc 1 10663 13 is_stmt 1 view .LVU6511
10663:Core/Src/bno055.c ****         }
 23210              		.loc 1 10663 23 is_stmt 0 view .LVU6512
 23211 0094 0020     		movs	r0, #0
 23212 0096 FFF7FEFF 		bl	bno055_write_page_id
 23213              	.LVL2887:
10665:Core/Src/bno055.c ****         {
 23214              		.loc 1 10665 9 is_stmt 1 view .LVU6513
10665:Core/Src/bno055.c ****         {
 23215              		.loc 1 10665 12 is_stmt 0 view .LVU6514
 23216 009a 0028     		cmp	r0, #0
 23217 009c C5D0     		beq	.L1586
 23218 009e BFE7     		b	.L1585
 23219              	.LVL2888:
 23220              	.L1587:
10654:Core/Src/bno055.c ****     }
 23221              		.loc 1 10654 16 view .LVU6515
 23222 00a0 6FF07E00 		mvn	r0, #126
 23223 00a4 F4E7     		b	.L1584
 23224              	.LVL2889:
 23225              	.L1588:
10735:Core/Src/bno055.c ****         }
 23226              		.loc 1 10735 22 view .LVU6516
 23227 00a6 4FF0FF30 		mov	r0, #-1
 23228 00aa F1E7     		b	.L1584
 23229              	.LVL2890:
 23230              	.L1589:
10730:Core/Src/bno055.c ****             }
 23231              		.loc 1 10730 26 view .LVU6517
 23232 00ac 4FF0FF30 		mov	r0, #-1
 23233              	.LVL2891:
10730:Core/Src/bno055.c ****             }
 23234              		.loc 1 10730 26 view .LVU6518
 23235 00b0 EEE7     		b	.L1584
 23236              	.LVL2892:
 23237              	.L1590:
10725:Core/Src/bno055.c ****                 }
 23238              		.loc 1 10725 30 view .LVU6519
 23239 00b2 4FF0FF30 		mov	r0, #-1
 23240              	.LVL2893:
10725:Core/Src/bno055.c ****                 }
 23241              		.loc 1 10725 30 view .LVU6520
 23242 00b6 EBE7     		b	.L1584
 23243              	.L1594:
 23244              		.align	2
 23245              	.L1593:
 23246 00b8 00000000 		.word	.LANCHOR1
 23247 00bc 00000000 		.word	.LANCHOR0
 23248              		.cfi_endproc
 23249              	.LFE171:
 23251              		.section	.text.bno055_write_mag_offset,"ax",%progbits
 23252              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 649


 23253              		.global	bno055_write_mag_offset
 23254              		.syntax unified
 23255              		.thumb
 23256              		.thumb_func
 23258              	bno055_write_mag_offset:
 23259              	.LVL2894:
 23260              	.LFB172:
10741:Core/Src/bno055.c **** 
10742:Core/Src/bno055.c **** /*!
10743:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10744:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10745:Core/Src/bno055.c ****  *
10746:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10747:Core/Src/bno055.c ****  *
10748:Core/Src/bno055.c ****  *      bno055_mag_offset_t |     result
10749:Core/Src/bno055.c ****  *      ------------------- | ----------------
10750:Core/Src/bno055.c ****  *               x          |  mag offset x
10751:Core/Src/bno055.c ****  *               y          |  mag offset y
10752:Core/Src/bno055.c ****  *               z          |  mag offset z
10753:Core/Src/bno055.c ****  *               r          |  mag radius r
10754:Core/Src/bno055.c ****  *
10755:Core/Src/bno055.c ****  *
10756:Core/Src/bno055.c ****  *  @return results of bus communication function
10757:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10758:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10759:Core/Src/bno055.c ****  *
10760:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10761:Core/Src/bno055.c ****  */
10762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_mag_offset(struct bno055_mag_offset_t *mag_offset)
10763:Core/Src/bno055.c **** {
 23261              		.loc 1 10763 1 is_stmt 1 view -0
 23262              		.cfi_startproc
 23263              		@ args = 0, pretend = 0, frame = 8
 23264              		@ frame_needed = 0, uses_anonymous_args = 0
 23265              		.loc 1 10763 1 is_stmt 0 view .LVU6522
 23266 0000 70B5     		push	{r4, r5, r6, lr}
 23267              	.LCFI681:
 23268              		.cfi_def_cfa_offset 16
 23269              		.cfi_offset 4, -16
 23270              		.cfi_offset 5, -12
 23271              		.cfi_offset 6, -8
 23272              		.cfi_offset 14, -4
 23273 0002 82B0     		sub	sp, sp, #8
 23274              	.LCFI682:
 23275              		.cfi_def_cfa_offset 24
10764:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23276              		.loc 1 10764 5 is_stmt 1 view .LVU6523
 23277              	.LVL2895:
10765:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 23278              		.loc 1 10765 5 view .LVU6524
10766:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 23279              		.loc 1 10766 5 view .LVU6525
 23280              		.loc 1 10766 8 is_stmt 0 view .LVU6526
 23281 0004 0023     		movs	r3, #0
 23282 0006 8DF80730 		strb	r3, [sp, #7]
10767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 23283              		.loc 1 10767 5 is_stmt 1 view .LVU6527
ARM GAS  /tmp/cc9kYR4Z.s 			page 650


 23284              		.loc 1 10767 8 is_stmt 0 view .LVU6528
 23285 000a 8DF80630 		strb	r3, [sp, #6]
10768:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23286              		.loc 1 10768 5 is_stmt 1 view .LVU6529
 23287              	.LVL2896:
10769:Core/Src/bno055.c **** 
10770:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10771:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23288              		.loc 1 10771 5 view .LVU6530
 23289              		.loc 1 10771 18 is_stmt 0 view .LVU6531
 23290 000e 8F4B     		ldr	r3, .L1612
 23291 0010 1B68     		ldr	r3, [r3]
 23292              		.loc 1 10771 8 view .LVU6532
 23293 0012 002B     		cmp	r3, #0
 23294 0014 00F01681 		beq	.L1606
 23295 0018 0546     		mov	r5, r0
10772:Core/Src/bno055.c ****     {
10773:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10774:Core/Src/bno055.c ****     }
10775:Core/Src/bno055.c ****     else
10776:Core/Src/bno055.c ****     {
10777:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10778:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10779:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10780:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 23296              		.loc 1 10780 9 is_stmt 1 view .LVU6533
 23297              		.loc 1 10780 19 is_stmt 0 view .LVU6534
 23298 001a 0DF10600 		add	r0, sp, #6
 23299              	.LVL2897:
 23300              		.loc 1 10780 19 view .LVU6535
 23301 001e FFF7FEFF 		bl	bno055_get_operation_mode
 23302              	.LVL2898:
10781:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 23303              		.loc 1 10781 9 is_stmt 1 view .LVU6536
 23304              		.loc 1 10781 12 is_stmt 0 view .LVU6537
 23305 0022 0446     		mov	r4, r0
 23306 0024 0028     		cmp	r0, #0
 23307 0026 40F0FC80 		bne	.L1607
10782:Core/Src/bno055.c ****         {
10783:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23308              		.loc 1 10783 13 is_stmt 1 view .LVU6538
 23309              		.loc 1 10783 32 is_stmt 0 view .LVU6539
 23310 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 23311              		.loc 1 10783 16 view .LVU6540
 23312 002e 002B     		cmp	r3, #0
 23313 0030 40F0F180 		bne	.L1610
 23314              	.LVL2899:
 23315              	.L1598:
10784:Core/Src/bno055.c ****             {
10785:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10786:Core/Src/bno055.c ****             }
10787:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 23316              		.loc 1 10787 13 is_stmt 1 view .LVU6541
 23317              		.loc 1 10787 16 is_stmt 0 view .LVU6542
 23318 0034 002C     		cmp	r4, #0
 23319 0036 40F0FC80 		bne	.L1608
10788:Core/Src/bno055.c ****             {
ARM GAS  /tmp/cc9kYR4Z.s 			page 651


10789:Core/Src/bno055.c ****                 /* write Mag offset x value*/
10790:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23320              		.loc 1 10790 17 is_stmt 1 view .LVU6543
 23321              		.loc 1 10790 36 is_stmt 0 view .LVU6544
 23322 003a 844B     		ldr	r3, .L1612
 23323 003c 1868     		ldr	r0, [r3]
 23324 003e 0469     		ldr	r4, [r0, #16]
 23325              	.LVL2900:
 23326              		.loc 1 10790 28 view .LVU6545
 23327 0040 0123     		movs	r3, #1
 23328 0042 0DF10702 		add	r2, sp, #7
 23329 0046 5B21     		movs	r1, #91
 23330 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23331 004a A047     		blx	r4
 23332              	.LVL2901:
10791:Core/Src/bno055.c ****                                                           BNO055_MAG_OFFSET_X_LSB_REG,
10792:Core/Src/bno055.c ****                                                           &data2_u8r,
10793:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10794:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23333              		.loc 1 10794 17 is_stmt 1 view .LVU6546
 23334              		.loc 1 10794 20 is_stmt 0 view .LVU6547
 23335 004c 0446     		mov	r4, r0
 23336 004e 78B9     		cbnz	r0, .L1599
10795:Core/Src/bno055.c ****                 {
10796:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 23337              		.loc 1 10796 21 is_stmt 1 view .LVU6548
 23338              		.loc 1 10796 49 is_stmt 0 view .LVU6549
 23339 0050 B5F90030 		ldrsh	r3, [r5]
 23340              	.LVL2902:
10797:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_LSB, data1_u8r);
 23341              		.loc 1 10797 21 is_stmt 1 view .LVU6550
 23342              		.loc 1 10797 31 is_stmt 0 view .LVU6551
 23343 0054 8DF80730 		strb	r3, [sp, #7]
10798:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23344              		.loc 1 10798 21 is_stmt 1 view .LVU6552
 23345              		.loc 1 10798 41 is_stmt 0 view .LVU6553
 23346 0058 7C4B     		ldr	r3, .L1612
 23347              	.LVL2903:
 23348              		.loc 1 10798 41 view .LVU6554
 23349 005a 1868     		ldr	r0, [r3]
 23350              	.LVL2904:
 23351              		.loc 1 10798 41 view .LVU6555
 23352 005c C668     		ldr	r6, [r0, #12]
 23353              		.loc 1 10798 33 view .LVU6556
 23354 005e 0123     		movs	r3, #1
 23355 0060 0DF10702 		add	r2, sp, #7
 23356              	.LVL2905:
 23357              		.loc 1 10798 33 view .LVU6557
 23358 0064 5B21     		movs	r1, #91
 23359 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23360 0068 B047     		blx	r6
 23361              	.LVL2906:
 23362              		.loc 1 10798 30 view .LVU6558
 23363 006a 54FA80F0 		uxtab	r0, r4, r0
 23364 006e 44B2     		sxtb	r4, r0
 23365              	.LVL2907:
 23366              	.L1599:
ARM GAS  /tmp/cc9kYR4Z.s 			page 652


10799:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_LSB_REG,
10800:Core/Src/bno055.c ****                                                                 &data2_u8r,
10801:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10802:Core/Src/bno055.c ****                 }
10803:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23367              		.loc 1 10803 17 is_stmt 1 view .LVU6559
 23368              		.loc 1 10803 37 is_stmt 0 view .LVU6560
 23369 0070 764B     		ldr	r3, .L1612
 23370 0072 1868     		ldr	r0, [r3]
 23371 0074 0669     		ldr	r6, [r0, #16]
 23372              		.loc 1 10803 29 view .LVU6561
 23373 0076 0123     		movs	r3, #1
 23374 0078 0DF10702 		add	r2, sp, #7
 23375 007c 5C21     		movs	r1, #92
 23376 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23377 0080 B047     		blx	r6
 23378              	.LVL2908:
 23379              		.loc 1 10803 26 view .LVU6562
 23380 0082 54FA80F4 		uxtab	r4, r4, r0
 23381              	.LVL2909:
 23382              		.loc 1 10803 26 view .LVU6563
 23383 0086 E6B2     		uxtb	r6, r4
 23384 0088 64B2     		sxtb	r4, r4
 23385              	.LVL2910:
10804:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_X_MSB_REG,
10805:Core/Src/bno055.c ****                                                            &data2_u8r,
10806:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10807:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23386              		.loc 1 10807 17 is_stmt 1 view .LVU6564
 23387              		.loc 1 10807 20 is_stmt 0 view .LVU6565
 23388 008a 7CB9     		cbnz	r4, .L1600
10808:Core/Src/bno055.c ****                 {
10809:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23389              		.loc 1 10809 21 is_stmt 1 view .LVU6566
 23390              		.loc 1 10809 34 is_stmt 0 view .LVU6567
 23391 008c 95F90130 		ldrsb	r3, [r5, #1]
 23392              	.LVL2911:
10810:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_MSB, data1_u8r);
 23393              		.loc 1 10810 21 is_stmt 1 view .LVU6568
 23394              		.loc 1 10810 31 is_stmt 0 view .LVU6569
 23395 0090 8DF80730 		strb	r3, [sp, #7]
10811:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23396              		.loc 1 10811 21 is_stmt 1 view .LVU6570
 23397              		.loc 1 10811 41 is_stmt 0 view .LVU6571
 23398 0094 6D4B     		ldr	r3, .L1612
 23399              	.LVL2912:
 23400              		.loc 1 10811 41 view .LVU6572
 23401 0096 1868     		ldr	r0, [r3]
 23402 0098 C468     		ldr	r4, [r0, #12]
 23403              	.LVL2913:
 23404              		.loc 1 10811 33 view .LVU6573
 23405 009a 0123     		movs	r3, #1
 23406 009c 0DF10702 		add	r2, sp, #7
 23407              	.LVL2914:
 23408              		.loc 1 10811 33 view .LVU6574
 23409 00a0 5C21     		movs	r1, #92
 23410 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 653


 23411 00a4 A047     		blx	r4
 23412              	.LVL2915:
 23413              		.loc 1 10811 30 view .LVU6575
 23414 00a6 56FA80F4 		uxtab	r4, r6, r0
 23415 00aa 64B2     		sxtb	r4, r4
 23416              	.LVL2916:
 23417              	.L1600:
10812:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_MSB_REG,
10813:Core/Src/bno055.c ****                                                                 &data2_u8r,
10814:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10815:Core/Src/bno055.c ****                 }
10816:Core/Src/bno055.c **** 
10817:Core/Src/bno055.c ****                 /* write Mag offset y value*/
10818:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23418              		.loc 1 10818 17 is_stmt 1 view .LVU6576
 23419              		.loc 1 10818 37 is_stmt 0 view .LVU6577
 23420 00ac 674B     		ldr	r3, .L1612
 23421 00ae 1868     		ldr	r0, [r3]
 23422 00b0 0669     		ldr	r6, [r0, #16]
 23423              		.loc 1 10818 29 view .LVU6578
 23424 00b2 0123     		movs	r3, #1
 23425 00b4 0DF10702 		add	r2, sp, #7
 23426 00b8 5D21     		movs	r1, #93
 23427 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23428 00bc B047     		blx	r6
 23429              	.LVL2917:
 23430              		.loc 1 10818 26 view .LVU6579
 23431 00be 54FA80F4 		uxtab	r4, r4, r0
 23432              	.LVL2918:
 23433              		.loc 1 10818 26 view .LVU6580
 23434 00c2 E6B2     		uxtb	r6, r4
 23435 00c4 64B2     		sxtb	r4, r4
 23436              	.LVL2919:
10819:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_LSB_REG,
10820:Core/Src/bno055.c ****                                                            &data2_u8r,
10821:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10822:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23437              		.loc 1 10822 17 is_stmt 1 view .LVU6581
 23438              		.loc 1 10822 20 is_stmt 0 view .LVU6582
 23439 00c6 7CB9     		cbnz	r4, .L1601
10823:Core/Src/bno055.c ****                 {
10824:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 23440              		.loc 1 10824 21 is_stmt 1 view .LVU6583
 23441              		.loc 1 10824 49 is_stmt 0 view .LVU6584
 23442 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 23443              	.LVL2920:
10825:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_LSB, data1_u8r);
 23444              		.loc 1 10825 21 is_stmt 1 view .LVU6585
 23445              		.loc 1 10825 31 is_stmt 0 view .LVU6586
 23446 00cc 8DF80730 		strb	r3, [sp, #7]
10826:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23447              		.loc 1 10826 21 is_stmt 1 view .LVU6587
 23448              		.loc 1 10826 41 is_stmt 0 view .LVU6588
 23449 00d0 5E4B     		ldr	r3, .L1612
 23450              	.LVL2921:
 23451              		.loc 1 10826 41 view .LVU6589
 23452 00d2 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 654


 23453 00d4 C468     		ldr	r4, [r0, #12]
 23454              	.LVL2922:
 23455              		.loc 1 10826 33 view .LVU6590
 23456 00d6 0123     		movs	r3, #1
 23457 00d8 0DF10702 		add	r2, sp, #7
 23458              	.LVL2923:
 23459              		.loc 1 10826 33 view .LVU6591
 23460 00dc 5D21     		movs	r1, #93
 23461 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23462 00e0 A047     		blx	r4
 23463              	.LVL2924:
 23464              		.loc 1 10826 30 view .LVU6592
 23465 00e2 56FA80F4 		uxtab	r4, r6, r0
 23466 00e6 64B2     		sxtb	r4, r4
 23467              	.LVL2925:
 23468              	.L1601:
10827:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_LSB_REG,
10828:Core/Src/bno055.c ****                                                                 &data2_u8r,
10829:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10830:Core/Src/bno055.c ****                 }
10831:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23469              		.loc 1 10831 17 is_stmt 1 view .LVU6593
 23470              		.loc 1 10831 37 is_stmt 0 view .LVU6594
 23471 00e8 584B     		ldr	r3, .L1612
 23472 00ea 1868     		ldr	r0, [r3]
 23473 00ec 0669     		ldr	r6, [r0, #16]
 23474              		.loc 1 10831 29 view .LVU6595
 23475 00ee 0123     		movs	r3, #1
 23476 00f0 0DF10702 		add	r2, sp, #7
 23477 00f4 5E21     		movs	r1, #94
 23478 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23479 00f8 B047     		blx	r6
 23480              	.LVL2926:
 23481              		.loc 1 10831 26 view .LVU6596
 23482 00fa 54FA80F4 		uxtab	r4, r4, r0
 23483              	.LVL2927:
 23484              		.loc 1 10831 26 view .LVU6597
 23485 00fe E6B2     		uxtb	r6, r4
 23486 0100 64B2     		sxtb	r4, r4
 23487              	.LVL2928:
10832:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_MSB_REG,
10833:Core/Src/bno055.c ****                                                            &data2_u8r,
10834:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10835:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23488              		.loc 1 10835 17 is_stmt 1 view .LVU6598
 23489              		.loc 1 10835 20 is_stmt 0 view .LVU6599
 23490 0102 7CB9     		cbnz	r4, .L1602
10836:Core/Src/bno055.c ****                 {
10837:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23491              		.loc 1 10837 21 is_stmt 1 view .LVU6600
 23492              		.loc 1 10837 34 is_stmt 0 view .LVU6601
 23493 0104 95F90330 		ldrsb	r3, [r5, #3]
 23494              	.LVL2929:
10838:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_MSB, data1_u8r);
 23495              		.loc 1 10838 21 is_stmt 1 view .LVU6602
 23496              		.loc 1 10838 31 is_stmt 0 view .LVU6603
 23497 0108 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/cc9kYR4Z.s 			page 655


10839:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23498              		.loc 1 10839 21 is_stmt 1 view .LVU6604
 23499              		.loc 1 10839 41 is_stmt 0 view .LVU6605
 23500 010c 4F4B     		ldr	r3, .L1612
 23501              	.LVL2930:
 23502              		.loc 1 10839 41 view .LVU6606
 23503 010e 1868     		ldr	r0, [r3]
 23504 0110 C468     		ldr	r4, [r0, #12]
 23505              	.LVL2931:
 23506              		.loc 1 10839 33 view .LVU6607
 23507 0112 0123     		movs	r3, #1
 23508 0114 0DF10702 		add	r2, sp, #7
 23509              	.LVL2932:
 23510              		.loc 1 10839 33 view .LVU6608
 23511 0118 5E21     		movs	r1, #94
 23512 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23513 011c A047     		blx	r4
 23514              	.LVL2933:
 23515              		.loc 1 10839 30 view .LVU6609
 23516 011e 56FA80F4 		uxtab	r4, r6, r0
 23517 0122 64B2     		sxtb	r4, r4
 23518              	.LVL2934:
 23519              	.L1602:
10840:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_MSB_REG,
10841:Core/Src/bno055.c ****                                                                 &data2_u8r,
10842:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10843:Core/Src/bno055.c ****                 }
10844:Core/Src/bno055.c **** 
10845:Core/Src/bno055.c ****                 /* write Mag offset z value*/
10846:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23520              		.loc 1 10846 17 is_stmt 1 view .LVU6610
 23521              		.loc 1 10846 37 is_stmt 0 view .LVU6611
 23522 0124 494B     		ldr	r3, .L1612
 23523 0126 1868     		ldr	r0, [r3]
 23524 0128 0669     		ldr	r6, [r0, #16]
 23525              		.loc 1 10846 29 view .LVU6612
 23526 012a 0123     		movs	r3, #1
 23527 012c 0DF10702 		add	r2, sp, #7
 23528 0130 5F21     		movs	r1, #95
 23529 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23530 0134 B047     		blx	r6
 23531              	.LVL2935:
 23532              		.loc 1 10846 26 view .LVU6613
 23533 0136 54FA80F4 		uxtab	r4, r4, r0
 23534              	.LVL2936:
 23535              		.loc 1 10846 26 view .LVU6614
 23536 013a E6B2     		uxtb	r6, r4
 23537 013c 64B2     		sxtb	r4, r4
 23538              	.LVL2937:
10847:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_LSB_REG,
10848:Core/Src/bno055.c ****                                                            &data2_u8r,
10849:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10850:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23539              		.loc 1 10850 17 is_stmt 1 view .LVU6615
 23540              		.loc 1 10850 20 is_stmt 0 view .LVU6616
 23541 013e 7CB9     		cbnz	r4, .L1603
10851:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/cc9kYR4Z.s 			page 656


10852:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 23542              		.loc 1 10852 21 is_stmt 1 view .LVU6617
 23543              		.loc 1 10852 49 is_stmt 0 view .LVU6618
 23544 0140 B5F90430 		ldrsh	r3, [r5, #4]
 23545              	.LVL2938:
10853:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_LSB, data1_u8r);
 23546              		.loc 1 10853 21 is_stmt 1 view .LVU6619
 23547              		.loc 1 10853 31 is_stmt 0 view .LVU6620
 23548 0144 8DF80730 		strb	r3, [sp, #7]
10854:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23549              		.loc 1 10854 21 is_stmt 1 view .LVU6621
 23550              		.loc 1 10854 41 is_stmt 0 view .LVU6622
 23551 0148 404B     		ldr	r3, .L1612
 23552              	.LVL2939:
 23553              		.loc 1 10854 41 view .LVU6623
 23554 014a 1868     		ldr	r0, [r3]
 23555 014c C468     		ldr	r4, [r0, #12]
 23556              	.LVL2940:
 23557              		.loc 1 10854 33 view .LVU6624
 23558 014e 0123     		movs	r3, #1
 23559 0150 0DF10702 		add	r2, sp, #7
 23560              	.LVL2941:
 23561              		.loc 1 10854 33 view .LVU6625
 23562 0154 5F21     		movs	r1, #95
 23563 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23564 0158 A047     		blx	r4
 23565              	.LVL2942:
 23566              		.loc 1 10854 30 view .LVU6626
 23567 015a 56FA80F4 		uxtab	r4, r6, r0
 23568 015e 64B2     		sxtb	r4, r4
 23569              	.LVL2943:
 23570              	.L1603:
10855:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_LSB_REG,
10856:Core/Src/bno055.c ****                                                                 &data2_u8r,
10857:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10858:Core/Src/bno055.c ****                 }
10859:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23571              		.loc 1 10859 17 is_stmt 1 view .LVU6627
 23572              		.loc 1 10859 37 is_stmt 0 view .LVU6628
 23573 0160 3A4B     		ldr	r3, .L1612
 23574 0162 1868     		ldr	r0, [r3]
 23575 0164 0669     		ldr	r6, [r0, #16]
 23576              		.loc 1 10859 29 view .LVU6629
 23577 0166 0123     		movs	r3, #1
 23578 0168 0DF10702 		add	r2, sp, #7
 23579 016c 6021     		movs	r1, #96
 23580 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23581 0170 B047     		blx	r6
 23582              	.LVL2944:
 23583              		.loc 1 10859 26 view .LVU6630
 23584 0172 54FA80F4 		uxtab	r4, r4, r0
 23585              	.LVL2945:
 23586              		.loc 1 10859 26 view .LVU6631
 23587 0176 E6B2     		uxtb	r6, r4
 23588 0178 64B2     		sxtb	r4, r4
 23589              	.LVL2946:
10860:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_MSB_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 657


10861:Core/Src/bno055.c ****                                                            &data2_u8r,
10862:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10863:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23590              		.loc 1 10863 17 is_stmt 1 view .LVU6632
 23591              		.loc 1 10863 20 is_stmt 0 view .LVU6633
 23592 017a 7CB9     		cbnz	r4, .L1604
10864:Core/Src/bno055.c ****                 {
10865:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23593              		.loc 1 10865 21 is_stmt 1 view .LVU6634
 23594              		.loc 1 10865 34 is_stmt 0 view .LVU6635
 23595 017c 95F90530 		ldrsb	r3, [r5, #5]
 23596              	.LVL2947:
10866:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_MSB, data1_u8r);
 23597              		.loc 1 10866 21 is_stmt 1 view .LVU6636
 23598              		.loc 1 10866 31 is_stmt 0 view .LVU6637
 23599 0180 8DF80730 		strb	r3, [sp, #7]
10867:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23600              		.loc 1 10867 21 is_stmt 1 view .LVU6638
 23601              		.loc 1 10867 41 is_stmt 0 view .LVU6639
 23602 0184 314B     		ldr	r3, .L1612
 23603              	.LVL2948:
 23604              		.loc 1 10867 41 view .LVU6640
 23605 0186 1868     		ldr	r0, [r3]
 23606 0188 C468     		ldr	r4, [r0, #12]
 23607              	.LVL2949:
 23608              		.loc 1 10867 33 view .LVU6641
 23609 018a 0123     		movs	r3, #1
 23610 018c 0DF10702 		add	r2, sp, #7
 23611              	.LVL2950:
 23612              		.loc 1 10867 33 view .LVU6642
 23613 0190 6021     		movs	r1, #96
 23614 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23615 0194 A047     		blx	r4
 23616              	.LVL2951:
 23617              		.loc 1 10867 30 view .LVU6643
 23618 0196 56FA80F4 		uxtab	r4, r6, r0
 23619 019a 64B2     		sxtb	r4, r4
 23620              	.LVL2952:
 23621              	.L1604:
10868:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_MSB_REG,
10869:Core/Src/bno055.c ****                                                                 &data2_u8r,
10870:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10871:Core/Src/bno055.c ****                 }
10872:Core/Src/bno055.c **** 
10873:Core/Src/bno055.c ****                 /* write Mag radius value*/
10874:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23622              		.loc 1 10874 17 is_stmt 1 view .LVU6644
 23623              		.loc 1 10874 37 is_stmt 0 view .LVU6645
 23624 019c 2B4B     		ldr	r3, .L1612
 23625 019e 1868     		ldr	r0, [r3]
 23626 01a0 0669     		ldr	r6, [r0, #16]
 23627              		.loc 1 10874 29 view .LVU6646
 23628 01a2 0123     		movs	r3, #1
 23629 01a4 0DF10702 		add	r2, sp, #7
 23630 01a8 6921     		movs	r1, #105
 23631 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23632 01ac B047     		blx	r6
ARM GAS  /tmp/cc9kYR4Z.s 			page 658


 23633              	.LVL2953:
 23634              		.loc 1 10874 26 view .LVU6647
 23635 01ae 54FA80F4 		uxtab	r4, r4, r0
 23636              	.LVL2954:
 23637              		.loc 1 10874 26 view .LVU6648
 23638 01b2 E6B2     		uxtb	r6, r4
 23639 01b4 64B2     		sxtb	r4, r4
 23640              	.LVL2955:
10875:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10876:Core/Src/bno055.c ****                                                            &data2_u8r,
10877:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10878:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23641              		.loc 1 10878 17 is_stmt 1 view .LVU6649
 23642              		.loc 1 10878 20 is_stmt 0 view .LVU6650
 23643 01b6 7CB9     		cbnz	r4, .L1605
10879:Core/Src/bno055.c ****                 {
10880:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 23644              		.loc 1 10880 21 is_stmt 1 view .LVU6651
 23645              		.loc 1 10880 49 is_stmt 0 view .LVU6652
 23646 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 23647              	.LVL2956:
10881:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_LSB, data1_u8r);
 23648              		.loc 1 10881 21 is_stmt 1 view .LVU6653
 23649              		.loc 1 10881 31 is_stmt 0 view .LVU6654
 23650 01bc 8DF80730 		strb	r3, [sp, #7]
10882:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23651              		.loc 1 10882 21 is_stmt 1 view .LVU6655
 23652              		.loc 1 10882 41 is_stmt 0 view .LVU6656
 23653 01c0 224B     		ldr	r3, .L1612
 23654              	.LVL2957:
 23655              		.loc 1 10882 41 view .LVU6657
 23656 01c2 1868     		ldr	r0, [r3]
 23657 01c4 C468     		ldr	r4, [r0, #12]
 23658              	.LVL2958:
 23659              		.loc 1 10882 33 view .LVU6658
 23660 01c6 0123     		movs	r3, #1
 23661 01c8 0DF10702 		add	r2, sp, #7
 23662              	.LVL2959:
 23663              		.loc 1 10882 33 view .LVU6659
 23664 01cc 6921     		movs	r1, #105
 23665 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23666 01d0 A047     		blx	r4
 23667              	.LVL2960:
 23668              		.loc 1 10882 30 view .LVU6660
 23669 01d2 56FA80F4 		uxtab	r4, r6, r0
 23670 01d6 64B2     		sxtb	r4, r4
 23671              	.LVL2961:
 23672              	.L1605:
10883:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_LSB_REG,
10884:Core/Src/bno055.c ****                                                                 &data2_u8r,
10885:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10886:Core/Src/bno055.c ****                 }
10887:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23673              		.loc 1 10887 17 is_stmt 1 view .LVU6661
 23674              		.loc 1 10887 37 is_stmt 0 view .LVU6662
 23675 01d8 1C4B     		ldr	r3, .L1612
 23676 01da 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 659


 23677 01dc 0669     		ldr	r6, [r0, #16]
 23678              		.loc 1 10887 29 view .LVU6663
 23679 01de 0123     		movs	r3, #1
 23680 01e0 0DF10702 		add	r2, sp, #7
 23681 01e4 6A21     		movs	r1, #106
 23682 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23683 01e8 B047     		blx	r6
 23684              	.LVL2962:
 23685              		.loc 1 10887 26 view .LVU6664
 23686 01ea 54FA80F4 		uxtab	r4, r4, r0
 23687              	.LVL2963:
 23688              		.loc 1 10887 26 view .LVU6665
 23689 01ee E6B2     		uxtb	r6, r4
 23690 01f0 64B2     		sxtb	r4, r4
 23691              	.LVL2964:
10888:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_MSB_REG,
10889:Core/Src/bno055.c ****                                                            &data2_u8r,
10890:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10891:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23692              		.loc 1 10891 17 is_stmt 1 view .LVU6666
 23693              		.loc 1 10891 20 is_stmt 0 view .LVU6667
 23694 01f2 C4B9     		cbnz	r4, .L1597
10892:Core/Src/bno055.c ****                 {
10893:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23695              		.loc 1 10893 21 is_stmt 1 view .LVU6668
 23696              		.loc 1 10893 34 is_stmt 0 view .LVU6669
 23697 01f4 95F90730 		ldrsb	r3, [r5, #7]
 23698              	.LVL2965:
10894:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_MSB, data1_u8r);
 23699              		.loc 1 10894 21 is_stmt 1 view .LVU6670
 23700              		.loc 1 10894 31 is_stmt 0 view .LVU6671
 23701 01f8 8DF80730 		strb	r3, [sp, #7]
10895:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23702              		.loc 1 10895 21 is_stmt 1 view .LVU6672
 23703              		.loc 1 10895 41 is_stmt 0 view .LVU6673
 23704 01fc 134B     		ldr	r3, .L1612
 23705              	.LVL2966:
 23706              		.loc 1 10895 41 view .LVU6674
 23707 01fe 1868     		ldr	r0, [r3]
 23708 0200 C468     		ldr	r4, [r0, #12]
 23709              	.LVL2967:
 23710              		.loc 1 10895 33 view .LVU6675
 23711 0202 0123     		movs	r3, #1
 23712 0204 0DF10702 		add	r2, sp, #7
 23713              	.LVL2968:
 23714              		.loc 1 10895 33 view .LVU6676
 23715 0208 6A21     		movs	r1, #106
 23716 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23717 020c A047     		blx	r4
 23718              	.LVL2969:
 23719              		.loc 1 10895 30 view .LVU6677
 23720 020e 56FA80F4 		uxtab	r4, r6, r0
 23721 0212 64B2     		sxtb	r4, r4
 23722              	.LVL2970:
 23723              		.loc 1 10895 30 view .LVU6678
 23724 0214 07E0     		b	.L1597
 23725              	.LVL2971:
ARM GAS  /tmp/cc9kYR4Z.s 			page 660


 23726              	.L1610:
10785:Core/Src/bno055.c ****             }
 23727              		.loc 1 10785 17 is_stmt 1 view .LVU6679
10785:Core/Src/bno055.c ****             }
 23728              		.loc 1 10785 28 is_stmt 0 view .LVU6680
 23729 0216 FFF7FEFF 		bl	bno055_set_operation_mode
 23730              	.LVL2972:
10785:Core/Src/bno055.c ****             }
 23731              		.loc 1 10785 25 view .LVU6681
 23732 021a 54FA80F4 		uxtab	r4, r4, r0
 23733 021e 64B2     		sxtb	r4, r4
 23734              	.LVL2973:
10785:Core/Src/bno055.c ****             }
 23735              		.loc 1 10785 25 view .LVU6682
 23736 0220 08E7     		b	.L1598
 23737              	.LVL2974:
 23738              	.L1607:
10896:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_MSB_REG,
10897:Core/Src/bno055.c ****                                                                 &data2_u8r,
10898:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10899:Core/Src/bno055.c ****                 }
10900:Core/Src/bno055.c ****             }
10901:Core/Src/bno055.c ****             else
10902:Core/Src/bno055.c ****             {
10903:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10904:Core/Src/bno055.c ****             }
10905:Core/Src/bno055.c ****         }
10906:Core/Src/bno055.c ****         else
10907:Core/Src/bno055.c ****         {
10908:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23739              		.loc 1 10908 22 view .LVU6683
 23740 0222 4FF0FF34 		mov	r4, #-1
 23741              	.LVL2975:
 23742              	.L1597:
10909:Core/Src/bno055.c ****         }
10910:Core/Src/bno055.c ****     }
10911:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23743              		.loc 1 10911 5 is_stmt 1 view .LVU6684
 23744              		.loc 1 10911 24 is_stmt 0 view .LVU6685
 23745 0226 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23746              		.loc 1 10911 8 view .LVU6686
 23747 022a 28B9     		cbnz	r0, .L1611
 23748              	.LVL2976:
 23749              	.L1596:
10912:Core/Src/bno055.c ****     {
10913:Core/Src/bno055.c ****         /* set the operation mode
10914:Core/Src/bno055.c ****          * of previous operation mode*/
10915:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10916:Core/Src/bno055.c ****     }
10917:Core/Src/bno055.c **** 
10918:Core/Src/bno055.c ****     return com_rslt;
10919:Core/Src/bno055.c **** }
 23750              		.loc 1 10919 1 view .LVU6687
 23751 022c 2046     		mov	r0, r4
 23752 022e 02B0     		add	sp, sp, #8
 23753              	.LCFI683:
 23754              		.cfi_remember_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 661


 23755              		.cfi_def_cfa_offset 16
 23756              		@ sp needed
 23757 0230 70BD     		pop	{r4, r5, r6, pc}
 23758              	.LVL2977:
 23759              	.L1608:
 23760              	.LCFI684:
 23761              		.cfi_restore_state
10903:Core/Src/bno055.c ****             }
 23762              		.loc 1 10903 26 view .LVU6688
 23763 0232 4FF0FF34 		mov	r4, #-1
 23764              	.LVL2978:
10903:Core/Src/bno055.c ****             }
 23765              		.loc 1 10903 26 view .LVU6689
 23766 0236 F6E7     		b	.L1597
 23767              	.LVL2979:
 23768              	.L1611:
10915:Core/Src/bno055.c ****     }
 23769              		.loc 1 10915 9 is_stmt 1 view .LVU6690
10915:Core/Src/bno055.c ****     }
 23770              		.loc 1 10915 21 is_stmt 0 view .LVU6691
 23771 0238 FFF7FEFF 		bl	bno055_set_operation_mode
 23772              	.LVL2980:
10915:Core/Src/bno055.c ****     }
 23773              		.loc 1 10915 18 view .LVU6692
 23774 023c 54FA80F4 		uxtab	r4, r4, r0
 23775              	.LVL2981:
10915:Core/Src/bno055.c ****     }
 23776              		.loc 1 10915 18 view .LVU6693
 23777 0240 64B2     		sxtb	r4, r4
 23778              	.LVL2982:
10915:Core/Src/bno055.c ****     }
 23779              		.loc 1 10915 18 view .LVU6694
 23780 0242 F3E7     		b	.L1596
 23781              	.LVL2983:
 23782              	.L1606:
10773:Core/Src/bno055.c ****     }
 23783              		.loc 1 10773 16 view .LVU6695
 23784 0244 6FF07E04 		mvn	r4, #126
 23785 0248 F0E7     		b	.L1596
 23786              	.L1613:
 23787 024a 00BF     		.align	2
 23788              	.L1612:
 23789 024c 00000000 		.word	.LANCHOR0
 23790              		.cfi_endproc
 23791              	.LFE172:
 23793              		.section	.text.bno055_read_gyro_offset,"ax",%progbits
 23794              		.align	1
 23795              		.global	bno055_read_gyro_offset
 23796              		.syntax unified
 23797              		.thumb
 23798              		.thumb_func
 23800              	bno055_read_gyro_offset:
 23801              	.LVL2984:
 23802              	.LFB173:
10920:Core/Src/bno055.c **** 
10921:Core/Src/bno055.c **** /*!
10922:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
ARM GAS  /tmp/cc9kYR4Z.s 			page 662


10923:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
10924:Core/Src/bno055.c ****  *
10925:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
10926:Core/Src/bno055.c ****  *
10927:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
10928:Core/Src/bno055.c ****  *      ------------------- | ----------------
10929:Core/Src/bno055.c ****  *               x          |  gyro offset x
10930:Core/Src/bno055.c ****  *               y          |  gyro offset y
10931:Core/Src/bno055.c ****  *               z          |  gyro offset z
10932:Core/Src/bno055.c ****  *
10933:Core/Src/bno055.c ****  *
10934:Core/Src/bno055.c ****  *  @return results of bus communication function
10935:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10936:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10937:Core/Src/bno055.c ****  *
10938:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
10939:Core/Src/bno055.c ****  *  the range of gyro sensor
10940:Core/Src/bno055.c ****  *
10941:Core/Src/bno055.c ****  *  gyro G range         | offset range
10942:Core/Src/bno055.c ****  * --------------------  | ------------
10943:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
10944:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
10945:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
10946:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
10947:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
10948:Core/Src/bno055.c ****  *
10949:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
10950:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
10951:Core/Src/bno055.c ****  */
10952:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
10953:Core/Src/bno055.c **** {
 23803              		.loc 1 10953 1 is_stmt 1 view -0
 23804              		.cfi_startproc
 23805              		@ args = 0, pretend = 0, frame = 8
 23806              		@ frame_needed = 0, uses_anonymous_args = 0
 23807              		.loc 1 10953 1 is_stmt 0 view .LVU6697
 23808 0000 30B5     		push	{r4, r5, lr}
 23809              	.LCFI685:
 23810              		.cfi_def_cfa_offset 12
 23811              		.cfi_offset 4, -12
 23812              		.cfi_offset 5, -8
 23813              		.cfi_offset 14, -4
 23814 0002 83B0     		sub	sp, sp, #12
 23815              	.LCFI686:
 23816              		.cfi_def_cfa_offset 24
 23817 0004 0446     		mov	r4, r0
10954:Core/Src/bno055.c ****     /* Variable used to return value of
10955:Core/Src/bno055.c ****      * communication routine*/
10956:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23818              		.loc 1 10956 5 is_stmt 1 view .LVU6698
 23819              	.LVL2985:
10957:Core/Src/bno055.c **** 
10958:Core/Src/bno055.c ****     /* Array holding the gyro offset values
10959:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10960:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10961:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10962:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 663


10963:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10964:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10965:Core/Src/bno055.c ****      */
10966:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_OFFSET_ARRAY] = {
 23820              		.loc 1 10966 5 view .LVU6699
 23821              		.loc 1 10966 8 is_stmt 0 view .LVU6700
 23822 0006 1F4B     		ldr	r3, .L1623
 23823 0008 93E80300 		ldm	r3, {r0, r1}
 23824              	.LVL2986:
 23825              		.loc 1 10966 8 view .LVU6701
 23826 000c 0090     		str	r0, [sp]
 23827 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10967:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10968:Core/Src/bno055.c ****     };
10969:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23828              		.loc 1 10969 5 is_stmt 1 view .LVU6702
 23829              	.LVL2987:
10970:Core/Src/bno055.c **** 
10971:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10972:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23830              		.loc 1 10972 5 view .LVU6703
 23831              		.loc 1 10972 18 is_stmt 0 view .LVU6704
 23832 0012 1D4B     		ldr	r3, .L1623+4
 23833 0014 1B68     		ldr	r3, [r3]
 23834              		.loc 1 10972 8 view .LVU6705
 23835 0016 5BB3     		cbz	r3, .L1618
10973:Core/Src/bno055.c ****     {
10974:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10975:Core/Src/bno055.c ****     }
10976:Core/Src/bno055.c ****     else
10977:Core/Src/bno055.c ****     {
10978:Core/Src/bno055.c ****         /*condition check for page, gyro offset is
10979:Core/Src/bno055.c ****          * available in the page zero*/
10980:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 23836              		.loc 1 10980 9 is_stmt 1 view .LVU6706
 23837              		.loc 1 10980 21 is_stmt 0 view .LVU6707
 23838 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23839              		.loc 1 10980 12 view .LVU6708
 23840 001a 1BBB     		cbnz	r3, .L1622
 23841              	.LVL2988:
 23842              	.L1616:
10981:Core/Src/bno055.c ****         {
10982:Core/Src/bno055.c ****             /* Write the page zero*/
10983:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10984:Core/Src/bno055.c ****         }
10985:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 23843              		.loc 1 10985 53 discriminator 1 view .LVU6709
 23844 001c 1A4B     		ldr	r3, .L1623+4
 23845 001e 1B68     		ldr	r3, [r3]
 23846 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23847              		.loc 1 10985 41 discriminator 1 view .LVU6710
 23848 0022 43BB     		cbnz	r3, .L1619
 23849              	.L1617:
10986:Core/Src/bno055.c ****         {
10987:Core/Src/bno055.c ****             /* Read gyro offset value it the six bytes of data*/
10988:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23850              		.loc 1 10988 13 is_stmt 1 view .LVU6711
ARM GAS  /tmp/cc9kYR4Z.s 			page 664


 23851              		.loc 1 10988 32 is_stmt 0 view .LVU6712
 23852 0024 184B     		ldr	r3, .L1623+4
 23853 0026 1868     		ldr	r0, [r3]
 23854 0028 0569     		ldr	r5, [r0, #16]
 23855              		.loc 1 10988 24 view .LVU6713
 23856 002a 0623     		movs	r3, #6
 23857 002c 6A46     		mov	r2, sp
 23858 002e 6121     		movs	r1, #97
 23859 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23860 0032 A847     		blx	r5
 23861              	.LVL2989:
10989:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_X_LSB_REG,
10990:Core/Src/bno055.c ****                                                       data_u8,
10991:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_ARRAY);
10992:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 23862              		.loc 1 10992 13 is_stmt 1 view .LVU6714
 23863              		.loc 1 10992 16 is_stmt 0 view .LVU6715
 23864 0034 10BB     		cbnz	r0, .L1620
10993:Core/Src/bno055.c ****             {
10994:Core/Src/bno055.c ****                 /* Read gyro x offset value*/
10995:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23865              		.loc 1 10995 17 is_stmt 1 view .LVU6716
10996:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10997:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23866              		.loc 1 10997 17 view .LVU6717
10998:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10999:Core/Src/bno055.c ****                 gyro_offset->x =
 23867              		.loc 1 10999 17 view .LVU6718
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23868              		.loc 1 11000 34 is_stmt 0 view .LVU6719
 23869 0036 9DF90120 		ldrsb	r2, [sp, #1]
11001:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 23870              		.loc 1 11001 35 view .LVU6720
 23871 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23872              		.loc 1 11000 21 view .LVU6721
 23873 003e 43EA0223 		orr	r3, r3, r2, lsl #8
10999:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23874              		.loc 1 10999 32 view .LVU6722
 23875 0042 2380     		strh	r3, [r4]	@ movhi
11002:Core/Src/bno055.c **** 
11003:Core/Src/bno055.c ****                 /* Read gyro y offset value*/
11004:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23876              		.loc 1 11004 17 is_stmt 1 view .LVU6723
11005:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11006:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23877              		.loc 1 11006 17 view .LVU6724
11007:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11008:Core/Src/bno055.c ****                 gyro_offset->y =
 23878              		.loc 1 11008 17 view .LVU6725
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23879              		.loc 1 11009 34 is_stmt 0 view .LVU6726
 23880 0044 9DF90320 		ldrsb	r2, [sp, #3]
11010:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 23881              		.loc 1 11010 35 view .LVU6727
 23882 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
ARM GAS  /tmp/cc9kYR4Z.s 			page 665


 23883              		.loc 1 11009 21 view .LVU6728
 23884 004c 43EA0223 		orr	r3, r3, r2, lsl #8
11008:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23885              		.loc 1 11008 32 view .LVU6729
 23886 0050 6380     		strh	r3, [r4, #2]	@ movhi
11011:Core/Src/bno055.c **** 
11012:Core/Src/bno055.c ****                 /* Read gyro z offset value*/
11013:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23887              		.loc 1 11013 17 is_stmt 1 view .LVU6730
11014:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11015:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23888              		.loc 1 11015 17 view .LVU6731
11016:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11017:Core/Src/bno055.c ****                 gyro_offset->z =
 23889              		.loc 1 11017 17 view .LVU6732
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23890              		.loc 1 11018 34 is_stmt 0 view .LVU6733
 23891 0052 9DF90520 		ldrsb	r2, [sp, #5]
11019:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 23892              		.loc 1 11019 35 view .LVU6734
 23893 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23894              		.loc 1 11018 21 view .LVU6735
 23895 005a 43EA0223 		orr	r3, r3, r2, lsl #8
11017:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23896              		.loc 1 11017 32 view .LVU6736
 23897 005e A380     		strh	r3, [r4, #4]	@ movhi
 23898              	.LVL2990:
 23899              	.L1615:
11020:Core/Src/bno055.c ****             }
11021:Core/Src/bno055.c ****             else
11022:Core/Src/bno055.c ****             {
11023:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11024:Core/Src/bno055.c ****             }
11025:Core/Src/bno055.c ****         }
11026:Core/Src/bno055.c ****         else
11027:Core/Src/bno055.c ****         {
11028:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11029:Core/Src/bno055.c ****         }
11030:Core/Src/bno055.c ****     }
11031:Core/Src/bno055.c **** 
11032:Core/Src/bno055.c ****     return com_rslt;
11033:Core/Src/bno055.c **** }
 23900              		.loc 1 11033 1 view .LVU6737
 23901 0060 03B0     		add	sp, sp, #12
 23902              	.LCFI687:
 23903              		.cfi_remember_state
 23904              		.cfi_def_cfa_offset 12
 23905              		@ sp needed
 23906 0062 30BD     		pop	{r4, r5, pc}
 23907              	.LVL2991:
 23908              	.L1622:
 23909              	.LCFI688:
 23910              		.cfi_restore_state
10983:Core/Src/bno055.c ****         }
 23911              		.loc 1 10983 13 is_stmt 1 view .LVU6738
10983:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 666


 23912              		.loc 1 10983 23 is_stmt 0 view .LVU6739
 23913 0064 0020     		movs	r0, #0
 23914 0066 FFF7FEFF 		bl	bno055_write_page_id
 23915              	.LVL2992:
10985:Core/Src/bno055.c ****         {
 23916              		.loc 1 10985 9 is_stmt 1 view .LVU6740
10985:Core/Src/bno055.c ****         {
 23917              		.loc 1 10985 12 is_stmt 0 view .LVU6741
 23918 006a 0028     		cmp	r0, #0
 23919 006c DAD0     		beq	.L1617
 23920 006e D5E7     		b	.L1616
 23921              	.LVL2993:
 23922              	.L1618:
10974:Core/Src/bno055.c ****     }
 23923              		.loc 1 10974 16 view .LVU6742
 23924 0070 6FF07E00 		mvn	r0, #126
 23925 0074 F4E7     		b	.L1615
 23926              	.LVL2994:
 23927              	.L1619:
11028:Core/Src/bno055.c ****         }
 23928              		.loc 1 11028 22 view .LVU6743
 23929 0076 4FF0FF30 		mov	r0, #-1
 23930 007a F1E7     		b	.L1615
 23931              	.LVL2995:
 23932              	.L1620:
11023:Core/Src/bno055.c ****             }
 23933              		.loc 1 11023 26 view .LVU6744
 23934 007c 4FF0FF30 		mov	r0, #-1
 23935              	.LVL2996:
11023:Core/Src/bno055.c ****             }
 23936              		.loc 1 11023 26 view .LVU6745
 23937 0080 EEE7     		b	.L1615
 23938              	.L1624:
 23939 0082 00BF     		.align	2
 23940              	.L1623:
 23941 0084 00000000 		.word	.LANCHOR1
 23942 0088 00000000 		.word	.LANCHOR0
 23943              		.cfi_endproc
 23944              	.LFE173:
 23946              		.section	.text.bno055_write_gyro_offset,"ax",%progbits
 23947              		.align	1
 23948              		.global	bno055_write_gyro_offset
 23949              		.syntax unified
 23950              		.thumb
 23951              		.thumb_func
 23953              	bno055_write_gyro_offset:
 23954              	.LVL2997:
 23955              	.LFB174:
11034:Core/Src/bno055.c **** 
11035:Core/Src/bno055.c **** /*!
11036:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
11037:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
11038:Core/Src/bno055.c ****  *
11039:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
11040:Core/Src/bno055.c ****  *
11041:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
11042:Core/Src/bno055.c ****  *      ------------------- | ----------------
ARM GAS  /tmp/cc9kYR4Z.s 			page 667


11043:Core/Src/bno055.c ****  *               x          |  gyro offset x
11044:Core/Src/bno055.c ****  *               y          |  gyro offset y
11045:Core/Src/bno055.c ****  *               z          |  gyro offset z
11046:Core/Src/bno055.c ****  *
11047:Core/Src/bno055.c ****  *
11048:Core/Src/bno055.c ****  *  @return results of bus communication function
11049:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11050:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11051:Core/Src/bno055.c ****  *
11052:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
11053:Core/Src/bno055.c ****  *  the range of gyro sensor
11054:Core/Src/bno055.c ****  *
11055:Core/Src/bno055.c ****  *  gyro G range         | offset range
11056:Core/Src/bno055.c ****  * --------------------  | ------------
11057:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
11058:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
11059:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
11060:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
11061:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
11062:Core/Src/bno055.c ****  *
11063:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
11064:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
11065:Core/Src/bno055.c ****  */
11066:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
11067:Core/Src/bno055.c **** {
 23956              		.loc 1 11067 1 is_stmt 1 view -0
 23957              		.cfi_startproc
 23958              		@ args = 0, pretend = 0, frame = 8
 23959              		@ frame_needed = 0, uses_anonymous_args = 0
 23960              		.loc 1 11067 1 is_stmt 0 view .LVU6747
 23961 0000 70B5     		push	{r4, r5, r6, lr}
 23962              	.LCFI689:
 23963              		.cfi_def_cfa_offset 16
 23964              		.cfi_offset 4, -16
 23965              		.cfi_offset 5, -12
 23966              		.cfi_offset 6, -8
 23967              		.cfi_offset 14, -4
 23968 0002 82B0     		sub	sp, sp, #8
 23969              	.LCFI690:
 23970              		.cfi_def_cfa_offset 24
11068:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23971              		.loc 1 11068 5 is_stmt 1 view .LVU6748
 23972              	.LVL2998:
11069:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 23973              		.loc 1 11069 5 view .LVU6749
11070:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 23974              		.loc 1 11070 5 view .LVU6750
 23975              		.loc 1 11070 8 is_stmt 0 view .LVU6751
 23976 0004 0023     		movs	r3, #0
 23977 0006 8DF80730 		strb	r3, [sp, #7]
11071:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 23978              		.loc 1 11071 5 is_stmt 1 view .LVU6752
 23979              		.loc 1 11071 8 is_stmt 0 view .LVU6753
 23980 000a 8DF80630 		strb	r3, [sp, #6]
11072:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23981              		.loc 1 11072 5 is_stmt 1 view .LVU6754
 23982              	.LVL2999:
ARM GAS  /tmp/cc9kYR4Z.s 			page 668


11073:Core/Src/bno055.c **** 
11074:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11075:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23983              		.loc 1 11075 5 view .LVU6755
 23984              		.loc 1 11075 18 is_stmt 0 view .LVU6756
 23985 000e 714B     		ldr	r3, .L1640
 23986 0010 1B68     		ldr	r3, [r3]
 23987              		.loc 1 11075 8 view .LVU6757
 23988 0012 002B     		cmp	r3, #0
 23989 0014 00F0DA80 		beq	.L1634
 23990 0018 0546     		mov	r5, r0
11076:Core/Src/bno055.c ****     {
11077:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11078:Core/Src/bno055.c ****     }
11079:Core/Src/bno055.c ****     else
11080:Core/Src/bno055.c ****     {
11081:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11082:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11083:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11084:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 23991              		.loc 1 11084 9 is_stmt 1 view .LVU6758
 23992              		.loc 1 11084 19 is_stmt 0 view .LVU6759
 23993 001a 0DF10600 		add	r0, sp, #6
 23994              	.LVL3000:
 23995              		.loc 1 11084 19 view .LVU6760
 23996 001e FFF7FEFF 		bl	bno055_get_operation_mode
 23997              	.LVL3001:
11085:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 23998              		.loc 1 11085 9 is_stmt 1 view .LVU6761
 23999              		.loc 1 11085 12 is_stmt 0 view .LVU6762
 24000 0022 0446     		mov	r4, r0
 24001 0024 0028     		cmp	r0, #0
 24002 0026 40F0C080 		bne	.L1635
11086:Core/Src/bno055.c ****         {
11087:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24003              		.loc 1 11087 13 is_stmt 1 view .LVU6763
 24004              		.loc 1 11087 32 is_stmt 0 view .LVU6764
 24005 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24006              		.loc 1 11087 16 view .LVU6765
 24007 002e 002B     		cmp	r3, #0
 24008 0030 40F0B580 		bne	.L1638
 24009              	.LVL3002:
 24010              	.L1628:
11088:Core/Src/bno055.c ****             {
11089:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11090:Core/Src/bno055.c ****             }
11091:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24011              		.loc 1 11091 13 is_stmt 1 view .LVU6766
 24012              		.loc 1 11091 16 is_stmt 0 view .LVU6767
 24013 0034 002C     		cmp	r4, #0
 24014 0036 40F0C080 		bne	.L1636
11092:Core/Src/bno055.c ****             {
11093:Core/Src/bno055.c ****                 /* write gryo offset x value*/
11094:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24015              		.loc 1 11094 17 is_stmt 1 view .LVU6768
 24016              		.loc 1 11094 36 is_stmt 0 view .LVU6769
 24017 003a 664B     		ldr	r3, .L1640
ARM GAS  /tmp/cc9kYR4Z.s 			page 669


 24018 003c 1868     		ldr	r0, [r3]
 24019 003e 0469     		ldr	r4, [r0, #16]
 24020              	.LVL3003:
 24021              		.loc 1 11094 28 view .LVU6770
 24022 0040 0123     		movs	r3, #1
 24023 0042 0DF10702 		add	r2, sp, #7
 24024 0046 6121     		movs	r1, #97
 24025 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24026 004a A047     		blx	r4
 24027              	.LVL3004:
11095:Core/Src/bno055.c ****                                                           BNO055_GYRO_OFFSET_X_LSB_REG,
11096:Core/Src/bno055.c ****                                                           &data2_u8r,
11097:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
11098:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24028              		.loc 1 11098 17 is_stmt 1 view .LVU6771
 24029              		.loc 1 11098 20 is_stmt 0 view .LVU6772
 24030 004c 0446     		mov	r4, r0
 24031 004e 78B9     		cbnz	r0, .L1629
11099:Core/Src/bno055.c ****                 {
11100:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 24032              		.loc 1 11100 21 is_stmt 1 view .LVU6773
 24033              		.loc 1 11100 50 is_stmt 0 view .LVU6774
 24034 0050 B5F90030 		ldrsh	r3, [r5]
 24035              	.LVL3005:
11101:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_LSB, data1_u8r)
 24036              		.loc 1 11101 21 is_stmt 1 view .LVU6775
 24037              		.loc 1 11101 31 is_stmt 0 view .LVU6776
 24038 0054 8DF80730 		strb	r3, [sp, #7]
11102:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24039              		.loc 1 11102 21 is_stmt 1 view .LVU6777
 24040              		.loc 1 11102 41 is_stmt 0 view .LVU6778
 24041 0058 5E4B     		ldr	r3, .L1640
 24042              	.LVL3006:
 24043              		.loc 1 11102 41 view .LVU6779
 24044 005a 1868     		ldr	r0, [r3]
 24045              	.LVL3007:
 24046              		.loc 1 11102 41 view .LVU6780
 24047 005c C668     		ldr	r6, [r0, #12]
 24048              		.loc 1 11102 33 view .LVU6781
 24049 005e 0123     		movs	r3, #1
 24050 0060 0DF10702 		add	r2, sp, #7
 24051              	.LVL3008:
 24052              		.loc 1 11102 33 view .LVU6782
 24053 0064 6121     		movs	r1, #97
 24054 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24055 0068 B047     		blx	r6
 24056              	.LVL3009:
 24057              		.loc 1 11102 30 view .LVU6783
 24058 006a 54FA80F0 		uxtab	r0, r4, r0
 24059 006e 44B2     		sxtb	r4, r0
 24060              	.LVL3010:
 24061              	.L1629:
11103:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_LSB_REG,
11104:Core/Src/bno055.c ****                                                                 &data2_u8r,
11105:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11106:Core/Src/bno055.c ****                 }
11107:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 670


 24062              		.loc 1 11107 17 is_stmt 1 view .LVU6784
 24063              		.loc 1 11107 37 is_stmt 0 view .LVU6785
 24064 0070 584B     		ldr	r3, .L1640
 24065 0072 1868     		ldr	r0, [r3]
 24066 0074 0669     		ldr	r6, [r0, #16]
 24067              		.loc 1 11107 29 view .LVU6786
 24068 0076 0123     		movs	r3, #1
 24069 0078 0DF10702 		add	r2, sp, #7
 24070 007c 6221     		movs	r1, #98
 24071 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24072 0080 B047     		blx	r6
 24073              	.LVL3011:
 24074              		.loc 1 11107 26 view .LVU6787
 24075 0082 54FA80F4 		uxtab	r4, r4, r0
 24076              	.LVL3012:
 24077              		.loc 1 11107 26 view .LVU6788
 24078 0086 E6B2     		uxtb	r6, r4
 24079 0088 64B2     		sxtb	r4, r4
 24080              	.LVL3013:
11108:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_X_MSB_REG,
11109:Core/Src/bno055.c ****                                                            &data2_u8r,
11110:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11111:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24081              		.loc 1 11111 17 is_stmt 1 view .LVU6789
 24082              		.loc 1 11111 20 is_stmt 0 view .LVU6790
 24083 008a 7CB9     		cbnz	r4, .L1630
11112:Core/Src/bno055.c ****                 {
11113:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24084              		.loc 1 11113 21 is_stmt 1 view .LVU6791
 24085              		.loc 1 11113 34 is_stmt 0 view .LVU6792
 24086 008c 95F90130 		ldrsb	r3, [r5, #1]
 24087              	.LVL3014:
11114:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_MSB, data1_u8r)
 24088              		.loc 1 11114 21 is_stmt 1 view .LVU6793
 24089              		.loc 1 11114 31 is_stmt 0 view .LVU6794
 24090 0090 8DF80730 		strb	r3, [sp, #7]
11115:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24091              		.loc 1 11115 21 is_stmt 1 view .LVU6795
 24092              		.loc 1 11115 41 is_stmt 0 view .LVU6796
 24093 0094 4F4B     		ldr	r3, .L1640
 24094              	.LVL3015:
 24095              		.loc 1 11115 41 view .LVU6797
 24096 0096 1868     		ldr	r0, [r3]
 24097 0098 C468     		ldr	r4, [r0, #12]
 24098              	.LVL3016:
 24099              		.loc 1 11115 33 view .LVU6798
 24100 009a 0123     		movs	r3, #1
 24101 009c 0DF10702 		add	r2, sp, #7
 24102              	.LVL3017:
 24103              		.loc 1 11115 33 view .LVU6799
 24104 00a0 6221     		movs	r1, #98
 24105 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24106 00a4 A047     		blx	r4
 24107              	.LVL3018:
 24108              		.loc 1 11115 30 view .LVU6800
 24109 00a6 56FA80F4 		uxtab	r4, r6, r0
 24110 00aa 64B2     		sxtb	r4, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 671


 24111              	.LVL3019:
 24112              	.L1630:
11116:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_MSB_REG,
11117:Core/Src/bno055.c ****                                                                 &data2_u8r,
11118:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11119:Core/Src/bno055.c ****                 }
11120:Core/Src/bno055.c **** 
11121:Core/Src/bno055.c ****                 /* write gryo offset y value*/
11122:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24113              		.loc 1 11122 17 is_stmt 1 view .LVU6801
 24114              		.loc 1 11122 37 is_stmt 0 view .LVU6802
 24115 00ac 494B     		ldr	r3, .L1640
 24116 00ae 1868     		ldr	r0, [r3]
 24117 00b0 0669     		ldr	r6, [r0, #16]
 24118              		.loc 1 11122 29 view .LVU6803
 24119 00b2 0123     		movs	r3, #1
 24120 00b4 0DF10702 		add	r2, sp, #7
 24121 00b8 6321     		movs	r1, #99
 24122 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24123 00bc B047     		blx	r6
 24124              	.LVL3020:
 24125              		.loc 1 11122 26 view .LVU6804
 24126 00be 54FA80F4 		uxtab	r4, r4, r0
 24127              	.LVL3021:
 24128              		.loc 1 11122 26 view .LVU6805
 24129 00c2 E6B2     		uxtb	r6, r4
 24130 00c4 64B2     		sxtb	r4, r4
 24131              	.LVL3022:
11123:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_LSB_REG,
11124:Core/Src/bno055.c ****                                                            &data2_u8r,
11125:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11126:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24132              		.loc 1 11126 17 is_stmt 1 view .LVU6806
 24133              		.loc 1 11126 20 is_stmt 0 view .LVU6807
 24134 00c6 7CB9     		cbnz	r4, .L1631
11127:Core/Src/bno055.c ****                 {
11128:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 24135              		.loc 1 11128 21 is_stmt 1 view .LVU6808
 24136              		.loc 1 11128 50 is_stmt 0 view .LVU6809
 24137 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 24138              	.LVL3023:
11129:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_LSB, data1_u8r)
 24139              		.loc 1 11129 21 is_stmt 1 view .LVU6810
 24140              		.loc 1 11129 31 is_stmt 0 view .LVU6811
 24141 00cc 8DF80730 		strb	r3, [sp, #7]
11130:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24142              		.loc 1 11130 21 is_stmt 1 view .LVU6812
 24143              		.loc 1 11130 41 is_stmt 0 view .LVU6813
 24144 00d0 404B     		ldr	r3, .L1640
 24145              	.LVL3024:
 24146              		.loc 1 11130 41 view .LVU6814
 24147 00d2 1868     		ldr	r0, [r3]
 24148 00d4 C468     		ldr	r4, [r0, #12]
 24149              	.LVL3025:
 24150              		.loc 1 11130 33 view .LVU6815
 24151 00d6 0123     		movs	r3, #1
 24152 00d8 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/cc9kYR4Z.s 			page 672


 24153              	.LVL3026:
 24154              		.loc 1 11130 33 view .LVU6816
 24155 00dc 6321     		movs	r1, #99
 24156 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24157 00e0 A047     		blx	r4
 24158              	.LVL3027:
 24159              		.loc 1 11130 30 view .LVU6817
 24160 00e2 56FA80F4 		uxtab	r4, r6, r0
 24161 00e6 64B2     		sxtb	r4, r4
 24162              	.LVL3028:
 24163              	.L1631:
11131:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_LSB_REG,
11132:Core/Src/bno055.c ****                                                                 &data2_u8r,
11133:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11134:Core/Src/bno055.c ****                 }
11135:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24164              		.loc 1 11135 17 is_stmt 1 view .LVU6818
 24165              		.loc 1 11135 37 is_stmt 0 view .LVU6819
 24166 00e8 3A4B     		ldr	r3, .L1640
 24167 00ea 1868     		ldr	r0, [r3]
 24168 00ec 0669     		ldr	r6, [r0, #16]
 24169              		.loc 1 11135 29 view .LVU6820
 24170 00ee 0123     		movs	r3, #1
 24171 00f0 0DF10702 		add	r2, sp, #7
 24172 00f4 6421     		movs	r1, #100
 24173 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24174 00f8 B047     		blx	r6
 24175              	.LVL3029:
 24176              		.loc 1 11135 26 view .LVU6821
 24177 00fa 54FA80F4 		uxtab	r4, r4, r0
 24178              	.LVL3030:
 24179              		.loc 1 11135 26 view .LVU6822
 24180 00fe E6B2     		uxtb	r6, r4
 24181 0100 64B2     		sxtb	r4, r4
 24182              	.LVL3031:
11136:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_MSB_REG,
11137:Core/Src/bno055.c ****                                                            &data2_u8r,
11138:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11139:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24183              		.loc 1 11139 17 is_stmt 1 view .LVU6823
 24184              		.loc 1 11139 20 is_stmt 0 view .LVU6824
 24185 0102 7CB9     		cbnz	r4, .L1632
11140:Core/Src/bno055.c ****                 {
11141:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24186              		.loc 1 11141 21 is_stmt 1 view .LVU6825
 24187              		.loc 1 11141 34 is_stmt 0 view .LVU6826
 24188 0104 95F90330 		ldrsb	r3, [r5, #3]
 24189              	.LVL3032:
11142:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_MSB, data1_u8r)
 24190              		.loc 1 11142 21 is_stmt 1 view .LVU6827
 24191              		.loc 1 11142 31 is_stmt 0 view .LVU6828
 24192 0108 8DF80730 		strb	r3, [sp, #7]
11143:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24193              		.loc 1 11143 21 is_stmt 1 view .LVU6829
 24194              		.loc 1 11143 41 is_stmt 0 view .LVU6830
 24195 010c 314B     		ldr	r3, .L1640
 24196              	.LVL3033:
ARM GAS  /tmp/cc9kYR4Z.s 			page 673


 24197              		.loc 1 11143 41 view .LVU6831
 24198 010e 1868     		ldr	r0, [r3]
 24199 0110 C468     		ldr	r4, [r0, #12]
 24200              	.LVL3034:
 24201              		.loc 1 11143 33 view .LVU6832
 24202 0112 0123     		movs	r3, #1
 24203 0114 0DF10702 		add	r2, sp, #7
 24204              	.LVL3035:
 24205              		.loc 1 11143 33 view .LVU6833
 24206 0118 6421     		movs	r1, #100
 24207 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24208 011c A047     		blx	r4
 24209              	.LVL3036:
 24210              		.loc 1 11143 30 view .LVU6834
 24211 011e 56FA80F4 		uxtab	r4, r6, r0
 24212 0122 64B2     		sxtb	r4, r4
 24213              	.LVL3037:
 24214              	.L1632:
11144:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_MSB_REG,
11145:Core/Src/bno055.c ****                                                                 &data2_u8r,
11146:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11147:Core/Src/bno055.c ****                 }
11148:Core/Src/bno055.c **** 
11149:Core/Src/bno055.c ****                 /* write gryo offset z value*/
11150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24215              		.loc 1 11150 17 is_stmt 1 view .LVU6835
 24216              		.loc 1 11150 37 is_stmt 0 view .LVU6836
 24217 0124 2B4B     		ldr	r3, .L1640
 24218 0126 1868     		ldr	r0, [r3]
 24219 0128 0669     		ldr	r6, [r0, #16]
 24220              		.loc 1 11150 29 view .LVU6837
 24221 012a 0123     		movs	r3, #1
 24222 012c 0DF10702 		add	r2, sp, #7
 24223 0130 6521     		movs	r1, #101
 24224 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24225 0134 B047     		blx	r6
 24226              	.LVL3038:
 24227              		.loc 1 11150 26 view .LVU6838
 24228 0136 54FA80F4 		uxtab	r4, r4, r0
 24229              	.LVL3039:
 24230              		.loc 1 11150 26 view .LVU6839
 24231 013a E6B2     		uxtb	r6, r4
 24232 013c 64B2     		sxtb	r4, r4
 24233              	.LVL3040:
11151:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_LSB_REG,
11152:Core/Src/bno055.c ****                                                            &data2_u8r,
11153:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11154:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24234              		.loc 1 11154 17 is_stmt 1 view .LVU6840
 24235              		.loc 1 11154 20 is_stmt 0 view .LVU6841
 24236 013e 7CB9     		cbnz	r4, .L1633
11155:Core/Src/bno055.c ****                 {
11156:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 24237              		.loc 1 11156 21 is_stmt 1 view .LVU6842
 24238              		.loc 1 11156 50 is_stmt 0 view .LVU6843
 24239 0140 B5F90430 		ldrsh	r3, [r5, #4]
 24240              	.LVL3041:
ARM GAS  /tmp/cc9kYR4Z.s 			page 674


11157:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_LSB, data1_u8r)
 24241              		.loc 1 11157 21 is_stmt 1 view .LVU6844
 24242              		.loc 1 11157 31 is_stmt 0 view .LVU6845
 24243 0144 8DF80730 		strb	r3, [sp, #7]
11158:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24244              		.loc 1 11158 21 is_stmt 1 view .LVU6846
 24245              		.loc 1 11158 41 is_stmt 0 view .LVU6847
 24246 0148 224B     		ldr	r3, .L1640
 24247              	.LVL3042:
 24248              		.loc 1 11158 41 view .LVU6848
 24249 014a 1868     		ldr	r0, [r3]
 24250 014c C468     		ldr	r4, [r0, #12]
 24251              	.LVL3043:
 24252              		.loc 1 11158 33 view .LVU6849
 24253 014e 0123     		movs	r3, #1
 24254 0150 0DF10702 		add	r2, sp, #7
 24255              	.LVL3044:
 24256              		.loc 1 11158 33 view .LVU6850
 24257 0154 6521     		movs	r1, #101
 24258 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24259 0158 A047     		blx	r4
 24260              	.LVL3045:
 24261              		.loc 1 11158 30 view .LVU6851
 24262 015a 56FA80F4 		uxtab	r4, r6, r0
 24263 015e 64B2     		sxtb	r4, r4
 24264              	.LVL3046:
 24265              	.L1633:
11159:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_LSB_REG,
11160:Core/Src/bno055.c ****                                                                 &data2_u8r,
11161:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11162:Core/Src/bno055.c ****                 }
11163:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24266              		.loc 1 11163 17 is_stmt 1 view .LVU6852
 24267              		.loc 1 11163 37 is_stmt 0 view .LVU6853
 24268 0160 1C4B     		ldr	r3, .L1640
 24269 0162 1868     		ldr	r0, [r3]
 24270 0164 0669     		ldr	r6, [r0, #16]
 24271              		.loc 1 11163 29 view .LVU6854
 24272 0166 0123     		movs	r3, #1
 24273 0168 0DF10702 		add	r2, sp, #7
 24274 016c 6621     		movs	r1, #102
 24275 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24276 0170 B047     		blx	r6
 24277              	.LVL3047:
 24278              		.loc 1 11163 26 view .LVU6855
 24279 0172 54FA80F4 		uxtab	r4, r4, r0
 24280              	.LVL3048:
 24281              		.loc 1 11163 26 view .LVU6856
 24282 0176 E6B2     		uxtb	r6, r4
 24283 0178 64B2     		sxtb	r4, r4
 24284              	.LVL3049:
11164:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_MSB_REG,
11165:Core/Src/bno055.c ****                                                            &data2_u8r,
11166:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11167:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24285              		.loc 1 11167 17 is_stmt 1 view .LVU6857
 24286              		.loc 1 11167 20 is_stmt 0 view .LVU6858
ARM GAS  /tmp/cc9kYR4Z.s 			page 675


 24287 017a C4B9     		cbnz	r4, .L1627
11168:Core/Src/bno055.c ****                 {
11169:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24288              		.loc 1 11169 21 is_stmt 1 view .LVU6859
 24289              		.loc 1 11169 34 is_stmt 0 view .LVU6860
 24290 017c 95F90530 		ldrsb	r3, [r5, #5]
 24291              	.LVL3050:
11170:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_MSB, data1_u8r)
 24292              		.loc 1 11170 21 is_stmt 1 view .LVU6861
 24293              		.loc 1 11170 31 is_stmt 0 view .LVU6862
 24294 0180 8DF80730 		strb	r3, [sp, #7]
11171:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24295              		.loc 1 11171 21 is_stmt 1 view .LVU6863
 24296              		.loc 1 11171 41 is_stmt 0 view .LVU6864
 24297 0184 134B     		ldr	r3, .L1640
 24298              	.LVL3051:
 24299              		.loc 1 11171 41 view .LVU6865
 24300 0186 1868     		ldr	r0, [r3]
 24301 0188 C468     		ldr	r4, [r0, #12]
 24302              	.LVL3052:
 24303              		.loc 1 11171 33 view .LVU6866
 24304 018a 0123     		movs	r3, #1
 24305 018c 0DF10702 		add	r2, sp, #7
 24306              	.LVL3053:
 24307              		.loc 1 11171 33 view .LVU6867
 24308 0190 6621     		movs	r1, #102
 24309 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24310 0194 A047     		blx	r4
 24311              	.LVL3054:
 24312              		.loc 1 11171 30 view .LVU6868
 24313 0196 56FA80F4 		uxtab	r4, r6, r0
 24314 019a 64B2     		sxtb	r4, r4
 24315              	.LVL3055:
 24316              		.loc 1 11171 30 view .LVU6869
 24317 019c 07E0     		b	.L1627
 24318              	.LVL3056:
 24319              	.L1638:
11089:Core/Src/bno055.c ****             }
 24320              		.loc 1 11089 17 is_stmt 1 view .LVU6870
11089:Core/Src/bno055.c ****             }
 24321              		.loc 1 11089 28 is_stmt 0 view .LVU6871
 24322 019e FFF7FEFF 		bl	bno055_set_operation_mode
 24323              	.LVL3057:
11089:Core/Src/bno055.c ****             }
 24324              		.loc 1 11089 25 view .LVU6872
 24325 01a2 54FA80F4 		uxtab	r4, r4, r0
 24326 01a6 64B2     		sxtb	r4, r4
 24327              	.LVL3058:
11089:Core/Src/bno055.c ****             }
 24328              		.loc 1 11089 25 view .LVU6873
 24329 01a8 44E7     		b	.L1628
 24330              	.LVL3059:
 24331              	.L1635:
11172:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_MSB_REG,
11173:Core/Src/bno055.c ****                                                                 &data2_u8r,
11174:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11175:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/cc9kYR4Z.s 			page 676


11176:Core/Src/bno055.c ****             }
11177:Core/Src/bno055.c ****             else
11178:Core/Src/bno055.c ****             {
11179:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11180:Core/Src/bno055.c ****             }
11181:Core/Src/bno055.c ****         }
11182:Core/Src/bno055.c ****         else
11183:Core/Src/bno055.c ****         {
11184:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24332              		.loc 1 11184 22 view .LVU6874
 24333 01aa 4FF0FF34 		mov	r4, #-1
 24334              	.LVL3060:
 24335              	.L1627:
11185:Core/Src/bno055.c ****         }
11186:Core/Src/bno055.c ****     }
11187:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24336              		.loc 1 11187 5 is_stmt 1 view .LVU6875
 24337              		.loc 1 11187 24 is_stmt 0 view .LVU6876
 24338 01ae 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24339              		.loc 1 11187 8 view .LVU6877
 24340 01b2 28B9     		cbnz	r0, .L1639
 24341              	.LVL3061:
 24342              	.L1626:
11188:Core/Src/bno055.c ****     {
11189:Core/Src/bno055.c ****         /* set the operation mode
11190:Core/Src/bno055.c ****          * of previous operation mode*/
11191:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11192:Core/Src/bno055.c ****     }
11193:Core/Src/bno055.c **** 
11194:Core/Src/bno055.c ****     return com_rslt;
11195:Core/Src/bno055.c **** }
 24343              		.loc 1 11195 1 view .LVU6878
 24344 01b4 2046     		mov	r0, r4
 24345 01b6 02B0     		add	sp, sp, #8
 24346              	.LCFI691:
 24347              		.cfi_remember_state
 24348              		.cfi_def_cfa_offset 16
 24349              		@ sp needed
 24350 01b8 70BD     		pop	{r4, r5, r6, pc}
 24351              	.LVL3062:
 24352              	.L1636:
 24353              	.LCFI692:
 24354              		.cfi_restore_state
11179:Core/Src/bno055.c ****             }
 24355              		.loc 1 11179 26 view .LVU6879
 24356 01ba 4FF0FF34 		mov	r4, #-1
 24357              	.LVL3063:
11179:Core/Src/bno055.c ****             }
 24358              		.loc 1 11179 26 view .LVU6880
 24359 01be F6E7     		b	.L1627
 24360              	.LVL3064:
 24361              	.L1639:
11191:Core/Src/bno055.c ****     }
 24362              		.loc 1 11191 9 is_stmt 1 view .LVU6881
11191:Core/Src/bno055.c ****     }
 24363              		.loc 1 11191 21 is_stmt 0 view .LVU6882
 24364 01c0 FFF7FEFF 		bl	bno055_set_operation_mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 677


 24365              	.LVL3065:
11191:Core/Src/bno055.c ****     }
 24366              		.loc 1 11191 18 view .LVU6883
 24367 01c4 54FA80F4 		uxtab	r4, r4, r0
 24368              	.LVL3066:
11191:Core/Src/bno055.c ****     }
 24369              		.loc 1 11191 18 view .LVU6884
 24370 01c8 64B2     		sxtb	r4, r4
 24371              	.LVL3067:
11191:Core/Src/bno055.c ****     }
 24372              		.loc 1 11191 18 view .LVU6885
 24373 01ca F3E7     		b	.L1626
 24374              	.LVL3068:
 24375              	.L1634:
11077:Core/Src/bno055.c ****     }
 24376              		.loc 1 11077 16 view .LVU6886
 24377 01cc 6FF07E04 		mvn	r4, #126
 24378 01d0 F0E7     		b	.L1626
 24379              	.L1641:
 24380 01d2 00BF     		.align	2
 24381              	.L1640:
 24382 01d4 00000000 		.word	.LANCHOR0
 24383              		.cfi_endproc
 24384              	.LFE174:
 24386              		.section	.text.bno055_get_accel_range,"ax",%progbits
 24387              		.align	1
 24388              		.global	bno055_get_accel_range
 24389              		.syntax unified
 24390              		.thumb
 24391              		.thumb_func
 24393              	bno055_get_accel_range:
 24394              	.LVL3069:
 24395              	.LFB175:
11196:Core/Src/bno055.c **** 
11197:Core/Src/bno055.c **** /********************************************************/
11198:Core/Src/bno055.c **** /************** PAGE1 Functions *********************/
11199:Core/Src/bno055.c **** /********************************************************/
11200:Core/Src/bno055.c **** 
11201:Core/Src/bno055.c **** /*!
11202:Core/Src/bno055.c ****  *  @brief This API used to read the accel range
11203:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11204:Core/Src/bno055.c ****  *
11205:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11206:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11207:Core/Src/bno055.c ****  *       ----------------- | --------------
11208:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
11209:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11210:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11211:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11212:Core/Src/bno055.c ****  *
11213:Core/Src/bno055.c ****  *  @return results of bus communication function
11214:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11215:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11216:Core/Src/bno055.c ****  *
11217:Core/Src/bno055.c ****  *
11218:Core/Src/bno055.c ****  */
11219:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_range(u8 *accel_range_u8)
ARM GAS  /tmp/cc9kYR4Z.s 			page 678


11220:Core/Src/bno055.c **** {
 24396              		.loc 1 11220 1 is_stmt 1 view -0
 24397              		.cfi_startproc
 24398              		@ args = 0, pretend = 0, frame = 8
 24399              		@ frame_needed = 0, uses_anonymous_args = 0
 24400              		.loc 1 11220 1 is_stmt 0 view .LVU6888
 24401 0000 30B5     		push	{r4, r5, lr}
 24402              	.LCFI693:
 24403              		.cfi_def_cfa_offset 12
 24404              		.cfi_offset 4, -12
 24405              		.cfi_offset 5, -8
 24406              		.cfi_offset 14, -4
 24407 0002 83B0     		sub	sp, sp, #12
 24408              	.LCFI694:
 24409              		.cfi_def_cfa_offset 24
11221:Core/Src/bno055.c ****     /* Variable used to return value of
11222:Core/Src/bno055.c ****      * communication routine*/
11223:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24410              		.loc 1 11223 5 is_stmt 1 view .LVU6889
 24411              	.LVL3070:
11224:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24412              		.loc 1 11224 5 view .LVU6890
 24413              		.loc 1 11224 8 is_stmt 0 view .LVU6891
 24414 0004 0023     		movs	r3, #0
 24415 0006 8DF80730 		strb	r3, [sp, #7]
11225:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24416              		.loc 1 11225 5 is_stmt 1 view .LVU6892
 24417              	.LVL3071:
11226:Core/Src/bno055.c **** 
11227:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11228:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24418              		.loc 1 11228 5 view .LVU6893
 24419              		.loc 1 11228 18 is_stmt 0 view .LVU6894
 24420 000a 144B     		ldr	r3, .L1650
 24421 000c 1B68     		ldr	r3, [r3]
 24422              		.loc 1 11228 8 view .LVU6895
 24423 000e F3B1     		cbz	r3, .L1646
 24424 0010 0446     		mov	r4, r0
11229:Core/Src/bno055.c ****     {
11230:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11231:Core/Src/bno055.c ****     }
11232:Core/Src/bno055.c ****     else
11233:Core/Src/bno055.c ****     {
11234:Core/Src/bno055.c ****         /*condition check for page, accel range is
11235:Core/Src/bno055.c ****          * available in the page one*/
11236:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24425              		.loc 1 11236 9 is_stmt 1 view .LVU6896
 24426              		.loc 1 11236 21 is_stmt 0 view .LVU6897
 24427 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24428              		.loc 1 11236 12 view .LVU6898
 24429 0014 012B     		cmp	r3, #1
 24430 0016 14D1     		bne	.L1649
 24431              	.LVL3072:
 24432              	.L1644:
11237:Core/Src/bno055.c ****         {
11238:Core/Src/bno055.c ****             /* Write page as one */
11239:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/cc9kYR4Z.s 			page 679


11240:Core/Src/bno055.c ****         }
11241:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24433              		.loc 1 11241 53 discriminator 1 view .LVU6899
 24434 0018 104B     		ldr	r3, .L1650
 24435 001a 1B68     		ldr	r3, [r3]
 24436 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24437              		.loc 1 11241 41 discriminator 1 view .LVU6900
 24438 001e 012B     		cmp	r3, #1
 24439 0020 18D1     		bne	.L1647
 24440              	.L1645:
11242:Core/Src/bno055.c ****         {
11243:Core/Src/bno055.c ****             /* Read the value of accel g range */
11244:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24441              		.loc 1 11244 13 is_stmt 1 view .LVU6901
 24442              		.loc 1 11244 32 is_stmt 0 view .LVU6902
 24443 0022 0E4B     		ldr	r3, .L1650
 24444 0024 1868     		ldr	r0, [r3]
 24445 0026 0569     		ldr	r5, [r0, #16]
 24446              		.loc 1 11244 24 view .LVU6903
 24447 0028 0123     		movs	r3, #1
 24448 002a 0DF10702 		add	r2, sp, #7
 24449 002e 0821     		movs	r1, #8
 24450 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24451 0032 A847     		blx	r5
 24452              	.LVL3073:
11245:Core/Src/bno055.c ****                                                       BNO055_ACCEL_RANGE_REG,
11246:Core/Src/bno055.c ****                                                       &data_u8r,
11247:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11248:Core/Src/bno055.c ****             *accel_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE);
 24453              		.loc 1 11248 13 is_stmt 1 view .LVU6904
 24454              		.loc 1 11248 31 is_stmt 0 view .LVU6905
 24455 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24456 0038 03F00303 		and	r3, r3, #3
 24457              		.loc 1 11248 29 view .LVU6906
 24458 003c 2370     		strb	r3, [r4]
 24459              	.LVL3074:
 24460              	.L1643:
11249:Core/Src/bno055.c ****         }
11250:Core/Src/bno055.c ****         else
11251:Core/Src/bno055.c ****         {
11252:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11253:Core/Src/bno055.c ****         }
11254:Core/Src/bno055.c ****     }
11255:Core/Src/bno055.c **** 
11256:Core/Src/bno055.c ****     return com_rslt;
11257:Core/Src/bno055.c **** }
 24461              		.loc 1 11257 1 view .LVU6907
 24462 003e 03B0     		add	sp, sp, #12
 24463              	.LCFI695:
 24464              		.cfi_remember_state
 24465              		.cfi_def_cfa_offset 12
 24466              		@ sp needed
 24467 0040 30BD     		pop	{r4, r5, pc}
 24468              	.LVL3075:
 24469              	.L1649:
 24470              	.LCFI696:
 24471              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 680


11239:Core/Src/bno055.c ****         }
 24472              		.loc 1 11239 13 is_stmt 1 view .LVU6908
11239:Core/Src/bno055.c ****         }
 24473              		.loc 1 11239 23 is_stmt 0 view .LVU6909
 24474 0042 0120     		movs	r0, #1
 24475              	.LVL3076:
11239:Core/Src/bno055.c ****         }
 24476              		.loc 1 11239 23 view .LVU6910
 24477 0044 FFF7FEFF 		bl	bno055_write_page_id
 24478              	.LVL3077:
11241:Core/Src/bno055.c ****         {
 24479              		.loc 1 11241 9 is_stmt 1 view .LVU6911
11241:Core/Src/bno055.c ****         {
 24480              		.loc 1 11241 12 is_stmt 0 view .LVU6912
 24481 0048 0028     		cmp	r0, #0
 24482 004a EAD0     		beq	.L1645
 24483 004c E4E7     		b	.L1644
 24484              	.LVL3078:
 24485              	.L1646:
11230:Core/Src/bno055.c ****     }
 24486              		.loc 1 11230 16 view .LVU6913
 24487 004e 6FF07E00 		mvn	r0, #126
 24488              	.LVL3079:
11230:Core/Src/bno055.c ****     }
 24489              		.loc 1 11230 16 view .LVU6914
 24490 0052 F4E7     		b	.L1643
 24491              	.LVL3080:
 24492              	.L1647:
11252:Core/Src/bno055.c ****         }
 24493              		.loc 1 11252 22 view .LVU6915
 24494 0054 4FF0FF30 		mov	r0, #-1
 24495 0058 F1E7     		b	.L1643
 24496              	.L1651:
 24497 005a 00BF     		.align	2
 24498              	.L1650:
 24499 005c 00000000 		.word	.LANCHOR0
 24500              		.cfi_endproc
 24501              	.LFE175:
 24503              		.section	.text.bno055_set_accel_range,"ax",%progbits
 24504              		.align	1
 24505              		.global	bno055_set_accel_range
 24506              		.syntax unified
 24507              		.thumb
 24508              		.thumb_func
 24510              	bno055_set_accel_range:
 24511              	.LVL3081:
 24512              	.LFB176:
11258:Core/Src/bno055.c **** 
11259:Core/Src/bno055.c **** /*!
11260:Core/Src/bno055.c ****  *  @brief This API used to write the accel range
11261:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11262:Core/Src/bno055.c ****  *
11263:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11264:Core/Src/bno055.c ****  *
11265:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11266:Core/Src/bno055.c ****  *       ----------------- | --------------
11267:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
ARM GAS  /tmp/cc9kYR4Z.s 			page 681


11268:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11269:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11270:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11271:Core/Src/bno055.c ****  *
11272:Core/Src/bno055.c ****  *  @return results of bus communication function
11273:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11274:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11275:Core/Src/bno055.c ****  *
11276:Core/Src/bno055.c ****  *
11277:Core/Src/bno055.c ****  */
11278:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_range(u8 accel_range_u8)
11279:Core/Src/bno055.c **** {
 24513              		.loc 1 11279 1 is_stmt 1 view -0
 24514              		.cfi_startproc
 24515              		@ args = 0, pretend = 0, frame = 8
 24516              		@ frame_needed = 0, uses_anonymous_args = 0
 24517              		.loc 1 11279 1 is_stmt 0 view .LVU6917
 24518 0000 30B5     		push	{r4, r5, lr}
 24519              	.LCFI697:
 24520              		.cfi_def_cfa_offset 12
 24521              		.cfi_offset 4, -12
 24522              		.cfi_offset 5, -8
 24523              		.cfi_offset 14, -4
 24524 0002 83B0     		sub	sp, sp, #12
 24525              	.LCFI698:
 24526              		.cfi_def_cfa_offset 24
11280:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24527              		.loc 1 11280 5 is_stmt 1 view .LVU6918
 24528              	.LVL3082:
11281:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24529              		.loc 1 11281 5 view .LVU6919
 24530              		.loc 1 11281 8 is_stmt 0 view .LVU6920
 24531 0004 0023     		movs	r3, #0
 24532 0006 8DF80730 		strb	r3, [sp, #7]
11282:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24533              		.loc 1 11282 5 is_stmt 1 view .LVU6921
 24534              	.LVL3083:
11283:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24535              		.loc 1 11283 5 view .LVU6922
 24536              		.loc 1 11283 8 is_stmt 0 view .LVU6923
 24537 000a 8DF80630 		strb	r3, [sp, #6]
11284:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24538              		.loc 1 11284 5 is_stmt 1 view .LVU6924
 24539              	.LVL3084:
11285:Core/Src/bno055.c **** 
11286:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11287:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24540              		.loc 1 11287 5 view .LVU6925
 24541              		.loc 1 11287 18 is_stmt 0 view .LVU6926
 24542 000e 2C4B     		ldr	r3, .L1665
 24543 0010 1B68     		ldr	r3, [r3]
 24544              		.loc 1 11287 8 view .LVU6927
 24545 0012 002B     		cmp	r3, #0
 24546 0014 50D0     		beq	.L1656
 24547 0016 0546     		mov	r5, r0
11288:Core/Src/bno055.c ****     {
11289:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 682


11290:Core/Src/bno055.c ****     }
11291:Core/Src/bno055.c ****     else
11292:Core/Src/bno055.c ****     {
11293:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11294:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11295:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11296:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24548              		.loc 1 11296 9 is_stmt 1 view .LVU6928
 24549              		.loc 1 11296 19 is_stmt 0 view .LVU6929
 24550 0018 0DF10600 		add	r0, sp, #6
 24551              	.LVL3085:
 24552              		.loc 1 11296 19 view .LVU6930
 24553 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24554              	.LVL3086:
11297:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24555              		.loc 1 11297 9 is_stmt 1 view .LVU6931
 24556              		.loc 1 11297 12 is_stmt 0 view .LVU6932
 24557 0020 0446     		mov	r4, r0
 24558 0022 0028     		cmp	r0, #0
 24559 0024 34D1     		bne	.L1657
11298:Core/Src/bno055.c ****         {
11299:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24560              		.loc 1 11299 13 is_stmt 1 view .LVU6933
 24561              		.loc 1 11299 32 is_stmt 0 view .LVU6934
 24562 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24563              		.loc 1 11299 16 view .LVU6935
 24564 002a 1BB9     		cbnz	r3, .L1662
 24565              	.LVL3087:
 24566              	.L1655:
11300:Core/Src/bno055.c ****             {
11301:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11302:Core/Src/bno055.c ****             }
11303:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24567              		.loc 1 11303 13 is_stmt 1 view .LVU6936
 24568              		.loc 1 11303 16 is_stmt 0 view .LVU6937
 24569 002c 44B1     		cbz	r4, .L1663
11304:Core/Src/bno055.c ****             {
11305:Core/Src/bno055.c ****                 /* Write page as one */
11306:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11307:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11308:Core/Src/bno055.c ****                 {
11309:Core/Src/bno055.c ****                     if (accel_range_u8 < BNO055_ACCEL_RANGE)
11310:Core/Src/bno055.c ****                     {
11311:Core/Src/bno055.c ****                         /* Write the value of accel range*/
11312:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11313:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
11314:Core/Src/bno055.c ****                                                                   &data_u8r,
11315:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11316:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11317:Core/Src/bno055.c ****                         {
11318:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE, accel_rang
11319:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11320:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
11321:Core/Src/bno055.c ****                                                                         &data_u8r,
11322:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11323:Core/Src/bno055.c ****                         }
11324:Core/Src/bno055.c ****                     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 683


11325:Core/Src/bno055.c ****                     else
11326:Core/Src/bno055.c ****                     {
11327:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11328:Core/Src/bno055.c ****                     }
11329:Core/Src/bno055.c ****                 }
11330:Core/Src/bno055.c ****                 else
11331:Core/Src/bno055.c ****                 {
11332:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11333:Core/Src/bno055.c ****                 }
11334:Core/Src/bno055.c ****             }
11335:Core/Src/bno055.c ****             else
11336:Core/Src/bno055.c ****             {
11337:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24570              		.loc 1 11337 26 view .LVU6938
 24571 002e 4FF0FF34 		mov	r4, #-1
 24572              	.LVL3088:
 24573              		.loc 1 11337 26 view .LVU6939
 24574 0032 2FE0     		b	.L1654
 24575              	.LVL3089:
 24576              	.L1662:
11301:Core/Src/bno055.c ****             }
 24577              		.loc 1 11301 17 is_stmt 1 view .LVU6940
11301:Core/Src/bno055.c ****             }
 24578              		.loc 1 11301 28 is_stmt 0 view .LVU6941
 24579 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 24580              	.LVL3090:
11301:Core/Src/bno055.c ****             }
 24581              		.loc 1 11301 25 view .LVU6942
 24582 0038 54FA80F4 		uxtab	r4, r4, r0
 24583 003c 64B2     		sxtb	r4, r4
 24584              	.LVL3091:
11301:Core/Src/bno055.c ****             }
 24585              		.loc 1 11301 25 view .LVU6943
 24586 003e F5E7     		b	.L1655
 24587              	.L1663:
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24588              		.loc 1 11306 17 is_stmt 1 view .LVU6944
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24589              		.loc 1 11306 30 is_stmt 0 view .LVU6945
 24590 0040 0120     		movs	r0, #1
 24591 0042 FFF7FEFF 		bl	bno055_write_page_id
 24592              	.LVL3092:
11307:Core/Src/bno055.c ****                 {
 24593              		.loc 1 11307 17 is_stmt 1 view .LVU6946
11307:Core/Src/bno055.c ****                 {
 24594              		.loc 1 11307 20 is_stmt 0 view .LVU6947
 24595 0046 58BB     		cbnz	r0, .L1659
11309:Core/Src/bno055.c ****                     {
 24596              		.loc 1 11309 21 is_stmt 1 view .LVU6948
11309:Core/Src/bno055.c ****                     {
 24597              		.loc 1 11309 24 is_stmt 0 view .LVU6949
 24598 0048 042D     		cmp	r5, #4
 24599 004a 2CD8     		bhi	.L1660
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24600              		.loc 1 11312 25 is_stmt 1 view .LVU6950
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24601              		.loc 1 11312 44 is_stmt 0 view .LVU6951
ARM GAS  /tmp/cc9kYR4Z.s 			page 684


 24602 004c 1C4B     		ldr	r3, .L1665
 24603 004e 1868     		ldr	r0, [r3]
 24604              	.LVL3093:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24605              		.loc 1 11312 44 view .LVU6952
 24606 0050 0469     		ldr	r4, [r0, #16]
 24607              	.LVL3094:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24608              		.loc 1 11312 36 view .LVU6953
 24609 0052 0123     		movs	r3, #1
 24610 0054 0DF10702 		add	r2, sp, #7
 24611 0058 0821     		movs	r1, #8
 24612 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24613 005c A047     		blx	r4
 24614              	.LVL3095:
11316:Core/Src/bno055.c ****                         {
 24615              		.loc 1 11316 25 is_stmt 1 view .LVU6954
11316:Core/Src/bno055.c ****                         {
 24616              		.loc 1 11316 28 is_stmt 0 view .LVU6955
 24617 005e 0446     		mov	r4, r0
 24618 0060 C0B9     		cbnz	r0, .L1654
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24619              		.loc 1 11318 29 is_stmt 1 view .LVU6956
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24620              		.loc 1 11318 40 is_stmt 0 view .LVU6957
 24621 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24622 0066 23F00303 		bic	r3, r3, #3
 24623 006a 5BB2     		sxtb	r3, r3
 24624 006c 05F00300 		and	r0, r5, #3
 24625              	.LVL3096:
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24626              		.loc 1 11318 40 view .LVU6958
 24627 0070 0343     		orrs	r3, r3, r0
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24628              		.loc 1 11318 38 view .LVU6959
 24629 0072 8DF80730 		strb	r3, [sp, #7]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24630              		.loc 1 11319 29 is_stmt 1 view .LVU6960
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24631              		.loc 1 11319 49 is_stmt 0 view .LVU6961
 24632 0076 124B     		ldr	r3, .L1665
 24633 0078 1868     		ldr	r0, [r3]
 24634 007a C568     		ldr	r5, [r0, #12]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24635              		.loc 1 11319 41 view .LVU6962
 24636 007c 0123     		movs	r3, #1
 24637 007e 0DF10702 		add	r2, sp, #7
 24638 0082 0821     		movs	r1, #8
 24639 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24640 0086 A847     		blx	r5
 24641              	.LVL3097:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24642              		.loc 1 11319 38 view .LVU6963
 24643 0088 54FA80F0 		uxtab	r0, r4, r0
 24644 008c 44B2     		sxtb	r4, r0
 24645              	.LVL3098:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 685


 24646              		.loc 1 11319 38 view .LVU6964
 24647 008e 01E0     		b	.L1654
 24648              	.LVL3099:
 24649              	.L1657:
11338:Core/Src/bno055.c ****             }
11339:Core/Src/bno055.c ****         }
11340:Core/Src/bno055.c ****         else
11341:Core/Src/bno055.c ****         {
11342:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24650              		.loc 1 11342 22 view .LVU6965
 24651 0090 4FF0FF34 		mov	r4, #-1
 24652              	.LVL3100:
 24653              	.L1654:
11343:Core/Src/bno055.c ****         }
11344:Core/Src/bno055.c ****     }
11345:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24654              		.loc 1 11345 5 is_stmt 1 view .LVU6966
 24655              		.loc 1 11345 24 is_stmt 0 view .LVU6967
 24656 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24657              		.loc 1 11345 8 view .LVU6968
 24658 0098 40B9     		cbnz	r0, .L1664
 24659              	.LVL3101:
 24660              	.L1653:
11346:Core/Src/bno055.c ****     {
11347:Core/Src/bno055.c ****         /* set the operation mode of
11348:Core/Src/bno055.c ****          * previous operation mode*/
11349:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11350:Core/Src/bno055.c ****     }
11351:Core/Src/bno055.c **** 
11352:Core/Src/bno055.c ****     return com_rslt;
11353:Core/Src/bno055.c **** }
 24661              		.loc 1 11353 1 view .LVU6969
 24662 009a 2046     		mov	r0, r4
 24663 009c 03B0     		add	sp, sp, #12
 24664              	.LCFI699:
 24665              		.cfi_remember_state
 24666              		.cfi_def_cfa_offset 12
 24667              		@ sp needed
 24668 009e 30BD     		pop	{r4, r5, pc}
 24669              	.LVL3102:
 24670              	.L1659:
 24671              	.LCFI700:
 24672              		.cfi_restore_state
11332:Core/Src/bno055.c ****                 }
 24673              		.loc 1 11332 30 view .LVU6970
 24674 00a0 4FF0FF34 		mov	r4, #-1
 24675              	.LVL3103:
11332:Core/Src/bno055.c ****                 }
 24676              		.loc 1 11332 30 view .LVU6971
 24677 00a4 F6E7     		b	.L1654
 24678              	.LVL3104:
 24679              	.L1660:
11327:Core/Src/bno055.c ****                     }
 24680              		.loc 1 11327 34 view .LVU6972
 24681 00a6 6FF00104 		mvn	r4, #1
 24682              	.LVL3105:
11327:Core/Src/bno055.c ****                     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 686


 24683              		.loc 1 11327 34 view .LVU6973
 24684 00aa F3E7     		b	.L1654
 24685              	.LVL3106:
 24686              	.L1664:
11349:Core/Src/bno055.c ****     }
 24687              		.loc 1 11349 9 is_stmt 1 view .LVU6974
11349:Core/Src/bno055.c ****     }
 24688              		.loc 1 11349 21 is_stmt 0 view .LVU6975
 24689 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 24690              	.LVL3107:
11349:Core/Src/bno055.c ****     }
 24691              		.loc 1 11349 18 view .LVU6976
 24692 00b0 54FA80F0 		uxtab	r0, r4, r0
 24693 00b4 44B2     		sxtb	r4, r0
 24694              	.LVL3108:
11349:Core/Src/bno055.c ****     }
 24695              		.loc 1 11349 18 view .LVU6977
 24696 00b6 F0E7     		b	.L1653
 24697              	.LVL3109:
 24698              	.L1656:
11289:Core/Src/bno055.c ****     }
 24699              		.loc 1 11289 16 view .LVU6978
 24700 00b8 6FF07E04 		mvn	r4, #126
 24701 00bc EDE7     		b	.L1653
 24702              	.L1666:
 24703 00be 00BF     		.align	2
 24704              	.L1665:
 24705 00c0 00000000 		.word	.LANCHOR0
 24706              		.cfi_endproc
 24707              	.LFE176:
 24709              		.section	.text.bno055_get_accel_bw,"ax",%progbits
 24710              		.align	1
 24711              		.global	bno055_get_accel_bw
 24712              		.syntax unified
 24713              		.thumb
 24714              		.thumb_func
 24716              	bno055_get_accel_bw:
 24717              	.LVL3110:
 24718              	.LFB177:
11354:Core/Src/bno055.c **** 
11355:Core/Src/bno055.c **** /*!
11356:Core/Src/bno055.c ****  *  @brief This API used to read the accel bandwidth
11357:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11358:Core/Src/bno055.c ****  *
11359:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11360:Core/Src/bno055.c ****  *
11361:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11362:Core/Src/bno055.c ****  *       ----------------- | ---------------
11363:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11364:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11365:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11366:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11367:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11368:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11369:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11370:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11371:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 687


11372:Core/Src/bno055.c ****  *  @return results of bus communication function
11373:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11374:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11375:Core/Src/bno055.c ****  *
11376:Core/Src/bno055.c ****  *
11377:Core/Src/bno055.c ****  */
11378:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_bw(u8 *accel_bw_u8)
11379:Core/Src/bno055.c **** {
 24719              		.loc 1 11379 1 is_stmt 1 view -0
 24720              		.cfi_startproc
 24721              		@ args = 0, pretend = 0, frame = 8
 24722              		@ frame_needed = 0, uses_anonymous_args = 0
 24723              		.loc 1 11379 1 is_stmt 0 view .LVU6980
 24724 0000 30B5     		push	{r4, r5, lr}
 24725              	.LCFI701:
 24726              		.cfi_def_cfa_offset 12
 24727              		.cfi_offset 4, -12
 24728              		.cfi_offset 5, -8
 24729              		.cfi_offset 14, -4
 24730 0002 83B0     		sub	sp, sp, #12
 24731              	.LCFI702:
 24732              		.cfi_def_cfa_offset 24
11380:Core/Src/bno055.c ****     /* Variable used to return value of
11381:Core/Src/bno055.c ****      * communication routine*/
11382:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24733              		.loc 1 11382 5 is_stmt 1 view .LVU6981
 24734              	.LVL3111:
11383:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24735              		.loc 1 11383 5 view .LVU6982
 24736              		.loc 1 11383 8 is_stmt 0 view .LVU6983
 24737 0004 0023     		movs	r3, #0
 24738 0006 8DF80730 		strb	r3, [sp, #7]
11384:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24739              		.loc 1 11384 5 is_stmt 1 view .LVU6984
 24740              	.LVL3112:
11385:Core/Src/bno055.c **** 
11386:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11387:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24741              		.loc 1 11387 5 view .LVU6985
 24742              		.loc 1 11387 18 is_stmt 0 view .LVU6986
 24743 000a 144B     		ldr	r3, .L1675
 24744 000c 1B68     		ldr	r3, [r3]
 24745              		.loc 1 11387 8 view .LVU6987
 24746 000e F3B1     		cbz	r3, .L1671
 24747 0010 0446     		mov	r4, r0
11388:Core/Src/bno055.c ****     {
11389:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11390:Core/Src/bno055.c ****     }
11391:Core/Src/bno055.c ****     else
11392:Core/Src/bno055.c ****     {
11393:Core/Src/bno055.c ****         /*condition check for page, accel bandwidth is
11394:Core/Src/bno055.c ****          * available in the page one*/
11395:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24748              		.loc 1 11395 9 is_stmt 1 view .LVU6988
 24749              		.loc 1 11395 21 is_stmt 0 view .LVU6989
 24750 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24751              		.loc 1 11395 12 view .LVU6990
ARM GAS  /tmp/cc9kYR4Z.s 			page 688


 24752 0014 012B     		cmp	r3, #1
 24753 0016 14D1     		bne	.L1674
 24754              	.LVL3113:
 24755              	.L1669:
11396:Core/Src/bno055.c ****         {
11397:Core/Src/bno055.c ****             /* Write page as one */
11398:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11399:Core/Src/bno055.c ****         }
11400:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24756              		.loc 1 11400 53 discriminator 1 view .LVU6991
 24757 0018 104B     		ldr	r3, .L1675
 24758 001a 1B68     		ldr	r3, [r3]
 24759 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24760              		.loc 1 11400 41 discriminator 1 view .LVU6992
 24761 001e 012B     		cmp	r3, #1
 24762 0020 18D1     		bne	.L1672
 24763              	.L1670:
11401:Core/Src/bno055.c ****         {
11402:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11403:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24764              		.loc 1 11403 13 is_stmt 1 view .LVU6993
 24765              		.loc 1 11403 32 is_stmt 0 view .LVU6994
 24766 0022 0E4B     		ldr	r3, .L1675
 24767 0024 1868     		ldr	r0, [r3]
 24768 0026 0569     		ldr	r5, [r0, #16]
 24769              		.loc 1 11403 24 view .LVU6995
 24770 0028 0123     		movs	r3, #1
 24771 002a 0DF10702 		add	r2, sp, #7
 24772 002e 0821     		movs	r1, #8
 24773 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24774 0032 A847     		blx	r5
 24775              	.LVL3114:
11404:Core/Src/bno055.c ****                                                       BNO055_ACCEL_BW_REG,
11405:Core/Src/bno055.c ****                                                       &data_u8r,
11406:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11407:Core/Src/bno055.c ****             *accel_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_BW);
 24776              		.loc 1 11407 13 is_stmt 1 view .LVU6996
 24777              		.loc 1 11407 28 is_stmt 0 view .LVU6997
 24778 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24779 0038 C3F38203 		ubfx	r3, r3, #2, #3
 24780              		.loc 1 11407 26 view .LVU6998
 24781 003c 2370     		strb	r3, [r4]
 24782              	.LVL3115:
 24783              	.L1668:
11408:Core/Src/bno055.c ****         }
11409:Core/Src/bno055.c ****         else
11410:Core/Src/bno055.c ****         {
11411:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11412:Core/Src/bno055.c ****         }
11413:Core/Src/bno055.c ****     }
11414:Core/Src/bno055.c **** 
11415:Core/Src/bno055.c ****     return com_rslt;
11416:Core/Src/bno055.c **** }
 24784              		.loc 1 11416 1 view .LVU6999
 24785 003e 03B0     		add	sp, sp, #12
 24786              	.LCFI703:
 24787              		.cfi_remember_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 689


 24788              		.cfi_def_cfa_offset 12
 24789              		@ sp needed
 24790 0040 30BD     		pop	{r4, r5, pc}
 24791              	.LVL3116:
 24792              	.L1674:
 24793              	.LCFI704:
 24794              		.cfi_restore_state
11398:Core/Src/bno055.c ****         }
 24795              		.loc 1 11398 13 is_stmt 1 view .LVU7000
11398:Core/Src/bno055.c ****         }
 24796              		.loc 1 11398 23 is_stmt 0 view .LVU7001
 24797 0042 0120     		movs	r0, #1
 24798              	.LVL3117:
11398:Core/Src/bno055.c ****         }
 24799              		.loc 1 11398 23 view .LVU7002
 24800 0044 FFF7FEFF 		bl	bno055_write_page_id
 24801              	.LVL3118:
11400:Core/Src/bno055.c ****         {
 24802              		.loc 1 11400 9 is_stmt 1 view .LVU7003
11400:Core/Src/bno055.c ****         {
 24803              		.loc 1 11400 12 is_stmt 0 view .LVU7004
 24804 0048 0028     		cmp	r0, #0
 24805 004a EAD0     		beq	.L1670
 24806 004c E4E7     		b	.L1669
 24807              	.LVL3119:
 24808              	.L1671:
11389:Core/Src/bno055.c ****     }
 24809              		.loc 1 11389 16 view .LVU7005
 24810 004e 6FF07E00 		mvn	r0, #126
 24811              	.LVL3120:
11389:Core/Src/bno055.c ****     }
 24812              		.loc 1 11389 16 view .LVU7006
 24813 0052 F4E7     		b	.L1668
 24814              	.LVL3121:
 24815              	.L1672:
11411:Core/Src/bno055.c ****         }
 24816              		.loc 1 11411 22 view .LVU7007
 24817 0054 4FF0FF30 		mov	r0, #-1
 24818 0058 F1E7     		b	.L1668
 24819              	.L1676:
 24820 005a 00BF     		.align	2
 24821              	.L1675:
 24822 005c 00000000 		.word	.LANCHOR0
 24823              		.cfi_endproc
 24824              	.LFE177:
 24826              		.section	.text.bno055_set_accel_bw,"ax",%progbits
 24827              		.align	1
 24828              		.global	bno055_set_accel_bw
 24829              		.syntax unified
 24830              		.thumb
 24831              		.thumb_func
 24833              	bno055_set_accel_bw:
 24834              	.LVL3122:
 24835              	.LFB178:
11417:Core/Src/bno055.c **** 
11418:Core/Src/bno055.c **** /*!
11419:Core/Src/bno055.c ****  *  @brief This API used to write the accel bandwidth
ARM GAS  /tmp/cc9kYR4Z.s 			page 690


11420:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11421:Core/Src/bno055.c ****  *
11422:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11423:Core/Src/bno055.c ****  *
11424:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11425:Core/Src/bno055.c ****  *       ----------------- | ---------------
11426:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11427:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11428:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11429:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11430:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11431:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11432:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11433:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11434:Core/Src/bno055.c ****  *
11435:Core/Src/bno055.c ****  *  @return results of bus communication function
11436:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11437:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11438:Core/Src/bno055.c ****  *
11439:Core/Src/bno055.c ****  *
11440:Core/Src/bno055.c ****  */
11441:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_bw(u8 accel_bw_u8)
11442:Core/Src/bno055.c **** {
 24836              		.loc 1 11442 1 is_stmt 1 view -0
 24837              		.cfi_startproc
 24838              		@ args = 0, pretend = 0, frame = 8
 24839              		@ frame_needed = 0, uses_anonymous_args = 0
 24840              		.loc 1 11442 1 is_stmt 0 view .LVU7009
 24841 0000 30B5     		push	{r4, r5, lr}
 24842              	.LCFI705:
 24843              		.cfi_def_cfa_offset 12
 24844              		.cfi_offset 4, -12
 24845              		.cfi_offset 5, -8
 24846              		.cfi_offset 14, -4
 24847 0002 83B0     		sub	sp, sp, #12
 24848              	.LCFI706:
 24849              		.cfi_def_cfa_offset 24
11443:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24850              		.loc 1 11443 5 is_stmt 1 view .LVU7010
 24851              	.LVL3123:
11444:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24852              		.loc 1 11444 5 view .LVU7011
 24853              		.loc 1 11444 8 is_stmt 0 view .LVU7012
 24854 0004 0023     		movs	r3, #0
 24855 0006 8DF80730 		strb	r3, [sp, #7]
11445:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24856              		.loc 1 11445 5 is_stmt 1 view .LVU7013
 24857              	.LVL3124:
11446:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24858              		.loc 1 11446 5 view .LVU7014
 24859              		.loc 1 11446 8 is_stmt 0 view .LVU7015
 24860 000a 8DF80630 		strb	r3, [sp, #6]
11447:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24861              		.loc 1 11447 5 is_stmt 1 view .LVU7016
 24862              	.LVL3125:
11448:Core/Src/bno055.c **** 
11449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/cc9kYR4Z.s 			page 691


11450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24863              		.loc 1 11450 5 view .LVU7017
 24864              		.loc 1 11450 18 is_stmt 0 view .LVU7018
 24865 000e 2C4B     		ldr	r3, .L1690
 24866 0010 1B68     		ldr	r3, [r3]
 24867              		.loc 1 11450 8 view .LVU7019
 24868 0012 002B     		cmp	r3, #0
 24869 0014 51D0     		beq	.L1681
 24870 0016 0546     		mov	r5, r0
11451:Core/Src/bno055.c ****     {
11452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11453:Core/Src/bno055.c ****     }
11454:Core/Src/bno055.c ****     else
11455:Core/Src/bno055.c ****     {
11456:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11457:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11458:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11459:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24871              		.loc 1 11459 9 is_stmt 1 view .LVU7020
 24872              		.loc 1 11459 19 is_stmt 0 view .LVU7021
 24873 0018 0DF10600 		add	r0, sp, #6
 24874              	.LVL3126:
 24875              		.loc 1 11459 19 view .LVU7022
 24876 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24877              	.LVL3127:
11460:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24878              		.loc 1 11460 9 is_stmt 1 view .LVU7023
 24879              		.loc 1 11460 12 is_stmt 0 view .LVU7024
 24880 0020 0446     		mov	r4, r0
 24881 0022 0028     		cmp	r0, #0
 24882 0024 35D1     		bne	.L1682
11461:Core/Src/bno055.c ****         {
11462:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24883              		.loc 1 11462 13 is_stmt 1 view .LVU7025
 24884              		.loc 1 11462 32 is_stmt 0 view .LVU7026
 24885 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24886              		.loc 1 11462 16 view .LVU7027
 24887 002a 1BB9     		cbnz	r3, .L1687
 24888              	.LVL3128:
 24889              	.L1680:
11463:Core/Src/bno055.c ****             {
11464:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11465:Core/Src/bno055.c ****             }
11466:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24890              		.loc 1 11466 13 is_stmt 1 view .LVU7028
 24891              		.loc 1 11466 16 is_stmt 0 view .LVU7029
 24892 002c 44B1     		cbz	r4, .L1688
11467:Core/Src/bno055.c ****             {
11468:Core/Src/bno055.c ****                 /* Write page as one */
11469:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11470:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11471:Core/Src/bno055.c ****                 {
11472:Core/Src/bno055.c ****                     if (accel_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
11473:Core/Src/bno055.c ****                     {
11474:Core/Src/bno055.c ****                         /* Write the accel */
11475:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11476:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 692


11477:Core/Src/bno055.c ****                                                                   &data_u8r,
11478:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11479:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11480:Core/Src/bno055.c ****                         {
11481:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_BW, accel_bw_u8);
11482:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11483:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
11484:Core/Src/bno055.c ****                                                                         &data_u8r,
11485:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11486:Core/Src/bno055.c ****                         }
11487:Core/Src/bno055.c ****                     }
11488:Core/Src/bno055.c ****                     else
11489:Core/Src/bno055.c ****                     {
11490:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11491:Core/Src/bno055.c ****                     }
11492:Core/Src/bno055.c ****                 }
11493:Core/Src/bno055.c ****                 else
11494:Core/Src/bno055.c ****                 {
11495:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11496:Core/Src/bno055.c ****                 }
11497:Core/Src/bno055.c ****             }
11498:Core/Src/bno055.c ****             else
11499:Core/Src/bno055.c ****             {
11500:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24893              		.loc 1 11500 26 view .LVU7030
 24894 002e 4FF0FF34 		mov	r4, #-1
 24895              	.LVL3129:
 24896              		.loc 1 11500 26 view .LVU7031
 24897 0032 30E0     		b	.L1679
 24898              	.LVL3130:
 24899              	.L1687:
11464:Core/Src/bno055.c ****             }
 24900              		.loc 1 11464 17 is_stmt 1 view .LVU7032
11464:Core/Src/bno055.c ****             }
 24901              		.loc 1 11464 28 is_stmt 0 view .LVU7033
 24902 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 24903              	.LVL3131:
11464:Core/Src/bno055.c ****             }
 24904              		.loc 1 11464 25 view .LVU7034
 24905 0038 54FA80F4 		uxtab	r4, r4, r0
 24906 003c 64B2     		sxtb	r4, r4
 24907              	.LVL3132:
11464:Core/Src/bno055.c ****             }
 24908              		.loc 1 11464 25 view .LVU7035
 24909 003e F5E7     		b	.L1680
 24910              	.L1688:
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24911              		.loc 1 11469 17 is_stmt 1 view .LVU7036
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24912              		.loc 1 11469 30 is_stmt 0 view .LVU7037
 24913 0040 0120     		movs	r0, #1
 24914 0042 FFF7FEFF 		bl	bno055_write_page_id
 24915              	.LVL3133:
11470:Core/Src/bno055.c ****                 {
 24916              		.loc 1 11470 17 is_stmt 1 view .LVU7038
11470:Core/Src/bno055.c ****                 {
 24917              		.loc 1 11470 20 is_stmt 0 view .LVU7039
ARM GAS  /tmp/cc9kYR4Z.s 			page 693


 24918 0046 60BB     		cbnz	r0, .L1684
11472:Core/Src/bno055.c ****                     {
 24919              		.loc 1 11472 21 is_stmt 1 view .LVU7040
11472:Core/Src/bno055.c ****                     {
 24920              		.loc 1 11472 24 is_stmt 0 view .LVU7041
 24921 0048 072D     		cmp	r5, #7
 24922 004a 2DD8     		bhi	.L1685
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24923              		.loc 1 11475 25 is_stmt 1 view .LVU7042
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24924              		.loc 1 11475 44 is_stmt 0 view .LVU7043
 24925 004c 1C4B     		ldr	r3, .L1690
 24926 004e 1868     		ldr	r0, [r3]
 24927              	.LVL3134:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24928              		.loc 1 11475 44 view .LVU7044
 24929 0050 0469     		ldr	r4, [r0, #16]
 24930              	.LVL3135:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24931              		.loc 1 11475 36 view .LVU7045
 24932 0052 0123     		movs	r3, #1
 24933 0054 0DF10702 		add	r2, sp, #7
 24934 0058 0821     		movs	r1, #8
 24935 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24936 005c A047     		blx	r4
 24937              	.LVL3136:
11479:Core/Src/bno055.c ****                         {
 24938              		.loc 1 11479 25 is_stmt 1 view .LVU7046
11479:Core/Src/bno055.c ****                         {
 24939              		.loc 1 11479 28 is_stmt 0 view .LVU7047
 24940 005e 0446     		mov	r4, r0
 24941 0060 C8B9     		cbnz	r0, .L1679
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24942              		.loc 1 11481 29 is_stmt 1 view .LVU7048
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24943              		.loc 1 11481 40 is_stmt 0 view .LVU7049
 24944 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24945 0066 23F01C03 		bic	r3, r3, #28
 24946 006a 5BB2     		sxtb	r3, r3
 24947 006c A800     		lsls	r0, r5, #2
 24948              	.LVL3137:
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24949              		.loc 1 11481 40 view .LVU7050
 24950 006e 00F01C00 		and	r0, r0, #28
 24951 0072 0343     		orrs	r3, r3, r0
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24952              		.loc 1 11481 38 view .LVU7051
 24953 0074 8DF80730 		strb	r3, [sp, #7]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24954              		.loc 1 11482 29 is_stmt 1 view .LVU7052
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24955              		.loc 1 11482 49 is_stmt 0 view .LVU7053
 24956 0078 114B     		ldr	r3, .L1690
 24957 007a 1868     		ldr	r0, [r3]
 24958 007c C568     		ldr	r5, [r0, #12]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24959              		.loc 1 11482 41 view .LVU7054
ARM GAS  /tmp/cc9kYR4Z.s 			page 694


 24960 007e 0123     		movs	r3, #1
 24961 0080 0DF10702 		add	r2, sp, #7
 24962 0084 0821     		movs	r1, #8
 24963 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24964 0088 A847     		blx	r5
 24965              	.LVL3138:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24966              		.loc 1 11482 38 view .LVU7055
 24967 008a 54FA80F0 		uxtab	r0, r4, r0
 24968 008e 44B2     		sxtb	r4, r0
 24969              	.LVL3139:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 24970              		.loc 1 11482 38 view .LVU7056
 24971 0090 01E0     		b	.L1679
 24972              	.LVL3140:
 24973              	.L1682:
11501:Core/Src/bno055.c ****             }
11502:Core/Src/bno055.c ****         }
11503:Core/Src/bno055.c ****         else
11504:Core/Src/bno055.c ****         {
11505:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24974              		.loc 1 11505 22 view .LVU7057
 24975 0092 4FF0FF34 		mov	r4, #-1
 24976              	.LVL3141:
 24977              	.L1679:
11506:Core/Src/bno055.c ****         }
11507:Core/Src/bno055.c ****     }
11508:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24978              		.loc 1 11508 5 is_stmt 1 view .LVU7058
 24979              		.loc 1 11508 24 is_stmt 0 view .LVU7059
 24980 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24981              		.loc 1 11508 8 view .LVU7060
 24982 009a 40B9     		cbnz	r0, .L1689
 24983              	.LVL3142:
 24984              	.L1678:
11509:Core/Src/bno055.c ****     {
11510:Core/Src/bno055.c ****         /* set the operation mode of
11511:Core/Src/bno055.c ****          * previous operation mode*/
11512:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11513:Core/Src/bno055.c ****     }
11514:Core/Src/bno055.c **** 
11515:Core/Src/bno055.c ****     return com_rslt;
11516:Core/Src/bno055.c **** }
 24985              		.loc 1 11516 1 view .LVU7061
 24986 009c 2046     		mov	r0, r4
 24987 009e 03B0     		add	sp, sp, #12
 24988              	.LCFI707:
 24989              		.cfi_remember_state
 24990              		.cfi_def_cfa_offset 12
 24991              		@ sp needed
 24992 00a0 30BD     		pop	{r4, r5, pc}
 24993              	.LVL3143:
 24994              	.L1684:
 24995              	.LCFI708:
 24996              		.cfi_restore_state
11495:Core/Src/bno055.c ****                 }
 24997              		.loc 1 11495 30 view .LVU7062
ARM GAS  /tmp/cc9kYR4Z.s 			page 695


 24998 00a2 4FF0FF34 		mov	r4, #-1
 24999              	.LVL3144:
11495:Core/Src/bno055.c ****                 }
 25000              		.loc 1 11495 30 view .LVU7063
 25001 00a6 F6E7     		b	.L1679
 25002              	.LVL3145:
 25003              	.L1685:
11490:Core/Src/bno055.c ****                     }
 25004              		.loc 1 11490 34 view .LVU7064
 25005 00a8 6FF00104 		mvn	r4, #1
 25006              	.LVL3146:
11490:Core/Src/bno055.c ****                     }
 25007              		.loc 1 11490 34 view .LVU7065
 25008 00ac F3E7     		b	.L1679
 25009              	.LVL3147:
 25010              	.L1689:
11512:Core/Src/bno055.c ****     }
 25011              		.loc 1 11512 9 is_stmt 1 view .LVU7066
11512:Core/Src/bno055.c ****     }
 25012              		.loc 1 11512 21 is_stmt 0 view .LVU7067
 25013 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 25014              	.LVL3148:
11512:Core/Src/bno055.c ****     }
 25015              		.loc 1 11512 18 view .LVU7068
 25016 00b2 54FA80F0 		uxtab	r0, r4, r0
 25017 00b6 44B2     		sxtb	r4, r0
 25018              	.LVL3149:
11512:Core/Src/bno055.c ****     }
 25019              		.loc 1 11512 18 view .LVU7069
 25020 00b8 F0E7     		b	.L1678
 25021              	.LVL3150:
 25022              	.L1681:
11452:Core/Src/bno055.c ****     }
 25023              		.loc 1 11452 16 view .LVU7070
 25024 00ba 6FF07E04 		mvn	r4, #126
 25025 00be EDE7     		b	.L1678
 25026              	.L1691:
 25027              		.align	2
 25028              	.L1690:
 25029 00c0 00000000 		.word	.LANCHOR0
 25030              		.cfi_endproc
 25031              	.LFE178:
 25033              		.section	.text.bno055_get_accel_power_mode,"ax",%progbits
 25034              		.align	1
 25035              		.global	bno055_get_accel_power_mode
 25036              		.syntax unified
 25037              		.thumb
 25038              		.thumb_func
 25040              	bno055_get_accel_power_mode:
 25041              	.LVL3151:
 25042              	.LFB179:
11517:Core/Src/bno055.c **** 
11518:Core/Src/bno055.c **** /*!
11519:Core/Src/bno055.c ****  *  @brief This API used to read the accel power mode
11520:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11521:Core/Src/bno055.c ****  *
11522:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 696


11523:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11524:Core/Src/bno055.c ****  *   -----------------   | -------------
11525:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11526:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11527:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11528:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11529:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11530:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11531:Core/Src/bno055.c ****  *
11532:Core/Src/bno055.c ****  *  @return results of bus communication function
11533:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11534:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11535:Core/Src/bno055.c ****  *
11536:Core/Src/bno055.c ****  *
11537:Core/Src/bno055.c ****  */
11538:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_power_mode(u8 *accel_power_mode_u8)
11539:Core/Src/bno055.c **** {
 25043              		.loc 1 11539 1 is_stmt 1 view -0
 25044              		.cfi_startproc
 25045              		@ args = 0, pretend = 0, frame = 8
 25046              		@ frame_needed = 0, uses_anonymous_args = 0
 25047              		.loc 1 11539 1 is_stmt 0 view .LVU7072
 25048 0000 30B5     		push	{r4, r5, lr}
 25049              	.LCFI709:
 25050              		.cfi_def_cfa_offset 12
 25051              		.cfi_offset 4, -12
 25052              		.cfi_offset 5, -8
 25053              		.cfi_offset 14, -4
 25054 0002 83B0     		sub	sp, sp, #12
 25055              	.LCFI710:
 25056              		.cfi_def_cfa_offset 24
11540:Core/Src/bno055.c ****     /* Variable used to return value of
11541:Core/Src/bno055.c ****      * communication routine*/
11542:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25057              		.loc 1 11542 5 is_stmt 1 view .LVU7073
 25058              	.LVL3152:
11543:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25059              		.loc 1 11543 5 view .LVU7074
 25060              		.loc 1 11543 8 is_stmt 0 view .LVU7075
 25061 0004 0023     		movs	r3, #0
 25062 0006 8DF80730 		strb	r3, [sp, #7]
11544:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25063              		.loc 1 11544 5 is_stmt 1 view .LVU7076
 25064              	.LVL3153:
11545:Core/Src/bno055.c **** 
11546:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11547:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25065              		.loc 1 11547 5 view .LVU7077
 25066              		.loc 1 11547 18 is_stmt 0 view .LVU7078
 25067 000a 134B     		ldr	r3, .L1700
 25068 000c 1B68     		ldr	r3, [r3]
 25069              		.loc 1 11547 8 view .LVU7079
 25070 000e EBB1     		cbz	r3, .L1696
 25071 0010 0446     		mov	r4, r0
11548:Core/Src/bno055.c ****     {
11549:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11550:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 697


11551:Core/Src/bno055.c ****     else
11552:Core/Src/bno055.c ****     {
11553:Core/Src/bno055.c ****         /*condition check for page, accel power mode is
11554:Core/Src/bno055.c ****          * available in the page one*/
11555:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25072              		.loc 1 11555 9 is_stmt 1 view .LVU7080
 25073              		.loc 1 11555 21 is_stmt 0 view .LVU7081
 25074 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25075              		.loc 1 11555 12 view .LVU7082
 25076 0014 012B     		cmp	r3, #1
 25077 0016 13D1     		bne	.L1699
 25078              	.LVL3154:
 25079              	.L1694:
11556:Core/Src/bno055.c ****         {
11557:Core/Src/bno055.c ****             /* Write page as one */
11558:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11559:Core/Src/bno055.c ****         }
11560:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25080              		.loc 1 11560 53 discriminator 1 view .LVU7083
 25081 0018 0F4B     		ldr	r3, .L1700
 25082 001a 1B68     		ldr	r3, [r3]
 25083 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25084              		.loc 1 11560 41 discriminator 1 view .LVU7084
 25085 001e 012B     		cmp	r3, #1
 25086 0020 17D1     		bne	.L1697
 25087              	.L1695:
11561:Core/Src/bno055.c ****         {
11562:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11563:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25088              		.loc 1 11563 13 is_stmt 1 view .LVU7085
 25089              		.loc 1 11563 32 is_stmt 0 view .LVU7086
 25090 0022 0D4B     		ldr	r3, .L1700
 25091 0024 1868     		ldr	r0, [r3]
 25092 0026 0569     		ldr	r5, [r0, #16]
 25093              		.loc 1 11563 24 view .LVU7087
 25094 0028 0123     		movs	r3, #1
 25095 002a 0DF10702 		add	r2, sp, #7
 25096 002e 0821     		movs	r1, #8
 25097 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25098 0032 A847     		blx	r5
 25099              	.LVL3155:
11564:Core/Src/bno055.c ****                                                       BNO055_ACCEL_POWER_MODE_REG,
11565:Core/Src/bno055.c ****                                                       &data_u8r,
11566:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11567:Core/Src/bno055.c ****             *accel_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE);
 25100              		.loc 1 11567 13 is_stmt 1 view .LVU7088
 25101              		.loc 1 11567 36 is_stmt 0 view .LVU7089
 25102 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25103 0038 5B09     		lsrs	r3, r3, #5
 25104              		.loc 1 11567 34 view .LVU7090
 25105 003a 2370     		strb	r3, [r4]
 25106              	.LVL3156:
 25107              	.L1693:
11568:Core/Src/bno055.c ****         }
11569:Core/Src/bno055.c ****         else
11570:Core/Src/bno055.c ****         {
11571:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 698


11572:Core/Src/bno055.c ****         }
11573:Core/Src/bno055.c ****     }
11574:Core/Src/bno055.c **** 
11575:Core/Src/bno055.c ****     return com_rslt;
11576:Core/Src/bno055.c **** }
 25108              		.loc 1 11576 1 view .LVU7091
 25109 003c 03B0     		add	sp, sp, #12
 25110              	.LCFI711:
 25111              		.cfi_remember_state
 25112              		.cfi_def_cfa_offset 12
 25113              		@ sp needed
 25114 003e 30BD     		pop	{r4, r5, pc}
 25115              	.LVL3157:
 25116              	.L1699:
 25117              	.LCFI712:
 25118              		.cfi_restore_state
11558:Core/Src/bno055.c ****         }
 25119              		.loc 1 11558 13 is_stmt 1 view .LVU7092
11558:Core/Src/bno055.c ****         }
 25120              		.loc 1 11558 23 is_stmt 0 view .LVU7093
 25121 0040 0120     		movs	r0, #1
 25122              	.LVL3158:
11558:Core/Src/bno055.c ****         }
 25123              		.loc 1 11558 23 view .LVU7094
 25124 0042 FFF7FEFF 		bl	bno055_write_page_id
 25125              	.LVL3159:
11560:Core/Src/bno055.c ****         {
 25126              		.loc 1 11560 9 is_stmt 1 view .LVU7095
11560:Core/Src/bno055.c ****         {
 25127              		.loc 1 11560 12 is_stmt 0 view .LVU7096
 25128 0046 0028     		cmp	r0, #0
 25129 0048 EBD0     		beq	.L1695
 25130 004a E5E7     		b	.L1694
 25131              	.LVL3160:
 25132              	.L1696:
11549:Core/Src/bno055.c ****     }
 25133              		.loc 1 11549 16 view .LVU7097
 25134 004c 6FF07E00 		mvn	r0, #126
 25135              	.LVL3161:
11549:Core/Src/bno055.c ****     }
 25136              		.loc 1 11549 16 view .LVU7098
 25137 0050 F4E7     		b	.L1693
 25138              	.LVL3162:
 25139              	.L1697:
11571:Core/Src/bno055.c ****         }
 25140              		.loc 1 11571 22 view .LVU7099
 25141 0052 4FF0FF30 		mov	r0, #-1
 25142 0056 F1E7     		b	.L1693
 25143              	.L1701:
 25144              		.align	2
 25145              	.L1700:
 25146 0058 00000000 		.word	.LANCHOR0
 25147              		.cfi_endproc
 25148              	.LFE179:
 25150              		.section	.text.bno055_set_accel_power_mode,"ax",%progbits
 25151              		.align	1
 25152              		.global	bno055_set_accel_power_mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 699


 25153              		.syntax unified
 25154              		.thumb
 25155              		.thumb_func
 25157              	bno055_set_accel_power_mode:
 25158              	.LVL3163:
 25159              	.LFB180:
11577:Core/Src/bno055.c **** 
11578:Core/Src/bno055.c **** /*!
11579:Core/Src/bno055.c ****  *  @brief This API used to write the accel power mode
11580:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11581:Core/Src/bno055.c ****  *
11582:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11583:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11584:Core/Src/bno055.c ****  *   -----------------   | -------------
11585:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11586:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11587:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11588:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11589:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11590:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11591:Core/Src/bno055.c ****  *
11592:Core/Src/bno055.c ****  *  @return results of bus communication function
11593:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11594:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11595:Core/Src/bno055.c ****  *
11596:Core/Src/bno055.c ****  *
11597:Core/Src/bno055.c ****  */
11598:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_power_mode(u8 accel_power_mode_u8)
11599:Core/Src/bno055.c **** {
 25160              		.loc 1 11599 1 is_stmt 1 view -0
 25161              		.cfi_startproc
 25162              		@ args = 0, pretend = 0, frame = 8
 25163              		@ frame_needed = 0, uses_anonymous_args = 0
 25164              		.loc 1 11599 1 is_stmt 0 view .LVU7101
 25165 0000 30B5     		push	{r4, r5, lr}
 25166              	.LCFI713:
 25167              		.cfi_def_cfa_offset 12
 25168              		.cfi_offset 4, -12
 25169              		.cfi_offset 5, -8
 25170              		.cfi_offset 14, -4
 25171 0002 83B0     		sub	sp, sp, #12
 25172              	.LCFI714:
 25173              		.cfi_def_cfa_offset 24
11600:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25174              		.loc 1 11600 5 is_stmt 1 view .LVU7102
 25175              	.LVL3164:
11601:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25176              		.loc 1 11601 5 view .LVU7103
 25177              		.loc 1 11601 8 is_stmt 0 view .LVU7104
 25178 0004 0023     		movs	r3, #0
 25179 0006 8DF80730 		strb	r3, [sp, #7]
11602:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25180              		.loc 1 11602 5 is_stmt 1 view .LVU7105
 25181              	.LVL3165:
11603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25182              		.loc 1 11603 5 view .LVU7106
 25183              		.loc 1 11603 8 is_stmt 0 view .LVU7107
ARM GAS  /tmp/cc9kYR4Z.s 			page 700


 25184 000a 8DF80630 		strb	r3, [sp, #6]
11604:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25185              		.loc 1 11604 5 is_stmt 1 view .LVU7108
 25186              	.LVL3166:
11605:Core/Src/bno055.c **** 
11606:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11607:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25187              		.loc 1 11607 5 view .LVU7109
 25188              		.loc 1 11607 18 is_stmt 0 view .LVU7110
 25189 000e 2A4B     		ldr	r3, .L1715
 25190 0010 1B68     		ldr	r3, [r3]
 25191              		.loc 1 11607 8 view .LVU7111
 25192 0012 002B     		cmp	r3, #0
 25193 0014 4DD0     		beq	.L1706
 25194 0016 0546     		mov	r5, r0
11608:Core/Src/bno055.c ****     {
11609:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11610:Core/Src/bno055.c ****     }
11611:Core/Src/bno055.c ****     else
11612:Core/Src/bno055.c ****     {
11613:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11614:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11615:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11616:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25195              		.loc 1 11616 9 is_stmt 1 view .LVU7112
 25196              		.loc 1 11616 19 is_stmt 0 view .LVU7113
 25197 0018 0DF10600 		add	r0, sp, #6
 25198              	.LVL3167:
 25199              		.loc 1 11616 19 view .LVU7114
 25200 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25201              	.LVL3168:
11617:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25202              		.loc 1 11617 9 is_stmt 1 view .LVU7115
 25203              		.loc 1 11617 12 is_stmt 0 view .LVU7116
 25204 0020 0446     		mov	r4, r0
 25205 0022 90BB     		cbnz	r0, .L1707
11618:Core/Src/bno055.c ****         {
11619:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25206              		.loc 1 11619 13 is_stmt 1 view .LVU7117
 25207              		.loc 1 11619 32 is_stmt 0 view .LVU7118
 25208 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25209              		.loc 1 11619 16 view .LVU7119
 25210 0028 1BB9     		cbnz	r3, .L1712
 25211              	.LVL3169:
 25212              	.L1705:
11620:Core/Src/bno055.c ****             {
11621:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11622:Core/Src/bno055.c ****             }
11623:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25213              		.loc 1 11623 13 is_stmt 1 view .LVU7120
 25214              		.loc 1 11623 16 is_stmt 0 view .LVU7121
 25215 002a 44B1     		cbz	r4, .L1713
11624:Core/Src/bno055.c ****             {
11625:Core/Src/bno055.c ****                 /* Write page as one */
11626:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11627:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11628:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/cc9kYR4Z.s 			page 701


11629:Core/Src/bno055.c ****                     if (accel_power_mode_u8 < BNO055_ACCEL_POWER_MODE_RANGE)
11630:Core/Src/bno055.c ****                     {
11631:Core/Src/bno055.c ****                         /* Write the value of accel bandwidth*/
11632:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11633:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
11634:Core/Src/bno055.c ****                                                                   &data_u8r,
11635:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11636:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11637:Core/Src/bno055.c ****                         {
11638:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE, accel
11639:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11640:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
11641:Core/Src/bno055.c ****                                                                         &data_u8r,
11642:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11643:Core/Src/bno055.c ****                         }
11644:Core/Src/bno055.c ****                     }
11645:Core/Src/bno055.c ****                     else
11646:Core/Src/bno055.c ****                     {
11647:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11648:Core/Src/bno055.c ****                     }
11649:Core/Src/bno055.c ****                 }
11650:Core/Src/bno055.c ****                 else
11651:Core/Src/bno055.c ****                 {
11652:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11653:Core/Src/bno055.c ****                 }
11654:Core/Src/bno055.c ****             }
11655:Core/Src/bno055.c ****             else
11656:Core/Src/bno055.c ****             {
11657:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25216              		.loc 1 11657 26 view .LVU7122
 25217 002c 4FF0FF34 		mov	r4, #-1
 25218              	.LVL3170:
 25219              		.loc 1 11657 26 view .LVU7123
 25220 0030 2DE0     		b	.L1704
 25221              	.LVL3171:
 25222              	.L1712:
11621:Core/Src/bno055.c ****             }
 25223              		.loc 1 11621 17 is_stmt 1 view .LVU7124
11621:Core/Src/bno055.c ****             }
 25224              		.loc 1 11621 28 is_stmt 0 view .LVU7125
 25225 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 25226              	.LVL3172:
11621:Core/Src/bno055.c ****             }
 25227              		.loc 1 11621 25 view .LVU7126
 25228 0036 54FA80F4 		uxtab	r4, r4, r0
 25229 003a 64B2     		sxtb	r4, r4
 25230              	.LVL3173:
11621:Core/Src/bno055.c ****             }
 25231              		.loc 1 11621 25 view .LVU7127
 25232 003c F5E7     		b	.L1705
 25233              	.L1713:
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25234              		.loc 1 11626 17 is_stmt 1 view .LVU7128
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25235              		.loc 1 11626 30 is_stmt 0 view .LVU7129
 25236 003e 0120     		movs	r0, #1
 25237 0040 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/cc9kYR4Z.s 			page 702


 25238              	.LVL3174:
11627:Core/Src/bno055.c ****                 {
 25239              		.loc 1 11627 17 is_stmt 1 view .LVU7130
11627:Core/Src/bno055.c ****                 {
 25240              		.loc 1 11627 20 is_stmt 0 view .LVU7131
 25241 0044 48BB     		cbnz	r0, .L1709
11629:Core/Src/bno055.c ****                     {
 25242              		.loc 1 11629 21 is_stmt 1 view .LVU7132
11629:Core/Src/bno055.c ****                     {
 25243              		.loc 1 11629 24 is_stmt 0 view .LVU7133
 25244 0046 052D     		cmp	r5, #5
 25245 0048 2AD8     		bhi	.L1710
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25246              		.loc 1 11632 25 is_stmt 1 view .LVU7134
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25247              		.loc 1 11632 44 is_stmt 0 view .LVU7135
 25248 004a 1B4B     		ldr	r3, .L1715
 25249 004c 1868     		ldr	r0, [r3]
 25250              	.LVL3175:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25251              		.loc 1 11632 44 view .LVU7136
 25252 004e 0469     		ldr	r4, [r0, #16]
 25253              	.LVL3176:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25254              		.loc 1 11632 36 view .LVU7137
 25255 0050 0123     		movs	r3, #1
 25256 0052 0DF10702 		add	r2, sp, #7
 25257 0056 0821     		movs	r1, #8
 25258 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25259 005a A047     		blx	r4
 25260              	.LVL3177:
11636:Core/Src/bno055.c ****                         {
 25261              		.loc 1 11636 25 is_stmt 1 view .LVU7138
11636:Core/Src/bno055.c ****                         {
 25262              		.loc 1 11636 28 is_stmt 0 view .LVU7139
 25263 005c 0446     		mov	r4, r0
 25264 005e B0B9     		cbnz	r0, .L1704
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25265              		.loc 1 11638 29 is_stmt 1 view .LVU7140
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25266              		.loc 1 11638 40 is_stmt 0 view .LVU7141
 25267 0060 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25268 0064 03F01F03 		and	r3, r3, #31
 25269 0068 43EA4513 		orr	r3, r3, r5, lsl #5
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25270              		.loc 1 11638 38 view .LVU7142
 25271 006c 8DF80730 		strb	r3, [sp, #7]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25272              		.loc 1 11639 29 is_stmt 1 view .LVU7143
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25273              		.loc 1 11639 49 is_stmt 0 view .LVU7144
 25274 0070 114B     		ldr	r3, .L1715
 25275 0072 1868     		ldr	r0, [r3]
 25276              	.LVL3178:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25277              		.loc 1 11639 49 view .LVU7145
 25278 0074 C568     		ldr	r5, [r0, #12]
ARM GAS  /tmp/cc9kYR4Z.s 			page 703


11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25279              		.loc 1 11639 41 view .LVU7146
 25280 0076 0123     		movs	r3, #1
 25281 0078 0DF10702 		add	r2, sp, #7
 25282 007c 0821     		movs	r1, #8
 25283 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25284 0080 A847     		blx	r5
 25285              	.LVL3179:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25286              		.loc 1 11639 38 view .LVU7147
 25287 0082 54FA80F0 		uxtab	r0, r4, r0
 25288 0086 44B2     		sxtb	r4, r0
 25289              	.LVL3180:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25290              		.loc 1 11639 38 view .LVU7148
 25291 0088 01E0     		b	.L1704
 25292              	.LVL3181:
 25293              	.L1707:
11658:Core/Src/bno055.c ****             }
11659:Core/Src/bno055.c ****         }
11660:Core/Src/bno055.c ****         else
11661:Core/Src/bno055.c ****         {
11662:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25294              		.loc 1 11662 22 view .LVU7149
 25295 008a 4FF0FF34 		mov	r4, #-1
 25296              	.LVL3182:
 25297              	.L1704:
11663:Core/Src/bno055.c ****         }
11664:Core/Src/bno055.c ****     }
11665:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25298              		.loc 1 11665 5 is_stmt 1 view .LVU7150
 25299              		.loc 1 11665 24 is_stmt 0 view .LVU7151
 25300 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25301              		.loc 1 11665 8 view .LVU7152
 25302 0092 40B9     		cbnz	r0, .L1714
 25303              	.LVL3183:
 25304              	.L1703:
11666:Core/Src/bno055.c ****     {
11667:Core/Src/bno055.c ****         /* set the operation mode of
11668:Core/Src/bno055.c ****          * previous operation mode*/
11669:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11670:Core/Src/bno055.c ****     }
11671:Core/Src/bno055.c **** 
11672:Core/Src/bno055.c ****     return com_rslt;
11673:Core/Src/bno055.c **** }
 25305              		.loc 1 11673 1 view .LVU7153
 25306 0094 2046     		mov	r0, r4
 25307 0096 03B0     		add	sp, sp, #12
 25308              	.LCFI715:
 25309              		.cfi_remember_state
 25310              		.cfi_def_cfa_offset 12
 25311              		@ sp needed
 25312 0098 30BD     		pop	{r4, r5, pc}
 25313              	.LVL3184:
 25314              	.L1709:
 25315              	.LCFI716:
 25316              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 704


11652:Core/Src/bno055.c ****                 }
 25317              		.loc 1 11652 30 view .LVU7154
 25318 009a 4FF0FF34 		mov	r4, #-1
 25319              	.LVL3185:
11652:Core/Src/bno055.c ****                 }
 25320              		.loc 1 11652 30 view .LVU7155
 25321 009e F6E7     		b	.L1704
 25322              	.LVL3186:
 25323              	.L1710:
11647:Core/Src/bno055.c ****                     }
 25324              		.loc 1 11647 34 view .LVU7156
 25325 00a0 6FF00104 		mvn	r4, #1
 25326              	.LVL3187:
11647:Core/Src/bno055.c ****                     }
 25327              		.loc 1 11647 34 view .LVU7157
 25328 00a4 F3E7     		b	.L1704
 25329              	.LVL3188:
 25330              	.L1714:
11669:Core/Src/bno055.c ****     }
 25331              		.loc 1 11669 9 is_stmt 1 view .LVU7158
11669:Core/Src/bno055.c ****     }
 25332              		.loc 1 11669 21 is_stmt 0 view .LVU7159
 25333 00a6 FFF7FEFF 		bl	bno055_set_operation_mode
 25334              	.LVL3189:
11669:Core/Src/bno055.c ****     }
 25335              		.loc 1 11669 18 view .LVU7160
 25336 00aa 54FA80F0 		uxtab	r0, r4, r0
 25337 00ae 44B2     		sxtb	r4, r0
 25338              	.LVL3190:
11669:Core/Src/bno055.c ****     }
 25339              		.loc 1 11669 18 view .LVU7161
 25340 00b0 F0E7     		b	.L1703
 25341              	.LVL3191:
 25342              	.L1706:
11609:Core/Src/bno055.c ****     }
 25343              		.loc 1 11609 16 view .LVU7162
 25344 00b2 6FF07E04 		mvn	r4, #126
 25345 00b6 EDE7     		b	.L1703
 25346              	.L1716:
 25347              		.align	2
 25348              	.L1715:
 25349 00b8 00000000 		.word	.LANCHOR0
 25350              		.cfi_endproc
 25351              	.LFE180:
 25353              		.section	.text.bno055_get_mag_data_output_rate,"ax",%progbits
 25354              		.align	1
 25355              		.global	bno055_get_mag_data_output_rate
 25356              		.syntax unified
 25357              		.thumb
 25358              		.thumb_func
 25360              	bno055_get_mag_data_output_rate:
 25361              	.LVL3192:
 25362              	.LFB181:
11674:Core/Src/bno055.c **** 
11675:Core/Src/bno055.c **** /*!
11676:Core/Src/bno055.c ****  *  @brief This API used to read the mag output data rate
11677:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
ARM GAS  /tmp/cc9kYR4Z.s 			page 705


11678:Core/Src/bno055.c ****  *
11679:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11680:Core/Src/bno055.c ****  *
11681:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11682:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11683:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11684:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11685:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11686:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11687:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11688:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11689:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11690:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11691:Core/Src/bno055.c ****  *
11692:Core/Src/bno055.c ****  *  @return results of bus communication function
11693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11695:Core/Src/bno055.c ****  *
11696:Core/Src/bno055.c ****  *
11697:Core/Src/bno055.c ****  */
11698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_data_output_rate(u8 *mag_data_output_rate_u8)
11699:Core/Src/bno055.c **** {
 25363              		.loc 1 11699 1 is_stmt 1 view -0
 25364              		.cfi_startproc
 25365              		@ args = 0, pretend = 0, frame = 8
 25366              		@ frame_needed = 0, uses_anonymous_args = 0
 25367              		.loc 1 11699 1 is_stmt 0 view .LVU7164
 25368 0000 30B5     		push	{r4, r5, lr}
 25369              	.LCFI717:
 25370              		.cfi_def_cfa_offset 12
 25371              		.cfi_offset 4, -12
 25372              		.cfi_offset 5, -8
 25373              		.cfi_offset 14, -4
 25374 0002 83B0     		sub	sp, sp, #12
 25375              	.LCFI718:
 25376              		.cfi_def_cfa_offset 24
11700:Core/Src/bno055.c ****     /* Variable used to return value of
11701:Core/Src/bno055.c ****      * communication routine*/
11702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25377              		.loc 1 11702 5 is_stmt 1 view .LVU7165
 25378              	.LVL3193:
11703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25379              		.loc 1 11703 5 view .LVU7166
 25380              		.loc 1 11703 8 is_stmt 0 view .LVU7167
 25381 0004 0023     		movs	r3, #0
 25382 0006 8DF80730 		strb	r3, [sp, #7]
11704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25383              		.loc 1 11704 5 is_stmt 1 view .LVU7168
 25384              	.LVL3194:
11705:Core/Src/bno055.c **** 
11706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25385              		.loc 1 11707 5 view .LVU7169
 25386              		.loc 1 11707 18 is_stmt 0 view .LVU7170
 25387 000a 144B     		ldr	r3, .L1725
 25388 000c 1B68     		ldr	r3, [r3]
 25389              		.loc 1 11707 8 view .LVU7171
ARM GAS  /tmp/cc9kYR4Z.s 			page 706


 25390 000e F3B1     		cbz	r3, .L1721
 25391 0010 0446     		mov	r4, r0
11708:Core/Src/bno055.c ****     {
11709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11710:Core/Src/bno055.c ****     }
11711:Core/Src/bno055.c ****     else
11712:Core/Src/bno055.c ****     {
11713:Core/Src/bno055.c ****         /*condition check for page, output data rate
11714:Core/Src/bno055.c ****          * available in the page one*/
11715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25392              		.loc 1 11715 9 is_stmt 1 view .LVU7172
 25393              		.loc 1 11715 21 is_stmt 0 view .LVU7173
 25394 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25395              		.loc 1 11715 12 view .LVU7174
 25396 0014 012B     		cmp	r3, #1
 25397 0016 14D1     		bne	.L1724
 25398              	.LVL3195:
 25399              	.L1719:
11716:Core/Src/bno055.c ****         {
11717:Core/Src/bno055.c ****             /* Write page as one */
11718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11719:Core/Src/bno055.c ****         }
11720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25400              		.loc 1 11720 53 discriminator 1 view .LVU7175
 25401 0018 104B     		ldr	r3, .L1725
 25402 001a 1B68     		ldr	r3, [r3]
 25403 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25404              		.loc 1 11720 41 discriminator 1 view .LVU7176
 25405 001e 012B     		cmp	r3, #1
 25406 0020 18D1     		bne	.L1722
 25407              	.L1720:
11721:Core/Src/bno055.c ****         {
11722:Core/Src/bno055.c ****             /* Read the mag output data rate*/
11723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25408              		.loc 1 11723 13 is_stmt 1 view .LVU7177
 25409              		.loc 1 11723 32 is_stmt 0 view .LVU7178
 25410 0022 0E4B     		ldr	r3, .L1725
 25411 0024 1868     		ldr	r0, [r3]
 25412 0026 0569     		ldr	r5, [r0, #16]
 25413              		.loc 1 11723 24 view .LVU7179
 25414 0028 0123     		movs	r3, #1
 25415 002a 0DF10702 		add	r2, sp, #7
 25416 002e 0921     		movs	r1, #9
 25417 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25418 0032 A847     		blx	r5
 25419              	.LVL3196:
11724:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_OUTPUT_RATE_REG,
11725:Core/Src/bno055.c ****                                                       &data_u8r,
11726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11727:Core/Src/bno055.c ****             *mag_data_output_rate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_DATA_OUTPUT_RATE);
 25420              		.loc 1 11727 13 is_stmt 1 view .LVU7180
 25421              		.loc 1 11727 40 is_stmt 0 view .LVU7181
 25422 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25423 0038 03F00703 		and	r3, r3, #7
 25424              		.loc 1 11727 38 view .LVU7182
 25425 003c 2370     		strb	r3, [r4]
 25426              	.LVL3197:
ARM GAS  /tmp/cc9kYR4Z.s 			page 707


 25427              	.L1718:
11728:Core/Src/bno055.c ****         }
11729:Core/Src/bno055.c ****         else
11730:Core/Src/bno055.c ****         {
11731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11732:Core/Src/bno055.c ****         }
11733:Core/Src/bno055.c ****     }
11734:Core/Src/bno055.c **** 
11735:Core/Src/bno055.c ****     return com_rslt;
11736:Core/Src/bno055.c **** }
 25428              		.loc 1 11736 1 view .LVU7183
 25429 003e 03B0     		add	sp, sp, #12
 25430              	.LCFI719:
 25431              		.cfi_remember_state
 25432              		.cfi_def_cfa_offset 12
 25433              		@ sp needed
 25434 0040 30BD     		pop	{r4, r5, pc}
 25435              	.LVL3198:
 25436              	.L1724:
 25437              	.LCFI720:
 25438              		.cfi_restore_state
11718:Core/Src/bno055.c ****         }
 25439              		.loc 1 11718 13 is_stmt 1 view .LVU7184
11718:Core/Src/bno055.c ****         }
 25440              		.loc 1 11718 23 is_stmt 0 view .LVU7185
 25441 0042 0120     		movs	r0, #1
 25442              	.LVL3199:
11718:Core/Src/bno055.c ****         }
 25443              		.loc 1 11718 23 view .LVU7186
 25444 0044 FFF7FEFF 		bl	bno055_write_page_id
 25445              	.LVL3200:
11720:Core/Src/bno055.c ****         {
 25446              		.loc 1 11720 9 is_stmt 1 view .LVU7187
11720:Core/Src/bno055.c ****         {
 25447              		.loc 1 11720 12 is_stmt 0 view .LVU7188
 25448 0048 0028     		cmp	r0, #0
 25449 004a EAD0     		beq	.L1720
 25450 004c E4E7     		b	.L1719
 25451              	.LVL3201:
 25452              	.L1721:
11709:Core/Src/bno055.c ****     }
 25453              		.loc 1 11709 16 view .LVU7189
 25454 004e 6FF07E00 		mvn	r0, #126
 25455              	.LVL3202:
11709:Core/Src/bno055.c ****     }
 25456              		.loc 1 11709 16 view .LVU7190
 25457 0052 F4E7     		b	.L1718
 25458              	.LVL3203:
 25459              	.L1722:
11731:Core/Src/bno055.c ****         }
 25460              		.loc 1 11731 22 view .LVU7191
 25461 0054 4FF0FF30 		mov	r0, #-1
 25462 0058 F1E7     		b	.L1718
 25463              	.L1726:
 25464 005a 00BF     		.align	2
 25465              	.L1725:
 25466 005c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cc9kYR4Z.s 			page 708


 25467              		.cfi_endproc
 25468              	.LFE181:
 25470              		.section	.text.bno055_set_mag_data_output_rate,"ax",%progbits
 25471              		.align	1
 25472              		.global	bno055_set_mag_data_output_rate
 25473              		.syntax unified
 25474              		.thumb
 25475              		.thumb_func
 25477              	bno055_set_mag_data_output_rate:
 25478              	.LVL3204:
 25479              	.LFB182:
11737:Core/Src/bno055.c **** 
11738:Core/Src/bno055.c **** /*!
11739:Core/Src/bno055.c ****  *  @brief This API used to write the mag output data rate
11740:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11741:Core/Src/bno055.c ****  *
11742:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11743:Core/Src/bno055.c ****  *
11744:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11745:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11746:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11747:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11748:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11749:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11750:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11751:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11752:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11753:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11754:Core/Src/bno055.c ****  *
11755:Core/Src/bno055.c ****  *  @return results of bus communication function
11756:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11757:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11758:Core/Src/bno055.c ****  *
11759:Core/Src/bno055.c ****  *
11760:Core/Src/bno055.c ****  */
11761:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_data_output_rate(u8 mag_data_output_rate_u8)
11762:Core/Src/bno055.c **** {
 25480              		.loc 1 11762 1 is_stmt 1 view -0
 25481              		.cfi_startproc
 25482              		@ args = 0, pretend = 0, frame = 8
 25483              		@ frame_needed = 0, uses_anonymous_args = 0
 25484              		.loc 1 11762 1 is_stmt 0 view .LVU7193
 25485 0000 30B5     		push	{r4, r5, lr}
 25486              	.LCFI721:
 25487              		.cfi_def_cfa_offset 12
 25488              		.cfi_offset 4, -12
 25489              		.cfi_offset 5, -8
 25490              		.cfi_offset 14, -4
 25491 0002 83B0     		sub	sp, sp, #12
 25492              	.LCFI722:
 25493              		.cfi_def_cfa_offset 24
11763:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25494              		.loc 1 11763 5 is_stmt 1 view .LVU7194
 25495              	.LVL3205:
11764:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25496              		.loc 1 11764 5 view .LVU7195
 25497              		.loc 1 11764 8 is_stmt 0 view .LVU7196
ARM GAS  /tmp/cc9kYR4Z.s 			page 709


 25498 0004 0023     		movs	r3, #0
 25499 0006 8DF80730 		strb	r3, [sp, #7]
11765:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25500              		.loc 1 11765 5 is_stmt 1 view .LVU7197
 25501              	.LVL3206:
11766:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25502              		.loc 1 11766 5 view .LVU7198
11767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25503              		.loc 1 11767 5 view .LVU7199
 25504              		.loc 1 11767 8 is_stmt 0 view .LVU7200
 25505 000a 8DF80630 		strb	r3, [sp, #6]
11768:Core/Src/bno055.c **** 
11769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25506              		.loc 1 11770 5 is_stmt 1 view .LVU7201
 25507              		.loc 1 11770 18 is_stmt 0 view .LVU7202
 25508 000e 2C4B     		ldr	r3, .L1740
 25509 0010 1B68     		ldr	r3, [r3]
 25510              		.loc 1 11770 8 view .LVU7203
 25511 0012 002B     		cmp	r3, #0
 25512 0014 50D0     		beq	.L1731
 25513 0016 0546     		mov	r5, r0
11771:Core/Src/bno055.c ****     {
11772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11773:Core/Src/bno055.c ****     }
11774:Core/Src/bno055.c ****     else
11775:Core/Src/bno055.c ****     {
11776:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11777:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11778:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11779:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25514              		.loc 1 11779 9 is_stmt 1 view .LVU7204
 25515              		.loc 1 11779 19 is_stmt 0 view .LVU7205
 25516 0018 0DF10600 		add	r0, sp, #6
 25517              	.LVL3207:
 25518              		.loc 1 11779 19 view .LVU7206
 25519 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25520              	.LVL3208:
11780:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25521              		.loc 1 11780 9 is_stmt 1 view .LVU7207
 25522              		.loc 1 11780 12 is_stmt 0 view .LVU7208
 25523 0020 0446     		mov	r4, r0
 25524 0022 0028     		cmp	r0, #0
 25525 0024 34D1     		bne	.L1732
11781:Core/Src/bno055.c ****         {
11782:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25526              		.loc 1 11782 13 is_stmt 1 view .LVU7209
 25527              		.loc 1 11782 32 is_stmt 0 view .LVU7210
 25528 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25529              		.loc 1 11782 16 view .LVU7211
 25530 002a 1BB9     		cbnz	r3, .L1737
 25531              	.LVL3209:
 25532              	.L1730:
11783:Core/Src/bno055.c ****             {
11784:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11785:Core/Src/bno055.c ****             }
11786:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 710


 25533              		.loc 1 11786 13 is_stmt 1 view .LVU7212
 25534              		.loc 1 11786 16 is_stmt 0 view .LVU7213
 25535 002c 44B1     		cbz	r4, .L1738
11787:Core/Src/bno055.c ****             {
11788:Core/Src/bno055.c ****                 /* Write page as one */
11789:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11790:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11791:Core/Src/bno055.c ****                 {
11792:Core/Src/bno055.c ****                     if (mag_data_output_rate_u8 < BNO055_MAG_OUTPUT_RANGE)
11793:Core/Src/bno055.c ****                     {
11794:Core/Src/bno055.c ****                         /* Write the value of
11795:Core/Src/bno055.c ****                          * mag output data rate*/
11796:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11797:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
11798:Core/Src/bno055.c ****                                                                   &data_u8r,
11799:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11800:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11801:Core/Src/bno055.c ****                         {
11802:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r,
11803:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
11804:Core/Src/bno055.c ****                                                            mag_data_output_rate_u8);
11805:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11806:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
11807:Core/Src/bno055.c ****                                                                         &data_u8r,
11808:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11809:Core/Src/bno055.c ****                         }
11810:Core/Src/bno055.c ****                     }
11811:Core/Src/bno055.c ****                     else
11812:Core/Src/bno055.c ****                     {
11813:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11814:Core/Src/bno055.c ****                     }
11815:Core/Src/bno055.c ****                 }
11816:Core/Src/bno055.c ****                 else
11817:Core/Src/bno055.c ****                 {
11818:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11819:Core/Src/bno055.c ****                 }
11820:Core/Src/bno055.c ****             }
11821:Core/Src/bno055.c ****             else
11822:Core/Src/bno055.c ****             {
11823:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25536              		.loc 1 11823 26 view .LVU7214
 25537 002e 4FF0FF34 		mov	r4, #-1
 25538              	.LVL3210:
 25539              		.loc 1 11823 26 view .LVU7215
 25540 0032 2FE0     		b	.L1729
 25541              	.LVL3211:
 25542              	.L1737:
11784:Core/Src/bno055.c ****             }
 25543              		.loc 1 11784 17 is_stmt 1 view .LVU7216
11784:Core/Src/bno055.c ****             }
 25544              		.loc 1 11784 28 is_stmt 0 view .LVU7217
 25545 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25546              	.LVL3212:
11784:Core/Src/bno055.c ****             }
 25547              		.loc 1 11784 25 view .LVU7218
 25548 0038 54FA80F4 		uxtab	r4, r4, r0
 25549 003c 64B2     		sxtb	r4, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 711


 25550              	.LVL3213:
11784:Core/Src/bno055.c ****             }
 25551              		.loc 1 11784 25 view .LVU7219
 25552 003e F5E7     		b	.L1730
 25553              	.L1738:
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25554              		.loc 1 11789 17 is_stmt 1 view .LVU7220
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25555              		.loc 1 11789 30 is_stmt 0 view .LVU7221
 25556 0040 0120     		movs	r0, #1
 25557 0042 FFF7FEFF 		bl	bno055_write_page_id
 25558              	.LVL3214:
11790:Core/Src/bno055.c ****                 {
 25559              		.loc 1 11790 17 is_stmt 1 view .LVU7222
11790:Core/Src/bno055.c ****                 {
 25560              		.loc 1 11790 20 is_stmt 0 view .LVU7223
 25561 0046 58BB     		cbnz	r0, .L1734
11792:Core/Src/bno055.c ****                     {
 25562              		.loc 1 11792 21 is_stmt 1 view .LVU7224
11792:Core/Src/bno055.c ****                     {
 25563              		.loc 1 11792 24 is_stmt 0 view .LVU7225
 25564 0048 072D     		cmp	r5, #7
 25565 004a 2CD8     		bhi	.L1735
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25566              		.loc 1 11796 25 is_stmt 1 view .LVU7226
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25567              		.loc 1 11796 44 is_stmt 0 view .LVU7227
 25568 004c 1C4B     		ldr	r3, .L1740
 25569 004e 1868     		ldr	r0, [r3]
 25570              	.LVL3215:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25571              		.loc 1 11796 44 view .LVU7228
 25572 0050 0469     		ldr	r4, [r0, #16]
 25573              	.LVL3216:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25574              		.loc 1 11796 36 view .LVU7229
 25575 0052 0123     		movs	r3, #1
 25576 0054 0DF10702 		add	r2, sp, #7
 25577 0058 0921     		movs	r1, #9
 25578 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25579 005c A047     		blx	r4
 25580              	.LVL3217:
11800:Core/Src/bno055.c ****                         {
 25581              		.loc 1 11800 25 is_stmt 1 view .LVU7230
11800:Core/Src/bno055.c ****                         {
 25582              		.loc 1 11800 28 is_stmt 0 view .LVU7231
 25583 005e 0446     		mov	r4, r0
 25584 0060 C0B9     		cbnz	r0, .L1729
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25585              		.loc 1 11802 29 is_stmt 1 view .LVU7232
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25586              		.loc 1 11802 40 is_stmt 0 view .LVU7233
 25587 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25588 0066 23F00703 		bic	r3, r3, #7
 25589 006a 5BB2     		sxtb	r3, r3
 25590 006c 05F00700 		and	r0, r5, #7
 25591              	.LVL3218:
ARM GAS  /tmp/cc9kYR4Z.s 			page 712


11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25592              		.loc 1 11802 40 view .LVU7234
 25593 0070 0343     		orrs	r3, r3, r0
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25594              		.loc 1 11802 38 view .LVU7235
 25595 0072 8DF80730 		strb	r3, [sp, #7]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25596              		.loc 1 11805 29 is_stmt 1 view .LVU7236
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25597              		.loc 1 11805 49 is_stmt 0 view .LVU7237
 25598 0076 124B     		ldr	r3, .L1740
 25599 0078 1868     		ldr	r0, [r3]
 25600 007a C568     		ldr	r5, [r0, #12]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25601              		.loc 1 11805 41 view .LVU7238
 25602 007c 0123     		movs	r3, #1
 25603 007e 0DF10702 		add	r2, sp, #7
 25604 0082 0921     		movs	r1, #9
 25605 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25606 0086 A847     		blx	r5
 25607              	.LVL3219:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25608              		.loc 1 11805 38 view .LVU7239
 25609 0088 54FA80F0 		uxtab	r0, r4, r0
 25610 008c 44B2     		sxtb	r4, r0
 25611              	.LVL3220:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25612              		.loc 1 11805 38 view .LVU7240
 25613 008e 01E0     		b	.L1729
 25614              	.LVL3221:
 25615              	.L1732:
11824:Core/Src/bno055.c ****             }
11825:Core/Src/bno055.c ****         }
11826:Core/Src/bno055.c ****         else
11827:Core/Src/bno055.c ****         {
11828:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25616              		.loc 1 11828 22 view .LVU7241
 25617 0090 4FF0FF34 		mov	r4, #-1
 25618              	.LVL3222:
 25619              	.L1729:
11829:Core/Src/bno055.c ****         }
11830:Core/Src/bno055.c ****     }
11831:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25620              		.loc 1 11831 5 is_stmt 1 view .LVU7242
 25621              		.loc 1 11831 24 is_stmt 0 view .LVU7243
 25622 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25623              		.loc 1 11831 8 view .LVU7244
 25624 0098 40B9     		cbnz	r0, .L1739
 25625              	.LVL3223:
 25626              	.L1728:
11832:Core/Src/bno055.c ****     {
11833:Core/Src/bno055.c ****         /* set the operation mode of
11834:Core/Src/bno055.c ****          * previous operation mode*/
11835:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11836:Core/Src/bno055.c ****     }
11837:Core/Src/bno055.c **** 
11838:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 713


11839:Core/Src/bno055.c **** }
 25627              		.loc 1 11839 1 view .LVU7245
 25628 009a 2046     		mov	r0, r4
 25629 009c 03B0     		add	sp, sp, #12
 25630              	.LCFI723:
 25631              		.cfi_remember_state
 25632              		.cfi_def_cfa_offset 12
 25633              		@ sp needed
 25634 009e 30BD     		pop	{r4, r5, pc}
 25635              	.LVL3224:
 25636              	.L1734:
 25637              	.LCFI724:
 25638              		.cfi_restore_state
11818:Core/Src/bno055.c ****                 }
 25639              		.loc 1 11818 30 view .LVU7246
 25640 00a0 4FF0FF34 		mov	r4, #-1
 25641              	.LVL3225:
11818:Core/Src/bno055.c ****                 }
 25642              		.loc 1 11818 30 view .LVU7247
 25643 00a4 F6E7     		b	.L1729
 25644              	.LVL3226:
 25645              	.L1735:
11813:Core/Src/bno055.c ****                     }
 25646              		.loc 1 11813 34 view .LVU7248
 25647 00a6 6FF00104 		mvn	r4, #1
 25648              	.LVL3227:
11813:Core/Src/bno055.c ****                     }
 25649              		.loc 1 11813 34 view .LVU7249
 25650 00aa F3E7     		b	.L1729
 25651              	.LVL3228:
 25652              	.L1739:
11835:Core/Src/bno055.c ****     }
 25653              		.loc 1 11835 9 is_stmt 1 view .LVU7250
11835:Core/Src/bno055.c ****     }
 25654              		.loc 1 11835 21 is_stmt 0 view .LVU7251
 25655 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 25656              	.LVL3229:
11835:Core/Src/bno055.c ****     }
 25657              		.loc 1 11835 18 view .LVU7252
 25658 00b0 54FA80F0 		uxtab	r0, r4, r0
 25659 00b4 44B2     		sxtb	r4, r0
 25660              	.LVL3230:
11835:Core/Src/bno055.c ****     }
 25661              		.loc 1 11835 18 view .LVU7253
 25662 00b6 F0E7     		b	.L1728
 25663              	.LVL3231:
 25664              	.L1731:
11772:Core/Src/bno055.c ****     }
 25665              		.loc 1 11772 16 view .LVU7254
 25666 00b8 6FF07E04 		mvn	r4, #126
 25667 00bc EDE7     		b	.L1728
 25668              	.L1741:
 25669 00be 00BF     		.align	2
 25670              	.L1740:
 25671 00c0 00000000 		.word	.LANCHOR0
 25672              		.cfi_endproc
 25673              	.LFE182:
ARM GAS  /tmp/cc9kYR4Z.s 			page 714


 25675              		.section	.text.bno055_get_mag_operation_mode,"ax",%progbits
 25676              		.align	1
 25677              		.global	bno055_get_mag_operation_mode
 25678              		.syntax unified
 25679              		.thumb
 25680              		.thumb_func
 25682              	bno055_get_mag_operation_mode:
 25683              	.LVL3232:
 25684              	.LFB183:
11840:Core/Src/bno055.c **** 
11841:Core/Src/bno055.c **** /*!
11842:Core/Src/bno055.c ****  *  @brief This API used to read the mag operation mode
11843:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11844:Core/Src/bno055.c ****  *
11845:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11846:Core/Src/bno055.c ****  *
11847:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11848:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11849:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11850:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11851:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11852:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11853:Core/Src/bno055.c ****  *
11854:Core/Src/bno055.c ****  *  @return results of bus communication function
11855:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11856:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11857:Core/Src/bno055.c ****  *
11858:Core/Src/bno055.c ****  *
11859:Core/Src/bno055.c ****  */
11860:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_operation_mode(u8 *mag_operation_mode_u8)
11861:Core/Src/bno055.c **** {
 25685              		.loc 1 11861 1 is_stmt 1 view -0
 25686              		.cfi_startproc
 25687              		@ args = 0, pretend = 0, frame = 8
 25688              		@ frame_needed = 0, uses_anonymous_args = 0
 25689              		.loc 1 11861 1 is_stmt 0 view .LVU7256
 25690 0000 30B5     		push	{r4, r5, lr}
 25691              	.LCFI725:
 25692              		.cfi_def_cfa_offset 12
 25693              		.cfi_offset 4, -12
 25694              		.cfi_offset 5, -8
 25695              		.cfi_offset 14, -4
 25696 0002 83B0     		sub	sp, sp, #12
 25697              	.LCFI726:
 25698              		.cfi_def_cfa_offset 24
11862:Core/Src/bno055.c ****     /* Variable used to return value of
11863:Core/Src/bno055.c ****      * communication routine*/
11864:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25699              		.loc 1 11864 5 is_stmt 1 view .LVU7257
 25700              	.LVL3233:
11865:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25701              		.loc 1 11865 5 view .LVU7258
 25702              		.loc 1 11865 8 is_stmt 0 view .LVU7259
 25703 0004 0023     		movs	r3, #0
 25704 0006 8DF80730 		strb	r3, [sp, #7]
11866:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25705              		.loc 1 11866 5 is_stmt 1 view .LVU7260
ARM GAS  /tmp/cc9kYR4Z.s 			page 715


 25706              	.LVL3234:
11867:Core/Src/bno055.c **** 
11868:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11869:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25707              		.loc 1 11869 5 view .LVU7261
 25708              		.loc 1 11869 18 is_stmt 0 view .LVU7262
 25709 000a 144B     		ldr	r3, .L1750
 25710 000c 1B68     		ldr	r3, [r3]
 25711              		.loc 1 11869 8 view .LVU7263
 25712 000e F3B1     		cbz	r3, .L1746
 25713 0010 0446     		mov	r4, r0
11870:Core/Src/bno055.c ****     {
11871:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11872:Core/Src/bno055.c ****     }
11873:Core/Src/bno055.c ****     else
11874:Core/Src/bno055.c ****     {
11875:Core/Src/bno055.c ****         /*condition check for page, mag operation mode is
11876:Core/Src/bno055.c ****          * available in the page one*/
11877:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25714              		.loc 1 11877 9 is_stmt 1 view .LVU7264
 25715              		.loc 1 11877 21 is_stmt 0 view .LVU7265
 25716 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25717              		.loc 1 11877 12 view .LVU7266
 25718 0014 012B     		cmp	r3, #1
 25719 0016 14D1     		bne	.L1749
 25720              	.LVL3235:
 25721              	.L1744:
11878:Core/Src/bno055.c ****         {
11879:Core/Src/bno055.c ****             /* Write page as one */
11880:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11881:Core/Src/bno055.c ****         }
11882:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25722              		.loc 1 11882 53 discriminator 1 view .LVU7267
 25723 0018 104B     		ldr	r3, .L1750
 25724 001a 1B68     		ldr	r3, [r3]
 25725 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25726              		.loc 1 11882 41 discriminator 1 view .LVU7268
 25727 001e 012B     		cmp	r3, #1
 25728 0020 18D1     		bne	.L1747
 25729              	.L1745:
11883:Core/Src/bno055.c ****         {
11884:Core/Src/bno055.c ****             /* Read the value of mag operation mode*/
11885:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25730              		.loc 1 11885 13 is_stmt 1 view .LVU7269
 25731              		.loc 1 11885 32 is_stmt 0 view .LVU7270
 25732 0022 0E4B     		ldr	r3, .L1750
 25733 0024 1868     		ldr	r0, [r3]
 25734 0026 0569     		ldr	r5, [r0, #16]
 25735              		.loc 1 11885 24 view .LVU7271
 25736 0028 0123     		movs	r3, #1
 25737 002a 0DF10702 		add	r2, sp, #7
 25738 002e 0921     		movs	r1, #9
 25739 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25740 0032 A847     		blx	r5
 25741              	.LVL3236:
11886:Core/Src/bno055.c ****                                                       BNO055_MAG_OPERATION_MODE_REG,
11887:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/cc9kYR4Z.s 			page 716


11888:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11889:Core/Src/bno055.c ****             *mag_operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE);
 25742              		.loc 1 11889 13 is_stmt 1 view .LVU7272
 25743              		.loc 1 11889 38 is_stmt 0 view .LVU7273
 25744 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25745 0038 C3F3C103 		ubfx	r3, r3, #3, #2
 25746              		.loc 1 11889 36 view .LVU7274
 25747 003c 2370     		strb	r3, [r4]
 25748              	.LVL3237:
 25749              	.L1743:
11890:Core/Src/bno055.c ****         }
11891:Core/Src/bno055.c ****         else
11892:Core/Src/bno055.c ****         {
11893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11894:Core/Src/bno055.c ****         }
11895:Core/Src/bno055.c ****     }
11896:Core/Src/bno055.c **** 
11897:Core/Src/bno055.c ****     return com_rslt;
11898:Core/Src/bno055.c **** }
 25750              		.loc 1 11898 1 view .LVU7275
 25751 003e 03B0     		add	sp, sp, #12
 25752              	.LCFI727:
 25753              		.cfi_remember_state
 25754              		.cfi_def_cfa_offset 12
 25755              		@ sp needed
 25756 0040 30BD     		pop	{r4, r5, pc}
 25757              	.LVL3238:
 25758              	.L1749:
 25759              	.LCFI728:
 25760              		.cfi_restore_state
11880:Core/Src/bno055.c ****         }
 25761              		.loc 1 11880 13 is_stmt 1 view .LVU7276
11880:Core/Src/bno055.c ****         }
 25762              		.loc 1 11880 23 is_stmt 0 view .LVU7277
 25763 0042 0120     		movs	r0, #1
 25764              	.LVL3239:
11880:Core/Src/bno055.c ****         }
 25765              		.loc 1 11880 23 view .LVU7278
 25766 0044 FFF7FEFF 		bl	bno055_write_page_id
 25767              	.LVL3240:
11882:Core/Src/bno055.c ****         {
 25768              		.loc 1 11882 9 is_stmt 1 view .LVU7279
11882:Core/Src/bno055.c ****         {
 25769              		.loc 1 11882 12 is_stmt 0 view .LVU7280
 25770 0048 0028     		cmp	r0, #0
 25771 004a EAD0     		beq	.L1745
 25772 004c E4E7     		b	.L1744
 25773              	.LVL3241:
 25774              	.L1746:
11871:Core/Src/bno055.c ****     }
 25775              		.loc 1 11871 16 view .LVU7281
 25776 004e 6FF07E00 		mvn	r0, #126
 25777              	.LVL3242:
11871:Core/Src/bno055.c ****     }
 25778              		.loc 1 11871 16 view .LVU7282
 25779 0052 F4E7     		b	.L1743
 25780              	.LVL3243:
ARM GAS  /tmp/cc9kYR4Z.s 			page 717


 25781              	.L1747:
11893:Core/Src/bno055.c ****         }
 25782              		.loc 1 11893 22 view .LVU7283
 25783 0054 4FF0FF30 		mov	r0, #-1
 25784 0058 F1E7     		b	.L1743
 25785              	.L1751:
 25786 005a 00BF     		.align	2
 25787              	.L1750:
 25788 005c 00000000 		.word	.LANCHOR0
 25789              		.cfi_endproc
 25790              	.LFE183:
 25792              		.section	.text.bno055_set_mag_operation_mode,"ax",%progbits
 25793              		.align	1
 25794              		.global	bno055_set_mag_operation_mode
 25795              		.syntax unified
 25796              		.thumb
 25797              		.thumb_func
 25799              	bno055_set_mag_operation_mode:
 25800              	.LVL3244:
 25801              	.LFB184:
11899:Core/Src/bno055.c **** 
11900:Core/Src/bno055.c **** /*!
11901:Core/Src/bno055.c ****  *  @brief This API used to write the mag operation mode
11902:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11903:Core/Src/bno055.c ****  *
11904:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11905:Core/Src/bno055.c ****  *
11906:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11907:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11908:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11909:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11910:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11911:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11912:Core/Src/bno055.c ****  *
11913:Core/Src/bno055.c ****  *  @return results of bus communication function
11914:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11915:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11916:Core/Src/bno055.c ****  *
11917:Core/Src/bno055.c ****  *
11918:Core/Src/bno055.c ****  */
11919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_operation_mode(u8 mag_operation_mode_u8)
11920:Core/Src/bno055.c **** {
 25802              		.loc 1 11920 1 is_stmt 1 view -0
 25803              		.cfi_startproc
 25804              		@ args = 0, pretend = 0, frame = 8
 25805              		@ frame_needed = 0, uses_anonymous_args = 0
 25806              		.loc 1 11920 1 is_stmt 0 view .LVU7285
 25807 0000 30B5     		push	{r4, r5, lr}
 25808              	.LCFI729:
 25809              		.cfi_def_cfa_offset 12
 25810              		.cfi_offset 4, -12
 25811              		.cfi_offset 5, -8
 25812              		.cfi_offset 14, -4
 25813 0002 83B0     		sub	sp, sp, #12
 25814              	.LCFI730:
 25815              		.cfi_def_cfa_offset 24
11921:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 718


 25816              		.loc 1 11921 5 is_stmt 1 view .LVU7286
 25817              	.LVL3245:
11922:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25818              		.loc 1 11922 5 view .LVU7287
 25819              		.loc 1 11922 8 is_stmt 0 view .LVU7288
 25820 0004 0023     		movs	r3, #0
 25821 0006 8DF80730 		strb	r3, [sp, #7]
11923:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25822              		.loc 1 11923 5 is_stmt 1 view .LVU7289
 25823              	.LVL3246:
11924:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25824              		.loc 1 11924 5 view .LVU7290
11925:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25825              		.loc 1 11925 5 view .LVU7291
 25826              		.loc 1 11925 8 is_stmt 0 view .LVU7292
 25827 000a 8DF80630 		strb	r3, [sp, #6]
11926:Core/Src/bno055.c **** 
11927:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11928:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25828              		.loc 1 11928 5 is_stmt 1 view .LVU7293
 25829              		.loc 1 11928 18 is_stmt 0 view .LVU7294
 25830 000e 2C4B     		ldr	r3, .L1765
 25831 0010 1B68     		ldr	r3, [r3]
 25832              		.loc 1 11928 8 view .LVU7295
 25833 0012 002B     		cmp	r3, #0
 25834 0014 51D0     		beq	.L1756
 25835 0016 0546     		mov	r5, r0
11929:Core/Src/bno055.c ****     {
11930:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11931:Core/Src/bno055.c ****     }
11932:Core/Src/bno055.c ****     else
11933:Core/Src/bno055.c ****     {
11934:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11935:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11936:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11937:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25836              		.loc 1 11937 9 is_stmt 1 view .LVU7296
 25837              		.loc 1 11937 19 is_stmt 0 view .LVU7297
 25838 0018 0DF10600 		add	r0, sp, #6
 25839              	.LVL3247:
 25840              		.loc 1 11937 19 view .LVU7298
 25841 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25842              	.LVL3248:
11938:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25843              		.loc 1 11938 9 is_stmt 1 view .LVU7299
 25844              		.loc 1 11938 12 is_stmt 0 view .LVU7300
 25845 0020 0446     		mov	r4, r0
 25846 0022 0028     		cmp	r0, #0
 25847 0024 35D1     		bne	.L1757
11939:Core/Src/bno055.c ****         {
11940:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25848              		.loc 1 11940 13 is_stmt 1 view .LVU7301
 25849              		.loc 1 11940 32 is_stmt 0 view .LVU7302
 25850 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25851              		.loc 1 11940 16 view .LVU7303
 25852 002a 1BB9     		cbnz	r3, .L1762
 25853              	.LVL3249:
ARM GAS  /tmp/cc9kYR4Z.s 			page 719


 25854              	.L1755:
11941:Core/Src/bno055.c ****             {
11942:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11943:Core/Src/bno055.c ****             }
11944:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25855              		.loc 1 11944 13 is_stmt 1 view .LVU7304
 25856              		.loc 1 11944 16 is_stmt 0 view .LVU7305
 25857 002c 44B1     		cbz	r4, .L1763
11945:Core/Src/bno055.c ****             {
11946:Core/Src/bno055.c ****                 /* Write page as one */
11947:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11948:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11949:Core/Src/bno055.c ****                 {
11950:Core/Src/bno055.c ****                     if (mag_operation_mode_u8 < BNO055_MAG_OPR_MODE_RANGE)
11951:Core/Src/bno055.c ****                     {
11952:Core/Src/bno055.c ****                         /* Write the value
11953:Core/Src/bno055.c ****                          * of mag operation mode*/
11954:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11955:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
11956:Core/Src/bno055.c ****                                                                   &data_u8r,
11957:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11958:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11959:Core/Src/bno055.c ****                         {
11960:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE, mag
11961:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11962:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
11963:Core/Src/bno055.c ****                                                                         &data_u8r,
11964:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11965:Core/Src/bno055.c ****                         }
11966:Core/Src/bno055.c ****                     }
11967:Core/Src/bno055.c ****                     else
11968:Core/Src/bno055.c ****                     {
11969:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11970:Core/Src/bno055.c ****                     }
11971:Core/Src/bno055.c ****                 }
11972:Core/Src/bno055.c ****                 else
11973:Core/Src/bno055.c ****                 {
11974:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11975:Core/Src/bno055.c ****                 }
11976:Core/Src/bno055.c ****             }
11977:Core/Src/bno055.c ****             else
11978:Core/Src/bno055.c ****             {
11979:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25858              		.loc 1 11979 26 view .LVU7306
 25859 002e 4FF0FF34 		mov	r4, #-1
 25860              	.LVL3250:
 25861              		.loc 1 11979 26 view .LVU7307
 25862 0032 30E0     		b	.L1754
 25863              	.LVL3251:
 25864              	.L1762:
11942:Core/Src/bno055.c ****             }
 25865              		.loc 1 11942 17 is_stmt 1 view .LVU7308
11942:Core/Src/bno055.c ****             }
 25866              		.loc 1 11942 28 is_stmt 0 view .LVU7309
 25867 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25868              	.LVL3252:
11942:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 720


 25869              		.loc 1 11942 25 view .LVU7310
 25870 0038 54FA80F4 		uxtab	r4, r4, r0
 25871 003c 64B2     		sxtb	r4, r4
 25872              	.LVL3253:
11942:Core/Src/bno055.c ****             }
 25873              		.loc 1 11942 25 view .LVU7311
 25874 003e F5E7     		b	.L1755
 25875              	.L1763:
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25876              		.loc 1 11947 17 is_stmt 1 view .LVU7312
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25877              		.loc 1 11947 30 is_stmt 0 view .LVU7313
 25878 0040 0120     		movs	r0, #1
 25879 0042 FFF7FEFF 		bl	bno055_write_page_id
 25880              	.LVL3254:
11948:Core/Src/bno055.c ****                 {
 25881              		.loc 1 11948 17 is_stmt 1 view .LVU7314
11948:Core/Src/bno055.c ****                 {
 25882              		.loc 1 11948 20 is_stmt 0 view .LVU7315
 25883 0046 60BB     		cbnz	r0, .L1759
11950:Core/Src/bno055.c ****                     {
 25884              		.loc 1 11950 21 is_stmt 1 view .LVU7316
11950:Core/Src/bno055.c ****                     {
 25885              		.loc 1 11950 24 is_stmt 0 view .LVU7317
 25886 0048 042D     		cmp	r5, #4
 25887 004a 2DD8     		bhi	.L1760
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25888              		.loc 1 11954 25 is_stmt 1 view .LVU7318
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25889              		.loc 1 11954 44 is_stmt 0 view .LVU7319
 25890 004c 1C4B     		ldr	r3, .L1765
 25891 004e 1868     		ldr	r0, [r3]
 25892              	.LVL3255:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25893              		.loc 1 11954 44 view .LVU7320
 25894 0050 0469     		ldr	r4, [r0, #16]
 25895              	.LVL3256:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25896              		.loc 1 11954 36 view .LVU7321
 25897 0052 0123     		movs	r3, #1
 25898 0054 0DF10702 		add	r2, sp, #7
 25899 0058 0921     		movs	r1, #9
 25900 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25901 005c A047     		blx	r4
 25902              	.LVL3257:
11958:Core/Src/bno055.c ****                         {
 25903              		.loc 1 11958 25 is_stmt 1 view .LVU7322
11958:Core/Src/bno055.c ****                         {
 25904              		.loc 1 11958 28 is_stmt 0 view .LVU7323
 25905 005e 0446     		mov	r4, r0
 25906 0060 C8B9     		cbnz	r0, .L1754
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25907              		.loc 1 11960 29 is_stmt 1 view .LVU7324
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25908              		.loc 1 11960 40 is_stmt 0 view .LVU7325
 25909 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25910 0066 23F01803 		bic	r3, r3, #24
ARM GAS  /tmp/cc9kYR4Z.s 			page 721


 25911 006a 5BB2     		sxtb	r3, r3
 25912 006c E800     		lsls	r0, r5, #3
 25913              	.LVL3258:
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25914              		.loc 1 11960 40 view .LVU7326
 25915 006e 00F01800 		and	r0, r0, #24
 25916 0072 0343     		orrs	r3, r3, r0
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25917              		.loc 1 11960 38 view .LVU7327
 25918 0074 8DF80730 		strb	r3, [sp, #7]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25919              		.loc 1 11961 29 is_stmt 1 view .LVU7328
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25920              		.loc 1 11961 49 is_stmt 0 view .LVU7329
 25921 0078 114B     		ldr	r3, .L1765
 25922 007a 1868     		ldr	r0, [r3]
 25923 007c C568     		ldr	r5, [r0, #12]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25924              		.loc 1 11961 41 view .LVU7330
 25925 007e 0123     		movs	r3, #1
 25926 0080 0DF10702 		add	r2, sp, #7
 25927 0084 0921     		movs	r1, #9
 25928 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25929 0088 A847     		blx	r5
 25930              	.LVL3259:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25931              		.loc 1 11961 38 view .LVU7331
 25932 008a 54FA80F0 		uxtab	r0, r4, r0
 25933 008e 44B2     		sxtb	r4, r0
 25934              	.LVL3260:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25935              		.loc 1 11961 38 view .LVU7332
 25936 0090 01E0     		b	.L1754
 25937              	.LVL3261:
 25938              	.L1757:
11980:Core/Src/bno055.c ****             }
11981:Core/Src/bno055.c ****         }
11982:Core/Src/bno055.c ****         else
11983:Core/Src/bno055.c ****         {
11984:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25939              		.loc 1 11984 22 view .LVU7333
 25940 0092 4FF0FF34 		mov	r4, #-1
 25941              	.LVL3262:
 25942              	.L1754:
11985:Core/Src/bno055.c ****         }
11986:Core/Src/bno055.c ****     }
11987:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25943              		.loc 1 11987 5 is_stmt 1 view .LVU7334
 25944              		.loc 1 11987 24 is_stmt 0 view .LVU7335
 25945 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25946              		.loc 1 11987 8 view .LVU7336
 25947 009a 40B9     		cbnz	r0, .L1764
 25948              	.LVL3263:
 25949              	.L1753:
11988:Core/Src/bno055.c ****     {
11989:Core/Src/bno055.c ****         /* set the operation mode of
11990:Core/Src/bno055.c ****          * previous operation mode*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 722


11991:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11992:Core/Src/bno055.c ****     }
11993:Core/Src/bno055.c **** 
11994:Core/Src/bno055.c ****     return com_rslt;
11995:Core/Src/bno055.c **** }
 25950              		.loc 1 11995 1 view .LVU7337
 25951 009c 2046     		mov	r0, r4
 25952 009e 03B0     		add	sp, sp, #12
 25953              	.LCFI731:
 25954              		.cfi_remember_state
 25955              		.cfi_def_cfa_offset 12
 25956              		@ sp needed
 25957 00a0 30BD     		pop	{r4, r5, pc}
 25958              	.LVL3264:
 25959              	.L1759:
 25960              	.LCFI732:
 25961              		.cfi_restore_state
11974:Core/Src/bno055.c ****                 }
 25962              		.loc 1 11974 30 view .LVU7338
 25963 00a2 4FF0FF34 		mov	r4, #-1
 25964              	.LVL3265:
11974:Core/Src/bno055.c ****                 }
 25965              		.loc 1 11974 30 view .LVU7339
 25966 00a6 F6E7     		b	.L1754
 25967              	.LVL3266:
 25968              	.L1760:
11969:Core/Src/bno055.c ****                     }
 25969              		.loc 1 11969 34 view .LVU7340
 25970 00a8 6FF00104 		mvn	r4, #1
 25971              	.LVL3267:
11969:Core/Src/bno055.c ****                     }
 25972              		.loc 1 11969 34 view .LVU7341
 25973 00ac F3E7     		b	.L1754
 25974              	.LVL3268:
 25975              	.L1764:
11991:Core/Src/bno055.c ****     }
 25976              		.loc 1 11991 9 is_stmt 1 view .LVU7342
11991:Core/Src/bno055.c ****     }
 25977              		.loc 1 11991 21 is_stmt 0 view .LVU7343
 25978 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 25979              	.LVL3269:
11991:Core/Src/bno055.c ****     }
 25980              		.loc 1 11991 18 view .LVU7344
 25981 00b2 54FA80F0 		uxtab	r0, r4, r0
 25982 00b6 44B2     		sxtb	r4, r0
 25983              	.LVL3270:
11991:Core/Src/bno055.c ****     }
 25984              		.loc 1 11991 18 view .LVU7345
 25985 00b8 F0E7     		b	.L1753
 25986              	.LVL3271:
 25987              	.L1756:
11930:Core/Src/bno055.c ****     }
 25988              		.loc 1 11930 16 view .LVU7346
 25989 00ba 6FF07E04 		mvn	r4, #126
 25990 00be EDE7     		b	.L1753
 25991              	.L1766:
 25992              		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 723


 25993              	.L1765:
 25994 00c0 00000000 		.word	.LANCHOR0
 25995              		.cfi_endproc
 25996              	.LFE184:
 25998              		.section	.text.bno055_get_mag_power_mode,"ax",%progbits
 25999              		.align	1
 26000              		.global	bno055_get_mag_power_mode
 26001              		.syntax unified
 26002              		.thumb
 26003              		.thumb_func
 26005              	bno055_get_mag_power_mode:
 26006              	.LVL3272:
 26007              	.LFB185:
11996:Core/Src/bno055.c **** 
11997:Core/Src/bno055.c **** /*!
11998:Core/Src/bno055.c ****  *  @brief This API used to read the mag power mode
11999:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12000:Core/Src/bno055.c ****  *
12001:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12002:Core/Src/bno055.c ****  *
12003:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12004:Core/Src/bno055.c ****  * --------------------|-----------------
12005:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12006:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12007:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12008:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12009:Core/Src/bno055.c ****  *
12010:Core/Src/bno055.c ****  *  @return results of bus communication function
12011:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12012:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12013:Core/Src/bno055.c ****  *
12014:Core/Src/bno055.c ****  *
12015:Core/Src/bno055.c ****  */
12016:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_power_mode(u8 *mag_power_mode_u8)
12017:Core/Src/bno055.c **** {
 26008              		.loc 1 12017 1 is_stmt 1 view -0
 26009              		.cfi_startproc
 26010              		@ args = 0, pretend = 0, frame = 8
 26011              		@ frame_needed = 0, uses_anonymous_args = 0
 26012              		.loc 1 12017 1 is_stmt 0 view .LVU7348
 26013 0000 30B5     		push	{r4, r5, lr}
 26014              	.LCFI733:
 26015              		.cfi_def_cfa_offset 12
 26016              		.cfi_offset 4, -12
 26017              		.cfi_offset 5, -8
 26018              		.cfi_offset 14, -4
 26019 0002 83B0     		sub	sp, sp, #12
 26020              	.LCFI734:
 26021              		.cfi_def_cfa_offset 24
12018:Core/Src/bno055.c ****     /* Variable used to return value of
12019:Core/Src/bno055.c ****      * communication routine*/
12020:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26022              		.loc 1 12020 5 is_stmt 1 view .LVU7349
 26023              	.LVL3273:
12021:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26024              		.loc 1 12021 5 view .LVU7350
 26025              		.loc 1 12021 8 is_stmt 0 view .LVU7351
ARM GAS  /tmp/cc9kYR4Z.s 			page 724


 26026 0004 0023     		movs	r3, #0
 26027 0006 8DF80730 		strb	r3, [sp, #7]
12022:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26028              		.loc 1 12022 5 is_stmt 1 view .LVU7352
 26029              	.LVL3274:
12023:Core/Src/bno055.c **** 
12024:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12025:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26030              		.loc 1 12025 5 view .LVU7353
 26031              		.loc 1 12025 18 is_stmt 0 view .LVU7354
 26032 000a 144B     		ldr	r3, .L1775
 26033 000c 1B68     		ldr	r3, [r3]
 26034              		.loc 1 12025 8 view .LVU7355
 26035 000e F3B1     		cbz	r3, .L1771
 26036 0010 0446     		mov	r4, r0
12026:Core/Src/bno055.c ****     {
12027:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12028:Core/Src/bno055.c ****     }
12029:Core/Src/bno055.c ****     else
12030:Core/Src/bno055.c ****     {
12031:Core/Src/bno055.c ****         /*condition check for page, mag power mode is
12032:Core/Src/bno055.c ****          * available in the page one*/
12033:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26037              		.loc 1 12033 9 is_stmt 1 view .LVU7356
 26038              		.loc 1 12033 21 is_stmt 0 view .LVU7357
 26039 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26040              		.loc 1 12033 12 view .LVU7358
 26041 0014 012B     		cmp	r3, #1
 26042 0016 14D1     		bne	.L1774
 26043              	.LVL3275:
 26044              	.L1769:
12034:Core/Src/bno055.c ****         {
12035:Core/Src/bno055.c ****             /* Write page as one */
12036:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12037:Core/Src/bno055.c ****         }
12038:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26045              		.loc 1 12038 53 discriminator 1 view .LVU7359
 26046 0018 104B     		ldr	r3, .L1775
 26047 001a 1B68     		ldr	r3, [r3]
 26048 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26049              		.loc 1 12038 41 discriminator 1 view .LVU7360
 26050 001e 012B     		cmp	r3, #1
 26051 0020 18D1     		bne	.L1772
 26052              	.L1770:
12039:Core/Src/bno055.c ****         {
12040:Core/Src/bno055.c ****             /* Read the value of mag power mode */
12041:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26053              		.loc 1 12041 13 is_stmt 1 view .LVU7361
 26054              		.loc 1 12041 32 is_stmt 0 view .LVU7362
 26055 0022 0E4B     		ldr	r3, .L1775
 26056 0024 1868     		ldr	r0, [r3]
 26057 0026 0569     		ldr	r5, [r0, #16]
 26058              		.loc 1 12041 24 view .LVU7363
 26059 0028 0123     		movs	r3, #1
 26060 002a 0DF10702 		add	r2, sp, #7
 26061 002e 0921     		movs	r1, #9
 26062 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 725


 26063 0032 A847     		blx	r5
 26064              	.LVL3276:
12042:Core/Src/bno055.c ****                                                       BNO055_MAG_POWER_MODE_REG,
12043:Core/Src/bno055.c ****                                                       &data_u8r,
12044:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12045:Core/Src/bno055.c ****             *mag_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE);
 26065              		.loc 1 12045 13 is_stmt 1 view .LVU7364
 26066              		.loc 1 12045 34 is_stmt 0 view .LVU7365
 26067 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26068 0038 C3F34113 		ubfx	r3, r3, #5, #2
 26069              		.loc 1 12045 32 view .LVU7366
 26070 003c 2370     		strb	r3, [r4]
 26071              	.LVL3277:
 26072              	.L1768:
12046:Core/Src/bno055.c ****         }
12047:Core/Src/bno055.c ****         else
12048:Core/Src/bno055.c ****         {
12049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12050:Core/Src/bno055.c ****         }
12051:Core/Src/bno055.c ****     }
12052:Core/Src/bno055.c **** 
12053:Core/Src/bno055.c ****     return com_rslt;
12054:Core/Src/bno055.c **** }
 26073              		.loc 1 12054 1 view .LVU7367
 26074 003e 03B0     		add	sp, sp, #12
 26075              	.LCFI735:
 26076              		.cfi_remember_state
 26077              		.cfi_def_cfa_offset 12
 26078              		@ sp needed
 26079 0040 30BD     		pop	{r4, r5, pc}
 26080              	.LVL3278:
 26081              	.L1774:
 26082              	.LCFI736:
 26083              		.cfi_restore_state
12036:Core/Src/bno055.c ****         }
 26084              		.loc 1 12036 13 is_stmt 1 view .LVU7368
12036:Core/Src/bno055.c ****         }
 26085              		.loc 1 12036 23 is_stmt 0 view .LVU7369
 26086 0042 0120     		movs	r0, #1
 26087              	.LVL3279:
12036:Core/Src/bno055.c ****         }
 26088              		.loc 1 12036 23 view .LVU7370
 26089 0044 FFF7FEFF 		bl	bno055_write_page_id
 26090              	.LVL3280:
12038:Core/Src/bno055.c ****         {
 26091              		.loc 1 12038 9 is_stmt 1 view .LVU7371
12038:Core/Src/bno055.c ****         {
 26092              		.loc 1 12038 12 is_stmt 0 view .LVU7372
 26093 0048 0028     		cmp	r0, #0
 26094 004a EAD0     		beq	.L1770
 26095 004c E4E7     		b	.L1769
 26096              	.LVL3281:
 26097              	.L1771:
12027:Core/Src/bno055.c ****     }
 26098              		.loc 1 12027 16 view .LVU7373
 26099 004e 6FF07E00 		mvn	r0, #126
 26100              	.LVL3282:
ARM GAS  /tmp/cc9kYR4Z.s 			page 726


12027:Core/Src/bno055.c ****     }
 26101              		.loc 1 12027 16 view .LVU7374
 26102 0052 F4E7     		b	.L1768
 26103              	.LVL3283:
 26104              	.L1772:
12049:Core/Src/bno055.c ****         }
 26105              		.loc 1 12049 22 view .LVU7375
 26106 0054 4FF0FF30 		mov	r0, #-1
 26107 0058 F1E7     		b	.L1768
 26108              	.L1776:
 26109 005a 00BF     		.align	2
 26110              	.L1775:
 26111 005c 00000000 		.word	.LANCHOR0
 26112              		.cfi_endproc
 26113              	.LFE185:
 26115              		.section	.text.bno055_set_mag_power_mode,"ax",%progbits
 26116              		.align	1
 26117              		.global	bno055_set_mag_power_mode
 26118              		.syntax unified
 26119              		.thumb
 26120              		.thumb_func
 26122              	bno055_set_mag_power_mode:
 26123              	.LVL3284:
 26124              	.LFB186:
12055:Core/Src/bno055.c **** 
12056:Core/Src/bno055.c **** /*!
12057:Core/Src/bno055.c ****  *  @brief This API used to write the mag power mode
12058:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12059:Core/Src/bno055.c ****  *
12060:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12061:Core/Src/bno055.c ****  *
12062:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12063:Core/Src/bno055.c ****  * --------------------|-----------------
12064:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12065:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12066:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12067:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12068:Core/Src/bno055.c ****  *
12069:Core/Src/bno055.c ****  *  @return results of bus communication function
12070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12072:Core/Src/bno055.c ****  *
12073:Core/Src/bno055.c ****  *
12074:Core/Src/bno055.c ****  */
12075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_power_mode(u8 mag_power_mode_u8)
12076:Core/Src/bno055.c **** {
 26125              		.loc 1 12076 1 is_stmt 1 view -0
 26126              		.cfi_startproc
 26127              		@ args = 0, pretend = 0, frame = 8
 26128              		@ frame_needed = 0, uses_anonymous_args = 0
 26129              		.loc 1 12076 1 is_stmt 0 view .LVU7377
 26130 0000 30B5     		push	{r4, r5, lr}
 26131              	.LCFI737:
 26132              		.cfi_def_cfa_offset 12
 26133              		.cfi_offset 4, -12
 26134              		.cfi_offset 5, -8
 26135              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9kYR4Z.s 			page 727


 26136 0002 83B0     		sub	sp, sp, #12
 26137              	.LCFI738:
 26138              		.cfi_def_cfa_offset 24
12077:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26139              		.loc 1 12077 5 is_stmt 1 view .LVU7378
 26140              	.LVL3285:
12078:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26141              		.loc 1 12078 5 view .LVU7379
 26142              		.loc 1 12078 8 is_stmt 0 view .LVU7380
 26143 0004 0023     		movs	r3, #0
 26144 0006 8DF80730 		strb	r3, [sp, #7]
12079:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26145              		.loc 1 12079 5 is_stmt 1 view .LVU7381
 26146              	.LVL3286:
12080:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26147              		.loc 1 12080 5 view .LVU7382
12081:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26148              		.loc 1 12081 5 view .LVU7383
 26149              		.loc 1 12081 8 is_stmt 0 view .LVU7384
 26150 000a 8DF80630 		strb	r3, [sp, #6]
12082:Core/Src/bno055.c **** 
12083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26151              		.loc 1 12084 5 is_stmt 1 view .LVU7385
 26152              		.loc 1 12084 18 is_stmt 0 view .LVU7386
 26153 000e 2C4B     		ldr	r3, .L1790
 26154 0010 1B68     		ldr	r3, [r3]
 26155              		.loc 1 12084 8 view .LVU7387
 26156 0012 002B     		cmp	r3, #0
 26157 0014 51D0     		beq	.L1781
 26158 0016 0546     		mov	r5, r0
12085:Core/Src/bno055.c ****     {
12086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12087:Core/Src/bno055.c ****     }
12088:Core/Src/bno055.c ****     else
12089:Core/Src/bno055.c ****     {
12090:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12091:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12092:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12093:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26159              		.loc 1 12093 9 is_stmt 1 view .LVU7388
 26160              		.loc 1 12093 19 is_stmt 0 view .LVU7389
 26161 0018 0DF10600 		add	r0, sp, #6
 26162              	.LVL3287:
 26163              		.loc 1 12093 19 view .LVU7390
 26164 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26165              	.LVL3288:
12094:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26166              		.loc 1 12094 9 is_stmt 1 view .LVU7391
 26167              		.loc 1 12094 12 is_stmt 0 view .LVU7392
 26168 0020 0446     		mov	r4, r0
 26169 0022 0028     		cmp	r0, #0
 26170 0024 35D1     		bne	.L1782
12095:Core/Src/bno055.c ****         {
12096:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26171              		.loc 1 12096 13 is_stmt 1 view .LVU7393
 26172              		.loc 1 12096 32 is_stmt 0 view .LVU7394
ARM GAS  /tmp/cc9kYR4Z.s 			page 728


 26173 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26174              		.loc 1 12096 16 view .LVU7395
 26175 002a 1BB9     		cbnz	r3, .L1787
 26176              	.LVL3289:
 26177              	.L1780:
12097:Core/Src/bno055.c ****             {
12098:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12099:Core/Src/bno055.c ****             }
12100:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26178              		.loc 1 12100 13 is_stmt 1 view .LVU7396
 26179              		.loc 1 12100 16 is_stmt 0 view .LVU7397
 26180 002c 44B1     		cbz	r4, .L1788
12101:Core/Src/bno055.c ****             {
12102:Core/Src/bno055.c ****                 /* Write page as one */
12103:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12104:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12105:Core/Src/bno055.c ****                 {
12106:Core/Src/bno055.c ****                     if (mag_power_mode_u8 < BNO055_MAG_POWER_MODE_RANGE)
12107:Core/Src/bno055.c ****                     {
12108:Core/Src/bno055.c ****                         /* Write the value of mag power mode*/
12109:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12110:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
12111:Core/Src/bno055.c ****                                                                   &data_u8r,
12112:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12113:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12114:Core/Src/bno055.c ****                         {
12115:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE, mag_pow
12116:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12117:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
12118:Core/Src/bno055.c ****                                                                         &data_u8r,
12119:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12120:Core/Src/bno055.c ****                         }
12121:Core/Src/bno055.c ****                     }
12122:Core/Src/bno055.c ****                     else
12123:Core/Src/bno055.c ****                     {
12124:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12125:Core/Src/bno055.c ****                     }
12126:Core/Src/bno055.c ****                 }
12127:Core/Src/bno055.c ****                 else
12128:Core/Src/bno055.c ****                 {
12129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12130:Core/Src/bno055.c ****                 }
12131:Core/Src/bno055.c ****             }
12132:Core/Src/bno055.c ****             else
12133:Core/Src/bno055.c ****             {
12134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26181              		.loc 1 12134 26 view .LVU7398
 26182 002e 4FF0FF34 		mov	r4, #-1
 26183              	.LVL3290:
 26184              		.loc 1 12134 26 view .LVU7399
 26185 0032 30E0     		b	.L1779
 26186              	.LVL3291:
 26187              	.L1787:
12098:Core/Src/bno055.c ****             }
 26188              		.loc 1 12098 17 is_stmt 1 view .LVU7400
12098:Core/Src/bno055.c ****             }
 26189              		.loc 1 12098 28 is_stmt 0 view .LVU7401
ARM GAS  /tmp/cc9kYR4Z.s 			page 729


 26190 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26191              	.LVL3292:
12098:Core/Src/bno055.c ****             }
 26192              		.loc 1 12098 25 view .LVU7402
 26193 0038 54FA80F4 		uxtab	r4, r4, r0
 26194 003c 64B2     		sxtb	r4, r4
 26195              	.LVL3293:
12098:Core/Src/bno055.c ****             }
 26196              		.loc 1 12098 25 view .LVU7403
 26197 003e F5E7     		b	.L1780
 26198              	.L1788:
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26199              		.loc 1 12103 17 is_stmt 1 view .LVU7404
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26200              		.loc 1 12103 30 is_stmt 0 view .LVU7405
 26201 0040 0120     		movs	r0, #1
 26202 0042 FFF7FEFF 		bl	bno055_write_page_id
 26203              	.LVL3294:
12104:Core/Src/bno055.c ****                 {
 26204              		.loc 1 12104 17 is_stmt 1 view .LVU7406
12104:Core/Src/bno055.c ****                 {
 26205              		.loc 1 12104 20 is_stmt 0 view .LVU7407
 26206 0046 60BB     		cbnz	r0, .L1784
12106:Core/Src/bno055.c ****                     {
 26207              		.loc 1 12106 21 is_stmt 1 view .LVU7408
12106:Core/Src/bno055.c ****                     {
 26208              		.loc 1 12106 24 is_stmt 0 view .LVU7409
 26209 0048 032D     		cmp	r5, #3
 26210 004a 2DD8     		bhi	.L1785
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26211              		.loc 1 12109 25 is_stmt 1 view .LVU7410
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26212              		.loc 1 12109 44 is_stmt 0 view .LVU7411
 26213 004c 1C4B     		ldr	r3, .L1790
 26214 004e 1868     		ldr	r0, [r3]
 26215              	.LVL3295:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26216              		.loc 1 12109 44 view .LVU7412
 26217 0050 0469     		ldr	r4, [r0, #16]
 26218              	.LVL3296:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26219              		.loc 1 12109 36 view .LVU7413
 26220 0052 0123     		movs	r3, #1
 26221 0054 0DF10702 		add	r2, sp, #7
 26222 0058 0921     		movs	r1, #9
 26223 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26224 005c A047     		blx	r4
 26225              	.LVL3297:
12113:Core/Src/bno055.c ****                         {
 26226              		.loc 1 12113 25 is_stmt 1 view .LVU7414
12113:Core/Src/bno055.c ****                         {
 26227              		.loc 1 12113 28 is_stmt 0 view .LVU7415
 26228 005e 0446     		mov	r4, r0
 26229 0060 C8B9     		cbnz	r0, .L1779
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26230              		.loc 1 12115 29 is_stmt 1 view .LVU7416
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 730


 26231              		.loc 1 12115 40 is_stmt 0 view .LVU7417
 26232 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26233 0066 23F06003 		bic	r3, r3, #96
 26234 006a 5BB2     		sxtb	r3, r3
 26235 006c 6801     		lsls	r0, r5, #5
 26236              	.LVL3298:
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26237              		.loc 1 12115 40 view .LVU7418
 26238 006e 00F06000 		and	r0, r0, #96
 26239 0072 0343     		orrs	r3, r3, r0
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26240              		.loc 1 12115 38 view .LVU7419
 26241 0074 8DF80730 		strb	r3, [sp, #7]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26242              		.loc 1 12116 29 is_stmt 1 view .LVU7420
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26243              		.loc 1 12116 49 is_stmt 0 view .LVU7421
 26244 0078 114B     		ldr	r3, .L1790
 26245 007a 1868     		ldr	r0, [r3]
 26246 007c C568     		ldr	r5, [r0, #12]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26247              		.loc 1 12116 41 view .LVU7422
 26248 007e 0123     		movs	r3, #1
 26249 0080 0DF10702 		add	r2, sp, #7
 26250 0084 0921     		movs	r1, #9
 26251 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26252 0088 A847     		blx	r5
 26253              	.LVL3299:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26254              		.loc 1 12116 38 view .LVU7423
 26255 008a 54FA80F0 		uxtab	r0, r4, r0
 26256 008e 44B2     		sxtb	r4, r0
 26257              	.LVL3300:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26258              		.loc 1 12116 38 view .LVU7424
 26259 0090 01E0     		b	.L1779
 26260              	.LVL3301:
 26261              	.L1782:
12135:Core/Src/bno055.c ****             }
12136:Core/Src/bno055.c ****         }
12137:Core/Src/bno055.c ****         else
12138:Core/Src/bno055.c ****         {
12139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26262              		.loc 1 12139 22 view .LVU7425
 26263 0092 4FF0FF34 		mov	r4, #-1
 26264              	.LVL3302:
 26265              	.L1779:
12140:Core/Src/bno055.c ****         }
12141:Core/Src/bno055.c ****     }
12142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26266              		.loc 1 12142 5 is_stmt 1 view .LVU7426
 26267              		.loc 1 12142 24 is_stmt 0 view .LVU7427
 26268 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26269              		.loc 1 12142 8 view .LVU7428
 26270 009a 40B9     		cbnz	r0, .L1789
 26271              	.LVL3303:
 26272              	.L1778:
ARM GAS  /tmp/cc9kYR4Z.s 			page 731


12143:Core/Src/bno055.c ****     {
12144:Core/Src/bno055.c ****         /* set the operation mode of
12145:Core/Src/bno055.c ****          * previous operation mode*/
12146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12147:Core/Src/bno055.c ****     }
12148:Core/Src/bno055.c **** 
12149:Core/Src/bno055.c ****     return com_rslt;
12150:Core/Src/bno055.c **** }
 26273              		.loc 1 12150 1 view .LVU7429
 26274 009c 2046     		mov	r0, r4
 26275 009e 03B0     		add	sp, sp, #12
 26276              	.LCFI739:
 26277              		.cfi_remember_state
 26278              		.cfi_def_cfa_offset 12
 26279              		@ sp needed
 26280 00a0 30BD     		pop	{r4, r5, pc}
 26281              	.LVL3304:
 26282              	.L1784:
 26283              	.LCFI740:
 26284              		.cfi_restore_state
12129:Core/Src/bno055.c ****                 }
 26285              		.loc 1 12129 30 view .LVU7430
 26286 00a2 4FF0FF34 		mov	r4, #-1
 26287              	.LVL3305:
12129:Core/Src/bno055.c ****                 }
 26288              		.loc 1 12129 30 view .LVU7431
 26289 00a6 F6E7     		b	.L1779
 26290              	.LVL3306:
 26291              	.L1785:
12124:Core/Src/bno055.c ****                     }
 26292              		.loc 1 12124 34 view .LVU7432
 26293 00a8 6FF00104 		mvn	r4, #1
 26294              	.LVL3307:
12124:Core/Src/bno055.c ****                     }
 26295              		.loc 1 12124 34 view .LVU7433
 26296 00ac F3E7     		b	.L1779
 26297              	.LVL3308:
 26298              	.L1789:
12146:Core/Src/bno055.c ****     }
 26299              		.loc 1 12146 9 is_stmt 1 view .LVU7434
12146:Core/Src/bno055.c ****     }
 26300              		.loc 1 12146 21 is_stmt 0 view .LVU7435
 26301 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 26302              	.LVL3309:
12146:Core/Src/bno055.c ****     }
 26303              		.loc 1 12146 18 view .LVU7436
 26304 00b2 54FA80F0 		uxtab	r0, r4, r0
 26305 00b6 44B2     		sxtb	r4, r0
 26306              	.LVL3310:
12146:Core/Src/bno055.c ****     }
 26307              		.loc 1 12146 18 view .LVU7437
 26308 00b8 F0E7     		b	.L1778
 26309              	.LVL3311:
 26310              	.L1781:
12086:Core/Src/bno055.c ****     }
 26311              		.loc 1 12086 16 view .LVU7438
 26312 00ba 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/cc9kYR4Z.s 			page 732


 26313 00be EDE7     		b	.L1778
 26314              	.L1791:
 26315              		.align	2
 26316              	.L1790:
 26317 00c0 00000000 		.word	.LANCHOR0
 26318              		.cfi_endproc
 26319              	.LFE186:
 26321              		.section	.text.bno055_get_gyro_range,"ax",%progbits
 26322              		.align	1
 26323              		.global	bno055_get_gyro_range
 26324              		.syntax unified
 26325              		.thumb
 26326              		.thumb_func
 26328              	bno055_get_gyro_range:
 26329              	.LVL3312:
 26330              	.LFB187:
12151:Core/Src/bno055.c **** 
12152:Core/Src/bno055.c **** /*!
12153:Core/Src/bno055.c ****  *  @brief This API used to read the gyro range
12154:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12155:Core/Src/bno055.c ****  *
12156:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12157:Core/Src/bno055.c ****  *
12158:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12159:Core/Src/bno055.c ****  * --------------------|-----------------
12160:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12161:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12162:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12163:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12164:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12165:Core/Src/bno055.c ****  *
12166:Core/Src/bno055.c ****  *  @return results of bus communication function
12167:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12168:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12169:Core/Src/bno055.c ****  *
12170:Core/Src/bno055.c ****  *
12171:Core/Src/bno055.c ****  */
12172:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_range(u8 *gyro_range_u8)
12173:Core/Src/bno055.c **** {
 26331              		.loc 1 12173 1 is_stmt 1 view -0
 26332              		.cfi_startproc
 26333              		@ args = 0, pretend = 0, frame = 8
 26334              		@ frame_needed = 0, uses_anonymous_args = 0
 26335              		.loc 1 12173 1 is_stmt 0 view .LVU7440
 26336 0000 30B5     		push	{r4, r5, lr}
 26337              	.LCFI741:
 26338              		.cfi_def_cfa_offset 12
 26339              		.cfi_offset 4, -12
 26340              		.cfi_offset 5, -8
 26341              		.cfi_offset 14, -4
 26342 0002 83B0     		sub	sp, sp, #12
 26343              	.LCFI742:
 26344              		.cfi_def_cfa_offset 24
12174:Core/Src/bno055.c ****     /* Variable used to return value of
12175:Core/Src/bno055.c ****      * communication routine*/
12176:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26345              		.loc 1 12176 5 is_stmt 1 view .LVU7441
ARM GAS  /tmp/cc9kYR4Z.s 			page 733


 26346              	.LVL3313:
12177:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26347              		.loc 1 12177 5 view .LVU7442
 26348              		.loc 1 12177 8 is_stmt 0 view .LVU7443
 26349 0004 0023     		movs	r3, #0
 26350 0006 8DF80730 		strb	r3, [sp, #7]
12178:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26351              		.loc 1 12178 5 is_stmt 1 view .LVU7444
 26352              	.LVL3314:
12179:Core/Src/bno055.c **** 
12180:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12181:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26353              		.loc 1 12181 5 view .LVU7445
 26354              		.loc 1 12181 18 is_stmt 0 view .LVU7446
 26355 000a 144B     		ldr	r3, .L1800
 26356 000c 1B68     		ldr	r3, [r3]
 26357              		.loc 1 12181 8 view .LVU7447
 26358 000e F3B1     		cbz	r3, .L1796
 26359 0010 0446     		mov	r4, r0
12182:Core/Src/bno055.c ****     {
12183:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12184:Core/Src/bno055.c ****     }
12185:Core/Src/bno055.c ****     else
12186:Core/Src/bno055.c ****     {
12187:Core/Src/bno055.c ****         /*condition check for page, gyro range is
12188:Core/Src/bno055.c ****          * available in the page one*/
12189:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26360              		.loc 1 12189 9 is_stmt 1 view .LVU7448
 26361              		.loc 1 12189 21 is_stmt 0 view .LVU7449
 26362 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26363              		.loc 1 12189 12 view .LVU7450
 26364 0014 012B     		cmp	r3, #1
 26365 0016 14D1     		bne	.L1799
 26366              	.LVL3315:
 26367              	.L1794:
12190:Core/Src/bno055.c ****         {
12191:Core/Src/bno055.c ****             /* Write page as one */
12192:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12193:Core/Src/bno055.c ****         }
12194:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26368              		.loc 1 12194 53 discriminator 1 view .LVU7451
 26369 0018 104B     		ldr	r3, .L1800
 26370 001a 1B68     		ldr	r3, [r3]
 26371 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26372              		.loc 1 12194 41 discriminator 1 view .LVU7452
 26373 001e 012B     		cmp	r3, #1
 26374 0020 18D1     		bne	.L1797
 26375              	.L1795:
12195:Core/Src/bno055.c ****         {
12196:Core/Src/bno055.c ****             /* Read the value of gyro range */
12197:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26376              		.loc 1 12197 13 is_stmt 1 view .LVU7453
 26377              		.loc 1 12197 32 is_stmt 0 view .LVU7454
 26378 0022 0E4B     		ldr	r3, .L1800
 26379 0024 1868     		ldr	r0, [r3]
 26380 0026 0569     		ldr	r5, [r0, #16]
 26381              		.loc 1 12197 24 view .LVU7455
ARM GAS  /tmp/cc9kYR4Z.s 			page 734


 26382 0028 0123     		movs	r3, #1
 26383 002a 0DF10702 		add	r2, sp, #7
 26384 002e 0A21     		movs	r1, #10
 26385 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26386 0032 A847     		blx	r5
 26387              	.LVL3316:
12198:Core/Src/bno055.c ****                                                       BNO055_GYRO_RANGE_REG,
12199:Core/Src/bno055.c ****                                                       &data_u8r,
12200:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12201:Core/Src/bno055.c ****             *gyro_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_RANGE);
 26388              		.loc 1 12201 13 is_stmt 1 view .LVU7456
 26389              		.loc 1 12201 30 is_stmt 0 view .LVU7457
 26390 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26391 0038 03F00703 		and	r3, r3, #7
 26392              		.loc 1 12201 28 view .LVU7458
 26393 003c 2370     		strb	r3, [r4]
 26394              	.LVL3317:
 26395              	.L1793:
12202:Core/Src/bno055.c ****         }
12203:Core/Src/bno055.c ****         else
12204:Core/Src/bno055.c ****         {
12205:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12206:Core/Src/bno055.c ****         }
12207:Core/Src/bno055.c ****     }
12208:Core/Src/bno055.c **** 
12209:Core/Src/bno055.c ****     return com_rslt;
12210:Core/Src/bno055.c **** }
 26396              		.loc 1 12210 1 view .LVU7459
 26397 003e 03B0     		add	sp, sp, #12
 26398              	.LCFI743:
 26399              		.cfi_remember_state
 26400              		.cfi_def_cfa_offset 12
 26401              		@ sp needed
 26402 0040 30BD     		pop	{r4, r5, pc}
 26403              	.LVL3318:
 26404              	.L1799:
 26405              	.LCFI744:
 26406              		.cfi_restore_state
12192:Core/Src/bno055.c ****         }
 26407              		.loc 1 12192 13 is_stmt 1 view .LVU7460
12192:Core/Src/bno055.c ****         }
 26408              		.loc 1 12192 23 is_stmt 0 view .LVU7461
 26409 0042 0120     		movs	r0, #1
 26410              	.LVL3319:
12192:Core/Src/bno055.c ****         }
 26411              		.loc 1 12192 23 view .LVU7462
 26412 0044 FFF7FEFF 		bl	bno055_write_page_id
 26413              	.LVL3320:
12194:Core/Src/bno055.c ****         {
 26414              		.loc 1 12194 9 is_stmt 1 view .LVU7463
12194:Core/Src/bno055.c ****         {
 26415              		.loc 1 12194 12 is_stmt 0 view .LVU7464
 26416 0048 0028     		cmp	r0, #0
 26417 004a EAD0     		beq	.L1795
 26418 004c E4E7     		b	.L1794
 26419              	.LVL3321:
 26420              	.L1796:
ARM GAS  /tmp/cc9kYR4Z.s 			page 735


12183:Core/Src/bno055.c ****     }
 26421              		.loc 1 12183 16 view .LVU7465
 26422 004e 6FF07E00 		mvn	r0, #126
 26423              	.LVL3322:
12183:Core/Src/bno055.c ****     }
 26424              		.loc 1 12183 16 view .LVU7466
 26425 0052 F4E7     		b	.L1793
 26426              	.LVL3323:
 26427              	.L1797:
12205:Core/Src/bno055.c ****         }
 26428              		.loc 1 12205 22 view .LVU7467
 26429 0054 4FF0FF30 		mov	r0, #-1
 26430 0058 F1E7     		b	.L1793
 26431              	.L1801:
 26432 005a 00BF     		.align	2
 26433              	.L1800:
 26434 005c 00000000 		.word	.LANCHOR0
 26435              		.cfi_endproc
 26436              	.LFE187:
 26438              		.section	.text.bno055_set_gyro_range,"ax",%progbits
 26439              		.align	1
 26440              		.global	bno055_set_gyro_range
 26441              		.syntax unified
 26442              		.thumb
 26443              		.thumb_func
 26445              	bno055_set_gyro_range:
 26446              	.LVL3324:
 26447              	.LFB188:
12211:Core/Src/bno055.c **** 
12212:Core/Src/bno055.c **** /*!
12213:Core/Src/bno055.c ****  *  @brief This API used to write the gyro range
12214:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12215:Core/Src/bno055.c ****  *
12216:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12217:Core/Src/bno055.c ****  *
12218:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12219:Core/Src/bno055.c ****  * --------------------|-----------------
12220:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12221:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12222:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12223:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12224:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12225:Core/Src/bno055.c ****  *
12226:Core/Src/bno055.c ****  *  @return results of bus communication function
12227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12229:Core/Src/bno055.c ****  *
12230:Core/Src/bno055.c ****  *
12231:Core/Src/bno055.c ****  */
12232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_range(u8 gyro_range_u8)
12233:Core/Src/bno055.c **** {
 26448              		.loc 1 12233 1 is_stmt 1 view -0
 26449              		.cfi_startproc
 26450              		@ args = 0, pretend = 0, frame = 8
 26451              		@ frame_needed = 0, uses_anonymous_args = 0
 26452              		.loc 1 12233 1 is_stmt 0 view .LVU7469
 26453 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 736


 26454              	.LCFI745:
 26455              		.cfi_def_cfa_offset 12
 26456              		.cfi_offset 4, -12
 26457              		.cfi_offset 5, -8
 26458              		.cfi_offset 14, -4
 26459 0002 83B0     		sub	sp, sp, #12
 26460              	.LCFI746:
 26461              		.cfi_def_cfa_offset 24
12234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26462              		.loc 1 12234 5 is_stmt 1 view .LVU7470
 26463              	.LVL3325:
12235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26464              		.loc 1 12235 5 view .LVU7471
 26465              		.loc 1 12235 8 is_stmt 0 view .LVU7472
 26466 0004 0023     		movs	r3, #0
 26467 0006 8DF80730 		strb	r3, [sp, #7]
12236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26468              		.loc 1 12236 5 is_stmt 1 view .LVU7473
 26469              	.LVL3326:
12237:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26470              		.loc 1 12237 5 view .LVU7474
12238:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26471              		.loc 1 12238 5 view .LVU7475
 26472              		.loc 1 12238 8 is_stmt 0 view .LVU7476
 26473 000a 8DF80630 		strb	r3, [sp, #6]
12239:Core/Src/bno055.c **** 
12240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26474              		.loc 1 12241 5 is_stmt 1 view .LVU7477
 26475              		.loc 1 12241 18 is_stmt 0 view .LVU7478
 26476 000e 2C4B     		ldr	r3, .L1815
 26477 0010 1B68     		ldr	r3, [r3]
 26478              		.loc 1 12241 8 view .LVU7479
 26479 0012 002B     		cmp	r3, #0
 26480 0014 50D0     		beq	.L1806
 26481 0016 0546     		mov	r5, r0
12242:Core/Src/bno055.c ****     {
12243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12244:Core/Src/bno055.c ****     }
12245:Core/Src/bno055.c ****     else
12246:Core/Src/bno055.c ****     {
12247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26482              		.loc 1 12250 9 is_stmt 1 view .LVU7480
 26483              		.loc 1 12250 19 is_stmt 0 view .LVU7481
 26484 0018 0DF10600 		add	r0, sp, #6
 26485              	.LVL3327:
 26486              		.loc 1 12250 19 view .LVU7482
 26487 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26488              	.LVL3328:
12251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26489              		.loc 1 12251 9 is_stmt 1 view .LVU7483
 26490              		.loc 1 12251 12 is_stmt 0 view .LVU7484
 26491 0020 0446     		mov	r4, r0
 26492 0022 0028     		cmp	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 737


 26493 0024 34D1     		bne	.L1807
12252:Core/Src/bno055.c ****         {
12253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26494              		.loc 1 12253 13 is_stmt 1 view .LVU7485
 26495              		.loc 1 12253 32 is_stmt 0 view .LVU7486
 26496 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26497              		.loc 1 12253 16 view .LVU7487
 26498 002a 1BB9     		cbnz	r3, .L1812
 26499              	.LVL3329:
 26500              	.L1805:
12254:Core/Src/bno055.c ****             {
12255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12256:Core/Src/bno055.c ****             }
12257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26501              		.loc 1 12257 13 is_stmt 1 view .LVU7488
 26502              		.loc 1 12257 16 is_stmt 0 view .LVU7489
 26503 002c 44B1     		cbz	r4, .L1813
12258:Core/Src/bno055.c ****             {
12259:Core/Src/bno055.c ****                 /* Write page as one */
12260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12262:Core/Src/bno055.c ****                 {
12263:Core/Src/bno055.c ****                     if (gyro_range_u8 < BNO055_GYRO_RANGE)
12264:Core/Src/bno055.c ****                     {
12265:Core/Src/bno055.c ****                         /* Write the value of gyro range*/
12266:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12267:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
12268:Core/Src/bno055.c ****                                                                   &data_u8r,
12269:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12270:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12271:Core/Src/bno055.c ****                         {
12272:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_RANGE, gyro_range_
12273:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12274:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
12275:Core/Src/bno055.c ****                                                                         &data_u8r,
12276:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12277:Core/Src/bno055.c ****                         }
12278:Core/Src/bno055.c ****                     }
12279:Core/Src/bno055.c ****                     else
12280:Core/Src/bno055.c ****                     {
12281:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12282:Core/Src/bno055.c ****                     }
12283:Core/Src/bno055.c ****                 }
12284:Core/Src/bno055.c ****                 else
12285:Core/Src/bno055.c ****                 {
12286:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12287:Core/Src/bno055.c ****                 }
12288:Core/Src/bno055.c ****             }
12289:Core/Src/bno055.c ****             else
12290:Core/Src/bno055.c ****             {
12291:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26504              		.loc 1 12291 26 view .LVU7490
 26505 002e 4FF0FF34 		mov	r4, #-1
 26506              	.LVL3330:
 26507              		.loc 1 12291 26 view .LVU7491
 26508 0032 2FE0     		b	.L1804
 26509              	.LVL3331:
ARM GAS  /tmp/cc9kYR4Z.s 			page 738


 26510              	.L1812:
12255:Core/Src/bno055.c ****             }
 26511              		.loc 1 12255 17 is_stmt 1 view .LVU7492
12255:Core/Src/bno055.c ****             }
 26512              		.loc 1 12255 28 is_stmt 0 view .LVU7493
 26513 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26514              	.LVL3332:
12255:Core/Src/bno055.c ****             }
 26515              		.loc 1 12255 25 view .LVU7494
 26516 0038 54FA80F4 		uxtab	r4, r4, r0
 26517 003c 64B2     		sxtb	r4, r4
 26518              	.LVL3333:
12255:Core/Src/bno055.c ****             }
 26519              		.loc 1 12255 25 view .LVU7495
 26520 003e F5E7     		b	.L1805
 26521              	.L1813:
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26522              		.loc 1 12260 17 is_stmt 1 view .LVU7496
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26523              		.loc 1 12260 30 is_stmt 0 view .LVU7497
 26524 0040 0120     		movs	r0, #1
 26525 0042 FFF7FEFF 		bl	bno055_write_page_id
 26526              	.LVL3334:
12261:Core/Src/bno055.c ****                 {
 26527              		.loc 1 12261 17 is_stmt 1 view .LVU7498
12261:Core/Src/bno055.c ****                 {
 26528              		.loc 1 12261 20 is_stmt 0 view .LVU7499
 26529 0046 58BB     		cbnz	r0, .L1809
12263:Core/Src/bno055.c ****                     {
 26530              		.loc 1 12263 21 is_stmt 1 view .LVU7500
12263:Core/Src/bno055.c ****                     {
 26531              		.loc 1 12263 24 is_stmt 0 view .LVU7501
 26532 0048 042D     		cmp	r5, #4
 26533 004a 2CD8     		bhi	.L1810
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26534              		.loc 1 12266 25 is_stmt 1 view .LVU7502
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26535              		.loc 1 12266 44 is_stmt 0 view .LVU7503
 26536 004c 1C4B     		ldr	r3, .L1815
 26537 004e 1868     		ldr	r0, [r3]
 26538              	.LVL3335:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26539              		.loc 1 12266 44 view .LVU7504
 26540 0050 0469     		ldr	r4, [r0, #16]
 26541              	.LVL3336:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26542              		.loc 1 12266 36 view .LVU7505
 26543 0052 0123     		movs	r3, #1
 26544 0054 0DF10702 		add	r2, sp, #7
 26545 0058 0A21     		movs	r1, #10
 26546 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26547 005c A047     		blx	r4
 26548              	.LVL3337:
12270:Core/Src/bno055.c ****                         {
 26549              		.loc 1 12270 25 is_stmt 1 view .LVU7506
12270:Core/Src/bno055.c ****                         {
 26550              		.loc 1 12270 28 is_stmt 0 view .LVU7507
ARM GAS  /tmp/cc9kYR4Z.s 			page 739


 26551 005e 0446     		mov	r4, r0
 26552 0060 C0B9     		cbnz	r0, .L1804
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26553              		.loc 1 12272 29 is_stmt 1 view .LVU7508
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26554              		.loc 1 12272 40 is_stmt 0 view .LVU7509
 26555 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26556 0066 23F00703 		bic	r3, r3, #7
 26557 006a 5BB2     		sxtb	r3, r3
 26558 006c 05F00700 		and	r0, r5, #7
 26559              	.LVL3338:
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26560              		.loc 1 12272 40 view .LVU7510
 26561 0070 0343     		orrs	r3, r3, r0
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26562              		.loc 1 12272 38 view .LVU7511
 26563 0072 8DF80730 		strb	r3, [sp, #7]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26564              		.loc 1 12273 29 is_stmt 1 view .LVU7512
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26565              		.loc 1 12273 49 is_stmt 0 view .LVU7513
 26566 0076 124B     		ldr	r3, .L1815
 26567 0078 1868     		ldr	r0, [r3]
 26568 007a C568     		ldr	r5, [r0, #12]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26569              		.loc 1 12273 41 view .LVU7514
 26570 007c 0123     		movs	r3, #1
 26571 007e 0DF10702 		add	r2, sp, #7
 26572 0082 0A21     		movs	r1, #10
 26573 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26574 0086 A847     		blx	r5
 26575              	.LVL3339:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26576              		.loc 1 12273 38 view .LVU7515
 26577 0088 54FA80F0 		uxtab	r0, r4, r0
 26578 008c 44B2     		sxtb	r4, r0
 26579              	.LVL3340:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26580              		.loc 1 12273 38 view .LVU7516
 26581 008e 01E0     		b	.L1804
 26582              	.LVL3341:
 26583              	.L1807:
12292:Core/Src/bno055.c ****             }
12293:Core/Src/bno055.c ****         }
12294:Core/Src/bno055.c ****         else
12295:Core/Src/bno055.c ****         {
12296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26584              		.loc 1 12296 22 view .LVU7517
 26585 0090 4FF0FF34 		mov	r4, #-1
 26586              	.LVL3342:
 26587              	.L1804:
12297:Core/Src/bno055.c ****         }
12298:Core/Src/bno055.c ****     }
12299:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26588              		.loc 1 12299 5 is_stmt 1 view .LVU7518
 26589              		.loc 1 12299 24 is_stmt 0 view .LVU7519
 26590 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 740


 26591              		.loc 1 12299 8 view .LVU7520
 26592 0098 40B9     		cbnz	r0, .L1814
 26593              	.LVL3343:
 26594              	.L1803:
12300:Core/Src/bno055.c ****     {
12301:Core/Src/bno055.c ****         /* set the operation mode of
12302:Core/Src/bno055.c ****          * previous operation mode*/
12303:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12304:Core/Src/bno055.c ****     }
12305:Core/Src/bno055.c **** 
12306:Core/Src/bno055.c ****     return com_rslt;
12307:Core/Src/bno055.c **** }
 26595              		.loc 1 12307 1 view .LVU7521
 26596 009a 2046     		mov	r0, r4
 26597 009c 03B0     		add	sp, sp, #12
 26598              	.LCFI747:
 26599              		.cfi_remember_state
 26600              		.cfi_def_cfa_offset 12
 26601              		@ sp needed
 26602 009e 30BD     		pop	{r4, r5, pc}
 26603              	.LVL3344:
 26604              	.L1809:
 26605              	.LCFI748:
 26606              		.cfi_restore_state
12286:Core/Src/bno055.c ****                 }
 26607              		.loc 1 12286 30 view .LVU7522
 26608 00a0 4FF0FF34 		mov	r4, #-1
 26609              	.LVL3345:
12286:Core/Src/bno055.c ****                 }
 26610              		.loc 1 12286 30 view .LVU7523
 26611 00a4 F6E7     		b	.L1804
 26612              	.LVL3346:
 26613              	.L1810:
12281:Core/Src/bno055.c ****                     }
 26614              		.loc 1 12281 34 view .LVU7524
 26615 00a6 6FF00104 		mvn	r4, #1
 26616              	.LVL3347:
12281:Core/Src/bno055.c ****                     }
 26617              		.loc 1 12281 34 view .LVU7525
 26618 00aa F3E7     		b	.L1804
 26619              	.LVL3348:
 26620              	.L1814:
12303:Core/Src/bno055.c ****     }
 26621              		.loc 1 12303 9 is_stmt 1 view .LVU7526
12303:Core/Src/bno055.c ****     }
 26622              		.loc 1 12303 21 is_stmt 0 view .LVU7527
 26623 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 26624              	.LVL3349:
12303:Core/Src/bno055.c ****     }
 26625              		.loc 1 12303 18 view .LVU7528
 26626 00b0 54FA80F0 		uxtab	r0, r4, r0
 26627 00b4 44B2     		sxtb	r4, r0
 26628              	.LVL3350:
12303:Core/Src/bno055.c ****     }
 26629              		.loc 1 12303 18 view .LVU7529
 26630 00b6 F0E7     		b	.L1803
 26631              	.LVL3351:
ARM GAS  /tmp/cc9kYR4Z.s 			page 741


 26632              	.L1806:
12243:Core/Src/bno055.c ****     }
 26633              		.loc 1 12243 16 view .LVU7530
 26634 00b8 6FF07E04 		mvn	r4, #126
 26635 00bc EDE7     		b	.L1803
 26636              	.L1816:
 26637 00be 00BF     		.align	2
 26638              	.L1815:
 26639 00c0 00000000 		.word	.LANCHOR0
 26640              		.cfi_endproc
 26641              	.LFE188:
 26643              		.section	.text.bno055_get_gyro_bw,"ax",%progbits
 26644              		.align	1
 26645              		.global	bno055_get_gyro_bw
 26646              		.syntax unified
 26647              		.thumb
 26648              		.thumb_func
 26650              	bno055_get_gyro_bw:
 26651              	.LVL3352:
 26652              	.LFB189:
12308:Core/Src/bno055.c **** 
12309:Core/Src/bno055.c **** /*!
12310:Core/Src/bno055.c ****  *  @brief This API used to read the gyro bandwidth
12311:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12312:Core/Src/bno055.c ****  *
12313:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12314:Core/Src/bno055.c ****  *
12315:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12316:Core/Src/bno055.c ****  * --------------------|-----------------
12317:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12318:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12319:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12320:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12321:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12322:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12323:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12324:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12325:Core/Src/bno055.c ****  *
12326:Core/Src/bno055.c ****  *  @return results of bus communication function
12327:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12328:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12329:Core/Src/bno055.c ****  *
12330:Core/Src/bno055.c ****  *
12331:Core/Src/bno055.c ****  */
12332:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_bw(u8 *gyro_bw_u8)
12333:Core/Src/bno055.c **** {
 26653              		.loc 1 12333 1 is_stmt 1 view -0
 26654              		.cfi_startproc
 26655              		@ args = 0, pretend = 0, frame = 8
 26656              		@ frame_needed = 0, uses_anonymous_args = 0
 26657              		.loc 1 12333 1 is_stmt 0 view .LVU7532
 26658 0000 30B5     		push	{r4, r5, lr}
 26659              	.LCFI749:
 26660              		.cfi_def_cfa_offset 12
 26661              		.cfi_offset 4, -12
 26662              		.cfi_offset 5, -8
 26663              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9kYR4Z.s 			page 742


 26664 0002 83B0     		sub	sp, sp, #12
 26665              	.LCFI750:
 26666              		.cfi_def_cfa_offset 24
12334:Core/Src/bno055.c ****     /* Variable used to return value of
12335:Core/Src/bno055.c ****      * communication routine*/
12336:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26667              		.loc 1 12336 5 is_stmt 1 view .LVU7533
 26668              	.LVL3353:
12337:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26669              		.loc 1 12337 5 view .LVU7534
 26670              		.loc 1 12337 8 is_stmt 0 view .LVU7535
 26671 0004 0023     		movs	r3, #0
 26672 0006 8DF80730 		strb	r3, [sp, #7]
12338:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26673              		.loc 1 12338 5 is_stmt 1 view .LVU7536
 26674              	.LVL3354:
12339:Core/Src/bno055.c **** 
12340:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12341:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26675              		.loc 1 12341 5 view .LVU7537
 26676              		.loc 1 12341 18 is_stmt 0 view .LVU7538
 26677 000a 144B     		ldr	r3, .L1825
 26678 000c 1B68     		ldr	r3, [r3]
 26679              		.loc 1 12341 8 view .LVU7539
 26680 000e F3B1     		cbz	r3, .L1821
 26681 0010 0446     		mov	r4, r0
12342:Core/Src/bno055.c ****     {
12343:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12344:Core/Src/bno055.c ****     }
12345:Core/Src/bno055.c ****     else
12346:Core/Src/bno055.c ****     {
12347:Core/Src/bno055.c ****         /*condition check for page, gyro bandwidth is
12348:Core/Src/bno055.c ****          * available in the page one*/
12349:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26682              		.loc 1 12349 9 is_stmt 1 view .LVU7540
 26683              		.loc 1 12349 21 is_stmt 0 view .LVU7541
 26684 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26685              		.loc 1 12349 12 view .LVU7542
 26686 0014 012B     		cmp	r3, #1
 26687 0016 14D1     		bne	.L1824
 26688              	.LVL3355:
 26689              	.L1819:
12350:Core/Src/bno055.c ****         {
12351:Core/Src/bno055.c ****             /* Write page as one */
12352:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12353:Core/Src/bno055.c ****         }
12354:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26690              		.loc 1 12354 53 discriminator 1 view .LVU7543
 26691 0018 104B     		ldr	r3, .L1825
 26692 001a 1B68     		ldr	r3, [r3]
 26693 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26694              		.loc 1 12354 41 discriminator 1 view .LVU7544
 26695 001e 012B     		cmp	r3, #1
 26696 0020 18D1     		bne	.L1822
 26697              	.L1820:
12355:Core/Src/bno055.c ****         {
12356:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 743


 26698              		.loc 1 12356 13 is_stmt 1 view .LVU7545
 26699              		.loc 1 12356 32 is_stmt 0 view .LVU7546
 26700 0022 0E4B     		ldr	r3, .L1825
 26701 0024 1868     		ldr	r0, [r3]
 26702 0026 0569     		ldr	r5, [r0, #16]
 26703              		.loc 1 12356 24 view .LVU7547
 26704 0028 0123     		movs	r3, #1
 26705 002a 0DF10702 		add	r2, sp, #7
 26706 002e 0A21     		movs	r1, #10
 26707 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26708 0032 A847     		blx	r5
 26709              	.LVL3356:
12357:Core/Src/bno055.c ****                                                       BNO055_GYRO_BW_REG,
12358:Core/Src/bno055.c ****                                                       &data_u8r,
12359:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12360:Core/Src/bno055.c ****             *gyro_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_BW);
 26710              		.loc 1 12360 13 is_stmt 1 view .LVU7548
 26711              		.loc 1 12360 27 is_stmt 0 view .LVU7549
 26712 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26713 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 26714              		.loc 1 12360 25 view .LVU7550
 26715 003c 2370     		strb	r3, [r4]
 26716              	.LVL3357:
 26717              	.L1818:
12361:Core/Src/bno055.c ****         }
12362:Core/Src/bno055.c ****         else
12363:Core/Src/bno055.c ****         {
12364:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12365:Core/Src/bno055.c ****         }
12366:Core/Src/bno055.c ****     }
12367:Core/Src/bno055.c **** 
12368:Core/Src/bno055.c ****     return com_rslt;
12369:Core/Src/bno055.c **** }
 26718              		.loc 1 12369 1 view .LVU7551
 26719 003e 03B0     		add	sp, sp, #12
 26720              	.LCFI751:
 26721              		.cfi_remember_state
 26722              		.cfi_def_cfa_offset 12
 26723              		@ sp needed
 26724 0040 30BD     		pop	{r4, r5, pc}
 26725              	.LVL3358:
 26726              	.L1824:
 26727              	.LCFI752:
 26728              		.cfi_restore_state
12352:Core/Src/bno055.c ****         }
 26729              		.loc 1 12352 13 is_stmt 1 view .LVU7552
12352:Core/Src/bno055.c ****         }
 26730              		.loc 1 12352 23 is_stmt 0 view .LVU7553
 26731 0042 0120     		movs	r0, #1
 26732              	.LVL3359:
12352:Core/Src/bno055.c ****         }
 26733              		.loc 1 12352 23 view .LVU7554
 26734 0044 FFF7FEFF 		bl	bno055_write_page_id
 26735              	.LVL3360:
12354:Core/Src/bno055.c ****         {
 26736              		.loc 1 12354 9 is_stmt 1 view .LVU7555
12354:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 744


 26737              		.loc 1 12354 12 is_stmt 0 view .LVU7556
 26738 0048 0028     		cmp	r0, #0
 26739 004a EAD0     		beq	.L1820
 26740 004c E4E7     		b	.L1819
 26741              	.LVL3361:
 26742              	.L1821:
12343:Core/Src/bno055.c ****     }
 26743              		.loc 1 12343 16 view .LVU7557
 26744 004e 6FF07E00 		mvn	r0, #126
 26745              	.LVL3362:
12343:Core/Src/bno055.c ****     }
 26746              		.loc 1 12343 16 view .LVU7558
 26747 0052 F4E7     		b	.L1818
 26748              	.LVL3363:
 26749              	.L1822:
12364:Core/Src/bno055.c ****         }
 26750              		.loc 1 12364 22 view .LVU7559
 26751 0054 4FF0FF30 		mov	r0, #-1
 26752 0058 F1E7     		b	.L1818
 26753              	.L1826:
 26754 005a 00BF     		.align	2
 26755              	.L1825:
 26756 005c 00000000 		.word	.LANCHOR0
 26757              		.cfi_endproc
 26758              	.LFE189:
 26760              		.section	.text.bno055_get_gyro_power_mode,"ax",%progbits
 26761              		.align	1
 26762              		.global	bno055_get_gyro_power_mode
 26763              		.syntax unified
 26764              		.thumb
 26765              		.thumb_func
 26767              	bno055_get_gyro_power_mode:
 26768              	.LVL3364:
 26769              	.LFB191:
12370:Core/Src/bno055.c **** 
12371:Core/Src/bno055.c **** /*!
12372:Core/Src/bno055.c ****  *  @brief This API used to write the gyro bandwidth
12373:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12374:Core/Src/bno055.c ****  *
12375:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12376:Core/Src/bno055.c ****  *
12377:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12378:Core/Src/bno055.c ****  * --------------------|-----------------
12379:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12380:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12381:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12382:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12383:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12384:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12385:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12386:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12387:Core/Src/bno055.c ****  *
12388:Core/Src/bno055.c ****  *  @return results of bus communication function
12389:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12390:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12391:Core/Src/bno055.c ****  *
12392:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 745


12393:Core/Src/bno055.c ****  */
12394:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_bw(u8 gyro_bw_u8)
12395:Core/Src/bno055.c **** {
12396:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12397:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12398:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12399:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
12400:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12401:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12402:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12403:Core/Src/bno055.c **** 
12404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12406:Core/Src/bno055.c ****     {
12407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12408:Core/Src/bno055.c ****     }
12409:Core/Src/bno055.c ****     else
12410:Core/Src/bno055.c ****     {
12411:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12412:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12413:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12414:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12415:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12416:Core/Src/bno055.c ****         {
12417:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12418:Core/Src/bno055.c ****             {
12419:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12420:Core/Src/bno055.c ****             }
12421:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12422:Core/Src/bno055.c ****             {
12423:Core/Src/bno055.c ****                 /* Write page as one */
12424:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12425:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12426:Core/Src/bno055.c ****                 {
12427:Core/Src/bno055.c ****                     /* Write the value of gyro bandwidth */
12428:Core/Src/bno055.c ****                     if ((gyro_bw_u8 == BNO055_INIT_VALUE || gyro_bw_u8 > BNO055_INIT_VALUE) &&
12429:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
12430:Core/Src/bno055.c ****                     {
12431:Core/Src/bno055.c ****                         switch (gyro_bw_u8)
12432:Core/Src/bno055.c ****                         {
12433:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
12434:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_523HZ;
12435:Core/Src/bno055.c ****                                 break;
12436:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
12437:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_230HZ;
12438:Core/Src/bno055.c ****                                 break;
12439:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
12440:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_116HZ;
12441:Core/Src/bno055.c ****                                 break;
12442:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
12443:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_47HZ;
12444:Core/Src/bno055.c ****                                 break;
12445:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
12446:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_23HZ;
12447:Core/Src/bno055.c ****                                 break;
12448:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
12449:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_12HZ;
ARM GAS  /tmp/cc9kYR4Z.s 			page 746


12450:Core/Src/bno055.c ****                                 break;
12451:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
12452:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_64HZ;
12453:Core/Src/bno055.c ****                                 break;
12454:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
12455:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_32HZ;
12456:Core/Src/bno055.c ****                                 break;
12457:Core/Src/bno055.c ****                             default:
12458:Core/Src/bno055.c ****                                 break;
12459:Core/Src/bno055.c ****                         }
12460:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12461:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
12462:Core/Src/bno055.c ****                                                                   &data_u8r,
12463:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12464:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12465:Core/Src/bno055.c ****                         {
12466:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_BW, gyro_bw_u8);
12467:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12468:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
12469:Core/Src/bno055.c ****                                                                         &data_u8r,
12470:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12471:Core/Src/bno055.c ****                         }
12472:Core/Src/bno055.c ****                         com_rslt = bno055_get_gyro_power_mode(&gyro_opmode);
12473:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12474:Core/Src/bno055.c ****                         {
12475:Core/Src/bno055.c ****                             if (gyro_opmode == BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE)
12476:Core/Src/bno055.c ****                             {
12477:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12478:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12479:Core/Src/bno055.c ****                                 {
12480:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12481:Core/Src/bno055.c ****                                 }
12482:Core/Src/bno055.c ****                             }
12483:Core/Src/bno055.c ****                         }
12484:Core/Src/bno055.c ****                     }
12485:Core/Src/bno055.c ****                     else
12486:Core/Src/bno055.c ****                     {
12487:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12488:Core/Src/bno055.c ****                     }
12489:Core/Src/bno055.c ****                 }
12490:Core/Src/bno055.c ****                 else
12491:Core/Src/bno055.c ****                 {
12492:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12493:Core/Src/bno055.c ****                 }
12494:Core/Src/bno055.c ****             }
12495:Core/Src/bno055.c ****             else
12496:Core/Src/bno055.c ****             {
12497:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12498:Core/Src/bno055.c ****             }
12499:Core/Src/bno055.c ****         }
12500:Core/Src/bno055.c ****         else
12501:Core/Src/bno055.c ****         {
12502:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12503:Core/Src/bno055.c ****         }
12504:Core/Src/bno055.c ****     }
12505:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12506:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 747


12507:Core/Src/bno055.c ****         /* set the operation mode of
12508:Core/Src/bno055.c ****          * previous operation mode*/
12509:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12510:Core/Src/bno055.c ****     }
12511:Core/Src/bno055.c **** 
12512:Core/Src/bno055.c ****     return com_rslt;
12513:Core/Src/bno055.c **** }
12514:Core/Src/bno055.c **** 
12515:Core/Src/bno055.c **** /*!
12516:Core/Src/bno055.c ****  *  @brief This API used to read the gyro power mode
12517:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12518:Core/Src/bno055.c ****  *
12519:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12520:Core/Src/bno055.c ****  *
12521:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12522:Core/Src/bno055.c ****  * ----------------------|----------------------------
12523:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12524:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12525:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12526:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12527:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12528:Core/Src/bno055.c ****  *
12529:Core/Src/bno055.c ****  *  @return results of bus communication function
12530:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12531:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12532:Core/Src/bno055.c ****  *
12533:Core/Src/bno055.c ****  *
12534:Core/Src/bno055.c ****  */
12535:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_power_mode(u8 *gyro_power_mode_u8)
12536:Core/Src/bno055.c **** {
 26770              		.loc 1 12536 1 is_stmt 1 view -0
 26771              		.cfi_startproc
 26772              		@ args = 0, pretend = 0, frame = 8
 26773              		@ frame_needed = 0, uses_anonymous_args = 0
 26774              		.loc 1 12536 1 is_stmt 0 view .LVU7561
 26775 0000 30B5     		push	{r4, r5, lr}
 26776              	.LCFI753:
 26777              		.cfi_def_cfa_offset 12
 26778              		.cfi_offset 4, -12
 26779              		.cfi_offset 5, -8
 26780              		.cfi_offset 14, -4
 26781 0002 83B0     		sub	sp, sp, #12
 26782              	.LCFI754:
 26783              		.cfi_def_cfa_offset 24
12537:Core/Src/bno055.c ****     /* Variable used to return value of
12538:Core/Src/bno055.c ****      * communication routine*/
12539:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26784              		.loc 1 12539 5 is_stmt 1 view .LVU7562
 26785              	.LVL3365:
12540:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26786              		.loc 1 12540 5 view .LVU7563
 26787              		.loc 1 12540 8 is_stmt 0 view .LVU7564
 26788 0004 0023     		movs	r3, #0
 26789 0006 8DF80730 		strb	r3, [sp, #7]
12541:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26790              		.loc 1 12541 5 is_stmt 1 view .LVU7565
 26791              	.LVL3366:
ARM GAS  /tmp/cc9kYR4Z.s 			page 748


12542:Core/Src/bno055.c **** 
12543:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12544:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26792              		.loc 1 12544 5 view .LVU7566
 26793              		.loc 1 12544 18 is_stmt 0 view .LVU7567
 26794 000a 144B     		ldr	r3, .L1835
 26795 000c 1B68     		ldr	r3, [r3]
 26796              		.loc 1 12544 8 view .LVU7568
 26797 000e F3B1     		cbz	r3, .L1831
 26798 0010 0446     		mov	r4, r0
12545:Core/Src/bno055.c ****     {
12546:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12547:Core/Src/bno055.c ****     }
12548:Core/Src/bno055.c ****     else
12549:Core/Src/bno055.c ****     {
12550:Core/Src/bno055.c ****         /*condition check for page, gyro power mode is
12551:Core/Src/bno055.c ****          * available in the page one*/
12552:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26799              		.loc 1 12552 9 is_stmt 1 view .LVU7569
 26800              		.loc 1 12552 21 is_stmt 0 view .LVU7570
 26801 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26802              		.loc 1 12552 12 view .LVU7571
 26803 0014 012B     		cmp	r3, #1
 26804 0016 14D1     		bne	.L1834
 26805              	.LVL3367:
 26806              	.L1829:
12553:Core/Src/bno055.c ****         {
12554:Core/Src/bno055.c ****             /* Write page as one */
12555:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12556:Core/Src/bno055.c ****         }
12557:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26807              		.loc 1 12557 53 discriminator 1 view .LVU7572
 26808 0018 104B     		ldr	r3, .L1835
 26809 001a 1B68     		ldr	r3, [r3]
 26810 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26811              		.loc 1 12557 41 discriminator 1 view .LVU7573
 26812 001e 012B     		cmp	r3, #1
 26813 0020 18D1     		bne	.L1832
 26814              	.L1830:
12558:Core/Src/bno055.c ****         {
12559:Core/Src/bno055.c ****             /* Write the value of gyro power mode*/
12560:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26815              		.loc 1 12560 13 is_stmt 1 view .LVU7574
 26816              		.loc 1 12560 32 is_stmt 0 view .LVU7575
 26817 0022 0E4B     		ldr	r3, .L1835
 26818 0024 1868     		ldr	r0, [r3]
 26819 0026 0569     		ldr	r5, [r0, #16]
 26820              		.loc 1 12560 24 view .LVU7576
 26821 0028 0123     		movs	r3, #1
 26822 002a 0DF10702 		add	r2, sp, #7
 26823 002e 0B21     		movs	r1, #11
 26824 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26825 0032 A847     		blx	r5
 26826              	.LVL3368:
12561:Core/Src/bno055.c ****                                                       BNO055_GYRO_POWER_MODE_REG,
12562:Core/Src/bno055.c ****                                                       &data_u8r,
12563:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/cc9kYR4Z.s 			page 749


12564:Core/Src/bno055.c ****             *gyro_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE);
 26827              		.loc 1 12564 13 is_stmt 1 view .LVU7577
 26828              		.loc 1 12564 35 is_stmt 0 view .LVU7578
 26829 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26830 0038 03F00703 		and	r3, r3, #7
 26831              		.loc 1 12564 33 view .LVU7579
 26832 003c 2370     		strb	r3, [r4]
 26833              	.LVL3369:
 26834              	.L1828:
12565:Core/Src/bno055.c ****         }
12566:Core/Src/bno055.c ****         else
12567:Core/Src/bno055.c ****         {
12568:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12569:Core/Src/bno055.c ****         }
12570:Core/Src/bno055.c ****     }
12571:Core/Src/bno055.c **** 
12572:Core/Src/bno055.c ****     return com_rslt;
12573:Core/Src/bno055.c **** }
 26835              		.loc 1 12573 1 view .LVU7580
 26836 003e 03B0     		add	sp, sp, #12
 26837              	.LCFI755:
 26838              		.cfi_remember_state
 26839              		.cfi_def_cfa_offset 12
 26840              		@ sp needed
 26841 0040 30BD     		pop	{r4, r5, pc}
 26842              	.LVL3370:
 26843              	.L1834:
 26844              	.LCFI756:
 26845              		.cfi_restore_state
12555:Core/Src/bno055.c ****         }
 26846              		.loc 1 12555 13 is_stmt 1 view .LVU7581
12555:Core/Src/bno055.c ****         }
 26847              		.loc 1 12555 23 is_stmt 0 view .LVU7582
 26848 0042 0120     		movs	r0, #1
 26849              	.LVL3371:
12555:Core/Src/bno055.c ****         }
 26850              		.loc 1 12555 23 view .LVU7583
 26851 0044 FFF7FEFF 		bl	bno055_write_page_id
 26852              	.LVL3372:
12557:Core/Src/bno055.c ****         {
 26853              		.loc 1 12557 9 is_stmt 1 view .LVU7584
12557:Core/Src/bno055.c ****         {
 26854              		.loc 1 12557 12 is_stmt 0 view .LVU7585
 26855 0048 0028     		cmp	r0, #0
 26856 004a EAD0     		beq	.L1830
 26857 004c E4E7     		b	.L1829
 26858              	.LVL3373:
 26859              	.L1831:
12546:Core/Src/bno055.c ****     }
 26860              		.loc 1 12546 16 view .LVU7586
 26861 004e 6FF07E00 		mvn	r0, #126
 26862              	.LVL3374:
12546:Core/Src/bno055.c ****     }
 26863              		.loc 1 12546 16 view .LVU7587
 26864 0052 F4E7     		b	.L1828
 26865              	.LVL3375:
 26866              	.L1832:
ARM GAS  /tmp/cc9kYR4Z.s 			page 750


12568:Core/Src/bno055.c ****         }
 26867              		.loc 1 12568 22 view .LVU7588
 26868 0054 4FF0FF30 		mov	r0, #-1
 26869 0058 F1E7     		b	.L1828
 26870              	.L1836:
 26871 005a 00BF     		.align	2
 26872              	.L1835:
 26873 005c 00000000 		.word	.LANCHOR0
 26874              		.cfi_endproc
 26875              	.LFE191:
 26877              		.section	.text.bno055_get_accel_sleep_tmr_mode,"ax",%progbits
 26878              		.align	1
 26879              		.global	bno055_get_accel_sleep_tmr_mode
 26880              		.syntax unified
 26881              		.thumb
 26882              		.thumb_func
 26884              	bno055_get_accel_sleep_tmr_mode:
 26885              	.LVL3376:
 26886              	.LFB193:
12574:Core/Src/bno055.c **** 
12575:Core/Src/bno055.c **** /*!
12576:Core/Src/bno055.c ****  *  @brief This API used to write the gyro power mode
12577:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12578:Core/Src/bno055.c ****  *
12579:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12580:Core/Src/bno055.c ****  *
12581:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12582:Core/Src/bno055.c ****  * ----------------------|----------------------------
12583:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12584:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12585:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12586:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12587:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12588:Core/Src/bno055.c ****  *
12589:Core/Src/bno055.c ****  *  @return results of bus communication function
12590:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12591:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12592:Core/Src/bno055.c ****  *
12593:Core/Src/bno055.c ****  *
12594:Core/Src/bno055.c ****  */
12595:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_power_mode(u8 gyro_power_mode_u8)
12596:Core/Src/bno055.c **** {
12597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12599:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12600:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12601:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
12602:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12604:Core/Src/bno055.c **** 
12605:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12606:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12607:Core/Src/bno055.c ****     {
12608:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12609:Core/Src/bno055.c ****     }
12610:Core/Src/bno055.c ****     else
12611:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 751


12612:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12613:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12614:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12615:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12616:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12617:Core/Src/bno055.c ****         {
12618:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12619:Core/Src/bno055.c ****             {
12620:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12621:Core/Src/bno055.c ****             }
12622:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12623:Core/Src/bno055.c ****             {
12624:Core/Src/bno055.c ****                 /* Write page as one */
12625:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12627:Core/Src/bno055.c ****                 {
12628:Core/Src/bno055.c ****                     /* Write the value of power mode*/
12629:Core/Src/bno055.c ****                     if ((gyro_power_mode_u8 == BNO055_INIT_VALUE || gyro_power_mode_u8 > BNO055_INI
12630:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
12631:Core/Src/bno055.c ****                     {
12632:Core/Src/bno055.c ****                         switch (gyro_power_mode_u8)
12633:Core/Src/bno055.c ****                         {
12634:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_NORMAL:
12635:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_NORMAL;
12636:Core/Src/bno055.c ****                                 break;
12637:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_FASTPOWERUP:
12638:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_FASTPOWERUP;
12639:Core/Src/bno055.c ****                                 break;
12640:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_DEEPSUSPEND:
12641:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_DEEPSUSPEND;
12642:Core/Src/bno055.c ****                                 break;
12643:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_SUSPEND:
12644:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_SUSPEND;
12645:Core/Src/bno055.c ****                                 break;
12646:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE:
12647:Core/Src/bno055.c ****                                 com_rslt = bno055_get_gyro_bw(&gyro_bw_u8);
12648:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12649:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12650:Core/Src/bno055.c ****                                 {
12651:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12652:Core/Src/bno055.c ****                                 }
12653:Core/Src/bno055.c ****                                 com_rslt += bno055_write_page_id(BNO055_PAGE_ONE);
12654:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
12655:Core/Src/bno055.c ****                                 break;
12656:Core/Src/bno055.c ****                             default:
12657:Core/Src/bno055.c ****                                 break;
12658:Core/Src/bno055.c ****                         }
12659:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12660:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
12661:Core/Src/bno055.c ****                                                                   &data_u8r,
12662:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12663:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12664:Core/Src/bno055.c ****                         {
12665:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE, gyro_p
12666:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12667:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
12668:Core/Src/bno055.c ****                                                                         &data_u8r,
ARM GAS  /tmp/cc9kYR4Z.s 			page 752


12669:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12670:Core/Src/bno055.c ****                         }
12671:Core/Src/bno055.c ****                     }
12672:Core/Src/bno055.c ****                     else
12673:Core/Src/bno055.c ****                     {
12674:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12675:Core/Src/bno055.c ****                     }
12676:Core/Src/bno055.c ****                 }
12677:Core/Src/bno055.c ****                 else
12678:Core/Src/bno055.c ****                 {
12679:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12680:Core/Src/bno055.c ****                 }
12681:Core/Src/bno055.c ****             }
12682:Core/Src/bno055.c ****             else
12683:Core/Src/bno055.c ****             {
12684:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12685:Core/Src/bno055.c ****             }
12686:Core/Src/bno055.c ****         }
12687:Core/Src/bno055.c ****         else
12688:Core/Src/bno055.c ****         {
12689:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12690:Core/Src/bno055.c ****         }
12691:Core/Src/bno055.c ****     }
12692:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12693:Core/Src/bno055.c ****     {
12694:Core/Src/bno055.c ****         /* set the operation mode of
12695:Core/Src/bno055.c ****          * previous operation mode*/
12696:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12697:Core/Src/bno055.c ****     }
12698:Core/Src/bno055.c **** 
12699:Core/Src/bno055.c ****     return com_rslt;
12700:Core/Src/bno055.c **** }
12701:Core/Src/bno055.c **** 
12702:Core/Src/bno055.c **** /*!
12703:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep mode
12704:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12705:Core/Src/bno055.c ****  *
12706:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12707:Core/Src/bno055.c ****  *
12708:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12709:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12710:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12711:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12712:Core/Src/bno055.c ****  *
12713:Core/Src/bno055.c ****  *  @return results of bus communication function
12714:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12715:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12716:Core/Src/bno055.c ****  *
12717:Core/Src/bno055.c ****  *
12718:Core/Src/bno055.c ****  */
12719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_tmr_mode(u8 *sleep_tmr_u8)
12720:Core/Src/bno055.c **** {
 26887              		.loc 1 12720 1 is_stmt 1 view -0
 26888              		.cfi_startproc
 26889              		@ args = 0, pretend = 0, frame = 8
 26890              		@ frame_needed = 0, uses_anonymous_args = 0
 26891              		.loc 1 12720 1 is_stmt 0 view .LVU7590
ARM GAS  /tmp/cc9kYR4Z.s 			page 753


 26892 0000 30B5     		push	{r4, r5, lr}
 26893              	.LCFI757:
 26894              		.cfi_def_cfa_offset 12
 26895              		.cfi_offset 4, -12
 26896              		.cfi_offset 5, -8
 26897              		.cfi_offset 14, -4
 26898 0002 83B0     		sub	sp, sp, #12
 26899              	.LCFI758:
 26900              		.cfi_def_cfa_offset 24
12721:Core/Src/bno055.c ****     /* Variable used to return value of
12722:Core/Src/bno055.c ****      * communication routine*/
12723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26901              		.loc 1 12723 5 is_stmt 1 view .LVU7591
 26902              	.LVL3377:
12724:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26903              		.loc 1 12724 5 view .LVU7592
 26904              		.loc 1 12724 8 is_stmt 0 view .LVU7593
 26905 0004 0023     		movs	r3, #0
 26906 0006 8DF80730 		strb	r3, [sp, #7]
12725:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26907              		.loc 1 12725 5 is_stmt 1 view .LVU7594
 26908              	.LVL3378:
12726:Core/Src/bno055.c **** 
12727:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12728:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26909              		.loc 1 12728 5 view .LVU7595
 26910              		.loc 1 12728 18 is_stmt 0 view .LVU7596
 26911 000a 144B     		ldr	r3, .L1845
 26912 000c 1B68     		ldr	r3, [r3]
 26913              		.loc 1 12728 8 view .LVU7597
 26914 000e F3B1     		cbz	r3, .L1841
 26915 0010 0446     		mov	r4, r0
12729:Core/Src/bno055.c ****     {
12730:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12731:Core/Src/bno055.c ****     }
12732:Core/Src/bno055.c ****     else
12733:Core/Src/bno055.c ****     {
12734:Core/Src/bno055.c ****         /*condition check for page, accel sleep mode is
12735:Core/Src/bno055.c ****          * available in the page one*/
12736:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26916              		.loc 1 12736 9 is_stmt 1 view .LVU7598
 26917              		.loc 1 12736 21 is_stmt 0 view .LVU7599
 26918 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26919              		.loc 1 12736 12 view .LVU7600
 26920 0014 012B     		cmp	r3, #1
 26921 0016 14D1     		bne	.L1844
 26922              	.LVL3379:
 26923              	.L1839:
12737:Core/Src/bno055.c ****         {
12738:Core/Src/bno055.c ****             /* Write page as one */
12739:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12740:Core/Src/bno055.c ****         }
12741:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26924              		.loc 1 12741 53 discriminator 1 view .LVU7601
 26925 0018 104B     		ldr	r3, .L1845
 26926 001a 1B68     		ldr	r3, [r3]
 26927 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 754


 26928              		.loc 1 12741 41 discriminator 1 view .LVU7602
 26929 001e 012B     		cmp	r3, #1
 26930 0020 18D1     		bne	.L1842
 26931              	.L1840:
12742:Core/Src/bno055.c ****         {
12743:Core/Src/bno055.c ****             /* read the value of accel sleep mode */
12744:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26932              		.loc 1 12744 13 is_stmt 1 view .LVU7603
 26933              		.loc 1 12744 32 is_stmt 0 view .LVU7604
 26934 0022 0E4B     		ldr	r3, .L1845
 26935 0024 1868     		ldr	r0, [r3]
 26936 0026 0569     		ldr	r5, [r0, #16]
 26937              		.loc 1 12744 24 view .LVU7605
 26938 0028 0123     		movs	r3, #1
 26939 002a 0DF10702 		add	r2, sp, #7
 26940 002e 0C21     		movs	r1, #12
 26941 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26942 0032 A847     		blx	r5
 26943              	.LVL3380:
12745:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_MODE_REG,
12746:Core/Src/bno055.c ****                                                       &data_u8r,
12747:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12748:Core/Src/bno055.c ****             *sleep_tmr_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE);
 26944              		.loc 1 12748 13 is_stmt 1 view .LVU7606
 26945              		.loc 1 12748 29 is_stmt 0 view .LVU7607
 26946 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26947 0038 03F00103 		and	r3, r3, #1
 26948              		.loc 1 12748 27 view .LVU7608
 26949 003c 2370     		strb	r3, [r4]
 26950              	.LVL3381:
 26951              	.L1838:
12749:Core/Src/bno055.c ****         }
12750:Core/Src/bno055.c ****         else
12751:Core/Src/bno055.c ****         {
12752:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12753:Core/Src/bno055.c ****         }
12754:Core/Src/bno055.c ****     }
12755:Core/Src/bno055.c **** 
12756:Core/Src/bno055.c ****     return com_rslt;
12757:Core/Src/bno055.c **** }
 26952              		.loc 1 12757 1 view .LVU7609
 26953 003e 03B0     		add	sp, sp, #12
 26954              	.LCFI759:
 26955              		.cfi_remember_state
 26956              		.cfi_def_cfa_offset 12
 26957              		@ sp needed
 26958 0040 30BD     		pop	{r4, r5, pc}
 26959              	.LVL3382:
 26960              	.L1844:
 26961              	.LCFI760:
 26962              		.cfi_restore_state
12739:Core/Src/bno055.c ****         }
 26963              		.loc 1 12739 13 is_stmt 1 view .LVU7610
12739:Core/Src/bno055.c ****         }
 26964              		.loc 1 12739 23 is_stmt 0 view .LVU7611
 26965 0042 0120     		movs	r0, #1
 26966              	.LVL3383:
ARM GAS  /tmp/cc9kYR4Z.s 			page 755


12739:Core/Src/bno055.c ****         }
 26967              		.loc 1 12739 23 view .LVU7612
 26968 0044 FFF7FEFF 		bl	bno055_write_page_id
 26969              	.LVL3384:
12741:Core/Src/bno055.c ****         {
 26970              		.loc 1 12741 9 is_stmt 1 view .LVU7613
12741:Core/Src/bno055.c ****         {
 26971              		.loc 1 12741 12 is_stmt 0 view .LVU7614
 26972 0048 0028     		cmp	r0, #0
 26973 004a EAD0     		beq	.L1840
 26974 004c E4E7     		b	.L1839
 26975              	.LVL3385:
 26976              	.L1841:
12730:Core/Src/bno055.c ****     }
 26977              		.loc 1 12730 16 view .LVU7615
 26978 004e 6FF07E00 		mvn	r0, #126
 26979              	.LVL3386:
12730:Core/Src/bno055.c ****     }
 26980              		.loc 1 12730 16 view .LVU7616
 26981 0052 F4E7     		b	.L1838
 26982              	.LVL3387:
 26983              	.L1842:
12752:Core/Src/bno055.c ****         }
 26984              		.loc 1 12752 22 view .LVU7617
 26985 0054 4FF0FF30 		mov	r0, #-1
 26986 0058 F1E7     		b	.L1838
 26987              	.L1846:
 26988 005a 00BF     		.align	2
 26989              	.L1845:
 26990 005c 00000000 		.word	.LANCHOR0
 26991              		.cfi_endproc
 26992              	.LFE193:
 26994              		.section	.text.bno055_set_accel_sleep_tmr_mode,"ax",%progbits
 26995              		.align	1
 26996              		.global	bno055_set_accel_sleep_tmr_mode
 26997              		.syntax unified
 26998              		.thumb
 26999              		.thumb_func
 27001              	bno055_set_accel_sleep_tmr_mode:
 27002              	.LVL3388:
 27003              	.LFB194:
12758:Core/Src/bno055.c **** 
12759:Core/Src/bno055.c **** /*!
12760:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep mode
12761:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12762:Core/Src/bno055.c ****  *
12763:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12764:Core/Src/bno055.c ****  *
12765:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12766:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12767:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12768:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12769:Core/Src/bno055.c ****  *
12770:Core/Src/bno055.c ****  *  @return results of bus communication function
12771:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12772:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12773:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 756


12774:Core/Src/bno055.c ****  *
12775:Core/Src/bno055.c ****  */
12776:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_tmr_mode(u8 sleep_tmr_u8)
12777:Core/Src/bno055.c **** {
 27004              		.loc 1 12777 1 is_stmt 1 view -0
 27005              		.cfi_startproc
 27006              		@ args = 0, pretend = 0, frame = 8
 27007              		@ frame_needed = 0, uses_anonymous_args = 0
 27008              		.loc 1 12777 1 is_stmt 0 view .LVU7619
 27009 0000 30B5     		push	{r4, r5, lr}
 27010              	.LCFI761:
 27011              		.cfi_def_cfa_offset 12
 27012              		.cfi_offset 4, -12
 27013              		.cfi_offset 5, -8
 27014              		.cfi_offset 14, -4
 27015 0002 83B0     		sub	sp, sp, #12
 27016              	.LCFI762:
 27017              		.cfi_def_cfa_offset 24
12778:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27018              		.loc 1 12778 5 is_stmt 1 view .LVU7620
 27019              	.LVL3389:
12779:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27020              		.loc 1 12779 5 view .LVU7621
 27021              		.loc 1 12779 8 is_stmt 0 view .LVU7622
 27022 0004 0023     		movs	r3, #0
 27023 0006 8DF80730 		strb	r3, [sp, #7]
12780:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27024              		.loc 1 12780 5 is_stmt 1 view .LVU7623
 27025              	.LVL3390:
12781:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27026              		.loc 1 12781 5 view .LVU7624
 27027              		.loc 1 12781 8 is_stmt 0 view .LVU7625
 27028 000a 8DF80630 		strb	r3, [sp, #6]
12782:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27029              		.loc 1 12782 5 is_stmt 1 view .LVU7626
 27030              	.LVL3391:
12783:Core/Src/bno055.c **** 
12784:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12785:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27031              		.loc 1 12785 5 view .LVU7627
 27032              		.loc 1 12785 18 is_stmt 0 view .LVU7628
 27033 000e 2C4B     		ldr	r3, .L1861
 27034 0010 1B68     		ldr	r3, [r3]
 27035              		.loc 1 12785 8 view .LVU7629
 27036 0012 002B     		cmp	r3, #0
 27037 0014 50D0     		beq	.L1851
 27038 0016 0546     		mov	r5, r0
12786:Core/Src/bno055.c ****     {
12787:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12788:Core/Src/bno055.c ****     }
12789:Core/Src/bno055.c ****     else
12790:Core/Src/bno055.c ****     {
12791:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12792:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12793:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12794:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27039              		.loc 1 12794 9 is_stmt 1 view .LVU7630
ARM GAS  /tmp/cc9kYR4Z.s 			page 757


 27040              		.loc 1 12794 19 is_stmt 0 view .LVU7631
 27041 0018 0DF10600 		add	r0, sp, #6
 27042              	.LVL3392:
 27043              		.loc 1 12794 19 view .LVU7632
 27044 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27045              	.LVL3393:
12795:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27046              		.loc 1 12795 9 is_stmt 1 view .LVU7633
 27047              		.loc 1 12795 12 is_stmt 0 view .LVU7634
 27048 0020 0446     		mov	r4, r0
 27049 0022 0028     		cmp	r0, #0
 27050 0024 37D1     		bne	.L1852
12796:Core/Src/bno055.c ****         {
12797:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27051              		.loc 1 12797 13 is_stmt 1 view .LVU7635
 27052              		.loc 1 12797 32 is_stmt 0 view .LVU7636
 27053 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27054              		.loc 1 12797 16 view .LVU7637
 27055 002a 1BB9     		cbnz	r3, .L1857
 27056              	.LVL3394:
 27057              	.L1850:
12798:Core/Src/bno055.c ****             {
12799:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12800:Core/Src/bno055.c ****             }
12801:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27058              		.loc 1 12801 13 is_stmt 1 view .LVU7638
 27059              		.loc 1 12801 16 is_stmt 0 view .LVU7639
 27060 002c 44B1     		cbz	r4, .L1858
12802:Core/Src/bno055.c ****             {
12803:Core/Src/bno055.c ****                 /* Write page as one */
12804:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12805:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12806:Core/Src/bno055.c ****                 {
12807:Core/Src/bno055.c ****                     if (sleep_tmr_u8 < BNO055_ACCEL_SLEEP_MODE_RANGE)
12808:Core/Src/bno055.c ****                     {
12809:Core/Src/bno055.c ****                         /*Write the value
12810:Core/Src/bno055.c ****                          * of accel sleep mode*/
12811:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12812:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
12813:Core/Src/bno055.c ****                                                                   &data_u8r,
12814:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12815:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12816:Core/Src/bno055.c ****                         {
12817:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE, sleep
12818:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12819:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
12820:Core/Src/bno055.c ****                                                                         &data_u8r,
12821:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12822:Core/Src/bno055.c ****                         }
12823:Core/Src/bno055.c ****                     }
12824:Core/Src/bno055.c ****                     else
12825:Core/Src/bno055.c ****                     {
12826:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12827:Core/Src/bno055.c ****                     }
12828:Core/Src/bno055.c ****                 }
12829:Core/Src/bno055.c ****                 else
12830:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/cc9kYR4Z.s 			page 758


12831:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12832:Core/Src/bno055.c ****                 }
12833:Core/Src/bno055.c ****             }
12834:Core/Src/bno055.c ****             else
12835:Core/Src/bno055.c ****             {
12836:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27061              		.loc 1 12836 26 view .LVU7640
 27062 002e 4FF0FF34 		mov	r4, #-1
 27063              	.LVL3395:
 27064              		.loc 1 12836 26 view .LVU7641
 27065 0032 32E0     		b	.L1849
 27066              	.LVL3396:
 27067              	.L1857:
12799:Core/Src/bno055.c ****             }
 27068              		.loc 1 12799 17 is_stmt 1 view .LVU7642
12799:Core/Src/bno055.c ****             }
 27069              		.loc 1 12799 28 is_stmt 0 view .LVU7643
 27070 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27071              	.LVL3397:
12799:Core/Src/bno055.c ****             }
 27072              		.loc 1 12799 25 view .LVU7644
 27073 0038 54FA80F4 		uxtab	r4, r4, r0
 27074 003c 64B2     		sxtb	r4, r4
 27075              	.LVL3398:
12799:Core/Src/bno055.c ****             }
 27076              		.loc 1 12799 25 view .LVU7645
 27077 003e F5E7     		b	.L1850
 27078              	.L1858:
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27079              		.loc 1 12804 17 is_stmt 1 view .LVU7646
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27080              		.loc 1 12804 30 is_stmt 0 view .LVU7647
 27081 0040 0120     		movs	r0, #1
 27082 0042 FFF7FEFF 		bl	bno055_write_page_id
 27083              	.LVL3399:
12805:Core/Src/bno055.c ****                 {
 27084              		.loc 1 12805 17 is_stmt 1 view .LVU7648
12805:Core/Src/bno055.c ****                 {
 27085              		.loc 1 12805 20 is_stmt 0 view .LVU7649
 27086 0046 70BB     		cbnz	r0, .L1854
12807:Core/Src/bno055.c ****                     {
 27087              		.loc 1 12807 21 is_stmt 1 view .LVU7650
12807:Core/Src/bno055.c ****                     {
 27088              		.loc 1 12807 24 is_stmt 0 view .LVU7651
 27089 0048 012D     		cmp	r5, #1
 27090 004a 02D9     		bls	.L1859
12826:Core/Src/bno055.c ****                     }
 27091              		.loc 1 12826 34 view .LVU7652
 27092 004c 6FF00104 		mvn	r4, #1
 27093              	.LVL3400:
12826:Core/Src/bno055.c ****                     }
 27094              		.loc 1 12826 34 view .LVU7653
 27095 0050 23E0     		b	.L1849
 27096              	.LVL3401:
 27097              	.L1859:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27098              		.loc 1 12811 25 is_stmt 1 view .LVU7654
ARM GAS  /tmp/cc9kYR4Z.s 			page 759


12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27099              		.loc 1 12811 44 is_stmt 0 view .LVU7655
 27100 0052 1B4B     		ldr	r3, .L1861
 27101 0054 1868     		ldr	r0, [r3]
 27102              	.LVL3402:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27103              		.loc 1 12811 44 view .LVU7656
 27104 0056 0469     		ldr	r4, [r0, #16]
 27105              	.LVL3403:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27106              		.loc 1 12811 36 view .LVU7657
 27107 0058 0123     		movs	r3, #1
 27108 005a 0DF10702 		add	r2, sp, #7
 27109 005e 0C21     		movs	r1, #12
 27110 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27111 0062 A047     		blx	r4
 27112              	.LVL3404:
12815:Core/Src/bno055.c ****                         {
 27113              		.loc 1 12815 25 is_stmt 1 view .LVU7658
12815:Core/Src/bno055.c ****                         {
 27114              		.loc 1 12815 28 is_stmt 0 view .LVU7659
 27115 0064 0446     		mov	r4, r0
 27116 0066 C0B9     		cbnz	r0, .L1849
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27117              		.loc 1 12817 29 is_stmt 1 view .LVU7660
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27118              		.loc 1 12817 40 is_stmt 0 view .LVU7661
 27119 0068 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27120 006c 23F00103 		bic	r3, r3, #1
 27121 0070 5BB2     		sxtb	r3, r3
 27122 0072 05F00100 		and	r0, r5, #1
 27123              	.LVL3405:
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27124              		.loc 1 12817 40 view .LVU7662
 27125 0076 0343     		orrs	r3, r3, r0
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27126              		.loc 1 12817 38 view .LVU7663
 27127 0078 8DF80730 		strb	r3, [sp, #7]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27128              		.loc 1 12818 29 is_stmt 1 view .LVU7664
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27129              		.loc 1 12818 49 is_stmt 0 view .LVU7665
 27130 007c 104B     		ldr	r3, .L1861
 27131 007e 1868     		ldr	r0, [r3]
 27132 0080 C568     		ldr	r5, [r0, #12]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27133              		.loc 1 12818 41 view .LVU7666
 27134 0082 0123     		movs	r3, #1
 27135 0084 0DF10702 		add	r2, sp, #7
 27136 0088 0C21     		movs	r1, #12
 27137 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27138 008c A847     		blx	r5
 27139              	.LVL3406:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27140              		.loc 1 12818 38 view .LVU7667
 27141 008e 54FA80F0 		uxtab	r0, r4, r0
 27142 0092 44B2     		sxtb	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 760


 27143              	.LVL3407:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27144              		.loc 1 12818 38 view .LVU7668
 27145 0094 01E0     		b	.L1849
 27146              	.LVL3408:
 27147              	.L1852:
12837:Core/Src/bno055.c ****             }
12838:Core/Src/bno055.c ****         }
12839:Core/Src/bno055.c ****         else
12840:Core/Src/bno055.c ****         {
12841:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27148              		.loc 1 12841 22 view .LVU7669
 27149 0096 4FF0FF34 		mov	r4, #-1
 27150              	.LVL3409:
 27151              	.L1849:
12842:Core/Src/bno055.c ****         }
12843:Core/Src/bno055.c ****     }
12844:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27152              		.loc 1 12844 5 is_stmt 1 view .LVU7670
 27153              		.loc 1 12844 24 is_stmt 0 view .LVU7671
 27154 009a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27155              		.loc 1 12844 8 view .LVU7672
 27156 009e 28B9     		cbnz	r0, .L1860
 27157              	.LVL3410:
 27158              	.L1848:
12845:Core/Src/bno055.c ****     {
12846:Core/Src/bno055.c ****         /* set the operation mode of
12847:Core/Src/bno055.c ****          * previous operation mode*/
12848:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12849:Core/Src/bno055.c ****     }
12850:Core/Src/bno055.c **** 
12851:Core/Src/bno055.c ****     return com_rslt;
12852:Core/Src/bno055.c **** }
 27159              		.loc 1 12852 1 view .LVU7673
 27160 00a0 2046     		mov	r0, r4
 27161 00a2 03B0     		add	sp, sp, #12
 27162              	.LCFI763:
 27163              		.cfi_remember_state
 27164              		.cfi_def_cfa_offset 12
 27165              		@ sp needed
 27166 00a4 30BD     		pop	{r4, r5, pc}
 27167              	.LVL3411:
 27168              	.L1854:
 27169              	.LCFI764:
 27170              		.cfi_restore_state
12831:Core/Src/bno055.c ****                 }
 27171              		.loc 1 12831 30 view .LVU7674
 27172 00a6 4FF0FF34 		mov	r4, #-1
 27173              	.LVL3412:
12831:Core/Src/bno055.c ****                 }
 27174              		.loc 1 12831 30 view .LVU7675
 27175 00aa F6E7     		b	.L1849
 27176              	.LVL3413:
 27177              	.L1860:
12848:Core/Src/bno055.c ****     }
 27178              		.loc 1 12848 9 is_stmt 1 view .LVU7676
12848:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 761


 27179              		.loc 1 12848 21 is_stmt 0 view .LVU7677
 27180 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 27181              	.LVL3414:
12848:Core/Src/bno055.c ****     }
 27182              		.loc 1 12848 18 view .LVU7678
 27183 00b0 54FA80F0 		uxtab	r0, r4, r0
 27184 00b4 44B2     		sxtb	r4, r0
 27185              	.LVL3415:
12848:Core/Src/bno055.c ****     }
 27186              		.loc 1 12848 18 view .LVU7679
 27187 00b6 F3E7     		b	.L1848
 27188              	.LVL3416:
 27189              	.L1851:
12787:Core/Src/bno055.c ****     }
 27190              		.loc 1 12787 16 view .LVU7680
 27191 00b8 6FF07E04 		mvn	r4, #126
 27192 00bc F0E7     		b	.L1848
 27193              	.L1862:
 27194 00be 00BF     		.align	2
 27195              	.L1861:
 27196 00c0 00000000 		.word	.LANCHOR0
 27197              		.cfi_endproc
 27198              	.LFE194:
 27200              		.section	.text.bno055_get_accel_sleep_durn,"ax",%progbits
 27201              		.align	1
 27202              		.global	bno055_get_accel_sleep_durn
 27203              		.syntax unified
 27204              		.thumb
 27205              		.thumb_func
 27207              	bno055_get_accel_sleep_durn:
 27208              	.LVL3417:
 27209              	.LFB195:
12853:Core/Src/bno055.c **** 
12854:Core/Src/bno055.c **** /*!
12855:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep duration
12856:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
12857:Core/Src/bno055.c ****  *
12858:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12859:Core/Src/bno055.c ****  *
12860:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12861:Core/Src/bno055.c ****  * ---------------- |-----------------------------
12862:Core/Src/bno055.c ****  *     0x05         | BNO055_ACCEL_SLEEP_DURN_0_5MS
12863:Core/Src/bno055.c ****  *     0x06         | BNO055_ACCEL_SLEEP_DURN_1MS
12864:Core/Src/bno055.c ****  *     0x07         | BNO055_ACCEL_SLEEP_DURN_2MS
12865:Core/Src/bno055.c ****  *     0x08         | BNO055_ACCEL_SLEEP_DURN_4MS
12866:Core/Src/bno055.c ****  *     0x09         | BNO055_ACCEL_SLEEP_DURN_6MS
12867:Core/Src/bno055.c ****  *     0x0A         | BNO055_ACCEL_SLEEP_DURN_10MS
12868:Core/Src/bno055.c ****  *     0x0B         | BNO055_ACCEL_SLEEP_DURN_25MS
12869:Core/Src/bno055.c ****  *     0x0C         | BNO055_ACCEL_SLEEP_DURN_50MS
12870:Core/Src/bno055.c ****  *     0x0D         | BNO055_ACCEL_SLEEP_DURN_100MS
12871:Core/Src/bno055.c ****  *     0x0E         | BNO055_ACCEL_SLEEP_DURN_500MS
12872:Core/Src/bno055.c ****  *     0x0F         | BNO055_ACCEL_SLEEP_DURN_1S
12873:Core/Src/bno055.c ****  *
12874:Core/Src/bno055.c ****  *  @return results of bus communication function
12875:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12876:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12877:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 762


12878:Core/Src/bno055.c ****  *
12879:Core/Src/bno055.c ****  */
12880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_durn(u8 *sleep_durn_u8)
12881:Core/Src/bno055.c **** {
 27210              		.loc 1 12881 1 is_stmt 1 view -0
 27211              		.cfi_startproc
 27212              		@ args = 0, pretend = 0, frame = 8
 27213              		@ frame_needed = 0, uses_anonymous_args = 0
 27214              		.loc 1 12881 1 is_stmt 0 view .LVU7682
 27215 0000 30B5     		push	{r4, r5, lr}
 27216              	.LCFI765:
 27217              		.cfi_def_cfa_offset 12
 27218              		.cfi_offset 4, -12
 27219              		.cfi_offset 5, -8
 27220              		.cfi_offset 14, -4
 27221 0002 83B0     		sub	sp, sp, #12
 27222              	.LCFI766:
 27223              		.cfi_def_cfa_offset 24
12882:Core/Src/bno055.c ****     /* Variable used to return value of
12883:Core/Src/bno055.c ****      * communication routine*/
12884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27224              		.loc 1 12884 5 is_stmt 1 view .LVU7683
 27225              	.LVL3418:
12885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27226              		.loc 1 12885 5 view .LVU7684
 27227              		.loc 1 12885 8 is_stmt 0 view .LVU7685
 27228 0004 0023     		movs	r3, #0
 27229 0006 8DF80730 		strb	r3, [sp, #7]
12886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27230              		.loc 1 12886 5 is_stmt 1 view .LVU7686
 27231              	.LVL3419:
12887:Core/Src/bno055.c **** 
12888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27232              		.loc 1 12889 5 view .LVU7687
 27233              		.loc 1 12889 18 is_stmt 0 view .LVU7688
 27234 000a 144B     		ldr	r3, .L1871
 27235 000c 1B68     		ldr	r3, [r3]
 27236              		.loc 1 12889 8 view .LVU7689
 27237 000e F3B1     		cbz	r3, .L1867
 27238 0010 0446     		mov	r4, r0
12890:Core/Src/bno055.c ****     {
12891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12892:Core/Src/bno055.c ****     }
12893:Core/Src/bno055.c ****     else
12894:Core/Src/bno055.c ****     {
12895:Core/Src/bno055.c ****         /*condition check for page, accel sleep duration
12896:Core/Src/bno055.c ****          * available in the page one*/
12897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27239              		.loc 1 12897 9 is_stmt 1 view .LVU7690
 27240              		.loc 1 12897 21 is_stmt 0 view .LVU7691
 27241 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27242              		.loc 1 12897 12 view .LVU7692
 27243 0014 012B     		cmp	r3, #1
 27244 0016 14D1     		bne	.L1870
 27245              	.LVL3420:
 27246              	.L1865:
ARM GAS  /tmp/cc9kYR4Z.s 			page 763


12898:Core/Src/bno055.c ****         {
12899:Core/Src/bno055.c ****             /* Write page as one */
12900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12901:Core/Src/bno055.c ****         }
12902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27247              		.loc 1 12902 53 discriminator 1 view .LVU7693
 27248 0018 104B     		ldr	r3, .L1871
 27249 001a 1B68     		ldr	r3, [r3]
 27250 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27251              		.loc 1 12902 41 discriminator 1 view .LVU7694
 27252 001e 012B     		cmp	r3, #1
 27253 0020 18D1     		bne	.L1868
 27254              	.L1866:
12903:Core/Src/bno055.c ****         {
12904:Core/Src/bno055.c ****             /* Read the value of accel sleep duration */
12905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27255              		.loc 1 12905 13 is_stmt 1 view .LVU7695
 27256              		.loc 1 12905 32 is_stmt 0 view .LVU7696
 27257 0022 0E4B     		ldr	r3, .L1871
 27258 0024 1868     		ldr	r0, [r3]
 27259 0026 0569     		ldr	r5, [r0, #16]
 27260              		.loc 1 12905 24 view .LVU7697
 27261 0028 0123     		movs	r3, #1
 27262 002a 0DF10702 		add	r2, sp, #7
 27263 002e 0C21     		movs	r1, #12
 27264 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27265 0032 A847     		blx	r5
 27266              	.LVL3421:
12906:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_DURN_REG,
12907:Core/Src/bno055.c ****                                                       &data_u8r,
12908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12909:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN);
 27267              		.loc 1 12909 13 is_stmt 1 view .LVU7698
 27268              		.loc 1 12909 30 is_stmt 0 view .LVU7699
 27269 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27270 0038 C3F34303 		ubfx	r3, r3, #1, #4
 27271              		.loc 1 12909 28 view .LVU7700
 27272 003c 2370     		strb	r3, [r4]
 27273              	.LVL3422:
 27274              	.L1864:
12910:Core/Src/bno055.c ****         }
12911:Core/Src/bno055.c ****         else
12912:Core/Src/bno055.c ****         {
12913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12914:Core/Src/bno055.c ****         }
12915:Core/Src/bno055.c ****     }
12916:Core/Src/bno055.c **** 
12917:Core/Src/bno055.c ****     return com_rslt;
12918:Core/Src/bno055.c **** }
 27275              		.loc 1 12918 1 view .LVU7701
 27276 003e 03B0     		add	sp, sp, #12
 27277              	.LCFI767:
 27278              		.cfi_remember_state
 27279              		.cfi_def_cfa_offset 12
 27280              		@ sp needed
 27281 0040 30BD     		pop	{r4, r5, pc}
 27282              	.LVL3423:
ARM GAS  /tmp/cc9kYR4Z.s 			page 764


 27283              	.L1870:
 27284              	.LCFI768:
 27285              		.cfi_restore_state
12900:Core/Src/bno055.c ****         }
 27286              		.loc 1 12900 13 is_stmt 1 view .LVU7702
12900:Core/Src/bno055.c ****         }
 27287              		.loc 1 12900 23 is_stmt 0 view .LVU7703
 27288 0042 0120     		movs	r0, #1
 27289              	.LVL3424:
12900:Core/Src/bno055.c ****         }
 27290              		.loc 1 12900 23 view .LVU7704
 27291 0044 FFF7FEFF 		bl	bno055_write_page_id
 27292              	.LVL3425:
12902:Core/Src/bno055.c ****         {
 27293              		.loc 1 12902 9 is_stmt 1 view .LVU7705
12902:Core/Src/bno055.c ****         {
 27294              		.loc 1 12902 12 is_stmt 0 view .LVU7706
 27295 0048 0028     		cmp	r0, #0
 27296 004a EAD0     		beq	.L1866
 27297 004c E4E7     		b	.L1865
 27298              	.LVL3426:
 27299              	.L1867:
12891:Core/Src/bno055.c ****     }
 27300              		.loc 1 12891 16 view .LVU7707
 27301 004e 6FF07E00 		mvn	r0, #126
 27302              	.LVL3427:
12891:Core/Src/bno055.c ****     }
 27303              		.loc 1 12891 16 view .LVU7708
 27304 0052 F4E7     		b	.L1864
 27305              	.LVL3428:
 27306              	.L1868:
12913:Core/Src/bno055.c ****         }
 27307              		.loc 1 12913 22 view .LVU7709
 27308 0054 4FF0FF30 		mov	r0, #-1
 27309 0058 F1E7     		b	.L1864
 27310              	.L1872:
 27311 005a 00BF     		.align	2
 27312              	.L1871:
 27313 005c 00000000 		.word	.LANCHOR0
 27314              		.cfi_endproc
 27315              	.LFE195:
 27317              		.section	.text.bno055_set_accel_sleep_durn,"ax",%progbits
 27318              		.align	1
 27319              		.global	bno055_set_accel_sleep_durn
 27320              		.syntax unified
 27321              		.thumb
 27322              		.thumb_func
 27324              	bno055_set_accel_sleep_durn:
 27325              	.LVL3429:
 27326              	.LFB196:
12919:Core/Src/bno055.c **** 
12920:Core/Src/bno055.c **** /*!
12921:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep duration
12922:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
12923:Core/Src/bno055.c ****  *
12924:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12925:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 765


12926:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12927:Core/Src/bno055.c ****  * ---------------|-----------------------------
12928:Core/Src/bno055.c ****  *     0x05       | BNO055_ACCEL_SLEEP_DURN_0_5MS
12929:Core/Src/bno055.c ****  *     0x06       | BNO055_ACCEL_SLEEP_DURN_1MS
12930:Core/Src/bno055.c ****  *     0x07       | BNO055_ACCEL_SLEEP_DURN_2MS
12931:Core/Src/bno055.c ****  *     0x08       | BNO055_ACCEL_SLEEP_DURN_4MS
12932:Core/Src/bno055.c ****  *     0x09       | BNO055_ACCEL_SLEEP_DURN_6MS
12933:Core/Src/bno055.c ****  *     0x0A       | BNO055_ACCEL_SLEEP_DURN_10MS
12934:Core/Src/bno055.c ****  *     0x0B       | BNO055_ACCEL_SLEEP_DURN_25MS
12935:Core/Src/bno055.c ****  *     0x0C       | BNO055_ACCEL_SLEEP_DURN_50MS
12936:Core/Src/bno055.c ****  *     0x0D       | BNO055_ACCEL_SLEEP_DURN_100MS
12937:Core/Src/bno055.c ****  *     0x0E       | BNO055_ACCEL_SLEEP_DURN_500MS
12938:Core/Src/bno055.c ****  *     0x0F       | BNO055_ACCEL_SLEEP_DURN_1S
12939:Core/Src/bno055.c ****  *
12940:Core/Src/bno055.c ****  *  @return results of bus communication function
12941:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12942:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12943:Core/Src/bno055.c ****  *
12944:Core/Src/bno055.c ****  *
12945:Core/Src/bno055.c ****  */
12946:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_durn(u8 sleep_durn_u8)
12947:Core/Src/bno055.c **** {
 27327              		.loc 1 12947 1 is_stmt 1 view -0
 27328              		.cfi_startproc
 27329              		@ args = 0, pretend = 0, frame = 8
 27330              		@ frame_needed = 0, uses_anonymous_args = 0
 27331              		.loc 1 12947 1 is_stmt 0 view .LVU7711
 27332 0000 30B5     		push	{r4, r5, lr}
 27333              	.LCFI769:
 27334              		.cfi_def_cfa_offset 12
 27335              		.cfi_offset 4, -12
 27336              		.cfi_offset 5, -8
 27337              		.cfi_offset 14, -4
 27338 0002 83B0     		sub	sp, sp, #12
 27339              	.LCFI770:
 27340              		.cfi_def_cfa_offset 24
12948:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27341              		.loc 1 12948 5 is_stmt 1 view .LVU7712
 27342              	.LVL3430:
12949:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27343              		.loc 1 12949 5 view .LVU7713
 27344              		.loc 1 12949 8 is_stmt 0 view .LVU7714
 27345 0004 0023     		movs	r3, #0
 27346 0006 8DF80730 		strb	r3, [sp, #7]
12950:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27347              		.loc 1 12950 5 is_stmt 1 view .LVU7715
 27348              	.LVL3431:
12951:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27349              		.loc 1 12951 5 view .LVU7716
 27350              		.loc 1 12951 8 is_stmt 0 view .LVU7717
 27351 000a 8DF80630 		strb	r3, [sp, #6]
12952:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27352              		.loc 1 12952 5 is_stmt 1 view .LVU7718
 27353              	.LVL3432:
12953:Core/Src/bno055.c **** 
12954:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12955:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/cc9kYR4Z.s 			page 766


 27354              		.loc 1 12955 5 view .LVU7719
 27355              		.loc 1 12955 18 is_stmt 0 view .LVU7720
 27356 000e 2C4B     		ldr	r3, .L1886
 27357 0010 1B68     		ldr	r3, [r3]
 27358              		.loc 1 12955 8 view .LVU7721
 27359 0012 002B     		cmp	r3, #0
 27360 0014 51D0     		beq	.L1877
 27361 0016 0546     		mov	r5, r0
12956:Core/Src/bno055.c ****     {
12957:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12958:Core/Src/bno055.c ****     }
12959:Core/Src/bno055.c ****     else
12960:Core/Src/bno055.c ****     {
12961:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12962:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12963:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12964:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27362              		.loc 1 12964 9 is_stmt 1 view .LVU7722
 27363              		.loc 1 12964 19 is_stmt 0 view .LVU7723
 27364 0018 0DF10600 		add	r0, sp, #6
 27365              	.LVL3433:
 27366              		.loc 1 12964 19 view .LVU7724
 27367 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27368              	.LVL3434:
12965:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27369              		.loc 1 12965 9 is_stmt 1 view .LVU7725
 27370              		.loc 1 12965 12 is_stmt 0 view .LVU7726
 27371 0020 0446     		mov	r4, r0
 27372 0022 0028     		cmp	r0, #0
 27373 0024 35D1     		bne	.L1878
12966:Core/Src/bno055.c ****         {
12967:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27374              		.loc 1 12967 13 is_stmt 1 view .LVU7727
 27375              		.loc 1 12967 32 is_stmt 0 view .LVU7728
 27376 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27377              		.loc 1 12967 16 view .LVU7729
 27378 002a 1BB9     		cbnz	r3, .L1883
 27379              	.LVL3435:
 27380              	.L1876:
12968:Core/Src/bno055.c ****             {
12969:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12970:Core/Src/bno055.c ****             }
12971:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27381              		.loc 1 12971 13 is_stmt 1 view .LVU7730
 27382              		.loc 1 12971 16 is_stmt 0 view .LVU7731
 27383 002c 44B1     		cbz	r4, .L1884
12972:Core/Src/bno055.c ****             {
12973:Core/Src/bno055.c ****                 /* Write page as one */
12974:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12975:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12976:Core/Src/bno055.c ****                 {
12977:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_ACCEL_SLEEP_DURATION_RANGE)
12978:Core/Src/bno055.c ****                     {
12979:Core/Src/bno055.c ****                         /* Write the accel
12980:Core/Src/bno055.c ****                         * sleep duration*/
12981:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12982:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 767


12983:Core/Src/bno055.c ****                                                                   &data_u8r,
12984:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12985:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12986:Core/Src/bno055.c ****                         {
12987:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN, sleep
12988:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12989:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
12990:Core/Src/bno055.c ****                                                                         &data_u8r,
12991:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12992:Core/Src/bno055.c ****                         }
12993:Core/Src/bno055.c ****                     }
12994:Core/Src/bno055.c ****                     else
12995:Core/Src/bno055.c ****                     {
12996:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12997:Core/Src/bno055.c ****                     }
12998:Core/Src/bno055.c ****                 }
12999:Core/Src/bno055.c ****                 else
13000:Core/Src/bno055.c ****                 {
13001:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13002:Core/Src/bno055.c ****                 }
13003:Core/Src/bno055.c ****             }
13004:Core/Src/bno055.c ****             else
13005:Core/Src/bno055.c ****             {
13006:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27384              		.loc 1 13006 26 view .LVU7732
 27385 002e 4FF0FF34 		mov	r4, #-1
 27386              	.LVL3436:
 27387              		.loc 1 13006 26 view .LVU7733
 27388 0032 30E0     		b	.L1875
 27389              	.LVL3437:
 27390              	.L1883:
12969:Core/Src/bno055.c ****             }
 27391              		.loc 1 12969 17 is_stmt 1 view .LVU7734
12969:Core/Src/bno055.c ****             }
 27392              		.loc 1 12969 28 is_stmt 0 view .LVU7735
 27393 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27394              	.LVL3438:
12969:Core/Src/bno055.c ****             }
 27395              		.loc 1 12969 25 view .LVU7736
 27396 0038 54FA80F4 		uxtab	r4, r4, r0
 27397 003c 64B2     		sxtb	r4, r4
 27398              	.LVL3439:
12969:Core/Src/bno055.c ****             }
 27399              		.loc 1 12969 25 view .LVU7737
 27400 003e F5E7     		b	.L1876
 27401              	.L1884:
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27402              		.loc 1 12974 17 is_stmt 1 view .LVU7738
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27403              		.loc 1 12974 30 is_stmt 0 view .LVU7739
 27404 0040 0120     		movs	r0, #1
 27405 0042 FFF7FEFF 		bl	bno055_write_page_id
 27406              	.LVL3440:
12975:Core/Src/bno055.c ****                 {
 27407              		.loc 1 12975 17 is_stmt 1 view .LVU7740
12975:Core/Src/bno055.c ****                 {
 27408              		.loc 1 12975 20 is_stmt 0 view .LVU7741
ARM GAS  /tmp/cc9kYR4Z.s 			page 768


 27409 0046 60BB     		cbnz	r0, .L1880
12977:Core/Src/bno055.c ****                     {
 27410              		.loc 1 12977 21 is_stmt 1 view .LVU7742
12977:Core/Src/bno055.c ****                     {
 27411              		.loc 1 12977 24 is_stmt 0 view .LVU7743
 27412 0048 0F2D     		cmp	r5, #15
 27413 004a 2DD8     		bhi	.L1881
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27414              		.loc 1 12981 25 is_stmt 1 view .LVU7744
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27415              		.loc 1 12981 44 is_stmt 0 view .LVU7745
 27416 004c 1C4B     		ldr	r3, .L1886
 27417 004e 1868     		ldr	r0, [r3]
 27418              	.LVL3441:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27419              		.loc 1 12981 44 view .LVU7746
 27420 0050 0469     		ldr	r4, [r0, #16]
 27421              	.LVL3442:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27422              		.loc 1 12981 36 view .LVU7747
 27423 0052 0123     		movs	r3, #1
 27424 0054 0DF10702 		add	r2, sp, #7
 27425 0058 0C21     		movs	r1, #12
 27426 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27427 005c A047     		blx	r4
 27428              	.LVL3443:
12985:Core/Src/bno055.c ****                         {
 27429              		.loc 1 12985 25 is_stmt 1 view .LVU7748
12985:Core/Src/bno055.c ****                         {
 27430              		.loc 1 12985 28 is_stmt 0 view .LVU7749
 27431 005e 0446     		mov	r4, r0
 27432 0060 C8B9     		cbnz	r0, .L1875
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27433              		.loc 1 12987 29 is_stmt 1 view .LVU7750
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27434              		.loc 1 12987 40 is_stmt 0 view .LVU7751
 27435 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27436 0066 23F01E03 		bic	r3, r3, #30
 27437 006a 5BB2     		sxtb	r3, r3
 27438 006c 6800     		lsls	r0, r5, #1
 27439              	.LVL3444:
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27440              		.loc 1 12987 40 view .LVU7752
 27441 006e 00F01E00 		and	r0, r0, #30
 27442 0072 0343     		orrs	r3, r3, r0
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27443              		.loc 1 12987 38 view .LVU7753
 27444 0074 8DF80730 		strb	r3, [sp, #7]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27445              		.loc 1 12988 29 is_stmt 1 view .LVU7754
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27446              		.loc 1 12988 49 is_stmt 0 view .LVU7755
 27447 0078 114B     		ldr	r3, .L1886
 27448 007a 1868     		ldr	r0, [r3]
 27449 007c C568     		ldr	r5, [r0, #12]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27450              		.loc 1 12988 41 view .LVU7756
ARM GAS  /tmp/cc9kYR4Z.s 			page 769


 27451 007e 0123     		movs	r3, #1
 27452 0080 0DF10702 		add	r2, sp, #7
 27453 0084 0C21     		movs	r1, #12
 27454 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27455 0088 A847     		blx	r5
 27456              	.LVL3445:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27457              		.loc 1 12988 38 view .LVU7757
 27458 008a 54FA80F0 		uxtab	r0, r4, r0
 27459 008e 44B2     		sxtb	r4, r0
 27460              	.LVL3446:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27461              		.loc 1 12988 38 view .LVU7758
 27462 0090 01E0     		b	.L1875
 27463              	.LVL3447:
 27464              	.L1878:
13007:Core/Src/bno055.c ****             }
13008:Core/Src/bno055.c ****         }
13009:Core/Src/bno055.c ****         else
13010:Core/Src/bno055.c ****         {
13011:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27465              		.loc 1 13011 22 view .LVU7759
 27466 0092 4FF0FF34 		mov	r4, #-1
 27467              	.LVL3448:
 27468              	.L1875:
13012:Core/Src/bno055.c ****         }
13013:Core/Src/bno055.c ****     }
13014:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27469              		.loc 1 13014 5 is_stmt 1 view .LVU7760
 27470              		.loc 1 13014 24 is_stmt 0 view .LVU7761
 27471 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27472              		.loc 1 13014 8 view .LVU7762
 27473 009a 40B9     		cbnz	r0, .L1885
 27474              	.LVL3449:
 27475              	.L1874:
13015:Core/Src/bno055.c ****     {
13016:Core/Src/bno055.c ****         /* set the operation mode of
13017:Core/Src/bno055.c ****          * previous operation mode*/
13018:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13019:Core/Src/bno055.c ****     }
13020:Core/Src/bno055.c **** 
13021:Core/Src/bno055.c ****     return com_rslt;
13022:Core/Src/bno055.c **** }
 27476              		.loc 1 13022 1 view .LVU7763
 27477 009c 2046     		mov	r0, r4
 27478 009e 03B0     		add	sp, sp, #12
 27479              	.LCFI771:
 27480              		.cfi_remember_state
 27481              		.cfi_def_cfa_offset 12
 27482              		@ sp needed
 27483 00a0 30BD     		pop	{r4, r5, pc}
 27484              	.LVL3450:
 27485              	.L1880:
 27486              	.LCFI772:
 27487              		.cfi_restore_state
13001:Core/Src/bno055.c ****                 }
 27488              		.loc 1 13001 30 view .LVU7764
ARM GAS  /tmp/cc9kYR4Z.s 			page 770


 27489 00a2 4FF0FF34 		mov	r4, #-1
 27490              	.LVL3451:
13001:Core/Src/bno055.c ****                 }
 27491              		.loc 1 13001 30 view .LVU7765
 27492 00a6 F6E7     		b	.L1875
 27493              	.LVL3452:
 27494              	.L1881:
12996:Core/Src/bno055.c ****                     }
 27495              		.loc 1 12996 34 view .LVU7766
 27496 00a8 6FF00104 		mvn	r4, #1
 27497              	.LVL3453:
12996:Core/Src/bno055.c ****                     }
 27498              		.loc 1 12996 34 view .LVU7767
 27499 00ac F3E7     		b	.L1875
 27500              	.LVL3454:
 27501              	.L1885:
13018:Core/Src/bno055.c ****     }
 27502              		.loc 1 13018 9 is_stmt 1 view .LVU7768
13018:Core/Src/bno055.c ****     }
 27503              		.loc 1 13018 21 is_stmt 0 view .LVU7769
 27504 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 27505              	.LVL3455:
13018:Core/Src/bno055.c ****     }
 27506              		.loc 1 13018 18 view .LVU7770
 27507 00b2 54FA80F0 		uxtab	r0, r4, r0
 27508 00b6 44B2     		sxtb	r4, r0
 27509              	.LVL3456:
13018:Core/Src/bno055.c ****     }
 27510              		.loc 1 13018 18 view .LVU7771
 27511 00b8 F0E7     		b	.L1874
 27512              	.LVL3457:
 27513              	.L1877:
12957:Core/Src/bno055.c ****     }
 27514              		.loc 1 12957 16 view .LVU7772
 27515 00ba 6FF07E04 		mvn	r4, #126
 27516 00be EDE7     		b	.L1874
 27517              	.L1887:
 27518              		.align	2
 27519              	.L1886:
 27520 00c0 00000000 		.word	.LANCHOR0
 27521              		.cfi_endproc
 27522              	.LFE196:
 27524              		.section	.text.bno055_get_gyro_sleep_durn,"ax",%progbits
 27525              		.align	1
 27526              		.global	bno055_get_gyro_sleep_durn
 27527              		.syntax unified
 27528              		.thumb
 27529              		.thumb_func
 27531              	bno055_get_gyro_sleep_durn:
 27532              	.LVL3458:
 27533              	.LFB197:
13023:Core/Src/bno055.c **** 
13024:Core/Src/bno055.c **** /*!
13025:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13026:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13027:Core/Src/bno055.c ****  *
13028:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
ARM GAS  /tmp/cc9kYR4Z.s 			page 771


13029:Core/Src/bno055.c ****  *
13030:Core/Src/bno055.c ****  *  @return results of bus communication function
13031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13033:Core/Src/bno055.c ****  *
13034:Core/Src/bno055.c ****  *
13035:Core/Src/bno055.c ****  */
13036:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_sleep_durn(u8 *sleep_durn_u8)
13037:Core/Src/bno055.c **** {
 27534              		.loc 1 13037 1 is_stmt 1 view -0
 27535              		.cfi_startproc
 27536              		@ args = 0, pretend = 0, frame = 8
 27537              		@ frame_needed = 0, uses_anonymous_args = 0
 27538              		.loc 1 13037 1 is_stmt 0 view .LVU7774
 27539 0000 30B5     		push	{r4, r5, lr}
 27540              	.LCFI773:
 27541              		.cfi_def_cfa_offset 12
 27542              		.cfi_offset 4, -12
 27543              		.cfi_offset 5, -8
 27544              		.cfi_offset 14, -4
 27545 0002 83B0     		sub	sp, sp, #12
 27546              	.LCFI774:
 27547              		.cfi_def_cfa_offset 24
13038:Core/Src/bno055.c ****     /* Variable used to return value of
13039:Core/Src/bno055.c ****      * communication routine*/
13040:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27548              		.loc 1 13040 5 is_stmt 1 view .LVU7775
 27549              	.LVL3459:
13041:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27550              		.loc 1 13041 5 view .LVU7776
 27551              		.loc 1 13041 8 is_stmt 0 view .LVU7777
 27552 0004 0023     		movs	r3, #0
 27553 0006 8DF80730 		strb	r3, [sp, #7]
13042:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27554              		.loc 1 13042 5 is_stmt 1 view .LVU7778
 27555              	.LVL3460:
13043:Core/Src/bno055.c **** 
13044:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13045:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27556              		.loc 1 13045 5 view .LVU7779
 27557              		.loc 1 13045 18 is_stmt 0 view .LVU7780
 27558 000a 144B     		ldr	r3, .L1896
 27559 000c 1B68     		ldr	r3, [r3]
 27560              		.loc 1 13045 8 view .LVU7781
 27561 000e F3B1     		cbz	r3, .L1892
 27562 0010 0446     		mov	r4, r0
13046:Core/Src/bno055.c ****     {
13047:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13048:Core/Src/bno055.c ****     }
13049:Core/Src/bno055.c ****     else
13050:Core/Src/bno055.c ****     {
13051:Core/Src/bno055.c ****         /*condition check for page, accel range is
13052:Core/Src/bno055.c ****          * available in the page one*/
13053:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27563              		.loc 1 13053 9 is_stmt 1 view .LVU7782
 27564              		.loc 1 13053 21 is_stmt 0 view .LVU7783
 27565 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 772


 27566              		.loc 1 13053 12 view .LVU7784
 27567 0014 012B     		cmp	r3, #1
 27568 0016 14D1     		bne	.L1895
 27569              	.LVL3461:
 27570              	.L1890:
13054:Core/Src/bno055.c ****         {
13055:Core/Src/bno055.c ****             /* Write page as one */
13056:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13057:Core/Src/bno055.c ****         }
13058:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27571              		.loc 1 13058 53 discriminator 1 view .LVU7785
 27572 0018 104B     		ldr	r3, .L1896
 27573 001a 1B68     		ldr	r3, [r3]
 27574 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27575              		.loc 1 13058 41 discriminator 1 view .LVU7786
 27576 001e 012B     		cmp	r3, #1
 27577 0020 18D1     		bne	.L1893
 27578              	.L1891:
13059:Core/Src/bno055.c ****         {
13060:Core/Src/bno055.c ****             /* Read the gyro sleep duration */
13061:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27579              		.loc 1 13061 13 is_stmt 1 view .LVU7787
 27580              		.loc 1 13061 32 is_stmt 0 view .LVU7788
 27581 0022 0E4B     		ldr	r3, .L1896
 27582 0024 1868     		ldr	r0, [r3]
 27583 0026 0569     		ldr	r5, [r0, #16]
 27584              		.loc 1 13061 24 view .LVU7789
 27585 0028 0123     		movs	r3, #1
 27586 002a 0DF10702 		add	r2, sp, #7
 27587 002e 0D21     		movs	r1, #13
 27588 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27589 0032 A847     		blx	r5
 27590              	.LVL3462:
13062:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLEEP_DURN_REG,
13063:Core/Src/bno055.c ****                                                       &data_u8r,
13064:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13065:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN);
 27591              		.loc 1 13065 13 is_stmt 1 view .LVU7790
 27592              		.loc 1 13065 30 is_stmt 0 view .LVU7791
 27593 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27594 0038 03F00703 		and	r3, r3, #7
 27595              		.loc 1 13065 28 view .LVU7792
 27596 003c 2370     		strb	r3, [r4]
 27597              	.LVL3463:
 27598              	.L1889:
13066:Core/Src/bno055.c ****         }
13067:Core/Src/bno055.c ****         else
13068:Core/Src/bno055.c ****         {
13069:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13070:Core/Src/bno055.c ****         }
13071:Core/Src/bno055.c ****     }
13072:Core/Src/bno055.c **** 
13073:Core/Src/bno055.c ****     return com_rslt;
13074:Core/Src/bno055.c **** }
 27599              		.loc 1 13074 1 view .LVU7793
 27600 003e 03B0     		add	sp, sp, #12
 27601              	.LCFI775:
ARM GAS  /tmp/cc9kYR4Z.s 			page 773


 27602              		.cfi_remember_state
 27603              		.cfi_def_cfa_offset 12
 27604              		@ sp needed
 27605 0040 30BD     		pop	{r4, r5, pc}
 27606              	.LVL3464:
 27607              	.L1895:
 27608              	.LCFI776:
 27609              		.cfi_restore_state
13056:Core/Src/bno055.c ****         }
 27610              		.loc 1 13056 13 is_stmt 1 view .LVU7794
13056:Core/Src/bno055.c ****         }
 27611              		.loc 1 13056 23 is_stmt 0 view .LVU7795
 27612 0042 0120     		movs	r0, #1
 27613              	.LVL3465:
13056:Core/Src/bno055.c ****         }
 27614              		.loc 1 13056 23 view .LVU7796
 27615 0044 FFF7FEFF 		bl	bno055_write_page_id
 27616              	.LVL3466:
13058:Core/Src/bno055.c ****         {
 27617              		.loc 1 13058 9 is_stmt 1 view .LVU7797
13058:Core/Src/bno055.c ****         {
 27618              		.loc 1 13058 12 is_stmt 0 view .LVU7798
 27619 0048 0028     		cmp	r0, #0
 27620 004a EAD0     		beq	.L1891
 27621 004c E4E7     		b	.L1890
 27622              	.LVL3467:
 27623              	.L1892:
13047:Core/Src/bno055.c ****     }
 27624              		.loc 1 13047 16 view .LVU7799
 27625 004e 6FF07E00 		mvn	r0, #126
 27626              	.LVL3468:
13047:Core/Src/bno055.c ****     }
 27627              		.loc 1 13047 16 view .LVU7800
 27628 0052 F4E7     		b	.L1889
 27629              	.LVL3469:
 27630              	.L1893:
13069:Core/Src/bno055.c ****         }
 27631              		.loc 1 13069 22 view .LVU7801
 27632 0054 4FF0FF30 		mov	r0, #-1
 27633 0058 F1E7     		b	.L1889
 27634              	.L1897:
 27635 005a 00BF     		.align	2
 27636              	.L1896:
 27637 005c 00000000 		.word	.LANCHOR0
 27638              		.cfi_endproc
 27639              	.LFE197:
 27641              		.section	.text.bno055_set_gyro_sleep_durn,"ax",%progbits
 27642              		.align	1
 27643              		.global	bno055_set_gyro_sleep_durn
 27644              		.syntax unified
 27645              		.thumb
 27646              		.thumb_func
 27648              	bno055_set_gyro_sleep_durn:
 27649              	.LVL3470:
 27650              	.LFB198:
13075:Core/Src/bno055.c **** 
13076:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/cc9kYR4Z.s 			page 774


13077:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13078:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13079:Core/Src/bno055.c ****  *
13080:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13081:Core/Src/bno055.c ****  *
13082:Core/Src/bno055.c ****  *  @return results of bus communication function
13083:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13084:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13085:Core/Src/bno055.c ****  *
13086:Core/Src/bno055.c ****  *
13087:Core/Src/bno055.c ****  */
13088:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_sleep_durn(u8 sleep_durn_u8)
13089:Core/Src/bno055.c **** {
 27651              		.loc 1 13089 1 is_stmt 1 view -0
 27652              		.cfi_startproc
 27653              		@ args = 0, pretend = 0, frame = 8
 27654              		@ frame_needed = 0, uses_anonymous_args = 0
 27655              		.loc 1 13089 1 is_stmt 0 view .LVU7803
 27656 0000 30B5     		push	{r4, r5, lr}
 27657              	.LCFI777:
 27658              		.cfi_def_cfa_offset 12
 27659              		.cfi_offset 4, -12
 27660              		.cfi_offset 5, -8
 27661              		.cfi_offset 14, -4
 27662 0002 83B0     		sub	sp, sp, #12
 27663              	.LCFI778:
 27664              		.cfi_def_cfa_offset 24
13090:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27665              		.loc 1 13090 5 is_stmt 1 view .LVU7804
 27666              	.LVL3471:
13091:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27667              		.loc 1 13091 5 view .LVU7805
 27668              		.loc 1 13091 8 is_stmt 0 view .LVU7806
 27669 0004 0023     		movs	r3, #0
 27670 0006 8DF80730 		strb	r3, [sp, #7]
13092:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27671              		.loc 1 13092 5 is_stmt 1 view .LVU7807
 27672              	.LVL3472:
13093:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27673              		.loc 1 13093 5 view .LVU7808
13094:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27674              		.loc 1 13094 5 view .LVU7809
 27675              		.loc 1 13094 8 is_stmt 0 view .LVU7810
 27676 000a 8DF80630 		strb	r3, [sp, #6]
13095:Core/Src/bno055.c **** 
13096:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13097:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27677              		.loc 1 13097 5 is_stmt 1 view .LVU7811
 27678              		.loc 1 13097 18 is_stmt 0 view .LVU7812
 27679 000e 2C4B     		ldr	r3, .L1911
 27680 0010 1B68     		ldr	r3, [r3]
 27681              		.loc 1 13097 8 view .LVU7813
 27682 0012 002B     		cmp	r3, #0
 27683 0014 50D0     		beq	.L1902
 27684 0016 0546     		mov	r5, r0
13098:Core/Src/bno055.c ****     {
13099:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 775


13100:Core/Src/bno055.c ****     }
13101:Core/Src/bno055.c ****     else
13102:Core/Src/bno055.c ****     {
13103:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13104:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13105:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13106:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27685              		.loc 1 13106 9 is_stmt 1 view .LVU7814
 27686              		.loc 1 13106 19 is_stmt 0 view .LVU7815
 27687 0018 0DF10600 		add	r0, sp, #6
 27688              	.LVL3473:
 27689              		.loc 1 13106 19 view .LVU7816
 27690 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27691              	.LVL3474:
13107:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27692              		.loc 1 13107 9 is_stmt 1 view .LVU7817
 27693              		.loc 1 13107 12 is_stmt 0 view .LVU7818
 27694 0020 0446     		mov	r4, r0
 27695 0022 0028     		cmp	r0, #0
 27696 0024 34D1     		bne	.L1903
13108:Core/Src/bno055.c ****         {
13109:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27697              		.loc 1 13109 13 is_stmt 1 view .LVU7819
 27698              		.loc 1 13109 32 is_stmt 0 view .LVU7820
 27699 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27700              		.loc 1 13109 16 view .LVU7821
 27701 002a 1BB9     		cbnz	r3, .L1908
 27702              	.LVL3475:
 27703              	.L1901:
13110:Core/Src/bno055.c ****             {
13111:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13112:Core/Src/bno055.c ****             }
13113:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27704              		.loc 1 13113 13 is_stmt 1 view .LVU7822
 27705              		.loc 1 13113 16 is_stmt 0 view .LVU7823
 27706 002c 44B1     		cbz	r4, .L1909
13114:Core/Src/bno055.c ****             {
13115:Core/Src/bno055.c ****                 /* Write page as one */
13116:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13117:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13118:Core/Src/bno055.c ****                 {
13119:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13120:Core/Src/bno055.c ****                     {
13121:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13122:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
13123:Core/Src/bno055.c ****                                                                   &data_u8r,
13124:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
13125:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13126:Core/Src/bno055.c ****                         {
13127:Core/Src/bno055.c ****                             /* Write the gyro
13128:Core/Src/bno055.c ****                              *  sleep duration */
13129:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN, sleep_
13130:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13131:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
13132:Core/Src/bno055.c ****                                                                         &data_u8r,
13133:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13134:Core/Src/bno055.c ****                         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 776


13135:Core/Src/bno055.c ****                     }
13136:Core/Src/bno055.c ****                     else
13137:Core/Src/bno055.c ****                     {
13138:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13139:Core/Src/bno055.c ****                     }
13140:Core/Src/bno055.c ****                 }
13141:Core/Src/bno055.c ****                 else
13142:Core/Src/bno055.c ****                 {
13143:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13144:Core/Src/bno055.c ****                 }
13145:Core/Src/bno055.c ****             }
13146:Core/Src/bno055.c ****             else
13147:Core/Src/bno055.c ****             {
13148:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27707              		.loc 1 13148 26 view .LVU7824
 27708 002e 4FF0FF34 		mov	r4, #-1
 27709              	.LVL3476:
 27710              		.loc 1 13148 26 view .LVU7825
 27711 0032 2FE0     		b	.L1900
 27712              	.LVL3477:
 27713              	.L1908:
13111:Core/Src/bno055.c ****             }
 27714              		.loc 1 13111 17 is_stmt 1 view .LVU7826
13111:Core/Src/bno055.c ****             }
 27715              		.loc 1 13111 28 is_stmt 0 view .LVU7827
 27716 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27717              	.LVL3478:
13111:Core/Src/bno055.c ****             }
 27718              		.loc 1 13111 25 view .LVU7828
 27719 0038 54FA80F4 		uxtab	r4, r4, r0
 27720 003c 64B2     		sxtb	r4, r4
 27721              	.LVL3479:
13111:Core/Src/bno055.c ****             }
 27722              		.loc 1 13111 25 view .LVU7829
 27723 003e F5E7     		b	.L1901
 27724              	.L1909:
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27725              		.loc 1 13116 17 is_stmt 1 view .LVU7830
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27726              		.loc 1 13116 30 is_stmt 0 view .LVU7831
 27727 0040 0120     		movs	r0, #1
 27728 0042 FFF7FEFF 		bl	bno055_write_page_id
 27729              	.LVL3480:
13117:Core/Src/bno055.c ****                 {
 27730              		.loc 1 13117 17 is_stmt 1 view .LVU7832
13117:Core/Src/bno055.c ****                 {
 27731              		.loc 1 13117 20 is_stmt 0 view .LVU7833
 27732 0046 58BB     		cbnz	r0, .L1905
13119:Core/Src/bno055.c ****                     {
 27733              		.loc 1 13119 21 is_stmt 1 view .LVU7834
13119:Core/Src/bno055.c ****                     {
 27734              		.loc 1 13119 24 is_stmt 0 view .LVU7835
 27735 0048 072D     		cmp	r5, #7
 27736 004a 2CD8     		bhi	.L1906
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27737              		.loc 1 13121 25 is_stmt 1 view .LVU7836
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 777


 27738              		.loc 1 13121 44 is_stmt 0 view .LVU7837
 27739 004c 1C4B     		ldr	r3, .L1911
 27740 004e 1868     		ldr	r0, [r3]
 27741              	.LVL3481:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27742              		.loc 1 13121 44 view .LVU7838
 27743 0050 0469     		ldr	r4, [r0, #16]
 27744              	.LVL3482:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27745              		.loc 1 13121 36 view .LVU7839
 27746 0052 0123     		movs	r3, #1
 27747 0054 0DF10702 		add	r2, sp, #7
 27748 0058 0D21     		movs	r1, #13
 27749 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27750 005c A047     		blx	r4
 27751              	.LVL3483:
13125:Core/Src/bno055.c ****                         {
 27752              		.loc 1 13125 25 is_stmt 1 view .LVU7840
13125:Core/Src/bno055.c ****                         {
 27753              		.loc 1 13125 28 is_stmt 0 view .LVU7841
 27754 005e 0446     		mov	r4, r0
 27755 0060 C0B9     		cbnz	r0, .L1900
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27756              		.loc 1 13129 29 is_stmt 1 view .LVU7842
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27757              		.loc 1 13129 40 is_stmt 0 view .LVU7843
 27758 0062 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27759 0066 23F00703 		bic	r3, r3, #7
 27760 006a 5BB2     		sxtb	r3, r3
 27761 006c 05F00700 		and	r0, r5, #7
 27762              	.LVL3484:
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27763              		.loc 1 13129 40 view .LVU7844
 27764 0070 0343     		orrs	r3, r3, r0
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27765              		.loc 1 13129 38 view .LVU7845
 27766 0072 8DF80730 		strb	r3, [sp, #7]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27767              		.loc 1 13130 29 is_stmt 1 view .LVU7846
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27768              		.loc 1 13130 49 is_stmt 0 view .LVU7847
 27769 0076 124B     		ldr	r3, .L1911
 27770 0078 1868     		ldr	r0, [r3]
 27771 007a C568     		ldr	r5, [r0, #12]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27772              		.loc 1 13130 41 view .LVU7848
 27773 007c 0123     		movs	r3, #1
 27774 007e 0DF10702 		add	r2, sp, #7
 27775 0082 0D21     		movs	r1, #13
 27776 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27777 0086 A847     		blx	r5
 27778              	.LVL3485:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27779              		.loc 1 13130 38 view .LVU7849
 27780 0088 54FA80F0 		uxtab	r0, r4, r0
 27781 008c 44B2     		sxtb	r4, r0
 27782              	.LVL3486:
ARM GAS  /tmp/cc9kYR4Z.s 			page 778


13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27783              		.loc 1 13130 38 view .LVU7850
 27784 008e 01E0     		b	.L1900
 27785              	.LVL3487:
 27786              	.L1903:
13149:Core/Src/bno055.c ****             }
13150:Core/Src/bno055.c ****         }
13151:Core/Src/bno055.c ****         else
13152:Core/Src/bno055.c ****         {
13153:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27787              		.loc 1 13153 22 view .LVU7851
 27788 0090 4FF0FF34 		mov	r4, #-1
 27789              	.LVL3488:
 27790              	.L1900:
13154:Core/Src/bno055.c ****         }
13155:Core/Src/bno055.c ****     }
13156:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27791              		.loc 1 13156 5 is_stmt 1 view .LVU7852
 27792              		.loc 1 13156 24 is_stmt 0 view .LVU7853
 27793 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27794              		.loc 1 13156 8 view .LVU7854
 27795 0098 40B9     		cbnz	r0, .L1910
 27796              	.LVL3489:
 27797              	.L1899:
13157:Core/Src/bno055.c ****     {
13158:Core/Src/bno055.c ****         /* set the operation mode of
13159:Core/Src/bno055.c ****          * previous operation mode*/
13160:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13161:Core/Src/bno055.c ****     }
13162:Core/Src/bno055.c **** 
13163:Core/Src/bno055.c ****     return com_rslt;
13164:Core/Src/bno055.c **** }
 27798              		.loc 1 13164 1 view .LVU7855
 27799 009a 2046     		mov	r0, r4
 27800 009c 03B0     		add	sp, sp, #12
 27801              	.LCFI779:
 27802              		.cfi_remember_state
 27803              		.cfi_def_cfa_offset 12
 27804              		@ sp needed
 27805 009e 30BD     		pop	{r4, r5, pc}
 27806              	.LVL3490:
 27807              	.L1905:
 27808              	.LCFI780:
 27809              		.cfi_restore_state
13143:Core/Src/bno055.c ****                 }
 27810              		.loc 1 13143 30 view .LVU7856
 27811 00a0 4FF0FF34 		mov	r4, #-1
 27812              	.LVL3491:
13143:Core/Src/bno055.c ****                 }
 27813              		.loc 1 13143 30 view .LVU7857
 27814 00a4 F6E7     		b	.L1900
 27815              	.LVL3492:
 27816              	.L1906:
13138:Core/Src/bno055.c ****                     }
 27817              		.loc 1 13138 34 view .LVU7858
 27818 00a6 6FF00104 		mvn	r4, #1
 27819              	.LVL3493:
ARM GAS  /tmp/cc9kYR4Z.s 			page 779


13138:Core/Src/bno055.c ****                     }
 27820              		.loc 1 13138 34 view .LVU7859
 27821 00aa F3E7     		b	.L1900
 27822              	.LVL3494:
 27823              	.L1910:
13160:Core/Src/bno055.c ****     }
 27824              		.loc 1 13160 9 is_stmt 1 view .LVU7860
13160:Core/Src/bno055.c ****     }
 27825              		.loc 1 13160 21 is_stmt 0 view .LVU7861
 27826 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 27827              	.LVL3495:
13160:Core/Src/bno055.c ****     }
 27828              		.loc 1 13160 18 view .LVU7862
 27829 00b0 54FA80F0 		uxtab	r0, r4, r0
 27830 00b4 44B2     		sxtb	r4, r0
 27831              	.LVL3496:
13160:Core/Src/bno055.c ****     }
 27832              		.loc 1 13160 18 view .LVU7863
 27833 00b6 F0E7     		b	.L1899
 27834              	.LVL3497:
 27835              	.L1902:
13099:Core/Src/bno055.c ****     }
 27836              		.loc 1 13099 16 view .LVU7864
 27837 00b8 6FF07E04 		mvn	r4, #126
 27838 00bc EDE7     		b	.L1899
 27839              	.L1912:
 27840 00be 00BF     		.align	2
 27841              	.L1911:
 27842 00c0 00000000 		.word	.LANCHOR0
 27843              		.cfi_endproc
 27844              	.LFE198:
 27846              		.section	.text.bno055_get_gyro_auto_sleep_durn,"ax",%progbits
 27847              		.align	1
 27848              		.global	bno055_get_gyro_auto_sleep_durn
 27849              		.syntax unified
 27850              		.thumb
 27851              		.thumb_func
 27853              	bno055_get_gyro_auto_sleep_durn:
 27854              	.LVL3498:
 27855              	.LFB199:
13165:Core/Src/bno055.c **** 
13166:Core/Src/bno055.c **** /*!
13167:Core/Src/bno055.c ****  *  @brief This API used to read the gyro auto sleep duration
13168:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13169:Core/Src/bno055.c ****  *
13170:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13171:Core/Src/bno055.c ****  *
13172:Core/Src/bno055.c ****  *  @return results of bus communication function
13173:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13174:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13175:Core/Src/bno055.c ****  *
13176:Core/Src/bno055.c ****  *
13177:Core/Src/bno055.c ****  */
13178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_auto_sleep_durn(u8 *auto_sleep_durn_u8)
13179:Core/Src/bno055.c **** {
 27856              		.loc 1 13179 1 is_stmt 1 view -0
 27857              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 780


 27858              		@ args = 0, pretend = 0, frame = 8
 27859              		@ frame_needed = 0, uses_anonymous_args = 0
 27860              		.loc 1 13179 1 is_stmt 0 view .LVU7866
 27861 0000 30B5     		push	{r4, r5, lr}
 27862              	.LCFI781:
 27863              		.cfi_def_cfa_offset 12
 27864              		.cfi_offset 4, -12
 27865              		.cfi_offset 5, -8
 27866              		.cfi_offset 14, -4
 27867 0002 83B0     		sub	sp, sp, #12
 27868              	.LCFI782:
 27869              		.cfi_def_cfa_offset 24
13180:Core/Src/bno055.c ****     /* Variable used to return value of
13181:Core/Src/bno055.c ****      * communication routine*/
13182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27870              		.loc 1 13182 5 is_stmt 1 view .LVU7867
 27871              	.LVL3499:
13183:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27872              		.loc 1 13183 5 view .LVU7868
 27873              		.loc 1 13183 8 is_stmt 0 view .LVU7869
 27874 0004 0023     		movs	r3, #0
 27875 0006 8DF80730 		strb	r3, [sp, #7]
13184:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27876              		.loc 1 13184 5 is_stmt 1 view .LVU7870
 27877              	.LVL3500:
13185:Core/Src/bno055.c **** 
13186:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13187:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27878              		.loc 1 13187 5 view .LVU7871
 27879              		.loc 1 13187 18 is_stmt 0 view .LVU7872
 27880 000a 144B     		ldr	r3, .L1921
 27881 000c 1B68     		ldr	r3, [r3]
 27882              		.loc 1 13187 8 view .LVU7873
 27883 000e F3B1     		cbz	r3, .L1917
 27884 0010 0446     		mov	r4, r0
13188:Core/Src/bno055.c ****     {
13189:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13190:Core/Src/bno055.c ****     }
13191:Core/Src/bno055.c ****     else
13192:Core/Src/bno055.c ****     {
13193:Core/Src/bno055.c ****         /*condition check for page, accel range is
13194:Core/Src/bno055.c ****          * available in the page one*/
13195:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27885              		.loc 1 13195 9 is_stmt 1 view .LVU7874
 27886              		.loc 1 13195 21 is_stmt 0 view .LVU7875
 27887 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27888              		.loc 1 13195 12 view .LVU7876
 27889 0014 012B     		cmp	r3, #1
 27890 0016 14D1     		bne	.L1920
 27891              	.LVL3501:
 27892              	.L1915:
13196:Core/Src/bno055.c ****         {
13197:Core/Src/bno055.c ****             /* Write page as one */
13198:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13199:Core/Src/bno055.c ****         }
13200:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27893              		.loc 1 13200 53 discriminator 1 view .LVU7877
ARM GAS  /tmp/cc9kYR4Z.s 			page 781


 27894 0018 104B     		ldr	r3, .L1921
 27895 001a 1B68     		ldr	r3, [r3]
 27896 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27897              		.loc 1 13200 41 discriminator 1 view .LVU7878
 27898 001e 012B     		cmp	r3, #1
 27899 0020 18D1     		bne	.L1918
 27900              	.L1916:
13201:Core/Src/bno055.c ****         {
13202:Core/Src/bno055.c ****             /* Read the value of gyro auto sleep duration */
13203:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27901              		.loc 1 13203 13 is_stmt 1 view .LVU7879
 27902              		.loc 1 13203 32 is_stmt 0 view .LVU7880
 27903 0022 0E4B     		ldr	r3, .L1921
 27904 0024 1868     		ldr	r0, [r3]
 27905 0026 0569     		ldr	r5, [r0, #16]
 27906              		.loc 1 13203 24 view .LVU7881
 27907 0028 0123     		movs	r3, #1
 27908 002a 0DF10702 		add	r2, sp, #7
 27909 002e 0D21     		movs	r1, #13
 27910 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27911 0032 A847     		blx	r5
 27912              	.LVL3502:
13204:Core/Src/bno055.c ****                                                       BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13205:Core/Src/bno055.c ****                                                       &data_u8r,
13206:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13207:Core/Src/bno055.c ****             *auto_sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN);
 27913              		.loc 1 13207 13 is_stmt 1 view .LVU7882
 27914              		.loc 1 13207 35 is_stmt 0 view .LVU7883
 27915 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27916 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 27917              		.loc 1 13207 33 view .LVU7884
 27918 003c 2370     		strb	r3, [r4]
 27919              	.LVL3503:
 27920              	.L1914:
13208:Core/Src/bno055.c ****         }
13209:Core/Src/bno055.c ****         else
13210:Core/Src/bno055.c ****         {
13211:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13212:Core/Src/bno055.c ****         }
13213:Core/Src/bno055.c ****     }
13214:Core/Src/bno055.c **** 
13215:Core/Src/bno055.c ****     return com_rslt;
13216:Core/Src/bno055.c **** }
 27921              		.loc 1 13216 1 view .LVU7885
 27922 003e 03B0     		add	sp, sp, #12
 27923              	.LCFI783:
 27924              		.cfi_remember_state
 27925              		.cfi_def_cfa_offset 12
 27926              		@ sp needed
 27927 0040 30BD     		pop	{r4, r5, pc}
 27928              	.LVL3504:
 27929              	.L1920:
 27930              	.LCFI784:
 27931              		.cfi_restore_state
13198:Core/Src/bno055.c ****         }
 27932              		.loc 1 13198 13 is_stmt 1 view .LVU7886
13198:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 782


 27933              		.loc 1 13198 23 is_stmt 0 view .LVU7887
 27934 0042 0120     		movs	r0, #1
 27935              	.LVL3505:
13198:Core/Src/bno055.c ****         }
 27936              		.loc 1 13198 23 view .LVU7888
 27937 0044 FFF7FEFF 		bl	bno055_write_page_id
 27938              	.LVL3506:
13200:Core/Src/bno055.c ****         {
 27939              		.loc 1 13200 9 is_stmt 1 view .LVU7889
13200:Core/Src/bno055.c ****         {
 27940              		.loc 1 13200 12 is_stmt 0 view .LVU7890
 27941 0048 0028     		cmp	r0, #0
 27942 004a EAD0     		beq	.L1916
 27943 004c E4E7     		b	.L1915
 27944              	.LVL3507:
 27945              	.L1917:
13189:Core/Src/bno055.c ****     }
 27946              		.loc 1 13189 16 view .LVU7891
 27947 004e 6FF07E00 		mvn	r0, #126
 27948              	.LVL3508:
13189:Core/Src/bno055.c ****     }
 27949              		.loc 1 13189 16 view .LVU7892
 27950 0052 F4E7     		b	.L1914
 27951              	.LVL3509:
 27952              	.L1918:
13211:Core/Src/bno055.c ****         }
 27953              		.loc 1 13211 22 view .LVU7893
 27954 0054 4FF0FF30 		mov	r0, #-1
 27955 0058 F1E7     		b	.L1914
 27956              	.L1922:
 27957 005a 00BF     		.align	2
 27958              	.L1921:
 27959 005c 00000000 		.word	.LANCHOR0
 27960              		.cfi_endproc
 27961              	.LFE199:
 27963              		.section	.text.bno055_gyro_set_auto_sleep_durn,"ax",%progbits
 27964              		.align	1
 27965              		.global	bno055_gyro_set_auto_sleep_durn
 27966              		.syntax unified
 27967              		.thumb
 27968              		.thumb_func
 27970              	bno055_gyro_set_auto_sleep_durn:
 27971              	.LVL3510:
 27972              	.LFB200:
13217:Core/Src/bno055.c **** 
13218:Core/Src/bno055.c **** /*!
13219:Core/Src/bno055.c ****  *  @brief This API used to write the gyro auto sleep duration
13220:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13221:Core/Src/bno055.c ****  *
13222:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13223:Core/Src/bno055.c ****  *  @param bw : The value of gyro bandwidth
13224:Core/Src/bno055.c ****  *
13225:Core/Src/bno055.c ****  *  @return results of bus communication function
13226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13228:Core/Src/bno055.c ****  *
13229:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 783


13230:Core/Src/bno055.c ****  */
13231:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_gyro_set_auto_sleep_durn(u8 auto_sleep_durn_u8, u8 bw)
13232:Core/Src/bno055.c **** {
 27973              		.loc 1 13232 1 is_stmt 1 view -0
 27974              		.cfi_startproc
 27975              		@ args = 0, pretend = 0, frame = 8
 27976              		@ frame_needed = 0, uses_anonymous_args = 0
 27977              		.loc 1 13232 1 is_stmt 0 view .LVU7895
 27978 0000 70B5     		push	{r4, r5, r6, lr}
 27979              	.LCFI785:
 27980              		.cfi_def_cfa_offset 16
 27981              		.cfi_offset 4, -16
 27982              		.cfi_offset 5, -12
 27983              		.cfi_offset 6, -8
 27984              		.cfi_offset 14, -4
 27985 0002 82B0     		sub	sp, sp, #8
 27986              	.LCFI786:
 27987              		.cfi_def_cfa_offset 24
13233:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27988              		.loc 1 13233 5 is_stmt 1 view .LVU7896
 27989              	.LVL3511:
13234:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27990              		.loc 1 13234 5 view .LVU7897
 27991              		.loc 1 13234 8 is_stmt 0 view .LVU7898
 27992 0004 0023     		movs	r3, #0
 27993 0006 8DF80730 		strb	r3, [sp, #7]
13235:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27994              		.loc 1 13235 5 is_stmt 1 view .LVU7899
 27995              	.LVL3512:
13236:Core/Src/bno055.c ****     u8 auto_sleep_durn_u8r;
 27996              		.loc 1 13236 5 view .LVU7900
13237:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27997              		.loc 1 13237 5 view .LVU7901
 27998              		.loc 1 13237 8 is_stmt 0 view .LVU7902
 27999 000a 8DF80630 		strb	r3, [sp, #6]
13238:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28000              		.loc 1 13238 5 is_stmt 1 view .LVU7903
 28001              	.LVL3513:
13239:Core/Src/bno055.c **** 
13240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28002              		.loc 1 13241 5 view .LVU7904
 28003              		.loc 1 13241 18 is_stmt 0 view .LVU7905
 28004 000e 444B     		ldr	r3, .L1957
 28005 0010 1B68     		ldr	r3, [r3]
 28006              		.loc 1 13241 8 view .LVU7906
 28007 0012 002B     		cmp	r3, #0
 28008 0014 00F08180 		beq	.L1938
 28009 0018 0446     		mov	r4, r0
 28010 001a 0D46     		mov	r5, r1
13242:Core/Src/bno055.c ****     {
13243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13244:Core/Src/bno055.c ****     }
13245:Core/Src/bno055.c ****     else
13246:Core/Src/bno055.c ****     {
13247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
ARM GAS  /tmp/cc9kYR4Z.s 			page 784


13249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 28011              		.loc 1 13250 9 is_stmt 1 view .LVU7907
 28012              		.loc 1 13250 19 is_stmt 0 view .LVU7908
 28013 001c 0DF10600 		add	r0, sp, #6
 28014              	.LVL3514:
 28015              		.loc 1 13250 19 view .LVU7909
 28016 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 28017              	.LVL3515:
13251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28018              		.loc 1 13251 9 is_stmt 1 view .LVU7910
 28019              		.loc 1 13251 12 is_stmt 0 view .LVU7911
 28020 0024 0646     		mov	r6, r0
 28021 0026 0028     		cmp	r0, #0
 28022 0028 63D1     		bne	.L1939
13252:Core/Src/bno055.c ****         {
13253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28023              		.loc 1 13253 13 is_stmt 1 view .LVU7912
 28024              		.loc 1 13253 32 is_stmt 0 view .LVU7913
 28025 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 28026              		.loc 1 13253 16 view .LVU7914
 28027 002e 1BB9     		cbnz	r3, .L1953
 28028              	.LVL3516:
 28029              	.L1926:
13254:Core/Src/bno055.c ****             {
13255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13256:Core/Src/bno055.c ****             }
13257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 28030              		.loc 1 13257 13 is_stmt 1 view .LVU7915
 28031              		.loc 1 13257 16 is_stmt 0 view .LVU7916
 28032 0030 46B1     		cbz	r6, .L1954
13258:Core/Src/bno055.c ****             {
13259:Core/Src/bno055.c ****                 /* Write page as one */
13260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13262:Core/Src/bno055.c ****                 {
13263:Core/Src/bno055.c ****                     /* Write the value of gyro sleep duration */
13264:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13265:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13266:Core/Src/bno055.c ****                                                               &data_u8r,
13267:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13268:Core/Src/bno055.c ****                     if (auto_sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13269:Core/Src/bno055.c ****                     {
13270:Core/Src/bno055.c ****                         switch (bw)
13271:Core/Src/bno055.c ****                         {
13272:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
13273:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13274:Core/Src/bno055.c ****                                 {
13275:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13276:Core/Src/bno055.c ****                                 }
13277:Core/Src/bno055.c ****                                 else
13278:Core/Src/bno055.c ****                                 {
13279:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13280:Core/Src/bno055.c ****                                 }
13281:Core/Src/bno055.c ****                                 break;
13282:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
13283:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
ARM GAS  /tmp/cc9kYR4Z.s 			page 785


13284:Core/Src/bno055.c ****                                 {
13285:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13286:Core/Src/bno055.c ****                                 }
13287:Core/Src/bno055.c ****                                 else
13288:Core/Src/bno055.c ****                                 {
13289:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13290:Core/Src/bno055.c ****                                 }
13291:Core/Src/bno055.c ****                                 break;
13292:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
13293:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13294:Core/Src/bno055.c ****                                 {
13295:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13296:Core/Src/bno055.c ****                                 }
13297:Core/Src/bno055.c ****                                 else
13298:Core/Src/bno055.c ****                                 {
13299:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13300:Core/Src/bno055.c ****                                 }
13301:Core/Src/bno055.c ****                                 break;
13302:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
13303:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_5MS_AUTOSLPDUR)
13304:Core/Src/bno055.c ****                                 {
13305:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13306:Core/Src/bno055.c ****                                 }
13307:Core/Src/bno055.c ****                                 else
13308:Core/Src/bno055.c ****                                 {
13309:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_5MS_AUTOSLPDUR;
13310:Core/Src/bno055.c ****                                 }
13311:Core/Src/bno055.c ****                                 break;
13312:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
13313:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13314:Core/Src/bno055.c ****                                 {
13315:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13316:Core/Src/bno055.c ****                                 }
13317:Core/Src/bno055.c ****                                 else
13318:Core/Src/bno055.c ****                                 {
13319:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13320:Core/Src/bno055.c ****                                 }
13321:Core/Src/bno055.c ****                                 break;
13322:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
13323:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13324:Core/Src/bno055.c ****                                 {
13325:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13326:Core/Src/bno055.c ****                                 }
13327:Core/Src/bno055.c ****                                 else
13328:Core/Src/bno055.c ****                                 {
13329:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13330:Core/Src/bno055.c ****                                 }
13331:Core/Src/bno055.c ****                                 break;
13332:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
13333:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13334:Core/Src/bno055.c ****                                 {
13335:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13336:Core/Src/bno055.c ****                                 }
13337:Core/Src/bno055.c ****                                 else
13338:Core/Src/bno055.c ****                                 {
13339:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13340:Core/Src/bno055.c ****                                 }
ARM GAS  /tmp/cc9kYR4Z.s 			page 786


13341:Core/Src/bno055.c ****                                 break;
13342:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
13343:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13344:Core/Src/bno055.c ****                                 {
13345:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13346:Core/Src/bno055.c ****                                 }
13347:Core/Src/bno055.c ****                                 else
13348:Core/Src/bno055.c ****                                 {
13349:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13350:Core/Src/bno055.c ****                                 }
13351:Core/Src/bno055.c ****                                 break;
13352:Core/Src/bno055.c ****                             default:
13353:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13354:Core/Src/bno055.c ****                                 {
13355:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13356:Core/Src/bno055.c ****                                 }
13357:Core/Src/bno055.c ****                                 else
13358:Core/Src/bno055.c ****                                 {
13359:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13360:Core/Src/bno055.c ****                                 }
13361:Core/Src/bno055.c ****                                 break;
13362:Core/Src/bno055.c ****                         }
13363:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13364:Core/Src/bno055.c ****                         {
13365:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN, a
13366:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13367:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
13368:Core/Src/bno055.c ****                                                                         &data_u8r,
13369:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13370:Core/Src/bno055.c ****                         }
13371:Core/Src/bno055.c ****                     }
13372:Core/Src/bno055.c ****                     else
13373:Core/Src/bno055.c ****                     {
13374:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13375:Core/Src/bno055.c ****                     }
13376:Core/Src/bno055.c ****                 }
13377:Core/Src/bno055.c ****                 else
13378:Core/Src/bno055.c ****                 {
13379:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13380:Core/Src/bno055.c ****                 }
13381:Core/Src/bno055.c ****             }
13382:Core/Src/bno055.c ****             else
13383:Core/Src/bno055.c ****             {
13384:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 28033              		.loc 1 13384 26 view .LVU7917
 28034 0032 4FF0FF36 		mov	r6, #-1
 28035              	.LVL3517:
 28036              		.loc 1 13384 26 view .LVU7918
 28037 0036 5EE0     		b	.L1925
 28038              	.LVL3518:
 28039              	.L1953:
13255:Core/Src/bno055.c ****             }
 28040              		.loc 1 13255 17 is_stmt 1 view .LVU7919
13255:Core/Src/bno055.c ****             }
 28041              		.loc 1 13255 28 is_stmt 0 view .LVU7920
 28042 0038 FFF7FEFF 		bl	bno055_set_operation_mode
 28043              	.LVL3519:
ARM GAS  /tmp/cc9kYR4Z.s 			page 787


13255:Core/Src/bno055.c ****             }
 28044              		.loc 1 13255 25 view .LVU7921
 28045 003c 56FA80F6 		uxtab	r6, r6, r0
 28046 0040 76B2     		sxtb	r6, r6
 28047              	.LVL3520:
13255:Core/Src/bno055.c ****             }
 28048              		.loc 1 13255 25 view .LVU7922
 28049 0042 F5E7     		b	.L1926
 28050              	.L1954:
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28051              		.loc 1 13260 17 is_stmt 1 view .LVU7923
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28052              		.loc 1 13260 30 is_stmt 0 view .LVU7924
 28053 0044 0120     		movs	r0, #1
 28054 0046 FFF7FEFF 		bl	bno055_write_page_id
 28055              	.LVL3521:
13261:Core/Src/bno055.c ****                 {
 28056              		.loc 1 13261 17 is_stmt 1 view .LVU7925
13261:Core/Src/bno055.c ****                 {
 28057              		.loc 1 13261 20 is_stmt 0 view .LVU7926
 28058 004a 0028     		cmp	r0, #0
 28059 004c 59D1     		bne	.L1941
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28060              		.loc 1 13264 21 is_stmt 1 view .LVU7927
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28061              		.loc 1 13264 40 is_stmt 0 view .LVU7928
 28062 004e 344B     		ldr	r3, .L1957
 28063 0050 1868     		ldr	r0, [r3]
 28064              	.LVL3522:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28065              		.loc 1 13264 40 view .LVU7929
 28066 0052 0669     		ldr	r6, [r0, #16]
 28067              	.LVL3523:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28068              		.loc 1 13264 32 view .LVU7930
 28069 0054 0123     		movs	r3, #1
 28070 0056 0DF10702 		add	r2, sp, #7
 28071 005a 0D21     		movs	r1, #13
 28072 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28073 005e B047     		blx	r6
 28074              	.LVL3524:
 28075 0060 0646     		mov	r6, r0
 28076              	.LVL3525:
13268:Core/Src/bno055.c ****                     {
 28077              		.loc 1 13268 21 is_stmt 1 view .LVU7931
13268:Core/Src/bno055.c ****                     {
 28078              		.loc 1 13268 24 is_stmt 0 view .LVU7932
 28079 0062 072C     		cmp	r4, #7
 28080 0064 50D8     		bhi	.L1942
13270:Core/Src/bno055.c ****                         {
 28081              		.loc 1 13270 25 is_stmt 1 view .LVU7933
 28082 0066 072D     		cmp	r5, #7
 28083 0068 3DD8     		bhi	.L1927
 28084 006a DFE805F0 		tbb	[pc, r5]
 28085              	.L1929:
 28086 006e 04       		.byte	(.L1936-.L1929)/2
 28087 006f 20       		.byte	(.L1935-.L1929)/2
ARM GAS  /tmp/cc9kYR4Z.s 			page 788


 28088 0070 24       		.byte	(.L1934-.L1929)/2
 28089 0071 28       		.byte	(.L1933-.L1929)/2
 28090 0072 2C       		.byte	(.L1932-.L1929)/2
 28091 0073 30       		.byte	(.L1931-.L1929)/2
 28092 0074 34       		.byte	(.L1930-.L1929)/2
 28093 0075 38       		.byte	(.L1928-.L1929)/2
 28094              		.p2align 1
 28095              	.L1936:
13273:Core/Src/bno055.c ****                                 {
 28096              		.loc 1 13273 33 view .LVU7934
13273:Core/Src/bno055.c ****                                 {
 28097              		.loc 1 13273 36 is_stmt 0 view .LVU7935
 28098 0076 012C     		cmp	r4, #1
 28099 0078 39D9     		bls	.L1955
 28100              	.L1937:
 28101              	.LVL3526:
13363:Core/Src/bno055.c ****                         {
 28102              		.loc 1 13363 25 is_stmt 1 view .LVU7936
13363:Core/Src/bno055.c ****                         {
 28103              		.loc 1 13363 28 is_stmt 0 view .LVU7937
 28104 007a 002E     		cmp	r6, #0
 28105 007c 3BD1     		bne	.L1925
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28106              		.loc 1 13365 29 is_stmt 1 view .LVU7938
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28107              		.loc 1 13365 40 is_stmt 0 view .LVU7939
 28108 007e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28109 0082 23F03803 		bic	r3, r3, #56
 28110 0086 5BB2     		sxtb	r3, r3
 28111 0088 E400     		lsls	r4, r4, #3
 28112              	.LVL3527:
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28113              		.loc 1 13365 40 view .LVU7940
 28114 008a 04F03804 		and	r4, r4, #56
 28115 008e 2343     		orrs	r3, r3, r4
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28116              		.loc 1 13365 38 view .LVU7941
 28117 0090 8DF80730 		strb	r3, [sp, #7]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28118              		.loc 1 13366 29 is_stmt 1 view .LVU7942
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28119              		.loc 1 13366 49 is_stmt 0 view .LVU7943
 28120 0094 224B     		ldr	r3, .L1957
 28121 0096 1868     		ldr	r0, [r3]
 28122 0098 C468     		ldr	r4, [r0, #12]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28123              		.loc 1 13366 41 view .LVU7944
 28124 009a 0123     		movs	r3, #1
 28125 009c 0DF10702 		add	r2, sp, #7
 28126 00a0 0D21     		movs	r1, #13
 28127 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28128 00a4 A047     		blx	r4
 28129              	.LVL3528:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28130              		.loc 1 13366 38 view .LVU7945
 28131 00a6 56FA80F0 		uxtab	r0, r6, r0
 28132 00aa 46B2     		sxtb	r6, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 789


 28133              	.LVL3529:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28134              		.loc 1 13366 38 view .LVU7946
 28135 00ac 23E0     		b	.L1925
 28136              	.L1935:
13283:Core/Src/bno055.c ****                                 {
 28137              		.loc 1 13283 33 is_stmt 1 view .LVU7947
13283:Core/Src/bno055.c ****                                 {
 28138              		.loc 1 13283 36 is_stmt 0 view .LVU7948
 28139 00ae 012C     		cmp	r4, #1
 28140 00b0 E3D8     		bhi	.L1937
13289:Core/Src/bno055.c ****                                 }
 28141              		.loc 1 13289 57 view .LVU7949
 28142 00b2 2C46     		mov	r4, r5
 28143 00b4 E1E7     		b	.L1937
 28144              	.L1934:
13293:Core/Src/bno055.c ****                                 {
 28145              		.loc 1 13293 33 is_stmt 1 view .LVU7950
13293:Core/Src/bno055.c ****                                 {
 28146              		.loc 1 13293 36 is_stmt 0 view .LVU7951
 28147 00b6 012C     		cmp	r4, #1
 28148 00b8 DFD8     		bhi	.L1937
13299:Core/Src/bno055.c ****                                 }
 28149              		.loc 1 13299 57 view .LVU7952
 28150 00ba 0124     		movs	r4, #1
 28151 00bc DDE7     		b	.L1937
 28152              	.L1933:
13303:Core/Src/bno055.c ****                                 {
 28153              		.loc 1 13303 33 is_stmt 1 view .LVU7953
13303:Core/Src/bno055.c ****                                 {
 28154              		.loc 1 13303 36 is_stmt 0 view .LVU7954
 28155 00be 022C     		cmp	r4, #2
 28156 00c0 DBD8     		bhi	.L1937
13309:Core/Src/bno055.c ****                                 }
 28157              		.loc 1 13309 57 view .LVU7955
 28158 00c2 0224     		movs	r4, #2
 28159 00c4 D9E7     		b	.L1937
 28160              	.L1932:
13313:Core/Src/bno055.c ****                                 {
 28161              		.loc 1 13313 33 is_stmt 1 view .LVU7956
13313:Core/Src/bno055.c ****                                 {
 28162              		.loc 1 13313 36 is_stmt 0 view .LVU7957
 28163 00c6 042C     		cmp	r4, #4
 28164 00c8 D7D8     		bhi	.L1937
13319:Core/Src/bno055.c ****                                 }
 28165              		.loc 1 13319 57 view .LVU7958
 28166 00ca 2C46     		mov	r4, r5
 28167 00cc D5E7     		b	.L1937
 28168              	.L1931:
13323:Core/Src/bno055.c ****                                 {
 28169              		.loc 1 13323 33 is_stmt 1 view .LVU7959
13323:Core/Src/bno055.c ****                                 {
 28170              		.loc 1 13323 36 is_stmt 0 view .LVU7960
 28171 00ce 062C     		cmp	r4, #6
 28172 00d0 D3D8     		bhi	.L1937
13329:Core/Src/bno055.c ****                                 }
 28173              		.loc 1 13329 57 view .LVU7961
ARM GAS  /tmp/cc9kYR4Z.s 			page 790


 28174 00d2 0624     		movs	r4, #6
 28175 00d4 D1E7     		b	.L1937
 28176              	.L1930:
13333:Core/Src/bno055.c ****                                 {
 28177              		.loc 1 13333 33 is_stmt 1 view .LVU7962
13333:Core/Src/bno055.c ****                                 {
 28178              		.loc 1 13333 36 is_stmt 0 view .LVU7963
 28179 00d6 042C     		cmp	r4, #4
 28180 00d8 CFD8     		bhi	.L1937
13339:Core/Src/bno055.c ****                                 }
 28181              		.loc 1 13339 57 view .LVU7964
 28182 00da 0424     		movs	r4, #4
 28183 00dc CDE7     		b	.L1937
 28184              	.L1928:
13343:Core/Src/bno055.c ****                                 {
 28185              		.loc 1 13343 33 is_stmt 1 view .LVU7965
13343:Core/Src/bno055.c ****                                 {
 28186              		.loc 1 13343 36 is_stmt 0 view .LVU7966
 28187 00de 062C     		cmp	r4, #6
 28188 00e0 CBD8     		bhi	.L1937
13349:Core/Src/bno055.c ****                                 }
 28189              		.loc 1 13349 57 view .LVU7967
 28190 00e2 0624     		movs	r4, #6
 28191 00e4 C9E7     		b	.L1937
 28192              	.L1927:
13353:Core/Src/bno055.c ****                                 {
 28193              		.loc 1 13353 33 is_stmt 1 view .LVU7968
13353:Core/Src/bno055.c ****                                 {
 28194              		.loc 1 13353 36 is_stmt 0 view .LVU7969
 28195 00e6 012C     		cmp	r4, #1
 28196 00e8 C7D8     		bhi	.L1937
13359:Core/Src/bno055.c ****                                 }
 28197              		.loc 1 13359 57 view .LVU7970
 28198 00ea 0124     		movs	r4, #1
 28199 00ec C5E7     		b	.L1937
 28200              	.L1955:
13279:Core/Src/bno055.c ****                                 }
 28201              		.loc 1 13279 57 view .LVU7971
 28202 00ee 0124     		movs	r4, #1
 28203 00f0 C3E7     		b	.L1937
 28204              	.LVL3530:
 28205              	.L1939:
13385:Core/Src/bno055.c ****             }
13386:Core/Src/bno055.c ****         }
13387:Core/Src/bno055.c ****         else
13388:Core/Src/bno055.c ****         {
13389:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 28206              		.loc 1 13389 22 view .LVU7972
 28207 00f2 4FF0FF36 		mov	r6, #-1
 28208              	.LVL3531:
 28209              	.L1925:
13390:Core/Src/bno055.c ****         }
13391:Core/Src/bno055.c ****     }
13392:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28210              		.loc 1 13392 5 is_stmt 1 view .LVU7973
 28211              		.loc 1 13392 24 is_stmt 0 view .LVU7974
 28212 00f6 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 791


 28213              		.loc 1 13392 8 view .LVU7975
 28214 00fa 40B9     		cbnz	r0, .L1956
 28215              	.LVL3532:
 28216              	.L1924:
13393:Core/Src/bno055.c ****     {
13394:Core/Src/bno055.c ****         /* set the operation mode of
13395:Core/Src/bno055.c ****          * previous operation mode*/
13396:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13397:Core/Src/bno055.c ****     }
13398:Core/Src/bno055.c **** 
13399:Core/Src/bno055.c ****     return com_rslt;
13400:Core/Src/bno055.c **** }
 28217              		.loc 1 13400 1 view .LVU7976
 28218 00fc 3046     		mov	r0, r6
 28219 00fe 02B0     		add	sp, sp, #8
 28220              	.LCFI787:
 28221              		.cfi_remember_state
 28222              		.cfi_def_cfa_offset 16
 28223              		@ sp needed
 28224 0100 70BD     		pop	{r4, r5, r6, pc}
 28225              	.LVL3533:
 28226              	.L1941:
 28227              	.LCFI788:
 28228              		.cfi_restore_state
13379:Core/Src/bno055.c ****                 }
 28229              		.loc 1 13379 30 view .LVU7977
 28230 0102 4FF0FF36 		mov	r6, #-1
 28231              	.LVL3534:
13379:Core/Src/bno055.c ****                 }
 28232              		.loc 1 13379 30 view .LVU7978
 28233 0106 F6E7     		b	.L1925
 28234              	.LVL3535:
 28235              	.L1942:
13374:Core/Src/bno055.c ****                     }
 28236              		.loc 1 13374 34 view .LVU7979
 28237 0108 6FF00106 		mvn	r6, #1
 28238              	.LVL3536:
13374:Core/Src/bno055.c ****                     }
 28239              		.loc 1 13374 34 view .LVU7980
 28240 010c F3E7     		b	.L1925
 28241              	.LVL3537:
 28242              	.L1956:
13396:Core/Src/bno055.c ****     }
 28243              		.loc 1 13396 9 is_stmt 1 view .LVU7981
13396:Core/Src/bno055.c ****     }
 28244              		.loc 1 13396 21 is_stmt 0 view .LVU7982
 28245 010e FFF7FEFF 		bl	bno055_set_operation_mode
 28246              	.LVL3538:
13396:Core/Src/bno055.c ****     }
 28247              		.loc 1 13396 18 view .LVU7983
 28248 0112 56FA80F0 		uxtab	r0, r6, r0
 28249 0116 46B2     		sxtb	r6, r0
 28250              	.LVL3539:
13396:Core/Src/bno055.c ****     }
 28251              		.loc 1 13396 18 view .LVU7984
 28252 0118 F0E7     		b	.L1924
 28253              	.LVL3540:
ARM GAS  /tmp/cc9kYR4Z.s 			page 792


 28254              	.L1938:
13243:Core/Src/bno055.c ****     }
 28255              		.loc 1 13243 16 view .LVU7985
 28256 011a 6FF07E06 		mvn	r6, #126
 28257 011e EDE7     		b	.L1924
 28258              	.L1958:
 28259              		.align	2
 28260              	.L1957:
 28261 0120 00000000 		.word	.LANCHOR0
 28262              		.cfi_endproc
 28263              	.LFE200:
 28265              		.section	.text.bno055_set_gyro_bw,"ax",%progbits
 28266              		.align	1
 28267              		.global	bno055_set_gyro_bw
 28268              		.syntax unified
 28269              		.thumb
 28270              		.thumb_func
 28272              	bno055_set_gyro_bw:
 28273              	.LVL3541:
 28274              	.LFB190:
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28275              		.loc 1 12395 1 is_stmt 1 view -0
 28276              		.cfi_startproc
 28277              		@ args = 0, pretend = 0, frame = 8
 28278              		@ frame_needed = 0, uses_anonymous_args = 0
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28279              		.loc 1 12395 1 is_stmt 0 view .LVU7987
 28280 0000 70B5     		push	{r4, r5, r6, lr}
 28281              	.LCFI789:
 28282              		.cfi_def_cfa_offset 16
 28283              		.cfi_offset 4, -16
 28284              		.cfi_offset 5, -12
 28285              		.cfi_offset 6, -8
 28286              		.cfi_offset 14, -4
 28287 0002 82B0     		sub	sp, sp, #8
 28288              	.LCFI790:
 28289              		.cfi_def_cfa_offset 24
12396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28290              		.loc 1 12396 5 is_stmt 1 view .LVU7988
 28291              	.LVL3542:
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28292              		.loc 1 12397 5 view .LVU7989
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28293              		.loc 1 12397 8 is_stmt 0 view .LVU7990
 28294 0004 0023     		movs	r3, #0
 28295 0006 8DF80730 		strb	r3, [sp, #7]
12398:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
 28296              		.loc 1 12398 5 is_stmt 1 view .LVU7991
 28297              	.LVL3543:
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28298              		.loc 1 12399 5 view .LVU7992
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28299              		.loc 1 12399 8 is_stmt 0 view .LVU7993
 28300 000a 8DF80630 		strb	r3, [sp, #6]
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28301              		.loc 1 12400 5 is_stmt 1 view .LVU7994
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 793


 28302              		.loc 1 12400 8 is_stmt 0 view .LVU7995
 28303 000e 8DF80530 		strb	r3, [sp, #5]
12401:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28304              		.loc 1 12401 5 is_stmt 1 view .LVU7996
 28305              	.LVL3544:
12402:Core/Src/bno055.c **** 
 28306              		.loc 1 12402 5 view .LVU7997
12402:Core/Src/bno055.c **** 
 28307              		.loc 1 12402 8 is_stmt 0 view .LVU7998
 28308 0012 8DF80430 		strb	r3, [sp, #4]
12405:Core/Src/bno055.c ****     {
 28309              		.loc 1 12405 5 is_stmt 1 view .LVU7999
12405:Core/Src/bno055.c ****     {
 28310              		.loc 1 12405 18 is_stmt 0 view .LVU8000
 28311 0016 384B     		ldr	r3, .L1973
 28312 0018 1B68     		ldr	r3, [r3]
12405:Core/Src/bno055.c ****     {
 28313              		.loc 1 12405 8 view .LVU8001
 28314 001a 002B     		cmp	r3, #0
 28315 001c 68D0     		beq	.L1964
 28316 001e 0546     		mov	r5, r0
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28317              		.loc 1 12414 9 is_stmt 1 view .LVU8002
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28318              		.loc 1 12414 19 is_stmt 0 view .LVU8003
 28319 0020 01A8     		add	r0, sp, #4
 28320              	.LVL3545:
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28321              		.loc 1 12414 19 view .LVU8004
 28322 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 28323              	.LVL3546:
12415:Core/Src/bno055.c ****         {
 28324              		.loc 1 12415 9 is_stmt 1 view .LVU8005
12415:Core/Src/bno055.c ****         {
 28325              		.loc 1 12415 12 is_stmt 0 view .LVU8006
 28326 0026 0446     		mov	r4, r0
 28327 0028 0028     		cmp	r0, #0
 28328 002a 4DD1     		bne	.L1965
12417:Core/Src/bno055.c ****             {
 28329              		.loc 1 12417 13 is_stmt 1 view .LVU8007
12417:Core/Src/bno055.c ****             {
 28330              		.loc 1 12417 32 is_stmt 0 view .LVU8008
 28331 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12417:Core/Src/bno055.c ****             {
 28332              		.loc 1 12417 16 view .LVU8009
 28333 0030 1BB9     		cbnz	r3, .L1970
 28334              	.LVL3547:
 28335              	.L1962:
12421:Core/Src/bno055.c ****             {
 28336              		.loc 1 12421 13 is_stmt 1 view .LVU8010
12421:Core/Src/bno055.c ****             {
 28337              		.loc 1 12421 16 is_stmt 0 view .LVU8011
 28338 0032 44B1     		cbz	r4, .L1971
12497:Core/Src/bno055.c ****             }
 28339              		.loc 1 12497 26 view .LVU8012
 28340 0034 4FF0FF34 		mov	r4, #-1
 28341              	.LVL3548:
ARM GAS  /tmp/cc9kYR4Z.s 			page 794


12497:Core/Src/bno055.c ****             }
 28342              		.loc 1 12497 26 view .LVU8013
 28343 0038 48E0     		b	.L1961
 28344              	.LVL3549:
 28345              	.L1970:
12419:Core/Src/bno055.c ****             }
 28346              		.loc 1 12419 17 is_stmt 1 view .LVU8014
12419:Core/Src/bno055.c ****             }
 28347              		.loc 1 12419 28 is_stmt 0 view .LVU8015
 28348 003a FFF7FEFF 		bl	bno055_set_operation_mode
 28349              	.LVL3550:
12419:Core/Src/bno055.c ****             }
 28350              		.loc 1 12419 25 view .LVU8016
 28351 003e 54FA80F4 		uxtab	r4, r4, r0
 28352 0042 64B2     		sxtb	r4, r4
 28353              	.LVL3551:
12419:Core/Src/bno055.c ****             }
 28354              		.loc 1 12419 25 view .LVU8017
 28355 0044 F5E7     		b	.L1962
 28356              	.L1971:
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28357              		.loc 1 12424 17 is_stmt 1 view .LVU8018
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28358              		.loc 1 12424 30 is_stmt 0 view .LVU8019
 28359 0046 0120     		movs	r0, #1
 28360 0048 FFF7FEFF 		bl	bno055_write_page_id
 28361              	.LVL3552:
12425:Core/Src/bno055.c ****                 {
 28362              		.loc 1 12425 17 is_stmt 1 view .LVU8020
12425:Core/Src/bno055.c ****                 {
 28363              		.loc 1 12425 20 is_stmt 0 view .LVU8021
 28364 004c 0028     		cmp	r0, #0
 28365 004e 43D1     		bne	.L1967
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 28366              		.loc 1 12428 21 is_stmt 1 view .LVU8022
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 28367              		.loc 1 12428 24 is_stmt 0 view .LVU8023
 28368 0050 072D     		cmp	r5, #7
 28369 0052 44D8     		bhi	.L1968
12431:Core/Src/bno055.c ****                         {
 28370              		.loc 1 12431 25 is_stmt 1 view .LVU8024
 28371              	.LVL3553:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28372              		.loc 1 12460 25 view .LVU8025
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28373              		.loc 1 12460 44 is_stmt 0 view .LVU8026
 28374 0054 284B     		ldr	r3, .L1973
 28375 0056 1868     		ldr	r0, [r3]
 28376              	.LVL3554:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28377              		.loc 1 12460 44 view .LVU8027
 28378 0058 0469     		ldr	r4, [r0, #16]
 28379              	.LVL3555:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28380              		.loc 1 12460 36 view .LVU8028
 28381 005a 0123     		movs	r3, #1
 28382 005c 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/cc9kYR4Z.s 			page 795


 28383 0060 0A21     		movs	r1, #10
 28384 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28385 0064 A047     		blx	r4
 28386              	.LVL3556:
12464:Core/Src/bno055.c ****                         {
 28387              		.loc 1 12464 25 is_stmt 1 view .LVU8029
12464:Core/Src/bno055.c ****                         {
 28388              		.loc 1 12464 28 is_stmt 0 view .LVU8030
 28389 0066 98B9     		cbnz	r0, .L1963
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28390              		.loc 1 12466 29 is_stmt 1 view .LVU8031
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28391              		.loc 1 12466 40 is_stmt 0 view .LVU8032
 28392 0068 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28393 006c 23F03803 		bic	r3, r3, #56
 28394 0070 5BB2     		sxtb	r3, r3
 28395 0072 EA00     		lsls	r2, r5, #3
 28396 0074 02F03802 		and	r2, r2, #56
 28397 0078 1343     		orrs	r3, r3, r2
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28398              		.loc 1 12466 38 view .LVU8033
 28399 007a 8DF80730 		strb	r3, [sp, #7]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28400              		.loc 1 12467 29 is_stmt 1 view .LVU8034
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28401              		.loc 1 12467 49 is_stmt 0 view .LVU8035
 28402 007e 1E4B     		ldr	r3, .L1973
 28403 0080 1868     		ldr	r0, [r3]
 28404              	.LVL3557:
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28405              		.loc 1 12467 49 view .LVU8036
 28406 0082 C468     		ldr	r4, [r0, #12]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28407              		.loc 1 12467 41 view .LVU8037
 28408 0084 0123     		movs	r3, #1
 28409 0086 0DF10702 		add	r2, sp, #7
 28410 008a 0A21     		movs	r1, #10
 28411 008c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28412 008e A047     		blx	r4
 28413              	.LVL3558:
 28414              	.L1963:
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 28415              		.loc 1 12472 25 is_stmt 1 view .LVU8038
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 28416              		.loc 1 12472 36 is_stmt 0 view .LVU8039
 28417 0090 0DF10600 		add	r0, sp, #6
 28418 0094 FFF7FEFF 		bl	bno055_get_gyro_power_mode
 28419              	.LVL3559:
12473:Core/Src/bno055.c ****                         {
 28420              		.loc 1 12473 25 is_stmt 1 view .LVU8040
12473:Core/Src/bno055.c ****                         {
 28421              		.loc 1 12473 28 is_stmt 0 view .LVU8041
 28422 0098 0446     		mov	r4, r0
 28423 009a B8B9     		cbnz	r0, .L1961
12475:Core/Src/bno055.c ****                             {
 28424              		.loc 1 12475 29 is_stmt 1 view .LVU8042
12475:Core/Src/bno055.c ****                             {
ARM GAS  /tmp/cc9kYR4Z.s 			page 796


 28425              		.loc 1 12475 45 is_stmt 0 view .LVU8043
 28426 009c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
12475:Core/Src/bno055.c ****                             {
 28427              		.loc 1 12475 32 view .LVU8044
 28428 00a0 042B     		cmp	r3, #4
 28429 00a2 13D1     		bne	.L1961
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28430              		.loc 1 12477 33 is_stmt 1 view .LVU8045
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28431              		.loc 1 12477 45 is_stmt 0 view .LVU8046
 28432 00a4 0DF10500 		add	r0, sp, #5
 28433              	.LVL3560:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28434              		.loc 1 12477 45 view .LVU8047
 28435 00a8 FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 28436              	.LVL3561:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28437              		.loc 1 12477 42 view .LVU8048
 28438 00ac 54FA80F4 		uxtab	r4, r4, r0
 28439 00b0 E6B2     		uxtb	r6, r4
 28440 00b2 64B2     		sxtb	r4, r4
 28441              	.LVL3562:
12478:Core/Src/bno055.c ****                                 {
 28442              		.loc 1 12478 33 is_stmt 1 view .LVU8049
12478:Core/Src/bno055.c ****                                 {
 28443              		.loc 1 12478 36 is_stmt 0 view .LVU8050
 28444 00b4 54B9     		cbnz	r4, .L1961
12480:Core/Src/bno055.c ****                                 }
 28445              		.loc 1 12480 37 is_stmt 1 view .LVU8051
12480:Core/Src/bno055.c ****                                 }
 28446              		.loc 1 12480 49 is_stmt 0 view .LVU8052
 28447 00b6 2946     		mov	r1, r5
 28448 00b8 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 28449 00bc FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 28450              	.LVL3563:
12480:Core/Src/bno055.c ****                                 }
 28451              		.loc 1 12480 46 view .LVU8053
 28452 00c0 56FA80F4 		uxtab	r4, r6, r0
 28453              	.LVL3564:
12480:Core/Src/bno055.c ****                                 }
 28454              		.loc 1 12480 46 view .LVU8054
 28455 00c4 64B2     		sxtb	r4, r4
 28456              	.LVL3565:
12480:Core/Src/bno055.c ****                                 }
 28457              		.loc 1 12480 46 view .LVU8055
 28458 00c6 01E0     		b	.L1961
 28459              	.LVL3566:
 28460              	.L1965:
12502:Core/Src/bno055.c ****         }
 28461              		.loc 1 12502 22 view .LVU8056
 28462 00c8 4FF0FF34 		mov	r4, #-1
 28463              	.LVL3567:
 28464              	.L1961:
12505:Core/Src/bno055.c ****     {
 28465              		.loc 1 12505 5 is_stmt 1 view .LVU8057
12505:Core/Src/bno055.c ****     {
 28466              		.loc 1 12505 24 is_stmt 0 view .LVU8058
ARM GAS  /tmp/cc9kYR4Z.s 			page 797


 28467 00cc 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12505:Core/Src/bno055.c ****     {
 28468              		.loc 1 12505 8 view .LVU8059
 28469 00d0 40B9     		cbnz	r0, .L1972
 28470              	.LVL3568:
 28471              	.L1960:
12513:Core/Src/bno055.c **** 
 28472              		.loc 1 12513 1 view .LVU8060
 28473 00d2 2046     		mov	r0, r4
 28474 00d4 02B0     		add	sp, sp, #8
 28475              	.LCFI791:
 28476              		.cfi_remember_state
 28477              		.cfi_def_cfa_offset 16
 28478              		@ sp needed
 28479 00d6 70BD     		pop	{r4, r5, r6, pc}
 28480              	.LVL3569:
 28481              	.L1967:
 28482              	.LCFI792:
 28483              		.cfi_restore_state
12492:Core/Src/bno055.c ****                 }
 28484              		.loc 1 12492 30 view .LVU8061
 28485 00d8 4FF0FF34 		mov	r4, #-1
 28486              	.LVL3570:
12492:Core/Src/bno055.c ****                 }
 28487              		.loc 1 12492 30 view .LVU8062
 28488 00dc F6E7     		b	.L1961
 28489              	.LVL3571:
 28490              	.L1968:
12487:Core/Src/bno055.c ****                     }
 28491              		.loc 1 12487 34 view .LVU8063
 28492 00de 6FF00104 		mvn	r4, #1
 28493              	.LVL3572:
12487:Core/Src/bno055.c ****                     }
 28494              		.loc 1 12487 34 view .LVU8064
 28495 00e2 F3E7     		b	.L1961
 28496              	.LVL3573:
 28497              	.L1972:
12509:Core/Src/bno055.c ****     }
 28498              		.loc 1 12509 9 is_stmt 1 view .LVU8065
12509:Core/Src/bno055.c ****     }
 28499              		.loc 1 12509 21 is_stmt 0 view .LVU8066
 28500 00e4 FFF7FEFF 		bl	bno055_set_operation_mode
 28501              	.LVL3574:
12509:Core/Src/bno055.c ****     }
 28502              		.loc 1 12509 18 view .LVU8067
 28503 00e8 54FA80F4 		uxtab	r4, r4, r0
 28504              	.LVL3575:
12509:Core/Src/bno055.c ****     }
 28505              		.loc 1 12509 18 view .LVU8068
 28506 00ec 64B2     		sxtb	r4, r4
 28507              	.LVL3576:
12509:Core/Src/bno055.c ****     }
 28508              		.loc 1 12509 18 view .LVU8069
 28509 00ee F0E7     		b	.L1960
 28510              	.LVL3577:
 28511              	.L1964:
12407:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 798


 28512              		.loc 1 12407 16 view .LVU8070
 28513 00f0 6FF07E04 		mvn	r4, #126
 28514 00f4 EDE7     		b	.L1960
 28515              	.L1974:
 28516 00f6 00BF     		.align	2
 28517              	.L1973:
 28518 00f8 00000000 		.word	.LANCHOR0
 28519              		.cfi_endproc
 28520              	.LFE190:
 28522              		.section	.text.bno055_set_gyro_power_mode,"ax",%progbits
 28523              		.align	1
 28524              		.global	bno055_set_gyro_power_mode
 28525              		.syntax unified
 28526              		.thumb
 28527              		.thumb_func
 28529              	bno055_set_gyro_power_mode:
 28530              	.LVL3578:
 28531              	.LFB192:
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28532              		.loc 1 12596 1 is_stmt 1 view -0
 28533              		.cfi_startproc
 28534              		@ args = 0, pretend = 0, frame = 8
 28535              		@ frame_needed = 0, uses_anonymous_args = 0
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28536              		.loc 1 12596 1 is_stmt 0 view .LVU8072
 28537 0000 30B5     		push	{r4, r5, lr}
 28538              	.LCFI793:
 28539              		.cfi_def_cfa_offset 12
 28540              		.cfi_offset 4, -12
 28541              		.cfi_offset 5, -8
 28542              		.cfi_offset 14, -4
 28543 0002 83B0     		sub	sp, sp, #12
 28544              	.LCFI794:
 28545              		.cfi_def_cfa_offset 24
12597:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28546              		.loc 1 12597 5 is_stmt 1 view .LVU8073
 28547              	.LVL3579:
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28548              		.loc 1 12598 5 view .LVU8074
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28549              		.loc 1 12598 8 is_stmt 0 view .LVU8075
 28550 0004 0023     		movs	r3, #0
 28551 0006 8DF80730 		strb	r3, [sp, #7]
12599:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28552              		.loc 1 12599 5 is_stmt 1 view .LVU8076
 28553              	.LVL3580:
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 28554              		.loc 1 12600 5 view .LVU8077
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 28555              		.loc 1 12600 8 is_stmt 0 view .LVU8078
 28556 000a 8DF80630 		strb	r3, [sp, #6]
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28557              		.loc 1 12601 5 is_stmt 1 view .LVU8079
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28558              		.loc 1 12601 8 is_stmt 0 view .LVU8080
 28559 000e 8DF80530 		strb	r3, [sp, #5]
12602:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
ARM GAS  /tmp/cc9kYR4Z.s 			page 799


 28560              		.loc 1 12602 5 is_stmt 1 view .LVU8081
 28561              	.LVL3581:
12603:Core/Src/bno055.c **** 
 28562              		.loc 1 12603 5 view .LVU8082
12603:Core/Src/bno055.c **** 
 28563              		.loc 1 12603 8 is_stmt 0 view .LVU8083
 28564 0012 8DF80430 		strb	r3, [sp, #4]
12606:Core/Src/bno055.c ****     {
 28565              		.loc 1 12606 5 is_stmt 1 view .LVU8084
12606:Core/Src/bno055.c ****     {
 28566              		.loc 1 12606 18 is_stmt 0 view .LVU8085
 28567 0016 3A4B     		ldr	r3, .L1994
 28568 0018 1B68     		ldr	r3, [r3]
12606:Core/Src/bno055.c ****     {
 28569              		.loc 1 12606 8 view .LVU8086
 28570 001a 002B     		cmp	r3, #0
 28571 001c 6DD0     		beq	.L1983
 28572 001e 0546     		mov	r5, r0
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28573              		.loc 1 12615 9 is_stmt 1 view .LVU8087
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28574              		.loc 1 12615 19 is_stmt 0 view .LVU8088
 28575 0020 01A8     		add	r0, sp, #4
 28576              	.LVL3582:
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28577              		.loc 1 12615 19 view .LVU8089
 28578 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 28579              	.LVL3583:
12616:Core/Src/bno055.c ****         {
 28580              		.loc 1 12616 9 is_stmt 1 view .LVU8090
12616:Core/Src/bno055.c ****         {
 28581              		.loc 1 12616 12 is_stmt 0 view .LVU8091
 28582 0026 0446     		mov	r4, r0
 28583 0028 0028     		cmp	r0, #0
 28584 002a 52D1     		bne	.L1984
12618:Core/Src/bno055.c ****             {
 28585              		.loc 1 12618 13 is_stmt 1 view .LVU8092
12618:Core/Src/bno055.c ****             {
 28586              		.loc 1 12618 32 is_stmt 0 view .LVU8093
 28587 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12618:Core/Src/bno055.c ****             {
 28588              		.loc 1 12618 16 view .LVU8094
 28589 0030 1BB9     		cbnz	r3, .L1990
 28590              	.LVL3584:
 28591              	.L1978:
12622:Core/Src/bno055.c ****             {
 28592              		.loc 1 12622 13 is_stmt 1 view .LVU8095
12622:Core/Src/bno055.c ****             {
 28593              		.loc 1 12622 16 is_stmt 0 view .LVU8096
 28594 0032 44B1     		cbz	r4, .L1991
12684:Core/Src/bno055.c ****             }
 28595              		.loc 1 12684 26 view .LVU8097
 28596 0034 4FF0FF34 		mov	r4, #-1
 28597              	.LVL3585:
12684:Core/Src/bno055.c ****             }
 28598              		.loc 1 12684 26 view .LVU8098
 28599 0038 4DE0     		b	.L1977
ARM GAS  /tmp/cc9kYR4Z.s 			page 800


 28600              	.LVL3586:
 28601              	.L1990:
12620:Core/Src/bno055.c ****             }
 28602              		.loc 1 12620 17 is_stmt 1 view .LVU8099
12620:Core/Src/bno055.c ****             }
 28603              		.loc 1 12620 28 is_stmt 0 view .LVU8100
 28604 003a FFF7FEFF 		bl	bno055_set_operation_mode
 28605              	.LVL3587:
12620:Core/Src/bno055.c ****             }
 28606              		.loc 1 12620 25 view .LVU8101
 28607 003e 54FA80F4 		uxtab	r4, r4, r0
 28608 0042 64B2     		sxtb	r4, r4
 28609              	.LVL3588:
12620:Core/Src/bno055.c ****             }
 28610              		.loc 1 12620 25 view .LVU8102
 28611 0044 F5E7     		b	.L1978
 28612              	.L1991:
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28613              		.loc 1 12625 17 is_stmt 1 view .LVU8103
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28614              		.loc 1 12625 30 is_stmt 0 view .LVU8104
 28615 0046 0120     		movs	r0, #1
 28616 0048 FFF7FEFF 		bl	bno055_write_page_id
 28617              	.LVL3589:
12626:Core/Src/bno055.c ****                 {
 28618              		.loc 1 12626 17 is_stmt 1 view .LVU8105
12626:Core/Src/bno055.c ****                 {
 28619              		.loc 1 12626 20 is_stmt 0 view .LVU8106
 28620 004c 0028     		cmp	r0, #0
 28621 004e 48D1     		bne	.L1986
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 28622              		.loc 1 12629 21 is_stmt 1 view .LVU8107
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 28623              		.loc 1 12629 24 is_stmt 0 view .LVU8108
 28624 0050 042D     		cmp	r5, #4
 28625 0052 49D8     		bhi	.L1987
12632:Core/Src/bno055.c ****                         {
 28626              		.loc 1 12632 25 is_stmt 1 view .LVU8109
 28627 0054 2B1F     		subs	r3, r5, #4
 28628 0056 002B     		cmp	r3, #0
 28629 0058 12D8     		bhi	.L1979
 28630 005a DFE803F0 		tbb	[pc, r3]
 28631              	.L1981:
 28632 005e 01       		.byte	(.L1980-.L1981)/2
 28633 005f 00       		.p2align 1
 28634              	.L1980:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28635              		.loc 1 12647 33 view .LVU8110
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28636              		.loc 1 12647 44 is_stmt 0 view .LVU8111
 28637 0060 0DF10500 		add	r0, sp, #5
 28638              	.LVL3590:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28639              		.loc 1 12647 44 view .LVU8112
 28640 0064 FFF7FEFF 		bl	bno055_get_gyro_bw
 28641              	.LVL3591:
 28642 0068 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 801


 28643              	.LVL3592:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28644              		.loc 1 12648 33 is_stmt 1 view .LVU8113
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28645              		.loc 1 12648 45 is_stmt 0 view .LVU8114
 28646 006a 0DF10600 		add	r0, sp, #6
 28647 006e FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 28648              	.LVL3593:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28649              		.loc 1 12648 42 view .LVU8115
 28650 0072 54FA80F3 		uxtab	r3, r4, r0
 28651 0076 5BB2     		sxtb	r3, r3
 28652              	.LVL3594:
12649:Core/Src/bno055.c ****                                 {
 28653              		.loc 1 12649 33 is_stmt 1 view .LVU8116
12649:Core/Src/bno055.c ****                                 {
 28654              		.loc 1 12649 36 is_stmt 0 view .LVU8117
 28655 0078 23B3     		cbz	r3, .L1992
 28656              	.LVL3595:
 28657              	.L1982:
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 28658              		.loc 1 12653 33 is_stmt 1 view .LVU8118
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 28659              		.loc 1 12653 45 is_stmt 0 view .LVU8119
 28660 007a 0120     		movs	r0, #1
 28661 007c FFF7FEFF 		bl	bno055_write_page_id
 28662              	.LVL3596:
12654:Core/Src/bno055.c ****                                 break;
 28663              		.loc 1 12654 33 is_stmt 1 view .LVU8120
12655:Core/Src/bno055.c ****                             default:
 28664              		.loc 1 12655 33 view .LVU8121
 28665              	.L1979:
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28666              		.loc 1 12659 25 view .LVU8122
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28667              		.loc 1 12659 44 is_stmt 0 view .LVU8123
 28668 0080 1F4B     		ldr	r3, .L1994
 28669 0082 1868     		ldr	r0, [r3]
 28670 0084 0469     		ldr	r4, [r0, #16]
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28671              		.loc 1 12659 36 view .LVU8124
 28672 0086 0123     		movs	r3, #1
 28673 0088 0DF10702 		add	r2, sp, #7
 28674 008c 0B21     		movs	r1, #11
 28675 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28676 0090 A047     		blx	r4
 28677              	.LVL3597:
12663:Core/Src/bno055.c ****                         {
 28678              		.loc 1 12663 25 is_stmt 1 view .LVU8125
12663:Core/Src/bno055.c ****                         {
 28679              		.loc 1 12663 28 is_stmt 0 view .LVU8126
 28680 0092 0446     		mov	r4, r0
 28681 0094 F8B9     		cbnz	r0, .L1977
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28682              		.loc 1 12665 29 is_stmt 1 view .LVU8127
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28683              		.loc 1 12665 40 is_stmt 0 view .LVU8128
ARM GAS  /tmp/cc9kYR4Z.s 			page 802


 28684 0096 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28685 009a 23F00703 		bic	r3, r3, #7
 28686 009e 5BB2     		sxtb	r3, r3
 28687 00a0 05F00700 		and	r0, r5, #7
 28688              	.LVL3598:
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28689              		.loc 1 12665 40 view .LVU8129
 28690 00a4 0343     		orrs	r3, r3, r0
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28691              		.loc 1 12665 38 view .LVU8130
 28692 00a6 8DF80730 		strb	r3, [sp, #7]
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28693              		.loc 1 12666 29 is_stmt 1 view .LVU8131
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28694              		.loc 1 12666 49 is_stmt 0 view .LVU8132
 28695 00aa 154B     		ldr	r3, .L1994
 28696 00ac 1868     		ldr	r0, [r3]
 28697 00ae C568     		ldr	r5, [r0, #12]
 28698              	.LVL3599:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28699              		.loc 1 12666 41 view .LVU8133
 28700 00b0 0123     		movs	r3, #1
 28701 00b2 0DF10702 		add	r2, sp, #7
 28702 00b6 0B21     		movs	r1, #11
 28703 00b8 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28704 00ba A847     		blx	r5
 28705              	.LVL3600:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28706              		.loc 1 12666 38 view .LVU8134
 28707 00bc 54FA80F0 		uxtab	r0, r4, r0
 28708 00c0 44B2     		sxtb	r4, r0
 28709              	.LVL3601:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28710              		.loc 1 12666 38 view .LVU8135
 28711 00c2 08E0     		b	.L1977
 28712              	.LVL3602:
 28713              	.L1992:
12651:Core/Src/bno055.c ****                                 }
 28714              		.loc 1 12651 37 is_stmt 1 view .LVU8136
12651:Core/Src/bno055.c ****                                 }
 28715              		.loc 1 12651 49 is_stmt 0 view .LVU8137
 28716 00c4 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 28717 00c8 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28718 00cc FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 28719              	.LVL3603:
12651:Core/Src/bno055.c ****                                 }
 28720              		.loc 1 12651 49 view .LVU8138
 28721 00d0 D3E7     		b	.L1982
 28722              	.LVL3604:
 28723              	.L1984:
12689:Core/Src/bno055.c ****         }
 28724              		.loc 1 12689 22 view .LVU8139
 28725 00d2 4FF0FF34 		mov	r4, #-1
 28726              	.LVL3605:
 28727              	.L1977:
12692:Core/Src/bno055.c ****     {
 28728              		.loc 1 12692 5 is_stmt 1 view .LVU8140
ARM GAS  /tmp/cc9kYR4Z.s 			page 803


12692:Core/Src/bno055.c ****     {
 28729              		.loc 1 12692 24 is_stmt 0 view .LVU8141
 28730 00d6 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12692:Core/Src/bno055.c ****     {
 28731              		.loc 1 12692 8 view .LVU8142
 28732 00da 40B9     		cbnz	r0, .L1993
 28733              	.LVL3606:
 28734              	.L1976:
12700:Core/Src/bno055.c **** 
 28735              		.loc 1 12700 1 view .LVU8143
 28736 00dc 2046     		mov	r0, r4
 28737 00de 03B0     		add	sp, sp, #12
 28738              	.LCFI795:
 28739              		.cfi_remember_state
 28740              		.cfi_def_cfa_offset 12
 28741              		@ sp needed
 28742 00e0 30BD     		pop	{r4, r5, pc}
 28743              	.LVL3607:
 28744              	.L1986:
 28745              	.LCFI796:
 28746              		.cfi_restore_state
12679:Core/Src/bno055.c ****                 }
 28747              		.loc 1 12679 30 view .LVU8144
 28748 00e2 4FF0FF34 		mov	r4, #-1
 28749              	.LVL3608:
12679:Core/Src/bno055.c ****                 }
 28750              		.loc 1 12679 30 view .LVU8145
 28751 00e6 F6E7     		b	.L1977
 28752              	.LVL3609:
 28753              	.L1987:
12674:Core/Src/bno055.c ****                     }
 28754              		.loc 1 12674 34 view .LVU8146
 28755 00e8 6FF00104 		mvn	r4, #1
 28756              	.LVL3610:
12674:Core/Src/bno055.c ****                     }
 28757              		.loc 1 12674 34 view .LVU8147
 28758 00ec F3E7     		b	.L1977
 28759              	.LVL3611:
 28760              	.L1993:
12696:Core/Src/bno055.c ****     }
 28761              		.loc 1 12696 9 is_stmt 1 view .LVU8148
12696:Core/Src/bno055.c ****     }
 28762              		.loc 1 12696 21 is_stmt 0 view .LVU8149
 28763 00ee FFF7FEFF 		bl	bno055_set_operation_mode
 28764              	.LVL3612:
12696:Core/Src/bno055.c ****     }
 28765              		.loc 1 12696 18 view .LVU8150
 28766 00f2 54FA80F0 		uxtab	r0, r4, r0
 28767 00f6 44B2     		sxtb	r4, r0
 28768              	.LVL3613:
12696:Core/Src/bno055.c ****     }
 28769              		.loc 1 12696 18 view .LVU8151
 28770 00f8 F0E7     		b	.L1976
 28771              	.LVL3614:
 28772              	.L1983:
12608:Core/Src/bno055.c ****     }
 28773              		.loc 1 12608 16 view .LVU8152
ARM GAS  /tmp/cc9kYR4Z.s 			page 804


 28774 00fa 6FF07E04 		mvn	r4, #126
 28775 00fe EDE7     		b	.L1976
 28776              	.L1995:
 28777              		.align	2
 28778              	.L1994:
 28779 0100 00000000 		.word	.LANCHOR0
 28780              		.cfi_endproc
 28781              	.LFE192:
 28783              		.section	.text.bno055_get_mag_sleep_mode,"ax",%progbits
 28784              		.align	1
 28785              		.global	bno055_get_mag_sleep_mode
 28786              		.syntax unified
 28787              		.thumb
 28788              		.thumb_func
 28790              	bno055_get_mag_sleep_mode:
 28791              	.LVL3615:
 28792              	.LFB201:
13401:Core/Src/bno055.c **** 
13402:Core/Src/bno055.c **** /*!
13403:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep mode
13404:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13405:Core/Src/bno055.c ****  *
13406:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13407:Core/Src/bno055.c ****  *
13408:Core/Src/bno055.c ****  *  @return results of bus communication function
13409:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13410:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13411:Core/Src/bno055.c ****  *
13412:Core/Src/bno055.c ****  *
13413:Core/Src/bno055.c ****  */
13414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_mode(u8 *sleep_mode_u8)
13415:Core/Src/bno055.c **** {
 28793              		.loc 1 13415 1 is_stmt 1 view -0
 28794              		.cfi_startproc
 28795              		@ args = 0, pretend = 0, frame = 8
 28796              		@ frame_needed = 0, uses_anonymous_args = 0
 28797              		.loc 1 13415 1 is_stmt 0 view .LVU8154
 28798 0000 30B5     		push	{r4, r5, lr}
 28799              	.LCFI797:
 28800              		.cfi_def_cfa_offset 12
 28801              		.cfi_offset 4, -12
 28802              		.cfi_offset 5, -8
 28803              		.cfi_offset 14, -4
 28804 0002 83B0     		sub	sp, sp, #12
 28805              	.LCFI798:
 28806              		.cfi_def_cfa_offset 24
13416:Core/Src/bno055.c ****     /* Variable used to return value of
13417:Core/Src/bno055.c ****      * communication routine*/
13418:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28807              		.loc 1 13418 5 is_stmt 1 view .LVU8155
 28808              	.LVL3616:
13419:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28809              		.loc 1 13419 5 view .LVU8156
 28810              		.loc 1 13419 8 is_stmt 0 view .LVU8157
 28811 0004 0023     		movs	r3, #0
 28812 0006 8DF80730 		strb	r3, [sp, #7]
13420:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 805


 28813              		.loc 1 13420 5 is_stmt 1 view .LVU8158
 28814              	.LVL3617:
13421:Core/Src/bno055.c **** 
13422:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13423:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28815              		.loc 1 13423 5 view .LVU8159
 28816              		.loc 1 13423 18 is_stmt 0 view .LVU8160
 28817 000a 144B     		ldr	r3, .L2004
 28818 000c 1B68     		ldr	r3, [r3]
 28819              		.loc 1 13423 8 view .LVU8161
 28820 000e F3B1     		cbz	r3, .L2000
 28821 0010 0446     		mov	r4, r0
13424:Core/Src/bno055.c ****     {
13425:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13426:Core/Src/bno055.c ****     }
13427:Core/Src/bno055.c ****     else
13428:Core/Src/bno055.c ****     {
13429:Core/Src/bno055.c ****         /*condition check for page,mag sleep mode is
13430:Core/Src/bno055.c ****          * available in the page one*/
13431:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28822              		.loc 1 13431 9 is_stmt 1 view .LVU8162
 28823              		.loc 1 13431 21 is_stmt 0 view .LVU8163
 28824 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28825              		.loc 1 13431 12 view .LVU8164
 28826 0014 012B     		cmp	r3, #1
 28827 0016 14D1     		bne	.L2003
 28828              	.LVL3618:
 28829              	.L1998:
13432:Core/Src/bno055.c ****         {
13433:Core/Src/bno055.c ****             /* Write page as one */
13434:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13435:Core/Src/bno055.c ****         }
13436:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28830              		.loc 1 13436 53 discriminator 1 view .LVU8165
 28831 0018 104B     		ldr	r3, .L2004
 28832 001a 1B68     		ldr	r3, [r3]
 28833 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28834              		.loc 1 13436 41 discriminator 1 view .LVU8166
 28835 001e 012B     		cmp	r3, #1
 28836 0020 18D1     		bne	.L2001
 28837              	.L1999:
13437:Core/Src/bno055.c ****         {
13438:Core/Src/bno055.c ****             /* Read the value of mag sleep mode*/
13439:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28838              		.loc 1 13439 13 is_stmt 1 view .LVU8167
 28839              		.loc 1 13439 32 is_stmt 0 view .LVU8168
 28840 0022 0E4B     		ldr	r3, .L2004
 28841 0024 1868     		ldr	r0, [r3]
 28842 0026 0569     		ldr	r5, [r0, #16]
 28843              		.loc 1 13439 24 view .LVU8169
 28844 0028 0123     		movs	r3, #1
 28845 002a 0DF10702 		add	r2, sp, #7
 28846 002e 0E21     		movs	r1, #14
 28847 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28848 0032 A847     		blx	r5
 28849              	.LVL3619:
13440:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_MODE_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 806


13441:Core/Src/bno055.c ****                                                       &data_u8r,
13442:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13443:Core/Src/bno055.c ****             *sleep_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE);
 28850              		.loc 1 13443 13 is_stmt 1 view .LVU8170
 28851              		.loc 1 13443 30 is_stmt 0 view .LVU8171
 28852 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28853 0038 03F00103 		and	r3, r3, #1
 28854              		.loc 1 13443 28 view .LVU8172
 28855 003c 2370     		strb	r3, [r4]
 28856              	.LVL3620:
 28857              	.L1997:
13444:Core/Src/bno055.c ****         }
13445:Core/Src/bno055.c ****         else
13446:Core/Src/bno055.c ****         {
13447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13448:Core/Src/bno055.c ****         }
13449:Core/Src/bno055.c ****     }
13450:Core/Src/bno055.c **** 
13451:Core/Src/bno055.c ****     return com_rslt;
13452:Core/Src/bno055.c **** }
 28858              		.loc 1 13452 1 view .LVU8173
 28859 003e 03B0     		add	sp, sp, #12
 28860              	.LCFI799:
 28861              		.cfi_remember_state
 28862              		.cfi_def_cfa_offset 12
 28863              		@ sp needed
 28864 0040 30BD     		pop	{r4, r5, pc}
 28865              	.LVL3621:
 28866              	.L2003:
 28867              	.LCFI800:
 28868              		.cfi_restore_state
13434:Core/Src/bno055.c ****         }
 28869              		.loc 1 13434 13 is_stmt 1 view .LVU8174
13434:Core/Src/bno055.c ****         }
 28870              		.loc 1 13434 23 is_stmt 0 view .LVU8175
 28871 0042 0120     		movs	r0, #1
 28872              	.LVL3622:
13434:Core/Src/bno055.c ****         }
 28873              		.loc 1 13434 23 view .LVU8176
 28874 0044 FFF7FEFF 		bl	bno055_write_page_id
 28875              	.LVL3623:
13436:Core/Src/bno055.c ****         {
 28876              		.loc 1 13436 9 is_stmt 1 view .LVU8177
13436:Core/Src/bno055.c ****         {
 28877              		.loc 1 13436 12 is_stmt 0 view .LVU8178
 28878 0048 0028     		cmp	r0, #0
 28879 004a EAD0     		beq	.L1999
 28880 004c E4E7     		b	.L1998
 28881              	.LVL3624:
 28882              	.L2000:
13425:Core/Src/bno055.c ****     }
 28883              		.loc 1 13425 16 view .LVU8179
 28884 004e 6FF07E00 		mvn	r0, #126
 28885              	.LVL3625:
13425:Core/Src/bno055.c ****     }
 28886              		.loc 1 13425 16 view .LVU8180
 28887 0052 F4E7     		b	.L1997
ARM GAS  /tmp/cc9kYR4Z.s 			page 807


 28888              	.LVL3626:
 28889              	.L2001:
13447:Core/Src/bno055.c ****         }
 28890              		.loc 1 13447 22 view .LVU8181
 28891 0054 4FF0FF30 		mov	r0, #-1
 28892 0058 F1E7     		b	.L1997
 28893              	.L2005:
 28894 005a 00BF     		.align	2
 28895              	.L2004:
 28896 005c 00000000 		.word	.LANCHOR0
 28897              		.cfi_endproc
 28898              	.LFE201:
 28900              		.section	.text.bno055_set_mag_sleep_mode,"ax",%progbits
 28901              		.align	1
 28902              		.global	bno055_set_mag_sleep_mode
 28903              		.syntax unified
 28904              		.thumb
 28905              		.thumb_func
 28907              	bno055_set_mag_sleep_mode:
 28908              	.LVL3627:
 28909              	.LFB202:
13453:Core/Src/bno055.c **** 
13454:Core/Src/bno055.c **** /*!
13455:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep mode
13456:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13457:Core/Src/bno055.c ****  *
13458:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13459:Core/Src/bno055.c ****  *
13460:Core/Src/bno055.c ****  *  @return results of bus communication function
13461:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13462:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13463:Core/Src/bno055.c ****  *
13464:Core/Src/bno055.c ****  *
13465:Core/Src/bno055.c ****  */
13466:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_mode(u8 sleep_mode_u8)
13467:Core/Src/bno055.c **** {
 28910              		.loc 1 13467 1 is_stmt 1 view -0
 28911              		.cfi_startproc
 28912              		@ args = 0, pretend = 0, frame = 8
 28913              		@ frame_needed = 0, uses_anonymous_args = 0
 28914              		.loc 1 13467 1 is_stmt 0 view .LVU8183
 28915 0000 30B5     		push	{r4, r5, lr}
 28916              	.LCFI801:
 28917              		.cfi_def_cfa_offset 12
 28918              		.cfi_offset 4, -12
 28919              		.cfi_offset 5, -8
 28920              		.cfi_offset 14, -4
 28921 0002 83B0     		sub	sp, sp, #12
 28922              	.LCFI802:
 28923              		.cfi_def_cfa_offset 24
13468:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28924              		.loc 1 13468 5 is_stmt 1 view .LVU8184
 28925              	.LVL3628:
13469:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28926              		.loc 1 13469 5 view .LVU8185
 28927              		.loc 1 13469 8 is_stmt 0 view .LVU8186
 28928 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 808


 28929 0006 8DF80730 		strb	r3, [sp, #7]
13470:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28930              		.loc 1 13470 5 is_stmt 1 view .LVU8187
 28931              	.LVL3629:
13471:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28932              		.loc 1 13471 5 view .LVU8188
13472:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28933              		.loc 1 13472 5 view .LVU8189
 28934              		.loc 1 13472 8 is_stmt 0 view .LVU8190
 28935 000a 8DF80630 		strb	r3, [sp, #6]
13473:Core/Src/bno055.c **** 
13474:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13475:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28936              		.loc 1 13475 5 is_stmt 1 view .LVU8191
 28937              		.loc 1 13475 18 is_stmt 0 view .LVU8192
 28938 000e 294B     		ldr	r3, .L2018
 28939 0010 1B68     		ldr	r3, [r3]
 28940              		.loc 1 13475 8 view .LVU8193
 28941 0012 002B     		cmp	r3, #0
 28942 0014 4AD0     		beq	.L2010
 28943 0016 0546     		mov	r5, r0
13476:Core/Src/bno055.c ****     {
13477:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13478:Core/Src/bno055.c ****     }
13479:Core/Src/bno055.c ****     else
13480:Core/Src/bno055.c ****     {
13481:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13482:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13483:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13484:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 28944              		.loc 1 13484 9 is_stmt 1 view .LVU8194
 28945              		.loc 1 13484 19 is_stmt 0 view .LVU8195
 28946 0018 0DF10600 		add	r0, sp, #6
 28947              	.LVL3630:
 28948              		.loc 1 13484 19 view .LVU8196
 28949 001c FFF7FEFF 		bl	bno055_get_operation_mode
 28950              	.LVL3631:
13485:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28951              		.loc 1 13485 9 is_stmt 1 view .LVU8197
 28952              		.loc 1 13485 12 is_stmt 0 view .LVU8198
 28953 0020 0446     		mov	r4, r0
 28954 0022 90BB     		cbnz	r0, .L2011
13486:Core/Src/bno055.c ****         {
13487:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28955              		.loc 1 13487 13 is_stmt 1 view .LVU8199
 28956              		.loc 1 13487 32 is_stmt 0 view .LVU8200
 28957 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 28958              		.loc 1 13487 16 view .LVU8201
 28959 0028 1BB9     		cbnz	r3, .L2015
 28960              	.LVL3632:
 28961              	.L2009:
13488:Core/Src/bno055.c ****             {
13489:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13490:Core/Src/bno055.c ****             }
13491:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 28962              		.loc 1 13491 13 is_stmt 1 view .LVU8202
 28963              		.loc 1 13491 16 is_stmt 0 view .LVU8203
ARM GAS  /tmp/cc9kYR4Z.s 			page 809


 28964 002a 44B1     		cbz	r4, .L2016
13492:Core/Src/bno055.c ****             {
13493:Core/Src/bno055.c ****                 /* Write page as one */
13494:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13495:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13496:Core/Src/bno055.c ****                 {
13497:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13498:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
13499:Core/Src/bno055.c ****                                                               &data_u8r,
13500:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13501:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13502:Core/Src/bno055.c ****                     {
13503:Core/Src/bno055.c ****                         /* Write the value
13504:Core/Src/bno055.c ****                          * of mag sleep mode*/
13505:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE, sleep_mode_
13506:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13507:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
13508:Core/Src/bno055.c ****                                                                     &data_u8r,
13509:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13510:Core/Src/bno055.c ****                     }
13511:Core/Src/bno055.c ****                 }
13512:Core/Src/bno055.c ****                 else
13513:Core/Src/bno055.c ****                 {
13514:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13515:Core/Src/bno055.c ****                 }
13516:Core/Src/bno055.c ****             }
13517:Core/Src/bno055.c ****             else
13518:Core/Src/bno055.c ****             {
13519:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 28965              		.loc 1 13519 26 view .LVU8204
 28966 002c 4FF0FF34 		mov	r4, #-1
 28967              	.LVL3633:
 28968              		.loc 1 13519 26 view .LVU8205
 28969 0030 2DE0     		b	.L2008
 28970              	.LVL3634:
 28971              	.L2015:
13489:Core/Src/bno055.c ****             }
 28972              		.loc 1 13489 17 is_stmt 1 view .LVU8206
13489:Core/Src/bno055.c ****             }
 28973              		.loc 1 13489 28 is_stmt 0 view .LVU8207
 28974 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 28975              	.LVL3635:
13489:Core/Src/bno055.c ****             }
 28976              		.loc 1 13489 25 view .LVU8208
 28977 0036 54FA80F4 		uxtab	r4, r4, r0
 28978 003a 64B2     		sxtb	r4, r4
 28979              	.LVL3636:
13489:Core/Src/bno055.c ****             }
 28980              		.loc 1 13489 25 view .LVU8209
 28981 003c F5E7     		b	.L2009
 28982              	.L2016:
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28983              		.loc 1 13494 17 is_stmt 1 view .LVU8210
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28984              		.loc 1 13494 30 is_stmt 0 view .LVU8211
 28985 003e 0120     		movs	r0, #1
 28986 0040 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/cc9kYR4Z.s 			page 810


 28987              	.LVL3637:
13495:Core/Src/bno055.c ****                 {
 28988              		.loc 1 13495 17 is_stmt 1 view .LVU8212
13495:Core/Src/bno055.c ****                 {
 28989              		.loc 1 13495 20 is_stmt 0 view .LVU8213
 28990 0044 48BB     		cbnz	r0, .L2013
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28991              		.loc 1 13497 21 is_stmt 1 view .LVU8214
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28992              		.loc 1 13497 40 is_stmt 0 view .LVU8215
 28993 0046 1B4B     		ldr	r3, .L2018
 28994 0048 1868     		ldr	r0, [r3]
 28995              	.LVL3638:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28996              		.loc 1 13497 40 view .LVU8216
 28997 004a 0469     		ldr	r4, [r0, #16]
 28998              	.LVL3639:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 28999              		.loc 1 13497 32 view .LVU8217
 29000 004c 0123     		movs	r3, #1
 29001 004e 0DF10702 		add	r2, sp, #7
 29002 0052 0E21     		movs	r1, #14
 29003 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29004 0056 A047     		blx	r4
 29005              	.LVL3640:
13501:Core/Src/bno055.c ****                     {
 29006              		.loc 1 13501 21 is_stmt 1 view .LVU8218
13501:Core/Src/bno055.c ****                     {
 29007              		.loc 1 13501 24 is_stmt 0 view .LVU8219
 29008 0058 0446     		mov	r4, r0
 29009 005a C0B9     		cbnz	r0, .L2008
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29010              		.loc 1 13505 25 is_stmt 1 view .LVU8220
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29011              		.loc 1 13505 36 is_stmt 0 view .LVU8221
 29012 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29013 0060 23F00103 		bic	r3, r3, #1
 29014 0064 5BB2     		sxtb	r3, r3
 29015 0066 05F00100 		and	r0, r5, #1
 29016              	.LVL3641:
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29017              		.loc 1 13505 36 view .LVU8222
 29018 006a 0343     		orrs	r3, r3, r0
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29019              		.loc 1 13505 34 view .LVU8223
 29020 006c 8DF80730 		strb	r3, [sp, #7]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29021              		.loc 1 13506 25 is_stmt 1 view .LVU8224
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29022              		.loc 1 13506 45 is_stmt 0 view .LVU8225
 29023 0070 104B     		ldr	r3, .L2018
 29024 0072 1868     		ldr	r0, [r3]
 29025 0074 C568     		ldr	r5, [r0, #12]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29026              		.loc 1 13506 37 view .LVU8226
 29027 0076 0123     		movs	r3, #1
 29028 0078 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/cc9kYR4Z.s 			page 811


 29029 007c 0E21     		movs	r1, #14
 29030 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29031 0080 A847     		blx	r5
 29032              	.LVL3642:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29033              		.loc 1 13506 34 view .LVU8227
 29034 0082 54FA80F0 		uxtab	r0, r4, r0
 29035 0086 44B2     		sxtb	r4, r0
 29036              	.LVL3643:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29037              		.loc 1 13506 34 view .LVU8228
 29038 0088 01E0     		b	.L2008
 29039              	.LVL3644:
 29040              	.L2011:
13520:Core/Src/bno055.c ****             }
13521:Core/Src/bno055.c ****         }
13522:Core/Src/bno055.c ****         else
13523:Core/Src/bno055.c ****         {
13524:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 29041              		.loc 1 13524 22 view .LVU8229
 29042 008a 4FF0FF34 		mov	r4, #-1
 29043              	.LVL3645:
 29044              	.L2008:
13525:Core/Src/bno055.c ****         }
13526:Core/Src/bno055.c ****     }
13527:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29045              		.loc 1 13527 5 is_stmt 1 view .LVU8230
 29046              		.loc 1 13527 24 is_stmt 0 view .LVU8231
 29047 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 29048              		.loc 1 13527 8 view .LVU8232
 29049 0092 28B9     		cbnz	r0, .L2017
 29050              	.LVL3646:
 29051              	.L2007:
13528:Core/Src/bno055.c ****     {
13529:Core/Src/bno055.c ****         /* set the operation mode of
13530:Core/Src/bno055.c ****          * previous operation mode*/
13531:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13532:Core/Src/bno055.c ****     }
13533:Core/Src/bno055.c **** 
13534:Core/Src/bno055.c ****     return com_rslt;
13535:Core/Src/bno055.c **** }
 29052              		.loc 1 13535 1 view .LVU8233
 29053 0094 2046     		mov	r0, r4
 29054 0096 03B0     		add	sp, sp, #12
 29055              	.LCFI803:
 29056              		.cfi_remember_state
 29057              		.cfi_def_cfa_offset 12
 29058              		@ sp needed
 29059 0098 30BD     		pop	{r4, r5, pc}
 29060              	.LVL3647:
 29061              	.L2013:
 29062              	.LCFI804:
 29063              		.cfi_restore_state
13514:Core/Src/bno055.c ****                 }
 29064              		.loc 1 13514 30 view .LVU8234
 29065 009a 4FF0FF34 		mov	r4, #-1
 29066              	.LVL3648:
ARM GAS  /tmp/cc9kYR4Z.s 			page 812


13514:Core/Src/bno055.c ****                 }
 29067              		.loc 1 13514 30 view .LVU8235
 29068 009e F6E7     		b	.L2008
 29069              	.LVL3649:
 29070              	.L2017:
13531:Core/Src/bno055.c ****     }
 29071              		.loc 1 13531 9 is_stmt 1 view .LVU8236
13531:Core/Src/bno055.c ****     }
 29072              		.loc 1 13531 21 is_stmt 0 view .LVU8237
 29073 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 29074              	.LVL3650:
13531:Core/Src/bno055.c ****     }
 29075              		.loc 1 13531 18 view .LVU8238
 29076 00a4 54FA80F0 		uxtab	r0, r4, r0
 29077 00a8 44B2     		sxtb	r4, r0
 29078              	.LVL3651:
13531:Core/Src/bno055.c ****     }
 29079              		.loc 1 13531 18 view .LVU8239
 29080 00aa F3E7     		b	.L2007
 29081              	.LVL3652:
 29082              	.L2010:
13477:Core/Src/bno055.c ****     }
 29083              		.loc 1 13477 16 view .LVU8240
 29084 00ac 6FF07E04 		mvn	r4, #126
 29085 00b0 F0E7     		b	.L2007
 29086              	.L2019:
 29087 00b2 00BF     		.align	2
 29088              	.L2018:
 29089 00b4 00000000 		.word	.LANCHOR0
 29090              		.cfi_endproc
 29091              	.LFE202:
 29093              		.section	.text.bno055_get_mag_sleep_durn,"ax",%progbits
 29094              		.align	1
 29095              		.global	bno055_get_mag_sleep_durn
 29096              		.syntax unified
 29097              		.thumb
 29098              		.thumb_func
 29100              	bno055_get_mag_sleep_durn:
 29101              	.LVL3653:
 29102              	.LFB203:
13536:Core/Src/bno055.c **** 
13537:Core/Src/bno055.c **** /*!
13538:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep duration
13539:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13540:Core/Src/bno055.c ****  *
13541:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13542:Core/Src/bno055.c ****  *
13543:Core/Src/bno055.c ****  *  @return results of bus communication function
13544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13546:Core/Src/bno055.c ****  *
13547:Core/Src/bno055.c ****  *
13548:Core/Src/bno055.c ****  */
13549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_durn(u8 *sleep_durn_u8)
13550:Core/Src/bno055.c **** {
 29103              		.loc 1 13550 1 is_stmt 1 view -0
 29104              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 813


 29105              		@ args = 0, pretend = 0, frame = 8
 29106              		@ frame_needed = 0, uses_anonymous_args = 0
 29107              		.loc 1 13550 1 is_stmt 0 view .LVU8242
 29108 0000 30B5     		push	{r4, r5, lr}
 29109              	.LCFI805:
 29110              		.cfi_def_cfa_offset 12
 29111              		.cfi_offset 4, -12
 29112              		.cfi_offset 5, -8
 29113              		.cfi_offset 14, -4
 29114 0002 83B0     		sub	sp, sp, #12
 29115              	.LCFI806:
 29116              		.cfi_def_cfa_offset 24
13551:Core/Src/bno055.c ****     /* Variable used to return value of
13552:Core/Src/bno055.c ****      * communication routine*/
13553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29117              		.loc 1 13553 5 is_stmt 1 view .LVU8243
 29118              	.LVL3654:
13554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29119              		.loc 1 13554 5 view .LVU8244
 29120              		.loc 1 13554 8 is_stmt 0 view .LVU8245
 29121 0004 0023     		movs	r3, #0
 29122 0006 8DF80730 		strb	r3, [sp, #7]
13555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29123              		.loc 1 13555 5 is_stmt 1 view .LVU8246
 29124              	.LVL3655:
13556:Core/Src/bno055.c **** 
13557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29125              		.loc 1 13558 5 view .LVU8247
 29126              		.loc 1 13558 18 is_stmt 0 view .LVU8248
 29127 000a 144B     		ldr	r3, .L2028
 29128 000c 1B68     		ldr	r3, [r3]
 29129              		.loc 1 13558 8 view .LVU8249
 29130 000e F3B1     		cbz	r3, .L2024
 29131 0010 0446     		mov	r4, r0
13559:Core/Src/bno055.c ****     {
13560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13561:Core/Src/bno055.c ****     }
13562:Core/Src/bno055.c ****     else
13563:Core/Src/bno055.c ****     {
13564:Core/Src/bno055.c ****         /*condition check for page,mag sleep duration is
13565:Core/Src/bno055.c ****          * available in the page one*/
13566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29132              		.loc 1 13566 9 is_stmt 1 view .LVU8250
 29133              		.loc 1 13566 21 is_stmt 0 view .LVU8251
 29134 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29135              		.loc 1 13566 12 view .LVU8252
 29136 0014 012B     		cmp	r3, #1
 29137 0016 14D1     		bne	.L2027
 29138              	.LVL3656:
 29139              	.L2022:
13567:Core/Src/bno055.c ****         {
13568:Core/Src/bno055.c ****             /* Write page as one */
13569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13570:Core/Src/bno055.c ****         }
13571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29140              		.loc 1 13571 53 discriminator 1 view .LVU8253
ARM GAS  /tmp/cc9kYR4Z.s 			page 814


 29141 0018 104B     		ldr	r3, .L2028
 29142 001a 1B68     		ldr	r3, [r3]
 29143 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29144              		.loc 1 13571 41 discriminator 1 view .LVU8254
 29145 001e 012B     		cmp	r3, #1
 29146 0020 18D1     		bne	.L2025
 29147              	.L2023:
13572:Core/Src/bno055.c ****         {
13573:Core/Src/bno055.c ****             /* Read the value of mag sleep duration*/
13574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29148              		.loc 1 13574 13 is_stmt 1 view .LVU8255
 29149              		.loc 1 13574 32 is_stmt 0 view .LVU8256
 29150 0022 0E4B     		ldr	r3, .L2028
 29151 0024 1868     		ldr	r0, [r3]
 29152 0026 0569     		ldr	r5, [r0, #16]
 29153              		.loc 1 13574 24 view .LVU8257
 29154 0028 0123     		movs	r3, #1
 29155 002a 0DF10702 		add	r2, sp, #7
 29156 002e 0E21     		movs	r1, #14
 29157 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29158 0032 A847     		blx	r5
 29159              	.LVL3657:
13575:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_DURN_REG,
13576:Core/Src/bno055.c ****                                                       &data_u8r,
13577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13578:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN);
 29160              		.loc 1 13578 13 is_stmt 1 view .LVU8258
 29161              		.loc 1 13578 30 is_stmt 0 view .LVU8259
 29162 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29163 0038 C3F34303 		ubfx	r3, r3, #1, #4
 29164              		.loc 1 13578 28 view .LVU8260
 29165 003c 2370     		strb	r3, [r4]
 29166              	.LVL3658:
 29167              	.L2021:
13579:Core/Src/bno055.c ****         }
13580:Core/Src/bno055.c ****         else
13581:Core/Src/bno055.c ****         {
13582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13583:Core/Src/bno055.c ****         }
13584:Core/Src/bno055.c ****     }
13585:Core/Src/bno055.c **** 
13586:Core/Src/bno055.c ****     return com_rslt;
13587:Core/Src/bno055.c **** }
 29168              		.loc 1 13587 1 view .LVU8261
 29169 003e 03B0     		add	sp, sp, #12
 29170              	.LCFI807:
 29171              		.cfi_remember_state
 29172              		.cfi_def_cfa_offset 12
 29173              		@ sp needed
 29174 0040 30BD     		pop	{r4, r5, pc}
 29175              	.LVL3659:
 29176              	.L2027:
 29177              	.LCFI808:
 29178              		.cfi_restore_state
13569:Core/Src/bno055.c ****         }
 29179              		.loc 1 13569 13 is_stmt 1 view .LVU8262
13569:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 815


 29180              		.loc 1 13569 23 is_stmt 0 view .LVU8263
 29181 0042 0120     		movs	r0, #1
 29182              	.LVL3660:
13569:Core/Src/bno055.c ****         }
 29183              		.loc 1 13569 23 view .LVU8264
 29184 0044 FFF7FEFF 		bl	bno055_write_page_id
 29185              	.LVL3661:
13571:Core/Src/bno055.c ****         {
 29186              		.loc 1 13571 9 is_stmt 1 view .LVU8265
13571:Core/Src/bno055.c ****         {
 29187              		.loc 1 13571 12 is_stmt 0 view .LVU8266
 29188 0048 0028     		cmp	r0, #0
 29189 004a EAD0     		beq	.L2023
 29190 004c E4E7     		b	.L2022
 29191              	.LVL3662:
 29192              	.L2024:
13560:Core/Src/bno055.c ****     }
 29193              		.loc 1 13560 16 view .LVU8267
 29194 004e 6FF07E00 		mvn	r0, #126
 29195              	.LVL3663:
13560:Core/Src/bno055.c ****     }
 29196              		.loc 1 13560 16 view .LVU8268
 29197 0052 F4E7     		b	.L2021
 29198              	.LVL3664:
 29199              	.L2025:
13582:Core/Src/bno055.c ****         }
 29200              		.loc 1 13582 22 view .LVU8269
 29201 0054 4FF0FF30 		mov	r0, #-1
 29202 0058 F1E7     		b	.L2021
 29203              	.L2029:
 29204 005a 00BF     		.align	2
 29205              	.L2028:
 29206 005c 00000000 		.word	.LANCHOR0
 29207              		.cfi_endproc
 29208              	.LFE203:
 29210              		.section	.text.bno055_set_mag_sleep_durn,"ax",%progbits
 29211              		.align	1
 29212              		.global	bno055_set_mag_sleep_durn
 29213              		.syntax unified
 29214              		.thumb
 29215              		.thumb_func
 29217              	bno055_set_mag_sleep_durn:
 29218              	.LVL3665:
 29219              	.LFB204:
13588:Core/Src/bno055.c **** 
13589:Core/Src/bno055.c **** /*!
13590:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep duration
13591:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13592:Core/Src/bno055.c ****  *
13593:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13594:Core/Src/bno055.c ****  *
13595:Core/Src/bno055.c ****  *  @return results of bus communication function
13596:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13597:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13598:Core/Src/bno055.c ****  *
13599:Core/Src/bno055.c ****  *
13600:Core/Src/bno055.c ****  */
ARM GAS  /tmp/cc9kYR4Z.s 			page 816


13601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_durn(u8 sleep_durn_u8)
13602:Core/Src/bno055.c **** {
 29220              		.loc 1 13602 1 is_stmt 1 view -0
 29221              		.cfi_startproc
 29222              		@ args = 0, pretend = 0, frame = 8
 29223              		@ frame_needed = 0, uses_anonymous_args = 0
 29224              		.loc 1 13602 1 is_stmt 0 view .LVU8271
 29225 0000 30B5     		push	{r4, r5, lr}
 29226              	.LCFI809:
 29227              		.cfi_def_cfa_offset 12
 29228              		.cfi_offset 4, -12
 29229              		.cfi_offset 5, -8
 29230              		.cfi_offset 14, -4
 29231 0002 83B0     		sub	sp, sp, #12
 29232              	.LCFI810:
 29233              		.cfi_def_cfa_offset 24
13603:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29234              		.loc 1 13603 5 is_stmt 1 view .LVU8272
 29235              	.LVL3666:
13604:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29236              		.loc 1 13604 5 view .LVU8273
 29237              		.loc 1 13604 8 is_stmt 0 view .LVU8274
 29238 0004 0023     		movs	r3, #0
 29239 0006 8DF80730 		strb	r3, [sp, #7]
13605:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29240              		.loc 1 13605 5 is_stmt 1 view .LVU8275
 29241              	.LVL3667:
13606:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 29242              		.loc 1 13606 5 view .LVU8276
13607:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 29243              		.loc 1 13607 5 view .LVU8277
 29244              		.loc 1 13607 8 is_stmt 0 view .LVU8278
 29245 000a 8DF80630 		strb	r3, [sp, #6]
13608:Core/Src/bno055.c **** 
13609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29246              		.loc 1 13610 5 is_stmt 1 view .LVU8279
 29247              		.loc 1 13610 18 is_stmt 0 view .LVU8280
 29248 000e 2A4B     		ldr	r3, .L2042
 29249 0010 1B68     		ldr	r3, [r3]
 29250              		.loc 1 13610 8 view .LVU8281
 29251 0012 002B     		cmp	r3, #0
 29252 0014 4CD0     		beq	.L2034
 29253 0016 0546     		mov	r5, r0
13611:Core/Src/bno055.c ****     {
13612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13613:Core/Src/bno055.c ****     }
13614:Core/Src/bno055.c ****     else
13615:Core/Src/bno055.c ****     {
13616:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13617:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13618:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13619:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 29254              		.loc 1 13619 9 is_stmt 1 view .LVU8282
 29255              		.loc 1 13619 19 is_stmt 0 view .LVU8283
 29256 0018 0DF10600 		add	r0, sp, #6
 29257              	.LVL3668:
ARM GAS  /tmp/cc9kYR4Z.s 			page 817


 29258              		.loc 1 13619 19 view .LVU8284
 29259 001c FFF7FEFF 		bl	bno055_get_operation_mode
 29260              	.LVL3669:
13620:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 29261              		.loc 1 13620 9 is_stmt 1 view .LVU8285
 29262              		.loc 1 13620 12 is_stmt 0 view .LVU8286
 29263 0020 0446     		mov	r4, r0
 29264 0022 0028     		cmp	r0, #0
 29265 0024 33D1     		bne	.L2035
13621:Core/Src/bno055.c ****         {
13622:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29266              		.loc 1 13622 13 is_stmt 1 view .LVU8287
 29267              		.loc 1 13622 32 is_stmt 0 view .LVU8288
 29268 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 29269              		.loc 1 13622 16 view .LVU8289
 29270 002a 1BB9     		cbnz	r3, .L2039
 29271              	.LVL3670:
 29272              	.L2033:
13623:Core/Src/bno055.c ****             {
13624:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13625:Core/Src/bno055.c ****             }
13626:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 29273              		.loc 1 13626 13 is_stmt 1 view .LVU8290
 29274              		.loc 1 13626 16 is_stmt 0 view .LVU8291
 29275 002c 44B1     		cbz	r4, .L2040
13627:Core/Src/bno055.c ****             {
13628:Core/Src/bno055.c ****                 /* Write page as one */
13629:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13630:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13631:Core/Src/bno055.c ****                 {
13632:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13633:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
13634:Core/Src/bno055.c ****                                                               &data_u8r,
13635:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13636:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13637:Core/Src/bno055.c ****                     {
13638:Core/Src/bno055.c ****                         /* Write the value of
13639:Core/Src/bno055.c ****                          *  mag sleep duration */
13640:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN, sleep_durn_
13641:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13642:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
13643:Core/Src/bno055.c ****                                                                     &data_u8r,
13644:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13645:Core/Src/bno055.c ****                     }
13646:Core/Src/bno055.c ****                 }
13647:Core/Src/bno055.c ****                 else
13648:Core/Src/bno055.c ****                 {
13649:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13650:Core/Src/bno055.c ****                 }
13651:Core/Src/bno055.c ****             }
13652:Core/Src/bno055.c ****             else
13653:Core/Src/bno055.c ****             {
13654:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 29276              		.loc 1 13654 26 view .LVU8292
 29277 002e 4FF0FF34 		mov	r4, #-1
 29278              	.LVL3671:
 29279              		.loc 1 13654 26 view .LVU8293
ARM GAS  /tmp/cc9kYR4Z.s 			page 818


 29280 0032 2EE0     		b	.L2032
 29281              	.LVL3672:
 29282              	.L2039:
13624:Core/Src/bno055.c ****             }
 29283              		.loc 1 13624 17 is_stmt 1 view .LVU8294
13624:Core/Src/bno055.c ****             }
 29284              		.loc 1 13624 28 is_stmt 0 view .LVU8295
 29285 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 29286              	.LVL3673:
13624:Core/Src/bno055.c ****             }
 29287              		.loc 1 13624 25 view .LVU8296
 29288 0038 54FA80F4 		uxtab	r4, r4, r0
 29289 003c 64B2     		sxtb	r4, r4
 29290              	.LVL3674:
13624:Core/Src/bno055.c ****             }
 29291              		.loc 1 13624 25 view .LVU8297
 29292 003e F5E7     		b	.L2033
 29293              	.L2040:
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29294              		.loc 1 13629 17 is_stmt 1 view .LVU8298
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29295              		.loc 1 13629 30 is_stmt 0 view .LVU8299
 29296 0040 0120     		movs	r0, #1
 29297 0042 FFF7FEFF 		bl	bno055_write_page_id
 29298              	.LVL3675:
13630:Core/Src/bno055.c ****                 {
 29299              		.loc 1 13630 17 is_stmt 1 view .LVU8300
13630:Core/Src/bno055.c ****                 {
 29300              		.loc 1 13630 20 is_stmt 0 view .LVU8301
 29301 0046 50BB     		cbnz	r0, .L2037
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29302              		.loc 1 13632 21 is_stmt 1 view .LVU8302
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29303              		.loc 1 13632 40 is_stmt 0 view .LVU8303
 29304 0048 1B4B     		ldr	r3, .L2042
 29305 004a 1868     		ldr	r0, [r3]
 29306              	.LVL3676:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29307              		.loc 1 13632 40 view .LVU8304
 29308 004c 0469     		ldr	r4, [r0, #16]
 29309              	.LVL3677:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29310              		.loc 1 13632 32 view .LVU8305
 29311 004e 0123     		movs	r3, #1
 29312 0050 0DF10702 		add	r2, sp, #7
 29313 0054 0E21     		movs	r1, #14
 29314 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29315 0058 A047     		blx	r4
 29316              	.LVL3678:
13636:Core/Src/bno055.c ****                     {
 29317              		.loc 1 13636 21 is_stmt 1 view .LVU8306
13636:Core/Src/bno055.c ****                     {
 29318              		.loc 1 13636 24 is_stmt 0 view .LVU8307
 29319 005a 0446     		mov	r4, r0
 29320 005c C8B9     		cbnz	r0, .L2032
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29321              		.loc 1 13640 25 is_stmt 1 view .LVU8308
ARM GAS  /tmp/cc9kYR4Z.s 			page 819


13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29322              		.loc 1 13640 36 is_stmt 0 view .LVU8309
 29323 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29324 0062 23F01E03 		bic	r3, r3, #30
 29325 0066 5BB2     		sxtb	r3, r3
 29326 0068 6800     		lsls	r0, r5, #1
 29327              	.LVL3679:
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29328              		.loc 1 13640 36 view .LVU8310
 29329 006a 00F01E00 		and	r0, r0, #30
 29330 006e 0343     		orrs	r3, r3, r0
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29331              		.loc 1 13640 34 view .LVU8311
 29332 0070 8DF80730 		strb	r3, [sp, #7]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29333              		.loc 1 13641 25 is_stmt 1 view .LVU8312
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29334              		.loc 1 13641 45 is_stmt 0 view .LVU8313
 29335 0074 104B     		ldr	r3, .L2042
 29336 0076 1868     		ldr	r0, [r3]
 29337 0078 C568     		ldr	r5, [r0, #12]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29338              		.loc 1 13641 37 view .LVU8314
 29339 007a 0123     		movs	r3, #1
 29340 007c 0DF10702 		add	r2, sp, #7
 29341 0080 0E21     		movs	r1, #14
 29342 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29343 0084 A847     		blx	r5
 29344              	.LVL3680:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29345              		.loc 1 13641 34 view .LVU8315
 29346 0086 54FA80F0 		uxtab	r0, r4, r0
 29347 008a 44B2     		sxtb	r4, r0
 29348              	.LVL3681:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29349              		.loc 1 13641 34 view .LVU8316
 29350 008c 01E0     		b	.L2032
 29351              	.LVL3682:
 29352              	.L2035:
13655:Core/Src/bno055.c ****             }
13656:Core/Src/bno055.c ****         }
13657:Core/Src/bno055.c ****         else
13658:Core/Src/bno055.c ****         {
13659:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 29353              		.loc 1 13659 22 view .LVU8317
 29354 008e 4FF0FF34 		mov	r4, #-1
 29355              	.LVL3683:
 29356              	.L2032:
13660:Core/Src/bno055.c ****         }
13661:Core/Src/bno055.c ****     }
13662:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29357              		.loc 1 13662 5 is_stmt 1 view .LVU8318
 29358              		.loc 1 13662 24 is_stmt 0 view .LVU8319
 29359 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 29360              		.loc 1 13662 8 view .LVU8320
 29361 0096 28B9     		cbnz	r0, .L2041
 29362              	.LVL3684:
ARM GAS  /tmp/cc9kYR4Z.s 			page 820


 29363              	.L2031:
13663:Core/Src/bno055.c ****     {
13664:Core/Src/bno055.c ****         /* set the operation mode of
13665:Core/Src/bno055.c ****          * previous operation mode*/
13666:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13667:Core/Src/bno055.c ****     }
13668:Core/Src/bno055.c **** 
13669:Core/Src/bno055.c ****     return com_rslt;
13670:Core/Src/bno055.c **** }
 29364              		.loc 1 13670 1 view .LVU8321
 29365 0098 2046     		mov	r0, r4
 29366 009a 03B0     		add	sp, sp, #12
 29367              	.LCFI811:
 29368              		.cfi_remember_state
 29369              		.cfi_def_cfa_offset 12
 29370              		@ sp needed
 29371 009c 30BD     		pop	{r4, r5, pc}
 29372              	.LVL3685:
 29373              	.L2037:
 29374              	.LCFI812:
 29375              		.cfi_restore_state
13649:Core/Src/bno055.c ****                 }
 29376              		.loc 1 13649 30 view .LVU8322
 29377 009e 4FF0FF34 		mov	r4, #-1
 29378              	.LVL3686:
13649:Core/Src/bno055.c ****                 }
 29379              		.loc 1 13649 30 view .LVU8323
 29380 00a2 F6E7     		b	.L2032
 29381              	.LVL3687:
 29382              	.L2041:
13666:Core/Src/bno055.c ****     }
 29383              		.loc 1 13666 9 is_stmt 1 view .LVU8324
13666:Core/Src/bno055.c ****     }
 29384              		.loc 1 13666 21 is_stmt 0 view .LVU8325
 29385 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 29386              	.LVL3688:
13666:Core/Src/bno055.c ****     }
 29387              		.loc 1 13666 18 view .LVU8326
 29388 00a8 54FA80F0 		uxtab	r0, r4, r0
 29389 00ac 44B2     		sxtb	r4, r0
 29390              	.LVL3689:
13666:Core/Src/bno055.c ****     }
 29391              		.loc 1 13666 18 view .LVU8327
 29392 00ae F3E7     		b	.L2031
 29393              	.LVL3690:
 29394              	.L2034:
13612:Core/Src/bno055.c ****     }
 29395              		.loc 1 13612 16 view .LVU8328
 29396 00b0 6FF07E04 		mvn	r4, #126
 29397 00b4 F0E7     		b	.L2031
 29398              	.L2043:
 29399 00b6 00BF     		.align	2
 29400              	.L2042:
 29401 00b8 00000000 		.word	.LANCHOR0
 29402              		.cfi_endproc
 29403              	.LFE204:
 29405              		.section	.text.bno055_get_intr_mask_gyro_any_motion,"ax",%progbits
ARM GAS  /tmp/cc9kYR4Z.s 			page 821


 29406              		.align	1
 29407              		.global	bno055_get_intr_mask_gyro_any_motion
 29408              		.syntax unified
 29409              		.thumb
 29410              		.thumb_func
 29412              	bno055_get_intr_mask_gyro_any_motion:
 29413              	.LVL3691:
 29414              	.LFB205:
13671:Core/Src/bno055.c **** 
13672:Core/Src/bno055.c **** /*!
13673:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt mask
13674:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13675:Core/Src/bno055.c ****  *
13676:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13677:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13678:Core/Src/bno055.c ****  *     --------------------  |------------
13679:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13680:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13681:Core/Src/bno055.c ****  *
13682:Core/Src/bno055.c ****  *  @return results of bus communication function
13683:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13684:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13685:Core/Src/bno055.c ****  *
13686:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13687:Core/Src/bno055.c ****  *  configure the following settings
13688:Core/Src/bno055.c ****  *
13689:Core/Src/bno055.c ****  *  Axis:
13690:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13691:Core/Src/bno055.c ****  *
13692:Core/Src/bno055.c ****  *  Filter setting:
13693:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13694:Core/Src/bno055.c ****  *
13695:Core/Src/bno055.c ****  *  Threshold :
13696:Core/Src/bno055.c ****  *
13697:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13698:Core/Src/bno055.c ****  *
13699:Core/Src/bno055.c ****  *  Slope samples :
13700:Core/Src/bno055.c ****  *
13701:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13702:Core/Src/bno055.c ****  *
13703:Core/Src/bno055.c ****  *  Awake duration :
13704:Core/Src/bno055.c ****  *
13705:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13706:Core/Src/bno055.c ****  *
13707:Core/Src/bno055.c ****  */
13708:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_any_motion(u8 *gyro_any_motion_u8)
13709:Core/Src/bno055.c **** {
 29415              		.loc 1 13709 1 is_stmt 1 view -0
 29416              		.cfi_startproc
 29417              		@ args = 0, pretend = 0, frame = 8
 29418              		@ frame_needed = 0, uses_anonymous_args = 0
 29419              		.loc 1 13709 1 is_stmt 0 view .LVU8330
 29420 0000 30B5     		push	{r4, r5, lr}
 29421              	.LCFI813:
 29422              		.cfi_def_cfa_offset 12
 29423              		.cfi_offset 4, -12
 29424              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 822


 29425              		.cfi_offset 14, -4
 29426 0002 83B0     		sub	sp, sp, #12
 29427              	.LCFI814:
 29428              		.cfi_def_cfa_offset 24
13710:Core/Src/bno055.c ****     /* Variable used to return value of
13711:Core/Src/bno055.c ****      * communication routine*/
13712:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29429              		.loc 1 13712 5 is_stmt 1 view .LVU8331
 29430              	.LVL3692:
13713:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29431              		.loc 1 13713 5 view .LVU8332
 29432              		.loc 1 13713 8 is_stmt 0 view .LVU8333
 29433 0004 0023     		movs	r3, #0
 29434 0006 8DF80730 		strb	r3, [sp, #7]
13714:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29435              		.loc 1 13714 5 is_stmt 1 view .LVU8334
 29436              	.LVL3693:
13715:Core/Src/bno055.c **** 
13716:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13717:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29437              		.loc 1 13717 5 view .LVU8335
 29438              		.loc 1 13717 18 is_stmt 0 view .LVU8336
 29439 000a 144B     		ldr	r3, .L2052
 29440 000c 1B68     		ldr	r3, [r3]
 29441              		.loc 1 13717 8 view .LVU8337
 29442 000e F3B1     		cbz	r3, .L2048
 29443 0010 0446     		mov	r4, r0
13718:Core/Src/bno055.c ****     {
13719:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13720:Core/Src/bno055.c ****     }
13721:Core/Src/bno055.c ****     else
13722:Core/Src/bno055.c ****     {
13723:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt mask is
13724:Core/Src/bno055.c ****          * available in the page one*/
13725:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29444              		.loc 1 13725 9 is_stmt 1 view .LVU8338
 29445              		.loc 1 13725 21 is_stmt 0 view .LVU8339
 29446 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29447              		.loc 1 13725 12 view .LVU8340
 29448 0014 012B     		cmp	r3, #1
 29449 0016 14D1     		bne	.L2051
 29450              	.LVL3694:
 29451              	.L2046:
13726:Core/Src/bno055.c ****         {
13727:Core/Src/bno055.c ****             /* Write page as one */
13728:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13729:Core/Src/bno055.c ****         }
13730:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29452              		.loc 1 13730 53 discriminator 1 view .LVU8341
 29453 0018 104B     		ldr	r3, .L2052
 29454 001a 1B68     		ldr	r3, [r3]
 29455 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29456              		.loc 1 13730 41 discriminator 1 view .LVU8342
 29457 001e 012B     		cmp	r3, #1
 29458 0020 18D1     		bne	.L2049
 29459              	.L2047:
13731:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 823


13732:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt mask*/
13733:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29460              		.loc 1 13733 13 is_stmt 1 view .LVU8343
 29461              		.loc 1 13733 32 is_stmt 0 view .LVU8344
 29462 0022 0E4B     		ldr	r3, .L2052
 29463 0024 1868     		ldr	r0, [r3]
 29464 0026 0569     		ldr	r5, [r0, #16]
 29465              		.loc 1 13733 24 view .LVU8345
 29466 0028 0123     		movs	r3, #1
 29467 002a 0DF10702 		add	r2, sp, #7
 29468 002e 0F21     		movs	r1, #15
 29469 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29470 0032 A847     		blx	r5
 29471              	.LVL3695:
13734:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13735:Core/Src/bno055.c ****                                                       &data_u8r,
13736:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13737:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK);
 29472              		.loc 1 13737 13 is_stmt 1 view .LVU8346
 29473              		.loc 1 13737 35 is_stmt 0 view .LVU8347
 29474 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29475 0038 C3F38003 		ubfx	r3, r3, #2, #1
 29476              		.loc 1 13737 33 view .LVU8348
 29477 003c 2370     		strb	r3, [r4]
 29478              	.LVL3696:
 29479              	.L2045:
13738:Core/Src/bno055.c ****         }
13739:Core/Src/bno055.c ****         else
13740:Core/Src/bno055.c ****         {
13741:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13742:Core/Src/bno055.c ****         }
13743:Core/Src/bno055.c ****     }
13744:Core/Src/bno055.c **** 
13745:Core/Src/bno055.c ****     return com_rslt;
13746:Core/Src/bno055.c **** }
 29480              		.loc 1 13746 1 view .LVU8349
 29481 003e 03B0     		add	sp, sp, #12
 29482              	.LCFI815:
 29483              		.cfi_remember_state
 29484              		.cfi_def_cfa_offset 12
 29485              		@ sp needed
 29486 0040 30BD     		pop	{r4, r5, pc}
 29487              	.LVL3697:
 29488              	.L2051:
 29489              	.LCFI816:
 29490              		.cfi_restore_state
13728:Core/Src/bno055.c ****         }
 29491              		.loc 1 13728 13 is_stmt 1 view .LVU8350
13728:Core/Src/bno055.c ****         }
 29492              		.loc 1 13728 23 is_stmt 0 view .LVU8351
 29493 0042 0120     		movs	r0, #1
 29494              	.LVL3698:
13728:Core/Src/bno055.c ****         }
 29495              		.loc 1 13728 23 view .LVU8352
 29496 0044 FFF7FEFF 		bl	bno055_write_page_id
 29497              	.LVL3699:
13730:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 824


 29498              		.loc 1 13730 9 is_stmt 1 view .LVU8353
13730:Core/Src/bno055.c ****         {
 29499              		.loc 1 13730 12 is_stmt 0 view .LVU8354
 29500 0048 0028     		cmp	r0, #0
 29501 004a EAD0     		beq	.L2047
 29502 004c E4E7     		b	.L2046
 29503              	.LVL3700:
 29504              	.L2048:
13719:Core/Src/bno055.c ****     }
 29505              		.loc 1 13719 16 view .LVU8355
 29506 004e 6FF07E00 		mvn	r0, #126
 29507              	.LVL3701:
13719:Core/Src/bno055.c ****     }
 29508              		.loc 1 13719 16 view .LVU8356
 29509 0052 F4E7     		b	.L2045
 29510              	.LVL3702:
 29511              	.L2049:
13741:Core/Src/bno055.c ****         }
 29512              		.loc 1 13741 22 view .LVU8357
 29513 0054 4FF0FF30 		mov	r0, #-1
 29514 0058 F1E7     		b	.L2045
 29515              	.L2053:
 29516 005a 00BF     		.align	2
 29517              	.L2052:
 29518 005c 00000000 		.word	.LANCHOR0
 29519              		.cfi_endproc
 29520              	.LFE205:
 29522              		.section	.text.bno055_set_intr_mask_gyro_any_motion,"ax",%progbits
 29523              		.align	1
 29524              		.global	bno055_set_intr_mask_gyro_any_motion
 29525              		.syntax unified
 29526              		.thumb
 29527              		.thumb_func
 29529              	bno055_set_intr_mask_gyro_any_motion:
 29530              	.LVL3703:
 29531              	.LFB206:
13747:Core/Src/bno055.c **** 
13748:Core/Src/bno055.c **** /*!
13749:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt mask
13750:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13751:Core/Src/bno055.c ****  *
13752:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13753:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13754:Core/Src/bno055.c ****  *     --------------------  |------------
13755:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13756:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13757:Core/Src/bno055.c ****  *
13758:Core/Src/bno055.c ****  *  @return results of bus communication function
13759:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13760:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13761:Core/Src/bno055.c ****  *
13762:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13763:Core/Src/bno055.c ****  *  configure the following settings
13764:Core/Src/bno055.c ****  *
13765:Core/Src/bno055.c ****  *  Axis:
13766:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13767:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 825


13768:Core/Src/bno055.c ****  *  Filter setting:
13769:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13770:Core/Src/bno055.c ****  *
13771:Core/Src/bno055.c ****  *  Threshold :
13772:Core/Src/bno055.c ****  *
13773:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13774:Core/Src/bno055.c ****  *
13775:Core/Src/bno055.c ****  *  Slope samples :
13776:Core/Src/bno055.c ****  *
13777:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13778:Core/Src/bno055.c ****  *
13779:Core/Src/bno055.c ****  *  Awake duration :
13780:Core/Src/bno055.c ****  *
13781:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13782:Core/Src/bno055.c ****  *
13783:Core/Src/bno055.c ****  */
13784:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_any_motion(u8 gyro_any_motion_u8)
13785:Core/Src/bno055.c **** {
 29532              		.loc 1 13785 1 is_stmt 1 view -0
 29533              		.cfi_startproc
 29534              		@ args = 0, pretend = 0, frame = 8
 29535              		@ frame_needed = 0, uses_anonymous_args = 0
 29536              		.loc 1 13785 1 is_stmt 0 view .LVU8359
 29537 0000 30B5     		push	{r4, r5, lr}
 29538              	.LCFI817:
 29539              		.cfi_def_cfa_offset 12
 29540              		.cfi_offset 4, -12
 29541              		.cfi_offset 5, -8
 29542              		.cfi_offset 14, -4
 29543 0002 83B0     		sub	sp, sp, #12
 29544              	.LCFI818:
 29545              		.cfi_def_cfa_offset 24
13786:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29546              		.loc 1 13786 5 is_stmt 1 view .LVU8360
 29547              	.LVL3704:
13787:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29548              		.loc 1 13787 5 view .LVU8361
 29549              		.loc 1 13787 8 is_stmt 0 view .LVU8362
 29550 0004 0023     		movs	r3, #0
 29551 0006 8DF80730 		strb	r3, [sp, #7]
13788:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29552              		.loc 1 13788 5 is_stmt 1 view .LVU8363
 29553              	.LVL3705:
13789:Core/Src/bno055.c **** 
13790:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13791:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29554              		.loc 1 13791 5 view .LVU8364
 29555              		.loc 1 13791 18 is_stmt 0 view .LVU8365
 29556 000a 1F4B     		ldr	r3, .L2062
 29557 000c 1B68     		ldr	r3, [r3]
 29558              		.loc 1 13791 8 view .LVU8366
 29559 000e 002B     		cmp	r3, #0
 29560 0010 33D0     		beq	.L2058
 29561 0012 0446     		mov	r4, r0
13792:Core/Src/bno055.c ****     {
13793:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13794:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 826


13795:Core/Src/bno055.c ****     else
13796:Core/Src/bno055.c ****     {
13797:Core/Src/bno055.c ****         /*condition check for page, accel range is
13798:Core/Src/bno055.c ****          * available in the page one*/
13799:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29562              		.loc 1 13799 9 is_stmt 1 view .LVU8367
 29563              		.loc 1 13799 21 is_stmt 0 view .LVU8368
 29564 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29565              		.loc 1 13799 12 view .LVU8369
 29566 0016 012B     		cmp	r3, #1
 29567 0018 29D1     		bne	.L2061
 29568              	.LVL3706:
 29569              	.L2056:
13800:Core/Src/bno055.c ****         {
13801:Core/Src/bno055.c ****             /* Write page as one */
13802:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13803:Core/Src/bno055.c ****         }
13804:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29570              		.loc 1 13804 53 discriminator 1 view .LVU8370
 29571 001a 1B4B     		ldr	r3, .L2062
 29572 001c 1B68     		ldr	r3, [r3]
 29573 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29574              		.loc 1 13804 41 discriminator 1 view .LVU8371
 29575 0020 012B     		cmp	r3, #1
 29576 0022 2DD1     		bne	.L2059
 29577              	.L2057:
13805:Core/Src/bno055.c ****         {
13806:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt mask*/
13807:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29578              		.loc 1 13807 13 is_stmt 1 view .LVU8372
 29579              		.loc 1 13807 32 is_stmt 0 view .LVU8373
 29580 0024 184B     		ldr	r3, .L2062
 29581 0026 1868     		ldr	r0, [r3]
 29582 0028 0569     		ldr	r5, [r0, #16]
 29583              		.loc 1 13807 24 view .LVU8374
 29584 002a 0123     		movs	r3, #1
 29585 002c 0DF10702 		add	r2, sp, #7
 29586 0030 0F21     		movs	r1, #15
 29587 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29588 0034 A847     		blx	r5
 29589              	.LVL3707:
13808:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13809:Core/Src/bno055.c ****                                                       &data_u8r,
13810:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13811:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29590              		.loc 1 13811 13 is_stmt 1 view .LVU8375
 29591              		.loc 1 13811 16 is_stmt 0 view .LVU8376
 29592 0036 0546     		mov	r5, r0
 29593 0038 B0B9     		cbnz	r0, .L2055
13812:Core/Src/bno055.c ****             {
13813:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK, gyro_any
 29594              		.loc 1 13813 17 is_stmt 1 view .LVU8377
 29595              		.loc 1 13813 28 is_stmt 0 view .LVU8378
 29596 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29597 003e 23F00403 		bic	r3, r3, #4
 29598 0042 5BB2     		sxtb	r3, r3
 29599 0044 A400     		lsls	r4, r4, #2
ARM GAS  /tmp/cc9kYR4Z.s 			page 827


 29600 0046 04F00404 		and	r4, r4, #4
 29601 004a 2343     		orrs	r3, r3, r4
 29602              		.loc 1 13813 26 view .LVU8379
 29603 004c 8DF80730 		strb	r3, [sp, #7]
13814:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29604              		.loc 1 13814 17 is_stmt 1 view .LVU8380
 29605              		.loc 1 13814 37 is_stmt 0 view .LVU8381
 29606 0050 0D4B     		ldr	r3, .L2062
 29607 0052 1868     		ldr	r0, [r3]
 29608              	.LVL3708:
 29609              		.loc 1 13814 37 view .LVU8382
 29610 0054 C468     		ldr	r4, [r0, #12]
 29611              		.loc 1 13814 29 view .LVU8383
 29612 0056 0123     		movs	r3, #1
 29613 0058 0DF10702 		add	r2, sp, #7
 29614 005c 0F21     		movs	r1, #15
 29615 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29616 0060 A047     		blx	r4
 29617              	.LVL3709:
 29618              		.loc 1 13814 26 view .LVU8384
 29619 0062 55FA80F0 		uxtab	r0, r5, r0
 29620 0066 45B2     		sxtb	r5, r0
 29621              	.LVL3710:
 29622              	.L2055:
13815:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13816:Core/Src/bno055.c ****                                                             &data_u8r,
13817:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
13818:Core/Src/bno055.c ****             }
13819:Core/Src/bno055.c ****         }
13820:Core/Src/bno055.c ****         else
13821:Core/Src/bno055.c ****         {
13822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13823:Core/Src/bno055.c ****         }
13824:Core/Src/bno055.c ****     }
13825:Core/Src/bno055.c **** 
13826:Core/Src/bno055.c ****     return com_rslt;
13827:Core/Src/bno055.c **** }
 29623              		.loc 1 13827 1 view .LVU8385
 29624 0068 2846     		mov	r0, r5
 29625 006a 03B0     		add	sp, sp, #12
 29626              	.LCFI819:
 29627              		.cfi_remember_state
 29628              		.cfi_def_cfa_offset 12
 29629              		@ sp needed
 29630 006c 30BD     		pop	{r4, r5, pc}
 29631              	.LVL3711:
 29632              	.L2061:
 29633              	.LCFI820:
 29634              		.cfi_restore_state
13802:Core/Src/bno055.c ****         }
 29635              		.loc 1 13802 13 is_stmt 1 view .LVU8386
13802:Core/Src/bno055.c ****         }
 29636              		.loc 1 13802 23 is_stmt 0 view .LVU8387
 29637 006e 0120     		movs	r0, #1
 29638              	.LVL3712:
13802:Core/Src/bno055.c ****         }
 29639              		.loc 1 13802 23 view .LVU8388
ARM GAS  /tmp/cc9kYR4Z.s 			page 828


 29640 0070 FFF7FEFF 		bl	bno055_write_page_id
 29641              	.LVL3713:
13804:Core/Src/bno055.c ****         {
 29642              		.loc 1 13804 9 is_stmt 1 view .LVU8389
13804:Core/Src/bno055.c ****         {
 29643              		.loc 1 13804 12 is_stmt 0 view .LVU8390
 29644 0074 0028     		cmp	r0, #0
 29645 0076 D5D0     		beq	.L2057
 29646 0078 CFE7     		b	.L2056
 29647              	.LVL3714:
 29648              	.L2058:
13793:Core/Src/bno055.c ****     }
 29649              		.loc 1 13793 16 view .LVU8391
 29650 007a 6FF07E05 		mvn	r5, #126
 29651 007e F3E7     		b	.L2055
 29652              	.LVL3715:
 29653              	.L2059:
13822:Core/Src/bno055.c ****         }
 29654              		.loc 1 13822 22 view .LVU8392
 29655 0080 4FF0FF35 		mov	r5, #-1
 29656 0084 F0E7     		b	.L2055
 29657              	.L2063:
 29658 0086 00BF     		.align	2
 29659              	.L2062:
 29660 0088 00000000 		.word	.LANCHOR0
 29661              		.cfi_endproc
 29662              	.LFE206:
 29664              		.section	.text.bno055_get_intr_mask_gyro_highrate,"ax",%progbits
 29665              		.align	1
 29666              		.global	bno055_get_intr_mask_gyro_highrate
 29667              		.syntax unified
 29668              		.thumb
 29669              		.thumb_func
 29671              	bno055_get_intr_mask_gyro_highrate:
 29672              	.LVL3716:
 29673              	.LFB207:
13828:Core/Src/bno055.c **** 
13829:Core/Src/bno055.c **** /*!
13830:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt mask
13831:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13832:Core/Src/bno055.c ****  *
13833:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13834:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13835:Core/Src/bno055.c ****  *     --------------------  |------------
13836:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13837:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13838:Core/Src/bno055.c ****  *
13839:Core/Src/bno055.c ****  *  @return results of bus communication function
13840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13842:Core/Src/bno055.c ****  *
13843:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13844:Core/Src/bno055.c ****  *  configure the below settings by using
13845:Core/Src/bno055.c ****  *  the following API
13846:Core/Src/bno055.c ****  *
13847:Core/Src/bno055.c ****  *  Axis :
13848:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 829


13849:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13850:Core/Src/bno055.c ****  *
13851:Core/Src/bno055.c ****  *  Filter :
13852:Core/Src/bno055.c ****  *
13853:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13854:Core/Src/bno055.c ****  *
13855:Core/Src/bno055.c ****  *  Threshold :
13856:Core/Src/bno055.c ****  *
13857:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13858:Core/Src/bno055.c ****  *
13859:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13860:Core/Src/bno055.c ****  *
13861:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13862:Core/Src/bno055.c ****  *
13863:Core/Src/bno055.c ****  *  Hysteresis :
13864:Core/Src/bno055.c ****  *
13865:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13866:Core/Src/bno055.c ****  *
13867:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13868:Core/Src/bno055.c ****  *
13869:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13870:Core/Src/bno055.c ****  *
13871:Core/Src/bno055.c ****  *  Duration :
13872:Core/Src/bno055.c ****  *
13873:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13874:Core/Src/bno055.c ****  *
13875:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13876:Core/Src/bno055.c ****  *
13877:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13878:Core/Src/bno055.c ****  *
13879:Core/Src/bno055.c ****  */
13880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_highrate(u8 *gyro_highrate_u8)
13881:Core/Src/bno055.c **** {
 29674              		.loc 1 13881 1 is_stmt 1 view -0
 29675              		.cfi_startproc
 29676              		@ args = 0, pretend = 0, frame = 8
 29677              		@ frame_needed = 0, uses_anonymous_args = 0
 29678              		.loc 1 13881 1 is_stmt 0 view .LVU8394
 29679 0000 30B5     		push	{r4, r5, lr}
 29680              	.LCFI821:
 29681              		.cfi_def_cfa_offset 12
 29682              		.cfi_offset 4, -12
 29683              		.cfi_offset 5, -8
 29684              		.cfi_offset 14, -4
 29685 0002 83B0     		sub	sp, sp, #12
 29686              	.LCFI822:
 29687              		.cfi_def_cfa_offset 24
13882:Core/Src/bno055.c ****     /* Variable used to return value of
13883:Core/Src/bno055.c ****      * communication routine*/
13884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29688              		.loc 1 13884 5 is_stmt 1 view .LVU8395
 29689              	.LVL3717:
13885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29690              		.loc 1 13885 5 view .LVU8396
 29691              		.loc 1 13885 8 is_stmt 0 view .LVU8397
 29692 0004 0023     		movs	r3, #0
 29693 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/cc9kYR4Z.s 			page 830


13886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29694              		.loc 1 13886 5 is_stmt 1 view .LVU8398
 29695              	.LVL3718:
13887:Core/Src/bno055.c **** 
13888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29696              		.loc 1 13889 5 view .LVU8399
 29697              		.loc 1 13889 18 is_stmt 0 view .LVU8400
 29698 000a 144B     		ldr	r3, .L2072
 29699 000c 1B68     		ldr	r3, [r3]
 29700              		.loc 1 13889 8 view .LVU8401
 29701 000e F3B1     		cbz	r3, .L2068
 29702 0010 0446     		mov	r4, r0
13890:Core/Src/bno055.c ****     {
13891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13892:Core/Src/bno055.c ****     }
13893:Core/Src/bno055.c ****     else
13894:Core/Src/bno055.c ****     {
13895:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13896:Core/Src/bno055.c ****          * available in the page one*/
13897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29703              		.loc 1 13897 9 is_stmt 1 view .LVU8402
 29704              		.loc 1 13897 21 is_stmt 0 view .LVU8403
 29705 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29706              		.loc 1 13897 12 view .LVU8404
 29707 0014 012B     		cmp	r3, #1
 29708 0016 14D1     		bne	.L2071
 29709              	.LVL3719:
 29710              	.L2066:
13898:Core/Src/bno055.c ****         {
13899:Core/Src/bno055.c ****             /* Write page as one */
13900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13901:Core/Src/bno055.c ****         }
13902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29711              		.loc 1 13902 53 discriminator 1 view .LVU8405
 29712 0018 104B     		ldr	r3, .L2072
 29713 001a 1B68     		ldr	r3, [r3]
 29714 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29715              		.loc 1 13902 41 discriminator 1 view .LVU8406
 29716 001e 012B     		cmp	r3, #1
 29717 0020 18D1     		bne	.L2069
 29718              	.L2067:
13903:Core/Src/bno055.c ****         {
13904:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt mask*/
13905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29719              		.loc 1 13905 13 is_stmt 1 view .LVU8407
 29720              		.loc 1 13905 32 is_stmt 0 view .LVU8408
 29721 0022 0E4B     		ldr	r3, .L2072
 29722 0024 1868     		ldr	r0, [r3]
 29723 0026 0569     		ldr	r5, [r0, #16]
 29724              		.loc 1 13905 24 view .LVU8409
 29725 0028 0123     		movs	r3, #1
 29726 002a 0DF10702 		add	r2, sp, #7
 29727 002e 0F21     		movs	r1, #15
 29728 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29729 0032 A847     		blx	r5
 29730              	.LVL3720:
ARM GAS  /tmp/cc9kYR4Z.s 			page 831


13906:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13907:Core/Src/bno055.c ****                                                       &data_u8r,
13908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13909:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK);
 29731              		.loc 1 13909 13 is_stmt 1 view .LVU8410
 29732              		.loc 1 13909 33 is_stmt 0 view .LVU8411
 29733 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29734 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 29735              		.loc 1 13909 31 view .LVU8412
 29736 003c 2370     		strb	r3, [r4]
 29737              	.LVL3721:
 29738              	.L2065:
13910:Core/Src/bno055.c ****         }
13911:Core/Src/bno055.c ****         else
13912:Core/Src/bno055.c ****         {
13913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13914:Core/Src/bno055.c ****         }
13915:Core/Src/bno055.c ****     }
13916:Core/Src/bno055.c **** 
13917:Core/Src/bno055.c ****     return com_rslt;
13918:Core/Src/bno055.c **** }
 29739              		.loc 1 13918 1 view .LVU8413
 29740 003e 03B0     		add	sp, sp, #12
 29741              	.LCFI823:
 29742              		.cfi_remember_state
 29743              		.cfi_def_cfa_offset 12
 29744              		@ sp needed
 29745 0040 30BD     		pop	{r4, r5, pc}
 29746              	.LVL3722:
 29747              	.L2071:
 29748              	.LCFI824:
 29749              		.cfi_restore_state
13900:Core/Src/bno055.c ****         }
 29750              		.loc 1 13900 13 is_stmt 1 view .LVU8414
13900:Core/Src/bno055.c ****         }
 29751              		.loc 1 13900 23 is_stmt 0 view .LVU8415
 29752 0042 0120     		movs	r0, #1
 29753              	.LVL3723:
13900:Core/Src/bno055.c ****         }
 29754              		.loc 1 13900 23 view .LVU8416
 29755 0044 FFF7FEFF 		bl	bno055_write_page_id
 29756              	.LVL3724:
13902:Core/Src/bno055.c ****         {
 29757              		.loc 1 13902 9 is_stmt 1 view .LVU8417
13902:Core/Src/bno055.c ****         {
 29758              		.loc 1 13902 12 is_stmt 0 view .LVU8418
 29759 0048 0028     		cmp	r0, #0
 29760 004a EAD0     		beq	.L2067
 29761 004c E4E7     		b	.L2066
 29762              	.LVL3725:
 29763              	.L2068:
13891:Core/Src/bno055.c ****     }
 29764              		.loc 1 13891 16 view .LVU8419
 29765 004e 6FF07E00 		mvn	r0, #126
 29766              	.LVL3726:
13891:Core/Src/bno055.c ****     }
 29767              		.loc 1 13891 16 view .LVU8420
ARM GAS  /tmp/cc9kYR4Z.s 			page 832


 29768 0052 F4E7     		b	.L2065
 29769              	.LVL3727:
 29770              	.L2069:
13913:Core/Src/bno055.c ****         }
 29771              		.loc 1 13913 22 view .LVU8421
 29772 0054 4FF0FF30 		mov	r0, #-1
 29773 0058 F1E7     		b	.L2065
 29774              	.L2073:
 29775 005a 00BF     		.align	2
 29776              	.L2072:
 29777 005c 00000000 		.word	.LANCHOR0
 29778              		.cfi_endproc
 29779              	.LFE207:
 29781              		.section	.text.bno055_set_intr_mask_gyro_highrate,"ax",%progbits
 29782              		.align	1
 29783              		.global	bno055_set_intr_mask_gyro_highrate
 29784              		.syntax unified
 29785              		.thumb
 29786              		.thumb_func
 29788              	bno055_set_intr_mask_gyro_highrate:
 29789              	.LVL3728:
 29790              	.LFB208:
13919:Core/Src/bno055.c **** 
13920:Core/Src/bno055.c **** /*!
13921:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt mask
13922:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13923:Core/Src/bno055.c ****  *
13924:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13925:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13926:Core/Src/bno055.c ****  *     --------------------  |------------
13927:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13928:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13929:Core/Src/bno055.c ****  *
13930:Core/Src/bno055.c ****  *  @return results of bus communication function
13931:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13932:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13933:Core/Src/bno055.c ****  *
13934:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13935:Core/Src/bno055.c ****  *  configure the below settings by using
13936:Core/Src/bno055.c ****  *  the following APIs
13937:Core/Src/bno055.c ****  *
13938:Core/Src/bno055.c ****  *  Axis :
13939:Core/Src/bno055.c ****  *
13940:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13941:Core/Src/bno055.c ****  *
13942:Core/Src/bno055.c ****  *  Filter :
13943:Core/Src/bno055.c ****  *
13944:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13945:Core/Src/bno055.c ****  *
13946:Core/Src/bno055.c ****  *  Threshold :
13947:Core/Src/bno055.c ****  *
13948:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13949:Core/Src/bno055.c ****  *
13950:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13951:Core/Src/bno055.c ****  *
13952:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13953:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 833


13954:Core/Src/bno055.c ****  *  Hysteresis :
13955:Core/Src/bno055.c ****  *
13956:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13957:Core/Src/bno055.c ****  *
13958:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13959:Core/Src/bno055.c ****  *
13960:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13961:Core/Src/bno055.c ****  *
13962:Core/Src/bno055.c ****  *  Duration :
13963:Core/Src/bno055.c ****  *
13964:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13965:Core/Src/bno055.c ****  *
13966:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13967:Core/Src/bno055.c ****  *
13968:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13969:Core/Src/bno055.c ****  *
13970:Core/Src/bno055.c ****  */
13971:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_highrate(u8 gyro_highrate_u8)
13972:Core/Src/bno055.c **** {
 29791              		.loc 1 13972 1 is_stmt 1 view -0
 29792              		.cfi_startproc
 29793              		@ args = 0, pretend = 0, frame = 8
 29794              		@ frame_needed = 0, uses_anonymous_args = 0
 29795              		.loc 1 13972 1 is_stmt 0 view .LVU8423
 29796 0000 30B5     		push	{r4, r5, lr}
 29797              	.LCFI825:
 29798              		.cfi_def_cfa_offset 12
 29799              		.cfi_offset 4, -12
 29800              		.cfi_offset 5, -8
 29801              		.cfi_offset 14, -4
 29802 0002 83B0     		sub	sp, sp, #12
 29803              	.LCFI826:
 29804              		.cfi_def_cfa_offset 24
13973:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29805              		.loc 1 13973 5 is_stmt 1 view .LVU8424
 29806              	.LVL3729:
13974:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29807              		.loc 1 13974 5 view .LVU8425
 29808              		.loc 1 13974 8 is_stmt 0 view .LVU8426
 29809 0004 0023     		movs	r3, #0
 29810 0006 8DF80730 		strb	r3, [sp, #7]
13975:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29811              		.loc 1 13975 5 is_stmt 1 view .LVU8427
 29812              	.LVL3730:
13976:Core/Src/bno055.c **** 
13977:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13978:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29813              		.loc 1 13978 5 view .LVU8428
 29814              		.loc 1 13978 18 is_stmt 0 view .LVU8429
 29815 000a 1F4B     		ldr	r3, .L2082
 29816 000c 1B68     		ldr	r3, [r3]
 29817              		.loc 1 13978 8 view .LVU8430
 29818 000e 002B     		cmp	r3, #0
 29819 0010 33D0     		beq	.L2078
 29820 0012 0446     		mov	r4, r0
13979:Core/Src/bno055.c ****     {
13980:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 834


13981:Core/Src/bno055.c ****     }
13982:Core/Src/bno055.c ****     else
13983:Core/Src/bno055.c ****     {
13984:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13985:Core/Src/bno055.c ****          * available in the page one*/
13986:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29821              		.loc 1 13986 9 is_stmt 1 view .LVU8431
 29822              		.loc 1 13986 21 is_stmt 0 view .LVU8432
 29823 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29824              		.loc 1 13986 12 view .LVU8433
 29825 0016 012B     		cmp	r3, #1
 29826 0018 29D1     		bne	.L2081
 29827              	.LVL3731:
 29828              	.L2076:
13987:Core/Src/bno055.c ****         {
13988:Core/Src/bno055.c ****             /* Write page as one */
13989:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13990:Core/Src/bno055.c ****         }
13991:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29829              		.loc 1 13991 53 discriminator 1 view .LVU8434
 29830 001a 1B4B     		ldr	r3, .L2082
 29831 001c 1B68     		ldr	r3, [r3]
 29832 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29833              		.loc 1 13991 41 discriminator 1 view .LVU8435
 29834 0020 012B     		cmp	r3, #1
 29835 0022 2DD1     		bne	.L2079
 29836              	.L2077:
13992:Core/Src/bno055.c ****         {
13993:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29837              		.loc 1 13993 13 is_stmt 1 view .LVU8436
 29838              		.loc 1 13993 32 is_stmt 0 view .LVU8437
 29839 0024 184B     		ldr	r3, .L2082
 29840 0026 1868     		ldr	r0, [r3]
 29841 0028 0569     		ldr	r5, [r0, #16]
 29842              		.loc 1 13993 24 view .LVU8438
 29843 002a 0123     		movs	r3, #1
 29844 002c 0DF10702 		add	r2, sp, #7
 29845 0030 0F21     		movs	r1, #15
 29846 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29847 0034 A847     		blx	r5
 29848              	.LVL3732:
13994:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13995:Core/Src/bno055.c ****                                                       &data_u8r,
13996:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13997:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29849              		.loc 1 13997 13 is_stmt 1 view .LVU8439
 29850              		.loc 1 13997 16 is_stmt 0 view .LVU8440
 29851 0036 0546     		mov	r5, r0
 29852 0038 B0B9     		cbnz	r0, .L2075
13998:Core/Src/bno055.c ****             {
13999:Core/Src/bno055.c ****                 /* Write the value of gyro
14000:Core/Src/bno055.c ****                  * highrate interrupt mask*/
14001:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK, gyro_highr
 29853              		.loc 1 14001 17 is_stmt 1 view .LVU8441
 29854              		.loc 1 14001 28 is_stmt 0 view .LVU8442
 29855 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29856 003e 23F00803 		bic	r3, r3, #8
ARM GAS  /tmp/cc9kYR4Z.s 			page 835


 29857 0042 5BB2     		sxtb	r3, r3
 29858 0044 E400     		lsls	r4, r4, #3
 29859 0046 04F00804 		and	r4, r4, #8
 29860 004a 2343     		orrs	r3, r3, r4
 29861              		.loc 1 14001 26 view .LVU8443
 29862 004c 8DF80730 		strb	r3, [sp, #7]
14002:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29863              		.loc 1 14002 17 is_stmt 1 view .LVU8444
 29864              		.loc 1 14002 37 is_stmt 0 view .LVU8445
 29865 0050 0D4B     		ldr	r3, .L2082
 29866 0052 1868     		ldr	r0, [r3]
 29867              	.LVL3733:
 29868              		.loc 1 14002 37 view .LVU8446
 29869 0054 C468     		ldr	r4, [r0, #12]
 29870              		.loc 1 14002 29 view .LVU8447
 29871 0056 0123     		movs	r3, #1
 29872 0058 0DF10702 		add	r2, sp, #7
 29873 005c 0F21     		movs	r1, #15
 29874 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29875 0060 A047     		blx	r4
 29876              	.LVL3734:
 29877              		.loc 1 14002 26 view .LVU8448
 29878 0062 55FA80F0 		uxtab	r0, r5, r0
 29879 0066 45B2     		sxtb	r5, r0
 29880              	.LVL3735:
 29881              	.L2075:
14003:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
14004:Core/Src/bno055.c ****                                                             &data_u8r,
14005:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14006:Core/Src/bno055.c ****             }
14007:Core/Src/bno055.c ****         }
14008:Core/Src/bno055.c ****         else
14009:Core/Src/bno055.c ****         {
14010:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14011:Core/Src/bno055.c ****         }
14012:Core/Src/bno055.c ****     }
14013:Core/Src/bno055.c **** 
14014:Core/Src/bno055.c ****     return com_rslt;
14015:Core/Src/bno055.c **** }
 29882              		.loc 1 14015 1 view .LVU8449
 29883 0068 2846     		mov	r0, r5
 29884 006a 03B0     		add	sp, sp, #12
 29885              	.LCFI827:
 29886              		.cfi_remember_state
 29887              		.cfi_def_cfa_offset 12
 29888              		@ sp needed
 29889 006c 30BD     		pop	{r4, r5, pc}
 29890              	.LVL3736:
 29891              	.L2081:
 29892              	.LCFI828:
 29893              		.cfi_restore_state
13989:Core/Src/bno055.c ****         }
 29894              		.loc 1 13989 13 is_stmt 1 view .LVU8450
13989:Core/Src/bno055.c ****         }
 29895              		.loc 1 13989 23 is_stmt 0 view .LVU8451
 29896 006e 0120     		movs	r0, #1
 29897              	.LVL3737:
ARM GAS  /tmp/cc9kYR4Z.s 			page 836


13989:Core/Src/bno055.c ****         }
 29898              		.loc 1 13989 23 view .LVU8452
 29899 0070 FFF7FEFF 		bl	bno055_write_page_id
 29900              	.LVL3738:
13991:Core/Src/bno055.c ****         {
 29901              		.loc 1 13991 9 is_stmt 1 view .LVU8453
13991:Core/Src/bno055.c ****         {
 29902              		.loc 1 13991 12 is_stmt 0 view .LVU8454
 29903 0074 0028     		cmp	r0, #0
 29904 0076 D5D0     		beq	.L2077
 29905 0078 CFE7     		b	.L2076
 29906              	.LVL3739:
 29907              	.L2078:
13980:Core/Src/bno055.c ****     }
 29908              		.loc 1 13980 16 view .LVU8455
 29909 007a 6FF07E05 		mvn	r5, #126
 29910 007e F3E7     		b	.L2075
 29911              	.LVL3740:
 29912              	.L2079:
14010:Core/Src/bno055.c ****         }
 29913              		.loc 1 14010 22 view .LVU8456
 29914 0080 4FF0FF35 		mov	r5, #-1
 29915 0084 F0E7     		b	.L2075
 29916              	.L2083:
 29917 0086 00BF     		.align	2
 29918              	.L2082:
 29919 0088 00000000 		.word	.LANCHOR0
 29920              		.cfi_endproc
 29921              	.LFE208:
 29923              		.section	.text.bno055_get_intr_mask_accel_high_g,"ax",%progbits
 29924              		.align	1
 29925              		.global	bno055_get_intr_mask_accel_high_g
 29926              		.syntax unified
 29927              		.thumb
 29928              		.thumb_func
 29930              	bno055_get_intr_mask_accel_high_g:
 29931              	.LVL3741:
 29932              	.LFB209:
14016:Core/Src/bno055.c **** 
14017:Core/Src/bno055.c **** /*!
14018:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt mask
14019:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14020:Core/Src/bno055.c ****  *
14021:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14022:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14023:Core/Src/bno055.c ****  *     --------------------  |------------
14024:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14025:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14026:Core/Src/bno055.c ****  *
14027:Core/Src/bno055.c ****  *  @return results of bus communication function
14028:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14029:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14030:Core/Src/bno055.c ****  *
14031:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14032:Core/Src/bno055.c ****  *  configure the below settings by using
14033:Core/Src/bno055.c ****  *  the following APIs
14034:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 837


14035:Core/Src/bno055.c ****  *  Axis :
14036:Core/Src/bno055.c ****  *
14037:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14038:Core/Src/bno055.c ****  *
14039:Core/Src/bno055.c ****  *  Threshold :
14040:Core/Src/bno055.c ****  *
14041:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14042:Core/Src/bno055.c ****  *
14043:Core/Src/bno055.c ****  *  Duration :
14044:Core/Src/bno055.c ****  *
14045:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14046:Core/Src/bno055.c ****  *
14047:Core/Src/bno055.c ****  */
14048:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_high_g(u8 *accel_high_g_u8)
14049:Core/Src/bno055.c **** {
 29933              		.loc 1 14049 1 is_stmt 1 view -0
 29934              		.cfi_startproc
 29935              		@ args = 0, pretend = 0, frame = 8
 29936              		@ frame_needed = 0, uses_anonymous_args = 0
 29937              		.loc 1 14049 1 is_stmt 0 view .LVU8458
 29938 0000 30B5     		push	{r4, r5, lr}
 29939              	.LCFI829:
 29940              		.cfi_def_cfa_offset 12
 29941              		.cfi_offset 4, -12
 29942              		.cfi_offset 5, -8
 29943              		.cfi_offset 14, -4
 29944 0002 83B0     		sub	sp, sp, #12
 29945              	.LCFI830:
 29946              		.cfi_def_cfa_offset 24
14050:Core/Src/bno055.c ****     /* Variable used to return value of
14051:Core/Src/bno055.c ****      * communication routine*/
14052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29947              		.loc 1 14052 5 is_stmt 1 view .LVU8459
 29948              	.LVL3742:
14053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29949              		.loc 1 14053 5 view .LVU8460
 29950              		.loc 1 14053 8 is_stmt 0 view .LVU8461
 29951 0004 0023     		movs	r3, #0
 29952 0006 8DF80730 		strb	r3, [sp, #7]
14054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29953              		.loc 1 14054 5 is_stmt 1 view .LVU8462
 29954              	.LVL3743:
14055:Core/Src/bno055.c **** 
14056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29955              		.loc 1 14057 5 view .LVU8463
 29956              		.loc 1 14057 18 is_stmt 0 view .LVU8464
 29957 000a 144B     		ldr	r3, .L2092
 29958 000c 1B68     		ldr	r3, [r3]
 29959              		.loc 1 14057 8 view .LVU8465
 29960 000e F3B1     		cbz	r3, .L2088
 29961 0010 0446     		mov	r4, r0
14058:Core/Src/bno055.c ****     {
14059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14060:Core/Src/bno055.c ****     }
14061:Core/Src/bno055.c ****     else
14062:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 838


14063:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14064:Core/Src/bno055.c ****          * available in the page one*/
14065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29962              		.loc 1 14065 9 is_stmt 1 view .LVU8466
 29963              		.loc 1 14065 21 is_stmt 0 view .LVU8467
 29964 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29965              		.loc 1 14065 12 view .LVU8468
 29966 0014 012B     		cmp	r3, #1
 29967 0016 14D1     		bne	.L2091
 29968              	.LVL3744:
 29969              	.L2086:
14066:Core/Src/bno055.c ****         {
14067:Core/Src/bno055.c ****             /* Write page as one */
14068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14069:Core/Src/bno055.c ****         }
14070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29970              		.loc 1 14070 53 discriminator 1 view .LVU8469
 29971 0018 104B     		ldr	r3, .L2092
 29972 001a 1B68     		ldr	r3, [r3]
 29973 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29974              		.loc 1 14070 41 discriminator 1 view .LVU8470
 29975 001e 012B     		cmp	r3, #1
 29976 0020 18D1     		bne	.L2089
 29977              	.L2087:
14071:Core/Src/bno055.c ****         {
14072:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt mask*/
14073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29978              		.loc 1 14073 13 is_stmt 1 view .LVU8471
 29979              		.loc 1 14073 32 is_stmt 0 view .LVU8472
 29980 0022 0E4B     		ldr	r3, .L2092
 29981 0024 1868     		ldr	r0, [r3]
 29982 0026 0569     		ldr	r5, [r0, #16]
 29983              		.loc 1 14073 24 view .LVU8473
 29984 0028 0123     		movs	r3, #1
 29985 002a 0DF10702 		add	r2, sp, #7
 29986 002e 0F21     		movs	r1, #15
 29987 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29988 0032 A847     		blx	r5
 29989              	.LVL3745:
14074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14075:Core/Src/bno055.c ****                                                       &data_u8r,
14076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14077:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK);
 29990              		.loc 1 14077 13 is_stmt 1 view .LVU8474
 29991              		.loc 1 14077 32 is_stmt 0 view .LVU8475
 29992 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29993 0038 C3F34013 		ubfx	r3, r3, #5, #1
 29994              		.loc 1 14077 30 view .LVU8476
 29995 003c 2370     		strb	r3, [r4]
 29996              	.LVL3746:
 29997              	.L2085:
14078:Core/Src/bno055.c ****         }
14079:Core/Src/bno055.c ****         else
14080:Core/Src/bno055.c ****         {
14081:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14082:Core/Src/bno055.c ****         }
14083:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 839


14084:Core/Src/bno055.c **** 
14085:Core/Src/bno055.c ****     return com_rslt;
14086:Core/Src/bno055.c **** }
 29998              		.loc 1 14086 1 view .LVU8477
 29999 003e 03B0     		add	sp, sp, #12
 30000              	.LCFI831:
 30001              		.cfi_remember_state
 30002              		.cfi_def_cfa_offset 12
 30003              		@ sp needed
 30004 0040 30BD     		pop	{r4, r5, pc}
 30005              	.LVL3747:
 30006              	.L2091:
 30007              	.LCFI832:
 30008              		.cfi_restore_state
14068:Core/Src/bno055.c ****         }
 30009              		.loc 1 14068 13 is_stmt 1 view .LVU8478
14068:Core/Src/bno055.c ****         }
 30010              		.loc 1 14068 23 is_stmt 0 view .LVU8479
 30011 0042 0120     		movs	r0, #1
 30012              	.LVL3748:
14068:Core/Src/bno055.c ****         }
 30013              		.loc 1 14068 23 view .LVU8480
 30014 0044 FFF7FEFF 		bl	bno055_write_page_id
 30015              	.LVL3749:
14070:Core/Src/bno055.c ****         {
 30016              		.loc 1 14070 9 is_stmt 1 view .LVU8481
14070:Core/Src/bno055.c ****         {
 30017              		.loc 1 14070 12 is_stmt 0 view .LVU8482
 30018 0048 0028     		cmp	r0, #0
 30019 004a EAD0     		beq	.L2087
 30020 004c E4E7     		b	.L2086
 30021              	.LVL3750:
 30022              	.L2088:
14059:Core/Src/bno055.c ****     }
 30023              		.loc 1 14059 16 view .LVU8483
 30024 004e 6FF07E00 		mvn	r0, #126
 30025              	.LVL3751:
14059:Core/Src/bno055.c ****     }
 30026              		.loc 1 14059 16 view .LVU8484
 30027 0052 F4E7     		b	.L2085
 30028              	.LVL3752:
 30029              	.L2089:
14081:Core/Src/bno055.c ****         }
 30030              		.loc 1 14081 22 view .LVU8485
 30031 0054 4FF0FF30 		mov	r0, #-1
 30032 0058 F1E7     		b	.L2085
 30033              	.L2093:
 30034 005a 00BF     		.align	2
 30035              	.L2092:
 30036 005c 00000000 		.word	.LANCHOR0
 30037              		.cfi_endproc
 30038              	.LFE209:
 30040              		.section	.text.bno055_set_intr_mask_accel_high_g,"ax",%progbits
 30041              		.align	1
 30042              		.global	bno055_set_intr_mask_accel_high_g
 30043              		.syntax unified
 30044              		.thumb
ARM GAS  /tmp/cc9kYR4Z.s 			page 840


 30045              		.thumb_func
 30047              	bno055_set_intr_mask_accel_high_g:
 30048              	.LVL3753:
 30049              	.LFB210:
14087:Core/Src/bno055.c **** 
14088:Core/Src/bno055.c **** /*!
14089:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt mask
14090:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14091:Core/Src/bno055.c ****  *
14092:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14093:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14094:Core/Src/bno055.c ****  *     --------------------  |------------
14095:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14096:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14097:Core/Src/bno055.c ****  *
14098:Core/Src/bno055.c ****  *  @return results of bus communication function
14099:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14100:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14101:Core/Src/bno055.c ****  *
14102:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14103:Core/Src/bno055.c ****  *  configure the below settings by using
14104:Core/Src/bno055.c ****  *  the following APIs
14105:Core/Src/bno055.c ****  *
14106:Core/Src/bno055.c ****  *  Axis :
14107:Core/Src/bno055.c ****  *
14108:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14109:Core/Src/bno055.c ****  *
14110:Core/Src/bno055.c ****  *  Threshold :
14111:Core/Src/bno055.c ****  *
14112:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14113:Core/Src/bno055.c ****  *
14114:Core/Src/bno055.c ****  *  Duration :
14115:Core/Src/bno055.c ****  *
14116:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14117:Core/Src/bno055.c ****  *
14118:Core/Src/bno055.c ****  */
14119:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_high_g(u8 accel_high_g_u8)
14120:Core/Src/bno055.c **** {
 30050              		.loc 1 14120 1 is_stmt 1 view -0
 30051              		.cfi_startproc
 30052              		@ args = 0, pretend = 0, frame = 8
 30053              		@ frame_needed = 0, uses_anonymous_args = 0
 30054              		.loc 1 14120 1 is_stmt 0 view .LVU8487
 30055 0000 30B5     		push	{r4, r5, lr}
 30056              	.LCFI833:
 30057              		.cfi_def_cfa_offset 12
 30058              		.cfi_offset 4, -12
 30059              		.cfi_offset 5, -8
 30060              		.cfi_offset 14, -4
 30061 0002 83B0     		sub	sp, sp, #12
 30062              	.LCFI834:
 30063              		.cfi_def_cfa_offset 24
14121:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30064              		.loc 1 14121 5 is_stmt 1 view .LVU8488
 30065              	.LVL3754:
14122:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30066              		.loc 1 14122 5 view .LVU8489
ARM GAS  /tmp/cc9kYR4Z.s 			page 841


 30067              		.loc 1 14122 8 is_stmt 0 view .LVU8490
 30068 0004 0023     		movs	r3, #0
 30069 0006 8DF80730 		strb	r3, [sp, #7]
14123:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30070              		.loc 1 14123 5 is_stmt 1 view .LVU8491
 30071              	.LVL3755:
14124:Core/Src/bno055.c **** 
14125:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14126:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30072              		.loc 1 14126 5 view .LVU8492
 30073              		.loc 1 14126 18 is_stmt 0 view .LVU8493
 30074 000a 1F4B     		ldr	r3, .L2102
 30075 000c 1B68     		ldr	r3, [r3]
 30076              		.loc 1 14126 8 view .LVU8494
 30077 000e 002B     		cmp	r3, #0
 30078 0010 33D0     		beq	.L2098
 30079 0012 0446     		mov	r4, r0
14127:Core/Src/bno055.c ****     {
14128:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14129:Core/Src/bno055.c ****     }
14130:Core/Src/bno055.c ****     else
14131:Core/Src/bno055.c ****     {
14132:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14133:Core/Src/bno055.c ****          * available in the page one*/
14134:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30080              		.loc 1 14134 9 is_stmt 1 view .LVU8495
 30081              		.loc 1 14134 21 is_stmt 0 view .LVU8496
 30082 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30083              		.loc 1 14134 12 view .LVU8497
 30084 0016 012B     		cmp	r3, #1
 30085 0018 29D1     		bne	.L2101
 30086              	.LVL3756:
 30087              	.L2096:
14135:Core/Src/bno055.c ****         {
14136:Core/Src/bno055.c ****             /* Write page as one */
14137:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14138:Core/Src/bno055.c ****         }
14139:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30088              		.loc 1 14139 53 discriminator 1 view .LVU8498
 30089 001a 1B4B     		ldr	r3, .L2102
 30090 001c 1B68     		ldr	r3, [r3]
 30091 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30092              		.loc 1 14139 41 discriminator 1 view .LVU8499
 30093 0020 012B     		cmp	r3, #1
 30094 0022 2DD1     		bne	.L2099
 30095              	.L2097:
14140:Core/Src/bno055.c ****         {
14141:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30096              		.loc 1 14141 13 is_stmt 1 view .LVU8500
 30097              		.loc 1 14141 32 is_stmt 0 view .LVU8501
 30098 0024 184B     		ldr	r3, .L2102
 30099 0026 1868     		ldr	r0, [r3]
 30100 0028 0569     		ldr	r5, [r0, #16]
 30101              		.loc 1 14141 24 view .LVU8502
 30102 002a 0123     		movs	r3, #1
 30103 002c 0DF10702 		add	r2, sp, #7
 30104 0030 0F21     		movs	r1, #15
ARM GAS  /tmp/cc9kYR4Z.s 			page 842


 30105 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30106 0034 A847     		blx	r5
 30107              	.LVL3757:
14142:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14143:Core/Src/bno055.c ****                                                       &data_u8r,
14144:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14145:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30108              		.loc 1 14145 13 is_stmt 1 view .LVU8503
 30109              		.loc 1 14145 16 is_stmt 0 view .LVU8504
 30110 0036 0546     		mov	r5, r0
 30111 0038 B0B9     		cbnz	r0, .L2095
14146:Core/Src/bno055.c ****             {
14147:Core/Src/bno055.c ****                 /* Write the value of accel
14148:Core/Src/bno055.c ****                  * highg interrupt mask*/
14149:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK, accel_high_
 30112              		.loc 1 14149 17 is_stmt 1 view .LVU8505
 30113              		.loc 1 14149 28 is_stmt 0 view .LVU8506
 30114 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30115 003e 23F02003 		bic	r3, r3, #32
 30116 0042 5BB2     		sxtb	r3, r3
 30117 0044 6401     		lsls	r4, r4, #5
 30118 0046 04F02004 		and	r4, r4, #32
 30119 004a 2343     		orrs	r3, r3, r4
 30120              		.loc 1 14149 26 view .LVU8507
 30121 004c 8DF80730 		strb	r3, [sp, #7]
14150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30122              		.loc 1 14150 17 is_stmt 1 view .LVU8508
 30123              		.loc 1 14150 37 is_stmt 0 view .LVU8509
 30124 0050 0D4B     		ldr	r3, .L2102
 30125 0052 1868     		ldr	r0, [r3]
 30126              	.LVL3758:
 30127              		.loc 1 14150 37 view .LVU8510
 30128 0054 C468     		ldr	r4, [r0, #12]
 30129              		.loc 1 14150 29 view .LVU8511
 30130 0056 0123     		movs	r3, #1
 30131 0058 0DF10702 		add	r2, sp, #7
 30132 005c 0F21     		movs	r1, #15
 30133 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30134 0060 A047     		blx	r4
 30135              	.LVL3759:
 30136              		.loc 1 14150 26 view .LVU8512
 30137 0062 55FA80F0 		uxtab	r0, r5, r0
 30138 0066 45B2     		sxtb	r5, r0
 30139              	.LVL3760:
 30140              	.L2095:
14151:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14152:Core/Src/bno055.c ****                                                             &data_u8r,
14153:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14154:Core/Src/bno055.c ****             }
14155:Core/Src/bno055.c ****         }
14156:Core/Src/bno055.c ****         else
14157:Core/Src/bno055.c ****         {
14158:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14159:Core/Src/bno055.c ****         }
14160:Core/Src/bno055.c ****     }
14161:Core/Src/bno055.c **** 
14162:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 843


14163:Core/Src/bno055.c **** }
 30141              		.loc 1 14163 1 view .LVU8513
 30142 0068 2846     		mov	r0, r5
 30143 006a 03B0     		add	sp, sp, #12
 30144              	.LCFI835:
 30145              		.cfi_remember_state
 30146              		.cfi_def_cfa_offset 12
 30147              		@ sp needed
 30148 006c 30BD     		pop	{r4, r5, pc}
 30149              	.LVL3761:
 30150              	.L2101:
 30151              	.LCFI836:
 30152              		.cfi_restore_state
14137:Core/Src/bno055.c ****         }
 30153              		.loc 1 14137 13 is_stmt 1 view .LVU8514
14137:Core/Src/bno055.c ****         }
 30154              		.loc 1 14137 23 is_stmt 0 view .LVU8515
 30155 006e 0120     		movs	r0, #1
 30156              	.LVL3762:
14137:Core/Src/bno055.c ****         }
 30157              		.loc 1 14137 23 view .LVU8516
 30158 0070 FFF7FEFF 		bl	bno055_write_page_id
 30159              	.LVL3763:
14139:Core/Src/bno055.c ****         {
 30160              		.loc 1 14139 9 is_stmt 1 view .LVU8517
14139:Core/Src/bno055.c ****         {
 30161              		.loc 1 14139 12 is_stmt 0 view .LVU8518
 30162 0074 0028     		cmp	r0, #0
 30163 0076 D5D0     		beq	.L2097
 30164 0078 CFE7     		b	.L2096
 30165              	.LVL3764:
 30166              	.L2098:
14128:Core/Src/bno055.c ****     }
 30167              		.loc 1 14128 16 view .LVU8519
 30168 007a 6FF07E05 		mvn	r5, #126
 30169 007e F3E7     		b	.L2095
 30170              	.LVL3765:
 30171              	.L2099:
14158:Core/Src/bno055.c ****         }
 30172              		.loc 1 14158 22 view .LVU8520
 30173 0080 4FF0FF35 		mov	r5, #-1
 30174 0084 F0E7     		b	.L2095
 30175              	.L2103:
 30176 0086 00BF     		.align	2
 30177              	.L2102:
 30178 0088 00000000 		.word	.LANCHOR0
 30179              		.cfi_endproc
 30180              	.LFE210:
 30182              		.section	.text.bno055_get_intr_mask_accel_any_motion,"ax",%progbits
 30183              		.align	1
 30184              		.global	bno055_get_intr_mask_accel_any_motion
 30185              		.syntax unified
 30186              		.thumb
 30187              		.thumb_func
 30189              	bno055_get_intr_mask_accel_any_motion:
 30190              	.LVL3766:
 30191              	.LFB211:
ARM GAS  /tmp/cc9kYR4Z.s 			page 844


14164:Core/Src/bno055.c **** 
14165:Core/Src/bno055.c **** /*!
14166:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt mask
14167:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14168:Core/Src/bno055.c ****  *
14169:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14170:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14171:Core/Src/bno055.c ****  *     --------------------  |------------
14172:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14173:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14174:Core/Src/bno055.c ****  *
14175:Core/Src/bno055.c ****  *  @return results of bus communication function
14176:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14177:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14178:Core/Src/bno055.c ****  *
14179:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14180:Core/Src/bno055.c ****  *  configure the below settings by using
14181:Core/Src/bno055.c ****  *  the following APIs
14182:Core/Src/bno055.c ****  *
14183:Core/Src/bno055.c ****  *  Axis :
14184:Core/Src/bno055.c ****  *
14185:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14186:Core/Src/bno055.c ****  *
14187:Core/Src/bno055.c ****  *  Threshold :
14188:Core/Src/bno055.c ****  *
14189:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14190:Core/Src/bno055.c ****  *
14191:Core/Src/bno055.c ****  *  Duration :
14192:Core/Src/bno055.c ****  *
14193:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14194:Core/Src/bno055.c ****  *
14195:Core/Src/bno055.c ****  */
14196:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_any_motion(u8 *accel_any_motion_u8)
14197:Core/Src/bno055.c **** {
 30192              		.loc 1 14197 1 is_stmt 1 view -0
 30193              		.cfi_startproc
 30194              		@ args = 0, pretend = 0, frame = 8
 30195              		@ frame_needed = 0, uses_anonymous_args = 0
 30196              		.loc 1 14197 1 is_stmt 0 view .LVU8522
 30197 0000 30B5     		push	{r4, r5, lr}
 30198              	.LCFI837:
 30199              		.cfi_def_cfa_offset 12
 30200              		.cfi_offset 4, -12
 30201              		.cfi_offset 5, -8
 30202              		.cfi_offset 14, -4
 30203 0002 83B0     		sub	sp, sp, #12
 30204              	.LCFI838:
 30205              		.cfi_def_cfa_offset 24
14198:Core/Src/bno055.c ****     /* Variable used to return value of
14199:Core/Src/bno055.c ****      * communication routine*/
14200:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30206              		.loc 1 14200 5 is_stmt 1 view .LVU8523
 30207              	.LVL3767:
14201:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30208              		.loc 1 14201 5 view .LVU8524
 30209              		.loc 1 14201 8 is_stmt 0 view .LVU8525
 30210 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 845


 30211 0006 8DF80730 		strb	r3, [sp, #7]
14202:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30212              		.loc 1 14202 5 is_stmt 1 view .LVU8526
 30213              	.LVL3768:
14203:Core/Src/bno055.c **** 
14204:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14205:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30214              		.loc 1 14205 5 view .LVU8527
 30215              		.loc 1 14205 18 is_stmt 0 view .LVU8528
 30216 000a 144B     		ldr	r3, .L2112
 30217 000c 1B68     		ldr	r3, [r3]
 30218              		.loc 1 14205 8 view .LVU8529
 30219 000e F3B1     		cbz	r3, .L2108
 30220 0010 0446     		mov	r4, r0
14206:Core/Src/bno055.c ****     {
14207:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14208:Core/Src/bno055.c ****     }
14209:Core/Src/bno055.c ****     else
14210:Core/Src/bno055.c ****     {
14211:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14212:Core/Src/bno055.c ****          * available in the page one*/
14213:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30221              		.loc 1 14213 9 is_stmt 1 view .LVU8530
 30222              		.loc 1 14213 21 is_stmt 0 view .LVU8531
 30223 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30224              		.loc 1 14213 12 view .LVU8532
 30225 0014 012B     		cmp	r3, #1
 30226 0016 14D1     		bne	.L2111
 30227              	.LVL3769:
 30228              	.L2106:
14214:Core/Src/bno055.c ****         {
14215:Core/Src/bno055.c ****             /* Write page as one */
14216:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14217:Core/Src/bno055.c ****         }
14218:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30229              		.loc 1 14218 53 discriminator 1 view .LVU8533
 30230 0018 104B     		ldr	r3, .L2112
 30231 001a 1B68     		ldr	r3, [r3]
 30232 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30233              		.loc 1 14218 41 discriminator 1 view .LVU8534
 30234 001e 012B     		cmp	r3, #1
 30235 0020 18D1     		bne	.L2109
 30236              	.L2107:
14219:Core/Src/bno055.c ****         {
14220:Core/Src/bno055.c ****             /* The value of accel anymotion interrupt mask*/
14221:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30237              		.loc 1 14221 13 is_stmt 1 view .LVU8535
 30238              		.loc 1 14221 32 is_stmt 0 view .LVU8536
 30239 0022 0E4B     		ldr	r3, .L2112
 30240 0024 1868     		ldr	r0, [r3]
 30241 0026 0569     		ldr	r5, [r0, #16]
 30242              		.loc 1 14221 24 view .LVU8537
 30243 0028 0123     		movs	r3, #1
 30244 002a 0DF10702 		add	r2, sp, #7
 30245 002e 0F21     		movs	r1, #15
 30246 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30247 0032 A847     		blx	r5
ARM GAS  /tmp/cc9kYR4Z.s 			page 846


 30248              	.LVL3770:
14222:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14223:Core/Src/bno055.c ****                                                       &data_u8r,
14224:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14225:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK)
 30249              		.loc 1 14225 13 is_stmt 1 view .LVU8538
 30250              		.loc 1 14225 36 is_stmt 0 view .LVU8539
 30251 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30252 0038 C3F38013 		ubfx	r3, r3, #6, #1
 30253              		.loc 1 14225 34 view .LVU8540
 30254 003c 2370     		strb	r3, [r4]
 30255              	.LVL3771:
 30256              	.L2105:
14226:Core/Src/bno055.c ****         }
14227:Core/Src/bno055.c ****         else
14228:Core/Src/bno055.c ****         {
14229:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14230:Core/Src/bno055.c ****         }
14231:Core/Src/bno055.c ****     }
14232:Core/Src/bno055.c **** 
14233:Core/Src/bno055.c ****     return com_rslt;
14234:Core/Src/bno055.c **** }
 30257              		.loc 1 14234 1 view .LVU8541
 30258 003e 03B0     		add	sp, sp, #12
 30259              	.LCFI839:
 30260              		.cfi_remember_state
 30261              		.cfi_def_cfa_offset 12
 30262              		@ sp needed
 30263 0040 30BD     		pop	{r4, r5, pc}
 30264              	.LVL3772:
 30265              	.L2111:
 30266              	.LCFI840:
 30267              		.cfi_restore_state
14216:Core/Src/bno055.c ****         }
 30268              		.loc 1 14216 13 is_stmt 1 view .LVU8542
14216:Core/Src/bno055.c ****         }
 30269              		.loc 1 14216 23 is_stmt 0 view .LVU8543
 30270 0042 0120     		movs	r0, #1
 30271              	.LVL3773:
14216:Core/Src/bno055.c ****         }
 30272              		.loc 1 14216 23 view .LVU8544
 30273 0044 FFF7FEFF 		bl	bno055_write_page_id
 30274              	.LVL3774:
14218:Core/Src/bno055.c ****         {
 30275              		.loc 1 14218 9 is_stmt 1 view .LVU8545
14218:Core/Src/bno055.c ****         {
 30276              		.loc 1 14218 12 is_stmt 0 view .LVU8546
 30277 0048 0028     		cmp	r0, #0
 30278 004a EAD0     		beq	.L2107
 30279 004c E4E7     		b	.L2106
 30280              	.LVL3775:
 30281              	.L2108:
14207:Core/Src/bno055.c ****     }
 30282              		.loc 1 14207 16 view .LVU8547
 30283 004e 6FF07E00 		mvn	r0, #126
 30284              	.LVL3776:
14207:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 847


 30285              		.loc 1 14207 16 view .LVU8548
 30286 0052 F4E7     		b	.L2105
 30287              	.LVL3777:
 30288              	.L2109:
14229:Core/Src/bno055.c ****         }
 30289              		.loc 1 14229 22 view .LVU8549
 30290 0054 4FF0FF30 		mov	r0, #-1
 30291 0058 F1E7     		b	.L2105
 30292              	.L2113:
 30293 005a 00BF     		.align	2
 30294              	.L2112:
 30295 005c 00000000 		.word	.LANCHOR0
 30296              		.cfi_endproc
 30297              	.LFE211:
 30299              		.section	.text.bno055_set_intr_mask_accel_any_motion,"ax",%progbits
 30300              		.align	1
 30301              		.global	bno055_set_intr_mask_accel_any_motion
 30302              		.syntax unified
 30303              		.thumb
 30304              		.thumb_func
 30306              	bno055_set_intr_mask_accel_any_motion:
 30307              	.LVL3778:
 30308              	.LFB212:
14235:Core/Src/bno055.c **** 
14236:Core/Src/bno055.c **** /*!
14237:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt mask
14238:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14239:Core/Src/bno055.c ****  *
14240:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14241:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14242:Core/Src/bno055.c ****  *     --------------------  |------------
14243:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14244:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14245:Core/Src/bno055.c ****  *
14246:Core/Src/bno055.c ****  *  @return results of bus communication function
14247:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14248:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14249:Core/Src/bno055.c ****  *
14250:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14251:Core/Src/bno055.c ****  *  configure the following settings
14252:Core/Src/bno055.c ****  *
14253:Core/Src/bno055.c ****  *  Axis:
14254:Core/Src/bno055.c ****  *
14255:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14256:Core/Src/bno055.c ****  *
14257:Core/Src/bno055.c ****  *  Duration:
14258:Core/Src/bno055.c ****  *
14259:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14260:Core/Src/bno055.c ****  *
14261:Core/Src/bno055.c ****  * Threshold:
14262:Core/Src/bno055.c ****  *
14263:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14264:Core/Src/bno055.c ****  *
14265:Core/Src/bno055.c ****  */
14266:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_any_motion(u8 accel_any_motion_u8)
14267:Core/Src/bno055.c **** {
 30309              		.loc 1 14267 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9kYR4Z.s 			page 848


 30310              		.cfi_startproc
 30311              		@ args = 0, pretend = 0, frame = 8
 30312              		@ frame_needed = 0, uses_anonymous_args = 0
 30313              		.loc 1 14267 1 is_stmt 0 view .LVU8551
 30314 0000 30B5     		push	{r4, r5, lr}
 30315              	.LCFI841:
 30316              		.cfi_def_cfa_offset 12
 30317              		.cfi_offset 4, -12
 30318              		.cfi_offset 5, -8
 30319              		.cfi_offset 14, -4
 30320 0002 83B0     		sub	sp, sp, #12
 30321              	.LCFI842:
 30322              		.cfi_def_cfa_offset 24
14268:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30323              		.loc 1 14268 5 is_stmt 1 view .LVU8552
 30324              	.LVL3779:
14269:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30325              		.loc 1 14269 5 view .LVU8553
 30326              		.loc 1 14269 8 is_stmt 0 view .LVU8554
 30327 0004 0023     		movs	r3, #0
 30328 0006 8DF80730 		strb	r3, [sp, #7]
14270:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30329              		.loc 1 14270 5 is_stmt 1 view .LVU8555
 30330              	.LVL3780:
14271:Core/Src/bno055.c **** 
14272:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14273:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30331              		.loc 1 14273 5 view .LVU8556
 30332              		.loc 1 14273 18 is_stmt 0 view .LVU8557
 30333 000a 1F4B     		ldr	r3, .L2122
 30334 000c 1B68     		ldr	r3, [r3]
 30335              		.loc 1 14273 8 view .LVU8558
 30336 000e 002B     		cmp	r3, #0
 30337 0010 33D0     		beq	.L2118
 30338 0012 0446     		mov	r4, r0
14274:Core/Src/bno055.c ****     {
14275:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14276:Core/Src/bno055.c ****     }
14277:Core/Src/bno055.c ****     else
14278:Core/Src/bno055.c ****     {
14279:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14280:Core/Src/bno055.c ****          * available in the page one*/
14281:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30339              		.loc 1 14281 9 is_stmt 1 view .LVU8559
 30340              		.loc 1 14281 21 is_stmt 0 view .LVU8560
 30341 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30342              		.loc 1 14281 12 view .LVU8561
 30343 0016 012B     		cmp	r3, #1
 30344 0018 29D1     		bne	.L2121
 30345              	.LVL3781:
 30346              	.L2116:
14282:Core/Src/bno055.c ****         {
14283:Core/Src/bno055.c ****             /* Write page as one */
14284:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14285:Core/Src/bno055.c ****         }
14286:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30347              		.loc 1 14286 53 discriminator 1 view .LVU8562
ARM GAS  /tmp/cc9kYR4Z.s 			page 849


 30348 001a 1B4B     		ldr	r3, .L2122
 30349 001c 1B68     		ldr	r3, [r3]
 30350 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30351              		.loc 1 14286 41 discriminator 1 view .LVU8563
 30352 0020 012B     		cmp	r3, #1
 30353 0022 2DD1     		bne	.L2119
 30354              	.L2117:
14287:Core/Src/bno055.c ****         {
14288:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt mask*/
14289:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30355              		.loc 1 14289 13 is_stmt 1 view .LVU8564
 30356              		.loc 1 14289 32 is_stmt 0 view .LVU8565
 30357 0024 184B     		ldr	r3, .L2122
 30358 0026 1868     		ldr	r0, [r3]
 30359 0028 0569     		ldr	r5, [r0, #16]
 30360              		.loc 1 14289 24 view .LVU8566
 30361 002a 0123     		movs	r3, #1
 30362 002c 0DF10702 		add	r2, sp, #7
 30363 0030 0F21     		movs	r1, #15
 30364 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30365 0034 A847     		blx	r5
 30366              	.LVL3782:
14290:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14291:Core/Src/bno055.c ****                                                       &data_u8r,
14292:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14293:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30367              		.loc 1 14293 13 is_stmt 1 view .LVU8567
 30368              		.loc 1 14293 16 is_stmt 0 view .LVU8568
 30369 0036 0546     		mov	r5, r0
 30370 0038 B0B9     		cbnz	r0, .L2115
14294:Core/Src/bno055.c ****             {
14295:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK, accel_a
 30371              		.loc 1 14295 17 is_stmt 1 view .LVU8569
 30372              		.loc 1 14295 28 is_stmt 0 view .LVU8570
 30373 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30374 003e 23F04003 		bic	r3, r3, #64
 30375 0042 5BB2     		sxtb	r3, r3
 30376 0044 A401     		lsls	r4, r4, #6
 30377 0046 04F04004 		and	r4, r4, #64
 30378 004a 2343     		orrs	r3, r3, r4
 30379              		.loc 1 14295 26 view .LVU8571
 30380 004c 8DF80730 		strb	r3, [sp, #7]
14296:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30381              		.loc 1 14296 17 is_stmt 1 view .LVU8572
 30382              		.loc 1 14296 37 is_stmt 0 view .LVU8573
 30383 0050 0D4B     		ldr	r3, .L2122
 30384 0052 1868     		ldr	r0, [r3]
 30385              	.LVL3783:
 30386              		.loc 1 14296 37 view .LVU8574
 30387 0054 C468     		ldr	r4, [r0, #12]
 30388              		.loc 1 14296 29 view .LVU8575
 30389 0056 0123     		movs	r3, #1
 30390 0058 0DF10702 		add	r2, sp, #7
 30391 005c 0F21     		movs	r1, #15
 30392 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30393 0060 A047     		blx	r4
 30394              	.LVL3784:
ARM GAS  /tmp/cc9kYR4Z.s 			page 850


 30395              		.loc 1 14296 26 view .LVU8576
 30396 0062 55FA80F0 		uxtab	r0, r5, r0
 30397 0066 45B2     		sxtb	r5, r0
 30398              	.LVL3785:
 30399              	.L2115:
14297:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14298:Core/Src/bno055.c ****                                                             &data_u8r,
14299:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14300:Core/Src/bno055.c ****             }
14301:Core/Src/bno055.c ****         }
14302:Core/Src/bno055.c ****         else
14303:Core/Src/bno055.c ****         {
14304:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14305:Core/Src/bno055.c ****         }
14306:Core/Src/bno055.c ****     }
14307:Core/Src/bno055.c **** 
14308:Core/Src/bno055.c ****     return com_rslt;
14309:Core/Src/bno055.c **** }
 30400              		.loc 1 14309 1 view .LVU8577
 30401 0068 2846     		mov	r0, r5
 30402 006a 03B0     		add	sp, sp, #12
 30403              	.LCFI843:
 30404              		.cfi_remember_state
 30405              		.cfi_def_cfa_offset 12
 30406              		@ sp needed
 30407 006c 30BD     		pop	{r4, r5, pc}
 30408              	.LVL3786:
 30409              	.L2121:
 30410              	.LCFI844:
 30411              		.cfi_restore_state
14284:Core/Src/bno055.c ****         }
 30412              		.loc 1 14284 13 is_stmt 1 view .LVU8578
14284:Core/Src/bno055.c ****         }
 30413              		.loc 1 14284 23 is_stmt 0 view .LVU8579
 30414 006e 0120     		movs	r0, #1
 30415              	.LVL3787:
14284:Core/Src/bno055.c ****         }
 30416              		.loc 1 14284 23 view .LVU8580
 30417 0070 FFF7FEFF 		bl	bno055_write_page_id
 30418              	.LVL3788:
14286:Core/Src/bno055.c ****         {
 30419              		.loc 1 14286 9 is_stmt 1 view .LVU8581
14286:Core/Src/bno055.c ****         {
 30420              		.loc 1 14286 12 is_stmt 0 view .LVU8582
 30421 0074 0028     		cmp	r0, #0
 30422 0076 D5D0     		beq	.L2117
 30423 0078 CFE7     		b	.L2116
 30424              	.LVL3789:
 30425              	.L2118:
14275:Core/Src/bno055.c ****     }
 30426              		.loc 1 14275 16 view .LVU8583
 30427 007a 6FF07E05 		mvn	r5, #126
 30428 007e F3E7     		b	.L2115
 30429              	.LVL3790:
 30430              	.L2119:
14304:Core/Src/bno055.c ****         }
 30431              		.loc 1 14304 22 view .LVU8584
ARM GAS  /tmp/cc9kYR4Z.s 			page 851


 30432 0080 4FF0FF35 		mov	r5, #-1
 30433 0084 F0E7     		b	.L2115
 30434              	.L2123:
 30435 0086 00BF     		.align	2
 30436              	.L2122:
 30437 0088 00000000 		.word	.LANCHOR0
 30438              		.cfi_endproc
 30439              	.LFE212:
 30441              		.section	.text.bno055_get_intr_mask_accel_no_motion,"ax",%progbits
 30442              		.align	1
 30443              		.global	bno055_get_intr_mask_accel_no_motion
 30444              		.syntax unified
 30445              		.thumb
 30446              		.thumb_func
 30448              	bno055_get_intr_mask_accel_no_motion:
 30449              	.LVL3791:
 30450              	.LFB213:
14310:Core/Src/bno055.c **** 
14311:Core/Src/bno055.c **** /*!
14312:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt mask
14313:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14314:Core/Src/bno055.c ****  *
14315:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14316:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14317:Core/Src/bno055.c ****  *     --------------------  |------------
14318:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14319:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14320:Core/Src/bno055.c ****  *
14321:Core/Src/bno055.c ****  *  @return results of bus communication function
14322:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14323:Core/Src/bno055.c ****  *
14324:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14325:Core/Src/bno055.c ****  *  configure the following settings
14326:Core/Src/bno055.c ****  *
14327:Core/Src/bno055.c ****  *  Axis:
14328:Core/Src/bno055.c ****  *
14329:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14330:Core/Src/bno055.c ****  *
14331:Core/Src/bno055.c ****  *  Duration:
14332:Core/Src/bno055.c ****  *
14333:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14334:Core/Src/bno055.c ****  *
14335:Core/Src/bno055.c ****  * Threshold:
14336:Core/Src/bno055.c ****  *
14337:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres())
14338:Core/Src/bno055.c ****  *
14339:Core/Src/bno055.c ****  */
14340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_no_motion(u8 *accel_nomotion_u8)
14341:Core/Src/bno055.c **** {
 30451              		.loc 1 14341 1 is_stmt 1 view -0
 30452              		.cfi_startproc
 30453              		@ args = 0, pretend = 0, frame = 8
 30454              		@ frame_needed = 0, uses_anonymous_args = 0
 30455              		.loc 1 14341 1 is_stmt 0 view .LVU8586
 30456 0000 30B5     		push	{r4, r5, lr}
 30457              	.LCFI845:
 30458              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 852


 30459              		.cfi_offset 4, -12
 30460              		.cfi_offset 5, -8
 30461              		.cfi_offset 14, -4
 30462 0002 83B0     		sub	sp, sp, #12
 30463              	.LCFI846:
 30464              		.cfi_def_cfa_offset 24
14342:Core/Src/bno055.c ****     /* Variable used to return value of
14343:Core/Src/bno055.c ****      * communication routine*/
14344:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30465              		.loc 1 14344 5 is_stmt 1 view .LVU8587
 30466              	.LVL3792:
14345:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30467              		.loc 1 14345 5 view .LVU8588
 30468              		.loc 1 14345 8 is_stmt 0 view .LVU8589
 30469 0004 0023     		movs	r3, #0
 30470 0006 8DF80730 		strb	r3, [sp, #7]
14346:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30471              		.loc 1 14346 5 is_stmt 1 view .LVU8590
 30472              	.LVL3793:
14347:Core/Src/bno055.c **** 
14348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30473              		.loc 1 14349 5 view .LVU8591
 30474              		.loc 1 14349 18 is_stmt 0 view .LVU8592
 30475 000a 134B     		ldr	r3, .L2132
 30476 000c 1B68     		ldr	r3, [r3]
 30477              		.loc 1 14349 8 view .LVU8593
 30478 000e EBB1     		cbz	r3, .L2128
 30479 0010 0446     		mov	r4, r0
14350:Core/Src/bno055.c ****     {
14351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14352:Core/Src/bno055.c ****     }
14353:Core/Src/bno055.c ****     else
14354:Core/Src/bno055.c ****     {
14355:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt mask is
14356:Core/Src/bno055.c ****          * available in the page one*/
14357:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30480              		.loc 1 14357 9 is_stmt 1 view .LVU8594
 30481              		.loc 1 14357 21 is_stmt 0 view .LVU8595
 30482 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30483              		.loc 1 14357 12 view .LVU8596
 30484 0014 012B     		cmp	r3, #1
 30485 0016 13D1     		bne	.L2131
 30486              	.LVL3794:
 30487              	.L2126:
14358:Core/Src/bno055.c ****         {
14359:Core/Src/bno055.c ****             /* Write page as one */
14360:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14361:Core/Src/bno055.c ****         }
14362:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30488              		.loc 1 14362 53 discriminator 1 view .LVU8597
 30489 0018 0F4B     		ldr	r3, .L2132
 30490 001a 1B68     		ldr	r3, [r3]
 30491 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30492              		.loc 1 14362 41 discriminator 1 view .LVU8598
 30493 001e 012B     		cmp	r3, #1
 30494 0020 17D1     		bne	.L2129
ARM GAS  /tmp/cc9kYR4Z.s 			page 853


 30495              	.L2127:
14363:Core/Src/bno055.c ****         {
14364:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt mask*/
14365:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30496              		.loc 1 14365 13 is_stmt 1 view .LVU8599
 30497              		.loc 1 14365 32 is_stmt 0 view .LVU8600
 30498 0022 0D4B     		ldr	r3, .L2132
 30499 0024 1868     		ldr	r0, [r3]
 30500 0026 0569     		ldr	r5, [r0, #16]
 30501              		.loc 1 14365 24 view .LVU8601
 30502 0028 0123     		movs	r3, #1
 30503 002a 0DF10702 		add	r2, sp, #7
 30504 002e 0F21     		movs	r1, #15
 30505 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30506 0032 A847     		blx	r5
 30507              	.LVL3795:
14366:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14367:Core/Src/bno055.c ****                                                       &data_u8r,
14368:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14369:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK);
 30508              		.loc 1 14369 13 is_stmt 1 view .LVU8602
 30509              		.loc 1 14369 34 is_stmt 0 view .LVU8603
 30510 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30511 0038 DB09     		lsrs	r3, r3, #7
 30512              		.loc 1 14369 32 view .LVU8604
 30513 003a 2370     		strb	r3, [r4]
 30514              	.LVL3796:
 30515              	.L2125:
14370:Core/Src/bno055.c ****         }
14371:Core/Src/bno055.c ****         else
14372:Core/Src/bno055.c ****         {
14373:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14374:Core/Src/bno055.c ****         }
14375:Core/Src/bno055.c ****     }
14376:Core/Src/bno055.c **** 
14377:Core/Src/bno055.c ****     return com_rslt;
14378:Core/Src/bno055.c **** }
 30516              		.loc 1 14378 1 view .LVU8605
 30517 003c 03B0     		add	sp, sp, #12
 30518              	.LCFI847:
 30519              		.cfi_remember_state
 30520              		.cfi_def_cfa_offset 12
 30521              		@ sp needed
 30522 003e 30BD     		pop	{r4, r5, pc}
 30523              	.LVL3797:
 30524              	.L2131:
 30525              	.LCFI848:
 30526              		.cfi_restore_state
14360:Core/Src/bno055.c ****         }
 30527              		.loc 1 14360 13 is_stmt 1 view .LVU8606
14360:Core/Src/bno055.c ****         }
 30528              		.loc 1 14360 23 is_stmt 0 view .LVU8607
 30529 0040 0120     		movs	r0, #1
 30530              	.LVL3798:
14360:Core/Src/bno055.c ****         }
 30531              		.loc 1 14360 23 view .LVU8608
 30532 0042 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/cc9kYR4Z.s 			page 854


 30533              	.LVL3799:
14362:Core/Src/bno055.c ****         {
 30534              		.loc 1 14362 9 is_stmt 1 view .LVU8609
14362:Core/Src/bno055.c ****         {
 30535              		.loc 1 14362 12 is_stmt 0 view .LVU8610
 30536 0046 0028     		cmp	r0, #0
 30537 0048 EBD0     		beq	.L2127
 30538 004a E5E7     		b	.L2126
 30539              	.LVL3800:
 30540              	.L2128:
14351:Core/Src/bno055.c ****     }
 30541              		.loc 1 14351 16 view .LVU8611
 30542 004c 6FF07E00 		mvn	r0, #126
 30543              	.LVL3801:
14351:Core/Src/bno055.c ****     }
 30544              		.loc 1 14351 16 view .LVU8612
 30545 0050 F4E7     		b	.L2125
 30546              	.LVL3802:
 30547              	.L2129:
14373:Core/Src/bno055.c ****         }
 30548              		.loc 1 14373 22 view .LVU8613
 30549 0052 4FF0FF30 		mov	r0, #-1
 30550 0056 F1E7     		b	.L2125
 30551              	.L2133:
 30552              		.align	2
 30553              	.L2132:
 30554 0058 00000000 		.word	.LANCHOR0
 30555              		.cfi_endproc
 30556              	.LFE213:
 30558              		.section	.text.bno055_set_intr_mask_accel_no_motion,"ax",%progbits
 30559              		.align	1
 30560              		.global	bno055_set_intr_mask_accel_no_motion
 30561              		.syntax unified
 30562              		.thumb
 30563              		.thumb_func
 30565              	bno055_set_intr_mask_accel_no_motion:
 30566              	.LVL3803:
 30567              	.LFB214:
14379:Core/Src/bno055.c **** 
14380:Core/Src/bno055.c **** /*!
14381:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt mask
14382:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14383:Core/Src/bno055.c ****  *
14384:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14385:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14386:Core/Src/bno055.c ****  *     --------------------  |------------
14387:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14388:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14389:Core/Src/bno055.c ****  *
14390:Core/Src/bno055.c ****  *  @return results of bus communication function
14391:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14392:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14393:Core/Src/bno055.c ****  *
14394:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
14395:Core/Src/bno055.c ****  *  configure the following settings
14396:Core/Src/bno055.c ****  *
14397:Core/Src/bno055.c ****  *  Axis:
ARM GAS  /tmp/cc9kYR4Z.s 			page 855


14398:Core/Src/bno055.c ****  *
14399:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14400:Core/Src/bno055.c ****  *
14401:Core/Src/bno055.c ****  *  Threshold :
14402:Core/Src/bno055.c ****  *
14403:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
14404:Core/Src/bno055.c ****  *
14405:Core/Src/bno055.c ****  *  Duration :
14406:Core/Src/bno055.c ****  *
14407:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
14408:Core/Src/bno055.c ****  *
14409:Core/Src/bno055.c ****  *  Slow/no motion enable:
14410:Core/Src/bno055.c ****  *
14411:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
14412:Core/Src/bno055.c ****  *
14413:Core/Src/bno055.c ****  */
14414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_no_motion(u8 accel_nomotion_u8)
14415:Core/Src/bno055.c **** {
 30568              		.loc 1 14415 1 is_stmt 1 view -0
 30569              		.cfi_startproc
 30570              		@ args = 0, pretend = 0, frame = 8
 30571              		@ frame_needed = 0, uses_anonymous_args = 0
 30572              		.loc 1 14415 1 is_stmt 0 view .LVU8615
 30573 0000 30B5     		push	{r4, r5, lr}
 30574              	.LCFI849:
 30575              		.cfi_def_cfa_offset 12
 30576              		.cfi_offset 4, -12
 30577              		.cfi_offset 5, -8
 30578              		.cfi_offset 14, -4
 30579 0002 83B0     		sub	sp, sp, #12
 30580              	.LCFI850:
 30581              		.cfi_def_cfa_offset 24
14416:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30582              		.loc 1 14416 5 is_stmt 1 view .LVU8616
 30583              	.LVL3804:
14417:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30584              		.loc 1 14417 5 view .LVU8617
 30585              		.loc 1 14417 8 is_stmt 0 view .LVU8618
 30586 0004 0023     		movs	r3, #0
 30587 0006 8DF80730 		strb	r3, [sp, #7]
14418:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30588              		.loc 1 14418 5 is_stmt 1 view .LVU8619
 30589              	.LVL3805:
14419:Core/Src/bno055.c **** 
14420:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14421:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30590              		.loc 1 14421 5 view .LVU8620
 30591              		.loc 1 14421 18 is_stmt 0 view .LVU8621
 30592 000a 1D4B     		ldr	r3, .L2142
 30593 000c 1B68     		ldr	r3, [r3]
 30594              		.loc 1 14421 8 view .LVU8622
 30595 000e 002B     		cmp	r3, #0
 30596 0010 30D0     		beq	.L2138
 30597 0012 0446     		mov	r4, r0
14422:Core/Src/bno055.c ****     {
14423:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14424:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 856


14425:Core/Src/bno055.c ****     else
14426:Core/Src/bno055.c ****     {
14427:Core/Src/bno055.c ****         /*condition check for page, accel
14428:Core/Src/bno055.c ****          * nomotion interrupt mask is
14429:Core/Src/bno055.c ****          * available in the page one*/
14430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30598              		.loc 1 14430 9 is_stmt 1 view .LVU8623
 30599              		.loc 1 14430 21 is_stmt 0 view .LVU8624
 30600 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30601              		.loc 1 14430 12 view .LVU8625
 30602 0016 012B     		cmp	r3, #1
 30603 0018 26D1     		bne	.L2141
 30604              	.LVL3806:
 30605              	.L2136:
14431:Core/Src/bno055.c ****         {
14432:Core/Src/bno055.c ****             /* Write page as one */
14433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14434:Core/Src/bno055.c ****         }
14435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30606              		.loc 1 14435 53 discriminator 1 view .LVU8626
 30607 001a 194B     		ldr	r3, .L2142
 30608 001c 1B68     		ldr	r3, [r3]
 30609 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30610              		.loc 1 14435 41 discriminator 1 view .LVU8627
 30611 0020 012B     		cmp	r3, #1
 30612 0022 2AD1     		bne	.L2139
 30613              	.L2137:
14436:Core/Src/bno055.c ****         {
14437:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30614              		.loc 1 14437 13 is_stmt 1 view .LVU8628
 30615              		.loc 1 14437 32 is_stmt 0 view .LVU8629
 30616 0024 164B     		ldr	r3, .L2142
 30617 0026 1868     		ldr	r0, [r3]
 30618 0028 0569     		ldr	r5, [r0, #16]
 30619              		.loc 1 14437 24 view .LVU8630
 30620 002a 0123     		movs	r3, #1
 30621 002c 0DF10702 		add	r2, sp, #7
 30622 0030 0F21     		movs	r1, #15
 30623 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30624 0034 A847     		blx	r5
 30625              	.LVL3807:
14438:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14439:Core/Src/bno055.c ****                                                       &data_u8r,
14440:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14441:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30626              		.loc 1 14441 13 is_stmt 1 view .LVU8631
 30627              		.loc 1 14441 16 is_stmt 0 view .LVU8632
 30628 0036 0546     		mov	r5, r0
 30629 0038 98B9     		cbnz	r0, .L2135
14442:Core/Src/bno055.c ****             {
14443:Core/Src/bno055.c ****                 /* Write the value of accel
14444:Core/Src/bno055.c ****                 * nomotion interrupt mask*/
14445:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK, accel_no
 30630              		.loc 1 14445 17 is_stmt 1 view .LVU8633
 30631              		.loc 1 14445 28 is_stmt 0 view .LVU8634
 30632 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30633 003e 03F07F03 		and	r3, r3, #127
ARM GAS  /tmp/cc9kYR4Z.s 			page 857


 30634 0042 43EAC413 		orr	r3, r3, r4, lsl #7
 30635              		.loc 1 14445 26 view .LVU8635
 30636 0046 8DF80730 		strb	r3, [sp, #7]
14446:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30637              		.loc 1 14446 17 is_stmt 1 view .LVU8636
 30638              		.loc 1 14446 37 is_stmt 0 view .LVU8637
 30639 004a 0D4B     		ldr	r3, .L2142
 30640 004c 1868     		ldr	r0, [r3]
 30641              	.LVL3808:
 30642              		.loc 1 14446 37 view .LVU8638
 30643 004e C468     		ldr	r4, [r0, #12]
 30644              		.loc 1 14446 29 view .LVU8639
 30645 0050 0123     		movs	r3, #1
 30646 0052 0DF10702 		add	r2, sp, #7
 30647 0056 0F21     		movs	r1, #15
 30648 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30649 005a A047     		blx	r4
 30650              	.LVL3809:
 30651              		.loc 1 14446 26 view .LVU8640
 30652 005c 55FA80F0 		uxtab	r0, r5, r0
 30653 0060 45B2     		sxtb	r5, r0
 30654              	.LVL3810:
 30655              	.L2135:
14447:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14448:Core/Src/bno055.c ****                                                             &data_u8r,
14449:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14450:Core/Src/bno055.c ****             }
14451:Core/Src/bno055.c ****         }
14452:Core/Src/bno055.c ****         else
14453:Core/Src/bno055.c ****         {
14454:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14455:Core/Src/bno055.c ****         }
14456:Core/Src/bno055.c ****     }
14457:Core/Src/bno055.c **** 
14458:Core/Src/bno055.c ****     return com_rslt;
14459:Core/Src/bno055.c **** }
 30656              		.loc 1 14459 1 view .LVU8641
 30657 0062 2846     		mov	r0, r5
 30658 0064 03B0     		add	sp, sp, #12
 30659              	.LCFI851:
 30660              		.cfi_remember_state
 30661              		.cfi_def_cfa_offset 12
 30662              		@ sp needed
 30663 0066 30BD     		pop	{r4, r5, pc}
 30664              	.LVL3811:
 30665              	.L2141:
 30666              	.LCFI852:
 30667              		.cfi_restore_state
14433:Core/Src/bno055.c ****         }
 30668              		.loc 1 14433 13 is_stmt 1 view .LVU8642
14433:Core/Src/bno055.c ****         }
 30669              		.loc 1 14433 23 is_stmt 0 view .LVU8643
 30670 0068 0120     		movs	r0, #1
 30671              	.LVL3812:
14433:Core/Src/bno055.c ****         }
 30672              		.loc 1 14433 23 view .LVU8644
 30673 006a FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/cc9kYR4Z.s 			page 858


 30674              	.LVL3813:
14435:Core/Src/bno055.c ****         {
 30675              		.loc 1 14435 9 is_stmt 1 view .LVU8645
14435:Core/Src/bno055.c ****         {
 30676              		.loc 1 14435 12 is_stmt 0 view .LVU8646
 30677 006e 0028     		cmp	r0, #0
 30678 0070 D8D0     		beq	.L2137
 30679 0072 D2E7     		b	.L2136
 30680              	.LVL3814:
 30681              	.L2138:
14423:Core/Src/bno055.c ****     }
 30682              		.loc 1 14423 16 view .LVU8647
 30683 0074 6FF07E05 		mvn	r5, #126
 30684 0078 F3E7     		b	.L2135
 30685              	.LVL3815:
 30686              	.L2139:
14454:Core/Src/bno055.c ****         }
 30687              		.loc 1 14454 22 view .LVU8648
 30688 007a 4FF0FF35 		mov	r5, #-1
 30689 007e F0E7     		b	.L2135
 30690              	.L2143:
 30691              		.align	2
 30692              	.L2142:
 30693 0080 00000000 		.word	.LANCHOR0
 30694              		.cfi_endproc
 30695              	.LFE214:
 30697              		.section	.text.bno055_get_intr_gyro_any_motion,"ax",%progbits
 30698              		.align	1
 30699              		.global	bno055_get_intr_gyro_any_motion
 30700              		.syntax unified
 30701              		.thumb
 30702              		.thumb_func
 30704              	bno055_get_intr_gyro_any_motion:
 30705              	.LVL3816:
 30706              	.LFB215:
14460:Core/Src/bno055.c **** 
14461:Core/Src/bno055.c **** /*!
14462:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt
14463:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14464:Core/Src/bno055.c ****  *
14465:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14466:Core/Src/bno055.c ****  *      gyro_any_motion_u8 | result
14467:Core/Src/bno055.c ****  *     --------------------  |------------
14468:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14469:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14470:Core/Src/bno055.c ****  *
14471:Core/Src/bno055.c ****  *  @return results of bus communication function
14472:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14473:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14474:Core/Src/bno055.c ****  *
14475:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14476:Core/Src/bno055.c ****  *  configure the following settings
14477:Core/Src/bno055.c ****  *
14478:Core/Src/bno055.c ****  *  Axis:
14479:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14480:Core/Src/bno055.c ****  *
14481:Core/Src/bno055.c ****  *  Filter setting:
ARM GAS  /tmp/cc9kYR4Z.s 			page 859


14482:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14483:Core/Src/bno055.c ****  *
14484:Core/Src/bno055.c ****  *  Threshold :
14485:Core/Src/bno055.c ****  *
14486:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14487:Core/Src/bno055.c ****  *
14488:Core/Src/bno055.c ****  *  Slope samples :
14489:Core/Src/bno055.c ****  *
14490:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14491:Core/Src/bno055.c ****  *
14492:Core/Src/bno055.c ****  *  Awake duration :
14493:Core/Src/bno055.c ****  *
14494:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14495:Core/Src/bno055.c ****  */
14496:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_any_motion(u8 *gyro_any_motion_u8)
14497:Core/Src/bno055.c **** {
 30707              		.loc 1 14497 1 is_stmt 1 view -0
 30708              		.cfi_startproc
 30709              		@ args = 0, pretend = 0, frame = 8
 30710              		@ frame_needed = 0, uses_anonymous_args = 0
 30711              		.loc 1 14497 1 is_stmt 0 view .LVU8650
 30712 0000 30B5     		push	{r4, r5, lr}
 30713              	.LCFI853:
 30714              		.cfi_def_cfa_offset 12
 30715              		.cfi_offset 4, -12
 30716              		.cfi_offset 5, -8
 30717              		.cfi_offset 14, -4
 30718 0002 83B0     		sub	sp, sp, #12
 30719              	.LCFI854:
 30720              		.cfi_def_cfa_offset 24
14498:Core/Src/bno055.c ****     /* Variable used to return value of
14499:Core/Src/bno055.c ****      * communication routine*/
14500:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30721              		.loc 1 14500 5 is_stmt 1 view .LVU8651
 30722              	.LVL3817:
14501:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30723              		.loc 1 14501 5 view .LVU8652
 30724              		.loc 1 14501 8 is_stmt 0 view .LVU8653
 30725 0004 0023     		movs	r3, #0
 30726 0006 8DF80730 		strb	r3, [sp, #7]
14502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30727              		.loc 1 14502 5 is_stmt 1 view .LVU8654
 30728              	.LVL3818:
14503:Core/Src/bno055.c **** 
14504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30729              		.loc 1 14505 5 view .LVU8655
 30730              		.loc 1 14505 18 is_stmt 0 view .LVU8656
 30731 000a 144B     		ldr	r3, .L2152
 30732 000c 1B68     		ldr	r3, [r3]
 30733              		.loc 1 14505 8 view .LVU8657
 30734 000e F3B1     		cbz	r3, .L2148
 30735 0010 0446     		mov	r4, r0
14506:Core/Src/bno055.c ****     {
14507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14508:Core/Src/bno055.c ****     }
14509:Core/Src/bno055.c ****     else
ARM GAS  /tmp/cc9kYR4Z.s 			page 860


14510:Core/Src/bno055.c ****     {
14511:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14512:Core/Src/bno055.c ****          * available in the page one*/
14513:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30736              		.loc 1 14513 9 is_stmt 1 view .LVU8658
 30737              		.loc 1 14513 21 is_stmt 0 view .LVU8659
 30738 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30739              		.loc 1 14513 12 view .LVU8660
 30740 0014 012B     		cmp	r3, #1
 30741 0016 14D1     		bne	.L2151
 30742              	.LVL3819:
 30743              	.L2146:
14514:Core/Src/bno055.c ****         {
14515:Core/Src/bno055.c ****             /* Write page as one */
14516:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14517:Core/Src/bno055.c ****         }
14518:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30744              		.loc 1 14518 53 discriminator 1 view .LVU8661
 30745 0018 104B     		ldr	r3, .L2152
 30746 001a 1B68     		ldr	r3, [r3]
 30747 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30748              		.loc 1 14518 41 discriminator 1 view .LVU8662
 30749 001e 012B     		cmp	r3, #1
 30750 0020 18D1     		bne	.L2149
 30751              	.L2147:
14519:Core/Src/bno055.c ****         {
14520:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt */
14521:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30752              		.loc 1 14521 13 is_stmt 1 view .LVU8663
 30753              		.loc 1 14521 32 is_stmt 0 view .LVU8664
 30754 0022 0E4B     		ldr	r3, .L2152
 30755 0024 1868     		ldr	r0, [r3]
 30756 0026 0569     		ldr	r5, [r0, #16]
 30757              		.loc 1 14521 24 view .LVU8665
 30758 0028 0123     		movs	r3, #1
 30759 002a 0DF10702 		add	r2, sp, #7
 30760 002e 1021     		movs	r1, #16
 30761 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30762 0032 A847     		blx	r5
 30763              	.LVL3820:
14522:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14523:Core/Src/bno055.c ****                                                       &data_u8r,
14524:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14525:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR);
 30764              		.loc 1 14525 13 is_stmt 1 view .LVU8666
 30765              		.loc 1 14525 35 is_stmt 0 view .LVU8667
 30766 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30767 0038 C3F38003 		ubfx	r3, r3, #2, #1
 30768              		.loc 1 14525 33 view .LVU8668
 30769 003c 2370     		strb	r3, [r4]
 30770              	.LVL3821:
 30771              	.L2145:
14526:Core/Src/bno055.c ****         }
14527:Core/Src/bno055.c ****         else
14528:Core/Src/bno055.c ****         {
14529:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14530:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 861


14531:Core/Src/bno055.c ****     }
14532:Core/Src/bno055.c **** 
14533:Core/Src/bno055.c ****     return com_rslt;
14534:Core/Src/bno055.c **** }
 30772              		.loc 1 14534 1 view .LVU8669
 30773 003e 03B0     		add	sp, sp, #12
 30774              	.LCFI855:
 30775              		.cfi_remember_state
 30776              		.cfi_def_cfa_offset 12
 30777              		@ sp needed
 30778 0040 30BD     		pop	{r4, r5, pc}
 30779              	.LVL3822:
 30780              	.L2151:
 30781              	.LCFI856:
 30782              		.cfi_restore_state
14516:Core/Src/bno055.c ****         }
 30783              		.loc 1 14516 13 is_stmt 1 view .LVU8670
14516:Core/Src/bno055.c ****         }
 30784              		.loc 1 14516 23 is_stmt 0 view .LVU8671
 30785 0042 0120     		movs	r0, #1
 30786              	.LVL3823:
14516:Core/Src/bno055.c ****         }
 30787              		.loc 1 14516 23 view .LVU8672
 30788 0044 FFF7FEFF 		bl	bno055_write_page_id
 30789              	.LVL3824:
14518:Core/Src/bno055.c ****         {
 30790              		.loc 1 14518 9 is_stmt 1 view .LVU8673
14518:Core/Src/bno055.c ****         {
 30791              		.loc 1 14518 12 is_stmt 0 view .LVU8674
 30792 0048 0028     		cmp	r0, #0
 30793 004a EAD0     		beq	.L2147
 30794 004c E4E7     		b	.L2146
 30795              	.LVL3825:
 30796              	.L2148:
14507:Core/Src/bno055.c ****     }
 30797              		.loc 1 14507 16 view .LVU8675
 30798 004e 6FF07E00 		mvn	r0, #126
 30799              	.LVL3826:
14507:Core/Src/bno055.c ****     }
 30800              		.loc 1 14507 16 view .LVU8676
 30801 0052 F4E7     		b	.L2145
 30802              	.LVL3827:
 30803              	.L2149:
14529:Core/Src/bno055.c ****         }
 30804              		.loc 1 14529 22 view .LVU8677
 30805 0054 4FF0FF30 		mov	r0, #-1
 30806 0058 F1E7     		b	.L2145
 30807              	.L2153:
 30808 005a 00BF     		.align	2
 30809              	.L2152:
 30810 005c 00000000 		.word	.LANCHOR0
 30811              		.cfi_endproc
 30812              	.LFE215:
 30814              		.section	.text.bno055_set_intr_gyro_any_motion,"ax",%progbits
 30815              		.align	1
 30816              		.global	bno055_set_intr_gyro_any_motion
 30817              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 862


 30818              		.thumb
 30819              		.thumb_func
 30821              	bno055_set_intr_gyro_any_motion:
 30822              	.LVL3828:
 30823              	.LFB216:
14535:Core/Src/bno055.c **** 
14536:Core/Src/bno055.c **** /*!
14537:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt
14538:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14539:Core/Src/bno055.c ****  *
14540:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14541:Core/Src/bno055.c ****  *    gyro_any_motion_u8   | result
14542:Core/Src/bno055.c ****  *     --------------------  |------------
14543:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14544:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14545:Core/Src/bno055.c ****  *
14546:Core/Src/bno055.c ****  *  @return results of bus communication function
14547:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14548:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14549:Core/Src/bno055.c ****  *
14550:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14551:Core/Src/bno055.c ****  *  configure the following settings
14552:Core/Src/bno055.c ****  *
14553:Core/Src/bno055.c ****  *  Axis:
14554:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14555:Core/Src/bno055.c ****  *
14556:Core/Src/bno055.c ****  *  Filter setting:
14557:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14558:Core/Src/bno055.c ****  *
14559:Core/Src/bno055.c ****  *  Threshold :
14560:Core/Src/bno055.c ****  *
14561:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14562:Core/Src/bno055.c ****  *
14563:Core/Src/bno055.c ****  *  Slope samples :
14564:Core/Src/bno055.c ****  *
14565:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14566:Core/Src/bno055.c ****  *
14567:Core/Src/bno055.c ****  *  Awake duration :
14568:Core/Src/bno055.c ****  *
14569:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14570:Core/Src/bno055.c ****  */
14571:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_any_motion(u8 gyro_any_motion_u8)
14572:Core/Src/bno055.c **** {
 30824              		.loc 1 14572 1 is_stmt 1 view -0
 30825              		.cfi_startproc
 30826              		@ args = 0, pretend = 0, frame = 8
 30827              		@ frame_needed = 0, uses_anonymous_args = 0
 30828              		.loc 1 14572 1 is_stmt 0 view .LVU8679
 30829 0000 30B5     		push	{r4, r5, lr}
 30830              	.LCFI857:
 30831              		.cfi_def_cfa_offset 12
 30832              		.cfi_offset 4, -12
 30833              		.cfi_offset 5, -8
 30834              		.cfi_offset 14, -4
 30835 0002 83B0     		sub	sp, sp, #12
 30836              	.LCFI858:
 30837              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 863


14573:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30838              		.loc 1 14573 5 is_stmt 1 view .LVU8680
 30839              	.LVL3829:
14574:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30840              		.loc 1 14574 5 view .LVU8681
 30841              		.loc 1 14574 8 is_stmt 0 view .LVU8682
 30842 0004 0023     		movs	r3, #0
 30843 0006 8DF80730 		strb	r3, [sp, #7]
14575:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30844              		.loc 1 14575 5 is_stmt 1 view .LVU8683
 30845              	.LVL3830:
14576:Core/Src/bno055.c **** 
14577:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14578:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30846              		.loc 1 14578 5 view .LVU8684
 30847              		.loc 1 14578 18 is_stmt 0 view .LVU8685
 30848 000a 1F4B     		ldr	r3, .L2162
 30849 000c 1B68     		ldr	r3, [r3]
 30850              		.loc 1 14578 8 view .LVU8686
 30851 000e 002B     		cmp	r3, #0
 30852 0010 33D0     		beq	.L2158
 30853 0012 0446     		mov	r4, r0
14579:Core/Src/bno055.c ****     {
14580:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14581:Core/Src/bno055.c ****     }
14582:Core/Src/bno055.c ****     else
14583:Core/Src/bno055.c ****     {
14584:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14585:Core/Src/bno055.c ****          * available in the page one*/
14586:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30854              		.loc 1 14586 9 is_stmt 1 view .LVU8687
 30855              		.loc 1 14586 21 is_stmt 0 view .LVU8688
 30856 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30857              		.loc 1 14586 12 view .LVU8689
 30858 0016 012B     		cmp	r3, #1
 30859 0018 29D1     		bne	.L2161
 30860              	.LVL3831:
 30861              	.L2156:
14587:Core/Src/bno055.c ****         {
14588:Core/Src/bno055.c ****             /* Write page as one */
14589:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14590:Core/Src/bno055.c ****         }
14591:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30862              		.loc 1 14591 53 discriminator 1 view .LVU8690
 30863 001a 1B4B     		ldr	r3, .L2162
 30864 001c 1B68     		ldr	r3, [r3]
 30865 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30866              		.loc 1 14591 41 discriminator 1 view .LVU8691
 30867 0020 012B     		cmp	r3, #1
 30868 0022 2DD1     		bne	.L2159
 30869              	.L2157:
14592:Core/Src/bno055.c ****         {
14593:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt */
14594:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30870              		.loc 1 14594 13 is_stmt 1 view .LVU8692
 30871              		.loc 1 14594 32 is_stmt 0 view .LVU8693
 30872 0024 184B     		ldr	r3, .L2162
ARM GAS  /tmp/cc9kYR4Z.s 			page 864


 30873 0026 1868     		ldr	r0, [r3]
 30874 0028 0569     		ldr	r5, [r0, #16]
 30875              		.loc 1 14594 24 view .LVU8694
 30876 002a 0123     		movs	r3, #1
 30877 002c 0DF10702 		add	r2, sp, #7
 30878 0030 1021     		movs	r1, #16
 30879 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30880 0034 A847     		blx	r5
 30881              	.LVL3832:
14595:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14596:Core/Src/bno055.c ****                                                       &data_u8r,
14597:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14598:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30882              		.loc 1 14598 13 is_stmt 1 view .LVU8695
 30883              		.loc 1 14598 16 is_stmt 0 view .LVU8696
 30884 0036 0546     		mov	r5, r0
 30885 0038 B0B9     		cbnz	r0, .L2155
14599:Core/Src/bno055.c ****             {
14600:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR, gyro_any_moti
 30886              		.loc 1 14600 17 is_stmt 1 view .LVU8697
 30887              		.loc 1 14600 28 is_stmt 0 view .LVU8698
 30888 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30889 003e 23F00403 		bic	r3, r3, #4
 30890 0042 5BB2     		sxtb	r3, r3
 30891 0044 A400     		lsls	r4, r4, #2
 30892 0046 04F00404 		and	r4, r4, #4
 30893 004a 2343     		orrs	r3, r3, r4
 30894              		.loc 1 14600 26 view .LVU8699
 30895 004c 8DF80730 		strb	r3, [sp, #7]
14601:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30896              		.loc 1 14601 17 is_stmt 1 view .LVU8700
 30897              		.loc 1 14601 37 is_stmt 0 view .LVU8701
 30898 0050 0D4B     		ldr	r3, .L2162
 30899 0052 1868     		ldr	r0, [r3]
 30900              	.LVL3833:
 30901              		.loc 1 14601 37 view .LVU8702
 30902 0054 C468     		ldr	r4, [r0, #12]
 30903              		.loc 1 14601 29 view .LVU8703
 30904 0056 0123     		movs	r3, #1
 30905 0058 0DF10702 		add	r2, sp, #7
 30906 005c 1021     		movs	r1, #16
 30907 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30908 0060 A047     		blx	r4
 30909              	.LVL3834:
 30910              		.loc 1 14601 26 view .LVU8704
 30911 0062 55FA80F0 		uxtab	r0, r5, r0
 30912 0066 45B2     		sxtb	r5, r0
 30913              	.LVL3835:
 30914              	.L2155:
14602:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_REG,
14603:Core/Src/bno055.c ****                                                             &data_u8r,
14604:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14605:Core/Src/bno055.c ****             }
14606:Core/Src/bno055.c ****         }
14607:Core/Src/bno055.c ****         else
14608:Core/Src/bno055.c ****         {
14609:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 865


14610:Core/Src/bno055.c ****         }
14611:Core/Src/bno055.c ****     }
14612:Core/Src/bno055.c **** 
14613:Core/Src/bno055.c ****     return com_rslt;
14614:Core/Src/bno055.c **** }
 30915              		.loc 1 14614 1 view .LVU8705
 30916 0068 2846     		mov	r0, r5
 30917 006a 03B0     		add	sp, sp, #12
 30918              	.LCFI859:
 30919              		.cfi_remember_state
 30920              		.cfi_def_cfa_offset 12
 30921              		@ sp needed
 30922 006c 30BD     		pop	{r4, r5, pc}
 30923              	.LVL3836:
 30924              	.L2161:
 30925              	.LCFI860:
 30926              		.cfi_restore_state
14589:Core/Src/bno055.c ****         }
 30927              		.loc 1 14589 13 is_stmt 1 view .LVU8706
14589:Core/Src/bno055.c ****         }
 30928              		.loc 1 14589 23 is_stmt 0 view .LVU8707
 30929 006e 0120     		movs	r0, #1
 30930              	.LVL3837:
14589:Core/Src/bno055.c ****         }
 30931              		.loc 1 14589 23 view .LVU8708
 30932 0070 FFF7FEFF 		bl	bno055_write_page_id
 30933              	.LVL3838:
14591:Core/Src/bno055.c ****         {
 30934              		.loc 1 14591 9 is_stmt 1 view .LVU8709
14591:Core/Src/bno055.c ****         {
 30935              		.loc 1 14591 12 is_stmt 0 view .LVU8710
 30936 0074 0028     		cmp	r0, #0
 30937 0076 D5D0     		beq	.L2157
 30938 0078 CFE7     		b	.L2156
 30939              	.LVL3839:
 30940              	.L2158:
14580:Core/Src/bno055.c ****     }
 30941              		.loc 1 14580 16 view .LVU8711
 30942 007a 6FF07E05 		mvn	r5, #126
 30943 007e F3E7     		b	.L2155
 30944              	.LVL3840:
 30945              	.L2159:
14609:Core/Src/bno055.c ****         }
 30946              		.loc 1 14609 22 view .LVU8712
 30947 0080 4FF0FF35 		mov	r5, #-1
 30948 0084 F0E7     		b	.L2155
 30949              	.L2163:
 30950 0086 00BF     		.align	2
 30951              	.L2162:
 30952 0088 00000000 		.word	.LANCHOR0
 30953              		.cfi_endproc
 30954              	.LFE216:
 30956              		.section	.text.bno055_get_intr_gyro_highrate,"ax",%progbits
 30957              		.align	1
 30958              		.global	bno055_get_intr_gyro_highrate
 30959              		.syntax unified
 30960              		.thumb
ARM GAS  /tmp/cc9kYR4Z.s 			page 866


 30961              		.thumb_func
 30963              	bno055_get_intr_gyro_highrate:
 30964              	.LVL3841:
 30965              	.LFB217:
14615:Core/Src/bno055.c **** 
14616:Core/Src/bno055.c **** /*!
14617:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt
14618:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14619:Core/Src/bno055.c ****  *
14620:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14621:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14622:Core/Src/bno055.c ****  *     --------------------  |------------
14623:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14624:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14625:Core/Src/bno055.c ****  *
14626:Core/Src/bno055.c ****  *  @return results of bus communication function
14627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14629:Core/Src/bno055.c ****  *
14630:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14631:Core/Src/bno055.c ****  *  configure the below settings by using
14632:Core/Src/bno055.c ****  *  the following APIs
14633:Core/Src/bno055.c ****  *
14634:Core/Src/bno055.c ****  *  Axis :
14635:Core/Src/bno055.c ****  *
14636:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14637:Core/Src/bno055.c ****  *
14638:Core/Src/bno055.c ****  *  Filter :
14639:Core/Src/bno055.c ****  *
14640:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14641:Core/Src/bno055.c ****  *
14642:Core/Src/bno055.c ****  *  Threshold :
14643:Core/Src/bno055.c ****  *
14644:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14645:Core/Src/bno055.c ****  *
14646:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14647:Core/Src/bno055.c ****  *
14648:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14649:Core/Src/bno055.c ****  *
14650:Core/Src/bno055.c ****  *  Hysteresis :
14651:Core/Src/bno055.c ****  *
14652:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14653:Core/Src/bno055.c ****  *
14654:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14655:Core/Src/bno055.c ****  *
14656:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14657:Core/Src/bno055.c ****  *
14658:Core/Src/bno055.c ****  *  Duration :
14659:Core/Src/bno055.c ****  *
14660:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14661:Core/Src/bno055.c ****  *
14662:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14663:Core/Src/bno055.c ****  *
14664:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14665:Core/Src/bno055.c ****  *
14666:Core/Src/bno055.c ****  */
14667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_highrate(u8 *gyro_highrate_u8)
ARM GAS  /tmp/cc9kYR4Z.s 			page 867


14668:Core/Src/bno055.c **** {
 30966              		.loc 1 14668 1 is_stmt 1 view -0
 30967              		.cfi_startproc
 30968              		@ args = 0, pretend = 0, frame = 8
 30969              		@ frame_needed = 0, uses_anonymous_args = 0
 30970              		.loc 1 14668 1 is_stmt 0 view .LVU8714
 30971 0000 30B5     		push	{r4, r5, lr}
 30972              	.LCFI861:
 30973              		.cfi_def_cfa_offset 12
 30974              		.cfi_offset 4, -12
 30975              		.cfi_offset 5, -8
 30976              		.cfi_offset 14, -4
 30977 0002 83B0     		sub	sp, sp, #12
 30978              	.LCFI862:
 30979              		.cfi_def_cfa_offset 24
14669:Core/Src/bno055.c ****     /* Variable used to return value of
14670:Core/Src/bno055.c ****      * communication routine*/
14671:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30980              		.loc 1 14671 5 is_stmt 1 view .LVU8715
 30981              	.LVL3842:
14672:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30982              		.loc 1 14672 5 view .LVU8716
 30983              		.loc 1 14672 8 is_stmt 0 view .LVU8717
 30984 0004 0023     		movs	r3, #0
 30985 0006 8DF80730 		strb	r3, [sp, #7]
14673:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30986              		.loc 1 14673 5 is_stmt 1 view .LVU8718
 30987              	.LVL3843:
14674:Core/Src/bno055.c **** 
14675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30988              		.loc 1 14676 5 view .LVU8719
 30989              		.loc 1 14676 18 is_stmt 0 view .LVU8720
 30990 000a 144B     		ldr	r3, .L2172
 30991 000c 1B68     		ldr	r3, [r3]
 30992              		.loc 1 14676 8 view .LVU8721
 30993 000e F3B1     		cbz	r3, .L2168
 30994 0010 0446     		mov	r4, r0
14677:Core/Src/bno055.c ****     {
14678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14679:Core/Src/bno055.c ****     }
14680:Core/Src/bno055.c ****     else
14681:Core/Src/bno055.c ****     {
14682:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14683:Core/Src/bno055.c ****          * available in the page one*/
14684:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30995              		.loc 1 14684 9 is_stmt 1 view .LVU8722
 30996              		.loc 1 14684 21 is_stmt 0 view .LVU8723
 30997 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30998              		.loc 1 14684 12 view .LVU8724
 30999 0014 012B     		cmp	r3, #1
 31000 0016 14D1     		bne	.L2171
 31001              	.LVL3844:
 31002              	.L2166:
14685:Core/Src/bno055.c ****         {
14686:Core/Src/bno055.c ****             /* Write page as one */
14687:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
ARM GAS  /tmp/cc9kYR4Z.s 			page 868


14688:Core/Src/bno055.c ****         }
14689:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31003              		.loc 1 14689 53 discriminator 1 view .LVU8725
 31004 0018 104B     		ldr	r3, .L2172
 31005 001a 1B68     		ldr	r3, [r3]
 31006 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31007              		.loc 1 14689 41 discriminator 1 view .LVU8726
 31008 001e 012B     		cmp	r3, #1
 31009 0020 18D1     		bne	.L2169
 31010              	.L2167:
14690:Core/Src/bno055.c ****         {
14691:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt */
14692:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31011              		.loc 1 14692 13 is_stmt 1 view .LVU8727
 31012              		.loc 1 14692 32 is_stmt 0 view .LVU8728
 31013 0022 0E4B     		ldr	r3, .L2172
 31014 0024 1868     		ldr	r0, [r3]
 31015 0026 0569     		ldr	r5, [r0, #16]
 31016              		.loc 1 14692 24 view .LVU8729
 31017 0028 0123     		movs	r3, #1
 31018 002a 0DF10702 		add	r2, sp, #7
 31019 002e 1021     		movs	r1, #16
 31020 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31021 0032 A847     		blx	r5
 31022              	.LVL3845:
14693:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14694:Core/Src/bno055.c ****                                                       &data_u8r,
14695:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14696:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR);
 31023              		.loc 1 14696 13 is_stmt 1 view .LVU8730
 31024              		.loc 1 14696 33 is_stmt 0 view .LVU8731
 31025 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31026 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 31027              		.loc 1 14696 31 view .LVU8732
 31028 003c 2370     		strb	r3, [r4]
 31029              	.LVL3846:
 31030              	.L2165:
14697:Core/Src/bno055.c ****         }
14698:Core/Src/bno055.c ****         else
14699:Core/Src/bno055.c ****         {
14700:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14701:Core/Src/bno055.c ****         }
14702:Core/Src/bno055.c ****     }
14703:Core/Src/bno055.c **** 
14704:Core/Src/bno055.c ****     return com_rslt;
14705:Core/Src/bno055.c **** }
 31031              		.loc 1 14705 1 view .LVU8733
 31032 003e 03B0     		add	sp, sp, #12
 31033              	.LCFI863:
 31034              		.cfi_remember_state
 31035              		.cfi_def_cfa_offset 12
 31036              		@ sp needed
 31037 0040 30BD     		pop	{r4, r5, pc}
 31038              	.LVL3847:
 31039              	.L2171:
 31040              	.LCFI864:
 31041              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 869


14687:Core/Src/bno055.c ****         }
 31042              		.loc 1 14687 13 is_stmt 1 view .LVU8734
14687:Core/Src/bno055.c ****         }
 31043              		.loc 1 14687 23 is_stmt 0 view .LVU8735
 31044 0042 0120     		movs	r0, #1
 31045              	.LVL3848:
14687:Core/Src/bno055.c ****         }
 31046              		.loc 1 14687 23 view .LVU8736
 31047 0044 FFF7FEFF 		bl	bno055_write_page_id
 31048              	.LVL3849:
14689:Core/Src/bno055.c ****         {
 31049              		.loc 1 14689 9 is_stmt 1 view .LVU8737
14689:Core/Src/bno055.c ****         {
 31050              		.loc 1 14689 12 is_stmt 0 view .LVU8738
 31051 0048 0028     		cmp	r0, #0
 31052 004a EAD0     		beq	.L2167
 31053 004c E4E7     		b	.L2166
 31054              	.LVL3850:
 31055              	.L2168:
14678:Core/Src/bno055.c ****     }
 31056              		.loc 1 14678 16 view .LVU8739
 31057 004e 6FF07E00 		mvn	r0, #126
 31058              	.LVL3851:
14678:Core/Src/bno055.c ****     }
 31059              		.loc 1 14678 16 view .LVU8740
 31060 0052 F4E7     		b	.L2165
 31061              	.LVL3852:
 31062              	.L2169:
14700:Core/Src/bno055.c ****         }
 31063              		.loc 1 14700 22 view .LVU8741
 31064 0054 4FF0FF30 		mov	r0, #-1
 31065 0058 F1E7     		b	.L2165
 31066              	.L2173:
 31067 005a 00BF     		.align	2
 31068              	.L2172:
 31069 005c 00000000 		.word	.LANCHOR0
 31070              		.cfi_endproc
 31071              	.LFE217:
 31073              		.section	.text.bno055_set_intr_gyro_highrate,"ax",%progbits
 31074              		.align	1
 31075              		.global	bno055_set_intr_gyro_highrate
 31076              		.syntax unified
 31077              		.thumb
 31078              		.thumb_func
 31080              	bno055_set_intr_gyro_highrate:
 31081              	.LVL3853:
 31082              	.LFB218:
14706:Core/Src/bno055.c **** 
14707:Core/Src/bno055.c **** /*!
14708:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt
14709:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14710:Core/Src/bno055.c ****  *
14711:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14712:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14713:Core/Src/bno055.c ****  *     --------------------  |------------
14714:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14715:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
ARM GAS  /tmp/cc9kYR4Z.s 			page 870


14716:Core/Src/bno055.c ****  *
14717:Core/Src/bno055.c ****  *  @return results of bus communication function
14718:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14719:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14720:Core/Src/bno055.c ****  *
14721:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14722:Core/Src/bno055.c ****  *  configure the below settings by using
14723:Core/Src/bno055.c ****  *  the following APIs
14724:Core/Src/bno055.c ****  *
14725:Core/Src/bno055.c ****  *  Axis :
14726:Core/Src/bno055.c ****  *
14727:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14728:Core/Src/bno055.c ****  *
14729:Core/Src/bno055.c ****  *  Filter :
14730:Core/Src/bno055.c ****  *
14731:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14732:Core/Src/bno055.c ****  *
14733:Core/Src/bno055.c ****  *  Threshold :
14734:Core/Src/bno055.c ****  *
14735:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14736:Core/Src/bno055.c ****  *
14737:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14738:Core/Src/bno055.c ****  *
14739:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14740:Core/Src/bno055.c ****  *
14741:Core/Src/bno055.c ****  *  Hysteresis :
14742:Core/Src/bno055.c ****  *
14743:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14744:Core/Src/bno055.c ****  *
14745:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14746:Core/Src/bno055.c ****  *
14747:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14748:Core/Src/bno055.c ****  *
14749:Core/Src/bno055.c ****  *  Duration :
14750:Core/Src/bno055.c ****  *
14751:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14752:Core/Src/bno055.c ****  *
14753:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14754:Core/Src/bno055.c ****  *
14755:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14756:Core/Src/bno055.c ****  *
14757:Core/Src/bno055.c ****  */
14758:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_highrate(u8 gyro_highrate_u8)
14759:Core/Src/bno055.c **** {
 31083              		.loc 1 14759 1 is_stmt 1 view -0
 31084              		.cfi_startproc
 31085              		@ args = 0, pretend = 0, frame = 8
 31086              		@ frame_needed = 0, uses_anonymous_args = 0
 31087              		.loc 1 14759 1 is_stmt 0 view .LVU8743
 31088 0000 30B5     		push	{r4, r5, lr}
 31089              	.LCFI865:
 31090              		.cfi_def_cfa_offset 12
 31091              		.cfi_offset 4, -12
 31092              		.cfi_offset 5, -8
 31093              		.cfi_offset 14, -4
 31094 0002 83B0     		sub	sp, sp, #12
 31095              	.LCFI866:
ARM GAS  /tmp/cc9kYR4Z.s 			page 871


 31096              		.cfi_def_cfa_offset 24
14760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31097              		.loc 1 14760 5 is_stmt 1 view .LVU8744
 31098              	.LVL3854:
14761:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31099              		.loc 1 14761 5 view .LVU8745
 31100              		.loc 1 14761 8 is_stmt 0 view .LVU8746
 31101 0004 0023     		movs	r3, #0
 31102 0006 8DF80730 		strb	r3, [sp, #7]
14762:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31103              		.loc 1 14762 5 is_stmt 1 view .LVU8747
 31104              	.LVL3855:
14763:Core/Src/bno055.c **** 
14764:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14765:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31105              		.loc 1 14765 5 view .LVU8748
 31106              		.loc 1 14765 18 is_stmt 0 view .LVU8749
 31107 000a 1F4B     		ldr	r3, .L2182
 31108 000c 1B68     		ldr	r3, [r3]
 31109              		.loc 1 14765 8 view .LVU8750
 31110 000e 002B     		cmp	r3, #0
 31111 0010 33D0     		beq	.L2178
 31112 0012 0446     		mov	r4, r0
14766:Core/Src/bno055.c ****     {
14767:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14768:Core/Src/bno055.c ****     }
14769:Core/Src/bno055.c ****     else
14770:Core/Src/bno055.c ****     {
14771:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14772:Core/Src/bno055.c ****          * available in the page one*/
14773:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31113              		.loc 1 14773 9 is_stmt 1 view .LVU8751
 31114              		.loc 1 14773 21 is_stmt 0 view .LVU8752
 31115 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31116              		.loc 1 14773 12 view .LVU8753
 31117 0016 012B     		cmp	r3, #1
 31118 0018 29D1     		bne	.L2181
 31119              	.LVL3856:
 31120              	.L2176:
14774:Core/Src/bno055.c ****         {
14775:Core/Src/bno055.c ****             /* Write page as one */
14776:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14777:Core/Src/bno055.c ****         }
14778:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31121              		.loc 1 14778 53 discriminator 1 view .LVU8754
 31122 001a 1B4B     		ldr	r3, .L2182
 31123 001c 1B68     		ldr	r3, [r3]
 31124 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31125              		.loc 1 14778 41 discriminator 1 view .LVU8755
 31126 0020 012B     		cmp	r3, #1
 31127 0022 2DD1     		bne	.L2179
 31128              	.L2177:
14779:Core/Src/bno055.c ****         {
14780:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31129              		.loc 1 14780 13 is_stmt 1 view .LVU8756
 31130              		.loc 1 14780 32 is_stmt 0 view .LVU8757
 31131 0024 184B     		ldr	r3, .L2182
ARM GAS  /tmp/cc9kYR4Z.s 			page 872


 31132 0026 1868     		ldr	r0, [r3]
 31133 0028 0569     		ldr	r5, [r0, #16]
 31134              		.loc 1 14780 24 view .LVU8758
 31135 002a 0123     		movs	r3, #1
 31136 002c 0DF10702 		add	r2, sp, #7
 31137 0030 1021     		movs	r1, #16
 31138 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31139 0034 A847     		blx	r5
 31140              	.LVL3857:
14781:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14782:Core/Src/bno055.c ****                                                       &data_u8r,
14783:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14784:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31141              		.loc 1 14784 13 is_stmt 1 view .LVU8759
 31142              		.loc 1 14784 16 is_stmt 0 view .LVU8760
 31143 0036 0546     		mov	r5, r0
 31144 0038 B0B9     		cbnz	r0, .L2175
14785:Core/Src/bno055.c ****             {
14786:Core/Src/bno055.c ****                 /* Write the value of gyro highrate interrupt */
14787:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR, gyro_highrate_u
 31145              		.loc 1 14787 17 is_stmt 1 view .LVU8761
 31146              		.loc 1 14787 28 is_stmt 0 view .LVU8762
 31147 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31148 003e 23F00803 		bic	r3, r3, #8
 31149 0042 5BB2     		sxtb	r3, r3
 31150 0044 E400     		lsls	r4, r4, #3
 31151 0046 04F00804 		and	r4, r4, #8
 31152 004a 2343     		orrs	r3, r3, r4
 31153              		.loc 1 14787 26 view .LVU8763
 31154 004c 8DF80730 		strb	r3, [sp, #7]
14788:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31155              		.loc 1 14788 17 is_stmt 1 view .LVU8764
 31156              		.loc 1 14788 37 is_stmt 0 view .LVU8765
 31157 0050 0D4B     		ldr	r3, .L2182
 31158 0052 1868     		ldr	r0, [r3]
 31159              	.LVL3858:
 31160              		.loc 1 14788 37 view .LVU8766
 31161 0054 C468     		ldr	r4, [r0, #12]
 31162              		.loc 1 14788 29 view .LVU8767
 31163 0056 0123     		movs	r3, #1
 31164 0058 0DF10702 		add	r2, sp, #7
 31165 005c 1021     		movs	r1, #16
 31166 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31167 0060 A047     		blx	r4
 31168              	.LVL3859:
 31169              		.loc 1 14788 26 view .LVU8768
 31170 0062 55FA80F0 		uxtab	r0, r5, r0
 31171 0066 45B2     		sxtb	r5, r0
 31172              	.LVL3860:
 31173              	.L2175:
14789:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_REG,
14790:Core/Src/bno055.c ****                                                             &data_u8r,
14791:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14792:Core/Src/bno055.c ****             }
14793:Core/Src/bno055.c ****         }
14794:Core/Src/bno055.c ****         else
14795:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 873


14796:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14797:Core/Src/bno055.c ****         }
14798:Core/Src/bno055.c ****     }
14799:Core/Src/bno055.c **** 
14800:Core/Src/bno055.c ****     return com_rslt;
14801:Core/Src/bno055.c **** }
 31174              		.loc 1 14801 1 view .LVU8769
 31175 0068 2846     		mov	r0, r5
 31176 006a 03B0     		add	sp, sp, #12
 31177              	.LCFI867:
 31178              		.cfi_remember_state
 31179              		.cfi_def_cfa_offset 12
 31180              		@ sp needed
 31181 006c 30BD     		pop	{r4, r5, pc}
 31182              	.LVL3861:
 31183              	.L2181:
 31184              	.LCFI868:
 31185              		.cfi_restore_state
14776:Core/Src/bno055.c ****         }
 31186              		.loc 1 14776 13 is_stmt 1 view .LVU8770
14776:Core/Src/bno055.c ****         }
 31187              		.loc 1 14776 23 is_stmt 0 view .LVU8771
 31188 006e 0120     		movs	r0, #1
 31189              	.LVL3862:
14776:Core/Src/bno055.c ****         }
 31190              		.loc 1 14776 23 view .LVU8772
 31191 0070 FFF7FEFF 		bl	bno055_write_page_id
 31192              	.LVL3863:
14778:Core/Src/bno055.c ****         {
 31193              		.loc 1 14778 9 is_stmt 1 view .LVU8773
14778:Core/Src/bno055.c ****         {
 31194              		.loc 1 14778 12 is_stmt 0 view .LVU8774
 31195 0074 0028     		cmp	r0, #0
 31196 0076 D5D0     		beq	.L2177
 31197 0078 CFE7     		b	.L2176
 31198              	.LVL3864:
 31199              	.L2178:
14767:Core/Src/bno055.c ****     }
 31200              		.loc 1 14767 16 view .LVU8775
 31201 007a 6FF07E05 		mvn	r5, #126
 31202 007e F3E7     		b	.L2175
 31203              	.LVL3865:
 31204              	.L2179:
14796:Core/Src/bno055.c ****         }
 31205              		.loc 1 14796 22 view .LVU8776
 31206 0080 4FF0FF35 		mov	r5, #-1
 31207 0084 F0E7     		b	.L2175
 31208              	.L2183:
 31209 0086 00BF     		.align	2
 31210              	.L2182:
 31211 0088 00000000 		.word	.LANCHOR0
 31212              		.cfi_endproc
 31213              	.LFE218:
 31215              		.section	.text.bno055_get_intr_accel_high_g,"ax",%progbits
 31216              		.align	1
 31217              		.global	bno055_get_intr_accel_high_g
 31218              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 874


 31219              		.thumb
 31220              		.thumb_func
 31222              	bno055_get_intr_accel_high_g:
 31223              	.LVL3866:
 31224              	.LFB219:
14802:Core/Src/bno055.c **** 
14803:Core/Src/bno055.c **** /*!
14804:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt
14805:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14806:Core/Src/bno055.c ****  *
14807:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14808:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14809:Core/Src/bno055.c ****  *     --------------------  |------------
14810:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14811:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14812:Core/Src/bno055.c ****  *
14813:Core/Src/bno055.c ****  *  @return results of bus communication function
14814:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14815:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14816:Core/Src/bno055.c ****  *
14817:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14818:Core/Src/bno055.c ****  *  configure the below settings by using
14819:Core/Src/bno055.c ****  *  the following APIs
14820:Core/Src/bno055.c ****  *
14821:Core/Src/bno055.c ****  *  Axis :
14822:Core/Src/bno055.c ****  *
14823:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14824:Core/Src/bno055.c ****  *
14825:Core/Src/bno055.c ****  *  Threshold :
14826:Core/Src/bno055.c ****  *
14827:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14828:Core/Src/bno055.c ****  *
14829:Core/Src/bno055.c ****  *  Duration :
14830:Core/Src/bno055.c ****  *
14831:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14832:Core/Src/bno055.c ****  *
14833:Core/Src/bno055.c ****  */
14834:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_high_g(u8 *accel_high_g_u8)
14835:Core/Src/bno055.c **** {
 31225              		.loc 1 14835 1 is_stmt 1 view -0
 31226              		.cfi_startproc
 31227              		@ args = 0, pretend = 0, frame = 8
 31228              		@ frame_needed = 0, uses_anonymous_args = 0
 31229              		.loc 1 14835 1 is_stmt 0 view .LVU8778
 31230 0000 30B5     		push	{r4, r5, lr}
 31231              	.LCFI869:
 31232              		.cfi_def_cfa_offset 12
 31233              		.cfi_offset 4, -12
 31234              		.cfi_offset 5, -8
 31235              		.cfi_offset 14, -4
 31236 0002 83B0     		sub	sp, sp, #12
 31237              	.LCFI870:
 31238              		.cfi_def_cfa_offset 24
14836:Core/Src/bno055.c ****     /* Variable used to return value of
14837:Core/Src/bno055.c ****      * communication routine*/
14838:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31239              		.loc 1 14838 5 is_stmt 1 view .LVU8779
ARM GAS  /tmp/cc9kYR4Z.s 			page 875


 31240              	.LVL3867:
14839:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31241              		.loc 1 14839 5 view .LVU8780
 31242              		.loc 1 14839 8 is_stmt 0 view .LVU8781
 31243 0004 0023     		movs	r3, #0
 31244 0006 8DF80730 		strb	r3, [sp, #7]
14840:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31245              		.loc 1 14840 5 is_stmt 1 view .LVU8782
 31246              	.LVL3868:
14841:Core/Src/bno055.c **** 
14842:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14843:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31247              		.loc 1 14843 5 view .LVU8783
 31248              		.loc 1 14843 18 is_stmt 0 view .LVU8784
 31249 000a 144B     		ldr	r3, .L2192
 31250 000c 1B68     		ldr	r3, [r3]
 31251              		.loc 1 14843 8 view .LVU8785
 31252 000e F3B1     		cbz	r3, .L2188
 31253 0010 0446     		mov	r4, r0
14844:Core/Src/bno055.c ****     {
14845:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14846:Core/Src/bno055.c ****     }
14847:Core/Src/bno055.c ****     else
14848:Core/Src/bno055.c ****     {
14849:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt  is
14850:Core/Src/bno055.c ****          * available in the page one*/
14851:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31254              		.loc 1 14851 9 is_stmt 1 view .LVU8786
 31255              		.loc 1 14851 21 is_stmt 0 view .LVU8787
 31256 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31257              		.loc 1 14851 12 view .LVU8788
 31258 0014 012B     		cmp	r3, #1
 31259 0016 14D1     		bne	.L2191
 31260              	.LVL3869:
 31261              	.L2186:
14852:Core/Src/bno055.c ****         {
14853:Core/Src/bno055.c ****             /* Write page as one */
14854:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14855:Core/Src/bno055.c ****         }
14856:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31262              		.loc 1 14856 53 discriminator 1 view .LVU8789
 31263 0018 104B     		ldr	r3, .L2192
 31264 001a 1B68     		ldr	r3, [r3]
 31265 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31266              		.loc 1 14856 41 discriminator 1 view .LVU8790
 31267 001e 012B     		cmp	r3, #1
 31268 0020 18D1     		bne	.L2189
 31269              	.L2187:
14857:Core/Src/bno055.c ****         {
14858:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt*/
14859:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31270              		.loc 1 14859 13 is_stmt 1 view .LVU8791
 31271              		.loc 1 14859 32 is_stmt 0 view .LVU8792
 31272 0022 0E4B     		ldr	r3, .L2192
 31273 0024 1868     		ldr	r0, [r3]
 31274 0026 0569     		ldr	r5, [r0, #16]
 31275              		.loc 1 14859 24 view .LVU8793
ARM GAS  /tmp/cc9kYR4Z.s 			page 876


 31276 0028 0123     		movs	r3, #1
 31277 002a 0DF10702 		add	r2, sp, #7
 31278 002e 1021     		movs	r1, #16
 31279 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31280 0032 A847     		blx	r5
 31281              	.LVL3870:
14860:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14861:Core/Src/bno055.c ****                                                       &data_u8r,
14862:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14863:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR);
 31282              		.loc 1 14863 13 is_stmt 1 view .LVU8794
 31283              		.loc 1 14863 32 is_stmt 0 view .LVU8795
 31284 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31285 0038 C3F34013 		ubfx	r3, r3, #5, #1
 31286              		.loc 1 14863 30 view .LVU8796
 31287 003c 2370     		strb	r3, [r4]
 31288              	.LVL3871:
 31289              	.L2185:
14864:Core/Src/bno055.c ****         }
14865:Core/Src/bno055.c ****         else
14866:Core/Src/bno055.c ****         {
14867:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14868:Core/Src/bno055.c ****         }
14869:Core/Src/bno055.c ****     }
14870:Core/Src/bno055.c **** 
14871:Core/Src/bno055.c ****     return com_rslt;
14872:Core/Src/bno055.c **** }
 31290              		.loc 1 14872 1 view .LVU8797
 31291 003e 03B0     		add	sp, sp, #12
 31292              	.LCFI871:
 31293              		.cfi_remember_state
 31294              		.cfi_def_cfa_offset 12
 31295              		@ sp needed
 31296 0040 30BD     		pop	{r4, r5, pc}
 31297              	.LVL3872:
 31298              	.L2191:
 31299              	.LCFI872:
 31300              		.cfi_restore_state
14854:Core/Src/bno055.c ****         }
 31301              		.loc 1 14854 13 is_stmt 1 view .LVU8798
14854:Core/Src/bno055.c ****         }
 31302              		.loc 1 14854 23 is_stmt 0 view .LVU8799
 31303 0042 0120     		movs	r0, #1
 31304              	.LVL3873:
14854:Core/Src/bno055.c ****         }
 31305              		.loc 1 14854 23 view .LVU8800
 31306 0044 FFF7FEFF 		bl	bno055_write_page_id
 31307              	.LVL3874:
14856:Core/Src/bno055.c ****         {
 31308              		.loc 1 14856 9 is_stmt 1 view .LVU8801
14856:Core/Src/bno055.c ****         {
 31309              		.loc 1 14856 12 is_stmt 0 view .LVU8802
 31310 0048 0028     		cmp	r0, #0
 31311 004a EAD0     		beq	.L2187
 31312 004c E4E7     		b	.L2186
 31313              	.LVL3875:
 31314              	.L2188:
ARM GAS  /tmp/cc9kYR4Z.s 			page 877


14845:Core/Src/bno055.c ****     }
 31315              		.loc 1 14845 16 view .LVU8803
 31316 004e 6FF07E00 		mvn	r0, #126
 31317              	.LVL3876:
14845:Core/Src/bno055.c ****     }
 31318              		.loc 1 14845 16 view .LVU8804
 31319 0052 F4E7     		b	.L2185
 31320              	.LVL3877:
 31321              	.L2189:
14867:Core/Src/bno055.c ****         }
 31322              		.loc 1 14867 22 view .LVU8805
 31323 0054 4FF0FF30 		mov	r0, #-1
 31324 0058 F1E7     		b	.L2185
 31325              	.L2193:
 31326 005a 00BF     		.align	2
 31327              	.L2192:
 31328 005c 00000000 		.word	.LANCHOR0
 31329              		.cfi_endproc
 31330              	.LFE219:
 31332              		.section	.text.bno055_set_intr_accel_high_g,"ax",%progbits
 31333              		.align	1
 31334              		.global	bno055_set_intr_accel_high_g
 31335              		.syntax unified
 31336              		.thumb
 31337              		.thumb_func
 31339              	bno055_set_intr_accel_high_g:
 31340              	.LVL3878:
 31341              	.LFB220:
14873:Core/Src/bno055.c **** 
14874:Core/Src/bno055.c **** /*!
14875:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt
14876:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14877:Core/Src/bno055.c ****  *
14878:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14879:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14880:Core/Src/bno055.c ****  *     --------------------  |------------
14881:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14882:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14883:Core/Src/bno055.c ****  *
14884:Core/Src/bno055.c ****  *  @return results of bus communication function
14885:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14886:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14887:Core/Src/bno055.c ****  *
14888:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14889:Core/Src/bno055.c ****  *  configure the below settings by using
14890:Core/Src/bno055.c ****  *  the following APIs
14891:Core/Src/bno055.c ****  *
14892:Core/Src/bno055.c ****  *  Axis :
14893:Core/Src/bno055.c ****  *
14894:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14895:Core/Src/bno055.c ****  *
14896:Core/Src/bno055.c ****  *  Threshold :
14897:Core/Src/bno055.c ****  *
14898:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14899:Core/Src/bno055.c ****  *
14900:Core/Src/bno055.c ****  *  Duration :
14901:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 878


14902:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14903:Core/Src/bno055.c ****  *
14904:Core/Src/bno055.c ****  */
14905:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_high_g(u8 accel_high_g_u8)
14906:Core/Src/bno055.c **** {
 31342              		.loc 1 14906 1 is_stmt 1 view -0
 31343              		.cfi_startproc
 31344              		@ args = 0, pretend = 0, frame = 8
 31345              		@ frame_needed = 0, uses_anonymous_args = 0
 31346              		.loc 1 14906 1 is_stmt 0 view .LVU8807
 31347 0000 30B5     		push	{r4, r5, lr}
 31348              	.LCFI873:
 31349              		.cfi_def_cfa_offset 12
 31350              		.cfi_offset 4, -12
 31351              		.cfi_offset 5, -8
 31352              		.cfi_offset 14, -4
 31353 0002 83B0     		sub	sp, sp, #12
 31354              	.LCFI874:
 31355              		.cfi_def_cfa_offset 24
14907:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31356              		.loc 1 14907 5 is_stmt 1 view .LVU8808
 31357              	.LVL3879:
14908:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31358              		.loc 1 14908 5 view .LVU8809
 31359              		.loc 1 14908 8 is_stmt 0 view .LVU8810
 31360 0004 0023     		movs	r3, #0
 31361 0006 8DF80730 		strb	r3, [sp, #7]
14909:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31362              		.loc 1 14909 5 is_stmt 1 view .LVU8811
 31363              	.LVL3880:
14910:Core/Src/bno055.c **** 
14911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31364              		.loc 1 14912 5 view .LVU8812
 31365              		.loc 1 14912 18 is_stmt 0 view .LVU8813
 31366 000a 1F4B     		ldr	r3, .L2202
 31367 000c 1B68     		ldr	r3, [r3]
 31368              		.loc 1 14912 8 view .LVU8814
 31369 000e 002B     		cmp	r3, #0
 31370 0010 33D0     		beq	.L2198
 31371 0012 0446     		mov	r4, r0
14913:Core/Src/bno055.c ****     {
14914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14915:Core/Src/bno055.c ****     }
14916:Core/Src/bno055.c ****     else
14917:Core/Src/bno055.c ****     {
14918:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt is
14919:Core/Src/bno055.c ****          * available in the page one*/
14920:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31372              		.loc 1 14920 9 is_stmt 1 view .LVU8815
 31373              		.loc 1 14920 21 is_stmt 0 view .LVU8816
 31374 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31375              		.loc 1 14920 12 view .LVU8817
 31376 0016 012B     		cmp	r3, #1
 31377 0018 29D1     		bne	.L2201
 31378              	.LVL3881:
 31379              	.L2196:
ARM GAS  /tmp/cc9kYR4Z.s 			page 879


14921:Core/Src/bno055.c ****         {
14922:Core/Src/bno055.c ****             /* Write page as one */
14923:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14924:Core/Src/bno055.c ****         }
14925:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31380              		.loc 1 14925 53 discriminator 1 view .LVU8818
 31381 001a 1B4B     		ldr	r3, .L2202
 31382 001c 1B68     		ldr	r3, [r3]
 31383 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31384              		.loc 1 14925 41 discriminator 1 view .LVU8819
 31385 0020 012B     		cmp	r3, #1
 31386 0022 2DD1     		bne	.L2199
 31387              	.L2197:
14926:Core/Src/bno055.c ****         {
14927:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31388              		.loc 1 14927 13 is_stmt 1 view .LVU8820
 31389              		.loc 1 14927 32 is_stmt 0 view .LVU8821
 31390 0024 184B     		ldr	r3, .L2202
 31391 0026 1868     		ldr	r0, [r3]
 31392 0028 0569     		ldr	r5, [r0, #16]
 31393              		.loc 1 14927 24 view .LVU8822
 31394 002a 0123     		movs	r3, #1
 31395 002c 0DF10702 		add	r2, sp, #7
 31396 0030 1021     		movs	r1, #16
 31397 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31398 0034 A847     		blx	r5
 31399              	.LVL3882:
14928:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14929:Core/Src/bno055.c ****                                                       &data_u8r,
14930:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14931:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31400              		.loc 1 14931 13 is_stmt 1 view .LVU8823
 31401              		.loc 1 14931 16 is_stmt 0 view .LVU8824
 31402 0036 0546     		mov	r5, r0
 31403 0038 B0B9     		cbnz	r0, .L2195
14932:Core/Src/bno055.c ****             {
14933:Core/Src/bno055.c ****                 /* Write the value of accel highg interrupt*/
14934:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR, accel_high_g_u8)
 31404              		.loc 1 14934 17 is_stmt 1 view .LVU8825
 31405              		.loc 1 14934 28 is_stmt 0 view .LVU8826
 31406 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31407 003e 23F02003 		bic	r3, r3, #32
 31408 0042 5BB2     		sxtb	r3, r3
 31409 0044 6401     		lsls	r4, r4, #5
 31410 0046 04F02004 		and	r4, r4, #32
 31411 004a 2343     		orrs	r3, r3, r4
 31412              		.loc 1 14934 26 view .LVU8827
 31413 004c 8DF80730 		strb	r3, [sp, #7]
14935:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31414              		.loc 1 14935 17 is_stmt 1 view .LVU8828
 31415              		.loc 1 14935 37 is_stmt 0 view .LVU8829
 31416 0050 0D4B     		ldr	r3, .L2202
 31417 0052 1868     		ldr	r0, [r3]
 31418              	.LVL3883:
 31419              		.loc 1 14935 37 view .LVU8830
 31420 0054 C468     		ldr	r4, [r0, #12]
 31421              		.loc 1 14935 29 view .LVU8831
ARM GAS  /tmp/cc9kYR4Z.s 			page 880


 31422 0056 0123     		movs	r3, #1
 31423 0058 0DF10702 		add	r2, sp, #7
 31424 005c 1021     		movs	r1, #16
 31425 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31426 0060 A047     		blx	r4
 31427              	.LVL3884:
 31428              		.loc 1 14935 26 view .LVU8832
 31429 0062 55FA80F0 		uxtab	r0, r5, r0
 31430 0066 45B2     		sxtb	r5, r0
 31431              	.LVL3885:
 31432              	.L2195:
14936:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_REG,
14937:Core/Src/bno055.c ****                                                             &data_u8r,
14938:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14939:Core/Src/bno055.c ****             }
14940:Core/Src/bno055.c ****         }
14941:Core/Src/bno055.c ****         else
14942:Core/Src/bno055.c ****         {
14943:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14944:Core/Src/bno055.c ****         }
14945:Core/Src/bno055.c ****     }
14946:Core/Src/bno055.c **** 
14947:Core/Src/bno055.c ****     return com_rslt;
14948:Core/Src/bno055.c **** }
 31433              		.loc 1 14948 1 view .LVU8833
 31434 0068 2846     		mov	r0, r5
 31435 006a 03B0     		add	sp, sp, #12
 31436              	.LCFI875:
 31437              		.cfi_remember_state
 31438              		.cfi_def_cfa_offset 12
 31439              		@ sp needed
 31440 006c 30BD     		pop	{r4, r5, pc}
 31441              	.LVL3886:
 31442              	.L2201:
 31443              	.LCFI876:
 31444              		.cfi_restore_state
14923:Core/Src/bno055.c ****         }
 31445              		.loc 1 14923 13 is_stmt 1 view .LVU8834
14923:Core/Src/bno055.c ****         }
 31446              		.loc 1 14923 23 is_stmt 0 view .LVU8835
 31447 006e 0120     		movs	r0, #1
 31448              	.LVL3887:
14923:Core/Src/bno055.c ****         }
 31449              		.loc 1 14923 23 view .LVU8836
 31450 0070 FFF7FEFF 		bl	bno055_write_page_id
 31451              	.LVL3888:
14925:Core/Src/bno055.c ****         {
 31452              		.loc 1 14925 9 is_stmt 1 view .LVU8837
14925:Core/Src/bno055.c ****         {
 31453              		.loc 1 14925 12 is_stmt 0 view .LVU8838
 31454 0074 0028     		cmp	r0, #0
 31455 0076 D5D0     		beq	.L2197
 31456 0078 CFE7     		b	.L2196
 31457              	.LVL3889:
 31458              	.L2198:
14914:Core/Src/bno055.c ****     }
 31459              		.loc 1 14914 16 view .LVU8839
ARM GAS  /tmp/cc9kYR4Z.s 			page 881


 31460 007a 6FF07E05 		mvn	r5, #126
 31461 007e F3E7     		b	.L2195
 31462              	.LVL3890:
 31463              	.L2199:
14943:Core/Src/bno055.c ****         }
 31464              		.loc 1 14943 22 view .LVU8840
 31465 0080 4FF0FF35 		mov	r5, #-1
 31466 0084 F0E7     		b	.L2195
 31467              	.L2203:
 31468 0086 00BF     		.align	2
 31469              	.L2202:
 31470 0088 00000000 		.word	.LANCHOR0
 31471              		.cfi_endproc
 31472              	.LFE220:
 31474              		.section	.text.bno055_get_intr_accel_any_motion,"ax",%progbits
 31475              		.align	1
 31476              		.global	bno055_get_intr_accel_any_motion
 31477              		.syntax unified
 31478              		.thumb
 31479              		.thumb_func
 31481              	bno055_get_intr_accel_any_motion:
 31482              	.LVL3891:
 31483              	.LFB221:
14949:Core/Src/bno055.c **** 
14950:Core/Src/bno055.c **** /*!
14951:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt
14952:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
14953:Core/Src/bno055.c ****  *
14954:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
14955:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
14956:Core/Src/bno055.c ****  *     --------------------  |------------
14957:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14958:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14959:Core/Src/bno055.c ****  *
14960:Core/Src/bno055.c ****  *  @return results of bus communication function
14961:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14962:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14963:Core/Src/bno055.c ****  *
14964:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14965:Core/Src/bno055.c ****  *  configure the following settings
14966:Core/Src/bno055.c ****  *
14967:Core/Src/bno055.c ****  *  Axis:
14968:Core/Src/bno055.c ****  *
14969:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14970:Core/Src/bno055.c ****  *
14971:Core/Src/bno055.c ****  *  Duration:
14972:Core/Src/bno055.c ****  *
14973:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14974:Core/Src/bno055.c ****  *
14975:Core/Src/bno055.c ****  * Threshold:
14976:Core/Src/bno055.c ****  *
14977:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14978:Core/Src/bno055.c ****  *
14979:Core/Src/bno055.c ****  */
14980:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_any_motion(u8 *accel_any_motion_u8)
14981:Core/Src/bno055.c **** {
 31484              		.loc 1 14981 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9kYR4Z.s 			page 882


 31485              		.cfi_startproc
 31486              		@ args = 0, pretend = 0, frame = 8
 31487              		@ frame_needed = 0, uses_anonymous_args = 0
 31488              		.loc 1 14981 1 is_stmt 0 view .LVU8842
 31489 0000 30B5     		push	{r4, r5, lr}
 31490              	.LCFI877:
 31491              		.cfi_def_cfa_offset 12
 31492              		.cfi_offset 4, -12
 31493              		.cfi_offset 5, -8
 31494              		.cfi_offset 14, -4
 31495 0002 83B0     		sub	sp, sp, #12
 31496              	.LCFI878:
 31497              		.cfi_def_cfa_offset 24
14982:Core/Src/bno055.c ****     /* Variable used to return value of
14983:Core/Src/bno055.c ****      * communication routine*/
14984:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31498              		.loc 1 14984 5 is_stmt 1 view .LVU8843
 31499              	.LVL3892:
14985:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31500              		.loc 1 14985 5 view .LVU8844
 31501              		.loc 1 14985 8 is_stmt 0 view .LVU8845
 31502 0004 0023     		movs	r3, #0
 31503 0006 8DF80730 		strb	r3, [sp, #7]
14986:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31504              		.loc 1 14986 5 is_stmt 1 view .LVU8846
 31505              	.LVL3893:
14987:Core/Src/bno055.c **** 
14988:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14989:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31506              		.loc 1 14989 5 view .LVU8847
 31507              		.loc 1 14989 18 is_stmt 0 view .LVU8848
 31508 000a 144B     		ldr	r3, .L2212
 31509 000c 1B68     		ldr	r3, [r3]
 31510              		.loc 1 14989 8 view .LVU8849
 31511 000e F3B1     		cbz	r3, .L2208
 31512 0010 0446     		mov	r4, r0
14990:Core/Src/bno055.c ****     {
14991:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14992:Core/Src/bno055.c ****     }
14993:Core/Src/bno055.c ****     else
14994:Core/Src/bno055.c ****     {
14995:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt  is
14996:Core/Src/bno055.c ****          * available in the page one*/
14997:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31513              		.loc 1 14997 9 is_stmt 1 view .LVU8850
 31514              		.loc 1 14997 21 is_stmt 0 view .LVU8851
 31515 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31516              		.loc 1 14997 12 view .LVU8852
 31517 0014 012B     		cmp	r3, #1
 31518 0016 14D1     		bne	.L2211
 31519              	.LVL3894:
 31520              	.L2206:
14998:Core/Src/bno055.c ****         {
14999:Core/Src/bno055.c ****             /* Write page as one */
15000:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15001:Core/Src/bno055.c ****         }
15002:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
ARM GAS  /tmp/cc9kYR4Z.s 			page 883


 31521              		.loc 1 15002 53 discriminator 1 view .LVU8853
 31522 0018 104B     		ldr	r3, .L2212
 31523 001a 1B68     		ldr	r3, [r3]
 31524 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31525              		.loc 1 15002 41 discriminator 1 view .LVU8854
 31526 001e 012B     		cmp	r3, #1
 31527 0020 18D1     		bne	.L2209
 31528              	.L2207:
15003:Core/Src/bno055.c ****         {
15004:Core/Src/bno055.c ****             /* Read the value of accel anymotion interrupt */
15005:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31529              		.loc 1 15005 13 is_stmt 1 view .LVU8855
 31530              		.loc 1 15005 32 is_stmt 0 view .LVU8856
 31531 0022 0E4B     		ldr	r3, .L2212
 31532 0024 1868     		ldr	r0, [r3]
 31533 0026 0569     		ldr	r5, [r0, #16]
 31534              		.loc 1 15005 24 view .LVU8857
 31535 0028 0123     		movs	r3, #1
 31536 002a 0DF10702 		add	r2, sp, #7
 31537 002e 1021     		movs	r1, #16
 31538 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31539 0032 A847     		blx	r5
 31540              	.LVL3895:
15006:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15007:Core/Src/bno055.c ****                                                       &data_u8r,
15008:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15009:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR);
 31541              		.loc 1 15009 13 is_stmt 1 view .LVU8858
 31542              		.loc 1 15009 36 is_stmt 0 view .LVU8859
 31543 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31544 0038 C3F38013 		ubfx	r3, r3, #6, #1
 31545              		.loc 1 15009 34 view .LVU8860
 31546 003c 2370     		strb	r3, [r4]
 31547              	.LVL3896:
 31548              	.L2205:
15010:Core/Src/bno055.c ****         }
15011:Core/Src/bno055.c ****         else
15012:Core/Src/bno055.c ****         {
15013:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15014:Core/Src/bno055.c ****         }
15015:Core/Src/bno055.c ****     }
15016:Core/Src/bno055.c **** 
15017:Core/Src/bno055.c ****     return com_rslt;
15018:Core/Src/bno055.c **** }
 31549              		.loc 1 15018 1 view .LVU8861
 31550 003e 03B0     		add	sp, sp, #12
 31551              	.LCFI879:
 31552              		.cfi_remember_state
 31553              		.cfi_def_cfa_offset 12
 31554              		@ sp needed
 31555 0040 30BD     		pop	{r4, r5, pc}
 31556              	.LVL3897:
 31557              	.L2211:
 31558              	.LCFI880:
 31559              		.cfi_restore_state
15000:Core/Src/bno055.c ****         }
 31560              		.loc 1 15000 13 is_stmt 1 view .LVU8862
ARM GAS  /tmp/cc9kYR4Z.s 			page 884


15000:Core/Src/bno055.c ****         }
 31561              		.loc 1 15000 23 is_stmt 0 view .LVU8863
 31562 0042 0120     		movs	r0, #1
 31563              	.LVL3898:
15000:Core/Src/bno055.c ****         }
 31564              		.loc 1 15000 23 view .LVU8864
 31565 0044 FFF7FEFF 		bl	bno055_write_page_id
 31566              	.LVL3899:
15002:Core/Src/bno055.c ****         {
 31567              		.loc 1 15002 9 is_stmt 1 view .LVU8865
15002:Core/Src/bno055.c ****         {
 31568              		.loc 1 15002 12 is_stmt 0 view .LVU8866
 31569 0048 0028     		cmp	r0, #0
 31570 004a EAD0     		beq	.L2207
 31571 004c E4E7     		b	.L2206
 31572              	.LVL3900:
 31573              	.L2208:
14991:Core/Src/bno055.c ****     }
 31574              		.loc 1 14991 16 view .LVU8867
 31575 004e 6FF07E00 		mvn	r0, #126
 31576              	.LVL3901:
14991:Core/Src/bno055.c ****     }
 31577              		.loc 1 14991 16 view .LVU8868
 31578 0052 F4E7     		b	.L2205
 31579              	.LVL3902:
 31580              	.L2209:
15013:Core/Src/bno055.c ****         }
 31581              		.loc 1 15013 22 view .LVU8869
 31582 0054 4FF0FF30 		mov	r0, #-1
 31583 0058 F1E7     		b	.L2205
 31584              	.L2213:
 31585 005a 00BF     		.align	2
 31586              	.L2212:
 31587 005c 00000000 		.word	.LANCHOR0
 31588              		.cfi_endproc
 31589              	.LFE221:
 31591              		.section	.text.bno055_set_intr_accel_any_motion,"ax",%progbits
 31592              		.align	1
 31593              		.global	bno055_set_intr_accel_any_motion
 31594              		.syntax unified
 31595              		.thumb
 31596              		.thumb_func
 31598              	bno055_set_intr_accel_any_motion:
 31599              	.LVL3903:
 31600              	.LFB222:
15019:Core/Src/bno055.c **** 
15020:Core/Src/bno055.c **** /*!
15021:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt
15022:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15023:Core/Src/bno055.c ****  *
15024:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
15025:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
15026:Core/Src/bno055.c ****  *     --------------------  |------------
15027:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15028:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15029:Core/Src/bno055.c ****  *
15030:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/cc9kYR4Z.s 			page 885


15031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15033:Core/Src/bno055.c ****  *
15034:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
15035:Core/Src/bno055.c ****  *  configure the following settings
15036:Core/Src/bno055.c ****  *
15037:Core/Src/bno055.c ****  *  Axis:
15038:Core/Src/bno055.c ****  *
15039:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15040:Core/Src/bno055.c ****  *
15041:Core/Src/bno055.c ****  *  Duration:
15042:Core/Src/bno055.c ****  *
15043:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
15044:Core/Src/bno055.c ****  *
15045:Core/Src/bno055.c ****  *  Threshold:
15046:Core/Src/bno055.c ****  *
15047:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
15048:Core/Src/bno055.c ****  *
15049:Core/Src/bno055.c ****  */
15050:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_any_motion(u8 accel_any_motion_u8)
15051:Core/Src/bno055.c **** {
 31601              		.loc 1 15051 1 is_stmt 1 view -0
 31602              		.cfi_startproc
 31603              		@ args = 0, pretend = 0, frame = 8
 31604              		@ frame_needed = 0, uses_anonymous_args = 0
 31605              		.loc 1 15051 1 is_stmt 0 view .LVU8871
 31606 0000 30B5     		push	{r4, r5, lr}
 31607              	.LCFI881:
 31608              		.cfi_def_cfa_offset 12
 31609              		.cfi_offset 4, -12
 31610              		.cfi_offset 5, -8
 31611              		.cfi_offset 14, -4
 31612 0002 83B0     		sub	sp, sp, #12
 31613              	.LCFI882:
 31614              		.cfi_def_cfa_offset 24
15052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31615              		.loc 1 15052 5 is_stmt 1 view .LVU8872
 31616              	.LVL3904:
15053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31617              		.loc 1 15053 5 view .LVU8873
 31618              		.loc 1 15053 8 is_stmt 0 view .LVU8874
 31619 0004 0023     		movs	r3, #0
 31620 0006 8DF80730 		strb	r3, [sp, #7]
15054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31621              		.loc 1 15054 5 is_stmt 1 view .LVU8875
 31622              	.LVL3905:
15055:Core/Src/bno055.c **** 
15056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31623              		.loc 1 15057 5 view .LVU8876
 31624              		.loc 1 15057 18 is_stmt 0 view .LVU8877
 31625 000a 1F4B     		ldr	r3, .L2222
 31626 000c 1B68     		ldr	r3, [r3]
 31627              		.loc 1 15057 8 view .LVU8878
 31628 000e 002B     		cmp	r3, #0
 31629 0010 33D0     		beq	.L2218
 31630 0012 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 886


15058:Core/Src/bno055.c ****     {
15059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15060:Core/Src/bno055.c ****     }
15061:Core/Src/bno055.c ****     else
15062:Core/Src/bno055.c ****     {
15063:Core/Src/bno055.c ****         /*condition check for page, accel range is
15064:Core/Src/bno055.c ****          * available in the page one*/
15065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31631              		.loc 1 15065 9 is_stmt 1 view .LVU8879
 31632              		.loc 1 15065 21 is_stmt 0 view .LVU8880
 31633 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31634              		.loc 1 15065 12 view .LVU8881
 31635 0016 012B     		cmp	r3, #1
 31636 0018 29D1     		bne	.L2221
 31637              	.LVL3906:
 31638              	.L2216:
15066:Core/Src/bno055.c ****         {
15067:Core/Src/bno055.c ****             /* Write page as one */
15068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15069:Core/Src/bno055.c ****         }
15070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31639              		.loc 1 15070 53 discriminator 1 view .LVU8882
 31640 001a 1B4B     		ldr	r3, .L2222
 31641 001c 1B68     		ldr	r3, [r3]
 31642 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31643              		.loc 1 15070 41 discriminator 1 view .LVU8883
 31644 0020 012B     		cmp	r3, #1
 31645 0022 2DD1     		bne	.L2219
 31646              	.L2217:
15071:Core/Src/bno055.c ****         {
15072:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt */
15073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31647              		.loc 1 15073 13 is_stmt 1 view .LVU8884
 31648              		.loc 1 15073 32 is_stmt 0 view .LVU8885
 31649 0024 184B     		ldr	r3, .L2222
 31650 0026 1868     		ldr	r0, [r3]
 31651 0028 0569     		ldr	r5, [r0, #16]
 31652              		.loc 1 15073 24 view .LVU8886
 31653 002a 0123     		movs	r3, #1
 31654 002c 0DF10702 		add	r2, sp, #7
 31655 0030 1021     		movs	r1, #16
 31656 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31657 0034 A847     		blx	r5
 31658              	.LVL3907:
15074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15075:Core/Src/bno055.c ****                                                       &data_u8r,
15076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15077:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31659              		.loc 1 15077 13 is_stmt 1 view .LVU8887
 31660              		.loc 1 15077 16 is_stmt 0 view .LVU8888
 31661 0036 0546     		mov	r5, r0
 31662 0038 B0B9     		cbnz	r0, .L2215
15078:Core/Src/bno055.c ****             {
15079:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR, accel_any_mo
 31663              		.loc 1 15079 17 is_stmt 1 view .LVU8889
 31664              		.loc 1 15079 28 is_stmt 0 view .LVU8890
 31665 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 887


 31666 003e 23F04003 		bic	r3, r3, #64
 31667 0042 5BB2     		sxtb	r3, r3
 31668 0044 A401     		lsls	r4, r4, #6
 31669 0046 04F04004 		and	r4, r4, #64
 31670 004a 2343     		orrs	r3, r3, r4
 31671              		.loc 1 15079 26 view .LVU8891
 31672 004c 8DF80730 		strb	r3, [sp, #7]
15080:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31673              		.loc 1 15080 17 is_stmt 1 view .LVU8892
 31674              		.loc 1 15080 37 is_stmt 0 view .LVU8893
 31675 0050 0D4B     		ldr	r3, .L2222
 31676 0052 1868     		ldr	r0, [r3]
 31677              	.LVL3908:
 31678              		.loc 1 15080 37 view .LVU8894
 31679 0054 C468     		ldr	r4, [r0, #12]
 31680              		.loc 1 15080 29 view .LVU8895
 31681 0056 0123     		movs	r3, #1
 31682 0058 0DF10702 		add	r2, sp, #7
 31683 005c 1021     		movs	r1, #16
 31684 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31685 0060 A047     		blx	r4
 31686              	.LVL3909:
 31687              		.loc 1 15080 26 view .LVU8896
 31688 0062 55FA80F0 		uxtab	r0, r5, r0
 31689 0066 45B2     		sxtb	r5, r0
 31690              	.LVL3910:
 31691              	.L2215:
15081:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_REG,
15082:Core/Src/bno055.c ****                                                             &data_u8r,
15083:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15084:Core/Src/bno055.c ****             }
15085:Core/Src/bno055.c ****         }
15086:Core/Src/bno055.c ****         else
15087:Core/Src/bno055.c ****         {
15088:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15089:Core/Src/bno055.c ****         }
15090:Core/Src/bno055.c ****     }
15091:Core/Src/bno055.c **** 
15092:Core/Src/bno055.c ****     return com_rslt;
15093:Core/Src/bno055.c **** }
 31692              		.loc 1 15093 1 view .LVU8897
 31693 0068 2846     		mov	r0, r5
 31694 006a 03B0     		add	sp, sp, #12
 31695              	.LCFI883:
 31696              		.cfi_remember_state
 31697              		.cfi_def_cfa_offset 12
 31698              		@ sp needed
 31699 006c 30BD     		pop	{r4, r5, pc}
 31700              	.LVL3911:
 31701              	.L2221:
 31702              	.LCFI884:
 31703              		.cfi_restore_state
15068:Core/Src/bno055.c ****         }
 31704              		.loc 1 15068 13 is_stmt 1 view .LVU8898
15068:Core/Src/bno055.c ****         }
 31705              		.loc 1 15068 23 is_stmt 0 view .LVU8899
 31706 006e 0120     		movs	r0, #1
ARM GAS  /tmp/cc9kYR4Z.s 			page 888


 31707              	.LVL3912:
15068:Core/Src/bno055.c ****         }
 31708              		.loc 1 15068 23 view .LVU8900
 31709 0070 FFF7FEFF 		bl	bno055_write_page_id
 31710              	.LVL3913:
15070:Core/Src/bno055.c ****         {
 31711              		.loc 1 15070 9 is_stmt 1 view .LVU8901
15070:Core/Src/bno055.c ****         {
 31712              		.loc 1 15070 12 is_stmt 0 view .LVU8902
 31713 0074 0028     		cmp	r0, #0
 31714 0076 D5D0     		beq	.L2217
 31715 0078 CFE7     		b	.L2216
 31716              	.LVL3914:
 31717              	.L2218:
15059:Core/Src/bno055.c ****     }
 31718              		.loc 1 15059 16 view .LVU8903
 31719 007a 6FF07E05 		mvn	r5, #126
 31720 007e F3E7     		b	.L2215
 31721              	.LVL3915:
 31722              	.L2219:
15088:Core/Src/bno055.c ****         }
 31723              		.loc 1 15088 22 view .LVU8904
 31724 0080 4FF0FF35 		mov	r5, #-1
 31725 0084 F0E7     		b	.L2215
 31726              	.L2223:
 31727 0086 00BF     		.align	2
 31728              	.L2222:
 31729 0088 00000000 		.word	.LANCHOR0
 31730              		.cfi_endproc
 31731              	.LFE222:
 31733              		.section	.text.bno055_get_intr_accel_no_motion,"ax",%progbits
 31734              		.align	1
 31735              		.global	bno055_get_intr_accel_no_motion
 31736              		.syntax unified
 31737              		.thumb
 31738              		.thumb_func
 31740              	bno055_get_intr_accel_no_motion:
 31741              	.LVL3916:
 31742              	.LFB223:
15094:Core/Src/bno055.c **** 
15095:Core/Src/bno055.c **** /*!
15096:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt
15097:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15098:Core/Src/bno055.c ****  *
15099:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15100:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15101:Core/Src/bno055.c ****  *     --------------------  |------------
15102:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15103:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15104:Core/Src/bno055.c ****  *
15105:Core/Src/bno055.c ****  *  @return results of bus communication function
15106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15108:Core/Src/bno055.c ****  *
15109:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15110:Core/Src/bno055.c ****  *  configure the following settings
15111:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 889


15112:Core/Src/bno055.c ****  *  Axis:
15113:Core/Src/bno055.c ****  *
15114:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15115:Core/Src/bno055.c ****  *
15116:Core/Src/bno055.c ****  *  Threshold :
15117:Core/Src/bno055.c ****  *
15118:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15119:Core/Src/bno055.c ****  *
15120:Core/Src/bno055.c ****  *  Duration :
15121:Core/Src/bno055.c ****  *
15122:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15123:Core/Src/bno055.c ****  *
15124:Core/Src/bno055.c ****  *  Slow/no motion enable:
15125:Core/Src/bno055.c ****  *
15126:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15127:Core/Src/bno055.c ****  *
15128:Core/Src/bno055.c ****  */
15129:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_no_motion(u8 *accel_nomotion_u8)
15130:Core/Src/bno055.c **** {
 31743              		.loc 1 15130 1 is_stmt 1 view -0
 31744              		.cfi_startproc
 31745              		@ args = 0, pretend = 0, frame = 8
 31746              		@ frame_needed = 0, uses_anonymous_args = 0
 31747              		.loc 1 15130 1 is_stmt 0 view .LVU8906
 31748 0000 30B5     		push	{r4, r5, lr}
 31749              	.LCFI885:
 31750              		.cfi_def_cfa_offset 12
 31751              		.cfi_offset 4, -12
 31752              		.cfi_offset 5, -8
 31753              		.cfi_offset 14, -4
 31754 0002 83B0     		sub	sp, sp, #12
 31755              	.LCFI886:
 31756              		.cfi_def_cfa_offset 24
15131:Core/Src/bno055.c ****     /* Variable used to return value of
15132:Core/Src/bno055.c ****      * communication routine*/
15133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31757              		.loc 1 15133 5 is_stmt 1 view .LVU8907
 31758              	.LVL3917:
15134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31759              		.loc 1 15134 5 view .LVU8908
 31760              		.loc 1 15134 8 is_stmt 0 view .LVU8909
 31761 0004 0023     		movs	r3, #0
 31762 0006 8DF80730 		strb	r3, [sp, #7]
15135:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31763              		.loc 1 15135 5 is_stmt 1 view .LVU8910
 31764              	.LVL3918:
15136:Core/Src/bno055.c **** 
15137:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15138:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31765              		.loc 1 15138 5 view .LVU8911
 31766              		.loc 1 15138 18 is_stmt 0 view .LVU8912
 31767 000a 134B     		ldr	r3, .L2232
 31768 000c 1B68     		ldr	r3, [r3]
 31769              		.loc 1 15138 8 view .LVU8913
 31770 000e EBB1     		cbz	r3, .L2228
 31771 0010 0446     		mov	r4, r0
15139:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 890


15140:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15141:Core/Src/bno055.c ****     }
15142:Core/Src/bno055.c ****     else
15143:Core/Src/bno055.c ****     {
15144:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt is
15145:Core/Src/bno055.c ****          * available in the page one*/
15146:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31772              		.loc 1 15146 9 is_stmt 1 view .LVU8914
 31773              		.loc 1 15146 21 is_stmt 0 view .LVU8915
 31774 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31775              		.loc 1 15146 12 view .LVU8916
 31776 0014 012B     		cmp	r3, #1
 31777 0016 13D1     		bne	.L2231
 31778              	.LVL3919:
 31779              	.L2226:
15147:Core/Src/bno055.c ****         {
15148:Core/Src/bno055.c ****             /* Write page as one */
15149:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15150:Core/Src/bno055.c ****         }
15151:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31780              		.loc 1 15151 53 discriminator 1 view .LVU8917
 31781 0018 0F4B     		ldr	r3, .L2232
 31782 001a 1B68     		ldr	r3, [r3]
 31783 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31784              		.loc 1 15151 41 discriminator 1 view .LVU8918
 31785 001e 012B     		cmp	r3, #1
 31786 0020 17D1     		bne	.L2229
 31787              	.L2227:
15152:Core/Src/bno055.c ****         {
15153:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt*/
15154:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31788              		.loc 1 15154 13 is_stmt 1 view .LVU8919
 31789              		.loc 1 15154 32 is_stmt 0 view .LVU8920
 31790 0022 0D4B     		ldr	r3, .L2232
 31791 0024 1868     		ldr	r0, [r3]
 31792 0026 0569     		ldr	r5, [r0, #16]
 31793              		.loc 1 15154 24 view .LVU8921
 31794 0028 0123     		movs	r3, #1
 31795 002a 0DF10702 		add	r2, sp, #7
 31796 002e 1021     		movs	r1, #16
 31797 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31798 0032 A847     		blx	r5
 31799              	.LVL3920:
15155:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15156:Core/Src/bno055.c ****                                                       &data_u8r,
15157:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15158:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR);
 31800              		.loc 1 15158 13 is_stmt 1 view .LVU8922
 31801              		.loc 1 15158 34 is_stmt 0 view .LVU8923
 31802 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31803 0038 DB09     		lsrs	r3, r3, #7
 31804              		.loc 1 15158 32 view .LVU8924
 31805 003a 2370     		strb	r3, [r4]
 31806              	.LVL3921:
 31807              	.L2225:
15159:Core/Src/bno055.c ****         }
15160:Core/Src/bno055.c ****         else
ARM GAS  /tmp/cc9kYR4Z.s 			page 891


15161:Core/Src/bno055.c ****         {
15162:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15163:Core/Src/bno055.c ****         }
15164:Core/Src/bno055.c ****     }
15165:Core/Src/bno055.c **** 
15166:Core/Src/bno055.c ****     return com_rslt;
15167:Core/Src/bno055.c **** }
 31808              		.loc 1 15167 1 view .LVU8925
 31809 003c 03B0     		add	sp, sp, #12
 31810              	.LCFI887:
 31811              		.cfi_remember_state
 31812              		.cfi_def_cfa_offset 12
 31813              		@ sp needed
 31814 003e 30BD     		pop	{r4, r5, pc}
 31815              	.LVL3922:
 31816              	.L2231:
 31817              	.LCFI888:
 31818              		.cfi_restore_state
15149:Core/Src/bno055.c ****         }
 31819              		.loc 1 15149 13 is_stmt 1 view .LVU8926
15149:Core/Src/bno055.c ****         }
 31820              		.loc 1 15149 23 is_stmt 0 view .LVU8927
 31821 0040 0120     		movs	r0, #1
 31822              	.LVL3923:
15149:Core/Src/bno055.c ****         }
 31823              		.loc 1 15149 23 view .LVU8928
 31824 0042 FFF7FEFF 		bl	bno055_write_page_id
 31825              	.LVL3924:
15151:Core/Src/bno055.c ****         {
 31826              		.loc 1 15151 9 is_stmt 1 view .LVU8929
15151:Core/Src/bno055.c ****         {
 31827              		.loc 1 15151 12 is_stmt 0 view .LVU8930
 31828 0046 0028     		cmp	r0, #0
 31829 0048 EBD0     		beq	.L2227
 31830 004a E5E7     		b	.L2226
 31831              	.LVL3925:
 31832              	.L2228:
15140:Core/Src/bno055.c ****     }
 31833              		.loc 1 15140 16 view .LVU8931
 31834 004c 6FF07E00 		mvn	r0, #126
 31835              	.LVL3926:
15140:Core/Src/bno055.c ****     }
 31836              		.loc 1 15140 16 view .LVU8932
 31837 0050 F4E7     		b	.L2225
 31838              	.LVL3927:
 31839              	.L2229:
15162:Core/Src/bno055.c ****         }
 31840              		.loc 1 15162 22 view .LVU8933
 31841 0052 4FF0FF30 		mov	r0, #-1
 31842 0056 F1E7     		b	.L2225
 31843              	.L2233:
 31844              		.align	2
 31845              	.L2232:
 31846 0058 00000000 		.word	.LANCHOR0
 31847              		.cfi_endproc
 31848              	.LFE223:
 31850              		.section	.text.bno055_set_intr_accel_no_motion,"ax",%progbits
ARM GAS  /tmp/cc9kYR4Z.s 			page 892


 31851              		.align	1
 31852              		.global	bno055_set_intr_accel_no_motion
 31853              		.syntax unified
 31854              		.thumb
 31855              		.thumb_func
 31857              	bno055_set_intr_accel_no_motion:
 31858              	.LVL3928:
 31859              	.LFB224:
15168:Core/Src/bno055.c **** 
15169:Core/Src/bno055.c **** /*!
15170:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt
15171:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15172:Core/Src/bno055.c ****  *
15173:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15174:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15175:Core/Src/bno055.c ****  *     --------------------  |------------
15176:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15177:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15178:Core/Src/bno055.c ****  *
15179:Core/Src/bno055.c ****  *  @return results of bus communication function
15180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15182:Core/Src/bno055.c ****  *
15183:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15184:Core/Src/bno055.c ****  *  configure the following settings
15185:Core/Src/bno055.c ****  *
15186:Core/Src/bno055.c ****  *  Axis:
15187:Core/Src/bno055.c ****  *
15188:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15189:Core/Src/bno055.c ****  *
15190:Core/Src/bno055.c ****  *  Threshold :
15191:Core/Src/bno055.c ****  *
15192:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15193:Core/Src/bno055.c ****  *
15194:Core/Src/bno055.c ****  *  Duration :
15195:Core/Src/bno055.c ****  *
15196:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15197:Core/Src/bno055.c ****  *
15198:Core/Src/bno055.c ****  *  Slow/no motion enable:
15199:Core/Src/bno055.c ****  *
15200:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15201:Core/Src/bno055.c ****  *
15202:Core/Src/bno055.c ****  */
15203:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_no_motion(u8 accel_nomotion_u8)
15204:Core/Src/bno055.c **** {
 31860              		.loc 1 15204 1 is_stmt 1 view -0
 31861              		.cfi_startproc
 31862              		@ args = 0, pretend = 0, frame = 8
 31863              		@ frame_needed = 0, uses_anonymous_args = 0
 31864              		.loc 1 15204 1 is_stmt 0 view .LVU8935
 31865 0000 30B5     		push	{r4, r5, lr}
 31866              	.LCFI889:
 31867              		.cfi_def_cfa_offset 12
 31868              		.cfi_offset 4, -12
 31869              		.cfi_offset 5, -8
 31870              		.cfi_offset 14, -4
 31871 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc9kYR4Z.s 			page 893


 31872              	.LCFI890:
 31873              		.cfi_def_cfa_offset 24
15205:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31874              		.loc 1 15205 5 is_stmt 1 view .LVU8936
 31875              	.LVL3929:
15206:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31876              		.loc 1 15206 5 view .LVU8937
 31877              		.loc 1 15206 8 is_stmt 0 view .LVU8938
 31878 0004 0023     		movs	r3, #0
 31879 0006 8DF80730 		strb	r3, [sp, #7]
15207:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31880              		.loc 1 15207 5 is_stmt 1 view .LVU8939
 31881              	.LVL3930:
15208:Core/Src/bno055.c **** 
15209:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15210:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31882              		.loc 1 15210 5 view .LVU8940
 31883              		.loc 1 15210 18 is_stmt 0 view .LVU8941
 31884 000a 1D4B     		ldr	r3, .L2242
 31885 000c 1B68     		ldr	r3, [r3]
 31886              		.loc 1 15210 8 view .LVU8942
 31887 000e 002B     		cmp	r3, #0
 31888 0010 30D0     		beq	.L2238
 31889 0012 0446     		mov	r4, r0
15211:Core/Src/bno055.c ****     {
15212:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15213:Core/Src/bno055.c ****     }
15214:Core/Src/bno055.c ****     else
15215:Core/Src/bno055.c ****     {
15216:Core/Src/bno055.c ****         /*condition check for page,
15217:Core/Src/bno055.c ****          *  accel nomotion interrupt is
15218:Core/Src/bno055.c ****          *  available in the page one*/
15219:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31890              		.loc 1 15219 9 is_stmt 1 view .LVU8943
 31891              		.loc 1 15219 21 is_stmt 0 view .LVU8944
 31892 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31893              		.loc 1 15219 12 view .LVU8945
 31894 0016 012B     		cmp	r3, #1
 31895 0018 26D1     		bne	.L2241
 31896              	.LVL3931:
 31897              	.L2236:
15220:Core/Src/bno055.c ****         {
15221:Core/Src/bno055.c ****             /* Write page as one */
15222:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15223:Core/Src/bno055.c ****         }
15224:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31898              		.loc 1 15224 53 discriminator 1 view .LVU8946
 31899 001a 194B     		ldr	r3, .L2242
 31900 001c 1B68     		ldr	r3, [r3]
 31901 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31902              		.loc 1 15224 41 discriminator 1 view .LVU8947
 31903 0020 012B     		cmp	r3, #1
 31904 0022 2AD1     		bne	.L2239
 31905              	.L2237:
15225:Core/Src/bno055.c ****         {
15226:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31906              		.loc 1 15226 13 is_stmt 1 view .LVU8948
ARM GAS  /tmp/cc9kYR4Z.s 			page 894


 31907              		.loc 1 15226 32 is_stmt 0 view .LVU8949
 31908 0024 164B     		ldr	r3, .L2242
 31909 0026 1868     		ldr	r0, [r3]
 31910 0028 0569     		ldr	r5, [r0, #16]
 31911              		.loc 1 15226 24 view .LVU8950
 31912 002a 0123     		movs	r3, #1
 31913 002c 0DF10702 		add	r2, sp, #7
 31914 0030 1021     		movs	r1, #16
 31915 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31916 0034 A847     		blx	r5
 31917              	.LVL3932:
15227:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15228:Core/Src/bno055.c ****                                                       &data_u8r,
15229:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15230:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31918              		.loc 1 15230 13 is_stmt 1 view .LVU8951
 31919              		.loc 1 15230 16 is_stmt 0 view .LVU8952
 31920 0036 0546     		mov	r5, r0
 31921 0038 98B9     		cbnz	r0, .L2235
15231:Core/Src/bno055.c ****             {
15232:Core/Src/bno055.c ****                 /* Write the value of
15233:Core/Src/bno055.c ****                  * accel nomotion interrupt */
15234:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR, accel_nomotio
 31922              		.loc 1 15234 17 is_stmt 1 view .LVU8953
 31923              		.loc 1 15234 28 is_stmt 0 view .LVU8954
 31924 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31925 003e 03F07F03 		and	r3, r3, #127
 31926 0042 43EAC413 		orr	r3, r3, r4, lsl #7
 31927              		.loc 1 15234 26 view .LVU8955
 31928 0046 8DF80730 		strb	r3, [sp, #7]
15235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31929              		.loc 1 15235 17 is_stmt 1 view .LVU8956
 31930              		.loc 1 15235 37 is_stmt 0 view .LVU8957
 31931 004a 0D4B     		ldr	r3, .L2242
 31932 004c 1868     		ldr	r0, [r3]
 31933              	.LVL3933:
 31934              		.loc 1 15235 37 view .LVU8958
 31935 004e C468     		ldr	r4, [r0, #12]
 31936              		.loc 1 15235 29 view .LVU8959
 31937 0050 0123     		movs	r3, #1
 31938 0052 0DF10702 		add	r2, sp, #7
 31939 0056 1021     		movs	r1, #16
 31940 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31941 005a A047     		blx	r4
 31942              	.LVL3934:
 31943              		.loc 1 15235 26 view .LVU8960
 31944 005c 55FA80F0 		uxtab	r0, r5, r0
 31945 0060 45B2     		sxtb	r5, r0
 31946              	.LVL3935:
 31947              	.L2235:
15236:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_REG,
15237:Core/Src/bno055.c ****                                                             &data_u8r,
15238:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15239:Core/Src/bno055.c ****             }
15240:Core/Src/bno055.c ****         }
15241:Core/Src/bno055.c ****         else
15242:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 895


15243:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15244:Core/Src/bno055.c ****         }
15245:Core/Src/bno055.c ****     }
15246:Core/Src/bno055.c **** 
15247:Core/Src/bno055.c ****     return com_rslt;
15248:Core/Src/bno055.c **** }
 31948              		.loc 1 15248 1 view .LVU8961
 31949 0062 2846     		mov	r0, r5
 31950 0064 03B0     		add	sp, sp, #12
 31951              	.LCFI891:
 31952              		.cfi_remember_state
 31953              		.cfi_def_cfa_offset 12
 31954              		@ sp needed
 31955 0066 30BD     		pop	{r4, r5, pc}
 31956              	.LVL3936:
 31957              	.L2241:
 31958              	.LCFI892:
 31959              		.cfi_restore_state
15222:Core/Src/bno055.c ****         }
 31960              		.loc 1 15222 13 is_stmt 1 view .LVU8962
15222:Core/Src/bno055.c ****         }
 31961              		.loc 1 15222 23 is_stmt 0 view .LVU8963
 31962 0068 0120     		movs	r0, #1
 31963              	.LVL3937:
15222:Core/Src/bno055.c ****         }
 31964              		.loc 1 15222 23 view .LVU8964
 31965 006a FFF7FEFF 		bl	bno055_write_page_id
 31966              	.LVL3938:
15224:Core/Src/bno055.c ****         {
 31967              		.loc 1 15224 9 is_stmt 1 view .LVU8965
15224:Core/Src/bno055.c ****         {
 31968              		.loc 1 15224 12 is_stmt 0 view .LVU8966
 31969 006e 0028     		cmp	r0, #0
 31970 0070 D8D0     		beq	.L2237
 31971 0072 D2E7     		b	.L2236
 31972              	.LVL3939:
 31973              	.L2238:
15212:Core/Src/bno055.c ****     }
 31974              		.loc 1 15212 16 view .LVU8967
 31975 0074 6FF07E05 		mvn	r5, #126
 31976 0078 F3E7     		b	.L2235
 31977              	.LVL3940:
 31978              	.L2239:
15243:Core/Src/bno055.c ****         }
 31979              		.loc 1 15243 22 view .LVU8968
 31980 007a 4FF0FF35 		mov	r5, #-1
 31981 007e F0E7     		b	.L2235
 31982              	.L2243:
 31983              		.align	2
 31984              	.L2242:
 31985 0080 00000000 		.word	.LANCHOR0
 31986              		.cfi_endproc
 31987              	.LFE224:
 31989              		.section	.text.bno055_get_accel_any_motion_thres,"ax",%progbits
 31990              		.align	1
 31991              		.global	bno055_get_accel_any_motion_thres
 31992              		.syntax unified
ARM GAS  /tmp/cc9kYR4Z.s 			page 896


 31993              		.thumb
 31994              		.thumb_func
 31996              	bno055_get_accel_any_motion_thres:
 31997              	.LVL3941:
 31998              	.LFB225:
15249:Core/Src/bno055.c **** 
15250:Core/Src/bno055.c **** /*!
15251:Core/Src/bno055.c ****  *  @brief This API used to read the accel any motion threshold
15252:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15253:Core/Src/bno055.c ****  *
15254:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15255:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15256:Core/Src/bno055.c ****  *  ------------------------    | -------------
15257:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15258:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15259:Core/Src/bno055.c ****  *
15260:Core/Src/bno055.c ****  *  @return results of bus communication function
15261:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15262:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15263:Core/Src/bno055.c ****  *
15264:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15265:Core/Src/bno055.c ****  *  range values
15266:Core/Src/bno055.c ****  *
15267:Core/Src/bno055.c ****  *  accel_range_u8 |    threshold | LSB
15268:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15269:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15270:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15271:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15272:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15273:Core/Src/bno055.c ****  *
15274:Core/Src/bno055.c ****  */
15275:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_thres(u8 *accel_any_motion_thres_u8)
15276:Core/Src/bno055.c **** {
 31999              		.loc 1 15276 1 is_stmt 1 view -0
 32000              		.cfi_startproc
 32001              		@ args = 0, pretend = 0, frame = 8
 32002              		@ frame_needed = 0, uses_anonymous_args = 0
 32003              		.loc 1 15276 1 is_stmt 0 view .LVU8970
 32004 0000 70B5     		push	{r4, r5, r6, lr}
 32005              	.LCFI893:
 32006              		.cfi_def_cfa_offset 16
 32007              		.cfi_offset 4, -16
 32008              		.cfi_offset 5, -12
 32009              		.cfi_offset 6, -8
 32010              		.cfi_offset 14, -4
 32011 0002 82B0     		sub	sp, sp, #8
 32012              	.LCFI894:
 32013              		.cfi_def_cfa_offset 24
15277:Core/Src/bno055.c ****     /* Variable used to return value of
15278:Core/Src/bno055.c ****      * communication routine*/
15279:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32014              		.loc 1 15279 5 is_stmt 1 view .LVU8971
 32015              	.LVL3942:
15280:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32016              		.loc 1 15280 5 view .LVU8972
 32017              		.loc 1 15280 8 is_stmt 0 view .LVU8973
 32018 0004 0023     		movs	r3, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 897


 32019 0006 8DF80730 		strb	r3, [sp, #7]
15281:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32020              		.loc 1 15281 5 is_stmt 1 view .LVU8974
 32021              	.LVL3943:
15282:Core/Src/bno055.c **** 
15283:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15284:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32022              		.loc 1 15284 5 view .LVU8975
 32023              		.loc 1 15284 18 is_stmt 0 view .LVU8976
 32024 000a 134B     		ldr	r3, .L2252
 32025 000c 1B68     		ldr	r3, [r3]
 32026              		.loc 1 15284 8 view .LVU8977
 32027 000e E3B1     		cbz	r3, .L2248
 32028 0010 0546     		mov	r5, r0
15285:Core/Src/bno055.c ****     {
15286:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15287:Core/Src/bno055.c ****     }
15288:Core/Src/bno055.c ****     else
15289:Core/Src/bno055.c ****     {
15290:Core/Src/bno055.c ****         /*condition check for page, accel any motion threshold  is
15291:Core/Src/bno055.c ****          * available in the page one*/
15292:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32029              		.loc 1 15292 9 is_stmt 1 view .LVU8978
 32030              		.loc 1 15292 21 is_stmt 0 view .LVU8979
 32031 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32032              		.loc 1 15292 12 view .LVU8980
 32033 0014 012B     		cmp	r3, #1
 32034 0016 12D1     		bne	.L2251
 32035              	.LVL3944:
 32036              	.L2246:
15293:Core/Src/bno055.c ****         {
15294:Core/Src/bno055.c ****             /* Write page as one */
15295:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15296:Core/Src/bno055.c ****         }
15297:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32037              		.loc 1 15297 53 discriminator 1 view .LVU8981
 32038 0018 0F4B     		ldr	r3, .L2252
 32039 001a 1B68     		ldr	r3, [r3]
 32040 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32041              		.loc 1 15297 41 discriminator 1 view .LVU8982
 32042 001e 012B     		cmp	r3, #1
 32043 0020 16D1     		bne	.L2249
 32044              	.L2247:
15298:Core/Src/bno055.c ****         {
15299:Core/Src/bno055.c ****             /* Read the value of accel any motion threshold */
15300:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32045              		.loc 1 15300 13 is_stmt 1 view .LVU8983
 32046              		.loc 1 15300 32 is_stmt 0 view .LVU8984
 32047 0022 0D4B     		ldr	r3, .L2252
 32048 0024 1C68     		ldr	r4, [r3]
 32049 0026 2669     		ldr	r6, [r4, #16]
 32050              		.loc 1 15300 24 view .LVU8985
 32051 0028 0123     		movs	r3, #1
 32052 002a 0DF10702 		add	r2, sp, #7
 32053 002e 1121     		movs	r1, #17
 32054 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 32055 0032 B047     		blx	r6
ARM GAS  /tmp/cc9kYR4Z.s 			page 898


 32056              	.LVL3945:
15301:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_THRES_REG,
15302:Core/Src/bno055.c ****                                                       &data_u8r,
15303:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15304:Core/Src/bno055.c ****             *accel_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_THRE
 32057              		.loc 1 15304 13 is_stmt 1 view .LVU8986
 32058              		.loc 1 15304 40 is_stmt 0 view .LVU8987
 32059 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32060 0038 2B70     		strb	r3, [r5]
 32061              	.LVL3946:
 32062              	.L2245:
15305:Core/Src/bno055.c ****         }
15306:Core/Src/bno055.c ****         else
15307:Core/Src/bno055.c ****         {
15308:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15309:Core/Src/bno055.c ****         }
15310:Core/Src/bno055.c ****     }
15311:Core/Src/bno055.c **** 
15312:Core/Src/bno055.c ****     return com_rslt;
15313:Core/Src/bno055.c **** }
 32063              		.loc 1 15313 1 view .LVU8988
 32064 003a 02B0     		add	sp, sp, #8
 32065              	.LCFI895:
 32066              		.cfi_remember_state
 32067              		.cfi_def_cfa_offset 16
 32068              		@ sp needed
 32069 003c 70BD     		pop	{r4, r5, r6, pc}
 32070              	.LVL3947:
 32071              	.L2251:
 32072              	.LCFI896:
 32073              		.cfi_restore_state
15295:Core/Src/bno055.c ****         }
 32074              		.loc 1 15295 13 is_stmt 1 view .LVU8989
15295:Core/Src/bno055.c ****         }
 32075              		.loc 1 15295 23 is_stmt 0 view .LVU8990
 32076 003e 0120     		movs	r0, #1
 32077              	.LVL3948:
15295:Core/Src/bno055.c ****         }
 32078              		.loc 1 15295 23 view .LVU8991
 32079 0040 FFF7FEFF 		bl	bno055_write_page_id
 32080              	.LVL3949:
15297:Core/Src/bno055.c ****         {
 32081              		.loc 1 15297 9 is_stmt 1 view .LVU8992
15297:Core/Src/bno055.c ****         {
 32082              		.loc 1 15297 12 is_stmt 0 view .LVU8993
 32083 0044 0028     		cmp	r0, #0
 32084 0046 ECD0     		beq	.L2247
 32085 0048 E6E7     		b	.L2246
 32086              	.LVL3950:
 32087              	.L2248:
15286:Core/Src/bno055.c ****     }
 32088              		.loc 1 15286 16 view .LVU8994
 32089 004a 6FF07E00 		mvn	r0, #126
 32090              	.LVL3951:
15286:Core/Src/bno055.c ****     }
 32091              		.loc 1 15286 16 view .LVU8995
 32092 004e F4E7     		b	.L2245
ARM GAS  /tmp/cc9kYR4Z.s 			page 899


 32093              	.LVL3952:
 32094              	.L2249:
15308:Core/Src/bno055.c ****         }
 32095              		.loc 1 15308 22 view .LVU8996
 32096 0050 4FF0FF30 		mov	r0, #-1
 32097 0054 F1E7     		b	.L2245
 32098              	.L2253:
 32099 0056 00BF     		.align	2
 32100              	.L2252:
 32101 0058 00000000 		.word	.LANCHOR0
 32102              		.cfi_endproc
 32103              	.LFE225:
 32105              		.section	.text.bno055_set_accel_any_motion_thres,"ax",%progbits
 32106              		.align	1
 32107              		.global	bno055_set_accel_any_motion_thres
 32108              		.syntax unified
 32109              		.thumb
 32110              		.thumb_func
 32112              	bno055_set_accel_any_motion_thres:
 32113              	.LVL3953:
 32114              	.LFB226:
15314:Core/Src/bno055.c **** 
15315:Core/Src/bno055.c **** /*!
15316:Core/Src/bno055.c ****  *  @brief This API used to write the accel any motion threshold
15317:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15318:Core/Src/bno055.c ****  *
15319:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15320:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15321:Core/Src/bno055.c ****  *  ------------------------    | -------------
15322:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15323:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15324:Core/Src/bno055.c ****  *
15325:Core/Src/bno055.c ****  *  @return results of bus communication function
15326:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15327:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15328:Core/Src/bno055.c ****  *
15329:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15330:Core/Src/bno055.c ****  *  range values
15331:Core/Src/bno055.c ****  *
15332:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
15333:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15334:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15335:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15336:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15337:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15338:Core/Src/bno055.c ****  *
15339:Core/Src/bno055.c ****  */
15340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_thres(u8 accel_any_motion_thres_u8)
15341:Core/Src/bno055.c **** {
 32115              		.loc 1 15341 1 is_stmt 1 view -0
 32116              		.cfi_startproc
 32117              		@ args = 0, pretend = 0, frame = 8
 32118              		@ frame_needed = 0, uses_anonymous_args = 0
 32119              		.loc 1 15341 1 is_stmt 0 view .LVU8998
 32120 0000 30B5     		push	{r4, r5, lr}
 32121              	.LCFI897:
 32122              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/cc9kYR4Z.s 			page 900


 32123              		.cfi_offset 4, -12
 32124              		.cfi_offset 5, -8
 32125              		.cfi_offset 14, -4
 32126 0002 83B0     		sub	sp, sp, #12
 32127              	.LCFI898:
 32128              		.cfi_def_cfa_offset 24
15342:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32129              		.loc 1 15342 5 is_stmt 1 view .LVU8999
 32130              	.LVL3954:
15343:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32131              		.loc 1 15343 5 view .LVU9000
 32132              		.loc 1 15343 8 is_stmt 0 view .LVU9001
 32133 0004 0023     		movs	r3, #0
 32134 0006 8DF80730 		strb	r3, [sp, #7]
15344:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32135              		.loc 1 15344 5 is_stmt 1 view .LVU9002
 32136              	.LVL3955:
15345:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32137              		.loc 1 15345 5 view .LVU9003
15346:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32138              		.loc 1 15346 5 view .LVU9004
 32139              		.loc 1 15346 8 is_stmt 0 view .LVU9005
 32140 000a 8DF80630 		strb	r3, [sp, #6]
15347:Core/Src/bno055.c **** 
15348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32141              		.loc 1 15349 5 is_stmt 1 view .LVU9006
 32142              		.loc 1 15349 18 is_stmt 0 view .LVU9007
 32143 000e 254B     		ldr	r3, .L2266
 32144 0010 1B68     		ldr	r3, [r3]
 32145              		.loc 1 15349 8 view .LVU9008
 32146 0012 002B     		cmp	r3, #0
 32147 0014 42D0     		beq	.L2258
 32148 0016 0546     		mov	r5, r0
15350:Core/Src/bno055.c ****     {
15351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15352:Core/Src/bno055.c ****     }
15353:Core/Src/bno055.c ****     else
15354:Core/Src/bno055.c ****     {
15355:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15356:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15357:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15358:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32149              		.loc 1 15358 9 is_stmt 1 view .LVU9009
 32150              		.loc 1 15358 19 is_stmt 0 view .LVU9010
 32151 0018 0DF10600 		add	r0, sp, #6
 32152              	.LVL3956:
 32153              		.loc 1 15358 19 view .LVU9011
 32154 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32155              	.LVL3957:
15359:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32156              		.loc 1 15359 9 is_stmt 1 view .LVU9012
 32157              		.loc 1 15359 12 is_stmt 0 view .LVU9013
 32158 0020 0446     		mov	r4, r0
 32159 0022 50BB     		cbnz	r0, .L2259
15360:Core/Src/bno055.c ****         {
15361:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/cc9kYR4Z.s 			page 901


 32160              		.loc 1 15361 13 is_stmt 1 view .LVU9014
 32161              		.loc 1 15361 32 is_stmt 0 view .LVU9015
 32162 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32163              		.loc 1 15361 16 view .LVU9016
 32164 0028 1BB9     		cbnz	r3, .L2263
 32165              	.LVL3958:
 32166              	.L2257:
15362:Core/Src/bno055.c ****             {
15363:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15364:Core/Src/bno055.c ****             }
15365:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32167              		.loc 1 15365 13 is_stmt 1 view .LVU9017
 32168              		.loc 1 15365 16 is_stmt 0 view .LVU9018
 32169 002a 44B1     		cbz	r4, .L2264
15366:Core/Src/bno055.c ****             {
15367:Core/Src/bno055.c ****                 /* Write page as one */
15368:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15369:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15370:Core/Src/bno055.c ****                 {
15371:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15372:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
15373:Core/Src/bno055.c ****                                                               &data_u8r,
15374:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15375:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15376:Core/Src/bno055.c ****                     {
15377:Core/Src/bno055.c ****                         /* Write the value of
15378:Core/Src/bno055.c ****                          * accel any motion threshold*/
15379:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15380:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
15381:Core/Src/bno055.c ****                                                        accel_any_motion_thres_u8);
15382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15383:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
15384:Core/Src/bno055.c ****                                                                     &data_u8r,
15385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15386:Core/Src/bno055.c ****                     }
15387:Core/Src/bno055.c ****                 }
15388:Core/Src/bno055.c ****                 else
15389:Core/Src/bno055.c ****                 {
15390:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15391:Core/Src/bno055.c ****                 }
15392:Core/Src/bno055.c ****             }
15393:Core/Src/bno055.c ****             else
15394:Core/Src/bno055.c ****             {
15395:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32170              		.loc 1 15395 26 view .LVU9019
 32171 002c 4FF0FF34 		mov	r4, #-1
 32172              	.LVL3959:
 32173              		.loc 1 15395 26 view .LVU9020
 32174 0030 25E0     		b	.L2256
 32175              	.LVL3960:
 32176              	.L2263:
15363:Core/Src/bno055.c ****             }
 32177              		.loc 1 15363 17 is_stmt 1 view .LVU9021
15363:Core/Src/bno055.c ****             }
 32178              		.loc 1 15363 28 is_stmt 0 view .LVU9022
 32179 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 32180              	.LVL3961:
ARM GAS  /tmp/cc9kYR4Z.s 			page 902


15363:Core/Src/bno055.c ****             }
 32181              		.loc 1 15363 25 view .LVU9023
 32182 0036 54FA80F4 		uxtab	r4, r4, r0
 32183 003a 64B2     		sxtb	r4, r4
 32184              	.LVL3962:
15363:Core/Src/bno055.c ****             }
 32185              		.loc 1 15363 25 view .LVU9024
 32186 003c F5E7     		b	.L2257
 32187              	.L2264:
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32188              		.loc 1 15368 17 is_stmt 1 view .LVU9025
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32189              		.loc 1 15368 30 is_stmt 0 view .LVU9026
 32190 003e 0120     		movs	r0, #1
 32191 0040 FFF7FEFF 		bl	bno055_write_page_id
 32192              	.LVL3963:
15369:Core/Src/bno055.c ****                 {
 32193              		.loc 1 15369 17 is_stmt 1 view .LVU9027
15369:Core/Src/bno055.c ****                 {
 32194              		.loc 1 15369 20 is_stmt 0 view .LVU9028
 32195 0044 08BB     		cbnz	r0, .L2261
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32196              		.loc 1 15371 21 is_stmt 1 view .LVU9029
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32197              		.loc 1 15371 40 is_stmt 0 view .LVU9030
 32198 0046 174B     		ldr	r3, .L2266
 32199 0048 1868     		ldr	r0, [r3]
 32200              	.LVL3964:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32201              		.loc 1 15371 40 view .LVU9031
 32202 004a 0469     		ldr	r4, [r0, #16]
 32203              	.LVL3965:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32204              		.loc 1 15371 32 view .LVU9032
 32205 004c 0123     		movs	r3, #1
 32206 004e 0DF10702 		add	r2, sp, #7
 32207 0052 1121     		movs	r1, #17
 32208 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32209 0056 A047     		blx	r4
 32210              	.LVL3966:
15375:Core/Src/bno055.c ****                     {
 32211              		.loc 1 15375 21 is_stmt 1 view .LVU9033
15375:Core/Src/bno055.c ****                     {
 32212              		.loc 1 15375 24 is_stmt 0 view .LVU9034
 32213 0058 0446     		mov	r4, r0
 32214 005a 80B9     		cbnz	r0, .L2256
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 32215              		.loc 1 15379 25 is_stmt 1 view .LVU9035
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 32216              		.loc 1 15379 34 is_stmt 0 view .LVU9036
 32217 005c 8DF80750 		strb	r5, [sp, #7]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32218              		.loc 1 15382 25 is_stmt 1 view .LVU9037
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32219              		.loc 1 15382 45 is_stmt 0 view .LVU9038
 32220 0060 104B     		ldr	r3, .L2266
 32221 0062 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 903


 32222              	.LVL3967:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32223              		.loc 1 15382 45 view .LVU9039
 32224 0064 C568     		ldr	r5, [r0, #12]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32225              		.loc 1 15382 37 view .LVU9040
 32226 0066 0123     		movs	r3, #1
 32227 0068 0DF10702 		add	r2, sp, #7
 32228 006c 1121     		movs	r1, #17
 32229 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32230 0070 A847     		blx	r5
 32231              	.LVL3968:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32232              		.loc 1 15382 34 view .LVU9041
 32233 0072 54FA80F0 		uxtab	r0, r4, r0
 32234 0076 44B2     		sxtb	r4, r0
 32235              	.LVL3969:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32236              		.loc 1 15382 34 view .LVU9042
 32237 0078 01E0     		b	.L2256
 32238              	.LVL3970:
 32239              	.L2259:
15396:Core/Src/bno055.c ****             }
15397:Core/Src/bno055.c ****         }
15398:Core/Src/bno055.c ****         else
15399:Core/Src/bno055.c ****         {
15400:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32240              		.loc 1 15400 22 view .LVU9043
 32241 007a 4FF0FF34 		mov	r4, #-1
 32242              	.LVL3971:
 32243              	.L2256:
15401:Core/Src/bno055.c ****         }
15402:Core/Src/bno055.c ****     }
15403:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32244              		.loc 1 15403 5 is_stmt 1 view .LVU9044
 32245              		.loc 1 15403 24 is_stmt 0 view .LVU9045
 32246 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32247              		.loc 1 15403 8 view .LVU9046
 32248 0082 28B9     		cbnz	r0, .L2265
 32249              	.LVL3972:
 32250              	.L2255:
15404:Core/Src/bno055.c ****     {
15405:Core/Src/bno055.c ****         /* set the operation mode of
15406:Core/Src/bno055.c ****          * previous operation mode*/
15407:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15408:Core/Src/bno055.c ****     }
15409:Core/Src/bno055.c **** 
15410:Core/Src/bno055.c ****     return com_rslt;
15411:Core/Src/bno055.c **** }
 32251              		.loc 1 15411 1 view .LVU9047
 32252 0084 2046     		mov	r0, r4
 32253 0086 03B0     		add	sp, sp, #12
 32254              	.LCFI899:
 32255              		.cfi_remember_state
 32256              		.cfi_def_cfa_offset 12
 32257              		@ sp needed
 32258 0088 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/cc9kYR4Z.s 			page 904


 32259              	.LVL3973:
 32260              	.L2261:
 32261              	.LCFI900:
 32262              		.cfi_restore_state
15390:Core/Src/bno055.c ****                 }
 32263              		.loc 1 15390 30 view .LVU9048
 32264 008a 4FF0FF34 		mov	r4, #-1
 32265              	.LVL3974:
15390:Core/Src/bno055.c ****                 }
 32266              		.loc 1 15390 30 view .LVU9049
 32267 008e F6E7     		b	.L2256
 32268              	.LVL3975:
 32269              	.L2265:
15407:Core/Src/bno055.c ****     }
 32270              		.loc 1 15407 9 is_stmt 1 view .LVU9050
15407:Core/Src/bno055.c ****     }
 32271              		.loc 1 15407 21 is_stmt 0 view .LVU9051
 32272 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 32273              	.LVL3976:
15407:Core/Src/bno055.c ****     }
 32274              		.loc 1 15407 18 view .LVU9052
 32275 0094 54FA80F0 		uxtab	r0, r4, r0
 32276 0098 44B2     		sxtb	r4, r0
 32277              	.LVL3977:
15407:Core/Src/bno055.c ****     }
 32278              		.loc 1 15407 18 view .LVU9053
 32279 009a F3E7     		b	.L2255
 32280              	.LVL3978:
 32281              	.L2258:
15351:Core/Src/bno055.c ****     }
 32282              		.loc 1 15351 16 view .LVU9054
 32283 009c 6FF07E04 		mvn	r4, #126
 32284 00a0 F0E7     		b	.L2255
 32285              	.L2267:
 32286 00a2 00BF     		.align	2
 32287              	.L2266:
 32288 00a4 00000000 		.word	.LANCHOR0
 32289              		.cfi_endproc
 32290              	.LFE226:
 32292              		.section	.text.bno055_get_accel_any_motion_durn,"ax",%progbits
 32293              		.align	1
 32294              		.global	bno055_get_accel_any_motion_durn
 32295              		.syntax unified
 32296              		.thumb
 32297              		.thumb_func
 32299              	bno055_get_accel_any_motion_durn:
 32300              	.LVL3979:
 32301              	.LFB227:
15412:Core/Src/bno055.c **** 
15413:Core/Src/bno055.c **** /*!
15414:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion duration
15415:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15416:Core/Src/bno055.c ****  *
15417:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15418:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15419:Core/Src/bno055.c ****  *  -------------------------  | -------------
15420:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
ARM GAS  /tmp/cc9kYR4Z.s 			page 905


15421:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15422:Core/Src/bno055.c ****  *
15423:Core/Src/bno055.c ****  *  @return results of bus communication function
15424:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15425:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15426:Core/Src/bno055.c ****  *
15427:Core/Src/bno055.c ****  *
15428:Core/Src/bno055.c ****  */
15429:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_durn(u8 *accel_any_motion_durn_u8)
15430:Core/Src/bno055.c **** {
 32302              		.loc 1 15430 1 is_stmt 1 view -0
 32303              		.cfi_startproc
 32304              		@ args = 0, pretend = 0, frame = 8
 32305              		@ frame_needed = 0, uses_anonymous_args = 0
 32306              		.loc 1 15430 1 is_stmt 0 view .LVU9056
 32307 0000 30B5     		push	{r4, r5, lr}
 32308              	.LCFI901:
 32309              		.cfi_def_cfa_offset 12
 32310              		.cfi_offset 4, -12
 32311              		.cfi_offset 5, -8
 32312              		.cfi_offset 14, -4
 32313 0002 83B0     		sub	sp, sp, #12
 32314              	.LCFI902:
 32315              		.cfi_def_cfa_offset 24
15431:Core/Src/bno055.c ****     /* Variable used to return value of
15432:Core/Src/bno055.c ****      * communication routine*/
15433:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32316              		.loc 1 15433 5 is_stmt 1 view .LVU9057
 32317              	.LVL3980:
15434:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32318              		.loc 1 15434 5 view .LVU9058
 32319              		.loc 1 15434 8 is_stmt 0 view .LVU9059
 32320 0004 0023     		movs	r3, #0
 32321 0006 8DF80730 		strb	r3, [sp, #7]
15435:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32322              		.loc 1 15435 5 is_stmt 1 view .LVU9060
 32323              	.LVL3981:
15436:Core/Src/bno055.c **** 
15437:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15438:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32324              		.loc 1 15438 5 view .LVU9061
 32325              		.loc 1 15438 18 is_stmt 0 view .LVU9062
 32326 000a 144B     		ldr	r3, .L2276
 32327 000c 1B68     		ldr	r3, [r3]
 32328              		.loc 1 15438 8 view .LVU9063
 32329 000e F3B1     		cbz	r3, .L2272
 32330 0010 0446     		mov	r4, r0
15439:Core/Src/bno055.c ****     {
15440:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15441:Core/Src/bno055.c ****     }
15442:Core/Src/bno055.c ****     else
15443:Core/Src/bno055.c ****     {
15444:Core/Src/bno055.c ****         /*condition check for page, accel anymotion duration  is
15445:Core/Src/bno055.c ****          * available in the page one*/
15446:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32331              		.loc 1 15446 9 is_stmt 1 view .LVU9064
 32332              		.loc 1 15446 21 is_stmt 0 view .LVU9065
ARM GAS  /tmp/cc9kYR4Z.s 			page 906


 32333 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32334              		.loc 1 15446 12 view .LVU9066
 32335 0014 012B     		cmp	r3, #1
 32336 0016 14D1     		bne	.L2275
 32337              	.LVL3982:
 32338              	.L2270:
15447:Core/Src/bno055.c ****         {
15448:Core/Src/bno055.c ****             /* Write page as one */
15449:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15450:Core/Src/bno055.c ****         }
15451:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32339              		.loc 1 15451 53 discriminator 1 view .LVU9067
 32340 0018 104B     		ldr	r3, .L2276
 32341 001a 1B68     		ldr	r3, [r3]
 32342 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32343              		.loc 1 15451 41 discriminator 1 view .LVU9068
 32344 001e 012B     		cmp	r3, #1
 32345 0020 18D1     		bne	.L2273
 32346              	.L2271:
15452:Core/Src/bno055.c ****         {
15453:Core/Src/bno055.c ****             /* Read the value of accel anymotion duration */
15454:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32347              		.loc 1 15454 13 is_stmt 1 view .LVU9069
 32348              		.loc 1 15454 32 is_stmt 0 view .LVU9070
 32349 0022 0E4B     		ldr	r3, .L2276
 32350 0024 1868     		ldr	r0, [r3]
 32351 0026 0569     		ldr	r5, [r0, #16]
 32352              		.loc 1 15454 24 view .LVU9071
 32353 0028 0123     		movs	r3, #1
 32354 002a 0DF10702 		add	r2, sp, #7
 32355 002e 1221     		movs	r1, #18
 32356 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32357 0032 A847     		blx	r5
 32358              	.LVL3983:
15455:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15456:Core/Src/bno055.c ****                                                       &data_u8r,
15457:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15458:Core/Src/bno055.c ****             *accel_any_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_DURN_
 32359              		.loc 1 15458 13 is_stmt 1 view .LVU9072
 32360              		.loc 1 15458 41 is_stmt 0 view .LVU9073
 32361 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32362 0038 03F00303 		and	r3, r3, #3
 32363              		.loc 1 15458 39 view .LVU9074
 32364 003c 2370     		strb	r3, [r4]
 32365              	.LVL3984:
 32366              	.L2269:
15459:Core/Src/bno055.c ****         }
15460:Core/Src/bno055.c ****         else
15461:Core/Src/bno055.c ****         {
15462:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15463:Core/Src/bno055.c ****         }
15464:Core/Src/bno055.c ****     }
15465:Core/Src/bno055.c **** 
15466:Core/Src/bno055.c ****     return com_rslt;
15467:Core/Src/bno055.c **** }
 32367              		.loc 1 15467 1 view .LVU9075
 32368 003e 03B0     		add	sp, sp, #12
ARM GAS  /tmp/cc9kYR4Z.s 			page 907


 32369              	.LCFI903:
 32370              		.cfi_remember_state
 32371              		.cfi_def_cfa_offset 12
 32372              		@ sp needed
 32373 0040 30BD     		pop	{r4, r5, pc}
 32374              	.LVL3985:
 32375              	.L2275:
 32376              	.LCFI904:
 32377              		.cfi_restore_state
15449:Core/Src/bno055.c ****         }
 32378              		.loc 1 15449 13 is_stmt 1 view .LVU9076
15449:Core/Src/bno055.c ****         }
 32379              		.loc 1 15449 23 is_stmt 0 view .LVU9077
 32380 0042 0120     		movs	r0, #1
 32381              	.LVL3986:
15449:Core/Src/bno055.c ****         }
 32382              		.loc 1 15449 23 view .LVU9078
 32383 0044 FFF7FEFF 		bl	bno055_write_page_id
 32384              	.LVL3987:
15451:Core/Src/bno055.c ****         {
 32385              		.loc 1 15451 9 is_stmt 1 view .LVU9079
15451:Core/Src/bno055.c ****         {
 32386              		.loc 1 15451 12 is_stmt 0 view .LVU9080
 32387 0048 0028     		cmp	r0, #0
 32388 004a EAD0     		beq	.L2271
 32389 004c E4E7     		b	.L2270
 32390              	.LVL3988:
 32391              	.L2272:
15440:Core/Src/bno055.c ****     }
 32392              		.loc 1 15440 16 view .LVU9081
 32393 004e 6FF07E00 		mvn	r0, #126
 32394              	.LVL3989:
15440:Core/Src/bno055.c ****     }
 32395              		.loc 1 15440 16 view .LVU9082
 32396 0052 F4E7     		b	.L2269
 32397              	.LVL3990:
 32398              	.L2273:
15462:Core/Src/bno055.c ****         }
 32399              		.loc 1 15462 22 view .LVU9083
 32400 0054 4FF0FF30 		mov	r0, #-1
 32401 0058 F1E7     		b	.L2269
 32402              	.L2277:
 32403 005a 00BF     		.align	2
 32404              	.L2276:
 32405 005c 00000000 		.word	.LANCHOR0
 32406              		.cfi_endproc
 32407              	.LFE227:
 32409              		.section	.text.bno055_set_accel_any_motion_durn,"ax",%progbits
 32410              		.align	1
 32411              		.global	bno055_set_accel_any_motion_durn
 32412              		.syntax unified
 32413              		.thumb
 32414              		.thumb_func
 32416              	bno055_set_accel_any_motion_durn:
 32417              	.LVL3991:
 32418              	.LFB228:
15468:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 908


15469:Core/Src/bno055.c **** /*!
15470:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion duration
15471:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15472:Core/Src/bno055.c ****  *
15473:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15474:Core/Src/bno055.c ****  *
15475:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15476:Core/Src/bno055.c ****  *  -------------------------  | -------------
15477:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15478:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15479:Core/Src/bno055.c ****  *
15480:Core/Src/bno055.c ****  *  @return results of bus communication function
15481:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15482:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15483:Core/Src/bno055.c ****  *
15484:Core/Src/bno055.c ****  *
15485:Core/Src/bno055.c ****  */
15486:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_durn(u8 accel_any_motion_durn_u8)
15487:Core/Src/bno055.c **** {
 32419              		.loc 1 15487 1 is_stmt 1 view -0
 32420              		.cfi_startproc
 32421              		@ args = 0, pretend = 0, frame = 8
 32422              		@ frame_needed = 0, uses_anonymous_args = 0
 32423              		.loc 1 15487 1 is_stmt 0 view .LVU9085
 32424 0000 30B5     		push	{r4, r5, lr}
 32425              	.LCFI905:
 32426              		.cfi_def_cfa_offset 12
 32427              		.cfi_offset 4, -12
 32428              		.cfi_offset 5, -8
 32429              		.cfi_offset 14, -4
 32430 0002 83B0     		sub	sp, sp, #12
 32431              	.LCFI906:
 32432              		.cfi_def_cfa_offset 24
15488:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32433              		.loc 1 15488 5 is_stmt 1 view .LVU9086
 32434              	.LVL3992:
15489:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32435              		.loc 1 15489 5 view .LVU9087
 32436              		.loc 1 15489 8 is_stmt 0 view .LVU9088
 32437 0004 0023     		movs	r3, #0
 32438 0006 8DF80730 		strb	r3, [sp, #7]
15490:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32439              		.loc 1 15490 5 is_stmt 1 view .LVU9089
 32440              	.LVL3993:
15491:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32441              		.loc 1 15491 5 view .LVU9090
15492:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32442              		.loc 1 15492 5 view .LVU9091
 32443              		.loc 1 15492 8 is_stmt 0 view .LVU9092
 32444 000a 8DF80630 		strb	r3, [sp, #6]
15493:Core/Src/bno055.c **** 
15494:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15495:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32445              		.loc 1 15495 5 is_stmt 1 view .LVU9093
 32446              		.loc 1 15495 18 is_stmt 0 view .LVU9094
 32447 000e 294B     		ldr	r3, .L2290
 32448 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 909


 32449              		.loc 1 15495 8 view .LVU9095
 32450 0012 002B     		cmp	r3, #0
 32451 0014 4AD0     		beq	.L2282
 32452 0016 0546     		mov	r5, r0
15496:Core/Src/bno055.c ****     {
15497:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15498:Core/Src/bno055.c ****     }
15499:Core/Src/bno055.c ****     else
15500:Core/Src/bno055.c ****     {
15501:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15502:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15503:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15504:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32453              		.loc 1 15504 9 is_stmt 1 view .LVU9096
 32454              		.loc 1 15504 19 is_stmt 0 view .LVU9097
 32455 0018 0DF10600 		add	r0, sp, #6
 32456              	.LVL3994:
 32457              		.loc 1 15504 19 view .LVU9098
 32458 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32459              	.LVL3995:
15505:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32460              		.loc 1 15505 9 is_stmt 1 view .LVU9099
 32461              		.loc 1 15505 12 is_stmt 0 view .LVU9100
 32462 0020 0446     		mov	r4, r0
 32463 0022 90BB     		cbnz	r0, .L2283
15506:Core/Src/bno055.c ****         {
15507:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32464              		.loc 1 15507 13 is_stmt 1 view .LVU9101
 32465              		.loc 1 15507 32 is_stmt 0 view .LVU9102
 32466 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32467              		.loc 1 15507 16 view .LVU9103
 32468 0028 1BB9     		cbnz	r3, .L2287
 32469              	.LVL3996:
 32470              	.L2281:
15508:Core/Src/bno055.c ****             {
15509:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15510:Core/Src/bno055.c ****             }
15511:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32471              		.loc 1 15511 13 is_stmt 1 view .LVU9104
 32472              		.loc 1 15511 16 is_stmt 0 view .LVU9105
 32473 002a 44B1     		cbz	r4, .L2288
15512:Core/Src/bno055.c ****             {
15513:Core/Src/bno055.c ****                 /* Write page as one */
15514:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15515:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15516:Core/Src/bno055.c ****                 {
15517:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15518:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15519:Core/Src/bno055.c ****                                                               &data_u8r,
15520:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15521:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15522:Core/Src/bno055.c ****                     {
15523:Core/Src/bno055.c ****                         /* Write the value of
15524:Core/Src/bno055.c ****                          * accel anymotion duration*/
15525:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15526:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
15527:Core/Src/bno055.c ****                                                        accel_any_motion_durn_u8);
ARM GAS  /tmp/cc9kYR4Z.s 			page 910


15528:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15529:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
15530:Core/Src/bno055.c ****                                                                     &data_u8r,
15531:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15532:Core/Src/bno055.c ****                     }
15533:Core/Src/bno055.c ****                 }
15534:Core/Src/bno055.c ****                 else
15535:Core/Src/bno055.c ****                 {
15536:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15537:Core/Src/bno055.c ****                 }
15538:Core/Src/bno055.c ****             }
15539:Core/Src/bno055.c ****             else
15540:Core/Src/bno055.c ****             {
15541:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32474              		.loc 1 15541 26 view .LVU9106
 32475 002c 4FF0FF34 		mov	r4, #-1
 32476              	.LVL3997:
 32477              		.loc 1 15541 26 view .LVU9107
 32478 0030 2DE0     		b	.L2280
 32479              	.LVL3998:
 32480              	.L2287:
15509:Core/Src/bno055.c ****             }
 32481              		.loc 1 15509 17 is_stmt 1 view .LVU9108
15509:Core/Src/bno055.c ****             }
 32482              		.loc 1 15509 28 is_stmt 0 view .LVU9109
 32483 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 32484              	.LVL3999:
15509:Core/Src/bno055.c ****             }
 32485              		.loc 1 15509 25 view .LVU9110
 32486 0036 54FA80F4 		uxtab	r4, r4, r0
 32487 003a 64B2     		sxtb	r4, r4
 32488              	.LVL4000:
15509:Core/Src/bno055.c ****             }
 32489              		.loc 1 15509 25 view .LVU9111
 32490 003c F5E7     		b	.L2281
 32491              	.L2288:
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32492              		.loc 1 15514 17 is_stmt 1 view .LVU9112
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32493              		.loc 1 15514 30 is_stmt 0 view .LVU9113
 32494 003e 0120     		movs	r0, #1
 32495 0040 FFF7FEFF 		bl	bno055_write_page_id
 32496              	.LVL4001:
15515:Core/Src/bno055.c ****                 {
 32497              		.loc 1 15515 17 is_stmt 1 view .LVU9114
15515:Core/Src/bno055.c ****                 {
 32498              		.loc 1 15515 20 is_stmt 0 view .LVU9115
 32499 0044 48BB     		cbnz	r0, .L2285
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32500              		.loc 1 15517 21 is_stmt 1 view .LVU9116
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32501              		.loc 1 15517 40 is_stmt 0 view .LVU9117
 32502 0046 1B4B     		ldr	r3, .L2290
 32503 0048 1868     		ldr	r0, [r3]
 32504              	.LVL4002:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32505              		.loc 1 15517 40 view .LVU9118
ARM GAS  /tmp/cc9kYR4Z.s 			page 911


 32506 004a 0469     		ldr	r4, [r0, #16]
 32507              	.LVL4003:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32508              		.loc 1 15517 32 view .LVU9119
 32509 004c 0123     		movs	r3, #1
 32510 004e 0DF10702 		add	r2, sp, #7
 32511 0052 1221     		movs	r1, #18
 32512 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32513 0056 A047     		blx	r4
 32514              	.LVL4004:
15521:Core/Src/bno055.c ****                     {
 32515              		.loc 1 15521 21 is_stmt 1 view .LVU9120
15521:Core/Src/bno055.c ****                     {
 32516              		.loc 1 15521 24 is_stmt 0 view .LVU9121
 32517 0058 0446     		mov	r4, r0
 32518 005a C0B9     		cbnz	r0, .L2280
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32519              		.loc 1 15525 25 is_stmt 1 view .LVU9122
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32520              		.loc 1 15525 36 is_stmt 0 view .LVU9123
 32521 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32522 0060 23F00303 		bic	r3, r3, #3
 32523 0064 5BB2     		sxtb	r3, r3
 32524 0066 05F00300 		and	r0, r5, #3
 32525              	.LVL4005:
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32526              		.loc 1 15525 36 view .LVU9124
 32527 006a 0343     		orrs	r3, r3, r0
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32528              		.loc 1 15525 34 view .LVU9125
 32529 006c 8DF80730 		strb	r3, [sp, #7]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32530              		.loc 1 15528 25 is_stmt 1 view .LVU9126
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32531              		.loc 1 15528 45 is_stmt 0 view .LVU9127
 32532 0070 104B     		ldr	r3, .L2290
 32533 0072 1868     		ldr	r0, [r3]
 32534 0074 C568     		ldr	r5, [r0, #12]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32535              		.loc 1 15528 37 view .LVU9128
 32536 0076 0123     		movs	r3, #1
 32537 0078 0DF10702 		add	r2, sp, #7
 32538 007c 1221     		movs	r1, #18
 32539 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32540 0080 A847     		blx	r5
 32541              	.LVL4006:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32542              		.loc 1 15528 34 view .LVU9129
 32543 0082 54FA80F0 		uxtab	r0, r4, r0
 32544 0086 44B2     		sxtb	r4, r0
 32545              	.LVL4007:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32546              		.loc 1 15528 34 view .LVU9130
 32547 0088 01E0     		b	.L2280
 32548              	.LVL4008:
 32549              	.L2283:
15542:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 912


15543:Core/Src/bno055.c ****         }
15544:Core/Src/bno055.c ****         else
15545:Core/Src/bno055.c ****         {
15546:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32550              		.loc 1 15546 22 view .LVU9131
 32551 008a 4FF0FF34 		mov	r4, #-1
 32552              	.LVL4009:
 32553              	.L2280:
15547:Core/Src/bno055.c ****         }
15548:Core/Src/bno055.c ****     }
15549:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32554              		.loc 1 15549 5 is_stmt 1 view .LVU9132
 32555              		.loc 1 15549 24 is_stmt 0 view .LVU9133
 32556 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32557              		.loc 1 15549 8 view .LVU9134
 32558 0092 28B9     		cbnz	r0, .L2289
 32559              	.LVL4010:
 32560              	.L2279:
15550:Core/Src/bno055.c ****     {
15551:Core/Src/bno055.c ****         /* set the operation mode of
15552:Core/Src/bno055.c ****          * previous operation mode*/
15553:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15554:Core/Src/bno055.c ****     }
15555:Core/Src/bno055.c **** 
15556:Core/Src/bno055.c ****     return com_rslt;
15557:Core/Src/bno055.c **** }
 32561              		.loc 1 15557 1 view .LVU9135
 32562 0094 2046     		mov	r0, r4
 32563 0096 03B0     		add	sp, sp, #12
 32564              	.LCFI907:
 32565              		.cfi_remember_state
 32566              		.cfi_def_cfa_offset 12
 32567              		@ sp needed
 32568 0098 30BD     		pop	{r4, r5, pc}
 32569              	.LVL4011:
 32570              	.L2285:
 32571              	.LCFI908:
 32572              		.cfi_restore_state
15536:Core/Src/bno055.c ****                 }
 32573              		.loc 1 15536 30 view .LVU9136
 32574 009a 4FF0FF34 		mov	r4, #-1
 32575              	.LVL4012:
15536:Core/Src/bno055.c ****                 }
 32576              		.loc 1 15536 30 view .LVU9137
 32577 009e F6E7     		b	.L2280
 32578              	.LVL4013:
 32579              	.L2289:
15553:Core/Src/bno055.c ****     }
 32580              		.loc 1 15553 9 is_stmt 1 view .LVU9138
15553:Core/Src/bno055.c ****     }
 32581              		.loc 1 15553 21 is_stmt 0 view .LVU9139
 32582 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 32583              	.LVL4014:
15553:Core/Src/bno055.c ****     }
 32584              		.loc 1 15553 18 view .LVU9140
 32585 00a4 54FA80F0 		uxtab	r0, r4, r0
 32586 00a8 44B2     		sxtb	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 913


 32587              	.LVL4015:
15553:Core/Src/bno055.c ****     }
 32588              		.loc 1 15553 18 view .LVU9141
 32589 00aa F3E7     		b	.L2279
 32590              	.LVL4016:
 32591              	.L2282:
15497:Core/Src/bno055.c ****     }
 32592              		.loc 1 15497 16 view .LVU9142
 32593 00ac 6FF07E04 		mvn	r4, #126
 32594 00b0 F0E7     		b	.L2279
 32595              	.L2291:
 32596 00b2 00BF     		.align	2
 32597              	.L2290:
 32598 00b4 00000000 		.word	.LANCHOR0
 32599              		.cfi_endproc
 32600              	.LFE228:
 32602              		.section	.text.bno055_get_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 32603              		.align	1
 32604              		.global	bno055_get_accel_any_motion_no_motion_axis_enable
 32605              		.syntax unified
 32606              		.thumb
 32607              		.thumb_func
 32609              	bno055_get_accel_any_motion_no_motion_axis_enable:
 32610              	.LVL4017:
 32611              	.LFB229:
15558:Core/Src/bno055.c **** 
15559:Core/Src/bno055.c **** /*!
15560:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion enable
15561:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15562:Core/Src/bno055.c ****  *
15563:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15564:Core/Src/bno055.c ****  *     data_u8 | result
15565:Core/Src/bno055.c ****  *  ------------ | -------------
15566:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15567:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15568:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15569:Core/Src/bno055.c ****  *           channel_u8                        | value
15570:Core/Src/bno055.c ****  *     --------------------------                | ----------
15571:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15572:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15573:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15574:Core/Src/bno055.c ****  *
15575:Core/Src/bno055.c ****  *  @return results of bus communication function
15576:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15577:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15578:Core/Src/bno055.c ****  *
15579:Core/Src/bno055.c ****  *
15580:Core/Src/bno055.c ****  */
15581:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 *da
15582:Core/Src/bno055.c **** {
 32612              		.loc 1 15582 1 is_stmt 1 view -0
 32613              		.cfi_startproc
 32614              		@ args = 0, pretend = 0, frame = 8
 32615              		@ frame_needed = 0, uses_anonymous_args = 0
 32616              		.loc 1 15582 1 is_stmt 0 view .LVU9144
 32617 0000 30B5     		push	{r4, r5, lr}
 32618              	.LCFI909:
ARM GAS  /tmp/cc9kYR4Z.s 			page 914


 32619              		.cfi_def_cfa_offset 12
 32620              		.cfi_offset 4, -12
 32621              		.cfi_offset 5, -8
 32622              		.cfi_offset 14, -4
 32623 0002 83B0     		sub	sp, sp, #12
 32624              	.LCFI910:
 32625              		.cfi_def_cfa_offset 24
15583:Core/Src/bno055.c ****     /* Variable used to return value of
15584:Core/Src/bno055.c ****      * communication routine*/
15585:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32626              		.loc 1 15585 5 is_stmt 1 view .LVU9145
 32627              	.LVL4018:
15586:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32628              		.loc 1 15586 5 view .LVU9146
 32629              		.loc 1 15586 8 is_stmt 0 view .LVU9147
 32630 0004 0023     		movs	r3, #0
 32631 0006 8DF80730 		strb	r3, [sp, #7]
15587:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32632              		.loc 1 15587 5 is_stmt 1 view .LVU9148
 32633              	.LVL4019:
15588:Core/Src/bno055.c **** 
15589:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15590:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32634              		.loc 1 15590 5 view .LVU9149
 32635              		.loc 1 15590 18 is_stmt 0 view .LVU9150
 32636 000a 284B     		ldr	r3, .L2304
 32637 000c 1B68     		ldr	r3, [r3]
 32638              		.loc 1 15590 8 view .LVU9151
 32639 000e 002B     		cmp	r3, #0
 32640 0010 45D0     		beq	.L2298
 32641 0012 0446     		mov	r4, r0
 32642 0014 0D46     		mov	r5, r1
15591:Core/Src/bno055.c ****     {
15592:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15593:Core/Src/bno055.c ****     }
15594:Core/Src/bno055.c ****     else
15595:Core/Src/bno055.c ****     {
15596:Core/Src/bno055.c ****         /*condition check for page, accel anymotion enable is
15597:Core/Src/bno055.c ****          * available in the page one*/
15598:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32643              		.loc 1 15598 9 is_stmt 1 view .LVU9152
 32644              		.loc 1 15598 21 is_stmt 0 view .LVU9153
 32645 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32646              		.loc 1 15598 12 view .LVU9154
 32647 0018 012B     		cmp	r3, #1
 32648 001a 0DD1     		bne	.L2302
 32649              	.LVL4020:
 32650              	.L2294:
15599:Core/Src/bno055.c ****         {
15600:Core/Src/bno055.c ****             /* Write page as one */
15601:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15602:Core/Src/bno055.c ****         }
15603:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32651              		.loc 1 15603 53 discriminator 1 view .LVU9155
 32652 001c 234B     		ldr	r3, .L2304
 32653 001e 1B68     		ldr	r3, [r3]
 32654 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 915


 32655              		.loc 1 15603 41 discriminator 1 view .LVU9156
 32656 0022 012B     		cmp	r3, #1
 32657 0024 3ED1     		bne	.L2299
 32658              	.L2295:
15604:Core/Src/bno055.c ****         {
15605:Core/Src/bno055.c ****             switch (channel_u8)
 32659              		.loc 1 15605 13 is_stmt 1 view .LVU9157
 32660 0026 012C     		cmp	r4, #1
 32661 0028 1BD0     		beq	.L2296
 32662 002a 022C     		cmp	r4, #2
 32663 002c 28D0     		beq	.L2297
 32664 002e 4CB1     		cbz	r4, .L2303
 32665 0030 6FF00100 		mvn	r0, #1
 32666              	.LVL4021:
 32667              	.L2293:
15606:Core/Src/bno055.c ****             {
15607:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15608:Core/Src/bno055.c **** 
15609:Core/Src/bno055.c ****                     /* Read the value of accel anymotion x enable*/
15610:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15611:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
15612:Core/Src/bno055.c ****                                                               &data_u8r,
15613:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15614:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_AXIS);
15615:Core/Src/bno055.c ****                     break;
15616:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15617:Core/Src/bno055.c **** 
15618:Core/Src/bno055.c ****                     /* Read the value of accel anymotion y enable*/
15619:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15620:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
15621:Core/Src/bno055.c ****                                                               &data_u8r,
15622:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15623:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_AXIS);
15624:Core/Src/bno055.c ****                     break;
15625:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15626:Core/Src/bno055.c **** 
15627:Core/Src/bno055.c ****                     /* Read the value of accel anymotion z enable*/
15628:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15629:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
15630:Core/Src/bno055.c ****                                                               &data_u8r,
15631:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15632:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_AXIS);
15633:Core/Src/bno055.c ****                     break;
15634:Core/Src/bno055.c ****                 default:
15635:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15636:Core/Src/bno055.c ****                     break;
15637:Core/Src/bno055.c ****             }
15638:Core/Src/bno055.c ****         }
15639:Core/Src/bno055.c ****         else
15640:Core/Src/bno055.c ****         {
15641:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15642:Core/Src/bno055.c ****         }
15643:Core/Src/bno055.c ****     }
15644:Core/Src/bno055.c **** 
15645:Core/Src/bno055.c ****     return com_rslt;
15646:Core/Src/bno055.c **** }
 32668              		.loc 1 15646 1 is_stmt 0 view .LVU9158
ARM GAS  /tmp/cc9kYR4Z.s 			page 916


 32669 0034 03B0     		add	sp, sp, #12
 32670              	.LCFI911:
 32671              		.cfi_remember_state
 32672              		.cfi_def_cfa_offset 12
 32673              		@ sp needed
 32674 0036 30BD     		pop	{r4, r5, pc}
 32675              	.LVL4022:
 32676              	.L2302:
 32677              	.LCFI912:
 32678              		.cfi_restore_state
15601:Core/Src/bno055.c ****         }
 32679              		.loc 1 15601 13 is_stmt 1 view .LVU9159
15601:Core/Src/bno055.c ****         }
 32680              		.loc 1 15601 23 is_stmt 0 view .LVU9160
 32681 0038 0120     		movs	r0, #1
 32682              	.LVL4023:
15601:Core/Src/bno055.c ****         }
 32683              		.loc 1 15601 23 view .LVU9161
 32684 003a FFF7FEFF 		bl	bno055_write_page_id
 32685              	.LVL4024:
15603:Core/Src/bno055.c ****         {
 32686              		.loc 1 15603 9 is_stmt 1 view .LVU9162
15603:Core/Src/bno055.c ****         {
 32687              		.loc 1 15603 12 is_stmt 0 view .LVU9163
 32688 003e 0028     		cmp	r0, #0
 32689 0040 F1D0     		beq	.L2295
 32690 0042 EBE7     		b	.L2294
 32691              	.LVL4025:
 32692              	.L2303:
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 32693              		.loc 1 15610 21 is_stmt 1 view .LVU9164
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 32694              		.loc 1 15610 40 is_stmt 0 view .LVU9165
 32695 0044 194B     		ldr	r3, .L2304
 32696 0046 1868     		ldr	r0, [r3]
 32697 0048 0469     		ldr	r4, [r0, #16]
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 32698              		.loc 1 15610 32 view .LVU9166
 32699 004a 0123     		movs	r3, #1
 32700 004c 0DF10702 		add	r2, sp, #7
 32701 0050 1221     		movs	r1, #18
 32702 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32703 0054 A047     		blx	r4
 32704              	.LVL4026:
15614:Core/Src/bno055.c ****                     break;
 32705              		.loc 1 15614 21 is_stmt 1 view .LVU9167
15614:Core/Src/bno055.c ****                     break;
 32706              		.loc 1 15614 32 is_stmt 0 view .LVU9168
 32707 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32708 005a C3F38003 		ubfx	r3, r3, #2, #1
15614:Core/Src/bno055.c ****                     break;
 32709              		.loc 1 15614 30 view .LVU9169
 32710 005e 2B70     		strb	r3, [r5]
15615:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
 32711              		.loc 1 15615 21 is_stmt 1 view .LVU9170
 32712 0060 E8E7     		b	.L2293
 32713              	.LVL4027:
ARM GAS  /tmp/cc9kYR4Z.s 			page 917


 32714              	.L2296:
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 32715              		.loc 1 15619 21 view .LVU9171
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 32716              		.loc 1 15619 40 is_stmt 0 view .LVU9172
 32717 0062 124B     		ldr	r3, .L2304
 32718 0064 1868     		ldr	r0, [r3]
 32719 0066 0469     		ldr	r4, [r0, #16]
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 32720              		.loc 1 15619 32 view .LVU9173
 32721 0068 0123     		movs	r3, #1
 32722 006a 0DF10702 		add	r2, sp, #7
 32723 006e 1221     		movs	r1, #18
 32724 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32725 0072 A047     		blx	r4
 32726              	.LVL4028:
15623:Core/Src/bno055.c ****                     break;
 32727              		.loc 1 15623 21 is_stmt 1 view .LVU9174
15623:Core/Src/bno055.c ****                     break;
 32728              		.loc 1 15623 32 is_stmt 0 view .LVU9175
 32729 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32730 0078 C3F3C003 		ubfx	r3, r3, #3, #1
15623:Core/Src/bno055.c ****                     break;
 32731              		.loc 1 15623 30 view .LVU9176
 32732 007c 2B70     		strb	r3, [r5]
15624:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
 32733              		.loc 1 15624 21 is_stmt 1 view .LVU9177
 32734 007e D9E7     		b	.L2293
 32735              	.LVL4029:
 32736              	.L2297:
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 32737              		.loc 1 15628 21 view .LVU9178
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 32738              		.loc 1 15628 40 is_stmt 0 view .LVU9179
 32739 0080 0A4B     		ldr	r3, .L2304
 32740 0082 1868     		ldr	r0, [r3]
 32741 0084 0469     		ldr	r4, [r0, #16]
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 32742              		.loc 1 15628 32 view .LVU9180
 32743 0086 0123     		movs	r3, #1
 32744 0088 0DF10702 		add	r2, sp, #7
 32745 008c 1221     		movs	r1, #18
 32746 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32747 0090 A047     		blx	r4
 32748              	.LVL4030:
15632:Core/Src/bno055.c ****                     break;
 32749              		.loc 1 15632 21 is_stmt 1 view .LVU9181
15632:Core/Src/bno055.c ****                     break;
 32750              		.loc 1 15632 32 is_stmt 0 view .LVU9182
 32751 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32752 0096 C3F30013 		ubfx	r3, r3, #4, #1
15632:Core/Src/bno055.c ****                     break;
 32753              		.loc 1 15632 30 view .LVU9183
 32754 009a 2B70     		strb	r3, [r5]
15633:Core/Src/bno055.c ****                 default:
 32755              		.loc 1 15633 21 is_stmt 1 view .LVU9184
 32756 009c CAE7     		b	.L2293
ARM GAS  /tmp/cc9kYR4Z.s 			page 918


 32757              	.LVL4031:
 32758              	.L2298:
15592:Core/Src/bno055.c ****     }
 32759              		.loc 1 15592 16 is_stmt 0 view .LVU9185
 32760 009e 6FF07E00 		mvn	r0, #126
 32761              	.LVL4032:
15592:Core/Src/bno055.c ****     }
 32762              		.loc 1 15592 16 view .LVU9186
 32763 00a2 C7E7     		b	.L2293
 32764              	.LVL4033:
 32765              	.L2299:
15641:Core/Src/bno055.c ****         }
 32766              		.loc 1 15641 22 view .LVU9187
 32767 00a4 4FF0FF30 		mov	r0, #-1
 32768 00a8 C4E7     		b	.L2293
 32769              	.L2305:
 32770 00aa 00BF     		.align	2
 32771              	.L2304:
 32772 00ac 00000000 		.word	.LANCHOR0
 32773              		.cfi_endproc
 32774              	.LFE229:
 32776              		.section	.text.bno055_set_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 32777              		.align	1
 32778              		.global	bno055_set_accel_any_motion_no_motion_axis_enable
 32779              		.syntax unified
 32780              		.thumb
 32781              		.thumb_func
 32783              	bno055_set_accel_any_motion_no_motion_axis_enable:
 32784              	.LVL4034:
 32785              	.LFB230:
15647:Core/Src/bno055.c **** 
15648:Core/Src/bno055.c **** /*!
15649:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion enable
15650:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15651:Core/Src/bno055.c ****  *
15652:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15653:Core/Src/bno055.c ****  *     data_u8 | result
15654:Core/Src/bno055.c ****  *  ------------ | -------------
15655:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15656:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15657:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15658:Core/Src/bno055.c ****  *           channel_u8                        | value
15659:Core/Src/bno055.c ****  *     --------------------------                | ----------
15660:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15661:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15662:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15663:Core/Src/bno055.c ****  *
15664:Core/Src/bno055.c ****  *  @return results of bus communication function
15665:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15666:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15667:Core/Src/bno055.c ****  *
15668:Core/Src/bno055.c ****  *
15669:Core/Src/bno055.c ****  */
15670:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 dat
15671:Core/Src/bno055.c **** {
 32786              		.loc 1 15671 1 is_stmt 1 view -0
 32787              		.cfi_startproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 919


 32788              		@ args = 0, pretend = 0, frame = 8
 32789              		@ frame_needed = 0, uses_anonymous_args = 0
 32790              		.loc 1 15671 1 is_stmt 0 view .LVU9189
 32791 0000 70B5     		push	{r4, r5, r6, lr}
 32792              	.LCFI913:
 32793              		.cfi_def_cfa_offset 16
 32794              		.cfi_offset 4, -16
 32795              		.cfi_offset 5, -12
 32796              		.cfi_offset 6, -8
 32797              		.cfi_offset 14, -4
 32798 0002 82B0     		sub	sp, sp, #8
 32799              	.LCFI914:
 32800              		.cfi_def_cfa_offset 24
15672:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32801              		.loc 1 15672 5 is_stmt 1 view .LVU9190
 32802              	.LVL4035:
15673:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32803              		.loc 1 15673 5 view .LVU9191
 32804              		.loc 1 15673 8 is_stmt 0 view .LVU9192
 32805 0004 0023     		movs	r3, #0
 32806 0006 8DF80730 		strb	r3, [sp, #7]
15674:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32807              		.loc 1 15674 5 is_stmt 1 view .LVU9193
 32808              	.LVL4036:
15675:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32809              		.loc 1 15675 5 view .LVU9194
15676:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32810              		.loc 1 15676 5 view .LVU9195
 32811              		.loc 1 15676 8 is_stmt 0 view .LVU9196
 32812 000a 8DF80630 		strb	r3, [sp, #6]
15677:Core/Src/bno055.c **** 
15678:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15679:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32813              		.loc 1 15679 5 is_stmt 1 view .LVU9197
 32814              		.loc 1 15679 18 is_stmt 0 view .LVU9198
 32815 000e 544B     		ldr	r3, .L2322
 32816 0010 1B68     		ldr	r3, [r3]
 32817              		.loc 1 15679 8 view .LVU9199
 32818 0012 002B     		cmp	r3, #0
 32819 0014 00F0A080 		beq	.L2312
 32820 0018 0446     		mov	r4, r0
 32821 001a 0D46     		mov	r5, r1
15680:Core/Src/bno055.c ****     {
15681:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15682:Core/Src/bno055.c ****     }
15683:Core/Src/bno055.c ****     else
15684:Core/Src/bno055.c ****     {
15685:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15686:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15687:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15688:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32822              		.loc 1 15688 9 is_stmt 1 view .LVU9200
 32823              		.loc 1 15688 19 is_stmt 0 view .LVU9201
 32824 001c 0DF10600 		add	r0, sp, #6
 32825              	.LVL4037:
 32826              		.loc 1 15688 19 view .LVU9202
 32827 0020 FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 920


 32828              	.LVL4038:
15689:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32829              		.loc 1 15689 9 is_stmt 1 view .LVU9203
 32830              		.loc 1 15689 12 is_stmt 0 view .LVU9204
 32831 0024 0646     		mov	r6, r0
 32832 0026 0028     		cmp	r0, #0
 32833 0028 40F08580 		bne	.L2313
15690:Core/Src/bno055.c ****         {
15691:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32834              		.loc 1 15691 13 is_stmt 1 view .LVU9205
 32835              		.loc 1 15691 32 is_stmt 0 view .LVU9206
 32836 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32837              		.loc 1 15691 16 view .LVU9207
 32838 0030 1BB9     		cbnz	r3, .L2318
 32839              	.LVL4039:
 32840              	.L2309:
15692:Core/Src/bno055.c ****             {
15693:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15694:Core/Src/bno055.c ****             }
15695:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32841              		.loc 1 15695 13 is_stmt 1 view .LVU9208
 32842              		.loc 1 15695 16 is_stmt 0 view .LVU9209
 32843 0032 46B1     		cbz	r6, .L2319
15696:Core/Src/bno055.c ****             {
15697:Core/Src/bno055.c ****                 /* Write page as one */
15698:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15699:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15700:Core/Src/bno055.c ****                 {
15701:Core/Src/bno055.c ****                     switch (channel_u8)
15702:Core/Src/bno055.c ****                     {
15703:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15704:Core/Src/bno055.c **** 
15705:Core/Src/bno055.c ****                             /* Write the value of
15706:Core/Src/bno055.c ****                              * accel anymotion x enable*/
15707:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15708:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
15709:Core/Src/bno055.c ****                                                                       &data_u8r,
15710:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15711:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15712:Core/Src/bno055.c ****                             {
15713:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_
15714:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15715:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15716:Core/Src/bno055.c ****                                                                             &data_u8r,
15717:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15718:Core/Src/bno055.c ****                             }
15719:Core/Src/bno055.c ****                             break;
15720:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15721:Core/Src/bno055.c **** 
15722:Core/Src/bno055.c ****                             /* Write the value of
15723:Core/Src/bno055.c ****                              * accel anymotion y enable*/
15724:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15725:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
15726:Core/Src/bno055.c ****                                                                       &data_u8r,
15727:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15728:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15729:Core/Src/bno055.c ****                             {
ARM GAS  /tmp/cc9kYR4Z.s 			page 921


15730:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_
15731:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15732:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15733:Core/Src/bno055.c ****                                                                             &data_u8r,
15734:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15735:Core/Src/bno055.c ****                             }
15736:Core/Src/bno055.c ****                             break;
15737:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15738:Core/Src/bno055.c **** 
15739:Core/Src/bno055.c ****                             /* Write the value of
15740:Core/Src/bno055.c ****                              * accel anymotion z enable*/
15741:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15742:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
15743:Core/Src/bno055.c ****                                                                       &data_u8r,
15744:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15745:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15746:Core/Src/bno055.c ****                             {
15747:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_
15748:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15749:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15750:Core/Src/bno055.c ****                                                                             &data_u8r,
15751:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15752:Core/Src/bno055.c ****                             }
15753:Core/Src/bno055.c ****                             break;
15754:Core/Src/bno055.c ****                         default:
15755:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15756:Core/Src/bno055.c ****                             break;
15757:Core/Src/bno055.c ****                     }
15758:Core/Src/bno055.c ****                 }
15759:Core/Src/bno055.c ****                 else
15760:Core/Src/bno055.c ****                 {
15761:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15762:Core/Src/bno055.c ****                 }
15763:Core/Src/bno055.c ****             }
15764:Core/Src/bno055.c ****             else
15765:Core/Src/bno055.c ****             {
15766:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32844              		.loc 1 15766 26 view .LVU9210
 32845 0034 4FF0FF34 		mov	r4, #-1
 32846 0038 7FE0     		b	.L2308
 32847              	.LVL4040:
 32848              	.L2318:
15693:Core/Src/bno055.c ****             }
 32849              		.loc 1 15693 17 is_stmt 1 view .LVU9211
15693:Core/Src/bno055.c ****             }
 32850              		.loc 1 15693 28 is_stmt 0 view .LVU9212
 32851 003a FFF7FEFF 		bl	bno055_set_operation_mode
 32852              	.LVL4041:
15693:Core/Src/bno055.c ****             }
 32853              		.loc 1 15693 25 view .LVU9213
 32854 003e 56FA80F6 		uxtab	r6, r6, r0
 32855 0042 76B2     		sxtb	r6, r6
 32856              	.LVL4042:
15693:Core/Src/bno055.c ****             }
 32857              		.loc 1 15693 25 view .LVU9214
 32858 0044 F5E7     		b	.L2309
 32859              	.L2319:
ARM GAS  /tmp/cc9kYR4Z.s 			page 922


15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32860              		.loc 1 15698 17 is_stmt 1 view .LVU9215
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32861              		.loc 1 15698 30 is_stmt 0 view .LVU9216
 32862 0046 0120     		movs	r0, #1
 32863 0048 FFF7FEFF 		bl	bno055_write_page_id
 32864              	.LVL4043:
15699:Core/Src/bno055.c ****                 {
 32865              		.loc 1 15699 17 is_stmt 1 view .LVU9217
15699:Core/Src/bno055.c ****                 {
 32866              		.loc 1 15699 20 is_stmt 0 view .LVU9218
 32867 004c 0028     		cmp	r0, #0
 32868 004e 7AD1     		bne	.L2315
15701:Core/Src/bno055.c ****                     {
 32869              		.loc 1 15701 21 is_stmt 1 view .LVU9219
 32870 0050 012C     		cmp	r4, #1
 32871 0052 29D0     		beq	.L2310
 32872 0054 022C     		cmp	r4, #2
 32873 0056 4BD0     		beq	.L2311
 32874 0058 14B1     		cbz	r4, .L2320
 32875 005a 6FF00104 		mvn	r4, #1
 32876 005e 6CE0     		b	.L2308
 32877              	.L2320:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32878              		.loc 1 15707 29 view .LVU9220
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32879              		.loc 1 15707 48 is_stmt 0 view .LVU9221
 32880 0060 3F4B     		ldr	r3, .L2322
 32881 0062 1868     		ldr	r0, [r3]
 32882              	.LVL4044:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32883              		.loc 1 15707 48 view .LVU9222
 32884 0064 0469     		ldr	r4, [r0, #16]
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32885              		.loc 1 15707 40 view .LVU9223
 32886 0066 0123     		movs	r3, #1
 32887 0068 0DF10702 		add	r2, sp, #7
 32888 006c 1221     		movs	r1, #18
 32889 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32890 0070 A047     		blx	r4
 32891              	.LVL4045:
15711:Core/Src/bno055.c ****                             {
 32892              		.loc 1 15711 29 is_stmt 1 view .LVU9224
15711:Core/Src/bno055.c ****                             {
 32893              		.loc 1 15711 32 is_stmt 0 view .LVU9225
 32894 0072 0446     		mov	r4, r0
 32895 0074 0028     		cmp	r0, #0
 32896 0076 60D1     		bne	.L2308
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32897              		.loc 1 15713 33 is_stmt 1 view .LVU9226
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32898              		.loc 1 15713 44 is_stmt 0 view .LVU9227
 32899 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32900 007c 23F00403 		bic	r3, r3, #4
 32901 0080 5BB2     		sxtb	r3, r3
 32902 0082 AA00     		lsls	r2, r5, #2
 32903 0084 02F00402 		and	r2, r2, #4
ARM GAS  /tmp/cc9kYR4Z.s 			page 923


 32904 0088 1343     		orrs	r3, r3, r2
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32905              		.loc 1 15713 42 view .LVU9228
 32906 008a 8DF80730 		strb	r3, [sp, #7]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32907              		.loc 1 15714 33 is_stmt 1 view .LVU9229
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32908              		.loc 1 15714 53 is_stmt 0 view .LVU9230
 32909 008e 344B     		ldr	r3, .L2322
 32910 0090 1868     		ldr	r0, [r3]
 32911              	.LVL4046:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32912              		.loc 1 15714 53 view .LVU9231
 32913 0092 C568     		ldr	r5, [r0, #12]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32914              		.loc 1 15714 45 view .LVU9232
 32915 0094 0123     		movs	r3, #1
 32916 0096 0DF10702 		add	r2, sp, #7
 32917 009a 1221     		movs	r1, #18
 32918 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32919 009e A847     		blx	r5
 32920              	.LVL4047:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32921              		.loc 1 15714 42 view .LVU9233
 32922 00a0 54FA80F3 		uxtab	r3, r4, r0
 32923 00a4 5CB2     		sxtb	r4, r3
 32924              	.LVL4048:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32925              		.loc 1 15714 42 view .LVU9234
 32926 00a6 48E0     		b	.L2308
 32927              	.LVL4049:
 32928              	.L2310:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 32929              		.loc 1 15724 29 is_stmt 1 view .LVU9235
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 32930              		.loc 1 15724 48 is_stmt 0 view .LVU9236
 32931 00a8 2D4B     		ldr	r3, .L2322
 32932 00aa 1868     		ldr	r0, [r3]
 32933              	.LVL4050:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 32934              		.loc 1 15724 48 view .LVU9237
 32935 00ac 0469     		ldr	r4, [r0, #16]
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 32936              		.loc 1 15724 40 view .LVU9238
 32937 00ae 0123     		movs	r3, #1
 32938 00b0 0DF10702 		add	r2, sp, #7
 32939 00b4 1221     		movs	r1, #18
 32940 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32941 00b8 A047     		blx	r4
 32942              	.LVL4051:
15728:Core/Src/bno055.c ****                             {
 32943              		.loc 1 15728 29 is_stmt 1 view .LVU9239
15728:Core/Src/bno055.c ****                             {
 32944              		.loc 1 15728 32 is_stmt 0 view .LVU9240
 32945 00ba 0446     		mov	r4, r0
 32946 00bc 0028     		cmp	r0, #0
 32947 00be 3CD1     		bne	.L2308
ARM GAS  /tmp/cc9kYR4Z.s 			page 924


15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32948              		.loc 1 15730 33 is_stmt 1 view .LVU9241
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32949              		.loc 1 15730 44 is_stmt 0 view .LVU9242
 32950 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32951 00c4 23F00803 		bic	r3, r3, #8
 32952 00c8 5BB2     		sxtb	r3, r3
 32953 00ca EA00     		lsls	r2, r5, #3
 32954 00cc 02F00802 		and	r2, r2, #8
 32955 00d0 1343     		orrs	r3, r3, r2
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32956              		.loc 1 15730 42 view .LVU9243
 32957 00d2 8DF80730 		strb	r3, [sp, #7]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32958              		.loc 1 15731 33 is_stmt 1 view .LVU9244
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32959              		.loc 1 15731 53 is_stmt 0 view .LVU9245
 32960 00d6 224B     		ldr	r3, .L2322
 32961 00d8 1868     		ldr	r0, [r3]
 32962              	.LVL4052:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32963              		.loc 1 15731 53 view .LVU9246
 32964 00da C568     		ldr	r5, [r0, #12]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32965              		.loc 1 15731 45 view .LVU9247
 32966 00dc 0123     		movs	r3, #1
 32967 00de 0DF10702 		add	r2, sp, #7
 32968 00e2 1221     		movs	r1, #18
 32969 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32970 00e6 A847     		blx	r5
 32971              	.LVL4053:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32972              		.loc 1 15731 42 view .LVU9248
 32973 00e8 54FA80F3 		uxtab	r3, r4, r0
 32974 00ec 5CB2     		sxtb	r4, r3
 32975              	.LVL4054:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 32976              		.loc 1 15731 42 view .LVU9249
 32977 00ee 24E0     		b	.L2308
 32978              	.LVL4055:
 32979              	.L2311:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32980              		.loc 1 15741 29 is_stmt 1 view .LVU9250
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32981              		.loc 1 15741 48 is_stmt 0 view .LVU9251
 32982 00f0 1B4B     		ldr	r3, .L2322
 32983 00f2 1868     		ldr	r0, [r3]
 32984              	.LVL4056:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32985              		.loc 1 15741 48 view .LVU9252
 32986 00f4 0469     		ldr	r4, [r0, #16]
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 32987              		.loc 1 15741 40 view .LVU9253
 32988 00f6 0123     		movs	r3, #1
 32989 00f8 0DF10702 		add	r2, sp, #7
 32990 00fc 1221     		movs	r1, #18
 32991 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/cc9kYR4Z.s 			page 925


 32992 0100 A047     		blx	r4
 32993              	.LVL4057:
15745:Core/Src/bno055.c ****                             {
 32994              		.loc 1 15745 29 is_stmt 1 view .LVU9254
15745:Core/Src/bno055.c ****                             {
 32995              		.loc 1 15745 32 is_stmt 0 view .LVU9255
 32996 0102 0446     		mov	r4, r0
 32997 0104 C8B9     		cbnz	r0, .L2308
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32998              		.loc 1 15747 33 is_stmt 1 view .LVU9256
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32999              		.loc 1 15747 44 is_stmt 0 view .LVU9257
 33000 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33001 010a 23F01003 		bic	r3, r3, #16
 33002 010e 5AB2     		sxtb	r2, r3
 33003 0110 2B01     		lsls	r3, r5, #4
 33004 0112 03F01003 		and	r3, r3, #16
 33005 0116 1343     		orrs	r3, r3, r2
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33006              		.loc 1 15747 42 view .LVU9258
 33007 0118 8DF80730 		strb	r3, [sp, #7]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33008              		.loc 1 15748 33 is_stmt 1 view .LVU9259
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33009              		.loc 1 15748 53 is_stmt 0 view .LVU9260
 33010 011c 104B     		ldr	r3, .L2322
 33011 011e 1868     		ldr	r0, [r3]
 33012              	.LVL4058:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33013              		.loc 1 15748 53 view .LVU9261
 33014 0120 C568     		ldr	r5, [r0, #12]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33015              		.loc 1 15748 45 view .LVU9262
 33016 0122 0123     		movs	r3, #1
 33017 0124 0DF10702 		add	r2, sp, #7
 33018 0128 1221     		movs	r1, #18
 33019 012a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33020 012c A847     		blx	r5
 33021              	.LVL4059:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33022              		.loc 1 15748 42 view .LVU9263
 33023 012e 54FA80F3 		uxtab	r3, r4, r0
 33024 0132 5CB2     		sxtb	r4, r3
 33025              	.LVL4060:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33026              		.loc 1 15748 42 view .LVU9264
 33027 0134 01E0     		b	.L2308
 33028              	.LVL4061:
 33029              	.L2313:
15767:Core/Src/bno055.c ****             }
15768:Core/Src/bno055.c ****         }
15769:Core/Src/bno055.c ****         else
15770:Core/Src/bno055.c ****         {
15771:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33030              		.loc 1 15771 22 view .LVU9265
 33031 0136 4FF0FF34 		mov	r4, #-1
 33032              	.LVL4062:
ARM GAS  /tmp/cc9kYR4Z.s 			page 926


 33033              	.L2308:
15772:Core/Src/bno055.c ****         }
15773:Core/Src/bno055.c ****     }
15774:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33034              		.loc 1 15774 5 is_stmt 1 view .LVU9266
 33035              		.loc 1 15774 24 is_stmt 0 view .LVU9267
 33036 013a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33037              		.loc 1 15774 8 view .LVU9268
 33038 013e 28B9     		cbnz	r0, .L2321
 33039              	.LVL4063:
 33040              	.L2307:
15775:Core/Src/bno055.c ****     {
15776:Core/Src/bno055.c ****         /* set the operation mode of
15777:Core/Src/bno055.c ****          * previous operation mode*/
15778:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15779:Core/Src/bno055.c ****     }
15780:Core/Src/bno055.c **** 
15781:Core/Src/bno055.c ****     return com_rslt;
15782:Core/Src/bno055.c **** }
 33041              		.loc 1 15782 1 view .LVU9269
 33042 0140 2046     		mov	r0, r4
 33043 0142 02B0     		add	sp, sp, #8
 33044              	.LCFI915:
 33045              		.cfi_remember_state
 33046              		.cfi_def_cfa_offset 16
 33047              		@ sp needed
 33048 0144 70BD     		pop	{r4, r5, r6, pc}
 33049              	.LVL4064:
 33050              	.L2315:
 33051              	.LCFI916:
 33052              		.cfi_restore_state
15761:Core/Src/bno055.c ****                 }
 33053              		.loc 1 15761 30 view .LVU9270
 33054 0146 4FF0FF34 		mov	r4, #-1
 33055 014a F6E7     		b	.L2308
 33056              	.LVL4065:
 33057              	.L2321:
15778:Core/Src/bno055.c ****     }
 33058              		.loc 1 15778 9 is_stmt 1 view .LVU9271
15778:Core/Src/bno055.c ****     }
 33059              		.loc 1 15778 21 is_stmt 0 view .LVU9272
 33060 014c FFF7FEFF 		bl	bno055_set_operation_mode
 33061              	.LVL4066:
15778:Core/Src/bno055.c ****     }
 33062              		.loc 1 15778 18 view .LVU9273
 33063 0150 54FA80F0 		uxtab	r0, r4, r0
 33064 0154 44B2     		sxtb	r4, r0
 33065              	.LVL4067:
15778:Core/Src/bno055.c ****     }
 33066              		.loc 1 15778 18 view .LVU9274
 33067 0156 F3E7     		b	.L2307
 33068              	.LVL4068:
 33069              	.L2312:
15681:Core/Src/bno055.c ****     }
 33070              		.loc 1 15681 16 view .LVU9275
 33071 0158 6FF07E04 		mvn	r4, #126
 33072 015c F0E7     		b	.L2307
ARM GAS  /tmp/cc9kYR4Z.s 			page 927


 33073              	.L2323:
 33074 015e 00BF     		.align	2
 33075              	.L2322:
 33076 0160 00000000 		.word	.LANCHOR0
 33077              		.cfi_endproc
 33078              	.LFE230:
 33080              		.section	.text.bno055_get_accel_high_g_axis_enable,"ax",%progbits
 33081              		.align	1
 33082              		.global	bno055_get_accel_high_g_axis_enable
 33083              		.syntax unified
 33084              		.thumb
 33085              		.thumb_func
 33087              	bno055_get_accel_high_g_axis_enable:
 33088              	.LVL4069:
 33089              	.LFB231:
15783:Core/Src/bno055.c **** 
15784:Core/Src/bno055.c **** /*!
15785:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg enable
15786:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15787:Core/Src/bno055.c ****  *
15788:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15789:Core/Src/bno055.c ****  *      data_u8| result
15790:Core/Src/bno055.c ****  *  ------------ | -------------
15791:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15792:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15793:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15794:Core/Src/bno055.c ****  *               channel_u8     | value
15795:Core/Src/bno055.c ****  *     -------------------------- | ----------
15796:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15797:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15798:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15799:Core/Src/bno055.c ****  *
15800:Core/Src/bno055.c ****  *  @return results of bus communication function
15801:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15802:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15803:Core/Src/bno055.c ****  *
15804:Core/Src/bno055.c ****  *
15805:Core/Src/bno055.c ****  */
15806:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_axis_enable(u8 channel_u8, u8 *data_u8)
15807:Core/Src/bno055.c **** {
 33090              		.loc 1 15807 1 is_stmt 1 view -0
 33091              		.cfi_startproc
 33092              		@ args = 0, pretend = 0, frame = 8
 33093              		@ frame_needed = 0, uses_anonymous_args = 0
 33094              		.loc 1 15807 1 is_stmt 0 view .LVU9277
 33095 0000 30B5     		push	{r4, r5, lr}
 33096              	.LCFI917:
 33097              		.cfi_def_cfa_offset 12
 33098              		.cfi_offset 4, -12
 33099              		.cfi_offset 5, -8
 33100              		.cfi_offset 14, -4
 33101 0002 83B0     		sub	sp, sp, #12
 33102              	.LCFI918:
 33103              		.cfi_def_cfa_offset 24
15808:Core/Src/bno055.c ****     /* Variable used to return value of
15809:Core/Src/bno055.c ****      * communication routine*/
15810:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 928


 33104              		.loc 1 15810 5 is_stmt 1 view .LVU9278
 33105              	.LVL4070:
15811:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33106              		.loc 1 15811 5 view .LVU9279
 33107              		.loc 1 15811 8 is_stmt 0 view .LVU9280
 33108 0004 0023     		movs	r3, #0
 33109 0006 8DF80730 		strb	r3, [sp, #7]
15812:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33110              		.loc 1 15812 5 is_stmt 1 view .LVU9281
 33111              	.LVL4071:
15813:Core/Src/bno055.c **** 
15814:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15815:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33112              		.loc 1 15815 5 view .LVU9282
 33113              		.loc 1 15815 18 is_stmt 0 view .LVU9283
 33114 000a 274B     		ldr	r3, .L2336
 33115 000c 1B68     		ldr	r3, [r3]
 33116              		.loc 1 15815 8 view .LVU9284
 33117 000e 002B     		cmp	r3, #0
 33118 0010 44D0     		beq	.L2330
 33119 0012 0446     		mov	r4, r0
 33120 0014 0D46     		mov	r5, r1
15816:Core/Src/bno055.c ****     {
15817:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15818:Core/Src/bno055.c ****     }
15819:Core/Src/bno055.c ****     else
15820:Core/Src/bno055.c ****     {
15821:Core/Src/bno055.c ****         /*condition check for page, accel highg enable is
15822:Core/Src/bno055.c ****          * available in the page one*/
15823:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33121              		.loc 1 15823 9 is_stmt 1 view .LVU9285
 33122              		.loc 1 15823 21 is_stmt 0 view .LVU9286
 33123 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33124              		.loc 1 15823 12 view .LVU9287
 33125 0018 012B     		cmp	r3, #1
 33126 001a 0DD1     		bne	.L2334
 33127              	.LVL4072:
 33128              	.L2326:
15824:Core/Src/bno055.c ****         {
15825:Core/Src/bno055.c ****             /* Write page as one */
15826:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15827:Core/Src/bno055.c ****         }
15828:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33129              		.loc 1 15828 53 discriminator 1 view .LVU9288
 33130 001c 224B     		ldr	r3, .L2336
 33131 001e 1B68     		ldr	r3, [r3]
 33132 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33133              		.loc 1 15828 41 discriminator 1 view .LVU9289
 33134 0022 012B     		cmp	r3, #1
 33135 0024 3DD1     		bne	.L2331
 33136              	.L2327:
15829:Core/Src/bno055.c ****         {
15830:Core/Src/bno055.c ****             switch (channel_u8)
 33137              		.loc 1 15830 13 is_stmt 1 view .LVU9290
 33138 0026 012C     		cmp	r4, #1
 33139 0028 1BD0     		beq	.L2328
 33140 002a 022C     		cmp	r4, #2
ARM GAS  /tmp/cc9kYR4Z.s 			page 929


 33141 002c 28D0     		beq	.L2329
 33142 002e 4CB1     		cbz	r4, .L2335
 33143 0030 6FF00100 		mvn	r0, #1
 33144              	.LVL4073:
 33145              	.L2325:
15831:Core/Src/bno055.c ****             {
15832:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_X_AXIS:
15833:Core/Src/bno055.c **** 
15834:Core/Src/bno055.c ****                     /* Read the value of accel x highg enable*/
15835:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15836:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
15837:Core/Src/bno055.c ****                                                               &data_u8r,
15838:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15839:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS);
15840:Core/Src/bno055.c ****                     break;
15841:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
15842:Core/Src/bno055.c **** 
15843:Core/Src/bno055.c ****                     /* Read the value of accel y highg enable*/
15844:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15845:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
15846:Core/Src/bno055.c ****                                                               &data_u8r,
15847:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15848:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS);
15849:Core/Src/bno055.c ****                     break;
15850:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
15851:Core/Src/bno055.c **** 
15852:Core/Src/bno055.c ****                     /* Read the value of accel z highg enable*/
15853:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15854:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
15855:Core/Src/bno055.c ****                                                               &data_u8r,
15856:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15857:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS);
15858:Core/Src/bno055.c ****                     break;
15859:Core/Src/bno055.c ****                 default:
15860:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15861:Core/Src/bno055.c ****                     break;
15862:Core/Src/bno055.c ****             }
15863:Core/Src/bno055.c ****         }
15864:Core/Src/bno055.c ****         else
15865:Core/Src/bno055.c ****         {
15866:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15867:Core/Src/bno055.c ****         }
15868:Core/Src/bno055.c ****     }
15869:Core/Src/bno055.c **** 
15870:Core/Src/bno055.c ****     return com_rslt;
15871:Core/Src/bno055.c **** }
 33146              		.loc 1 15871 1 is_stmt 0 view .LVU9291
 33147 0034 03B0     		add	sp, sp, #12
 33148              	.LCFI919:
 33149              		.cfi_remember_state
 33150              		.cfi_def_cfa_offset 12
 33151              		@ sp needed
 33152 0036 30BD     		pop	{r4, r5, pc}
 33153              	.LVL4074:
 33154              	.L2334:
 33155              	.LCFI920:
 33156              		.cfi_restore_state
ARM GAS  /tmp/cc9kYR4Z.s 			page 930


15826:Core/Src/bno055.c ****         }
 33157              		.loc 1 15826 13 is_stmt 1 view .LVU9292
15826:Core/Src/bno055.c ****         }
 33158              		.loc 1 15826 23 is_stmt 0 view .LVU9293
 33159 0038 0120     		movs	r0, #1
 33160              	.LVL4075:
15826:Core/Src/bno055.c ****         }
 33161              		.loc 1 15826 23 view .LVU9294
 33162 003a FFF7FEFF 		bl	bno055_write_page_id
 33163              	.LVL4076:
15828:Core/Src/bno055.c ****         {
 33164              		.loc 1 15828 9 is_stmt 1 view .LVU9295
15828:Core/Src/bno055.c ****         {
 33165              		.loc 1 15828 12 is_stmt 0 view .LVU9296
 33166 003e 0028     		cmp	r0, #0
 33167 0040 F1D0     		beq	.L2327
 33168 0042 EBE7     		b	.L2326
 33169              	.LVL4077:
 33170              	.L2335:
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33171              		.loc 1 15835 21 is_stmt 1 view .LVU9297
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33172              		.loc 1 15835 40 is_stmt 0 view .LVU9298
 33173 0044 184B     		ldr	r3, .L2336
 33174 0046 1868     		ldr	r0, [r3]
 33175 0048 0469     		ldr	r4, [r0, #16]
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33176              		.loc 1 15835 32 view .LVU9299
 33177 004a 0123     		movs	r3, #1
 33178 004c 0DF10702 		add	r2, sp, #7
 33179 0050 1221     		movs	r1, #18
 33180 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33181 0054 A047     		blx	r4
 33182              	.LVL4078:
15839:Core/Src/bno055.c ****                     break;
 33183              		.loc 1 15839 21 is_stmt 1 view .LVU9300
15839:Core/Src/bno055.c ****                     break;
 33184              		.loc 1 15839 32 is_stmt 0 view .LVU9301
 33185 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33186 005a C3F34013 		ubfx	r3, r3, #5, #1
15839:Core/Src/bno055.c ****                     break;
 33187              		.loc 1 15839 30 view .LVU9302
 33188 005e 2B70     		strb	r3, [r5]
15840:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
 33189              		.loc 1 15840 21 is_stmt 1 view .LVU9303
 33190 0060 E8E7     		b	.L2325
 33191              	.LVL4079:
 33192              	.L2328:
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33193              		.loc 1 15844 21 view .LVU9304
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33194              		.loc 1 15844 40 is_stmt 0 view .LVU9305
 33195 0062 114B     		ldr	r3, .L2336
 33196 0064 1868     		ldr	r0, [r3]
 33197 0066 0469     		ldr	r4, [r0, #16]
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33198              		.loc 1 15844 32 view .LVU9306
ARM GAS  /tmp/cc9kYR4Z.s 			page 931


 33199 0068 0123     		movs	r3, #1
 33200 006a 0DF10702 		add	r2, sp, #7
 33201 006e 1221     		movs	r1, #18
 33202 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33203 0072 A047     		blx	r4
 33204              	.LVL4080:
15848:Core/Src/bno055.c ****                     break;
 33205              		.loc 1 15848 21 is_stmt 1 view .LVU9307
15848:Core/Src/bno055.c ****                     break;
 33206              		.loc 1 15848 32 is_stmt 0 view .LVU9308
 33207 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33208 0078 C3F38013 		ubfx	r3, r3, #6, #1
15848:Core/Src/bno055.c ****                     break;
 33209              		.loc 1 15848 30 view .LVU9309
 33210 007c 2B70     		strb	r3, [r5]
15849:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
 33211              		.loc 1 15849 21 is_stmt 1 view .LVU9310
 33212 007e D9E7     		b	.L2325
 33213              	.LVL4081:
 33214              	.L2329:
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33215              		.loc 1 15853 21 view .LVU9311
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33216              		.loc 1 15853 40 is_stmt 0 view .LVU9312
 33217 0080 094B     		ldr	r3, .L2336
 33218 0082 1868     		ldr	r0, [r3]
 33219 0084 0469     		ldr	r4, [r0, #16]
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33220              		.loc 1 15853 32 view .LVU9313
 33221 0086 0123     		movs	r3, #1
 33222 0088 0DF10702 		add	r2, sp, #7
 33223 008c 1221     		movs	r1, #18
 33224 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33225 0090 A047     		blx	r4
 33226              	.LVL4082:
15857:Core/Src/bno055.c ****                     break;
 33227              		.loc 1 15857 21 is_stmt 1 view .LVU9314
15857:Core/Src/bno055.c ****                     break;
 33228              		.loc 1 15857 32 is_stmt 0 view .LVU9315
 33229 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33230 0096 DB09     		lsrs	r3, r3, #7
15857:Core/Src/bno055.c ****                     break;
 33231              		.loc 1 15857 30 view .LVU9316
 33232 0098 2B70     		strb	r3, [r5]
15858:Core/Src/bno055.c ****                 default:
 33233              		.loc 1 15858 21 is_stmt 1 view .LVU9317
 33234 009a CBE7     		b	.L2325
 33235              	.LVL4083:
 33236              	.L2330:
15817:Core/Src/bno055.c ****     }
 33237              		.loc 1 15817 16 is_stmt 0 view .LVU9318
 33238 009c 6FF07E00 		mvn	r0, #126
 33239              	.LVL4084:
15817:Core/Src/bno055.c ****     }
 33240              		.loc 1 15817 16 view .LVU9319
 33241 00a0 C8E7     		b	.L2325
 33242              	.LVL4085:
ARM GAS  /tmp/cc9kYR4Z.s 			page 932


 33243              	.L2331:
15866:Core/Src/bno055.c ****         }
 33244              		.loc 1 15866 22 view .LVU9320
 33245 00a2 4FF0FF30 		mov	r0, #-1
 33246 00a6 C5E7     		b	.L2325
 33247              	.L2337:
 33248              		.align	2
 33249              	.L2336:
 33250 00a8 00000000 		.word	.LANCHOR0
 33251              		.cfi_endproc
 33252              	.LFE231:
 33254              		.section	.text.bno055_set_accel_high_g_axis_enable,"ax",%progbits
 33255              		.align	1
 33256              		.global	bno055_set_accel_high_g_axis_enable
 33257              		.syntax unified
 33258              		.thumb
 33259              		.thumb_func
 33261              	bno055_set_accel_high_g_axis_enable:
 33262              	.LVL4086:
 33263              	.LFB232:
15872:Core/Src/bno055.c **** 
15873:Core/Src/bno055.c **** /*!
15874:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg enable
15875:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15876:Core/Src/bno055.c ****  *
15877:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15878:Core/Src/bno055.c ****  *      data_u8| result
15879:Core/Src/bno055.c ****  *  ------------ | -------------
15880:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15881:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15882:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15883:Core/Src/bno055.c ****  *               channel_u8     | value
15884:Core/Src/bno055.c ****  *     -------------------------- | ----------
15885:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15886:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15887:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15888:Core/Src/bno055.c ****  *
15889:Core/Src/bno055.c ****  *  @return results of bus communication function
15890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15892:Core/Src/bno055.c ****  *
15893:Core/Src/bno055.c ****  *
15894:Core/Src/bno055.c ****  */
15895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_axis_enable(u8 channel_u8, u8 data_u8)
15896:Core/Src/bno055.c **** {
 33264              		.loc 1 15896 1 is_stmt 1 view -0
 33265              		.cfi_startproc
 33266              		@ args = 0, pretend = 0, frame = 8
 33267              		@ frame_needed = 0, uses_anonymous_args = 0
 33268              		.loc 1 15896 1 is_stmt 0 view .LVU9322
 33269 0000 70B5     		push	{r4, r5, r6, lr}
 33270              	.LCFI921:
 33271              		.cfi_def_cfa_offset 16
 33272              		.cfi_offset 4, -16
 33273              		.cfi_offset 5, -12
 33274              		.cfi_offset 6, -8
 33275              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9kYR4Z.s 			page 933


 33276 0002 82B0     		sub	sp, sp, #8
 33277              	.LCFI922:
 33278              		.cfi_def_cfa_offset 24
15897:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33279              		.loc 1 15897 5 is_stmt 1 view .LVU9323
 33280              	.LVL4087:
15898:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33281              		.loc 1 15898 5 view .LVU9324
 33282              		.loc 1 15898 8 is_stmt 0 view .LVU9325
 33283 0004 0023     		movs	r3, #0
 33284 0006 8DF80730 		strb	r3, [sp, #7]
15899:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33285              		.loc 1 15899 5 is_stmt 1 view .LVU9326
 33286              	.LVL4088:
15900:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33287              		.loc 1 15900 5 view .LVU9327
15901:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33288              		.loc 1 15901 5 view .LVU9328
 33289              		.loc 1 15901 8 is_stmt 0 view .LVU9329
 33290 000a 8DF80630 		strb	r3, [sp, #6]
15902:Core/Src/bno055.c **** 
15903:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15904:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33291              		.loc 1 15904 5 is_stmt 1 view .LVU9330
 33292              		.loc 1 15904 18 is_stmt 0 view .LVU9331
 33293 000e 524B     		ldr	r3, .L2354
 33294 0010 1B68     		ldr	r3, [r3]
 33295              		.loc 1 15904 8 view .LVU9332
 33296 0012 002B     		cmp	r3, #0
 33297 0014 00F09D80 		beq	.L2344
 33298 0018 0446     		mov	r4, r0
 33299 001a 0D46     		mov	r5, r1
15905:Core/Src/bno055.c ****     {
15906:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15907:Core/Src/bno055.c ****     }
15908:Core/Src/bno055.c ****     else
15909:Core/Src/bno055.c ****     {
15910:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15911:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15912:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15913:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33300              		.loc 1 15913 9 is_stmt 1 view .LVU9333
 33301              		.loc 1 15913 19 is_stmt 0 view .LVU9334
 33302 001c 0DF10600 		add	r0, sp, #6
 33303              	.LVL4089:
 33304              		.loc 1 15913 19 view .LVU9335
 33305 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 33306              	.LVL4090:
15914:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33307              		.loc 1 15914 9 is_stmt 1 view .LVU9336
 33308              		.loc 1 15914 12 is_stmt 0 view .LVU9337
 33309 0024 0646     		mov	r6, r0
 33310 0026 0028     		cmp	r0, #0
 33311 0028 40F08280 		bne	.L2345
15915:Core/Src/bno055.c ****         {
15916:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33312              		.loc 1 15916 13 is_stmt 1 view .LVU9338
ARM GAS  /tmp/cc9kYR4Z.s 			page 934


 33313              		.loc 1 15916 32 is_stmt 0 view .LVU9339
 33314 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33315              		.loc 1 15916 16 view .LVU9340
 33316 0030 1BB9     		cbnz	r3, .L2350
 33317              	.LVL4091:
 33318              	.L2341:
15917:Core/Src/bno055.c ****             {
15918:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15919:Core/Src/bno055.c ****             }
15920:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33319              		.loc 1 15920 13 is_stmt 1 view .LVU9341
 33320              		.loc 1 15920 16 is_stmt 0 view .LVU9342
 33321 0032 46B1     		cbz	r6, .L2351
15921:Core/Src/bno055.c ****             {
15922:Core/Src/bno055.c ****                 /* Write page as one */
15923:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15924:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15925:Core/Src/bno055.c ****                 {
15926:Core/Src/bno055.c ****                     switch (channel_u8)
15927:Core/Src/bno055.c ****                     {
15928:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_X_AXIS:
15929:Core/Src/bno055.c **** 
15930:Core/Src/bno055.c ****                             /* Write the value of
15931:Core/Src/bno055.c ****                              * accel x highg enable*/
15932:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15933:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
15934:Core/Src/bno055.c ****                                                                       &data_u8r,
15935:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15936:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15937:Core/Src/bno055.c ****                             {
15938:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS
15939:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15940:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
15941:Core/Src/bno055.c ****                                                                             &data_u8r,
15942:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15943:Core/Src/bno055.c ****                             }
15944:Core/Src/bno055.c ****                             break;
15945:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Y_AXIS:
15946:Core/Src/bno055.c **** 
15947:Core/Src/bno055.c ****                             /* Write the value of
15948:Core/Src/bno055.c ****                              * accel y highg enable*/
15949:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15950:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
15951:Core/Src/bno055.c ****                                                                       &data_u8r,
15952:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15953:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15954:Core/Src/bno055.c ****                             {
15955:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS
15956:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15957:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
15958:Core/Src/bno055.c ****                                                                             &data_u8r,
15959:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15960:Core/Src/bno055.c ****                             }
15961:Core/Src/bno055.c ****                             break;
15962:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Z_AXIS:
15963:Core/Src/bno055.c **** 
15964:Core/Src/bno055.c ****                             /* Write the value of
ARM GAS  /tmp/cc9kYR4Z.s 			page 935


15965:Core/Src/bno055.c ****                              * accel z highg enable*/
15966:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15967:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
15968:Core/Src/bno055.c ****                                                                       &data_u8r,
15969:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15970:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15971:Core/Src/bno055.c ****                             {
15972:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS
15973:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15974:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
15975:Core/Src/bno055.c ****                                                                             &data_u8r,
15976:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15977:Core/Src/bno055.c ****                             }
15978:Core/Src/bno055.c ****                             break;
15979:Core/Src/bno055.c ****                         default:
15980:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15981:Core/Src/bno055.c ****                             break;
15982:Core/Src/bno055.c ****                     }
15983:Core/Src/bno055.c ****                 }
15984:Core/Src/bno055.c ****                 else
15985:Core/Src/bno055.c ****                 {
15986:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15987:Core/Src/bno055.c ****                 }
15988:Core/Src/bno055.c ****             }
15989:Core/Src/bno055.c ****             else
15990:Core/Src/bno055.c ****             {
15991:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33322              		.loc 1 15991 26 view .LVU9343
 33323 0034 4FF0FF34 		mov	r4, #-1
 33324 0038 7CE0     		b	.L2340
 33325              	.LVL4092:
 33326              	.L2350:
15918:Core/Src/bno055.c ****             }
 33327              		.loc 1 15918 17 is_stmt 1 view .LVU9344
15918:Core/Src/bno055.c ****             }
 33328              		.loc 1 15918 28 is_stmt 0 view .LVU9345
 33329 003a FFF7FEFF 		bl	bno055_set_operation_mode
 33330              	.LVL4093:
15918:Core/Src/bno055.c ****             }
 33331              		.loc 1 15918 25 view .LVU9346
 33332 003e 56FA80F6 		uxtab	r6, r6, r0
 33333 0042 76B2     		sxtb	r6, r6
 33334              	.LVL4094:
15918:Core/Src/bno055.c ****             }
 33335              		.loc 1 15918 25 view .LVU9347
 33336 0044 F5E7     		b	.L2341
 33337              	.L2351:
15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33338              		.loc 1 15923 17 is_stmt 1 view .LVU9348
15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33339              		.loc 1 15923 30 is_stmt 0 view .LVU9349
 33340 0046 0120     		movs	r0, #1
 33341 0048 FFF7FEFF 		bl	bno055_write_page_id
 33342              	.LVL4095:
15924:Core/Src/bno055.c ****                 {
 33343              		.loc 1 15924 17 is_stmt 1 view .LVU9350
15924:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/cc9kYR4Z.s 			page 936


 33344              		.loc 1 15924 20 is_stmt 0 view .LVU9351
 33345 004c 0028     		cmp	r0, #0
 33346 004e 77D1     		bne	.L2347
15926:Core/Src/bno055.c ****                     {
 33347              		.loc 1 15926 21 is_stmt 1 view .LVU9352
 33348 0050 012C     		cmp	r4, #1
 33349 0052 29D0     		beq	.L2342
 33350 0054 022C     		cmp	r4, #2
 33351 0056 4BD0     		beq	.L2343
 33352 0058 14B1     		cbz	r4, .L2352
 33353 005a 6FF00104 		mvn	r4, #1
 33354 005e 69E0     		b	.L2340
 33355              	.L2352:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33356              		.loc 1 15932 29 view .LVU9353
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33357              		.loc 1 15932 48 is_stmt 0 view .LVU9354
 33358 0060 3D4B     		ldr	r3, .L2354
 33359 0062 1868     		ldr	r0, [r3]
 33360              	.LVL4096:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33361              		.loc 1 15932 48 view .LVU9355
 33362 0064 0469     		ldr	r4, [r0, #16]
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33363              		.loc 1 15932 40 view .LVU9356
 33364 0066 0123     		movs	r3, #1
 33365 0068 0DF10702 		add	r2, sp, #7
 33366 006c 1221     		movs	r1, #18
 33367 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33368 0070 A047     		blx	r4
 33369              	.LVL4097:
15936:Core/Src/bno055.c ****                             {
 33370              		.loc 1 15936 29 is_stmt 1 view .LVU9357
15936:Core/Src/bno055.c ****                             {
 33371              		.loc 1 15936 32 is_stmt 0 view .LVU9358
 33372 0072 0446     		mov	r4, r0
 33373 0074 0028     		cmp	r0, #0
 33374 0076 5DD1     		bne	.L2340
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33375              		.loc 1 15938 33 is_stmt 1 view .LVU9359
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33376              		.loc 1 15938 44 is_stmt 0 view .LVU9360
 33377 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33378 007c 23F02003 		bic	r3, r3, #32
 33379 0080 5BB2     		sxtb	r3, r3
 33380 0082 6A01     		lsls	r2, r5, #5
 33381 0084 02F02002 		and	r2, r2, #32
 33382 0088 1343     		orrs	r3, r3, r2
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33383              		.loc 1 15938 42 view .LVU9361
 33384 008a 8DF80730 		strb	r3, [sp, #7]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33385              		.loc 1 15939 33 is_stmt 1 view .LVU9362
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33386              		.loc 1 15939 53 is_stmt 0 view .LVU9363
 33387 008e 324B     		ldr	r3, .L2354
 33388 0090 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 937


 33389              	.LVL4098:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33390              		.loc 1 15939 53 view .LVU9364
 33391 0092 C568     		ldr	r5, [r0, #12]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33392              		.loc 1 15939 45 view .LVU9365
 33393 0094 0123     		movs	r3, #1
 33394 0096 0DF10702 		add	r2, sp, #7
 33395 009a 1221     		movs	r1, #18
 33396 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33397 009e A847     		blx	r5
 33398              	.LVL4099:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33399              		.loc 1 15939 42 view .LVU9366
 33400 00a0 54FA80F3 		uxtab	r3, r4, r0
 33401 00a4 5CB2     		sxtb	r4, r3
 33402              	.LVL4100:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33403              		.loc 1 15939 42 view .LVU9367
 33404 00a6 45E0     		b	.L2340
 33405              	.LVL4101:
 33406              	.L2342:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33407              		.loc 1 15949 29 is_stmt 1 view .LVU9368
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33408              		.loc 1 15949 48 is_stmt 0 view .LVU9369
 33409 00a8 2B4B     		ldr	r3, .L2354
 33410 00aa 1868     		ldr	r0, [r3]
 33411              	.LVL4102:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33412              		.loc 1 15949 48 view .LVU9370
 33413 00ac 0469     		ldr	r4, [r0, #16]
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33414              		.loc 1 15949 40 view .LVU9371
 33415 00ae 0123     		movs	r3, #1
 33416 00b0 0DF10702 		add	r2, sp, #7
 33417 00b4 1221     		movs	r1, #18
 33418 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33419 00b8 A047     		blx	r4
 33420              	.LVL4103:
15953:Core/Src/bno055.c ****                             {
 33421              		.loc 1 15953 29 is_stmt 1 view .LVU9372
15953:Core/Src/bno055.c ****                             {
 33422              		.loc 1 15953 32 is_stmt 0 view .LVU9373
 33423 00ba 0446     		mov	r4, r0
 33424 00bc 0028     		cmp	r0, #0
 33425 00be 39D1     		bne	.L2340
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33426              		.loc 1 15955 33 is_stmt 1 view .LVU9374
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33427              		.loc 1 15955 44 is_stmt 0 view .LVU9375
 33428 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33429 00c4 23F04003 		bic	r3, r3, #64
 33430 00c8 5BB2     		sxtb	r3, r3
 33431 00ca AA01     		lsls	r2, r5, #6
 33432 00cc 02F04002 		and	r2, r2, #64
 33433 00d0 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/cc9kYR4Z.s 			page 938


15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33434              		.loc 1 15955 42 view .LVU9376
 33435 00d2 8DF80730 		strb	r3, [sp, #7]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33436              		.loc 1 15956 33 is_stmt 1 view .LVU9377
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33437              		.loc 1 15956 53 is_stmt 0 view .LVU9378
 33438 00d6 204B     		ldr	r3, .L2354
 33439 00d8 1868     		ldr	r0, [r3]
 33440              	.LVL4104:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33441              		.loc 1 15956 53 view .LVU9379
 33442 00da C568     		ldr	r5, [r0, #12]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33443              		.loc 1 15956 45 view .LVU9380
 33444 00dc 0123     		movs	r3, #1
 33445 00de 0DF10702 		add	r2, sp, #7
 33446 00e2 1221     		movs	r1, #18
 33447 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33448 00e6 A847     		blx	r5
 33449              	.LVL4105:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33450              		.loc 1 15956 42 view .LVU9381
 33451 00e8 54FA80F3 		uxtab	r3, r4, r0
 33452 00ec 5CB2     		sxtb	r4, r3
 33453              	.LVL4106:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33454              		.loc 1 15956 42 view .LVU9382
 33455 00ee 21E0     		b	.L2340
 33456              	.LVL4107:
 33457              	.L2343:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33458              		.loc 1 15966 29 is_stmt 1 view .LVU9383
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33459              		.loc 1 15966 48 is_stmt 0 view .LVU9384
 33460 00f0 194B     		ldr	r3, .L2354
 33461 00f2 1868     		ldr	r0, [r3]
 33462              	.LVL4108:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33463              		.loc 1 15966 48 view .LVU9385
 33464 00f4 0469     		ldr	r4, [r0, #16]
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33465              		.loc 1 15966 40 view .LVU9386
 33466 00f6 0123     		movs	r3, #1
 33467 00f8 0DF10702 		add	r2, sp, #7
 33468 00fc 1221     		movs	r1, #18
 33469 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33470 0100 A047     		blx	r4
 33471              	.LVL4109:
15970:Core/Src/bno055.c ****                             {
 33472              		.loc 1 15970 29 is_stmt 1 view .LVU9387
15970:Core/Src/bno055.c ****                             {
 33473              		.loc 1 15970 32 is_stmt 0 view .LVU9388
 33474 0102 0446     		mov	r4, r0
 33475 0104 B0B9     		cbnz	r0, .L2340
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33476              		.loc 1 15972 33 is_stmt 1 view .LVU9389
ARM GAS  /tmp/cc9kYR4Z.s 			page 939


15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33477              		.loc 1 15972 44 is_stmt 0 view .LVU9390
 33478 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33479 010a 03F07F03 		and	r3, r3, #127
 33480 010e 43EAC513 		orr	r3, r3, r5, lsl #7
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33481              		.loc 1 15972 42 view .LVU9391
 33482 0112 8DF80730 		strb	r3, [sp, #7]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33483              		.loc 1 15973 33 is_stmt 1 view .LVU9392
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33484              		.loc 1 15973 53 is_stmt 0 view .LVU9393
 33485 0116 104B     		ldr	r3, .L2354
 33486 0118 1868     		ldr	r0, [r3]
 33487              	.LVL4110:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33488              		.loc 1 15973 53 view .LVU9394
 33489 011a C568     		ldr	r5, [r0, #12]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33490              		.loc 1 15973 45 view .LVU9395
 33491 011c 0123     		movs	r3, #1
 33492 011e 0DF10702 		add	r2, sp, #7
 33493 0122 1221     		movs	r1, #18
 33494 0124 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33495 0126 A847     		blx	r5
 33496              	.LVL4111:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33497              		.loc 1 15973 42 view .LVU9396
 33498 0128 54FA80F3 		uxtab	r3, r4, r0
 33499 012c 5CB2     		sxtb	r4, r3
 33500              	.LVL4112:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33501              		.loc 1 15973 42 view .LVU9397
 33502 012e 01E0     		b	.L2340
 33503              	.LVL4113:
 33504              	.L2345:
15992:Core/Src/bno055.c ****             }
15993:Core/Src/bno055.c ****         }
15994:Core/Src/bno055.c ****         else
15995:Core/Src/bno055.c ****         {
15996:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33505              		.loc 1 15996 22 view .LVU9398
 33506 0130 4FF0FF34 		mov	r4, #-1
 33507              	.LVL4114:
 33508              	.L2340:
15997:Core/Src/bno055.c ****         }
15998:Core/Src/bno055.c ****     }
15999:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33509              		.loc 1 15999 5 is_stmt 1 view .LVU9399
 33510              		.loc 1 15999 24 is_stmt 0 view .LVU9400
 33511 0134 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33512              		.loc 1 15999 8 view .LVU9401
 33513 0138 28B9     		cbnz	r0, .L2353
 33514              	.LVL4115:
 33515              	.L2339:
16000:Core/Src/bno055.c ****     {
16001:Core/Src/bno055.c ****         /* set the operation mode of
ARM GAS  /tmp/cc9kYR4Z.s 			page 940


16002:Core/Src/bno055.c ****          * previous operation mode*/
16003:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16004:Core/Src/bno055.c ****     }
16005:Core/Src/bno055.c **** 
16006:Core/Src/bno055.c ****     return com_rslt;
16007:Core/Src/bno055.c **** }
 33516              		.loc 1 16007 1 view .LVU9402
 33517 013a 2046     		mov	r0, r4
 33518 013c 02B0     		add	sp, sp, #8
 33519              	.LCFI923:
 33520              		.cfi_remember_state
 33521              		.cfi_def_cfa_offset 16
 33522              		@ sp needed
 33523 013e 70BD     		pop	{r4, r5, r6, pc}
 33524              	.LVL4116:
 33525              	.L2347:
 33526              	.LCFI924:
 33527              		.cfi_restore_state
15986:Core/Src/bno055.c ****                 }
 33528              		.loc 1 15986 30 view .LVU9403
 33529 0140 4FF0FF34 		mov	r4, #-1
 33530 0144 F6E7     		b	.L2340
 33531              	.LVL4117:
 33532              	.L2353:
16003:Core/Src/bno055.c ****     }
 33533              		.loc 1 16003 9 is_stmt 1 view .LVU9404
16003:Core/Src/bno055.c ****     }
 33534              		.loc 1 16003 21 is_stmt 0 view .LVU9405
 33535 0146 FFF7FEFF 		bl	bno055_set_operation_mode
 33536              	.LVL4118:
16003:Core/Src/bno055.c ****     }
 33537              		.loc 1 16003 18 view .LVU9406
 33538 014a 54FA80F0 		uxtab	r0, r4, r0
 33539 014e 44B2     		sxtb	r4, r0
 33540              	.LVL4119:
16003:Core/Src/bno055.c ****     }
 33541              		.loc 1 16003 18 view .LVU9407
 33542 0150 F3E7     		b	.L2339
 33543              	.LVL4120:
 33544              	.L2344:
15906:Core/Src/bno055.c ****     }
 33545              		.loc 1 15906 16 view .LVU9408
 33546 0152 6FF07E04 		mvn	r4, #126
 33547 0156 F0E7     		b	.L2339
 33548              	.L2355:
 33549              		.align	2
 33550              	.L2354:
 33551 0158 00000000 		.word	.LANCHOR0
 33552              		.cfi_endproc
 33553              	.LFE232:
 33555              		.section	.text.bno055_get_accel_high_g_durn,"ax",%progbits
 33556              		.align	1
 33557              		.global	bno055_get_accel_high_g_durn
 33558              		.syntax unified
 33559              		.thumb
 33560              		.thumb_func
 33562              	bno055_get_accel_high_g_durn:
ARM GAS  /tmp/cc9kYR4Z.s 			page 941


 33563              	.LVL4121:
 33564              	.LFB233:
16008:Core/Src/bno055.c **** 
16009:Core/Src/bno055.c **** /*!
16010:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg duration
16011:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16012:Core/Src/bno055.c ****  *
16013:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16014:Core/Src/bno055.c ****  *
16015:Core/Src/bno055.c ****  *  @return results of bus communication function
16016:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16017:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16018:Core/Src/bno055.c ****  *
16019:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16020:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16021:Core/Src/bno055.c ****  *
16022:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16023:Core/Src/bno055.c ****  *
16024:Core/Src/bno055.c ****  */
16025:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_durn(u8 *accel_high_g_durn_u8)
16026:Core/Src/bno055.c **** {
 33565              		.loc 1 16026 1 is_stmt 1 view -0
 33566              		.cfi_startproc
 33567              		@ args = 0, pretend = 0, frame = 8
 33568              		@ frame_needed = 0, uses_anonymous_args = 0
 33569              		.loc 1 16026 1 is_stmt 0 view .LVU9410
 33570 0000 70B5     		push	{r4, r5, r6, lr}
 33571              	.LCFI925:
 33572              		.cfi_def_cfa_offset 16
 33573              		.cfi_offset 4, -16
 33574              		.cfi_offset 5, -12
 33575              		.cfi_offset 6, -8
 33576              		.cfi_offset 14, -4
 33577 0002 82B0     		sub	sp, sp, #8
 33578              	.LCFI926:
 33579              		.cfi_def_cfa_offset 24
16027:Core/Src/bno055.c ****     /* Variable used to return value of
16028:Core/Src/bno055.c ****      * communication routine*/
16029:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33580              		.loc 1 16029 5 is_stmt 1 view .LVU9411
 33581              	.LVL4122:
16030:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33582              		.loc 1 16030 5 view .LVU9412
 33583              		.loc 1 16030 8 is_stmt 0 view .LVU9413
 33584 0004 0023     		movs	r3, #0
 33585 0006 8DF80730 		strb	r3, [sp, #7]
16031:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33586              		.loc 1 16031 5 is_stmt 1 view .LVU9414
 33587              	.LVL4123:
16032:Core/Src/bno055.c **** 
16033:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16034:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33588              		.loc 1 16034 5 view .LVU9415
 33589              		.loc 1 16034 18 is_stmt 0 view .LVU9416
 33590 000a 134B     		ldr	r3, .L2364
 33591 000c 1B68     		ldr	r3, [r3]
 33592              		.loc 1 16034 8 view .LVU9417
ARM GAS  /tmp/cc9kYR4Z.s 			page 942


 33593 000e E3B1     		cbz	r3, .L2360
 33594 0010 0546     		mov	r5, r0
16035:Core/Src/bno055.c ****     {
16036:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16037:Core/Src/bno055.c ****     }
16038:Core/Src/bno055.c ****     else
16039:Core/Src/bno055.c ****     {
16040:Core/Src/bno055.c ****         /*condition check for page, accel highg duration is
16041:Core/Src/bno055.c ****          * available in the page one*/
16042:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33595              		.loc 1 16042 9 is_stmt 1 view .LVU9418
 33596              		.loc 1 16042 21 is_stmt 0 view .LVU9419
 33597 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33598              		.loc 1 16042 12 view .LVU9420
 33599 0014 012B     		cmp	r3, #1
 33600 0016 12D1     		bne	.L2363
 33601              	.LVL4124:
 33602              	.L2358:
16043:Core/Src/bno055.c ****         {
16044:Core/Src/bno055.c ****             /* Write page as one */
16045:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16046:Core/Src/bno055.c ****         }
16047:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33603              		.loc 1 16047 53 discriminator 1 view .LVU9421
 33604 0018 0F4B     		ldr	r3, .L2364
 33605 001a 1B68     		ldr	r3, [r3]
 33606 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33607              		.loc 1 16047 41 discriminator 1 view .LVU9422
 33608 001e 012B     		cmp	r3, #1
 33609 0020 16D1     		bne	.L2361
 33610              	.L2359:
16048:Core/Src/bno055.c ****         {
16049:Core/Src/bno055.c ****             /* Read the value of accel highg duration*/
16050:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33611              		.loc 1 16050 13 is_stmt 1 view .LVU9423
 33612              		.loc 1 16050 32 is_stmt 0 view .LVU9424
 33613 0022 0D4B     		ldr	r3, .L2364
 33614 0024 1C68     		ldr	r4, [r3]
 33615 0026 2669     		ldr	r6, [r4, #16]
 33616              		.loc 1 16050 24 view .LVU9425
 33617 0028 0123     		movs	r3, #1
 33618 002a 0DF10702 		add	r2, sp, #7
 33619 002e 1321     		movs	r1, #19
 33620 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 33621 0032 B047     		blx	r6
 33622              	.LVL4125:
16051:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_DURN_REG,
16052:Core/Src/bno055.c ****                                                       &data_u8r,
16053:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16054:Core/Src/bno055.c ****             *accel_high_g_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN);
 33623              		.loc 1 16054 13 is_stmt 1 view .LVU9426
 33624              		.loc 1 16054 35 is_stmt 0 view .LVU9427
 33625 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33626 0038 2B70     		strb	r3, [r5]
 33627              	.LVL4126:
 33628              	.L2357:
16055:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 943


16056:Core/Src/bno055.c ****         else
16057:Core/Src/bno055.c ****         {
16058:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16059:Core/Src/bno055.c ****         }
16060:Core/Src/bno055.c ****     }
16061:Core/Src/bno055.c **** 
16062:Core/Src/bno055.c ****     return com_rslt;
16063:Core/Src/bno055.c **** }
 33629              		.loc 1 16063 1 view .LVU9428
 33630 003a 02B0     		add	sp, sp, #8
 33631              	.LCFI927:
 33632              		.cfi_remember_state
 33633              		.cfi_def_cfa_offset 16
 33634              		@ sp needed
 33635 003c 70BD     		pop	{r4, r5, r6, pc}
 33636              	.LVL4127:
 33637              	.L2363:
 33638              	.LCFI928:
 33639              		.cfi_restore_state
16045:Core/Src/bno055.c ****         }
 33640              		.loc 1 16045 13 is_stmt 1 view .LVU9429
16045:Core/Src/bno055.c ****         }
 33641              		.loc 1 16045 23 is_stmt 0 view .LVU9430
 33642 003e 0120     		movs	r0, #1
 33643              	.LVL4128:
16045:Core/Src/bno055.c ****         }
 33644              		.loc 1 16045 23 view .LVU9431
 33645 0040 FFF7FEFF 		bl	bno055_write_page_id
 33646              	.LVL4129:
16047:Core/Src/bno055.c ****         {
 33647              		.loc 1 16047 9 is_stmt 1 view .LVU9432
16047:Core/Src/bno055.c ****         {
 33648              		.loc 1 16047 12 is_stmt 0 view .LVU9433
 33649 0044 0028     		cmp	r0, #0
 33650 0046 ECD0     		beq	.L2359
 33651 0048 E6E7     		b	.L2358
 33652              	.LVL4130:
 33653              	.L2360:
16036:Core/Src/bno055.c ****     }
 33654              		.loc 1 16036 16 view .LVU9434
 33655 004a 6FF07E00 		mvn	r0, #126
 33656              	.LVL4131:
16036:Core/Src/bno055.c ****     }
 33657              		.loc 1 16036 16 view .LVU9435
 33658 004e F4E7     		b	.L2357
 33659              	.LVL4132:
 33660              	.L2361:
16058:Core/Src/bno055.c ****         }
 33661              		.loc 1 16058 22 view .LVU9436
 33662 0050 4FF0FF30 		mov	r0, #-1
 33663 0054 F1E7     		b	.L2357
 33664              	.L2365:
 33665 0056 00BF     		.align	2
 33666              	.L2364:
 33667 0058 00000000 		.word	.LANCHOR0
 33668              		.cfi_endproc
 33669              	.LFE233:
ARM GAS  /tmp/cc9kYR4Z.s 			page 944


 33671              		.section	.text.bno055_set_accel_high_g_durn,"ax",%progbits
 33672              		.align	1
 33673              		.global	bno055_set_accel_high_g_durn
 33674              		.syntax unified
 33675              		.thumb
 33676              		.thumb_func
 33678              	bno055_set_accel_high_g_durn:
 33679              	.LVL4133:
 33680              	.LFB234:
16064:Core/Src/bno055.c **** 
16065:Core/Src/bno055.c **** /*!
16066:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg duration
16067:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16068:Core/Src/bno055.c ****  *
16069:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16070:Core/Src/bno055.c ****  *
16071:Core/Src/bno055.c ****  *  @return results of bus communication function
16072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16074:Core/Src/bno055.c ****  *
16075:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16076:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16077:Core/Src/bno055.c ****  *
16078:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16079:Core/Src/bno055.c ****  *
16080:Core/Src/bno055.c ****  */
16081:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_durn(u8 accel_high_g_durn_u8)
16082:Core/Src/bno055.c **** {
 33681              		.loc 1 16082 1 is_stmt 1 view -0
 33682              		.cfi_startproc
 33683              		@ args = 0, pretend = 0, frame = 8
 33684              		@ frame_needed = 0, uses_anonymous_args = 0
 33685              		.loc 1 16082 1 is_stmt 0 view .LVU9438
 33686 0000 30B5     		push	{r4, r5, lr}
 33687              	.LCFI929:
 33688              		.cfi_def_cfa_offset 12
 33689              		.cfi_offset 4, -12
 33690              		.cfi_offset 5, -8
 33691              		.cfi_offset 14, -4
 33692 0002 83B0     		sub	sp, sp, #12
 33693              	.LCFI930:
 33694              		.cfi_def_cfa_offset 24
16083:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33695              		.loc 1 16083 5 is_stmt 1 view .LVU9439
 33696              	.LVL4134:
16084:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33697              		.loc 1 16084 5 view .LVU9440
 33698              		.loc 1 16084 8 is_stmt 0 view .LVU9441
 33699 0004 0023     		movs	r3, #0
 33700 0006 8DF80730 		strb	r3, [sp, #7]
16085:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33701              		.loc 1 16085 5 is_stmt 1 view .LVU9442
 33702              	.LVL4135:
16086:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33703              		.loc 1 16086 5 view .LVU9443
 33704              		.loc 1 16086 8 is_stmt 0 view .LVU9444
 33705 000a 8DF80630 		strb	r3, [sp, #6]
ARM GAS  /tmp/cc9kYR4Z.s 			page 945


16087:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33706              		.loc 1 16087 5 is_stmt 1 view .LVU9445
 33707              	.LVL4136:
16088:Core/Src/bno055.c **** 
16089:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16090:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33708              		.loc 1 16090 5 view .LVU9446
 33709              		.loc 1 16090 18 is_stmt 0 view .LVU9447
 33710 000e 254B     		ldr	r3, .L2378
 33711 0010 1B68     		ldr	r3, [r3]
 33712              		.loc 1 16090 8 view .LVU9448
 33713 0012 002B     		cmp	r3, #0
 33714 0014 42D0     		beq	.L2370
 33715 0016 0546     		mov	r5, r0
16091:Core/Src/bno055.c ****     {
16092:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16093:Core/Src/bno055.c ****     }
16094:Core/Src/bno055.c ****     else
16095:Core/Src/bno055.c ****     {
16096:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16097:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16098:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16099:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33716              		.loc 1 16099 9 is_stmt 1 view .LVU9449
 33717              		.loc 1 16099 19 is_stmt 0 view .LVU9450
 33718 0018 0DF10600 		add	r0, sp, #6
 33719              	.LVL4137:
 33720              		.loc 1 16099 19 view .LVU9451
 33721 001c FFF7FEFF 		bl	bno055_get_operation_mode
 33722              	.LVL4138:
16100:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33723              		.loc 1 16100 9 is_stmt 1 view .LVU9452
 33724              		.loc 1 16100 12 is_stmt 0 view .LVU9453
 33725 0020 0446     		mov	r4, r0
 33726 0022 50BB     		cbnz	r0, .L2371
16101:Core/Src/bno055.c ****         {
16102:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33727              		.loc 1 16102 13 is_stmt 1 view .LVU9454
 33728              		.loc 1 16102 32 is_stmt 0 view .LVU9455
 33729 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33730              		.loc 1 16102 16 view .LVU9456
 33731 0028 1BB9     		cbnz	r3, .L2375
 33732              	.LVL4139:
 33733              	.L2369:
16103:Core/Src/bno055.c ****             {
16104:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16105:Core/Src/bno055.c ****             }
16106:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33734              		.loc 1 16106 13 is_stmt 1 view .LVU9457
 33735              		.loc 1 16106 16 is_stmt 0 view .LVU9458
 33736 002a 44B1     		cbz	r4, .L2376
16107:Core/Src/bno055.c ****             {
16108:Core/Src/bno055.c ****                 /* Write page as one */
16109:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16110:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16111:Core/Src/bno055.c ****                 {
16112:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 946


16113:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
16114:Core/Src/bno055.c ****                                                               &data_u8r,
16115:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16116:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16117:Core/Src/bno055.c ****                     {
16118:Core/Src/bno055.c ****                         /* Write the value of
16119:Core/Src/bno055.c ****                          * accel highg duration*/
16120:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN, accel_hi
16121:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16122:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
16123:Core/Src/bno055.c ****                                                                     &data_u8r,
16124:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16125:Core/Src/bno055.c ****                     }
16126:Core/Src/bno055.c ****                 }
16127:Core/Src/bno055.c ****                 else
16128:Core/Src/bno055.c ****                 {
16129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16130:Core/Src/bno055.c ****                 }
16131:Core/Src/bno055.c ****             }
16132:Core/Src/bno055.c ****             else
16133:Core/Src/bno055.c ****             {
16134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33737              		.loc 1 16134 26 view .LVU9459
 33738 002c 4FF0FF34 		mov	r4, #-1
 33739              	.LVL4140:
 33740              		.loc 1 16134 26 view .LVU9460
 33741 0030 25E0     		b	.L2368
 33742              	.LVL4141:
 33743              	.L2375:
16104:Core/Src/bno055.c ****             }
 33744              		.loc 1 16104 17 is_stmt 1 view .LVU9461
16104:Core/Src/bno055.c ****             }
 33745              		.loc 1 16104 28 is_stmt 0 view .LVU9462
 33746 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 33747              	.LVL4142:
16104:Core/Src/bno055.c ****             }
 33748              		.loc 1 16104 25 view .LVU9463
 33749 0036 54FA80F4 		uxtab	r4, r4, r0
 33750 003a 64B2     		sxtb	r4, r4
 33751              	.LVL4143:
16104:Core/Src/bno055.c ****             }
 33752              		.loc 1 16104 25 view .LVU9464
 33753 003c F5E7     		b	.L2369
 33754              	.L2376:
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33755              		.loc 1 16109 17 is_stmt 1 view .LVU9465
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33756              		.loc 1 16109 30 is_stmt 0 view .LVU9466
 33757 003e 0120     		movs	r0, #1
 33758 0040 FFF7FEFF 		bl	bno055_write_page_id
 33759              	.LVL4144:
16110:Core/Src/bno055.c ****                 {
 33760              		.loc 1 16110 17 is_stmt 1 view .LVU9467
16110:Core/Src/bno055.c ****                 {
 33761              		.loc 1 16110 20 is_stmt 0 view .LVU9468
 33762 0044 08BB     		cbnz	r0, .L2373
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 947


 33763              		.loc 1 16112 21 is_stmt 1 view .LVU9469
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33764              		.loc 1 16112 40 is_stmt 0 view .LVU9470
 33765 0046 174B     		ldr	r3, .L2378
 33766 0048 1868     		ldr	r0, [r3]
 33767              	.LVL4145:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33768              		.loc 1 16112 40 view .LVU9471
 33769 004a 0469     		ldr	r4, [r0, #16]
 33770              	.LVL4146:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33771              		.loc 1 16112 32 view .LVU9472
 33772 004c 0123     		movs	r3, #1
 33773 004e 0DF10702 		add	r2, sp, #7
 33774 0052 1321     		movs	r1, #19
 33775 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33776 0056 A047     		blx	r4
 33777              	.LVL4147:
16116:Core/Src/bno055.c ****                     {
 33778              		.loc 1 16116 21 is_stmt 1 view .LVU9473
16116:Core/Src/bno055.c ****                     {
 33779              		.loc 1 16116 24 is_stmt 0 view .LVU9474
 33780 0058 0446     		mov	r4, r0
 33781 005a 80B9     		cbnz	r0, .L2368
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33782              		.loc 1 16120 25 is_stmt 1 view .LVU9475
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33783              		.loc 1 16120 34 is_stmt 0 view .LVU9476
 33784 005c 8DF80750 		strb	r5, [sp, #7]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33785              		.loc 1 16121 25 is_stmt 1 view .LVU9477
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33786              		.loc 1 16121 45 is_stmt 0 view .LVU9478
 33787 0060 104B     		ldr	r3, .L2378
 33788 0062 1868     		ldr	r0, [r3]
 33789              	.LVL4148:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33790              		.loc 1 16121 45 view .LVU9479
 33791 0064 C568     		ldr	r5, [r0, #12]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33792              		.loc 1 16121 37 view .LVU9480
 33793 0066 0123     		movs	r3, #1
 33794 0068 0DF10702 		add	r2, sp, #7
 33795 006c 1321     		movs	r1, #19
 33796 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33797 0070 A847     		blx	r5
 33798              	.LVL4149:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33799              		.loc 1 16121 34 view .LVU9481
 33800 0072 54FA80F0 		uxtab	r0, r4, r0
 33801 0076 44B2     		sxtb	r4, r0
 33802              	.LVL4150:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33803              		.loc 1 16121 34 view .LVU9482
 33804 0078 01E0     		b	.L2368
 33805              	.LVL4151:
 33806              	.L2371:
ARM GAS  /tmp/cc9kYR4Z.s 			page 948


16135:Core/Src/bno055.c ****             }
16136:Core/Src/bno055.c ****         }
16137:Core/Src/bno055.c ****         else
16138:Core/Src/bno055.c ****         {
16139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33807              		.loc 1 16139 22 view .LVU9483
 33808 007a 4FF0FF34 		mov	r4, #-1
 33809              	.LVL4152:
 33810              	.L2368:
16140:Core/Src/bno055.c ****         }
16141:Core/Src/bno055.c ****     }
16142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33811              		.loc 1 16142 5 is_stmt 1 view .LVU9484
 33812              		.loc 1 16142 24 is_stmt 0 view .LVU9485
 33813 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33814              		.loc 1 16142 8 view .LVU9486
 33815 0082 28B9     		cbnz	r0, .L2377
 33816              	.LVL4153:
 33817              	.L2367:
16143:Core/Src/bno055.c ****     {
16144:Core/Src/bno055.c ****         /* set the operation mode of
16145:Core/Src/bno055.c ****          * previous operation mode*/
16146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16147:Core/Src/bno055.c ****     }
16148:Core/Src/bno055.c **** 
16149:Core/Src/bno055.c ****     return com_rslt;
16150:Core/Src/bno055.c **** }
 33818              		.loc 1 16150 1 view .LVU9487
 33819 0084 2046     		mov	r0, r4
 33820 0086 03B0     		add	sp, sp, #12
 33821              	.LCFI931:
 33822              		.cfi_remember_state
 33823              		.cfi_def_cfa_offset 12
 33824              		@ sp needed
 33825 0088 30BD     		pop	{r4, r5, pc}
 33826              	.LVL4154:
 33827              	.L2373:
 33828              	.LCFI932:
 33829              		.cfi_restore_state
16129:Core/Src/bno055.c ****                 }
 33830              		.loc 1 16129 30 view .LVU9488
 33831 008a 4FF0FF34 		mov	r4, #-1
 33832              	.LVL4155:
16129:Core/Src/bno055.c ****                 }
 33833              		.loc 1 16129 30 view .LVU9489
 33834 008e F6E7     		b	.L2368
 33835              	.LVL4156:
 33836              	.L2377:
16146:Core/Src/bno055.c ****     }
 33837              		.loc 1 16146 9 is_stmt 1 view .LVU9490
16146:Core/Src/bno055.c ****     }
 33838              		.loc 1 16146 21 is_stmt 0 view .LVU9491
 33839 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 33840              	.LVL4157:
16146:Core/Src/bno055.c ****     }
 33841              		.loc 1 16146 18 view .LVU9492
 33842 0094 54FA80F0 		uxtab	r0, r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 949


 33843 0098 44B2     		sxtb	r4, r0
 33844              	.LVL4158:
16146:Core/Src/bno055.c ****     }
 33845              		.loc 1 16146 18 view .LVU9493
 33846 009a F3E7     		b	.L2367
 33847              	.LVL4159:
 33848              	.L2370:
16092:Core/Src/bno055.c ****     }
 33849              		.loc 1 16092 16 view .LVU9494
 33850 009c 6FF07E04 		mvn	r4, #126
 33851 00a0 F0E7     		b	.L2367
 33852              	.L2379:
 33853 00a2 00BF     		.align	2
 33854              	.L2378:
 33855 00a4 00000000 		.word	.LANCHOR0
 33856              		.cfi_endproc
 33857              	.LFE234:
 33859              		.section	.text.bno055_get_accel_high_g_thres,"ax",%progbits
 33860              		.align	1
 33861              		.global	bno055_get_accel_high_g_thres
 33862              		.syntax unified
 33863              		.thumb
 33864              		.thumb_func
 33866              	bno055_get_accel_high_g_thres:
 33867              	.LVL4160:
 33868              	.LFB235:
16151:Core/Src/bno055.c **** 
16152:Core/Src/bno055.c **** /*!
16153:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg threshold
16154:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16155:Core/Src/bno055.c ****  *
16156:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16157:Core/Src/bno055.c ****  *
16158:Core/Src/bno055.c ****  *  @return results of bus communication function
16159:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16160:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16161:Core/Src/bno055.c ****  *
16162:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16163:Core/Src/bno055.c ****  *  for accel g range
16164:Core/Src/bno055.c ****  *
16165:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16166:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16167:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16168:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16169:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16170:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16171:Core/Src/bno055.c ****  *
16172:Core/Src/bno055.c ****  */
16173:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_thres(u8 *accel_high_g_thres_u8)
16174:Core/Src/bno055.c **** {
 33869              		.loc 1 16174 1 is_stmt 1 view -0
 33870              		.cfi_startproc
 33871              		@ args = 0, pretend = 0, frame = 8
 33872              		@ frame_needed = 0, uses_anonymous_args = 0
 33873              		.loc 1 16174 1 is_stmt 0 view .LVU9496
 33874 0000 70B5     		push	{r4, r5, r6, lr}
 33875              	.LCFI933:
ARM GAS  /tmp/cc9kYR4Z.s 			page 950


 33876              		.cfi_def_cfa_offset 16
 33877              		.cfi_offset 4, -16
 33878              		.cfi_offset 5, -12
 33879              		.cfi_offset 6, -8
 33880              		.cfi_offset 14, -4
 33881 0002 82B0     		sub	sp, sp, #8
 33882              	.LCFI934:
 33883              		.cfi_def_cfa_offset 24
16175:Core/Src/bno055.c ****     /* Variable used to return value of
16176:Core/Src/bno055.c ****      * communication routine*/
16177:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33884              		.loc 1 16177 5 is_stmt 1 view .LVU9497
 33885              	.LVL4161:
16178:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33886              		.loc 1 16178 5 view .LVU9498
 33887              		.loc 1 16178 8 is_stmt 0 view .LVU9499
 33888 0004 0023     		movs	r3, #0
 33889 0006 8DF80730 		strb	r3, [sp, #7]
16179:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33890              		.loc 1 16179 5 is_stmt 1 view .LVU9500
 33891              	.LVL4162:
16180:Core/Src/bno055.c **** 
16181:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16182:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33892              		.loc 1 16182 5 view .LVU9501
 33893              		.loc 1 16182 18 is_stmt 0 view .LVU9502
 33894 000a 134B     		ldr	r3, .L2388
 33895 000c 1B68     		ldr	r3, [r3]
 33896              		.loc 1 16182 8 view .LVU9503
 33897 000e E3B1     		cbz	r3, .L2384
 33898 0010 0546     		mov	r5, r0
16183:Core/Src/bno055.c ****     {
16184:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16185:Core/Src/bno055.c ****     }
16186:Core/Src/bno055.c ****     else
16187:Core/Src/bno055.c ****     {
16188:Core/Src/bno055.c ****         /*condition check for page, highg threshold is
16189:Core/Src/bno055.c ****          * available in the page one*/
16190:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33899              		.loc 1 16190 9 is_stmt 1 view .LVU9504
 33900              		.loc 1 16190 21 is_stmt 0 view .LVU9505
 33901 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33902              		.loc 1 16190 12 view .LVU9506
 33903 0014 012B     		cmp	r3, #1
 33904 0016 12D1     		bne	.L2387
 33905              	.LVL4163:
 33906              	.L2382:
16191:Core/Src/bno055.c ****         {
16192:Core/Src/bno055.c ****             /* Write page as one */
16193:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16194:Core/Src/bno055.c ****         }
16195:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33907              		.loc 1 16195 53 discriminator 1 view .LVU9507
 33908 0018 0F4B     		ldr	r3, .L2388
 33909 001a 1B68     		ldr	r3, [r3]
 33910 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33911              		.loc 1 16195 41 discriminator 1 view .LVU9508
ARM GAS  /tmp/cc9kYR4Z.s 			page 951


 33912 001e 012B     		cmp	r3, #1
 33913 0020 16D1     		bne	.L2385
 33914              	.L2383:
16196:Core/Src/bno055.c ****         {
16197:Core/Src/bno055.c ****             /* Read the value of highg threshold */
16198:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33915              		.loc 1 16198 13 is_stmt 1 view .LVU9509
 33916              		.loc 1 16198 32 is_stmt 0 view .LVU9510
 33917 0022 0D4B     		ldr	r3, .L2388
 33918 0024 1C68     		ldr	r4, [r3]
 33919 0026 2669     		ldr	r6, [r4, #16]
 33920              		.loc 1 16198 24 view .LVU9511
 33921 0028 0123     		movs	r3, #1
 33922 002a 0DF10702 		add	r2, sp, #7
 33923 002e 1421     		movs	r1, #20
 33924 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 33925 0032 B047     		blx	r6
 33926              	.LVL4164:
16199:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_THRES_REG,
16200:Core/Src/bno055.c ****                                                       &data_u8r,
16201:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16202:Core/Src/bno055.c ****             *accel_high_g_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES);
 33927              		.loc 1 16202 13 is_stmt 1 view .LVU9512
 33928              		.loc 1 16202 36 is_stmt 0 view .LVU9513
 33929 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33930 0038 2B70     		strb	r3, [r5]
 33931              	.LVL4165:
 33932              	.L2381:
16203:Core/Src/bno055.c ****         }
16204:Core/Src/bno055.c ****         else
16205:Core/Src/bno055.c ****         {
16206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16207:Core/Src/bno055.c ****         }
16208:Core/Src/bno055.c ****     }
16209:Core/Src/bno055.c **** 
16210:Core/Src/bno055.c ****     return com_rslt;
16211:Core/Src/bno055.c **** }
 33933              		.loc 1 16211 1 view .LVU9514
 33934 003a 02B0     		add	sp, sp, #8
 33935              	.LCFI935:
 33936              		.cfi_remember_state
 33937              		.cfi_def_cfa_offset 16
 33938              		@ sp needed
 33939 003c 70BD     		pop	{r4, r5, r6, pc}
 33940              	.LVL4166:
 33941              	.L2387:
 33942              	.LCFI936:
 33943              		.cfi_restore_state
16193:Core/Src/bno055.c ****         }
 33944              		.loc 1 16193 13 is_stmt 1 view .LVU9515
16193:Core/Src/bno055.c ****         }
 33945              		.loc 1 16193 23 is_stmt 0 view .LVU9516
 33946 003e 0120     		movs	r0, #1
 33947              	.LVL4167:
16193:Core/Src/bno055.c ****         }
 33948              		.loc 1 16193 23 view .LVU9517
 33949 0040 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/cc9kYR4Z.s 			page 952


 33950              	.LVL4168:
16195:Core/Src/bno055.c ****         {
 33951              		.loc 1 16195 9 is_stmt 1 view .LVU9518
16195:Core/Src/bno055.c ****         {
 33952              		.loc 1 16195 12 is_stmt 0 view .LVU9519
 33953 0044 0028     		cmp	r0, #0
 33954 0046 ECD0     		beq	.L2383
 33955 0048 E6E7     		b	.L2382
 33956              	.LVL4169:
 33957              	.L2384:
16184:Core/Src/bno055.c ****     }
 33958              		.loc 1 16184 16 view .LVU9520
 33959 004a 6FF07E00 		mvn	r0, #126
 33960              	.LVL4170:
16184:Core/Src/bno055.c ****     }
 33961              		.loc 1 16184 16 view .LVU9521
 33962 004e F4E7     		b	.L2381
 33963              	.LVL4171:
 33964              	.L2385:
16206:Core/Src/bno055.c ****         }
 33965              		.loc 1 16206 22 view .LVU9522
 33966 0050 4FF0FF30 		mov	r0, #-1
 33967 0054 F1E7     		b	.L2381
 33968              	.L2389:
 33969 0056 00BF     		.align	2
 33970              	.L2388:
 33971 0058 00000000 		.word	.LANCHOR0
 33972              		.cfi_endproc
 33973              	.LFE235:
 33975              		.section	.text.bno055_set_accel_high_g_thres,"ax",%progbits
 33976              		.align	1
 33977              		.global	bno055_set_accel_high_g_thres
 33978              		.syntax unified
 33979              		.thumb
 33980              		.thumb_func
 33982              	bno055_set_accel_high_g_thres:
 33983              	.LVL4172:
 33984              	.LFB236:
16212:Core/Src/bno055.c **** 
16213:Core/Src/bno055.c **** /*!
16214:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg threshold
16215:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16216:Core/Src/bno055.c ****  *
16217:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16218:Core/Src/bno055.c ****  *
16219:Core/Src/bno055.c ****  *  @return results of bus communication function
16220:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16221:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16222:Core/Src/bno055.c ****  *
16223:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16224:Core/Src/bno055.c ****  *  for accel g range
16225:Core/Src/bno055.c ****  *
16226:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16227:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16228:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16229:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16230:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 953


16231:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16232:Core/Src/bno055.c ****  *
16233:Core/Src/bno055.c ****  */
16234:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_thres(u8 accel_high_g_thres_u8)
16235:Core/Src/bno055.c **** {
 33985              		.loc 1 16235 1 is_stmt 1 view -0
 33986              		.cfi_startproc
 33987              		@ args = 0, pretend = 0, frame = 8
 33988              		@ frame_needed = 0, uses_anonymous_args = 0
 33989              		.loc 1 16235 1 is_stmt 0 view .LVU9524
 33990 0000 30B5     		push	{r4, r5, lr}
 33991              	.LCFI937:
 33992              		.cfi_def_cfa_offset 12
 33993              		.cfi_offset 4, -12
 33994              		.cfi_offset 5, -8
 33995              		.cfi_offset 14, -4
 33996 0002 83B0     		sub	sp, sp, #12
 33997              	.LCFI938:
 33998              		.cfi_def_cfa_offset 24
16236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33999              		.loc 1 16236 5 is_stmt 1 view .LVU9525
 34000              	.LVL4173:
16237:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34001              		.loc 1 16237 5 view .LVU9526
 34002              		.loc 1 16237 8 is_stmt 0 view .LVU9527
 34003 0004 0023     		movs	r3, #0
 34004 0006 8DF80730 		strb	r3, [sp, #7]
16238:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34005              		.loc 1 16238 5 is_stmt 1 view .LVU9528
 34006              	.LVL4174:
16239:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34007              		.loc 1 16239 5 view .LVU9529
 34008              		.loc 1 16239 8 is_stmt 0 view .LVU9530
 34009 000a 8DF80630 		strb	r3, [sp, #6]
16240:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34010              		.loc 1 16240 5 is_stmt 1 view .LVU9531
 34011              	.LVL4175:
16241:Core/Src/bno055.c **** 
16242:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16243:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34012              		.loc 1 16243 5 view .LVU9532
 34013              		.loc 1 16243 18 is_stmt 0 view .LVU9533
 34014 000e 254B     		ldr	r3, .L2402
 34015 0010 1B68     		ldr	r3, [r3]
 34016              		.loc 1 16243 8 view .LVU9534
 34017 0012 002B     		cmp	r3, #0
 34018 0014 42D0     		beq	.L2394
 34019 0016 0546     		mov	r5, r0
16244:Core/Src/bno055.c ****     {
16245:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16246:Core/Src/bno055.c ****     }
16247:Core/Src/bno055.c ****     else
16248:Core/Src/bno055.c ****     {
16249:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16250:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16251:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16252:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
ARM GAS  /tmp/cc9kYR4Z.s 			page 954


 34020              		.loc 1 16252 9 is_stmt 1 view .LVU9535
 34021              		.loc 1 16252 19 is_stmt 0 view .LVU9536
 34022 0018 0DF10600 		add	r0, sp, #6
 34023              	.LVL4176:
 34024              		.loc 1 16252 19 view .LVU9537
 34025 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34026              	.LVL4177:
16253:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34027              		.loc 1 16253 9 is_stmt 1 view .LVU9538
 34028              		.loc 1 16253 12 is_stmt 0 view .LVU9539
 34029 0020 0446     		mov	r4, r0
 34030 0022 50BB     		cbnz	r0, .L2395
16254:Core/Src/bno055.c ****         {
16255:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34031              		.loc 1 16255 13 is_stmt 1 view .LVU9540
 34032              		.loc 1 16255 32 is_stmt 0 view .LVU9541
 34033 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34034              		.loc 1 16255 16 view .LVU9542
 34035 0028 1BB9     		cbnz	r3, .L2399
 34036              	.LVL4178:
 34037              	.L2393:
16256:Core/Src/bno055.c ****             {
16257:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16258:Core/Src/bno055.c ****             }
16259:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34038              		.loc 1 16259 13 is_stmt 1 view .LVU9543
 34039              		.loc 1 16259 16 is_stmt 0 view .LVU9544
 34040 002a 44B1     		cbz	r4, .L2400
16260:Core/Src/bno055.c ****             {
16261:Core/Src/bno055.c ****                 /* Write page as one */
16262:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16263:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16264:Core/Src/bno055.c ****                 {
16265:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16266:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
16267:Core/Src/bno055.c ****                                                               &data_u8r,
16268:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16269:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16270:Core/Src/bno055.c ****                     {
16271:Core/Src/bno055.c ****                         /* Write the value of
16272:Core/Src/bno055.c ****                          * accel highg threshold */
16273:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES, accel_h
16274:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16275:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
16276:Core/Src/bno055.c ****                                                                     &data_u8r,
16277:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16278:Core/Src/bno055.c ****                     }
16279:Core/Src/bno055.c ****                 }
16280:Core/Src/bno055.c ****                 else
16281:Core/Src/bno055.c ****                 {
16282:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16283:Core/Src/bno055.c ****                 }
16284:Core/Src/bno055.c ****             }
16285:Core/Src/bno055.c ****             else
16286:Core/Src/bno055.c ****             {
16287:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34041              		.loc 1 16287 26 view .LVU9545
ARM GAS  /tmp/cc9kYR4Z.s 			page 955


 34042 002c 4FF0FF34 		mov	r4, #-1
 34043              	.LVL4179:
 34044              		.loc 1 16287 26 view .LVU9546
 34045 0030 25E0     		b	.L2392
 34046              	.LVL4180:
 34047              	.L2399:
16257:Core/Src/bno055.c ****             }
 34048              		.loc 1 16257 17 is_stmt 1 view .LVU9547
16257:Core/Src/bno055.c ****             }
 34049              		.loc 1 16257 28 is_stmt 0 view .LVU9548
 34050 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34051              	.LVL4181:
16257:Core/Src/bno055.c ****             }
 34052              		.loc 1 16257 25 view .LVU9549
 34053 0036 54FA80F4 		uxtab	r4, r4, r0
 34054 003a 64B2     		sxtb	r4, r4
 34055              	.LVL4182:
16257:Core/Src/bno055.c ****             }
 34056              		.loc 1 16257 25 view .LVU9550
 34057 003c F5E7     		b	.L2393
 34058              	.L2400:
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34059              		.loc 1 16262 17 is_stmt 1 view .LVU9551
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34060              		.loc 1 16262 30 is_stmt 0 view .LVU9552
 34061 003e 0120     		movs	r0, #1
 34062 0040 FFF7FEFF 		bl	bno055_write_page_id
 34063              	.LVL4183:
16263:Core/Src/bno055.c ****                 {
 34064              		.loc 1 16263 17 is_stmt 1 view .LVU9553
16263:Core/Src/bno055.c ****                 {
 34065              		.loc 1 16263 20 is_stmt 0 view .LVU9554
 34066 0044 08BB     		cbnz	r0, .L2397
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34067              		.loc 1 16265 21 is_stmt 1 view .LVU9555
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34068              		.loc 1 16265 40 is_stmt 0 view .LVU9556
 34069 0046 174B     		ldr	r3, .L2402
 34070 0048 1868     		ldr	r0, [r3]
 34071              	.LVL4184:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34072              		.loc 1 16265 40 view .LVU9557
 34073 004a 0469     		ldr	r4, [r0, #16]
 34074              	.LVL4185:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34075              		.loc 1 16265 32 view .LVU9558
 34076 004c 0123     		movs	r3, #1
 34077 004e 0DF10702 		add	r2, sp, #7
 34078 0052 1421     		movs	r1, #20
 34079 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34080 0056 A047     		blx	r4
 34081              	.LVL4186:
16269:Core/Src/bno055.c ****                     {
 34082              		.loc 1 16269 21 is_stmt 1 view .LVU9559
16269:Core/Src/bno055.c ****                     {
 34083              		.loc 1 16269 24 is_stmt 0 view .LVU9560
 34084 0058 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 956


 34085 005a 80B9     		cbnz	r0, .L2392
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34086              		.loc 1 16273 25 is_stmt 1 view .LVU9561
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34087              		.loc 1 16273 34 is_stmt 0 view .LVU9562
 34088 005c 8DF80750 		strb	r5, [sp, #7]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34089              		.loc 1 16274 25 is_stmt 1 view .LVU9563
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34090              		.loc 1 16274 45 is_stmt 0 view .LVU9564
 34091 0060 104B     		ldr	r3, .L2402
 34092 0062 1868     		ldr	r0, [r3]
 34093              	.LVL4187:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34094              		.loc 1 16274 45 view .LVU9565
 34095 0064 C568     		ldr	r5, [r0, #12]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34096              		.loc 1 16274 37 view .LVU9566
 34097 0066 0123     		movs	r3, #1
 34098 0068 0DF10702 		add	r2, sp, #7
 34099 006c 1421     		movs	r1, #20
 34100 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34101 0070 A847     		blx	r5
 34102              	.LVL4188:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34103              		.loc 1 16274 34 view .LVU9567
 34104 0072 54FA80F0 		uxtab	r0, r4, r0
 34105 0076 44B2     		sxtb	r4, r0
 34106              	.LVL4189:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34107              		.loc 1 16274 34 view .LVU9568
 34108 0078 01E0     		b	.L2392
 34109              	.LVL4190:
 34110              	.L2395:
16288:Core/Src/bno055.c ****             }
16289:Core/Src/bno055.c ****         }
16290:Core/Src/bno055.c ****         else
16291:Core/Src/bno055.c ****         {
16292:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34111              		.loc 1 16292 22 view .LVU9569
 34112 007a 4FF0FF34 		mov	r4, #-1
 34113              	.LVL4191:
 34114              	.L2392:
16293:Core/Src/bno055.c ****         }
16294:Core/Src/bno055.c ****     }
16295:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34115              		.loc 1 16295 5 is_stmt 1 view .LVU9570
 34116              		.loc 1 16295 24 is_stmt 0 view .LVU9571
 34117 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34118              		.loc 1 16295 8 view .LVU9572
 34119 0082 28B9     		cbnz	r0, .L2401
 34120              	.LVL4192:
 34121              	.L2391:
16296:Core/Src/bno055.c ****     {
16297:Core/Src/bno055.c ****         /* set the operation mode of
16298:Core/Src/bno055.c ****          * previous operation mode*/
16299:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
ARM GAS  /tmp/cc9kYR4Z.s 			page 957


16300:Core/Src/bno055.c ****     }
16301:Core/Src/bno055.c **** 
16302:Core/Src/bno055.c ****     return com_rslt;
16303:Core/Src/bno055.c **** }
 34122              		.loc 1 16303 1 view .LVU9573
 34123 0084 2046     		mov	r0, r4
 34124 0086 03B0     		add	sp, sp, #12
 34125              	.LCFI939:
 34126              		.cfi_remember_state
 34127              		.cfi_def_cfa_offset 12
 34128              		@ sp needed
 34129 0088 30BD     		pop	{r4, r5, pc}
 34130              	.LVL4193:
 34131              	.L2397:
 34132              	.LCFI940:
 34133              		.cfi_restore_state
16282:Core/Src/bno055.c ****                 }
 34134              		.loc 1 16282 30 view .LVU9574
 34135 008a 4FF0FF34 		mov	r4, #-1
 34136              	.LVL4194:
16282:Core/Src/bno055.c ****                 }
 34137              		.loc 1 16282 30 view .LVU9575
 34138 008e F6E7     		b	.L2392
 34139              	.LVL4195:
 34140              	.L2401:
16299:Core/Src/bno055.c ****     }
 34141              		.loc 1 16299 9 is_stmt 1 view .LVU9576
16299:Core/Src/bno055.c ****     }
 34142              		.loc 1 16299 21 is_stmt 0 view .LVU9577
 34143 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34144              	.LVL4196:
16299:Core/Src/bno055.c ****     }
 34145              		.loc 1 16299 18 view .LVU9578
 34146 0094 54FA80F0 		uxtab	r0, r4, r0
 34147 0098 44B2     		sxtb	r4, r0
 34148              	.LVL4197:
16299:Core/Src/bno055.c ****     }
 34149              		.loc 1 16299 18 view .LVU9579
 34150 009a F3E7     		b	.L2391
 34151              	.LVL4198:
 34152              	.L2394:
16245:Core/Src/bno055.c ****     }
 34153              		.loc 1 16245 16 view .LVU9580
 34154 009c 6FF07E04 		mvn	r4, #126
 34155 00a0 F0E7     		b	.L2391
 34156              	.L2403:
 34157 00a2 00BF     		.align	2
 34158              	.L2402:
 34159 00a4 00000000 		.word	.LANCHOR0
 34160              		.cfi_endproc
 34161              	.LFE236:
 34163              		.section	.text.bno055_get_accel_slow_no_motion_thres,"ax",%progbits
 34164              		.align	1
 34165              		.global	bno055_get_accel_slow_no_motion_thres
 34166              		.syntax unified
 34167              		.thumb
 34168              		.thumb_func
ARM GAS  /tmp/cc9kYR4Z.s 			page 958


 34170              	bno055_get_accel_slow_no_motion_thres:
 34171              	.LVL4199:
 34172              	.LFB237:
16304:Core/Src/bno055.c **** 
16305:Core/Src/bno055.c **** /*!
16306:Core/Src/bno055.c ****  *  @brief This API used to read the accel slownomotion threshold
16307:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16308:Core/Src/bno055.c ****  *
16309:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16310:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16311:Core/Src/bno055.c ****  *
16312:Core/Src/bno055.c ****  *  @return results of bus communication function
16313:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16314:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16315:Core/Src/bno055.c ****  *
16316:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16317:Core/Src/bno055.c ****  *  for accel g range
16318:Core/Src/bno055.c ****  *
16319:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16320:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16321:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16322:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16323:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16324:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16325:Core/Src/bno055.c ****  */
16326:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_thres(u8 *accel_slow_no_motion_thres_u8
16327:Core/Src/bno055.c **** {
 34173              		.loc 1 16327 1 is_stmt 1 view -0
 34174              		.cfi_startproc
 34175              		@ args = 0, pretend = 0, frame = 8
 34176              		@ frame_needed = 0, uses_anonymous_args = 0
 34177              		.loc 1 16327 1 is_stmt 0 view .LVU9582
 34178 0000 70B5     		push	{r4, r5, r6, lr}
 34179              	.LCFI941:
 34180              		.cfi_def_cfa_offset 16
 34181              		.cfi_offset 4, -16
 34182              		.cfi_offset 5, -12
 34183              		.cfi_offset 6, -8
 34184              		.cfi_offset 14, -4
 34185 0002 82B0     		sub	sp, sp, #8
 34186              	.LCFI942:
 34187              		.cfi_def_cfa_offset 24
16328:Core/Src/bno055.c ****     /* Variable used to return value of
16329:Core/Src/bno055.c ****      * communication routine*/
16330:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34188              		.loc 1 16330 5 is_stmt 1 view .LVU9583
 34189              	.LVL4200:
16331:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34190              		.loc 1 16331 5 view .LVU9584
 34191              		.loc 1 16331 8 is_stmt 0 view .LVU9585
 34192 0004 0023     		movs	r3, #0
 34193 0006 8DF80730 		strb	r3, [sp, #7]
16332:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34194              		.loc 1 16332 5 is_stmt 1 view .LVU9586
 34195              	.LVL4201:
16333:Core/Src/bno055.c **** 
16334:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/cc9kYR4Z.s 			page 959


16335:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34196              		.loc 1 16335 5 view .LVU9587
 34197              		.loc 1 16335 18 is_stmt 0 view .LVU9588
 34198 000a 134B     		ldr	r3, .L2412
 34199 000c 1B68     		ldr	r3, [r3]
 34200              		.loc 1 16335 8 view .LVU9589
 34201 000e E3B1     		cbz	r3, .L2408
 34202 0010 0546     		mov	r5, r0
16336:Core/Src/bno055.c ****     {
16337:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16338:Core/Src/bno055.c ****     }
16339:Core/Src/bno055.c ****     else
16340:Core/Src/bno055.c ****     {
16341:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion threshold is
16342:Core/Src/bno055.c ****          * available in the page one*/
16343:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34203              		.loc 1 16343 9 is_stmt 1 view .LVU9590
 34204              		.loc 1 16343 21 is_stmt 0 view .LVU9591
 34205 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34206              		.loc 1 16343 12 view .LVU9592
 34207 0014 012B     		cmp	r3, #1
 34208 0016 12D1     		bne	.L2411
 34209              	.LVL4202:
 34210              	.L2406:
16344:Core/Src/bno055.c ****         {
16345:Core/Src/bno055.c ****             /* Write page as one */
16346:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16347:Core/Src/bno055.c ****         }
16348:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34211              		.loc 1 16348 53 discriminator 1 view .LVU9593
 34212 0018 0F4B     		ldr	r3, .L2412
 34213 001a 1B68     		ldr	r3, [r3]
 34214 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34215              		.loc 1 16348 41 discriminator 1 view .LVU9594
 34216 001e 012B     		cmp	r3, #1
 34217 0020 16D1     		bne	.L2409
 34218              	.L2407:
16349:Core/Src/bno055.c ****         {
16350:Core/Src/bno055.c ****             /* Read the value of slownomotion threshold */
16351:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34219              		.loc 1 16351 13 is_stmt 1 view .LVU9595
 34220              		.loc 1 16351 32 is_stmt 0 view .LVU9596
 34221 0022 0D4B     		ldr	r3, .L2412
 34222 0024 1C68     		ldr	r4, [r3]
 34223 0026 2669     		ldr	r6, [r4, #16]
 34224              		.loc 1 16351 24 view .LVU9597
 34225 0028 0123     		movs	r3, #1
 34226 002a 0DF10702 		add	r2, sp, #7
 34227 002e 1521     		movs	r1, #21
 34228 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 34229 0032 B047     		blx	r6
 34230              	.LVL4203:
16352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG,
16353:Core/Src/bno055.c ****                                                       &data_u8r,
16354:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16355:Core/Src/bno055.c ****             *accel_slow_no_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOT
 34231              		.loc 1 16355 13 is_stmt 1 view .LVU9598
ARM GAS  /tmp/cc9kYR4Z.s 			page 960


 34232              		.loc 1 16355 44 is_stmt 0 view .LVU9599
 34233 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34234 0038 2B70     		strb	r3, [r5]
 34235              	.LVL4204:
 34236              	.L2405:
16356:Core/Src/bno055.c ****         }
16357:Core/Src/bno055.c ****         else
16358:Core/Src/bno055.c ****         {
16359:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16360:Core/Src/bno055.c ****         }
16361:Core/Src/bno055.c ****     }
16362:Core/Src/bno055.c **** 
16363:Core/Src/bno055.c ****     return com_rslt;
16364:Core/Src/bno055.c **** }
 34237              		.loc 1 16364 1 view .LVU9600
 34238 003a 02B0     		add	sp, sp, #8
 34239              	.LCFI943:
 34240              		.cfi_remember_state
 34241              		.cfi_def_cfa_offset 16
 34242              		@ sp needed
 34243 003c 70BD     		pop	{r4, r5, r6, pc}
 34244              	.LVL4205:
 34245              	.L2411:
 34246              	.LCFI944:
 34247              		.cfi_restore_state
16346:Core/Src/bno055.c ****         }
 34248              		.loc 1 16346 13 is_stmt 1 view .LVU9601
16346:Core/Src/bno055.c ****         }
 34249              		.loc 1 16346 23 is_stmt 0 view .LVU9602
 34250 003e 0120     		movs	r0, #1
 34251              	.LVL4206:
16346:Core/Src/bno055.c ****         }
 34252              		.loc 1 16346 23 view .LVU9603
 34253 0040 FFF7FEFF 		bl	bno055_write_page_id
 34254              	.LVL4207:
16348:Core/Src/bno055.c ****         {
 34255              		.loc 1 16348 9 is_stmt 1 view .LVU9604
16348:Core/Src/bno055.c ****         {
 34256              		.loc 1 16348 12 is_stmt 0 view .LVU9605
 34257 0044 0028     		cmp	r0, #0
 34258 0046 ECD0     		beq	.L2407
 34259 0048 E6E7     		b	.L2406
 34260              	.LVL4208:
 34261              	.L2408:
16337:Core/Src/bno055.c ****     }
 34262              		.loc 1 16337 16 view .LVU9606
 34263 004a 6FF07E00 		mvn	r0, #126
 34264              	.LVL4209:
16337:Core/Src/bno055.c ****     }
 34265              		.loc 1 16337 16 view .LVU9607
 34266 004e F4E7     		b	.L2405
 34267              	.LVL4210:
 34268              	.L2409:
16359:Core/Src/bno055.c ****         }
 34269              		.loc 1 16359 22 view .LVU9608
 34270 0050 4FF0FF30 		mov	r0, #-1
 34271 0054 F1E7     		b	.L2405
ARM GAS  /tmp/cc9kYR4Z.s 			page 961


 34272              	.L2413:
 34273 0056 00BF     		.align	2
 34274              	.L2412:
 34275 0058 00000000 		.word	.LANCHOR0
 34276              		.cfi_endproc
 34277              	.LFE237:
 34279              		.section	.text.bno055_set_accel_slow_no_motion_thres,"ax",%progbits
 34280              		.align	1
 34281              		.global	bno055_set_accel_slow_no_motion_thres
 34282              		.syntax unified
 34283              		.thumb
 34284              		.thumb_func
 34286              	bno055_set_accel_slow_no_motion_thres:
 34287              	.LVL4211:
 34288              	.LFB238:
16365:Core/Src/bno055.c **** 
16366:Core/Src/bno055.c **** /*!
16367:Core/Src/bno055.c ****  *  @brief This API used to write the accel slownomotion threshold
16368:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16369:Core/Src/bno055.c ****  *
16370:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16371:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16372:Core/Src/bno055.c ****  *
16373:Core/Src/bno055.c ****  *  @return results of bus communication function
16374:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16375:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16376:Core/Src/bno055.c ****  *
16377:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16378:Core/Src/bno055.c ****  *  for accel g range
16379:Core/Src/bno055.c ****  *
16380:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16381:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16382:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16383:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16384:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16385:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16386:Core/Src/bno055.c ****  */
16387:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_thres(u8 accel_slow_no_motion_thres_u8)
16388:Core/Src/bno055.c **** {
 34289              		.loc 1 16388 1 is_stmt 1 view -0
 34290              		.cfi_startproc
 34291              		@ args = 0, pretend = 0, frame = 8
 34292              		@ frame_needed = 0, uses_anonymous_args = 0
 34293              		.loc 1 16388 1 is_stmt 0 view .LVU9610
 34294 0000 30B5     		push	{r4, r5, lr}
 34295              	.LCFI945:
 34296              		.cfi_def_cfa_offset 12
 34297              		.cfi_offset 4, -12
 34298              		.cfi_offset 5, -8
 34299              		.cfi_offset 14, -4
 34300 0002 83B0     		sub	sp, sp, #12
 34301              	.LCFI946:
 34302              		.cfi_def_cfa_offset 24
16389:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34303              		.loc 1 16389 5 is_stmt 1 view .LVU9611
 34304              	.LVL4212:
16390:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/cc9kYR4Z.s 			page 962


 34305              		.loc 1 16390 5 view .LVU9612
 34306              		.loc 1 16390 8 is_stmt 0 view .LVU9613
 34307 0004 0023     		movs	r3, #0
 34308 0006 8DF80730 		strb	r3, [sp, #7]
16391:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34309              		.loc 1 16391 5 is_stmt 1 view .LVU9614
 34310              	.LVL4213:
16392:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34311              		.loc 1 16392 5 view .LVU9615
 34312              		.loc 1 16392 8 is_stmt 0 view .LVU9616
 34313 000a 8DF80630 		strb	r3, [sp, #6]
16393:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34314              		.loc 1 16393 5 is_stmt 1 view .LVU9617
 34315              	.LVL4214:
16394:Core/Src/bno055.c **** 
16395:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16396:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34316              		.loc 1 16396 5 view .LVU9618
 34317              		.loc 1 16396 18 is_stmt 0 view .LVU9619
 34318 000e 254B     		ldr	r3, .L2426
 34319 0010 1B68     		ldr	r3, [r3]
 34320              		.loc 1 16396 8 view .LVU9620
 34321 0012 002B     		cmp	r3, #0
 34322 0014 42D0     		beq	.L2418
 34323 0016 0546     		mov	r5, r0
16397:Core/Src/bno055.c ****     {
16398:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16399:Core/Src/bno055.c ****     }
16400:Core/Src/bno055.c ****     else
16401:Core/Src/bno055.c ****     {
16402:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16403:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16404:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16405:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34324              		.loc 1 16405 9 is_stmt 1 view .LVU9621
 34325              		.loc 1 16405 19 is_stmt 0 view .LVU9622
 34326 0018 0DF10600 		add	r0, sp, #6
 34327              	.LVL4215:
 34328              		.loc 1 16405 19 view .LVU9623
 34329 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34330              	.LVL4216:
16406:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34331              		.loc 1 16406 9 is_stmt 1 view .LVU9624
 34332              		.loc 1 16406 12 is_stmt 0 view .LVU9625
 34333 0020 0446     		mov	r4, r0
 34334 0022 50BB     		cbnz	r0, .L2419
16407:Core/Src/bno055.c ****         {
16408:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34335              		.loc 1 16408 13 is_stmt 1 view .LVU9626
 34336              		.loc 1 16408 32 is_stmt 0 view .LVU9627
 34337 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34338              		.loc 1 16408 16 view .LVU9628
 34339 0028 1BB9     		cbnz	r3, .L2423
 34340              	.LVL4217:
 34341              	.L2417:
16409:Core/Src/bno055.c ****             {
16410:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
ARM GAS  /tmp/cc9kYR4Z.s 			page 963


16411:Core/Src/bno055.c ****             }
16412:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34342              		.loc 1 16412 13 is_stmt 1 view .LVU9629
 34343              		.loc 1 16412 16 is_stmt 0 view .LVU9630
 34344 002a 44B1     		cbz	r4, .L2424
16413:Core/Src/bno055.c ****             {
16414:Core/Src/bno055.c ****                 /* Write page as one */
16415:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16416:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16417:Core/Src/bno055.c ****                 {
16418:Core/Src/bno055.c ****                     /* Write the value of
16419:Core/Src/bno055.c ****                      * slownomotion threshold */
16420:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16421:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
16422:Core/Src/bno055.c ****                                                               &data_u8r,
16423:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16424:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16425:Core/Src/bno055.c ****                     {
16426:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16427:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
16428:Core/Src/bno055.c ****                                                        accel_slow_no_motion_thres_u8);
16429:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16430:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
16431:Core/Src/bno055.c ****                                                                     &data_u8r,
16432:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16433:Core/Src/bno055.c ****                     }
16434:Core/Src/bno055.c ****                 }
16435:Core/Src/bno055.c ****                 else
16436:Core/Src/bno055.c ****                 {
16437:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16438:Core/Src/bno055.c ****                 }
16439:Core/Src/bno055.c ****             }
16440:Core/Src/bno055.c ****             else
16441:Core/Src/bno055.c ****             {
16442:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34345              		.loc 1 16442 26 view .LVU9631
 34346 002c 4FF0FF34 		mov	r4, #-1
 34347              	.LVL4218:
 34348              		.loc 1 16442 26 view .LVU9632
 34349 0030 25E0     		b	.L2416
 34350              	.LVL4219:
 34351              	.L2423:
16410:Core/Src/bno055.c ****             }
 34352              		.loc 1 16410 17 is_stmt 1 view .LVU9633
16410:Core/Src/bno055.c ****             }
 34353              		.loc 1 16410 28 is_stmt 0 view .LVU9634
 34354 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34355              	.LVL4220:
16410:Core/Src/bno055.c ****             }
 34356              		.loc 1 16410 25 view .LVU9635
 34357 0036 54FA80F4 		uxtab	r4, r4, r0
 34358 003a 64B2     		sxtb	r4, r4
 34359              	.LVL4221:
16410:Core/Src/bno055.c ****             }
 34360              		.loc 1 16410 25 view .LVU9636
 34361 003c F5E7     		b	.L2417
 34362              	.L2424:
ARM GAS  /tmp/cc9kYR4Z.s 			page 964


16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34363              		.loc 1 16415 17 is_stmt 1 view .LVU9637
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34364              		.loc 1 16415 30 is_stmt 0 view .LVU9638
 34365 003e 0120     		movs	r0, #1
 34366 0040 FFF7FEFF 		bl	bno055_write_page_id
 34367              	.LVL4222:
16416:Core/Src/bno055.c ****                 {
 34368              		.loc 1 16416 17 is_stmt 1 view .LVU9639
16416:Core/Src/bno055.c ****                 {
 34369              		.loc 1 16416 20 is_stmt 0 view .LVU9640
 34370 0044 08BB     		cbnz	r0, .L2421
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34371              		.loc 1 16420 21 is_stmt 1 view .LVU9641
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34372              		.loc 1 16420 40 is_stmt 0 view .LVU9642
 34373 0046 174B     		ldr	r3, .L2426
 34374 0048 1868     		ldr	r0, [r3]
 34375              	.LVL4223:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34376              		.loc 1 16420 40 view .LVU9643
 34377 004a 0469     		ldr	r4, [r0, #16]
 34378              	.LVL4224:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34379              		.loc 1 16420 32 view .LVU9644
 34380 004c 0123     		movs	r3, #1
 34381 004e 0DF10702 		add	r2, sp, #7
 34382 0052 1521     		movs	r1, #21
 34383 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34384 0056 A047     		blx	r4
 34385              	.LVL4225:
16424:Core/Src/bno055.c ****                     {
 34386              		.loc 1 16424 21 is_stmt 1 view .LVU9645
16424:Core/Src/bno055.c ****                     {
 34387              		.loc 1 16424 24 is_stmt 0 view .LVU9646
 34388 0058 0446     		mov	r4, r0
 34389 005a 80B9     		cbnz	r0, .L2416
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 34390              		.loc 1 16426 25 is_stmt 1 view .LVU9647
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 34391              		.loc 1 16426 34 is_stmt 0 view .LVU9648
 34392 005c 8DF80750 		strb	r5, [sp, #7]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34393              		.loc 1 16429 25 is_stmt 1 view .LVU9649
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34394              		.loc 1 16429 45 is_stmt 0 view .LVU9650
 34395 0060 104B     		ldr	r3, .L2426
 34396 0062 1868     		ldr	r0, [r3]
 34397              	.LVL4226:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34398              		.loc 1 16429 45 view .LVU9651
 34399 0064 C568     		ldr	r5, [r0, #12]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34400              		.loc 1 16429 37 view .LVU9652
 34401 0066 0123     		movs	r3, #1
 34402 0068 0DF10702 		add	r2, sp, #7
 34403 006c 1521     		movs	r1, #21
ARM GAS  /tmp/cc9kYR4Z.s 			page 965


 34404 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34405 0070 A847     		blx	r5
 34406              	.LVL4227:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34407              		.loc 1 16429 34 view .LVU9653
 34408 0072 54FA80F0 		uxtab	r0, r4, r0
 34409 0076 44B2     		sxtb	r4, r0
 34410              	.LVL4228:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34411              		.loc 1 16429 34 view .LVU9654
 34412 0078 01E0     		b	.L2416
 34413              	.LVL4229:
 34414              	.L2419:
16443:Core/Src/bno055.c ****             }
16444:Core/Src/bno055.c ****         }
16445:Core/Src/bno055.c ****         else
16446:Core/Src/bno055.c ****         {
16447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34415              		.loc 1 16447 22 view .LVU9655
 34416 007a 4FF0FF34 		mov	r4, #-1
 34417              	.LVL4230:
 34418              	.L2416:
16448:Core/Src/bno055.c ****         }
16449:Core/Src/bno055.c ****     }
16450:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34419              		.loc 1 16450 5 is_stmt 1 view .LVU9656
 34420              		.loc 1 16450 24 is_stmt 0 view .LVU9657
 34421 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34422              		.loc 1 16450 8 view .LVU9658
 34423 0082 28B9     		cbnz	r0, .L2425
 34424              	.LVL4231:
 34425              	.L2415:
16451:Core/Src/bno055.c ****     {
16452:Core/Src/bno055.c ****         /* set the operation mode of
16453:Core/Src/bno055.c ****          * previous operation mode*/
16454:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16455:Core/Src/bno055.c ****     }
16456:Core/Src/bno055.c **** 
16457:Core/Src/bno055.c ****     return com_rslt;
16458:Core/Src/bno055.c **** }
 34426              		.loc 1 16458 1 view .LVU9659
 34427 0084 2046     		mov	r0, r4
 34428 0086 03B0     		add	sp, sp, #12
 34429              	.LCFI947:
 34430              		.cfi_remember_state
 34431              		.cfi_def_cfa_offset 12
 34432              		@ sp needed
 34433 0088 30BD     		pop	{r4, r5, pc}
 34434              	.LVL4232:
 34435              	.L2421:
 34436              	.LCFI948:
 34437              		.cfi_restore_state
16437:Core/Src/bno055.c ****                 }
 34438              		.loc 1 16437 30 view .LVU9660
 34439 008a 4FF0FF34 		mov	r4, #-1
 34440              	.LVL4233:
16437:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/cc9kYR4Z.s 			page 966


 34441              		.loc 1 16437 30 view .LVU9661
 34442 008e F6E7     		b	.L2416
 34443              	.LVL4234:
 34444              	.L2425:
16454:Core/Src/bno055.c ****     }
 34445              		.loc 1 16454 9 is_stmt 1 view .LVU9662
16454:Core/Src/bno055.c ****     }
 34446              		.loc 1 16454 21 is_stmt 0 view .LVU9663
 34447 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34448              	.LVL4235:
16454:Core/Src/bno055.c ****     }
 34449              		.loc 1 16454 18 view .LVU9664
 34450 0094 54FA80F0 		uxtab	r0, r4, r0
 34451 0098 44B2     		sxtb	r4, r0
 34452              	.LVL4236:
16454:Core/Src/bno055.c ****     }
 34453              		.loc 1 16454 18 view .LVU9665
 34454 009a F3E7     		b	.L2415
 34455              	.LVL4237:
 34456              	.L2418:
16398:Core/Src/bno055.c ****     }
 34457              		.loc 1 16398 16 view .LVU9666
 34458 009c 6FF07E04 		mvn	r4, #126
 34459 00a0 F0E7     		b	.L2415
 34460              	.L2427:
 34461 00a2 00BF     		.align	2
 34462              	.L2426:
 34463 00a4 00000000 		.word	.LANCHOR0
 34464              		.cfi_endproc
 34465              	.LFE238:
 34467              		.section	.text.bno055_get_accel_slow_no_motion_enable,"ax",%progbits
 34468              		.align	1
 34469              		.global	bno055_get_accel_slow_no_motion_enable
 34470              		.syntax unified
 34471              		.thumb
 34472              		.thumb_func
 34474              	bno055_get_accel_slow_no_motion_enable:
 34475              	.LVL4238:
 34476              	.LFB239:
16459:Core/Src/bno055.c **** 
16460:Core/Src/bno055.c **** /*!
16461:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion enable
16462:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16463:Core/Src/bno055.c ****  *
16464:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16465:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16466:Core/Src/bno055.c ****  *     ------------------------      | --------
16467:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16468:Core/Src/bno055.c ****  *              0x00                 | No motion
16469:Core/Src/bno055.c ****  *
16470:Core/Src/bno055.c ****  *  @return results of bus communication function
16471:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16472:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16473:Core/Src/bno055.c ****  *
16474:Core/Src/bno055.c ****  */
16475:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_enable(u8 *accel_slow_no_motion_en_u8)
16476:Core/Src/bno055.c **** {
ARM GAS  /tmp/cc9kYR4Z.s 			page 967


 34477              		.loc 1 16476 1 is_stmt 1 view -0
 34478              		.cfi_startproc
 34479              		@ args = 0, pretend = 0, frame = 8
 34480              		@ frame_needed = 0, uses_anonymous_args = 0
 34481              		.loc 1 16476 1 is_stmt 0 view .LVU9668
 34482 0000 30B5     		push	{r4, r5, lr}
 34483              	.LCFI949:
 34484              		.cfi_def_cfa_offset 12
 34485              		.cfi_offset 4, -12
 34486              		.cfi_offset 5, -8
 34487              		.cfi_offset 14, -4
 34488 0002 83B0     		sub	sp, sp, #12
 34489              	.LCFI950:
 34490              		.cfi_def_cfa_offset 24
16477:Core/Src/bno055.c ****     /* Variable used to return value of
16478:Core/Src/bno055.c ****      * communication routine*/
16479:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34491              		.loc 1 16479 5 is_stmt 1 view .LVU9669
 34492              	.LVL4239:
16480:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34493              		.loc 1 16480 5 view .LVU9670
 34494              		.loc 1 16480 8 is_stmt 0 view .LVU9671
 34495 0004 0023     		movs	r3, #0
 34496 0006 8DF80730 		strb	r3, [sp, #7]
16481:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34497              		.loc 1 16481 5 is_stmt 1 view .LVU9672
 34498              	.LVL4240:
16482:Core/Src/bno055.c **** 
16483:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16484:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34499              		.loc 1 16484 5 view .LVU9673
 34500              		.loc 1 16484 18 is_stmt 0 view .LVU9674
 34501 000a 144B     		ldr	r3, .L2436
 34502 000c 1B68     		ldr	r3, [r3]
 34503              		.loc 1 16484 8 view .LVU9675
 34504 000e F3B1     		cbz	r3, .L2432
 34505 0010 0446     		mov	r4, r0
16485:Core/Src/bno055.c ****     {
16486:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16487:Core/Src/bno055.c ****     }
16488:Core/Src/bno055.c ****     else
16489:Core/Src/bno055.c ****     {
16490:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion enable is
16491:Core/Src/bno055.c ****          * available in the page one*/
16492:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34506              		.loc 1 16492 9 is_stmt 1 view .LVU9676
 34507              		.loc 1 16492 21 is_stmt 0 view .LVU9677
 34508 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34509              		.loc 1 16492 12 view .LVU9678
 34510 0014 012B     		cmp	r3, #1
 34511 0016 14D1     		bne	.L2435
 34512              	.LVL4241:
 34513              	.L2430:
16493:Core/Src/bno055.c ****         {
16494:Core/Src/bno055.c ****             /* Write page as one */
16495:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16496:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 968


16497:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34514              		.loc 1 16497 53 discriminator 1 view .LVU9679
 34515 0018 104B     		ldr	r3, .L2436
 34516 001a 1B68     		ldr	r3, [r3]
 34517 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34518              		.loc 1 16497 41 discriminator 1 view .LVU9680
 34519 001e 012B     		cmp	r3, #1
 34520 0020 18D1     		bne	.L2433
 34521              	.L2431:
16498:Core/Src/bno055.c ****         {
16499:Core/Src/bno055.c ****             /* Read the value of accel slownomotion enable */
16500:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34522              		.loc 1 16500 13 is_stmt 1 view .LVU9681
 34523              		.loc 1 16500 32 is_stmt 0 view .LVU9682
 34524 0022 0E4B     		ldr	r3, .L2436
 34525 0024 1868     		ldr	r0, [r3]
 34526 0026 0569     		ldr	r5, [r0, #16]
 34527              		.loc 1 16500 24 view .LVU9683
 34528 0028 0123     		movs	r3, #1
 34529 002a 0DF10702 		add	r2, sp, #7
 34530 002e 1621     		movs	r1, #22
 34531 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34532 0032 A847     		blx	r5
 34533              	.LVL4242:
16501:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_REG,
16502:Core/Src/bno055.c ****                                                       &data_u8r,
16503:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16504:Core/Src/bno055.c ****             *accel_slow_no_motion_en_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTION
 34534              		.loc 1 16504 13 is_stmt 1 view .LVU9684
 34535              		.loc 1 16504 43 is_stmt 0 view .LVU9685
 34536 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34537 0038 03F00103 		and	r3, r3, #1
 34538              		.loc 1 16504 41 view .LVU9686
 34539 003c 2370     		strb	r3, [r4]
 34540              	.LVL4243:
 34541              	.L2429:
16505:Core/Src/bno055.c ****         }
16506:Core/Src/bno055.c ****         else
16507:Core/Src/bno055.c ****         {
16508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16509:Core/Src/bno055.c ****         }
16510:Core/Src/bno055.c ****     }
16511:Core/Src/bno055.c **** 
16512:Core/Src/bno055.c ****     return com_rslt;
16513:Core/Src/bno055.c **** }
 34542              		.loc 1 16513 1 view .LVU9687
 34543 003e 03B0     		add	sp, sp, #12
 34544              	.LCFI951:
 34545              		.cfi_remember_state
 34546              		.cfi_def_cfa_offset 12
 34547              		@ sp needed
 34548 0040 30BD     		pop	{r4, r5, pc}
 34549              	.LVL4244:
 34550              	.L2435:
 34551              	.LCFI952:
 34552              		.cfi_restore_state
16495:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 969


 34553              		.loc 1 16495 13 is_stmt 1 view .LVU9688
16495:Core/Src/bno055.c ****         }
 34554              		.loc 1 16495 23 is_stmt 0 view .LVU9689
 34555 0042 0120     		movs	r0, #1
 34556              	.LVL4245:
16495:Core/Src/bno055.c ****         }
 34557              		.loc 1 16495 23 view .LVU9690
 34558 0044 FFF7FEFF 		bl	bno055_write_page_id
 34559              	.LVL4246:
16497:Core/Src/bno055.c ****         {
 34560              		.loc 1 16497 9 is_stmt 1 view .LVU9691
16497:Core/Src/bno055.c ****         {
 34561              		.loc 1 16497 12 is_stmt 0 view .LVU9692
 34562 0048 0028     		cmp	r0, #0
 34563 004a EAD0     		beq	.L2431
 34564 004c E4E7     		b	.L2430
 34565              	.LVL4247:
 34566              	.L2432:
16486:Core/Src/bno055.c ****     }
 34567              		.loc 1 16486 16 view .LVU9693
 34568 004e 6FF07E00 		mvn	r0, #126
 34569              	.LVL4248:
16486:Core/Src/bno055.c ****     }
 34570              		.loc 1 16486 16 view .LVU9694
 34571 0052 F4E7     		b	.L2429
 34572              	.LVL4249:
 34573              	.L2433:
16508:Core/Src/bno055.c ****         }
 34574              		.loc 1 16508 22 view .LVU9695
 34575 0054 4FF0FF30 		mov	r0, #-1
 34576 0058 F1E7     		b	.L2429
 34577              	.L2437:
 34578 005a 00BF     		.align	2
 34579              	.L2436:
 34580 005c 00000000 		.word	.LANCHOR0
 34581              		.cfi_endproc
 34582              	.LFE239:
 34584              		.section	.text.bno055_set_accel_slow_no_motion_enable,"ax",%progbits
 34585              		.align	1
 34586              		.global	bno055_set_accel_slow_no_motion_enable
 34587              		.syntax unified
 34588              		.thumb
 34589              		.thumb_func
 34591              	bno055_set_accel_slow_no_motion_enable:
 34592              	.LVL4250:
 34593              	.LFB240:
16514:Core/Src/bno055.c **** 
16515:Core/Src/bno055.c **** /*!
16516:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion enable
16517:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16518:Core/Src/bno055.c ****  *
16519:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16520:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16521:Core/Src/bno055.c ****  *     ------------------------      | --------
16522:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16523:Core/Src/bno055.c ****  *              0x00                 | No motion
16524:Core/Src/bno055.c ****  *
ARM GAS  /tmp/cc9kYR4Z.s 			page 970


16525:Core/Src/bno055.c ****  *  @return results of bus communication function
16526:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16527:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16528:Core/Src/bno055.c ****  *
16529:Core/Src/bno055.c ****  */
16530:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_enable(u8 accel_slow_no_motion_en_u8)
16531:Core/Src/bno055.c **** {
 34594              		.loc 1 16531 1 is_stmt 1 view -0
 34595              		.cfi_startproc
 34596              		@ args = 0, pretend = 0, frame = 8
 34597              		@ frame_needed = 0, uses_anonymous_args = 0
 34598              		.loc 1 16531 1 is_stmt 0 view .LVU9697
 34599 0000 30B5     		push	{r4, r5, lr}
 34600              	.LCFI953:
 34601              		.cfi_def_cfa_offset 12
 34602              		.cfi_offset 4, -12
 34603              		.cfi_offset 5, -8
 34604              		.cfi_offset 14, -4
 34605 0002 83B0     		sub	sp, sp, #12
 34606              	.LCFI954:
 34607              		.cfi_def_cfa_offset 24
16532:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34608              		.loc 1 16532 5 is_stmt 1 view .LVU9698
 34609              	.LVL4251:
16533:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34610              		.loc 1 16533 5 view .LVU9699
 34611              		.loc 1 16533 8 is_stmt 0 view .LVU9700
 34612 0004 0023     		movs	r3, #0
 34613 0006 8DF80730 		strb	r3, [sp, #7]
16534:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34614              		.loc 1 16534 5 is_stmt 1 view .LVU9701
 34615              	.LVL4252:
16535:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34616              		.loc 1 16535 5 view .LVU9702
 34617              		.loc 1 16535 8 is_stmt 0 view .LVU9703
 34618 000a 8DF80630 		strb	r3, [sp, #6]
16536:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34619              		.loc 1 16536 5 is_stmt 1 view .LVU9704
 34620              	.LVL4253:
16537:Core/Src/bno055.c **** 
16538:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16539:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34621              		.loc 1 16539 5 view .LVU9705
 34622              		.loc 1 16539 18 is_stmt 0 view .LVU9706
 34623 000e 294B     		ldr	r3, .L2450
 34624 0010 1B68     		ldr	r3, [r3]
 34625              		.loc 1 16539 8 view .LVU9707
 34626 0012 002B     		cmp	r3, #0
 34627 0014 4AD0     		beq	.L2442
 34628 0016 0546     		mov	r5, r0
16540:Core/Src/bno055.c ****     {
16541:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16542:Core/Src/bno055.c ****     }
16543:Core/Src/bno055.c ****     else
16544:Core/Src/bno055.c ****     {
16545:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16546:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
ARM GAS  /tmp/cc9kYR4Z.s 			page 971


16547:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16548:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34629              		.loc 1 16548 9 is_stmt 1 view .LVU9708
 34630              		.loc 1 16548 19 is_stmt 0 view .LVU9709
 34631 0018 0DF10600 		add	r0, sp, #6
 34632              	.LVL4254:
 34633              		.loc 1 16548 19 view .LVU9710
 34634 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34635              	.LVL4255:
16549:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34636              		.loc 1 16549 9 is_stmt 1 view .LVU9711
 34637              		.loc 1 16549 12 is_stmt 0 view .LVU9712
 34638 0020 0446     		mov	r4, r0
 34639 0022 90BB     		cbnz	r0, .L2443
16550:Core/Src/bno055.c ****         {
16551:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34640              		.loc 1 16551 13 is_stmt 1 view .LVU9713
 34641              		.loc 1 16551 32 is_stmt 0 view .LVU9714
 34642 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34643              		.loc 1 16551 16 view .LVU9715
 34644 0028 1BB9     		cbnz	r3, .L2447
 34645              	.LVL4256:
 34646              	.L2441:
16552:Core/Src/bno055.c ****             {
16553:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16554:Core/Src/bno055.c ****             }
16555:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34647              		.loc 1 16555 13 is_stmt 1 view .LVU9716
 34648              		.loc 1 16555 16 is_stmt 0 view .LVU9717
 34649 002a 44B1     		cbz	r4, .L2448
16556:Core/Src/bno055.c ****             {
16557:Core/Src/bno055.c ****                 /* Write page as one */
16558:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16559:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16560:Core/Src/bno055.c ****                 {
16561:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16562:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
16563:Core/Src/bno055.c ****                                                               &data_u8r,
16564:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16565:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16566:Core/Src/bno055.c ****                     {
16567:Core/Src/bno055.c ****                         /* Read the value of
16568:Core/Src/bno055.c ****                          * accel slownomotion enable */
16569:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16570:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
16571:Core/Src/bno055.c ****                                                        accel_slow_no_motion_en_u8);
16572:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16573:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
16574:Core/Src/bno055.c ****                                                                     &data_u8r,
16575:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16576:Core/Src/bno055.c ****                     }
16577:Core/Src/bno055.c ****                 }
16578:Core/Src/bno055.c ****                 else
16579:Core/Src/bno055.c ****                 {
16580:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16581:Core/Src/bno055.c ****                 }
16582:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 972


16583:Core/Src/bno055.c ****             else
16584:Core/Src/bno055.c ****             {
16585:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34650              		.loc 1 16585 26 view .LVU9718
 34651 002c 4FF0FF34 		mov	r4, #-1
 34652              	.LVL4257:
 34653              		.loc 1 16585 26 view .LVU9719
 34654 0030 2DE0     		b	.L2440
 34655              	.LVL4258:
 34656              	.L2447:
16553:Core/Src/bno055.c ****             }
 34657              		.loc 1 16553 17 is_stmt 1 view .LVU9720
16553:Core/Src/bno055.c ****             }
 34658              		.loc 1 16553 28 is_stmt 0 view .LVU9721
 34659 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34660              	.LVL4259:
16553:Core/Src/bno055.c ****             }
 34661              		.loc 1 16553 25 view .LVU9722
 34662 0036 54FA80F4 		uxtab	r4, r4, r0
 34663 003a 64B2     		sxtb	r4, r4
 34664              	.LVL4260:
16553:Core/Src/bno055.c ****             }
 34665              		.loc 1 16553 25 view .LVU9723
 34666 003c F5E7     		b	.L2441
 34667              	.L2448:
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34668              		.loc 1 16558 17 is_stmt 1 view .LVU9724
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34669              		.loc 1 16558 30 is_stmt 0 view .LVU9725
 34670 003e 0120     		movs	r0, #1
 34671 0040 FFF7FEFF 		bl	bno055_write_page_id
 34672              	.LVL4261:
16559:Core/Src/bno055.c ****                 {
 34673              		.loc 1 16559 17 is_stmt 1 view .LVU9726
16559:Core/Src/bno055.c ****                 {
 34674              		.loc 1 16559 20 is_stmt 0 view .LVU9727
 34675 0044 48BB     		cbnz	r0, .L2445
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34676              		.loc 1 16561 21 is_stmt 1 view .LVU9728
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34677              		.loc 1 16561 40 is_stmt 0 view .LVU9729
 34678 0046 1B4B     		ldr	r3, .L2450
 34679 0048 1868     		ldr	r0, [r3]
 34680              	.LVL4262:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34681              		.loc 1 16561 40 view .LVU9730
 34682 004a 0469     		ldr	r4, [r0, #16]
 34683              	.LVL4263:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34684              		.loc 1 16561 32 view .LVU9731
 34685 004c 0123     		movs	r3, #1
 34686 004e 0DF10702 		add	r2, sp, #7
 34687 0052 1621     		movs	r1, #22
 34688 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34689 0056 A047     		blx	r4
 34690              	.LVL4264:
16565:Core/Src/bno055.c ****                     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 973


 34691              		.loc 1 16565 21 is_stmt 1 view .LVU9732
16565:Core/Src/bno055.c ****                     {
 34692              		.loc 1 16565 24 is_stmt 0 view .LVU9733
 34693 0058 0446     		mov	r4, r0
 34694 005a C0B9     		cbnz	r0, .L2440
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34695              		.loc 1 16569 25 is_stmt 1 view .LVU9734
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34696              		.loc 1 16569 36 is_stmt 0 view .LVU9735
 34697 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34698 0060 23F00103 		bic	r3, r3, #1
 34699 0064 5BB2     		sxtb	r3, r3
 34700 0066 05F00100 		and	r0, r5, #1
 34701              	.LVL4265:
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34702              		.loc 1 16569 36 view .LVU9736
 34703 006a 0343     		orrs	r3, r3, r0
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34704              		.loc 1 16569 34 view .LVU9737
 34705 006c 8DF80730 		strb	r3, [sp, #7]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34706              		.loc 1 16572 25 is_stmt 1 view .LVU9738
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34707              		.loc 1 16572 45 is_stmt 0 view .LVU9739
 34708 0070 104B     		ldr	r3, .L2450
 34709 0072 1868     		ldr	r0, [r3]
 34710 0074 C568     		ldr	r5, [r0, #12]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34711              		.loc 1 16572 37 view .LVU9740
 34712 0076 0123     		movs	r3, #1
 34713 0078 0DF10702 		add	r2, sp, #7
 34714 007c 1621     		movs	r1, #22
 34715 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34716 0080 A847     		blx	r5
 34717              	.LVL4266:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34718              		.loc 1 16572 34 view .LVU9741
 34719 0082 54FA80F0 		uxtab	r0, r4, r0
 34720 0086 44B2     		sxtb	r4, r0
 34721              	.LVL4267:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34722              		.loc 1 16572 34 view .LVU9742
 34723 0088 01E0     		b	.L2440
 34724              	.LVL4268:
 34725              	.L2443:
16586:Core/Src/bno055.c ****             }
16587:Core/Src/bno055.c ****         }
16588:Core/Src/bno055.c ****         else
16589:Core/Src/bno055.c ****         {
16590:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34726              		.loc 1 16590 22 view .LVU9743
 34727 008a 4FF0FF34 		mov	r4, #-1
 34728              	.LVL4269:
 34729              	.L2440:
16591:Core/Src/bno055.c ****         }
16592:Core/Src/bno055.c ****     }
16593:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/cc9kYR4Z.s 			page 974


 34730              		.loc 1 16593 5 is_stmt 1 view .LVU9744
 34731              		.loc 1 16593 24 is_stmt 0 view .LVU9745
 34732 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34733              		.loc 1 16593 8 view .LVU9746
 34734 0092 28B9     		cbnz	r0, .L2449
 34735              	.LVL4270:
 34736              	.L2439:
16594:Core/Src/bno055.c ****     {
16595:Core/Src/bno055.c ****         /* set the operation mode of
16596:Core/Src/bno055.c ****          * previous operation mode*/
16597:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16598:Core/Src/bno055.c ****     }
16599:Core/Src/bno055.c **** 
16600:Core/Src/bno055.c ****     return com_rslt;
16601:Core/Src/bno055.c **** }
 34737              		.loc 1 16601 1 view .LVU9747
 34738 0094 2046     		mov	r0, r4
 34739 0096 03B0     		add	sp, sp, #12
 34740              	.LCFI955:
 34741              		.cfi_remember_state
 34742              		.cfi_def_cfa_offset 12
 34743              		@ sp needed
 34744 0098 30BD     		pop	{r4, r5, pc}
 34745              	.LVL4271:
 34746              	.L2445:
 34747              	.LCFI956:
 34748              		.cfi_restore_state
16580:Core/Src/bno055.c ****                 }
 34749              		.loc 1 16580 30 view .LVU9748
 34750 009a 4FF0FF34 		mov	r4, #-1
 34751              	.LVL4272:
16580:Core/Src/bno055.c ****                 }
 34752              		.loc 1 16580 30 view .LVU9749
 34753 009e F6E7     		b	.L2440
 34754              	.LVL4273:
 34755              	.L2449:
16597:Core/Src/bno055.c ****     }
 34756              		.loc 1 16597 9 is_stmt 1 view .LVU9750
16597:Core/Src/bno055.c ****     }
 34757              		.loc 1 16597 21 is_stmt 0 view .LVU9751
 34758 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 34759              	.LVL4274:
16597:Core/Src/bno055.c ****     }
 34760              		.loc 1 16597 18 view .LVU9752
 34761 00a4 54FA80F0 		uxtab	r0, r4, r0
 34762 00a8 44B2     		sxtb	r4, r0
 34763              	.LVL4275:
16597:Core/Src/bno055.c ****     }
 34764              		.loc 1 16597 18 view .LVU9753
 34765 00aa F3E7     		b	.L2439
 34766              	.LVL4276:
 34767              	.L2442:
16541:Core/Src/bno055.c ****     }
 34768              		.loc 1 16541 16 view .LVU9754
 34769 00ac 6FF07E04 		mvn	r4, #126
 34770 00b0 F0E7     		b	.L2439
 34771              	.L2451:
ARM GAS  /tmp/cc9kYR4Z.s 			page 975


 34772 00b2 00BF     		.align	2
 34773              	.L2450:
 34774 00b4 00000000 		.word	.LANCHOR0
 34775              		.cfi_endproc
 34776              	.LFE240:
 34778              		.section	.text.bno055_get_accel_slow_no_motion_durn,"ax",%progbits
 34779              		.align	1
 34780              		.global	bno055_get_accel_slow_no_motion_durn
 34781              		.syntax unified
 34782              		.thumb
 34783              		.thumb_func
 34785              	bno055_get_accel_slow_no_motion_durn:
 34786              	.LVL4277:
 34787              	.LFB241:
16602:Core/Src/bno055.c **** 
16603:Core/Src/bno055.c **** /*!
16604:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion duration
16605:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16606:Core/Src/bno055.c ****  *
16607:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16608:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16609:Core/Src/bno055.c ****  *
16610:Core/Src/bno055.c ****  *  @return results of bus communication function
16611:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16612:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16613:Core/Src/bno055.c ****  *
16614:Core/Src/bno055.c ****  */
16615:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_durn(u8 *accel_slow_no_motion_durn_u8)
16616:Core/Src/bno055.c **** {
 34788              		.loc 1 16616 1 is_stmt 1 view -0
 34789              		.cfi_startproc
 34790              		@ args = 0, pretend = 0, frame = 8
 34791              		@ frame_needed = 0, uses_anonymous_args = 0
 34792              		.loc 1 16616 1 is_stmt 0 view .LVU9756
 34793 0000 30B5     		push	{r4, r5, lr}
 34794              	.LCFI957:
 34795              		.cfi_def_cfa_offset 12
 34796              		.cfi_offset 4, -12
 34797              		.cfi_offset 5, -8
 34798              		.cfi_offset 14, -4
 34799 0002 83B0     		sub	sp, sp, #12
 34800              	.LCFI958:
 34801              		.cfi_def_cfa_offset 24
16617:Core/Src/bno055.c ****     /* Variable used to return value of
16618:Core/Src/bno055.c ****      * communication routine*/
16619:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34802              		.loc 1 16619 5 is_stmt 1 view .LVU9757
 34803              	.LVL4278:
16620:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34804              		.loc 1 16620 5 view .LVU9758
 34805              		.loc 1 16620 8 is_stmt 0 view .LVU9759
 34806 0004 0023     		movs	r3, #0
 34807 0006 8DF80730 		strb	r3, [sp, #7]
16621:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34808              		.loc 1 16621 5 is_stmt 1 view .LVU9760
 34809              	.LVL4279:
16622:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 976


16623:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16624:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34810              		.loc 1 16624 5 view .LVU9761
 34811              		.loc 1 16624 18 is_stmt 0 view .LVU9762
 34812 000a 144B     		ldr	r3, .L2460
 34813 000c 1B68     		ldr	r3, [r3]
 34814              		.loc 1 16624 8 view .LVU9763
 34815 000e F3B1     		cbz	r3, .L2456
 34816 0010 0446     		mov	r4, r0
16625:Core/Src/bno055.c ****     {
16626:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16627:Core/Src/bno055.c ****     }
16628:Core/Src/bno055.c ****     else
16629:Core/Src/bno055.c ****     {
16630:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion duration is
16631:Core/Src/bno055.c ****          * available in the page one*/
16632:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34817              		.loc 1 16632 9 is_stmt 1 view .LVU9764
 34818              		.loc 1 16632 21 is_stmt 0 view .LVU9765
 34819 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34820              		.loc 1 16632 12 view .LVU9766
 34821 0014 012B     		cmp	r3, #1
 34822 0016 14D1     		bne	.L2459
 34823              	.LVL4280:
 34824              	.L2454:
16633:Core/Src/bno055.c ****         {
16634:Core/Src/bno055.c ****             /* Write page as one */
16635:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16636:Core/Src/bno055.c ****         }
16637:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34825              		.loc 1 16637 53 discriminator 1 view .LVU9767
 34826 0018 104B     		ldr	r3, .L2460
 34827 001a 1B68     		ldr	r3, [r3]
 34828 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34829              		.loc 1 16637 41 discriminator 1 view .LVU9768
 34830 001e 012B     		cmp	r3, #1
 34831 0020 18D1     		bne	.L2457
 34832              	.L2455:
16638:Core/Src/bno055.c ****         {
16639:Core/Src/bno055.c ****             /*read value of accel slownomotion duration*/
16640:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34833              		.loc 1 16640 13 is_stmt 1 view .LVU9769
 34834              		.loc 1 16640 32 is_stmt 0 view .LVU9770
 34835 0022 0E4B     		ldr	r3, .L2460
 34836 0024 1868     		ldr	r0, [r3]
 34837 0026 0569     		ldr	r5, [r0, #16]
 34838              		.loc 1 16640 24 view .LVU9771
 34839 0028 0123     		movs	r3, #1
 34840 002a 0DF10702 		add	r2, sp, #7
 34841 002e 1621     		movs	r1, #22
 34842 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34843 0032 A847     		blx	r5
 34844              	.LVL4281:
16641:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16642:Core/Src/bno055.c ****                                                       &data_u8r,
16643:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16644:Core/Src/bno055.c ****             *accel_slow_no_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTI
ARM GAS  /tmp/cc9kYR4Z.s 			page 977


 34845              		.loc 1 16644 13 is_stmt 1 view .LVU9772
 34846              		.loc 1 16644 45 is_stmt 0 view .LVU9773
 34847 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34848 0038 C3F34503 		ubfx	r3, r3, #1, #6
 34849              		.loc 1 16644 43 view .LVU9774
 34850 003c 2370     		strb	r3, [r4]
 34851              	.LVL4282:
 34852              	.L2453:
16645:Core/Src/bno055.c ****         }
16646:Core/Src/bno055.c ****         else
16647:Core/Src/bno055.c ****         {
16648:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16649:Core/Src/bno055.c ****         }
16650:Core/Src/bno055.c ****     }
16651:Core/Src/bno055.c **** 
16652:Core/Src/bno055.c ****     return com_rslt;
16653:Core/Src/bno055.c **** }
 34853              		.loc 1 16653 1 view .LVU9775
 34854 003e 03B0     		add	sp, sp, #12
 34855              	.LCFI959:
 34856              		.cfi_remember_state
 34857              		.cfi_def_cfa_offset 12
 34858              		@ sp needed
 34859 0040 30BD     		pop	{r4, r5, pc}
 34860              	.LVL4283:
 34861              	.L2459:
 34862              	.LCFI960:
 34863              		.cfi_restore_state
16635:Core/Src/bno055.c ****         }
 34864              		.loc 1 16635 13 is_stmt 1 view .LVU9776
16635:Core/Src/bno055.c ****         }
 34865              		.loc 1 16635 23 is_stmt 0 view .LVU9777
 34866 0042 0120     		movs	r0, #1
 34867              	.LVL4284:
16635:Core/Src/bno055.c ****         }
 34868              		.loc 1 16635 23 view .LVU9778
 34869 0044 FFF7FEFF 		bl	bno055_write_page_id
 34870              	.LVL4285:
16637:Core/Src/bno055.c ****         {
 34871              		.loc 1 16637 9 is_stmt 1 view .LVU9779
16637:Core/Src/bno055.c ****         {
 34872              		.loc 1 16637 12 is_stmt 0 view .LVU9780
 34873 0048 0028     		cmp	r0, #0
 34874 004a EAD0     		beq	.L2455
 34875 004c E4E7     		b	.L2454
 34876              	.LVL4286:
 34877              	.L2456:
16626:Core/Src/bno055.c ****     }
 34878              		.loc 1 16626 16 view .LVU9781
 34879 004e 6FF07E00 		mvn	r0, #126
 34880              	.LVL4287:
16626:Core/Src/bno055.c ****     }
 34881              		.loc 1 16626 16 view .LVU9782
 34882 0052 F4E7     		b	.L2453
 34883              	.LVL4288:
 34884              	.L2457:
16648:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 978


 34885              		.loc 1 16648 22 view .LVU9783
 34886 0054 4FF0FF30 		mov	r0, #-1
 34887 0058 F1E7     		b	.L2453
 34888              	.L2461:
 34889 005a 00BF     		.align	2
 34890              	.L2460:
 34891 005c 00000000 		.word	.LANCHOR0
 34892              		.cfi_endproc
 34893              	.LFE241:
 34895              		.section	.text.bno055_set_accel_slow_no_motion_durn,"ax",%progbits
 34896              		.align	1
 34897              		.global	bno055_set_accel_slow_no_motion_durn
 34898              		.syntax unified
 34899              		.thumb
 34900              		.thumb_func
 34902              	bno055_set_accel_slow_no_motion_durn:
 34903              	.LVL4289:
 34904              	.LFB242:
16654:Core/Src/bno055.c **** 
16655:Core/Src/bno055.c **** /*!
16656:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion duration
16657:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16658:Core/Src/bno055.c ****  *
16659:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16660:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16661:Core/Src/bno055.c ****  *
16662:Core/Src/bno055.c ****  *  @return results of bus communication function
16663:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16664:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16665:Core/Src/bno055.c ****  *
16666:Core/Src/bno055.c ****  */
16667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_durn(u8 accel_slow_no_motion_durn_u8)
16668:Core/Src/bno055.c **** {
 34905              		.loc 1 16668 1 is_stmt 1 view -0
 34906              		.cfi_startproc
 34907              		@ args = 0, pretend = 0, frame = 8
 34908              		@ frame_needed = 0, uses_anonymous_args = 0
 34909              		.loc 1 16668 1 is_stmt 0 view .LVU9785
 34910 0000 30B5     		push	{r4, r5, lr}
 34911              	.LCFI961:
 34912              		.cfi_def_cfa_offset 12
 34913              		.cfi_offset 4, -12
 34914              		.cfi_offset 5, -8
 34915              		.cfi_offset 14, -4
 34916 0002 83B0     		sub	sp, sp, #12
 34917              	.LCFI962:
 34918              		.cfi_def_cfa_offset 24
16669:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34919              		.loc 1 16669 5 is_stmt 1 view .LVU9786
 34920              	.LVL4290:
16670:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34921              		.loc 1 16670 5 view .LVU9787
 34922              		.loc 1 16670 8 is_stmt 0 view .LVU9788
 34923 0004 0023     		movs	r3, #0
 34924 0006 8DF80730 		strb	r3, [sp, #7]
16671:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34925              		.loc 1 16671 5 is_stmt 1 view .LVU9789
ARM GAS  /tmp/cc9kYR4Z.s 			page 979


 34926              	.LVL4291:
16672:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34927              		.loc 1 16672 5 view .LVU9790
 34928              		.loc 1 16672 8 is_stmt 0 view .LVU9791
 34929 000a 8DF80630 		strb	r3, [sp, #6]
16673:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34930              		.loc 1 16673 5 is_stmt 1 view .LVU9792
 34931              	.LVL4292:
16674:Core/Src/bno055.c **** 
16675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34932              		.loc 1 16676 5 view .LVU9793
 34933              		.loc 1 16676 18 is_stmt 0 view .LVU9794
 34934 000e 2A4B     		ldr	r3, .L2474
 34935 0010 1B68     		ldr	r3, [r3]
 34936              		.loc 1 16676 8 view .LVU9795
 34937 0012 002B     		cmp	r3, #0
 34938 0014 4CD0     		beq	.L2466
 34939 0016 0546     		mov	r5, r0
16677:Core/Src/bno055.c ****     {
16678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16679:Core/Src/bno055.c ****     }
16680:Core/Src/bno055.c ****     else
16681:Core/Src/bno055.c ****     {
16682:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16683:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16684:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16685:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34940              		.loc 1 16685 9 is_stmt 1 view .LVU9796
 34941              		.loc 1 16685 19 is_stmt 0 view .LVU9797
 34942 0018 0DF10600 		add	r0, sp, #6
 34943              	.LVL4293:
 34944              		.loc 1 16685 19 view .LVU9798
 34945 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34946              	.LVL4294:
16686:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34947              		.loc 1 16686 9 is_stmt 1 view .LVU9799
 34948              		.loc 1 16686 12 is_stmt 0 view .LVU9800
 34949 0020 0446     		mov	r4, r0
 34950 0022 0028     		cmp	r0, #0
 34951 0024 33D1     		bne	.L2467
16687:Core/Src/bno055.c ****         {
16688:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34952              		.loc 1 16688 13 is_stmt 1 view .LVU9801
 34953              		.loc 1 16688 32 is_stmt 0 view .LVU9802
 34954 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34955              		.loc 1 16688 16 view .LVU9803
 34956 002a 1BB9     		cbnz	r3, .L2471
 34957              	.LVL4295:
 34958              	.L2465:
16689:Core/Src/bno055.c ****             {
16690:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16691:Core/Src/bno055.c ****             }
16692:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34959              		.loc 1 16692 13 is_stmt 1 view .LVU9804
 34960              		.loc 1 16692 16 is_stmt 0 view .LVU9805
 34961 002c 44B1     		cbz	r4, .L2472
ARM GAS  /tmp/cc9kYR4Z.s 			page 980


16693:Core/Src/bno055.c ****             {
16694:Core/Src/bno055.c ****                 /* Write page as one */
16695:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16696:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16697:Core/Src/bno055.c ****                 {
16698:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16699:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16700:Core/Src/bno055.c ****                                                               &data_u8r,
16701:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16702:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16703:Core/Src/bno055.c ****                     {
16704:Core/Src/bno055.c ****                         /*Write the value of accel
16705:Core/Src/bno055.c ****                          * slownomotion duration*/
16706:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16707:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
16708:Core/Src/bno055.c ****                                                        accel_slow_no_motion_durn_u8);
16709:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16710:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
16711:Core/Src/bno055.c ****                                                                     &data_u8r,
16712:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16713:Core/Src/bno055.c ****                     }
16714:Core/Src/bno055.c ****                 }
16715:Core/Src/bno055.c ****                 else
16716:Core/Src/bno055.c ****                 {
16717:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16718:Core/Src/bno055.c ****                 }
16719:Core/Src/bno055.c ****             }
16720:Core/Src/bno055.c ****             else
16721:Core/Src/bno055.c ****             {
16722:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34962              		.loc 1 16722 26 view .LVU9806
 34963 002e 4FF0FF34 		mov	r4, #-1
 34964              	.LVL4296:
 34965              		.loc 1 16722 26 view .LVU9807
 34966 0032 2EE0     		b	.L2464
 34967              	.LVL4297:
 34968              	.L2471:
16690:Core/Src/bno055.c ****             }
 34969              		.loc 1 16690 17 is_stmt 1 view .LVU9808
16690:Core/Src/bno055.c ****             }
 34970              		.loc 1 16690 28 is_stmt 0 view .LVU9809
 34971 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 34972              	.LVL4298:
16690:Core/Src/bno055.c ****             }
 34973              		.loc 1 16690 25 view .LVU9810
 34974 0038 54FA80F4 		uxtab	r4, r4, r0
 34975 003c 64B2     		sxtb	r4, r4
 34976              	.LVL4299:
16690:Core/Src/bno055.c ****             }
 34977              		.loc 1 16690 25 view .LVU9811
 34978 003e F5E7     		b	.L2465
 34979              	.L2472:
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34980              		.loc 1 16695 17 is_stmt 1 view .LVU9812
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34981              		.loc 1 16695 30 is_stmt 0 view .LVU9813
 34982 0040 0120     		movs	r0, #1
ARM GAS  /tmp/cc9kYR4Z.s 			page 981


 34983 0042 FFF7FEFF 		bl	bno055_write_page_id
 34984              	.LVL4300:
16696:Core/Src/bno055.c ****                 {
 34985              		.loc 1 16696 17 is_stmt 1 view .LVU9814
16696:Core/Src/bno055.c ****                 {
 34986              		.loc 1 16696 20 is_stmt 0 view .LVU9815
 34987 0046 50BB     		cbnz	r0, .L2469
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 34988              		.loc 1 16698 21 is_stmt 1 view .LVU9816
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 34989              		.loc 1 16698 40 is_stmt 0 view .LVU9817
 34990 0048 1B4B     		ldr	r3, .L2474
 34991 004a 1868     		ldr	r0, [r3]
 34992              	.LVL4301:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 34993              		.loc 1 16698 40 view .LVU9818
 34994 004c 0469     		ldr	r4, [r0, #16]
 34995              	.LVL4302:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 34996              		.loc 1 16698 32 view .LVU9819
 34997 004e 0123     		movs	r3, #1
 34998 0050 0DF10702 		add	r2, sp, #7
 34999 0054 1621     		movs	r1, #22
 35000 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35001 0058 A047     		blx	r4
 35002              	.LVL4303:
16702:Core/Src/bno055.c ****                     {
 35003              		.loc 1 16702 21 is_stmt 1 view .LVU9820
16702:Core/Src/bno055.c ****                     {
 35004              		.loc 1 16702 24 is_stmt 0 view .LVU9821
 35005 005a 0446     		mov	r4, r0
 35006 005c C8B9     		cbnz	r0, .L2464
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35007              		.loc 1 16706 25 is_stmt 1 view .LVU9822
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35008              		.loc 1 16706 36 is_stmt 0 view .LVU9823
 35009 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35010 0062 23F07E03 		bic	r3, r3, #126
 35011 0066 5BB2     		sxtb	r3, r3
 35012 0068 6800     		lsls	r0, r5, #1
 35013              	.LVL4304:
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35014              		.loc 1 16706 36 view .LVU9824
 35015 006a 00F07E00 		and	r0, r0, #126
 35016 006e 0343     		orrs	r3, r3, r0
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35017              		.loc 1 16706 34 view .LVU9825
 35018 0070 8DF80730 		strb	r3, [sp, #7]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35019              		.loc 1 16709 25 is_stmt 1 view .LVU9826
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35020              		.loc 1 16709 45 is_stmt 0 view .LVU9827
 35021 0074 104B     		ldr	r3, .L2474
 35022 0076 1868     		ldr	r0, [r3]
 35023 0078 C568     		ldr	r5, [r0, #12]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35024              		.loc 1 16709 37 view .LVU9828
ARM GAS  /tmp/cc9kYR4Z.s 			page 982


 35025 007a 0123     		movs	r3, #1
 35026 007c 0DF10702 		add	r2, sp, #7
 35027 0080 1621     		movs	r1, #22
 35028 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35029 0084 A847     		blx	r5
 35030              	.LVL4305:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35031              		.loc 1 16709 34 view .LVU9829
 35032 0086 54FA80F0 		uxtab	r0, r4, r0
 35033 008a 44B2     		sxtb	r4, r0
 35034              	.LVL4306:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35035              		.loc 1 16709 34 view .LVU9830
 35036 008c 01E0     		b	.L2464
 35037              	.LVL4307:
 35038              	.L2467:
16723:Core/Src/bno055.c ****             }
16724:Core/Src/bno055.c ****         }
16725:Core/Src/bno055.c ****         else
16726:Core/Src/bno055.c ****         {
16727:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35039              		.loc 1 16727 22 view .LVU9831
 35040 008e 4FF0FF34 		mov	r4, #-1
 35041              	.LVL4308:
 35042              	.L2464:
16728:Core/Src/bno055.c ****         }
16729:Core/Src/bno055.c ****     }
16730:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35043              		.loc 1 16730 5 is_stmt 1 view .LVU9832
 35044              		.loc 1 16730 24 is_stmt 0 view .LVU9833
 35045 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35046              		.loc 1 16730 8 view .LVU9834
 35047 0096 28B9     		cbnz	r0, .L2473
 35048              	.LVL4309:
 35049              	.L2463:
16731:Core/Src/bno055.c ****     {
16732:Core/Src/bno055.c ****         /* set the operation mode of
16733:Core/Src/bno055.c ****          * previous operation mode*/
16734:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16735:Core/Src/bno055.c ****     }
16736:Core/Src/bno055.c **** 
16737:Core/Src/bno055.c ****     return com_rslt;
16738:Core/Src/bno055.c **** }
 35050              		.loc 1 16738 1 view .LVU9835
 35051 0098 2046     		mov	r0, r4
 35052 009a 03B0     		add	sp, sp, #12
 35053              	.LCFI963:
 35054              		.cfi_remember_state
 35055              		.cfi_def_cfa_offset 12
 35056              		@ sp needed
 35057 009c 30BD     		pop	{r4, r5, pc}
 35058              	.LVL4310:
 35059              	.L2469:
 35060              	.LCFI964:
 35061              		.cfi_restore_state
16717:Core/Src/bno055.c ****                 }
 35062              		.loc 1 16717 30 view .LVU9836
ARM GAS  /tmp/cc9kYR4Z.s 			page 983


 35063 009e 4FF0FF34 		mov	r4, #-1
 35064              	.LVL4311:
16717:Core/Src/bno055.c ****                 }
 35065              		.loc 1 16717 30 view .LVU9837
 35066 00a2 F6E7     		b	.L2464
 35067              	.LVL4312:
 35068              	.L2473:
16734:Core/Src/bno055.c ****     }
 35069              		.loc 1 16734 9 is_stmt 1 view .LVU9838
16734:Core/Src/bno055.c ****     }
 35070              		.loc 1 16734 21 is_stmt 0 view .LVU9839
 35071 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 35072              	.LVL4313:
16734:Core/Src/bno055.c ****     }
 35073              		.loc 1 16734 18 view .LVU9840
 35074 00a8 54FA80F0 		uxtab	r0, r4, r0
 35075 00ac 44B2     		sxtb	r4, r0
 35076              	.LVL4314:
16734:Core/Src/bno055.c ****     }
 35077              		.loc 1 16734 18 view .LVU9841
 35078 00ae F3E7     		b	.L2463
 35079              	.LVL4315:
 35080              	.L2466:
16678:Core/Src/bno055.c ****     }
 35081              		.loc 1 16678 16 view .LVU9842
 35082 00b0 6FF07E04 		mvn	r4, #126
 35083 00b4 F0E7     		b	.L2463
 35084              	.L2475:
 35085 00b6 00BF     		.align	2
 35086              	.L2474:
 35087 00b8 00000000 		.word	.LANCHOR0
 35088              		.cfi_endproc
 35089              	.LFE242:
 35091              		.section	.text.bno055_get_gyro_any_motion_axis_enable,"ax",%progbits
 35092              		.align	1
 35093              		.global	bno055_get_gyro_any_motion_axis_enable
 35094              		.syntax unified
 35095              		.thumb
 35096              		.thumb_func
 35098              	bno055_get_gyro_any_motion_axis_enable:
 35099              	.LVL4316:
 35100              	.LFB243:
16739:Core/Src/bno055.c **** 
16740:Core/Src/bno055.c **** /*!
16741:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion enable
16742:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16743:Core/Src/bno055.c ****  *
16744:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16745:Core/Src/bno055.c ****  *      data_u8     | result
16746:Core/Src/bno055.c ****  *  ----------------- |-------------
16747:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16748:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16749:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16750:Core/Src/bno055.c ****  *               channel_u8         | value
16751:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16752:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16753:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
ARM GAS  /tmp/cc9kYR4Z.s 			page 984


16754:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16755:Core/Src/bno055.c ****  *
16756:Core/Src/bno055.c ****  *
16757:Core/Src/bno055.c ****  *  @return results of bus communication function
16758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16760:Core/Src/bno055.c ****  *
16761:Core/Src/bno055.c ****  *
16762:Core/Src/bno055.c ****  */
16763:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_axis_enable(u8 channel_u8, u8 *data_u8)
16764:Core/Src/bno055.c **** {
 35101              		.loc 1 16764 1 is_stmt 1 view -0
 35102              		.cfi_startproc
 35103              		@ args = 0, pretend = 0, frame = 8
 35104              		@ frame_needed = 0, uses_anonymous_args = 0
 35105              		.loc 1 16764 1 is_stmt 0 view .LVU9844
 35106 0000 30B5     		push	{r4, r5, lr}
 35107              	.LCFI965:
 35108              		.cfi_def_cfa_offset 12
 35109              		.cfi_offset 4, -12
 35110              		.cfi_offset 5, -8
 35111              		.cfi_offset 14, -4
 35112 0002 83B0     		sub	sp, sp, #12
 35113              	.LCFI966:
 35114              		.cfi_def_cfa_offset 24
16765:Core/Src/bno055.c ****     /* Variable used to return value of
16766:Core/Src/bno055.c ****      * communication routine*/
16767:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35115              		.loc 1 16767 5 is_stmt 1 view .LVU9845
 35116              	.LVL4317:
16768:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35117              		.loc 1 16768 5 view .LVU9846
 35118              		.loc 1 16768 8 is_stmt 0 view .LVU9847
 35119 0004 0023     		movs	r3, #0
 35120 0006 8DF80730 		strb	r3, [sp, #7]
16769:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35121              		.loc 1 16769 5 is_stmt 1 view .LVU9848
 35122              	.LVL4318:
16770:Core/Src/bno055.c **** 
16771:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16772:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35123              		.loc 1 16772 5 view .LVU9849
 35124              		.loc 1 16772 18 is_stmt 0 view .LVU9850
 35125 000a 284B     		ldr	r3, .L2488
 35126 000c 1B68     		ldr	r3, [r3]
 35127              		.loc 1 16772 8 view .LVU9851
 35128 000e 002B     		cmp	r3, #0
 35129 0010 45D0     		beq	.L2482
 35130 0012 0446     		mov	r4, r0
 35131 0014 0D46     		mov	r5, r1
16773:Core/Src/bno055.c ****     {
16774:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16775:Core/Src/bno055.c ****     }
16776:Core/Src/bno055.c ****     else
16777:Core/Src/bno055.c ****     {
16778:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion axis is
16779:Core/Src/bno055.c ****          * available in the page one*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 985


16780:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35132              		.loc 1 16780 9 is_stmt 1 view .LVU9852
 35133              		.loc 1 16780 21 is_stmt 0 view .LVU9853
 35134 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35135              		.loc 1 16780 12 view .LVU9854
 35136 0018 012B     		cmp	r3, #1
 35137 001a 0DD1     		bne	.L2486
 35138              	.LVL4319:
 35139              	.L2478:
16781:Core/Src/bno055.c ****         {
16782:Core/Src/bno055.c ****             /* Write page as one */
16783:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16784:Core/Src/bno055.c ****         }
16785:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35140              		.loc 1 16785 53 discriminator 1 view .LVU9855
 35141 001c 234B     		ldr	r3, .L2488
 35142 001e 1B68     		ldr	r3, [r3]
 35143 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35144              		.loc 1 16785 41 discriminator 1 view .LVU9856
 35145 0022 012B     		cmp	r3, #1
 35146 0024 3ED1     		bne	.L2483
 35147              	.L2479:
16786:Core/Src/bno055.c ****         {
16787:Core/Src/bno055.c ****             switch (channel_u8)
 35148              		.loc 1 16787 13 is_stmt 1 view .LVU9857
 35149 0026 012C     		cmp	r4, #1
 35150 0028 1BD0     		beq	.L2480
 35151 002a 022C     		cmp	r4, #2
 35152 002c 28D0     		beq	.L2481
 35153 002e 4CB1     		cbz	r4, .L2487
 35154 0030 6FF00100 		mvn	r0, #1
 35155              	.LVL4320:
 35156              	.L2477:
16788:Core/Src/bno055.c ****             {
16789:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_X_AXIS:
16790:Core/Src/bno055.c **** 
16791:Core/Src/bno055.c ****                     /* Read the gyro anymotion x enable*/
16792:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16793:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
16794:Core/Src/bno055.c ****                                                               &data_u8r,
16795:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16796:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_AXIS);
16797:Core/Src/bno055.c ****                     break;
16798:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16799:Core/Src/bno055.c **** 
16800:Core/Src/bno055.c ****                     /* Read the gyro anymotion y enable*/
16801:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16802:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
16803:Core/Src/bno055.c ****                                                               &data_u8r,
16804:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16805:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_AXIS);
16806:Core/Src/bno055.c ****                     break;
16807:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16808:Core/Src/bno055.c **** 
16809:Core/Src/bno055.c ****                     /* Read the gyro anymotion z enable*/
16810:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16811:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 986


16812:Core/Src/bno055.c ****                                                               &data_u8r,
16813:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16814:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_AXIS);
16815:Core/Src/bno055.c ****                     break;
16816:Core/Src/bno055.c ****                 default:
16817:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
16818:Core/Src/bno055.c ****                     break;
16819:Core/Src/bno055.c ****             }
16820:Core/Src/bno055.c ****         }
16821:Core/Src/bno055.c ****         else
16822:Core/Src/bno055.c ****         {
16823:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16824:Core/Src/bno055.c ****         }
16825:Core/Src/bno055.c ****     }
16826:Core/Src/bno055.c **** 
16827:Core/Src/bno055.c ****     return com_rslt;
16828:Core/Src/bno055.c **** }
 35157              		.loc 1 16828 1 is_stmt 0 view .LVU9858
 35158 0034 03B0     		add	sp, sp, #12
 35159              	.LCFI967:
 35160              		.cfi_remember_state
 35161              		.cfi_def_cfa_offset 12
 35162              		@ sp needed
 35163 0036 30BD     		pop	{r4, r5, pc}
 35164              	.LVL4321:
 35165              	.L2486:
 35166              	.LCFI968:
 35167              		.cfi_restore_state
16783:Core/Src/bno055.c ****         }
 35168              		.loc 1 16783 13 is_stmt 1 view .LVU9859
16783:Core/Src/bno055.c ****         }
 35169              		.loc 1 16783 23 is_stmt 0 view .LVU9860
 35170 0038 0120     		movs	r0, #1
 35171              	.LVL4322:
16783:Core/Src/bno055.c ****         }
 35172              		.loc 1 16783 23 view .LVU9861
 35173 003a FFF7FEFF 		bl	bno055_write_page_id
 35174              	.LVL4323:
16785:Core/Src/bno055.c ****         {
 35175              		.loc 1 16785 9 is_stmt 1 view .LVU9862
16785:Core/Src/bno055.c ****         {
 35176              		.loc 1 16785 12 is_stmt 0 view .LVU9863
 35177 003e 0028     		cmp	r0, #0
 35178 0040 F1D0     		beq	.L2479
 35179 0042 EBE7     		b	.L2478
 35180              	.LVL4324:
 35181              	.L2487:
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35182              		.loc 1 16792 21 is_stmt 1 view .LVU9864
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35183              		.loc 1 16792 40 is_stmt 0 view .LVU9865
 35184 0044 194B     		ldr	r3, .L2488
 35185 0046 1868     		ldr	r0, [r3]
 35186 0048 0469     		ldr	r4, [r0, #16]
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35187              		.loc 1 16792 32 view .LVU9866
 35188 004a 0123     		movs	r3, #1
ARM GAS  /tmp/cc9kYR4Z.s 			page 987


 35189 004c 0DF10702 		add	r2, sp, #7
 35190 0050 1721     		movs	r1, #23
 35191 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35192 0054 A047     		blx	r4
 35193              	.LVL4325:
16796:Core/Src/bno055.c ****                     break;
 35194              		.loc 1 16796 21 is_stmt 1 view .LVU9867
16796:Core/Src/bno055.c ****                     break;
 35195              		.loc 1 16796 32 is_stmt 0 view .LVU9868
 35196 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35197 005a 03F00103 		and	r3, r3, #1
16796:Core/Src/bno055.c ****                     break;
 35198              		.loc 1 16796 30 view .LVU9869
 35199 005e 2B70     		strb	r3, [r5]
16797:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
 35200              		.loc 1 16797 21 is_stmt 1 view .LVU9870
 35201 0060 E8E7     		b	.L2477
 35202              	.LVL4326:
 35203              	.L2480:
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35204              		.loc 1 16801 21 view .LVU9871
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35205              		.loc 1 16801 40 is_stmt 0 view .LVU9872
 35206 0062 124B     		ldr	r3, .L2488
 35207 0064 1868     		ldr	r0, [r3]
 35208 0066 0469     		ldr	r4, [r0, #16]
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35209              		.loc 1 16801 32 view .LVU9873
 35210 0068 0123     		movs	r3, #1
 35211 006a 0DF10702 		add	r2, sp, #7
 35212 006e 1721     		movs	r1, #23
 35213 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35214 0072 A047     		blx	r4
 35215              	.LVL4327:
16805:Core/Src/bno055.c ****                     break;
 35216              		.loc 1 16805 21 is_stmt 1 view .LVU9874
16805:Core/Src/bno055.c ****                     break;
 35217              		.loc 1 16805 32 is_stmt 0 view .LVU9875
 35218 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35219 0078 C3F34003 		ubfx	r3, r3, #1, #1
16805:Core/Src/bno055.c ****                     break;
 35220              		.loc 1 16805 30 view .LVU9876
 35221 007c 2B70     		strb	r3, [r5]
16806:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
 35222              		.loc 1 16806 21 is_stmt 1 view .LVU9877
 35223 007e D9E7     		b	.L2477
 35224              	.LVL4328:
 35225              	.L2481:
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35226              		.loc 1 16810 21 view .LVU9878
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35227              		.loc 1 16810 40 is_stmt 0 view .LVU9879
 35228 0080 0A4B     		ldr	r3, .L2488
 35229 0082 1868     		ldr	r0, [r3]
 35230 0084 0469     		ldr	r4, [r0, #16]
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35231              		.loc 1 16810 32 view .LVU9880
ARM GAS  /tmp/cc9kYR4Z.s 			page 988


 35232 0086 0123     		movs	r3, #1
 35233 0088 0DF10702 		add	r2, sp, #7
 35234 008c 1721     		movs	r1, #23
 35235 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35236 0090 A047     		blx	r4
 35237              	.LVL4329:
16814:Core/Src/bno055.c ****                     break;
 35238              		.loc 1 16814 21 is_stmt 1 view .LVU9881
16814:Core/Src/bno055.c ****                     break;
 35239              		.loc 1 16814 32 is_stmt 0 view .LVU9882
 35240 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35241 0096 C3F38003 		ubfx	r3, r3, #2, #1
16814:Core/Src/bno055.c ****                     break;
 35242              		.loc 1 16814 30 view .LVU9883
 35243 009a 2B70     		strb	r3, [r5]
16815:Core/Src/bno055.c ****                 default:
 35244              		.loc 1 16815 21 is_stmt 1 view .LVU9884
 35245 009c CAE7     		b	.L2477
 35246              	.LVL4330:
 35247              	.L2482:
16774:Core/Src/bno055.c ****     }
 35248              		.loc 1 16774 16 is_stmt 0 view .LVU9885
 35249 009e 6FF07E00 		mvn	r0, #126
 35250              	.LVL4331:
16774:Core/Src/bno055.c ****     }
 35251              		.loc 1 16774 16 view .LVU9886
 35252 00a2 C7E7     		b	.L2477
 35253              	.LVL4332:
 35254              	.L2483:
16823:Core/Src/bno055.c ****         }
 35255              		.loc 1 16823 22 view .LVU9887
 35256 00a4 4FF0FF30 		mov	r0, #-1
 35257 00a8 C4E7     		b	.L2477
 35258              	.L2489:
 35259 00aa 00BF     		.align	2
 35260              	.L2488:
 35261 00ac 00000000 		.word	.LANCHOR0
 35262              		.cfi_endproc
 35263              	.LFE243:
 35265              		.section	.text.bno055_set_gyro_any_motion_axis_enable,"ax",%progbits
 35266              		.align	1
 35267              		.global	bno055_set_gyro_any_motion_axis_enable
 35268              		.syntax unified
 35269              		.thumb
 35270              		.thumb_func
 35272              	bno055_set_gyro_any_motion_axis_enable:
 35273              	.LVL4333:
 35274              	.LFB244:
16829:Core/Src/bno055.c **** 
16830:Core/Src/bno055.c **** /*!
16831:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion enable
16832:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16833:Core/Src/bno055.c ****  *
16834:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16835:Core/Src/bno055.c ****  *      data_u8     | result
16836:Core/Src/bno055.c ****  *  ----------------- |-------------
16837:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
ARM GAS  /tmp/cc9kYR4Z.s 			page 989


16838:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16839:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16840:Core/Src/bno055.c ****  *               channel_u8         | value
16841:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16842:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16843:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16844:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16845:Core/Src/bno055.c ****  *
16846:Core/Src/bno055.c ****  *  @return results of bus communication function
16847:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16848:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16849:Core/Src/bno055.c ****  *
16850:Core/Src/bno055.c ****  *
16851:Core/Src/bno055.c ****  */
16852:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_axis_enable(u8 channel_u8, u8 data_u8)
16853:Core/Src/bno055.c **** {
 35275              		.loc 1 16853 1 is_stmt 1 view -0
 35276              		.cfi_startproc
 35277              		@ args = 0, pretend = 0, frame = 8
 35278              		@ frame_needed = 0, uses_anonymous_args = 0
 35279              		.loc 1 16853 1 is_stmt 0 view .LVU9889
 35280 0000 70B5     		push	{r4, r5, r6, lr}
 35281              	.LCFI969:
 35282              		.cfi_def_cfa_offset 16
 35283              		.cfi_offset 4, -16
 35284              		.cfi_offset 5, -12
 35285              		.cfi_offset 6, -8
 35286              		.cfi_offset 14, -4
 35287 0002 82B0     		sub	sp, sp, #8
 35288              	.LCFI970:
 35289              		.cfi_def_cfa_offset 24
16854:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35290              		.loc 1 16854 5 is_stmt 1 view .LVU9890
 35291              	.LVL4334:
16855:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35292              		.loc 1 16855 5 view .LVU9891
 35293              		.loc 1 16855 8 is_stmt 0 view .LVU9892
 35294 0004 0023     		movs	r3, #0
 35295 0006 8DF80730 		strb	r3, [sp, #7]
16856:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35296              		.loc 1 16856 5 is_stmt 1 view .LVU9893
 35297              	.LVL4335:
16857:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35298              		.loc 1 16857 5 view .LVU9894
 35299              		.loc 1 16857 8 is_stmt 0 view .LVU9895
 35300 000a 8DF80630 		strb	r3, [sp, #6]
16858:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35301              		.loc 1 16858 5 is_stmt 1 view .LVU9896
 35302              	.LVL4336:
16859:Core/Src/bno055.c **** 
16860:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16861:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35303              		.loc 1 16861 5 view .LVU9897
 35304              		.loc 1 16861 18 is_stmt 0 view .LVU9898
 35305 000e 534B     		ldr	r3, .L2506
 35306 0010 1B68     		ldr	r3, [r3]
 35307              		.loc 1 16861 8 view .LVU9899
ARM GAS  /tmp/cc9kYR4Z.s 			page 990


 35308 0012 002B     		cmp	r3, #0
 35309 0014 00F09F80 		beq	.L2496
 35310 0018 0446     		mov	r4, r0
 35311 001a 0D46     		mov	r5, r1
16862:Core/Src/bno055.c ****     {
16863:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16864:Core/Src/bno055.c ****     }
16865:Core/Src/bno055.c ****     else
16866:Core/Src/bno055.c ****     {
16867:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16868:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16869:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16870:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35312              		.loc 1 16870 9 is_stmt 1 view .LVU9900
 35313              		.loc 1 16870 19 is_stmt 0 view .LVU9901
 35314 001c 0DF10600 		add	r0, sp, #6
 35315              	.LVL4337:
 35316              		.loc 1 16870 19 view .LVU9902
 35317 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 35318              	.LVL4338:
16871:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35319              		.loc 1 16871 9 is_stmt 1 view .LVU9903
 35320              		.loc 1 16871 12 is_stmt 0 view .LVU9904
 35321 0024 0646     		mov	r6, r0
 35322 0026 0028     		cmp	r0, #0
 35323 0028 40F08480 		bne	.L2497
16872:Core/Src/bno055.c ****         {
16873:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35324              		.loc 1 16873 13 is_stmt 1 view .LVU9905
 35325              		.loc 1 16873 32 is_stmt 0 view .LVU9906
 35326 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35327              		.loc 1 16873 16 view .LVU9907
 35328 0030 1BB9     		cbnz	r3, .L2502
 35329              	.LVL4339:
 35330              	.L2493:
16874:Core/Src/bno055.c ****             {
16875:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16876:Core/Src/bno055.c ****             }
16877:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35331              		.loc 1 16877 13 is_stmt 1 view .LVU9908
 35332              		.loc 1 16877 16 is_stmt 0 view .LVU9909
 35333 0032 46B1     		cbz	r6, .L2503
16878:Core/Src/bno055.c ****             {
16879:Core/Src/bno055.c ****                 /* Write page as one */
16880:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16881:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16882:Core/Src/bno055.c ****                 {
16883:Core/Src/bno055.c ****                     switch (channel_u8)
16884:Core/Src/bno055.c ****                     {
16885:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_X_AXIS:
16886:Core/Src/bno055.c **** 
16887:Core/Src/bno055.c ****                             /* Write the gyro
16888:Core/Src/bno055.c ****                              * anymotion x enable*/
16889:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16890:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
16891:Core/Src/bno055.c ****                                                                       &data_u8r,
16892:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
ARM GAS  /tmp/cc9kYR4Z.s 			page 991


16893:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16894:Core/Src/bno055.c ****                             {
16895:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_A
16896:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16897:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16898:Core/Src/bno055.c ****                                                                             &data_u8r,
16899:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16900:Core/Src/bno055.c ****                             }
16901:Core/Src/bno055.c ****                             break;
16902:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16903:Core/Src/bno055.c **** 
16904:Core/Src/bno055.c ****                             /* Write the gyro
16905:Core/Src/bno055.c ****                              * anymotion y enable*/
16906:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16907:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
16908:Core/Src/bno055.c ****                                                                       &data_u8r,
16909:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16910:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16911:Core/Src/bno055.c ****                             {
16912:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_A
16913:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16914:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16915:Core/Src/bno055.c ****                                                                             &data_u8r,
16916:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16917:Core/Src/bno055.c ****                             }
16918:Core/Src/bno055.c ****                             break;
16919:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16920:Core/Src/bno055.c **** 
16921:Core/Src/bno055.c ****                             /* Write the gyro
16922:Core/Src/bno055.c ****                              * anymotion z enable*/
16923:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16924:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
16925:Core/Src/bno055.c ****                                                                       &data_u8r,
16926:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16927:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16928:Core/Src/bno055.c ****                             {
16929:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_A
16930:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16931:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16932:Core/Src/bno055.c ****                                                                             &data_u8r,
16933:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16934:Core/Src/bno055.c ****                             }
16935:Core/Src/bno055.c ****                             break;
16936:Core/Src/bno055.c ****                         default:
16937:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
16938:Core/Src/bno055.c ****                             break;
16939:Core/Src/bno055.c ****                     }
16940:Core/Src/bno055.c ****                 }
16941:Core/Src/bno055.c ****                 else
16942:Core/Src/bno055.c ****                 {
16943:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16944:Core/Src/bno055.c ****                 }
16945:Core/Src/bno055.c ****             }
16946:Core/Src/bno055.c ****             else
16947:Core/Src/bno055.c ****             {
16948:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35334              		.loc 1 16948 26 view .LVU9910
ARM GAS  /tmp/cc9kYR4Z.s 			page 992


 35335 0034 4FF0FF34 		mov	r4, #-1
 35336 0038 7EE0     		b	.L2492
 35337              	.LVL4340:
 35338              	.L2502:
16875:Core/Src/bno055.c ****             }
 35339              		.loc 1 16875 17 is_stmt 1 view .LVU9911
16875:Core/Src/bno055.c ****             }
 35340              		.loc 1 16875 28 is_stmt 0 view .LVU9912
 35341 003a FFF7FEFF 		bl	bno055_set_operation_mode
 35342              	.LVL4341:
16875:Core/Src/bno055.c ****             }
 35343              		.loc 1 16875 25 view .LVU9913
 35344 003e 56FA80F6 		uxtab	r6, r6, r0
 35345 0042 76B2     		sxtb	r6, r6
 35346              	.LVL4342:
16875:Core/Src/bno055.c ****             }
 35347              		.loc 1 16875 25 view .LVU9914
 35348 0044 F5E7     		b	.L2493
 35349              	.L2503:
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35350              		.loc 1 16880 17 is_stmt 1 view .LVU9915
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35351              		.loc 1 16880 30 is_stmt 0 view .LVU9916
 35352 0046 0120     		movs	r0, #1
 35353 0048 FFF7FEFF 		bl	bno055_write_page_id
 35354              	.LVL4343:
16881:Core/Src/bno055.c ****                 {
 35355              		.loc 1 16881 17 is_stmt 1 view .LVU9917
16881:Core/Src/bno055.c ****                 {
 35356              		.loc 1 16881 20 is_stmt 0 view .LVU9918
 35357 004c 0028     		cmp	r0, #0
 35358 004e 79D1     		bne	.L2499
16883:Core/Src/bno055.c ****                     {
 35359              		.loc 1 16883 21 is_stmt 1 view .LVU9919
 35360 0050 012C     		cmp	r4, #1
 35361 0052 28D0     		beq	.L2494
 35362 0054 022C     		cmp	r4, #2
 35363 0056 4AD0     		beq	.L2495
 35364 0058 14B1     		cbz	r4, .L2504
 35365 005a 6FF00104 		mvn	r4, #1
 35366 005e 6BE0     		b	.L2492
 35367              	.L2504:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35368              		.loc 1 16889 29 view .LVU9920
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35369              		.loc 1 16889 48 is_stmt 0 view .LVU9921
 35370 0060 3E4B     		ldr	r3, .L2506
 35371 0062 1868     		ldr	r0, [r3]
 35372              	.LVL4344:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35373              		.loc 1 16889 48 view .LVU9922
 35374 0064 0469     		ldr	r4, [r0, #16]
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35375              		.loc 1 16889 40 view .LVU9923
 35376 0066 0123     		movs	r3, #1
 35377 0068 0DF10702 		add	r2, sp, #7
 35378 006c 1721     		movs	r1, #23
ARM GAS  /tmp/cc9kYR4Z.s 			page 993


 35379 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35380 0070 A047     		blx	r4
 35381              	.LVL4345:
16893:Core/Src/bno055.c ****                             {
 35382              		.loc 1 16893 29 is_stmt 1 view .LVU9924
16893:Core/Src/bno055.c ****                             {
 35383              		.loc 1 16893 32 is_stmt 0 view .LVU9925
 35384 0072 0446     		mov	r4, r0
 35385 0074 0028     		cmp	r0, #0
 35386 0076 5FD1     		bne	.L2492
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35387              		.loc 1 16895 33 is_stmt 1 view .LVU9926
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35388              		.loc 1 16895 44 is_stmt 0 view .LVU9927
 35389 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35390 007c 23F00103 		bic	r3, r3, #1
 35391 0080 5BB2     		sxtb	r3, r3
 35392 0082 05F00105 		and	r5, r5, #1
 35393 0086 2B43     		orrs	r3, r3, r5
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35394              		.loc 1 16895 42 view .LVU9928
 35395 0088 8DF80730 		strb	r3, [sp, #7]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35396              		.loc 1 16896 33 is_stmt 1 view .LVU9929
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35397              		.loc 1 16896 53 is_stmt 0 view .LVU9930
 35398 008c 334B     		ldr	r3, .L2506
 35399 008e 1868     		ldr	r0, [r3]
 35400              	.LVL4346:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35401              		.loc 1 16896 53 view .LVU9931
 35402 0090 C568     		ldr	r5, [r0, #12]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35403              		.loc 1 16896 45 view .LVU9932
 35404 0092 0123     		movs	r3, #1
 35405 0094 0DF10702 		add	r2, sp, #7
 35406 0098 1721     		movs	r1, #23
 35407 009a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35408 009c A847     		blx	r5
 35409              	.LVL4347:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35410              		.loc 1 16896 42 view .LVU9933
 35411 009e 54FA80F3 		uxtab	r3, r4, r0
 35412 00a2 5CB2     		sxtb	r4, r3
 35413              	.LVL4348:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35414              		.loc 1 16896 42 view .LVU9934
 35415 00a4 48E0     		b	.L2492
 35416              	.LVL4349:
 35417              	.L2494:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35418              		.loc 1 16906 29 is_stmt 1 view .LVU9935
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35419              		.loc 1 16906 48 is_stmt 0 view .LVU9936
 35420 00a6 2D4B     		ldr	r3, .L2506
 35421 00a8 1868     		ldr	r0, [r3]
 35422              	.LVL4350:
ARM GAS  /tmp/cc9kYR4Z.s 			page 994


16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35423              		.loc 1 16906 48 view .LVU9937
 35424 00aa 0469     		ldr	r4, [r0, #16]
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35425              		.loc 1 16906 40 view .LVU9938
 35426 00ac 0123     		movs	r3, #1
 35427 00ae 0DF10702 		add	r2, sp, #7
 35428 00b2 1721     		movs	r1, #23
 35429 00b4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35430 00b6 A047     		blx	r4
 35431              	.LVL4351:
16910:Core/Src/bno055.c ****                             {
 35432              		.loc 1 16910 29 is_stmt 1 view .LVU9939
16910:Core/Src/bno055.c ****                             {
 35433              		.loc 1 16910 32 is_stmt 0 view .LVU9940
 35434 00b8 0446     		mov	r4, r0
 35435 00ba 0028     		cmp	r0, #0
 35436 00bc 3CD1     		bne	.L2492
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35437              		.loc 1 16912 33 is_stmt 1 view .LVU9941
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35438              		.loc 1 16912 44 is_stmt 0 view .LVU9942
 35439 00be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35440 00c2 23F00203 		bic	r3, r3, #2
 35441 00c6 5BB2     		sxtb	r3, r3
 35442 00c8 6A00     		lsls	r2, r5, #1
 35443 00ca 02F00202 		and	r2, r2, #2
 35444 00ce 1343     		orrs	r3, r3, r2
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35445              		.loc 1 16912 42 view .LVU9943
 35446 00d0 8DF80730 		strb	r3, [sp, #7]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35447              		.loc 1 16913 33 is_stmt 1 view .LVU9944
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35448              		.loc 1 16913 53 is_stmt 0 view .LVU9945
 35449 00d4 214B     		ldr	r3, .L2506
 35450 00d6 1868     		ldr	r0, [r3]
 35451              	.LVL4352:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35452              		.loc 1 16913 53 view .LVU9946
 35453 00d8 C568     		ldr	r5, [r0, #12]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35454              		.loc 1 16913 45 view .LVU9947
 35455 00da 0123     		movs	r3, #1
 35456 00dc 0DF10702 		add	r2, sp, #7
 35457 00e0 1721     		movs	r1, #23
 35458 00e2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35459 00e4 A847     		blx	r5
 35460              	.LVL4353:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35461              		.loc 1 16913 42 view .LVU9948
 35462 00e6 54FA80F3 		uxtab	r3, r4, r0
 35463 00ea 5CB2     		sxtb	r4, r3
 35464              	.LVL4354:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35465              		.loc 1 16913 42 view .LVU9949
 35466 00ec 24E0     		b	.L2492
ARM GAS  /tmp/cc9kYR4Z.s 			page 995


 35467              	.LVL4355:
 35468              	.L2495:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35469              		.loc 1 16923 29 is_stmt 1 view .LVU9950
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35470              		.loc 1 16923 48 is_stmt 0 view .LVU9951
 35471 00ee 1B4B     		ldr	r3, .L2506
 35472 00f0 1868     		ldr	r0, [r3]
 35473              	.LVL4356:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35474              		.loc 1 16923 48 view .LVU9952
 35475 00f2 0469     		ldr	r4, [r0, #16]
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35476              		.loc 1 16923 40 view .LVU9953
 35477 00f4 0123     		movs	r3, #1
 35478 00f6 0DF10702 		add	r2, sp, #7
 35479 00fa 1721     		movs	r1, #23
 35480 00fc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35481 00fe A047     		blx	r4
 35482              	.LVL4357:
16927:Core/Src/bno055.c ****                             {
 35483              		.loc 1 16927 29 is_stmt 1 view .LVU9954
16927:Core/Src/bno055.c ****                             {
 35484              		.loc 1 16927 32 is_stmt 0 view .LVU9955
 35485 0100 0446     		mov	r4, r0
 35486 0102 C8B9     		cbnz	r0, .L2492
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35487              		.loc 1 16929 33 is_stmt 1 view .LVU9956
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35488              		.loc 1 16929 44 is_stmt 0 view .LVU9957
 35489 0104 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35490 0108 23F00403 		bic	r3, r3, #4
 35491 010c 5AB2     		sxtb	r2, r3
 35492 010e AB00     		lsls	r3, r5, #2
 35493 0110 03F00403 		and	r3, r3, #4
 35494 0114 1343     		orrs	r3, r3, r2
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35495              		.loc 1 16929 42 view .LVU9958
 35496 0116 8DF80730 		strb	r3, [sp, #7]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35497              		.loc 1 16930 33 is_stmt 1 view .LVU9959
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35498              		.loc 1 16930 53 is_stmt 0 view .LVU9960
 35499 011a 104B     		ldr	r3, .L2506
 35500 011c 1868     		ldr	r0, [r3]
 35501              	.LVL4358:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35502              		.loc 1 16930 53 view .LVU9961
 35503 011e C568     		ldr	r5, [r0, #12]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35504              		.loc 1 16930 45 view .LVU9962
 35505 0120 0123     		movs	r3, #1
 35506 0122 0DF10702 		add	r2, sp, #7
 35507 0126 1721     		movs	r1, #23
 35508 0128 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35509 012a A847     		blx	r5
 35510              	.LVL4359:
ARM GAS  /tmp/cc9kYR4Z.s 			page 996


16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35511              		.loc 1 16930 42 view .LVU9963
 35512 012c 54FA80F3 		uxtab	r3, r4, r0
 35513 0130 5CB2     		sxtb	r4, r3
 35514              	.LVL4360:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35515              		.loc 1 16930 42 view .LVU9964
 35516 0132 01E0     		b	.L2492
 35517              	.LVL4361:
 35518              	.L2497:
16949:Core/Src/bno055.c ****             }
16950:Core/Src/bno055.c ****         }
16951:Core/Src/bno055.c ****         else
16952:Core/Src/bno055.c ****         {
16953:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35519              		.loc 1 16953 22 view .LVU9965
 35520 0134 4FF0FF34 		mov	r4, #-1
 35521              	.LVL4362:
 35522              	.L2492:
16954:Core/Src/bno055.c ****         }
16955:Core/Src/bno055.c ****     }
16956:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35523              		.loc 1 16956 5 is_stmt 1 view .LVU9966
 35524              		.loc 1 16956 24 is_stmt 0 view .LVU9967
 35525 0138 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35526              		.loc 1 16956 8 view .LVU9968
 35527 013c 28B9     		cbnz	r0, .L2505
 35528              	.LVL4363:
 35529              	.L2491:
16957:Core/Src/bno055.c ****     {
16958:Core/Src/bno055.c ****         /* set the operation mode of
16959:Core/Src/bno055.c ****          * previous operation mode*/
16960:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16961:Core/Src/bno055.c ****     }
16962:Core/Src/bno055.c **** 
16963:Core/Src/bno055.c ****     return com_rslt;
16964:Core/Src/bno055.c **** }
 35530              		.loc 1 16964 1 view .LVU9969
 35531 013e 2046     		mov	r0, r4
 35532 0140 02B0     		add	sp, sp, #8
 35533              	.LCFI971:
 35534              		.cfi_remember_state
 35535              		.cfi_def_cfa_offset 16
 35536              		@ sp needed
 35537 0142 70BD     		pop	{r4, r5, r6, pc}
 35538              	.LVL4364:
 35539              	.L2499:
 35540              	.LCFI972:
 35541              		.cfi_restore_state
16943:Core/Src/bno055.c ****                 }
 35542              		.loc 1 16943 30 view .LVU9970
 35543 0144 4FF0FF34 		mov	r4, #-1
 35544 0148 F6E7     		b	.L2492
 35545              	.LVL4365:
 35546              	.L2505:
16960:Core/Src/bno055.c ****     }
 35547              		.loc 1 16960 9 is_stmt 1 view .LVU9971
ARM GAS  /tmp/cc9kYR4Z.s 			page 997


16960:Core/Src/bno055.c ****     }
 35548              		.loc 1 16960 21 is_stmt 0 view .LVU9972
 35549 014a FFF7FEFF 		bl	bno055_set_operation_mode
 35550              	.LVL4366:
16960:Core/Src/bno055.c ****     }
 35551              		.loc 1 16960 18 view .LVU9973
 35552 014e 54FA80F0 		uxtab	r0, r4, r0
 35553 0152 44B2     		sxtb	r4, r0
 35554              	.LVL4367:
16960:Core/Src/bno055.c ****     }
 35555              		.loc 1 16960 18 view .LVU9974
 35556 0154 F3E7     		b	.L2491
 35557              	.LVL4368:
 35558              	.L2496:
16863:Core/Src/bno055.c ****     }
 35559              		.loc 1 16863 16 view .LVU9975
 35560 0156 6FF07E04 		mvn	r4, #126
 35561 015a F0E7     		b	.L2491
 35562              	.L2507:
 35563              		.align	2
 35564              	.L2506:
 35565 015c 00000000 		.word	.LANCHOR0
 35566              		.cfi_endproc
 35567              	.LFE244:
 35569              		.section	.text.bno055_get_gyro_highrate_axis_enable,"ax",%progbits
 35570              		.align	1
 35571              		.global	bno055_get_gyro_highrate_axis_enable
 35572              		.syntax unified
 35573              		.thumb
 35574              		.thumb_func
 35576              	bno055_get_gyro_highrate_axis_enable:
 35577              	.LVL4369:
 35578              	.LFB245:
16965:Core/Src/bno055.c **** 
16966:Core/Src/bno055.c **** /*!
16967:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate enable
16968:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
16969:Core/Src/bno055.c ****  *
16970:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
16971:Core/Src/bno055.c ****  *      data_u8     | result
16972:Core/Src/bno055.c ****  *  ----------------  |-------------
16973:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16974:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16975:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
16976:Core/Src/bno055.c ****  *               channel_u8         | value
16977:Core/Src/bno055.c ****  *     ------------------------       | ----------
16978:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
16979:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
16980:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
16981:Core/Src/bno055.c ****  *
16982:Core/Src/bno055.c ****  *
16983:Core/Src/bno055.c ****  *  @return results of bus communication function
16984:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16985:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16986:Core/Src/bno055.c ****  *
16987:Core/Src/bno055.c ****  *
16988:Core/Src/bno055.c ****  */
ARM GAS  /tmp/cc9kYR4Z.s 			page 998


16989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_axis_enable(u8 channel_u8, u8 *data_u8)
16990:Core/Src/bno055.c **** {
 35579              		.loc 1 16990 1 is_stmt 1 view -0
 35580              		.cfi_startproc
 35581              		@ args = 0, pretend = 0, frame = 8
 35582              		@ frame_needed = 0, uses_anonymous_args = 0
 35583              		.loc 1 16990 1 is_stmt 0 view .LVU9977
 35584 0000 30B5     		push	{r4, r5, lr}
 35585              	.LCFI973:
 35586              		.cfi_def_cfa_offset 12
 35587              		.cfi_offset 4, -12
 35588              		.cfi_offset 5, -8
 35589              		.cfi_offset 14, -4
 35590 0002 83B0     		sub	sp, sp, #12
 35591              	.LCFI974:
 35592              		.cfi_def_cfa_offset 24
16991:Core/Src/bno055.c ****     /* Variable used to return value of
16992:Core/Src/bno055.c ****      * communication routine*/
16993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35593              		.loc 1 16993 5 is_stmt 1 view .LVU9978
 35594              	.LVL4370:
16994:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35595              		.loc 1 16994 5 view .LVU9979
 35596              		.loc 1 16994 8 is_stmt 0 view .LVU9980
 35597 0004 0023     		movs	r3, #0
 35598 0006 8DF80730 		strb	r3, [sp, #7]
16995:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35599              		.loc 1 16995 5 is_stmt 1 view .LVU9981
 35600              	.LVL4371:
16996:Core/Src/bno055.c **** 
16997:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16998:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35601              		.loc 1 16998 5 view .LVU9982
 35602              		.loc 1 16998 18 is_stmt 0 view .LVU9983
 35603 000a 284B     		ldr	r3, .L2520
 35604 000c 1B68     		ldr	r3, [r3]
 35605              		.loc 1 16998 8 view .LVU9984
 35606 000e 002B     		cmp	r3, #0
 35607 0010 45D0     		beq	.L2514
 35608 0012 0446     		mov	r4, r0
 35609 0014 0D46     		mov	r5, r1
16999:Core/Src/bno055.c ****     {
17000:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17001:Core/Src/bno055.c ****     }
17002:Core/Src/bno055.c ****     else
17003:Core/Src/bno055.c ****     {
17004:Core/Src/bno055.c ****         /*condition check for page, gyro highrate enable is
17005:Core/Src/bno055.c ****          * available in the page one*/
17006:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35610              		.loc 1 17006 9 is_stmt 1 view .LVU9985
 35611              		.loc 1 17006 21 is_stmt 0 view .LVU9986
 35612 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35613              		.loc 1 17006 12 view .LVU9987
 35614 0018 012B     		cmp	r3, #1
 35615 001a 0DD1     		bne	.L2518
 35616              	.LVL4372:
 35617              	.L2510:
ARM GAS  /tmp/cc9kYR4Z.s 			page 999


17007:Core/Src/bno055.c ****         {
17008:Core/Src/bno055.c ****             /* Write page as one */
17009:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17010:Core/Src/bno055.c ****         }
17011:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35618              		.loc 1 17011 53 discriminator 1 view .LVU9988
 35619 001c 234B     		ldr	r3, .L2520
 35620 001e 1B68     		ldr	r3, [r3]
 35621 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35622              		.loc 1 17011 41 discriminator 1 view .LVU9989
 35623 0022 012B     		cmp	r3, #1
 35624 0024 3ED1     		bne	.L2515
 35625              	.L2511:
17012:Core/Src/bno055.c ****         {
17013:Core/Src/bno055.c ****             switch (channel_u8)
 35626              		.loc 1 17013 13 is_stmt 1 view .LVU9990
 35627 0026 012C     		cmp	r4, #1
 35628 0028 1BD0     		beq	.L2512
 35629 002a 022C     		cmp	r4, #2
 35630 002c 28D0     		beq	.L2513
 35631 002e 4CB1     		cbz	r4, .L2519
 35632 0030 6FF00100 		mvn	r0, #1
 35633              	.LVL4373:
 35634              	.L2509:
17014:Core/Src/bno055.c ****             {
17015:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_X_AXIS:
17016:Core/Src/bno055.c **** 
17017:Core/Src/bno055.c ****                     /* Read the gyro highrate x enable */
17018:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17019:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
17020:Core/Src/bno055.c ****                                                               &data_u8r,
17021:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17022:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXIS);
17023:Core/Src/bno055.c ****                     break;
17024:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
17025:Core/Src/bno055.c **** 
17026:Core/Src/bno055.c ****                     /* Read the gyro highrate y enable */
17027:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17028:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
17029:Core/Src/bno055.c ****                                                               &data_u8r,
17030:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17031:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXIS);
17032:Core/Src/bno055.c ****                     break;
17033:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
17034:Core/Src/bno055.c **** 
17035:Core/Src/bno055.c ****                     /* Read the gyro highrate z enable */
17036:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17037:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
17038:Core/Src/bno055.c ****                                                               &data_u8r,
17039:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17040:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXIS);
17041:Core/Src/bno055.c ****                     break;
17042:Core/Src/bno055.c ****                 default:
17043:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
17044:Core/Src/bno055.c ****                     break;
17045:Core/Src/bno055.c ****             }
17046:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1000


17047:Core/Src/bno055.c ****         else
17048:Core/Src/bno055.c ****         {
17049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17050:Core/Src/bno055.c ****         }
17051:Core/Src/bno055.c ****     }
17052:Core/Src/bno055.c **** 
17053:Core/Src/bno055.c ****     return com_rslt;
17054:Core/Src/bno055.c **** }
 35635              		.loc 1 17054 1 is_stmt 0 view .LVU9991
 35636 0034 03B0     		add	sp, sp, #12
 35637              	.LCFI975:
 35638              		.cfi_remember_state
 35639              		.cfi_def_cfa_offset 12
 35640              		@ sp needed
 35641 0036 30BD     		pop	{r4, r5, pc}
 35642              	.LVL4374:
 35643              	.L2518:
 35644              	.LCFI976:
 35645              		.cfi_restore_state
17009:Core/Src/bno055.c ****         }
 35646              		.loc 1 17009 13 is_stmt 1 view .LVU9992
17009:Core/Src/bno055.c ****         }
 35647              		.loc 1 17009 23 is_stmt 0 view .LVU9993
 35648 0038 0120     		movs	r0, #1
 35649              	.LVL4375:
17009:Core/Src/bno055.c ****         }
 35650              		.loc 1 17009 23 view .LVU9994
 35651 003a FFF7FEFF 		bl	bno055_write_page_id
 35652              	.LVL4376:
17011:Core/Src/bno055.c ****         {
 35653              		.loc 1 17011 9 is_stmt 1 view .LVU9995
17011:Core/Src/bno055.c ****         {
 35654              		.loc 1 17011 12 is_stmt 0 view .LVU9996
 35655 003e 0028     		cmp	r0, #0
 35656 0040 F1D0     		beq	.L2511
 35657 0042 EBE7     		b	.L2510
 35658              	.LVL4377:
 35659              	.L2519:
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 35660              		.loc 1 17018 21 is_stmt 1 view .LVU9997
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 35661              		.loc 1 17018 40 is_stmt 0 view .LVU9998
 35662 0044 194B     		ldr	r3, .L2520
 35663 0046 1868     		ldr	r0, [r3]
 35664 0048 0469     		ldr	r4, [r0, #16]
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 35665              		.loc 1 17018 32 view .LVU9999
 35666 004a 0123     		movs	r3, #1
 35667 004c 0DF10702 		add	r2, sp, #7
 35668 0050 1721     		movs	r1, #23
 35669 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35670 0054 A047     		blx	r4
 35671              	.LVL4378:
17022:Core/Src/bno055.c ****                     break;
 35672              		.loc 1 17022 21 is_stmt 1 view .LVU10000
17022:Core/Src/bno055.c ****                     break;
 35673              		.loc 1 17022 32 is_stmt 0 view .LVU10001
ARM GAS  /tmp/cc9kYR4Z.s 			page 1001


 35674 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35675 005a C3F3C003 		ubfx	r3, r3, #3, #1
17022:Core/Src/bno055.c ****                     break;
 35676              		.loc 1 17022 30 view .LVU10002
 35677 005e 2B70     		strb	r3, [r5]
17023:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
 35678              		.loc 1 17023 21 is_stmt 1 view .LVU10003
 35679 0060 E8E7     		b	.L2509
 35680              	.LVL4379:
 35681              	.L2512:
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 35682              		.loc 1 17027 21 view .LVU10004
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 35683              		.loc 1 17027 40 is_stmt 0 view .LVU10005
 35684 0062 124B     		ldr	r3, .L2520
 35685 0064 1868     		ldr	r0, [r3]
 35686 0066 0469     		ldr	r4, [r0, #16]
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 35687              		.loc 1 17027 32 view .LVU10006
 35688 0068 0123     		movs	r3, #1
 35689 006a 0DF10702 		add	r2, sp, #7
 35690 006e 1721     		movs	r1, #23
 35691 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35692 0072 A047     		blx	r4
 35693              	.LVL4380:
17031:Core/Src/bno055.c ****                     break;
 35694              		.loc 1 17031 21 is_stmt 1 view .LVU10007
17031:Core/Src/bno055.c ****                     break;
 35695              		.loc 1 17031 32 is_stmt 0 view .LVU10008
 35696 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35697 0078 C3F30013 		ubfx	r3, r3, #4, #1
17031:Core/Src/bno055.c ****                     break;
 35698              		.loc 1 17031 30 view .LVU10009
 35699 007c 2B70     		strb	r3, [r5]
17032:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
 35700              		.loc 1 17032 21 is_stmt 1 view .LVU10010
 35701 007e D9E7     		b	.L2509
 35702              	.LVL4381:
 35703              	.L2513:
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 35704              		.loc 1 17036 21 view .LVU10011
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 35705              		.loc 1 17036 40 is_stmt 0 view .LVU10012
 35706 0080 0A4B     		ldr	r3, .L2520
 35707 0082 1868     		ldr	r0, [r3]
 35708 0084 0469     		ldr	r4, [r0, #16]
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 35709              		.loc 1 17036 32 view .LVU10013
 35710 0086 0123     		movs	r3, #1
 35711 0088 0DF10702 		add	r2, sp, #7
 35712 008c 1721     		movs	r1, #23
 35713 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35714 0090 A047     		blx	r4
 35715              	.LVL4382:
17040:Core/Src/bno055.c ****                     break;
 35716              		.loc 1 17040 21 is_stmt 1 view .LVU10014
17040:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/cc9kYR4Z.s 			page 1002


 35717              		.loc 1 17040 32 is_stmt 0 view .LVU10015
 35718 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35719 0096 C3F34013 		ubfx	r3, r3, #5, #1
17040:Core/Src/bno055.c ****                     break;
 35720              		.loc 1 17040 30 view .LVU10016
 35721 009a 2B70     		strb	r3, [r5]
17041:Core/Src/bno055.c ****                 default:
 35722              		.loc 1 17041 21 is_stmt 1 view .LVU10017
 35723 009c CAE7     		b	.L2509
 35724              	.LVL4383:
 35725              	.L2514:
17000:Core/Src/bno055.c ****     }
 35726              		.loc 1 17000 16 is_stmt 0 view .LVU10018
 35727 009e 6FF07E00 		mvn	r0, #126
 35728              	.LVL4384:
17000:Core/Src/bno055.c ****     }
 35729              		.loc 1 17000 16 view .LVU10019
 35730 00a2 C7E7     		b	.L2509
 35731              	.LVL4385:
 35732              	.L2515:
17049:Core/Src/bno055.c ****         }
 35733              		.loc 1 17049 22 view .LVU10020
 35734 00a4 4FF0FF30 		mov	r0, #-1
 35735 00a8 C4E7     		b	.L2509
 35736              	.L2521:
 35737 00aa 00BF     		.align	2
 35738              	.L2520:
 35739 00ac 00000000 		.word	.LANCHOR0
 35740              		.cfi_endproc
 35741              	.LFE245:
 35743              		.section	.text.bno055_set_gyro_highrate_axis_enable,"ax",%progbits
 35744              		.align	1
 35745              		.global	bno055_set_gyro_highrate_axis_enable
 35746              		.syntax unified
 35747              		.thumb
 35748              		.thumb_func
 35750              	bno055_set_gyro_highrate_axis_enable:
 35751              	.LVL4386:
 35752              	.LFB246:
17055:Core/Src/bno055.c **** 
17056:Core/Src/bno055.c **** /*!
17057:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate enable
17058:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
17059:Core/Src/bno055.c ****  *
17060:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
17061:Core/Src/bno055.c ****  *      data_u8     | result
17062:Core/Src/bno055.c ****  *  ----------------  |-------------
17063:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
17064:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
17065:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
17066:Core/Src/bno055.c ****  *               channel_u8         | value
17067:Core/Src/bno055.c ****  *     ------------------------       | ----------
17068:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
17069:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
17070:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
17071:Core/Src/bno055.c ****  *
17072:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/cc9kYR4Z.s 			page 1003


17073:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17074:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17075:Core/Src/bno055.c ****  *
17076:Core/Src/bno055.c ****  *
17077:Core/Src/bno055.c ****  */
17078:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_axis_enable(u8 channel_u8, u8 data_u8)
17079:Core/Src/bno055.c **** {
 35753              		.loc 1 17079 1 is_stmt 1 view -0
 35754              		.cfi_startproc
 35755              		@ args = 0, pretend = 0, frame = 8
 35756              		@ frame_needed = 0, uses_anonymous_args = 0
 35757              		.loc 1 17079 1 is_stmt 0 view .LVU10022
 35758 0000 70B5     		push	{r4, r5, r6, lr}
 35759              	.LCFI977:
 35760              		.cfi_def_cfa_offset 16
 35761              		.cfi_offset 4, -16
 35762              		.cfi_offset 5, -12
 35763              		.cfi_offset 6, -8
 35764              		.cfi_offset 14, -4
 35765 0002 82B0     		sub	sp, sp, #8
 35766              	.LCFI978:
 35767              		.cfi_def_cfa_offset 24
17080:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35768              		.loc 1 17080 5 is_stmt 1 view .LVU10023
 35769              	.LVL4387:
17081:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35770              		.loc 1 17081 5 view .LVU10024
 35771              		.loc 1 17081 8 is_stmt 0 view .LVU10025
 35772 0004 0023     		movs	r3, #0
 35773 0006 8DF80730 		strb	r3, [sp, #7]
17082:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35774              		.loc 1 17082 5 is_stmt 1 view .LVU10026
 35775              	.LVL4388:
17083:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35776              		.loc 1 17083 5 view .LVU10027
 35777              		.loc 1 17083 8 is_stmt 0 view .LVU10028
 35778 000a 8DF80630 		strb	r3, [sp, #6]
17084:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35779              		.loc 1 17084 5 is_stmt 1 view .LVU10029
 35780              	.LVL4389:
17085:Core/Src/bno055.c **** 
17086:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17087:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35781              		.loc 1 17087 5 view .LVU10030
 35782              		.loc 1 17087 18 is_stmt 0 view .LVU10031
 35783 000e 544B     		ldr	r3, .L2538
 35784 0010 1B68     		ldr	r3, [r3]
 35785              		.loc 1 17087 8 view .LVU10032
 35786 0012 002B     		cmp	r3, #0
 35787 0014 00F0A080 		beq	.L2528
 35788 0018 0446     		mov	r4, r0
 35789 001a 0D46     		mov	r5, r1
17088:Core/Src/bno055.c ****     {
17089:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17090:Core/Src/bno055.c ****     }
17091:Core/Src/bno055.c ****     else
17092:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1004


17093:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17094:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17095:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17096:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35790              		.loc 1 17096 9 is_stmt 1 view .LVU10033
 35791              		.loc 1 17096 19 is_stmt 0 view .LVU10034
 35792 001c 0DF10600 		add	r0, sp, #6
 35793              	.LVL4390:
 35794              		.loc 1 17096 19 view .LVU10035
 35795 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 35796              	.LVL4391:
17097:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35797              		.loc 1 17097 9 is_stmt 1 view .LVU10036
 35798              		.loc 1 17097 12 is_stmt 0 view .LVU10037
 35799 0024 0646     		mov	r6, r0
 35800 0026 0028     		cmp	r0, #0
 35801 0028 40F08580 		bne	.L2529
17098:Core/Src/bno055.c ****         {
17099:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35802              		.loc 1 17099 13 is_stmt 1 view .LVU10038
 35803              		.loc 1 17099 32 is_stmt 0 view .LVU10039
 35804 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35805              		.loc 1 17099 16 view .LVU10040
 35806 0030 1BB9     		cbnz	r3, .L2534
 35807              	.LVL4392:
 35808              	.L2525:
17100:Core/Src/bno055.c ****             {
17101:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17102:Core/Src/bno055.c ****             }
17103:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35809              		.loc 1 17103 13 is_stmt 1 view .LVU10041
 35810              		.loc 1 17103 16 is_stmt 0 view .LVU10042
 35811 0032 46B1     		cbz	r6, .L2535
17104:Core/Src/bno055.c ****             {
17105:Core/Src/bno055.c ****                 /* Write page as one */
17106:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17107:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17108:Core/Src/bno055.c ****                 {
17109:Core/Src/bno055.c ****                     switch (channel_u8)
17110:Core/Src/bno055.c ****                     {
17111:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_X_AXIS:
17112:Core/Src/bno055.c **** 
17113:Core/Src/bno055.c ****                             /* Write the value of
17114:Core/Src/bno055.c ****                              * gyro highrate x enable*/
17115:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17116:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
17117:Core/Src/bno055.c ****                                                                       &data_u8r,
17118:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17119:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17120:Core/Src/bno055.c ****                             {
17121:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXI
17122:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17123:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
17124:Core/Src/bno055.c ****                                                                             &data_u8r,
17125:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17126:Core/Src/bno055.c ****                             }
17127:Core/Src/bno055.c ****                             break;
ARM GAS  /tmp/cc9kYR4Z.s 			page 1005


17128:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Y_AXIS:
17129:Core/Src/bno055.c **** 
17130:Core/Src/bno055.c ****                             /* Write the value of
17131:Core/Src/bno055.c ****                              * gyro highrate y enable*/
17132:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17133:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
17134:Core/Src/bno055.c ****                                                                       &data_u8r,
17135:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17136:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17137:Core/Src/bno055.c ****                             {
17138:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXI
17139:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17140:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
17141:Core/Src/bno055.c ****                                                                             &data_u8r,
17142:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17143:Core/Src/bno055.c ****                             }
17144:Core/Src/bno055.c ****                             break;
17145:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Z_AXIS:
17146:Core/Src/bno055.c **** 
17147:Core/Src/bno055.c ****                             /* Write the value of
17148:Core/Src/bno055.c ****                              * gyro highrate z enable*/
17149:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17150:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
17151:Core/Src/bno055.c ****                                                                       &data_u8r,
17152:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17153:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17154:Core/Src/bno055.c ****                             {
17155:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXI
17156:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17157:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
17158:Core/Src/bno055.c ****                                                                             &data_u8r,
17159:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17160:Core/Src/bno055.c ****                             }
17161:Core/Src/bno055.c ****                             break;
17162:Core/Src/bno055.c ****                         default:
17163:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
17164:Core/Src/bno055.c ****                             break;
17165:Core/Src/bno055.c ****                     }
17166:Core/Src/bno055.c ****                 }
17167:Core/Src/bno055.c ****                 else
17168:Core/Src/bno055.c ****                 {
17169:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17170:Core/Src/bno055.c ****                 }
17171:Core/Src/bno055.c ****             }
17172:Core/Src/bno055.c ****             else
17173:Core/Src/bno055.c ****             {
17174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35812              		.loc 1 17174 26 view .LVU10043
 35813 0034 4FF0FF34 		mov	r4, #-1
 35814 0038 7FE0     		b	.L2524
 35815              	.LVL4393:
 35816              	.L2534:
17101:Core/Src/bno055.c ****             }
 35817              		.loc 1 17101 17 is_stmt 1 view .LVU10044
17101:Core/Src/bno055.c ****             }
 35818              		.loc 1 17101 28 is_stmt 0 view .LVU10045
 35819 003a FFF7FEFF 		bl	bno055_set_operation_mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 1006


 35820              	.LVL4394:
17101:Core/Src/bno055.c ****             }
 35821              		.loc 1 17101 25 view .LVU10046
 35822 003e 56FA80F6 		uxtab	r6, r6, r0
 35823 0042 76B2     		sxtb	r6, r6
 35824              	.LVL4395:
17101:Core/Src/bno055.c ****             }
 35825              		.loc 1 17101 25 view .LVU10047
 35826 0044 F5E7     		b	.L2525
 35827              	.L2535:
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35828              		.loc 1 17106 17 is_stmt 1 view .LVU10048
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35829              		.loc 1 17106 30 is_stmt 0 view .LVU10049
 35830 0046 0120     		movs	r0, #1
 35831 0048 FFF7FEFF 		bl	bno055_write_page_id
 35832              	.LVL4396:
17107:Core/Src/bno055.c ****                 {
 35833              		.loc 1 17107 17 is_stmt 1 view .LVU10050
17107:Core/Src/bno055.c ****                 {
 35834              		.loc 1 17107 20 is_stmt 0 view .LVU10051
 35835 004c 0028     		cmp	r0, #0
 35836 004e 7AD1     		bne	.L2531
17109:Core/Src/bno055.c ****                     {
 35837              		.loc 1 17109 21 is_stmt 1 view .LVU10052
 35838 0050 012C     		cmp	r4, #1
 35839 0052 29D0     		beq	.L2526
 35840 0054 022C     		cmp	r4, #2
 35841 0056 4BD0     		beq	.L2527
 35842 0058 14B1     		cbz	r4, .L2536
 35843 005a 6FF00104 		mvn	r4, #1
 35844 005e 6CE0     		b	.L2524
 35845              	.L2536:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35846              		.loc 1 17115 29 view .LVU10053
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35847              		.loc 1 17115 48 is_stmt 0 view .LVU10054
 35848 0060 3F4B     		ldr	r3, .L2538
 35849 0062 1868     		ldr	r0, [r3]
 35850              	.LVL4397:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35851              		.loc 1 17115 48 view .LVU10055
 35852 0064 0469     		ldr	r4, [r0, #16]
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35853              		.loc 1 17115 40 view .LVU10056
 35854 0066 0123     		movs	r3, #1
 35855 0068 0DF10702 		add	r2, sp, #7
 35856 006c 1721     		movs	r1, #23
 35857 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35858 0070 A047     		blx	r4
 35859              	.LVL4398:
17119:Core/Src/bno055.c ****                             {
 35860              		.loc 1 17119 29 is_stmt 1 view .LVU10057
17119:Core/Src/bno055.c ****                             {
 35861              		.loc 1 17119 32 is_stmt 0 view .LVU10058
 35862 0072 0446     		mov	r4, r0
 35863 0074 0028     		cmp	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1007


 35864 0076 60D1     		bne	.L2524
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35865              		.loc 1 17121 33 is_stmt 1 view .LVU10059
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35866              		.loc 1 17121 44 is_stmt 0 view .LVU10060
 35867 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35868 007c 23F00803 		bic	r3, r3, #8
 35869 0080 5BB2     		sxtb	r3, r3
 35870 0082 EA00     		lsls	r2, r5, #3
 35871 0084 02F00802 		and	r2, r2, #8
 35872 0088 1343     		orrs	r3, r3, r2
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35873              		.loc 1 17121 42 view .LVU10061
 35874 008a 8DF80730 		strb	r3, [sp, #7]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35875              		.loc 1 17122 33 is_stmt 1 view .LVU10062
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35876              		.loc 1 17122 53 is_stmt 0 view .LVU10063
 35877 008e 344B     		ldr	r3, .L2538
 35878 0090 1868     		ldr	r0, [r3]
 35879              	.LVL4399:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35880              		.loc 1 17122 53 view .LVU10064
 35881 0092 C568     		ldr	r5, [r0, #12]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35882              		.loc 1 17122 45 view .LVU10065
 35883 0094 0123     		movs	r3, #1
 35884 0096 0DF10702 		add	r2, sp, #7
 35885 009a 1721     		movs	r1, #23
 35886 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35887 009e A847     		blx	r5
 35888              	.LVL4400:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35889              		.loc 1 17122 42 view .LVU10066
 35890 00a0 54FA80F3 		uxtab	r3, r4, r0
 35891 00a4 5CB2     		sxtb	r4, r3
 35892              	.LVL4401:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35893              		.loc 1 17122 42 view .LVU10067
 35894 00a6 48E0     		b	.L2524
 35895              	.LVL4402:
 35896              	.L2526:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 35897              		.loc 1 17132 29 is_stmt 1 view .LVU10068
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 35898              		.loc 1 17132 48 is_stmt 0 view .LVU10069
 35899 00a8 2D4B     		ldr	r3, .L2538
 35900 00aa 1868     		ldr	r0, [r3]
 35901              	.LVL4403:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 35902              		.loc 1 17132 48 view .LVU10070
 35903 00ac 0469     		ldr	r4, [r0, #16]
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 35904              		.loc 1 17132 40 view .LVU10071
 35905 00ae 0123     		movs	r3, #1
 35906 00b0 0DF10702 		add	r2, sp, #7
 35907 00b4 1721     		movs	r1, #23
ARM GAS  /tmp/cc9kYR4Z.s 			page 1008


 35908 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35909 00b8 A047     		blx	r4
 35910              	.LVL4404:
17136:Core/Src/bno055.c ****                             {
 35911              		.loc 1 17136 29 is_stmt 1 view .LVU10072
17136:Core/Src/bno055.c ****                             {
 35912              		.loc 1 17136 32 is_stmt 0 view .LVU10073
 35913 00ba 0446     		mov	r4, r0
 35914 00bc 0028     		cmp	r0, #0
 35915 00be 3CD1     		bne	.L2524
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35916              		.loc 1 17138 33 is_stmt 1 view .LVU10074
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35917              		.loc 1 17138 44 is_stmt 0 view .LVU10075
 35918 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35919 00c4 23F01003 		bic	r3, r3, #16
 35920 00c8 5BB2     		sxtb	r3, r3
 35921 00ca 2A01     		lsls	r2, r5, #4
 35922 00cc 02F01002 		and	r2, r2, #16
 35923 00d0 1343     		orrs	r3, r3, r2
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35924              		.loc 1 17138 42 view .LVU10076
 35925 00d2 8DF80730 		strb	r3, [sp, #7]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 35926              		.loc 1 17139 33 is_stmt 1 view .LVU10077
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 35927              		.loc 1 17139 53 is_stmt 0 view .LVU10078
 35928 00d6 224B     		ldr	r3, .L2538
 35929 00d8 1868     		ldr	r0, [r3]
 35930              	.LVL4405:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 35931              		.loc 1 17139 53 view .LVU10079
 35932 00da C568     		ldr	r5, [r0, #12]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 35933              		.loc 1 17139 45 view .LVU10080
 35934 00dc 0123     		movs	r3, #1
 35935 00de 0DF10702 		add	r2, sp, #7
 35936 00e2 1721     		movs	r1, #23
 35937 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35938 00e6 A847     		blx	r5
 35939              	.LVL4406:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 35940              		.loc 1 17139 42 view .LVU10081
 35941 00e8 54FA80F3 		uxtab	r3, r4, r0
 35942 00ec 5CB2     		sxtb	r4, r3
 35943              	.LVL4407:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 35944              		.loc 1 17139 42 view .LVU10082
 35945 00ee 24E0     		b	.L2524
 35946              	.LVL4408:
 35947              	.L2527:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 35948              		.loc 1 17149 29 is_stmt 1 view .LVU10083
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 35949              		.loc 1 17149 48 is_stmt 0 view .LVU10084
 35950 00f0 1B4B     		ldr	r3, .L2538
 35951 00f2 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 1009


 35952              	.LVL4409:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 35953              		.loc 1 17149 48 view .LVU10085
 35954 00f4 0469     		ldr	r4, [r0, #16]
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 35955              		.loc 1 17149 40 view .LVU10086
 35956 00f6 0123     		movs	r3, #1
 35957 00f8 0DF10702 		add	r2, sp, #7
 35958 00fc 1721     		movs	r1, #23
 35959 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35960 0100 A047     		blx	r4
 35961              	.LVL4410:
17153:Core/Src/bno055.c ****                             {
 35962              		.loc 1 17153 29 is_stmt 1 view .LVU10087
17153:Core/Src/bno055.c ****                             {
 35963              		.loc 1 17153 32 is_stmt 0 view .LVU10088
 35964 0102 0446     		mov	r4, r0
 35965 0104 C8B9     		cbnz	r0, .L2524
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35966              		.loc 1 17155 33 is_stmt 1 view .LVU10089
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35967              		.loc 1 17155 44 is_stmt 0 view .LVU10090
 35968 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35969 010a 23F02003 		bic	r3, r3, #32
 35970 010e 5AB2     		sxtb	r2, r3
 35971 0110 6B01     		lsls	r3, r5, #5
 35972 0112 03F02003 		and	r3, r3, #32
 35973 0116 1343     		orrs	r3, r3, r2
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35974              		.loc 1 17155 42 view .LVU10091
 35975 0118 8DF80730 		strb	r3, [sp, #7]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 35976              		.loc 1 17156 33 is_stmt 1 view .LVU10092
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 35977              		.loc 1 17156 53 is_stmt 0 view .LVU10093
 35978 011c 104B     		ldr	r3, .L2538
 35979 011e 1868     		ldr	r0, [r3]
 35980              	.LVL4411:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 35981              		.loc 1 17156 53 view .LVU10094
 35982 0120 C568     		ldr	r5, [r0, #12]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 35983              		.loc 1 17156 45 view .LVU10095
 35984 0122 0123     		movs	r3, #1
 35985 0124 0DF10702 		add	r2, sp, #7
 35986 0128 1721     		movs	r1, #23
 35987 012a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35988 012c A847     		blx	r5
 35989              	.LVL4412:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 35990              		.loc 1 17156 42 view .LVU10096
 35991 012e 54FA80F3 		uxtab	r3, r4, r0
 35992 0132 5CB2     		sxtb	r4, r3
 35993              	.LVL4413:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 35994              		.loc 1 17156 42 view .LVU10097
 35995 0134 01E0     		b	.L2524
ARM GAS  /tmp/cc9kYR4Z.s 			page 1010


 35996              	.LVL4414:
 35997              	.L2529:
17175:Core/Src/bno055.c ****             }
17176:Core/Src/bno055.c ****         }
17177:Core/Src/bno055.c ****         else
17178:Core/Src/bno055.c ****         {
17179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35998              		.loc 1 17179 22 view .LVU10098
 35999 0136 4FF0FF34 		mov	r4, #-1
 36000              	.LVL4415:
 36001              	.L2524:
17180:Core/Src/bno055.c ****         }
17181:Core/Src/bno055.c ****     }
17182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36002              		.loc 1 17182 5 is_stmt 1 view .LVU10099
 36003              		.loc 1 17182 24 is_stmt 0 view .LVU10100
 36004 013a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36005              		.loc 1 17182 8 view .LVU10101
 36006 013e 28B9     		cbnz	r0, .L2537
 36007              	.LVL4416:
 36008              	.L2523:
17183:Core/Src/bno055.c ****     {
17184:Core/Src/bno055.c ****         /* set the operation mode of
17185:Core/Src/bno055.c ****          * previous operation mode*/
17186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17187:Core/Src/bno055.c ****     }
17188:Core/Src/bno055.c **** 
17189:Core/Src/bno055.c ****     return com_rslt;
17190:Core/Src/bno055.c **** }
 36009              		.loc 1 17190 1 view .LVU10102
 36010 0140 2046     		mov	r0, r4
 36011 0142 02B0     		add	sp, sp, #8
 36012              	.LCFI979:
 36013              		.cfi_remember_state
 36014              		.cfi_def_cfa_offset 16
 36015              		@ sp needed
 36016 0144 70BD     		pop	{r4, r5, r6, pc}
 36017              	.LVL4417:
 36018              	.L2531:
 36019              	.LCFI980:
 36020              		.cfi_restore_state
17169:Core/Src/bno055.c ****                 }
 36021              		.loc 1 17169 30 view .LVU10103
 36022 0146 4FF0FF34 		mov	r4, #-1
 36023 014a F6E7     		b	.L2524
 36024              	.LVL4418:
 36025              	.L2537:
17186:Core/Src/bno055.c ****     }
 36026              		.loc 1 17186 9 is_stmt 1 view .LVU10104
17186:Core/Src/bno055.c ****     }
 36027              		.loc 1 17186 21 is_stmt 0 view .LVU10105
 36028 014c FFF7FEFF 		bl	bno055_set_operation_mode
 36029              	.LVL4419:
17186:Core/Src/bno055.c ****     }
 36030              		.loc 1 17186 18 view .LVU10106
 36031 0150 54FA80F0 		uxtab	r0, r4, r0
 36032 0154 44B2     		sxtb	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1011


 36033              	.LVL4420:
17186:Core/Src/bno055.c ****     }
 36034              		.loc 1 17186 18 view .LVU10107
 36035 0156 F3E7     		b	.L2523
 36036              	.LVL4421:
 36037              	.L2528:
17089:Core/Src/bno055.c ****     }
 36038              		.loc 1 17089 16 view .LVU10108
 36039 0158 6FF07E04 		mvn	r4, #126
 36040 015c F0E7     		b	.L2523
 36041              	.L2539:
 36042 015e 00BF     		.align	2
 36043              	.L2538:
 36044 0160 00000000 		.word	.LANCHOR0
 36045              		.cfi_endproc
 36046              	.LFE246:
 36048              		.section	.text.bno055_get_gyro_any_motion_filter,"ax",%progbits
 36049              		.align	1
 36050              		.global	bno055_get_gyro_any_motion_filter
 36051              		.syntax unified
 36052              		.thumb
 36053              		.thumb_func
 36055              	bno055_get_gyro_any_motion_filter:
 36056              	.LVL4422:
 36057              	.LFB247:
17191:Core/Src/bno055.c **** 
17192:Core/Src/bno055.c **** /*!
17193:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion filter
17194:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17195:Core/Src/bno055.c ****  *
17196:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17197:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17198:Core/Src/bno055.c ****  *  ---------------------------   |------------
17199:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17200:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17201:Core/Src/bno055.c ****  *
17202:Core/Src/bno055.c ****  *  @return results of bus communication function
17203:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17204:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17205:Core/Src/bno055.c ****  *
17206:Core/Src/bno055.c ****  */
17207:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_filter(u8 *gyro_any_motion_filter_u8)
17208:Core/Src/bno055.c **** {
 36058              		.loc 1 17208 1 is_stmt 1 view -0
 36059              		.cfi_startproc
 36060              		@ args = 0, pretend = 0, frame = 8
 36061              		@ frame_needed = 0, uses_anonymous_args = 0
 36062              		.loc 1 17208 1 is_stmt 0 view .LVU10110
 36063 0000 30B5     		push	{r4, r5, lr}
 36064              	.LCFI981:
 36065              		.cfi_def_cfa_offset 12
 36066              		.cfi_offset 4, -12
 36067              		.cfi_offset 5, -8
 36068              		.cfi_offset 14, -4
 36069 0002 83B0     		sub	sp, sp, #12
 36070              	.LCFI982:
 36071              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cc9kYR4Z.s 			page 1012


17209:Core/Src/bno055.c ****     /* Variable used to return value of
17210:Core/Src/bno055.c ****      * communication routine*/
17211:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36072              		.loc 1 17211 5 is_stmt 1 view .LVU10111
 36073              	.LVL4423:
17212:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36074              		.loc 1 17212 5 view .LVU10112
 36075              		.loc 1 17212 8 is_stmt 0 view .LVU10113
 36076 0004 0023     		movs	r3, #0
 36077 0006 8DF80730 		strb	r3, [sp, #7]
17213:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36078              		.loc 1 17213 5 is_stmt 1 view .LVU10114
 36079              	.LVL4424:
17214:Core/Src/bno055.c **** 
17215:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17216:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36080              		.loc 1 17216 5 view .LVU10115
 36081              		.loc 1 17216 18 is_stmt 0 view .LVU10116
 36082 000a 144B     		ldr	r3, .L2548
 36083 000c 1B68     		ldr	r3, [r3]
 36084              		.loc 1 17216 8 view .LVU10117
 36085 000e F3B1     		cbz	r3, .L2544
 36086 0010 0446     		mov	r4, r0
17217:Core/Src/bno055.c ****     {
17218:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17219:Core/Src/bno055.c ****     }
17220:Core/Src/bno055.c ****     else
17221:Core/Src/bno055.c ****     {
17222:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion filter is
17223:Core/Src/bno055.c ****          * available in the page one*/
17224:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36087              		.loc 1 17224 9 is_stmt 1 view .LVU10118
 36088              		.loc 1 17224 21 is_stmt 0 view .LVU10119
 36089 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36090              		.loc 1 17224 12 view .LVU10120
 36091 0014 012B     		cmp	r3, #1
 36092 0016 14D1     		bne	.L2547
 36093              	.LVL4425:
 36094              	.L2542:
17225:Core/Src/bno055.c ****         {
17226:Core/Src/bno055.c ****             /* Write page as one */
17227:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17228:Core/Src/bno055.c ****         }
17229:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36095              		.loc 1 17229 53 discriminator 1 view .LVU10121
 36096 0018 104B     		ldr	r3, .L2548
 36097 001a 1B68     		ldr	r3, [r3]
 36098 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36099              		.loc 1 17229 41 discriminator 1 view .LVU10122
 36100 001e 012B     		cmp	r3, #1
 36101 0020 18D1     		bne	.L2545
 36102              	.L2543:
17230:Core/Src/bno055.c ****         {
17231:Core/Src/bno055.c ****             /* Read the value of gyro anymotion filter*/
17232:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36103              		.loc 1 17232 13 is_stmt 1 view .LVU10123
 36104              		.loc 1 17232 32 is_stmt 0 view .LVU10124
ARM GAS  /tmp/cc9kYR4Z.s 			page 1013


 36105 0022 0E4B     		ldr	r3, .L2548
 36106 0024 1868     		ldr	r0, [r3]
 36107 0026 0569     		ldr	r5, [r0, #16]
 36108              		.loc 1 17232 24 view .LVU10125
 36109 0028 0123     		movs	r3, #1
 36110 002a 0DF10702 		add	r2, sp, #7
 36111 002e 1721     		movs	r1, #23
 36112 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36113 0032 A847     		blx	r5
 36114              	.LVL4426:
17233:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_FILTER_REG,
17234:Core/Src/bno055.c ****                                                       &data_u8r,
17235:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17236:Core/Src/bno055.c ****             *gyro_any_motion_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_FILTE
 36115              		.loc 1 17236 13 is_stmt 1 view .LVU10126
 36116              		.loc 1 17236 42 is_stmt 0 view .LVU10127
 36117 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36118 0038 C3F38013 		ubfx	r3, r3, #6, #1
 36119              		.loc 1 17236 40 view .LVU10128
 36120 003c 2370     		strb	r3, [r4]
 36121              	.LVL4427:
 36122              	.L2541:
17237:Core/Src/bno055.c ****         }
17238:Core/Src/bno055.c ****         else
17239:Core/Src/bno055.c ****         {
17240:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17241:Core/Src/bno055.c ****         }
17242:Core/Src/bno055.c ****     }
17243:Core/Src/bno055.c **** 
17244:Core/Src/bno055.c ****     return com_rslt;
17245:Core/Src/bno055.c **** }
 36123              		.loc 1 17245 1 view .LVU10129
 36124 003e 03B0     		add	sp, sp, #12
 36125              	.LCFI983:
 36126              		.cfi_remember_state
 36127              		.cfi_def_cfa_offset 12
 36128              		@ sp needed
 36129 0040 30BD     		pop	{r4, r5, pc}
 36130              	.LVL4428:
 36131              	.L2547:
 36132              	.LCFI984:
 36133              		.cfi_restore_state
17227:Core/Src/bno055.c ****         }
 36134              		.loc 1 17227 13 is_stmt 1 view .LVU10130
17227:Core/Src/bno055.c ****         }
 36135              		.loc 1 17227 23 is_stmt 0 view .LVU10131
 36136 0042 0120     		movs	r0, #1
 36137              	.LVL4429:
17227:Core/Src/bno055.c ****         }
 36138              		.loc 1 17227 23 view .LVU10132
 36139 0044 FFF7FEFF 		bl	bno055_write_page_id
 36140              	.LVL4430:
17229:Core/Src/bno055.c ****         {
 36141              		.loc 1 17229 9 is_stmt 1 view .LVU10133
17229:Core/Src/bno055.c ****         {
 36142              		.loc 1 17229 12 is_stmt 0 view .LVU10134
 36143 0048 0028     		cmp	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1014


 36144 004a EAD0     		beq	.L2543
 36145 004c E4E7     		b	.L2542
 36146              	.LVL4431:
 36147              	.L2544:
17218:Core/Src/bno055.c ****     }
 36148              		.loc 1 17218 16 view .LVU10135
 36149 004e 6FF07E00 		mvn	r0, #126
 36150              	.LVL4432:
17218:Core/Src/bno055.c ****     }
 36151              		.loc 1 17218 16 view .LVU10136
 36152 0052 F4E7     		b	.L2541
 36153              	.LVL4433:
 36154              	.L2545:
17240:Core/Src/bno055.c ****         }
 36155              		.loc 1 17240 22 view .LVU10137
 36156 0054 4FF0FF30 		mov	r0, #-1
 36157 0058 F1E7     		b	.L2541
 36158              	.L2549:
 36159 005a 00BF     		.align	2
 36160              	.L2548:
 36161 005c 00000000 		.word	.LANCHOR0
 36162              		.cfi_endproc
 36163              	.LFE247:
 36165              		.section	.text.bno055_set_gyro_any_motion_filter,"ax",%progbits
 36166              		.align	1
 36167              		.global	bno055_set_gyro_any_motion_filter
 36168              		.syntax unified
 36169              		.thumb
 36170              		.thumb_func
 36172              	bno055_set_gyro_any_motion_filter:
 36173              	.LVL4434:
 36174              	.LFB248:
17246:Core/Src/bno055.c **** 
17247:Core/Src/bno055.c **** /*!
17248:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion filter
17249:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17250:Core/Src/bno055.c ****  *
17251:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17252:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17253:Core/Src/bno055.c ****  *  ---------------------------   |------------
17254:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17255:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17256:Core/Src/bno055.c ****  *
17257:Core/Src/bno055.c ****  *  @return results of bus communication function
17258:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17259:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17260:Core/Src/bno055.c ****  *
17261:Core/Src/bno055.c ****  */
17262:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_filter(u8 gyro_any_motion_filter_u8)
17263:Core/Src/bno055.c **** {
 36175              		.loc 1 17263 1 is_stmt 1 view -0
 36176              		.cfi_startproc
 36177              		@ args = 0, pretend = 0, frame = 8
 36178              		@ frame_needed = 0, uses_anonymous_args = 0
 36179              		.loc 1 17263 1 is_stmt 0 view .LVU10139
 36180 0000 30B5     		push	{r4, r5, lr}
 36181              	.LCFI985:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1015


 36182              		.cfi_def_cfa_offset 12
 36183              		.cfi_offset 4, -12
 36184              		.cfi_offset 5, -8
 36185              		.cfi_offset 14, -4
 36186 0002 83B0     		sub	sp, sp, #12
 36187              	.LCFI986:
 36188              		.cfi_def_cfa_offset 24
17264:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36189              		.loc 1 17264 5 is_stmt 1 view .LVU10140
 36190              	.LVL4435:
17265:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36191              		.loc 1 17265 5 view .LVU10141
 36192              		.loc 1 17265 8 is_stmt 0 view .LVU10142
 36193 0004 0023     		movs	r3, #0
 36194 0006 8DF80730 		strb	r3, [sp, #7]
17266:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36195              		.loc 1 17266 5 is_stmt 1 view .LVU10143
 36196              	.LVL4436:
17267:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36197              		.loc 1 17267 5 view .LVU10144
 36198              		.loc 1 17267 8 is_stmt 0 view .LVU10145
 36199 000a 8DF80630 		strb	r3, [sp, #6]
17268:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36200              		.loc 1 17268 5 is_stmt 1 view .LVU10146
 36201              	.LVL4437:
17269:Core/Src/bno055.c **** 
17270:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17271:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36202              		.loc 1 17271 5 view .LVU10147
 36203              		.loc 1 17271 18 is_stmt 0 view .LVU10148
 36204 000e 2A4B     		ldr	r3, .L2562
 36205 0010 1B68     		ldr	r3, [r3]
 36206              		.loc 1 17271 8 view .LVU10149
 36207 0012 002B     		cmp	r3, #0
 36208 0014 4CD0     		beq	.L2554
 36209 0016 0546     		mov	r5, r0
17272:Core/Src/bno055.c ****     {
17273:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17274:Core/Src/bno055.c ****     }
17275:Core/Src/bno055.c ****     else
17276:Core/Src/bno055.c ****     {
17277:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17278:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17279:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17280:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36210              		.loc 1 17280 9 is_stmt 1 view .LVU10150
 36211              		.loc 1 17280 19 is_stmt 0 view .LVU10151
 36212 0018 0DF10600 		add	r0, sp, #6
 36213              	.LVL4438:
 36214              		.loc 1 17280 19 view .LVU10152
 36215 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36216              	.LVL4439:
17281:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36217              		.loc 1 17281 9 is_stmt 1 view .LVU10153
 36218              		.loc 1 17281 12 is_stmt 0 view .LVU10154
 36219 0020 0446     		mov	r4, r0
 36220 0022 0028     		cmp	r0, #0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1016


 36221 0024 33D1     		bne	.L2555
17282:Core/Src/bno055.c ****         {
17283:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36222              		.loc 1 17283 13 is_stmt 1 view .LVU10155
 36223              		.loc 1 17283 32 is_stmt 0 view .LVU10156
 36224 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36225              		.loc 1 17283 16 view .LVU10157
 36226 002a 1BB9     		cbnz	r3, .L2559
 36227              	.LVL4440:
 36228              	.L2553:
17284:Core/Src/bno055.c ****             {
17285:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17286:Core/Src/bno055.c ****             }
17287:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36229              		.loc 1 17287 13 is_stmt 1 view .LVU10158
 36230              		.loc 1 17287 16 is_stmt 0 view .LVU10159
 36231 002c 44B1     		cbz	r4, .L2560
17288:Core/Src/bno055.c ****             {
17289:Core/Src/bno055.c ****                 /* Write page as one */
17290:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17291:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17292:Core/Src/bno055.c ****                 {
17293:Core/Src/bno055.c ****                     /* Write the value of
17294:Core/Src/bno055.c ****                      * gyro anymotion filter*/
17295:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17296:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
17297:Core/Src/bno055.c ****                                                               &data_u8r,
17298:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17299:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17300:Core/Src/bno055.c ****                     {
17301:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
17302:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
17303:Core/Src/bno055.c ****                                                        gyro_any_motion_filter_u8);
17304:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17305:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
17306:Core/Src/bno055.c ****                                                                     &data_u8r,
17307:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17308:Core/Src/bno055.c ****                     }
17309:Core/Src/bno055.c ****                 }
17310:Core/Src/bno055.c ****                 else
17311:Core/Src/bno055.c ****                 {
17312:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17313:Core/Src/bno055.c ****                 }
17314:Core/Src/bno055.c ****             }
17315:Core/Src/bno055.c ****             else
17316:Core/Src/bno055.c ****             {
17317:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36232              		.loc 1 17317 26 view .LVU10160
 36233 002e 4FF0FF34 		mov	r4, #-1
 36234              	.LVL4441:
 36235              		.loc 1 17317 26 view .LVU10161
 36236 0032 2EE0     		b	.L2552
 36237              	.LVL4442:
 36238              	.L2559:
17285:Core/Src/bno055.c ****             }
 36239              		.loc 1 17285 17 is_stmt 1 view .LVU10162
17285:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1017


 36240              		.loc 1 17285 28 is_stmt 0 view .LVU10163
 36241 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 36242              	.LVL4443:
17285:Core/Src/bno055.c ****             }
 36243              		.loc 1 17285 25 view .LVU10164
 36244 0038 54FA80F4 		uxtab	r4, r4, r0
 36245 003c 64B2     		sxtb	r4, r4
 36246              	.LVL4444:
17285:Core/Src/bno055.c ****             }
 36247              		.loc 1 17285 25 view .LVU10165
 36248 003e F5E7     		b	.L2553
 36249              	.L2560:
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36250              		.loc 1 17290 17 is_stmt 1 view .LVU10166
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36251              		.loc 1 17290 30 is_stmt 0 view .LVU10167
 36252 0040 0120     		movs	r0, #1
 36253 0042 FFF7FEFF 		bl	bno055_write_page_id
 36254              	.LVL4445:
17291:Core/Src/bno055.c ****                 {
 36255              		.loc 1 17291 17 is_stmt 1 view .LVU10168
17291:Core/Src/bno055.c ****                 {
 36256              		.loc 1 17291 20 is_stmt 0 view .LVU10169
 36257 0046 50BB     		cbnz	r0, .L2557
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36258              		.loc 1 17295 21 is_stmt 1 view .LVU10170
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36259              		.loc 1 17295 40 is_stmt 0 view .LVU10171
 36260 0048 1B4B     		ldr	r3, .L2562
 36261 004a 1868     		ldr	r0, [r3]
 36262              	.LVL4446:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36263              		.loc 1 17295 40 view .LVU10172
 36264 004c 0469     		ldr	r4, [r0, #16]
 36265              	.LVL4447:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36266              		.loc 1 17295 32 view .LVU10173
 36267 004e 0123     		movs	r3, #1
 36268 0050 0DF10702 		add	r2, sp, #7
 36269 0054 1721     		movs	r1, #23
 36270 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36271 0058 A047     		blx	r4
 36272              	.LVL4448:
17299:Core/Src/bno055.c ****                     {
 36273              		.loc 1 17299 21 is_stmt 1 view .LVU10174
17299:Core/Src/bno055.c ****                     {
 36274              		.loc 1 17299 24 is_stmt 0 view .LVU10175
 36275 005a 0446     		mov	r4, r0
 36276 005c C8B9     		cbnz	r0, .L2552
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36277              		.loc 1 17301 25 is_stmt 1 view .LVU10176
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36278              		.loc 1 17301 36 is_stmt 0 view .LVU10177
 36279 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36280 0062 23F04003 		bic	r3, r3, #64
 36281 0066 5BB2     		sxtb	r3, r3
 36282 0068 A801     		lsls	r0, r5, #6
ARM GAS  /tmp/cc9kYR4Z.s 			page 1018


 36283              	.LVL4449:
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36284              		.loc 1 17301 36 view .LVU10178
 36285 006a 00F04000 		and	r0, r0, #64
 36286 006e 0343     		orrs	r3, r3, r0
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36287              		.loc 1 17301 34 view .LVU10179
 36288 0070 8DF80730 		strb	r3, [sp, #7]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36289              		.loc 1 17304 25 is_stmt 1 view .LVU10180
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36290              		.loc 1 17304 45 is_stmt 0 view .LVU10181
 36291 0074 104B     		ldr	r3, .L2562
 36292 0076 1868     		ldr	r0, [r3]
 36293 0078 C568     		ldr	r5, [r0, #12]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36294              		.loc 1 17304 37 view .LVU10182
 36295 007a 0123     		movs	r3, #1
 36296 007c 0DF10702 		add	r2, sp, #7
 36297 0080 1721     		movs	r1, #23
 36298 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36299 0084 A847     		blx	r5
 36300              	.LVL4450:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36301              		.loc 1 17304 34 view .LVU10183
 36302 0086 54FA80F0 		uxtab	r0, r4, r0
 36303 008a 44B2     		sxtb	r4, r0
 36304              	.LVL4451:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36305              		.loc 1 17304 34 view .LVU10184
 36306 008c 01E0     		b	.L2552
 36307              	.LVL4452:
 36308              	.L2555:
17318:Core/Src/bno055.c ****             }
17319:Core/Src/bno055.c ****         }
17320:Core/Src/bno055.c ****         else
17321:Core/Src/bno055.c ****         {
17322:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36309              		.loc 1 17322 22 view .LVU10185
 36310 008e 4FF0FF34 		mov	r4, #-1
 36311              	.LVL4453:
 36312              	.L2552:
17323:Core/Src/bno055.c ****         }
17324:Core/Src/bno055.c ****     }
17325:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36313              		.loc 1 17325 5 is_stmt 1 view .LVU10186
 36314              		.loc 1 17325 24 is_stmt 0 view .LVU10187
 36315 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36316              		.loc 1 17325 8 view .LVU10188
 36317 0096 28B9     		cbnz	r0, .L2561
 36318              	.LVL4454:
 36319              	.L2551:
17326:Core/Src/bno055.c ****     {
17327:Core/Src/bno055.c ****         /* set the operation mode of
17328:Core/Src/bno055.c ****          * previous operation mode*/
17329:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17330:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1019


17331:Core/Src/bno055.c **** 
17332:Core/Src/bno055.c ****     return com_rslt;
17333:Core/Src/bno055.c **** }
 36320              		.loc 1 17333 1 view .LVU10189
 36321 0098 2046     		mov	r0, r4
 36322 009a 03B0     		add	sp, sp, #12
 36323              	.LCFI987:
 36324              		.cfi_remember_state
 36325              		.cfi_def_cfa_offset 12
 36326              		@ sp needed
 36327 009c 30BD     		pop	{r4, r5, pc}
 36328              	.LVL4455:
 36329              	.L2557:
 36330              	.LCFI988:
 36331              		.cfi_restore_state
17312:Core/Src/bno055.c ****                 }
 36332              		.loc 1 17312 30 view .LVU10190
 36333 009e 4FF0FF34 		mov	r4, #-1
 36334              	.LVL4456:
17312:Core/Src/bno055.c ****                 }
 36335              		.loc 1 17312 30 view .LVU10191
 36336 00a2 F6E7     		b	.L2552
 36337              	.LVL4457:
 36338              	.L2561:
17329:Core/Src/bno055.c ****     }
 36339              		.loc 1 17329 9 is_stmt 1 view .LVU10192
17329:Core/Src/bno055.c ****     }
 36340              		.loc 1 17329 21 is_stmt 0 view .LVU10193
 36341 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 36342              	.LVL4458:
17329:Core/Src/bno055.c ****     }
 36343              		.loc 1 17329 18 view .LVU10194
 36344 00a8 54FA80F0 		uxtab	r0, r4, r0
 36345 00ac 44B2     		sxtb	r4, r0
 36346              	.LVL4459:
17329:Core/Src/bno055.c ****     }
 36347              		.loc 1 17329 18 view .LVU10195
 36348 00ae F3E7     		b	.L2551
 36349              	.LVL4460:
 36350              	.L2554:
17273:Core/Src/bno055.c ****     }
 36351              		.loc 1 17273 16 view .LVU10196
 36352 00b0 6FF07E04 		mvn	r4, #126
 36353 00b4 F0E7     		b	.L2551
 36354              	.L2563:
 36355 00b6 00BF     		.align	2
 36356              	.L2562:
 36357 00b8 00000000 		.word	.LANCHOR0
 36358              		.cfi_endproc
 36359              	.LFE248:
 36361              		.section	.text.bno055_get_gyro_highrate_filter,"ax",%progbits
 36362              		.align	1
 36363              		.global	bno055_get_gyro_highrate_filter
 36364              		.syntax unified
 36365              		.thumb
 36366              		.thumb_func
 36368              	bno055_get_gyro_highrate_filter:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1020


 36369              	.LVL4461:
 36370              	.LFB249:
17334:Core/Src/bno055.c **** 
17335:Core/Src/bno055.c **** /*!
17336:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate filter
17337:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17338:Core/Src/bno055.c ****  *
17339:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17340:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17341:Core/Src/bno055.c ****  *  --------------------------- |------------
17342:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17343:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17344:Core/Src/bno055.c ****  *
17345:Core/Src/bno055.c ****  *  @return results of bus communication function
17346:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17347:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17348:Core/Src/bno055.c ****  *
17349:Core/Src/bno055.c ****  */
17350:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_filter(u8 *gyro_highrate_filter_u8)
17351:Core/Src/bno055.c **** {
 36371              		.loc 1 17351 1 is_stmt 1 view -0
 36372              		.cfi_startproc
 36373              		@ args = 0, pretend = 0, frame = 8
 36374              		@ frame_needed = 0, uses_anonymous_args = 0
 36375              		.loc 1 17351 1 is_stmt 0 view .LVU10198
 36376 0000 30B5     		push	{r4, r5, lr}
 36377              	.LCFI989:
 36378              		.cfi_def_cfa_offset 12
 36379              		.cfi_offset 4, -12
 36380              		.cfi_offset 5, -8
 36381              		.cfi_offset 14, -4
 36382 0002 83B0     		sub	sp, sp, #12
 36383              	.LCFI990:
 36384              		.cfi_def_cfa_offset 24
17352:Core/Src/bno055.c ****     /* Variable used to return value of
17353:Core/Src/bno055.c ****      * communication routine*/
17354:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36385              		.loc 1 17354 5 is_stmt 1 view .LVU10199
 36386              	.LVL4462:
17355:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36387              		.loc 1 17355 5 view .LVU10200
 36388              		.loc 1 17355 8 is_stmt 0 view .LVU10201
 36389 0004 0023     		movs	r3, #0
 36390 0006 8DF80730 		strb	r3, [sp, #7]
17356:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36391              		.loc 1 17356 5 is_stmt 1 view .LVU10202
 36392              	.LVL4463:
17357:Core/Src/bno055.c **** 
17358:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17359:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36393              		.loc 1 17359 5 view .LVU10203
 36394              		.loc 1 17359 18 is_stmt 0 view .LVU10204
 36395 000a 134B     		ldr	r3, .L2572
 36396 000c 1B68     		ldr	r3, [r3]
 36397              		.loc 1 17359 8 view .LVU10205
 36398 000e EBB1     		cbz	r3, .L2568
 36399 0010 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1021


17360:Core/Src/bno055.c ****     {
17361:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17362:Core/Src/bno055.c ****     }
17363:Core/Src/bno055.c ****     else
17364:Core/Src/bno055.c ****     {
17365:Core/Src/bno055.c ****         /*condition check for page, gyro highrate filter is
17366:Core/Src/bno055.c ****          * available in the page one*/
17367:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36400              		.loc 1 17367 9 is_stmt 1 view .LVU10206
 36401              		.loc 1 17367 21 is_stmt 0 view .LVU10207
 36402 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36403              		.loc 1 17367 12 view .LVU10208
 36404 0014 012B     		cmp	r3, #1
 36405 0016 13D1     		bne	.L2571
 36406              	.LVL4464:
 36407              	.L2566:
17368:Core/Src/bno055.c ****         {
17369:Core/Src/bno055.c ****             /* Write page as one */
17370:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17371:Core/Src/bno055.c ****         }
17372:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36408              		.loc 1 17372 53 discriminator 1 view .LVU10209
 36409 0018 0F4B     		ldr	r3, .L2572
 36410 001a 1B68     		ldr	r3, [r3]
 36411 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36412              		.loc 1 17372 41 discriminator 1 view .LVU10210
 36413 001e 012B     		cmp	r3, #1
 36414 0020 17D1     		bne	.L2569
 36415              	.L2567:
17373:Core/Src/bno055.c ****         {
17374:Core/Src/bno055.c ****             /* Read the value of gyro highrate filter */
17375:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36416              		.loc 1 17375 13 is_stmt 1 view .LVU10211
 36417              		.loc 1 17375 32 is_stmt 0 view .LVU10212
 36418 0022 0D4B     		ldr	r3, .L2572
 36419 0024 1868     		ldr	r0, [r3]
 36420 0026 0569     		ldr	r5, [r0, #16]
 36421              		.loc 1 17375 24 view .LVU10213
 36422 0028 0123     		movs	r3, #1
 36423 002a 0DF10702 		add	r2, sp, #7
 36424 002e 1721     		movs	r1, #23
 36425 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36426 0032 A847     		blx	r5
 36427              	.LVL4465:
17376:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_FILTER_REG,
17377:Core/Src/bno055.c ****                                                       &data_u8r,
17378:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17379:Core/Src/bno055.c ****             *gyro_highrate_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER);
 36428              		.loc 1 17379 13 is_stmt 1 view .LVU10214
 36429              		.loc 1 17379 40 is_stmt 0 view .LVU10215
 36430 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36431 0038 DB09     		lsrs	r3, r3, #7
 36432              		.loc 1 17379 38 view .LVU10216
 36433 003a 2370     		strb	r3, [r4]
 36434              	.LVL4466:
 36435              	.L2565:
17380:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1022


17381:Core/Src/bno055.c ****         else
17382:Core/Src/bno055.c ****         {
17383:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17384:Core/Src/bno055.c ****         }
17385:Core/Src/bno055.c ****     }
17386:Core/Src/bno055.c **** 
17387:Core/Src/bno055.c ****     return com_rslt;
17388:Core/Src/bno055.c **** }
 36436              		.loc 1 17388 1 view .LVU10217
 36437 003c 03B0     		add	sp, sp, #12
 36438              	.LCFI991:
 36439              		.cfi_remember_state
 36440              		.cfi_def_cfa_offset 12
 36441              		@ sp needed
 36442 003e 30BD     		pop	{r4, r5, pc}
 36443              	.LVL4467:
 36444              	.L2571:
 36445              	.LCFI992:
 36446              		.cfi_restore_state
17370:Core/Src/bno055.c ****         }
 36447              		.loc 1 17370 13 is_stmt 1 view .LVU10218
17370:Core/Src/bno055.c ****         }
 36448              		.loc 1 17370 23 is_stmt 0 view .LVU10219
 36449 0040 0120     		movs	r0, #1
 36450              	.LVL4468:
17370:Core/Src/bno055.c ****         }
 36451              		.loc 1 17370 23 view .LVU10220
 36452 0042 FFF7FEFF 		bl	bno055_write_page_id
 36453              	.LVL4469:
17372:Core/Src/bno055.c ****         {
 36454              		.loc 1 17372 9 is_stmt 1 view .LVU10221
17372:Core/Src/bno055.c ****         {
 36455              		.loc 1 17372 12 is_stmt 0 view .LVU10222
 36456 0046 0028     		cmp	r0, #0
 36457 0048 EBD0     		beq	.L2567
 36458 004a E5E7     		b	.L2566
 36459              	.LVL4470:
 36460              	.L2568:
17361:Core/Src/bno055.c ****     }
 36461              		.loc 1 17361 16 view .LVU10223
 36462 004c 6FF07E00 		mvn	r0, #126
 36463              	.LVL4471:
17361:Core/Src/bno055.c ****     }
 36464              		.loc 1 17361 16 view .LVU10224
 36465 0050 F4E7     		b	.L2565
 36466              	.LVL4472:
 36467              	.L2569:
17383:Core/Src/bno055.c ****         }
 36468              		.loc 1 17383 22 view .LVU10225
 36469 0052 4FF0FF30 		mov	r0, #-1
 36470 0056 F1E7     		b	.L2565
 36471              	.L2573:
 36472              		.align	2
 36473              	.L2572:
 36474 0058 00000000 		.word	.LANCHOR0
 36475              		.cfi_endproc
 36476              	.LFE249:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1023


 36478              		.section	.text.bno055_set_gyro_highrate_filter,"ax",%progbits
 36479              		.align	1
 36480              		.global	bno055_set_gyro_highrate_filter
 36481              		.syntax unified
 36482              		.thumb
 36483              		.thumb_func
 36485              	bno055_set_gyro_highrate_filter:
 36486              	.LVL4473:
 36487              	.LFB250:
17389:Core/Src/bno055.c **** 
17390:Core/Src/bno055.c **** /*!
17391:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate filter
17392:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17393:Core/Src/bno055.c ****  *
17394:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17395:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17396:Core/Src/bno055.c ****  *  --------------------------- |------------
17397:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17398:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17399:Core/Src/bno055.c ****  *
17400:Core/Src/bno055.c ****  *  @return results of bus communication function
17401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17403:Core/Src/bno055.c ****  *
17404:Core/Src/bno055.c ****  */
17405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_filter(u8 gyro_highrate_filter_u8)
17406:Core/Src/bno055.c **** {
 36488              		.loc 1 17406 1 is_stmt 1 view -0
 36489              		.cfi_startproc
 36490              		@ args = 0, pretend = 0, frame = 8
 36491              		@ frame_needed = 0, uses_anonymous_args = 0
 36492              		.loc 1 17406 1 is_stmt 0 view .LVU10227
 36493 0000 30B5     		push	{r4, r5, lr}
 36494              	.LCFI993:
 36495              		.cfi_def_cfa_offset 12
 36496              		.cfi_offset 4, -12
 36497              		.cfi_offset 5, -8
 36498              		.cfi_offset 14, -4
 36499 0002 83B0     		sub	sp, sp, #12
 36500              	.LCFI994:
 36501              		.cfi_def_cfa_offset 24
17407:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36502              		.loc 1 17407 5 is_stmt 1 view .LVU10228
 36503              	.LVL4474:
17408:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36504              		.loc 1 17408 5 view .LVU10229
 36505              		.loc 1 17408 8 is_stmt 0 view .LVU10230
 36506 0004 0023     		movs	r3, #0
 36507 0006 8DF80730 		strb	r3, [sp, #7]
17409:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36508              		.loc 1 17409 5 is_stmt 1 view .LVU10231
 36509              	.LVL4475:
17410:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36510              		.loc 1 17410 5 view .LVU10232
17411:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36511              		.loc 1 17411 5 view .LVU10233
 36512              		.loc 1 17411 8 is_stmt 0 view .LVU10234
ARM GAS  /tmp/cc9kYR4Z.s 			page 1024


 36513 000a 8DF80630 		strb	r3, [sp, #6]
17412:Core/Src/bno055.c **** 
17413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36514              		.loc 1 17414 5 is_stmt 1 view .LVU10235
 36515              		.loc 1 17414 18 is_stmt 0 view .LVU10236
 36516 000e 284B     		ldr	r3, .L2586
 36517 0010 1B68     		ldr	r3, [r3]
 36518              		.loc 1 17414 8 view .LVU10237
 36519 0012 002B     		cmp	r3, #0
 36520 0014 48D0     		beq	.L2578
 36521 0016 0546     		mov	r5, r0
17415:Core/Src/bno055.c ****     {
17416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17417:Core/Src/bno055.c ****     }
17418:Core/Src/bno055.c ****     else
17419:Core/Src/bno055.c ****     {
17420:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17421:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17422:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17423:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36522              		.loc 1 17423 9 is_stmt 1 view .LVU10238
 36523              		.loc 1 17423 19 is_stmt 0 view .LVU10239
 36524 0018 0DF10600 		add	r0, sp, #6
 36525              	.LVL4476:
 36526              		.loc 1 17423 19 view .LVU10240
 36527 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36528              	.LVL4477:
17424:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36529              		.loc 1 17424 9 is_stmt 1 view .LVU10241
 36530              		.loc 1 17424 12 is_stmt 0 view .LVU10242
 36531 0020 0446     		mov	r4, r0
 36532 0022 80BB     		cbnz	r0, .L2579
17425:Core/Src/bno055.c ****         {
17426:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36533              		.loc 1 17426 13 is_stmt 1 view .LVU10243
 36534              		.loc 1 17426 32 is_stmt 0 view .LVU10244
 36535 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36536              		.loc 1 17426 16 view .LVU10245
 36537 0028 1BB9     		cbnz	r3, .L2583
 36538              	.LVL4478:
 36539              	.L2577:
17427:Core/Src/bno055.c ****             {
17428:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17429:Core/Src/bno055.c ****             }
17430:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36540              		.loc 1 17430 13 is_stmt 1 view .LVU10246
 36541              		.loc 1 17430 16 is_stmt 0 view .LVU10247
 36542 002a 44B1     		cbz	r4, .L2584
17431:Core/Src/bno055.c ****             {
17432:Core/Src/bno055.c ****                 /* Write page as one */
17433:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17434:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17435:Core/Src/bno055.c ****                 {
17436:Core/Src/bno055.c ****                     /* Write the value of
17437:Core/Src/bno055.c ****                      * gyro highrate filter*/
17438:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/cc9kYR4Z.s 			page 1025


17439:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
17440:Core/Src/bno055.c ****                                                               &data_u8r,
17441:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17442:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17443:Core/Src/bno055.c ****                     {
17444:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER, gyro_
17445:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17446:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
17447:Core/Src/bno055.c ****                                                                     &data_u8r,
17448:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17449:Core/Src/bno055.c ****                     }
17450:Core/Src/bno055.c ****                 }
17451:Core/Src/bno055.c ****                 else
17452:Core/Src/bno055.c ****                 {
17453:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17454:Core/Src/bno055.c ****                 }
17455:Core/Src/bno055.c ****             }
17456:Core/Src/bno055.c ****             else
17457:Core/Src/bno055.c ****             {
17458:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36543              		.loc 1 17458 26 view .LVU10248
 36544 002c 4FF0FF34 		mov	r4, #-1
 36545              	.LVL4479:
 36546              		.loc 1 17458 26 view .LVU10249
 36547 0030 2BE0     		b	.L2576
 36548              	.LVL4480:
 36549              	.L2583:
17428:Core/Src/bno055.c ****             }
 36550              		.loc 1 17428 17 is_stmt 1 view .LVU10250
17428:Core/Src/bno055.c ****             }
 36551              		.loc 1 17428 28 is_stmt 0 view .LVU10251
 36552 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36553              	.LVL4481:
17428:Core/Src/bno055.c ****             }
 36554              		.loc 1 17428 25 view .LVU10252
 36555 0036 54FA80F4 		uxtab	r4, r4, r0
 36556 003a 64B2     		sxtb	r4, r4
 36557              	.LVL4482:
17428:Core/Src/bno055.c ****             }
 36558              		.loc 1 17428 25 view .LVU10253
 36559 003c F5E7     		b	.L2577
 36560              	.L2584:
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36561              		.loc 1 17433 17 is_stmt 1 view .LVU10254
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36562              		.loc 1 17433 30 is_stmt 0 view .LVU10255
 36563 003e 0120     		movs	r0, #1
 36564 0040 FFF7FEFF 		bl	bno055_write_page_id
 36565              	.LVL4483:
17434:Core/Src/bno055.c ****                 {
 36566              		.loc 1 17434 17 is_stmt 1 view .LVU10256
17434:Core/Src/bno055.c ****                 {
 36567              		.loc 1 17434 20 is_stmt 0 view .LVU10257
 36568 0044 38BB     		cbnz	r0, .L2581
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36569              		.loc 1 17438 21 is_stmt 1 view .LVU10258
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
ARM GAS  /tmp/cc9kYR4Z.s 			page 1026


 36570              		.loc 1 17438 40 is_stmt 0 view .LVU10259
 36571 0046 1A4B     		ldr	r3, .L2586
 36572 0048 1868     		ldr	r0, [r3]
 36573              	.LVL4484:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36574              		.loc 1 17438 40 view .LVU10260
 36575 004a 0469     		ldr	r4, [r0, #16]
 36576              	.LVL4485:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36577              		.loc 1 17438 32 view .LVU10261
 36578 004c 0123     		movs	r3, #1
 36579 004e 0DF10702 		add	r2, sp, #7
 36580 0052 1721     		movs	r1, #23
 36581 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36582 0056 A047     		blx	r4
 36583              	.LVL4486:
17442:Core/Src/bno055.c ****                     {
 36584              		.loc 1 17442 21 is_stmt 1 view .LVU10262
17442:Core/Src/bno055.c ****                     {
 36585              		.loc 1 17442 24 is_stmt 0 view .LVU10263
 36586 0058 0446     		mov	r4, r0
 36587 005a B0B9     		cbnz	r0, .L2576
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36588              		.loc 1 17444 25 is_stmt 1 view .LVU10264
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36589              		.loc 1 17444 36 is_stmt 0 view .LVU10265
 36590 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36591 0060 03F07F03 		and	r3, r3, #127
 36592 0064 43EAC513 		orr	r3, r3, r5, lsl #7
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36593              		.loc 1 17444 34 view .LVU10266
 36594 0068 8DF80730 		strb	r3, [sp, #7]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36595              		.loc 1 17445 25 is_stmt 1 view .LVU10267
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36596              		.loc 1 17445 45 is_stmt 0 view .LVU10268
 36597 006c 104B     		ldr	r3, .L2586
 36598 006e 1868     		ldr	r0, [r3]
 36599              	.LVL4487:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36600              		.loc 1 17445 45 view .LVU10269
 36601 0070 C568     		ldr	r5, [r0, #12]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36602              		.loc 1 17445 37 view .LVU10270
 36603 0072 0123     		movs	r3, #1
 36604 0074 0DF10702 		add	r2, sp, #7
 36605 0078 1721     		movs	r1, #23
 36606 007a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36607 007c A847     		blx	r5
 36608              	.LVL4488:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36609              		.loc 1 17445 34 view .LVU10271
 36610 007e 54FA80F0 		uxtab	r0, r4, r0
 36611 0082 44B2     		sxtb	r4, r0
 36612              	.LVL4489:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36613              		.loc 1 17445 34 view .LVU10272
ARM GAS  /tmp/cc9kYR4Z.s 			page 1027


 36614 0084 01E0     		b	.L2576
 36615              	.LVL4490:
 36616              	.L2579:
17459:Core/Src/bno055.c ****             }
17460:Core/Src/bno055.c ****         }
17461:Core/Src/bno055.c ****         else
17462:Core/Src/bno055.c ****         {
17463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36617              		.loc 1 17463 22 view .LVU10273
 36618 0086 4FF0FF34 		mov	r4, #-1
 36619              	.LVL4491:
 36620              	.L2576:
17464:Core/Src/bno055.c ****         }
17465:Core/Src/bno055.c ****     }
17466:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36621              		.loc 1 17466 5 is_stmt 1 view .LVU10274
 36622              		.loc 1 17466 24 is_stmt 0 view .LVU10275
 36623 008a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36624              		.loc 1 17466 8 view .LVU10276
 36625 008e 28B9     		cbnz	r0, .L2585
 36626              	.LVL4492:
 36627              	.L2575:
17467:Core/Src/bno055.c ****     {
17468:Core/Src/bno055.c ****         /* set the operation mode of
17469:Core/Src/bno055.c ****          * previous operation mode*/
17470:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17471:Core/Src/bno055.c ****     }
17472:Core/Src/bno055.c **** 
17473:Core/Src/bno055.c ****     return com_rslt;
17474:Core/Src/bno055.c **** }
 36628              		.loc 1 17474 1 view .LVU10277
 36629 0090 2046     		mov	r0, r4
 36630 0092 03B0     		add	sp, sp, #12
 36631              	.LCFI995:
 36632              		.cfi_remember_state
 36633              		.cfi_def_cfa_offset 12
 36634              		@ sp needed
 36635 0094 30BD     		pop	{r4, r5, pc}
 36636              	.LVL4493:
 36637              	.L2581:
 36638              	.LCFI996:
 36639              		.cfi_restore_state
17453:Core/Src/bno055.c ****                 }
 36640              		.loc 1 17453 30 view .LVU10278
 36641 0096 4FF0FF34 		mov	r4, #-1
 36642              	.LVL4494:
17453:Core/Src/bno055.c ****                 }
 36643              		.loc 1 17453 30 view .LVU10279
 36644 009a F6E7     		b	.L2576
 36645              	.LVL4495:
 36646              	.L2585:
17470:Core/Src/bno055.c ****     }
 36647              		.loc 1 17470 9 is_stmt 1 view .LVU10280
17470:Core/Src/bno055.c ****     }
 36648              		.loc 1 17470 21 is_stmt 0 view .LVU10281
 36649 009c FFF7FEFF 		bl	bno055_set_operation_mode
 36650              	.LVL4496:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1028


17470:Core/Src/bno055.c ****     }
 36651              		.loc 1 17470 18 view .LVU10282
 36652 00a0 54FA80F0 		uxtab	r0, r4, r0
 36653 00a4 44B2     		sxtb	r4, r0
 36654              	.LVL4497:
17470:Core/Src/bno055.c ****     }
 36655              		.loc 1 17470 18 view .LVU10283
 36656 00a6 F3E7     		b	.L2575
 36657              	.LVL4498:
 36658              	.L2578:
17416:Core/Src/bno055.c ****     }
 36659              		.loc 1 17416 16 view .LVU10284
 36660 00a8 6FF07E04 		mvn	r4, #126
 36661 00ac F0E7     		b	.L2575
 36662              	.L2587:
 36663 00ae 00BF     		.align	2
 36664              	.L2586:
 36665 00b0 00000000 		.word	.LANCHOR0
 36666              		.cfi_endproc
 36667              	.LFE250:
 36669              		.section	.text.bno055_get_gyro_highrate_x_thres,"ax",%progbits
 36670              		.align	1
 36671              		.global	bno055_get_gyro_highrate_x_thres
 36672              		.syntax unified
 36673              		.thumb
 36674              		.thumb_func
 36676              	bno055_get_gyro_highrate_x_thres:
 36677              	.LVL4499:
 36678              	.LFB251:
17475:Core/Src/bno055.c **** 
17476:Core/Src/bno055.c **** /*!
17477:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x threshold
17478:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17479:Core/Src/bno055.c ****  *
17480:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17481:Core/Src/bno055.c ****  *
17482:Core/Src/bno055.c ****  *  @return results of bus communication function
17483:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17484:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17485:Core/Src/bno055.c ****  *
17486:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17487:Core/Src/bno055.c ****  *  selection of gyro range
17488:Core/Src/bno055.c ****  *
17489:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17490:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17491:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17492:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17493:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17494:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17495:Core/Src/bno055.c ****  *
17496:Core/Src/bno055.c ****  */
17497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_thres(u8 *gyro_highrate_x_thres_u8)
17498:Core/Src/bno055.c **** {
 36679              		.loc 1 17498 1 is_stmt 1 view -0
 36680              		.cfi_startproc
 36681              		@ args = 0, pretend = 0, frame = 8
 36682              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1029


 36683              		.loc 1 17498 1 is_stmt 0 view .LVU10286
 36684 0000 30B5     		push	{r4, r5, lr}
 36685              	.LCFI997:
 36686              		.cfi_def_cfa_offset 12
 36687              		.cfi_offset 4, -12
 36688              		.cfi_offset 5, -8
 36689              		.cfi_offset 14, -4
 36690 0002 83B0     		sub	sp, sp, #12
 36691              	.LCFI998:
 36692              		.cfi_def_cfa_offset 24
17499:Core/Src/bno055.c ****     /* Variable used to return value of
17500:Core/Src/bno055.c ****      * communication routine*/
17501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36693              		.loc 1 17501 5 is_stmt 1 view .LVU10287
 36694              	.LVL4500:
17502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36695              		.loc 1 17502 5 view .LVU10288
 36696              		.loc 1 17502 8 is_stmt 0 view .LVU10289
 36697 0004 0023     		movs	r3, #0
 36698 0006 8DF80730 		strb	r3, [sp, #7]
17503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36699              		.loc 1 17503 5 is_stmt 1 view .LVU10290
 36700              	.LVL4501:
17504:Core/Src/bno055.c **** 
17505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36701              		.loc 1 17506 5 view .LVU10291
 36702              		.loc 1 17506 18 is_stmt 0 view .LVU10292
 36703 000a 144B     		ldr	r3, .L2596
 36704 000c 1B68     		ldr	r3, [r3]
 36705              		.loc 1 17506 8 view .LVU10293
 36706 000e F3B1     		cbz	r3, .L2592
 36707 0010 0446     		mov	r4, r0
17507:Core/Src/bno055.c ****     {
17508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17509:Core/Src/bno055.c ****     }
17510:Core/Src/bno055.c ****     else
17511:Core/Src/bno055.c ****     {
17512:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x threshold is
17513:Core/Src/bno055.c ****          * available in the page one*/
17514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36708              		.loc 1 17514 9 is_stmt 1 view .LVU10294
 36709              		.loc 1 17514 21 is_stmt 0 view .LVU10295
 36710 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36711              		.loc 1 17514 12 view .LVU10296
 36712 0014 012B     		cmp	r3, #1
 36713 0016 14D1     		bne	.L2595
 36714              	.LVL4502:
 36715              	.L2590:
17515:Core/Src/bno055.c ****         {
17516:Core/Src/bno055.c ****             /* Write page as one */
17517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17518:Core/Src/bno055.c ****         }
17519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36716              		.loc 1 17519 53 discriminator 1 view .LVU10297
 36717 0018 104B     		ldr	r3, .L2596
 36718 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 1030


 36719 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36720              		.loc 1 17519 41 discriminator 1 view .LVU10298
 36721 001e 012B     		cmp	r3, #1
 36722 0020 18D1     		bne	.L2593
 36723              	.L2591:
17520:Core/Src/bno055.c ****         {
17521:Core/Src/bno055.c ****             /* Read the value of gyro highrate threshold*/
17522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36724              		.loc 1 17522 13 is_stmt 1 view .LVU10299
 36725              		.loc 1 17522 32 is_stmt 0 view .LVU10300
 36726 0022 0E4B     		ldr	r3, .L2596
 36727 0024 1868     		ldr	r0, [r3]
 36728 0026 0569     		ldr	r5, [r0, #16]
 36729              		.loc 1 17522 24 view .LVU10301
 36730 0028 0123     		movs	r3, #1
 36731 002a 0DF10702 		add	r2, sp, #7
 36732 002e 1821     		movs	r1, #24
 36733 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36734 0032 A847     		blx	r5
 36735              	.LVL4503:
17523:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_THRES_REG,
17524:Core/Src/bno055.c ****                                                       &data_u8r,
17525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17526:Core/Src/bno055.c ****             *gyro_highrate_x_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES)
 36736              		.loc 1 17526 13 is_stmt 1 view .LVU10302
 36737              		.loc 1 17526 41 is_stmt 0 view .LVU10303
 36738 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36739 0038 03F01F03 		and	r3, r3, #31
 36740              		.loc 1 17526 39 view .LVU10304
 36741 003c 2370     		strb	r3, [r4]
 36742              	.LVL4504:
 36743              	.L2589:
17527:Core/Src/bno055.c ****         }
17528:Core/Src/bno055.c ****         else
17529:Core/Src/bno055.c ****         {
17530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17531:Core/Src/bno055.c ****         }
17532:Core/Src/bno055.c ****     }
17533:Core/Src/bno055.c **** 
17534:Core/Src/bno055.c ****     return com_rslt;
17535:Core/Src/bno055.c **** }
 36744              		.loc 1 17535 1 view .LVU10305
 36745 003e 03B0     		add	sp, sp, #12
 36746              	.LCFI999:
 36747              		.cfi_remember_state
 36748              		.cfi_def_cfa_offset 12
 36749              		@ sp needed
 36750 0040 30BD     		pop	{r4, r5, pc}
 36751              	.LVL4505:
 36752              	.L2595:
 36753              	.LCFI1000:
 36754              		.cfi_restore_state
17517:Core/Src/bno055.c ****         }
 36755              		.loc 1 17517 13 is_stmt 1 view .LVU10306
17517:Core/Src/bno055.c ****         }
 36756              		.loc 1 17517 23 is_stmt 0 view .LVU10307
 36757 0042 0120     		movs	r0, #1
ARM GAS  /tmp/cc9kYR4Z.s 			page 1031


 36758              	.LVL4506:
17517:Core/Src/bno055.c ****         }
 36759              		.loc 1 17517 23 view .LVU10308
 36760 0044 FFF7FEFF 		bl	bno055_write_page_id
 36761              	.LVL4507:
17519:Core/Src/bno055.c ****         {
 36762              		.loc 1 17519 9 is_stmt 1 view .LVU10309
17519:Core/Src/bno055.c ****         {
 36763              		.loc 1 17519 12 is_stmt 0 view .LVU10310
 36764 0048 0028     		cmp	r0, #0
 36765 004a EAD0     		beq	.L2591
 36766 004c E4E7     		b	.L2590
 36767              	.LVL4508:
 36768              	.L2592:
17508:Core/Src/bno055.c ****     }
 36769              		.loc 1 17508 16 view .LVU10311
 36770 004e 6FF07E00 		mvn	r0, #126
 36771              	.LVL4509:
17508:Core/Src/bno055.c ****     }
 36772              		.loc 1 17508 16 view .LVU10312
 36773 0052 F4E7     		b	.L2589
 36774              	.LVL4510:
 36775              	.L2593:
17530:Core/Src/bno055.c ****         }
 36776              		.loc 1 17530 22 view .LVU10313
 36777 0054 4FF0FF30 		mov	r0, #-1
 36778 0058 F1E7     		b	.L2589
 36779              	.L2597:
 36780 005a 00BF     		.align	2
 36781              	.L2596:
 36782 005c 00000000 		.word	.LANCHOR0
 36783              		.cfi_endproc
 36784              	.LFE251:
 36786              		.section	.text.bno055_set_gyro_highrate_x_thres,"ax",%progbits
 36787              		.align	1
 36788              		.global	bno055_set_gyro_highrate_x_thres
 36789              		.syntax unified
 36790              		.thumb
 36791              		.thumb_func
 36793              	bno055_set_gyro_highrate_x_thres:
 36794              	.LVL4511:
 36795              	.LFB252:
17536:Core/Src/bno055.c **** 
17537:Core/Src/bno055.c **** /*!
17538:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x threshold
17539:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17540:Core/Src/bno055.c ****  *
17541:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17542:Core/Src/bno055.c ****  *
17543:Core/Src/bno055.c ****  *  @return results of bus communication function
17544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17546:Core/Src/bno055.c ****  *
17547:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17548:Core/Src/bno055.c ****  *  selection of gyro range
17549:Core/Src/bno055.c ****  *
17550:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 1032


17551:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17552:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17553:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17554:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17555:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17556:Core/Src/bno055.c ****  *
17557:Core/Src/bno055.c ****  */
17558:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_thres(u8 gyro_highrate_x_thres_u8)
17559:Core/Src/bno055.c **** {
 36796              		.loc 1 17559 1 is_stmt 1 view -0
 36797              		.cfi_startproc
 36798              		@ args = 0, pretend = 0, frame = 8
 36799              		@ frame_needed = 0, uses_anonymous_args = 0
 36800              		.loc 1 17559 1 is_stmt 0 view .LVU10315
 36801 0000 30B5     		push	{r4, r5, lr}
 36802              	.LCFI1001:
 36803              		.cfi_def_cfa_offset 12
 36804              		.cfi_offset 4, -12
 36805              		.cfi_offset 5, -8
 36806              		.cfi_offset 14, -4
 36807 0002 83B0     		sub	sp, sp, #12
 36808              	.LCFI1002:
 36809              		.cfi_def_cfa_offset 24
17560:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36810              		.loc 1 17560 5 is_stmt 1 view .LVU10316
 36811              	.LVL4512:
17561:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36812              		.loc 1 17561 5 view .LVU10317
 36813              		.loc 1 17561 8 is_stmt 0 view .LVU10318
 36814 0004 0023     		movs	r3, #0
 36815 0006 8DF80730 		strb	r3, [sp, #7]
17562:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36816              		.loc 1 17562 5 is_stmt 1 view .LVU10319
 36817              	.LVL4513:
17563:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36818              		.loc 1 17563 5 view .LVU10320
 36819              		.loc 1 17563 8 is_stmt 0 view .LVU10321
 36820 000a 8DF80630 		strb	r3, [sp, #6]
17564:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36821              		.loc 1 17564 5 is_stmt 1 view .LVU10322
 36822              	.LVL4514:
17565:Core/Src/bno055.c **** 
17566:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17567:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36823              		.loc 1 17567 5 view .LVU10323
 36824              		.loc 1 17567 18 is_stmt 0 view .LVU10324
 36825 000e 294B     		ldr	r3, .L2610
 36826 0010 1B68     		ldr	r3, [r3]
 36827              		.loc 1 17567 8 view .LVU10325
 36828 0012 002B     		cmp	r3, #0
 36829 0014 4AD0     		beq	.L2602
 36830 0016 0546     		mov	r5, r0
17568:Core/Src/bno055.c ****     {
17569:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17570:Core/Src/bno055.c ****     }
17571:Core/Src/bno055.c ****     else
17572:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1033


17573:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17574:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17575:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17576:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36831              		.loc 1 17576 9 is_stmt 1 view .LVU10326
 36832              		.loc 1 17576 19 is_stmt 0 view .LVU10327
 36833 0018 0DF10600 		add	r0, sp, #6
 36834              	.LVL4515:
 36835              		.loc 1 17576 19 view .LVU10328
 36836 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36837              	.LVL4516:
17577:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36838              		.loc 1 17577 9 is_stmt 1 view .LVU10329
 36839              		.loc 1 17577 12 is_stmt 0 view .LVU10330
 36840 0020 0446     		mov	r4, r0
 36841 0022 90BB     		cbnz	r0, .L2603
17578:Core/Src/bno055.c ****         {
17579:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36842              		.loc 1 17579 13 is_stmt 1 view .LVU10331
 36843              		.loc 1 17579 32 is_stmt 0 view .LVU10332
 36844 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36845              		.loc 1 17579 16 view .LVU10333
 36846 0028 1BB9     		cbnz	r3, .L2607
 36847              	.LVL4517:
 36848              	.L2601:
17580:Core/Src/bno055.c ****             {
17581:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17582:Core/Src/bno055.c ****             }
17583:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36849              		.loc 1 17583 13 is_stmt 1 view .LVU10334
 36850              		.loc 1 17583 16 is_stmt 0 view .LVU10335
 36851 002a 44B1     		cbz	r4, .L2608
17584:Core/Src/bno055.c ****             {
17585:Core/Src/bno055.c ****                 /* Write page as one */
17586:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17587:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17588:Core/Src/bno055.c ****                 {
17589:Core/Src/bno055.c ****                     /* Write the value of
17590:Core/Src/bno055.c ****                      * gyro highrate x threshold*/
17591:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17592:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
17593:Core/Src/bno055.c ****                                                               &data_u8r,
17594:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17595:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17596:Core/Src/bno055.c ****                     {
17597:Core/Src/bno055.c ****                         data_u8r =
17598:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
17599:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17600:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
17601:Core/Src/bno055.c ****                                                                     &data_u8r,
17602:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17603:Core/Src/bno055.c ****                     }
17604:Core/Src/bno055.c ****                 }
17605:Core/Src/bno055.c ****                 else
17606:Core/Src/bno055.c ****                 {
17607:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17608:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1034


17609:Core/Src/bno055.c ****             }
17610:Core/Src/bno055.c ****             else
17611:Core/Src/bno055.c ****             {
17612:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36852              		.loc 1 17612 26 view .LVU10336
 36853 002c 4FF0FF34 		mov	r4, #-1
 36854              	.LVL4518:
 36855              		.loc 1 17612 26 view .LVU10337
 36856 0030 2DE0     		b	.L2600
 36857              	.LVL4519:
 36858              	.L2607:
17581:Core/Src/bno055.c ****             }
 36859              		.loc 1 17581 17 is_stmt 1 view .LVU10338
17581:Core/Src/bno055.c ****             }
 36860              		.loc 1 17581 28 is_stmt 0 view .LVU10339
 36861 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36862              	.LVL4520:
17581:Core/Src/bno055.c ****             }
 36863              		.loc 1 17581 25 view .LVU10340
 36864 0036 54FA80F4 		uxtab	r4, r4, r0
 36865 003a 64B2     		sxtb	r4, r4
 36866              	.LVL4521:
17581:Core/Src/bno055.c ****             }
 36867              		.loc 1 17581 25 view .LVU10341
 36868 003c F5E7     		b	.L2601
 36869              	.L2608:
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36870              		.loc 1 17586 17 is_stmt 1 view .LVU10342
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36871              		.loc 1 17586 30 is_stmt 0 view .LVU10343
 36872 003e 0120     		movs	r0, #1
 36873 0040 FFF7FEFF 		bl	bno055_write_page_id
 36874              	.LVL4522:
17587:Core/Src/bno055.c ****                 {
 36875              		.loc 1 17587 17 is_stmt 1 view .LVU10344
17587:Core/Src/bno055.c ****                 {
 36876              		.loc 1 17587 20 is_stmt 0 view .LVU10345
 36877 0044 48BB     		cbnz	r0, .L2605
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 36878              		.loc 1 17591 21 is_stmt 1 view .LVU10346
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 36879              		.loc 1 17591 40 is_stmt 0 view .LVU10347
 36880 0046 1B4B     		ldr	r3, .L2610
 36881 0048 1868     		ldr	r0, [r3]
 36882              	.LVL4523:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 36883              		.loc 1 17591 40 view .LVU10348
 36884 004a 0469     		ldr	r4, [r0, #16]
 36885              	.LVL4524:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 36886              		.loc 1 17591 32 view .LVU10349
 36887 004c 0123     		movs	r3, #1
 36888 004e 0DF10702 		add	r2, sp, #7
 36889 0052 1821     		movs	r1, #24
 36890 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36891 0056 A047     		blx	r4
 36892              	.LVL4525:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1035


17595:Core/Src/bno055.c ****                     {
 36893              		.loc 1 17595 21 is_stmt 1 view .LVU10350
17595:Core/Src/bno055.c ****                     {
 36894              		.loc 1 17595 24 is_stmt 0 view .LVU10351
 36895 0058 0446     		mov	r4, r0
 36896 005a C0B9     		cbnz	r0, .L2600
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 36897              		.loc 1 17597 25 is_stmt 1 view .LVU10352
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36898              		.loc 1 17598 29 is_stmt 0 view .LVU10353
 36899 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36900 0060 23F01F03 		bic	r3, r3, #31
 36901 0064 5BB2     		sxtb	r3, r3
 36902 0066 05F01F00 		and	r0, r5, #31
 36903              	.LVL4526:
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36904              		.loc 1 17598 29 view .LVU10354
 36905 006a 0343     		orrs	r3, r3, r0
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 36906              		.loc 1 17597 34 view .LVU10355
 36907 006c 8DF80730 		strb	r3, [sp, #7]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 36908              		.loc 1 17599 25 is_stmt 1 view .LVU10356
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 36909              		.loc 1 17599 45 is_stmt 0 view .LVU10357
 36910 0070 104B     		ldr	r3, .L2610
 36911 0072 1868     		ldr	r0, [r3]
 36912 0074 C568     		ldr	r5, [r0, #12]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 36913              		.loc 1 17599 37 view .LVU10358
 36914 0076 0123     		movs	r3, #1
 36915 0078 0DF10702 		add	r2, sp, #7
 36916 007c 1821     		movs	r1, #24
 36917 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36918 0080 A847     		blx	r5
 36919              	.LVL4527:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 36920              		.loc 1 17599 34 view .LVU10359
 36921 0082 54FA80F0 		uxtab	r0, r4, r0
 36922 0086 44B2     		sxtb	r4, r0
 36923              	.LVL4528:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 36924              		.loc 1 17599 34 view .LVU10360
 36925 0088 01E0     		b	.L2600
 36926              	.LVL4529:
 36927              	.L2603:
17613:Core/Src/bno055.c ****             }
17614:Core/Src/bno055.c ****         }
17615:Core/Src/bno055.c ****         else
17616:Core/Src/bno055.c ****         {
17617:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36928              		.loc 1 17617 22 view .LVU10361
 36929 008a 4FF0FF34 		mov	r4, #-1
 36930              	.LVL4530:
 36931              	.L2600:
17618:Core/Src/bno055.c ****         }
17619:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1036


17620:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36932              		.loc 1 17620 5 is_stmt 1 view .LVU10362
 36933              		.loc 1 17620 24 is_stmt 0 view .LVU10363
 36934 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36935              		.loc 1 17620 8 view .LVU10364
 36936 0092 28B9     		cbnz	r0, .L2609
 36937              	.LVL4531:
 36938              	.L2599:
17621:Core/Src/bno055.c ****     {
17622:Core/Src/bno055.c ****         /* set the operation mode of
17623:Core/Src/bno055.c ****          * previous operation mode*/
17624:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17625:Core/Src/bno055.c ****     }
17626:Core/Src/bno055.c **** 
17627:Core/Src/bno055.c ****     return com_rslt;
17628:Core/Src/bno055.c **** }
 36939              		.loc 1 17628 1 view .LVU10365
 36940 0094 2046     		mov	r0, r4
 36941 0096 03B0     		add	sp, sp, #12
 36942              	.LCFI1003:
 36943              		.cfi_remember_state
 36944              		.cfi_def_cfa_offset 12
 36945              		@ sp needed
 36946 0098 30BD     		pop	{r4, r5, pc}
 36947              	.LVL4532:
 36948              	.L2605:
 36949              	.LCFI1004:
 36950              		.cfi_restore_state
17607:Core/Src/bno055.c ****                 }
 36951              		.loc 1 17607 30 view .LVU10366
 36952 009a 4FF0FF34 		mov	r4, #-1
 36953              	.LVL4533:
17607:Core/Src/bno055.c ****                 }
 36954              		.loc 1 17607 30 view .LVU10367
 36955 009e F6E7     		b	.L2600
 36956              	.LVL4534:
 36957              	.L2609:
17624:Core/Src/bno055.c ****     }
 36958              		.loc 1 17624 9 is_stmt 1 view .LVU10368
17624:Core/Src/bno055.c ****     }
 36959              		.loc 1 17624 21 is_stmt 0 view .LVU10369
 36960 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 36961              	.LVL4535:
17624:Core/Src/bno055.c ****     }
 36962              		.loc 1 17624 18 view .LVU10370
 36963 00a4 54FA80F0 		uxtab	r0, r4, r0
 36964 00a8 44B2     		sxtb	r4, r0
 36965              	.LVL4536:
17624:Core/Src/bno055.c ****     }
 36966              		.loc 1 17624 18 view .LVU10371
 36967 00aa F3E7     		b	.L2599
 36968              	.LVL4537:
 36969              	.L2602:
17569:Core/Src/bno055.c ****     }
 36970              		.loc 1 17569 16 view .LVU10372
 36971 00ac 6FF07E04 		mvn	r4, #126
 36972 00b0 F0E7     		b	.L2599
ARM GAS  /tmp/cc9kYR4Z.s 			page 1037


 36973              	.L2611:
 36974 00b2 00BF     		.align	2
 36975              	.L2610:
 36976 00b4 00000000 		.word	.LANCHOR0
 36977              		.cfi_endproc
 36978              	.LFE252:
 36980              		.section	.text.bno055_get_gyro_highrate_x_hyst,"ax",%progbits
 36981              		.align	1
 36982              		.global	bno055_get_gyro_highrate_x_hyst
 36983              		.syntax unified
 36984              		.thumb
 36985              		.thumb_func
 36987              	bno055_get_gyro_highrate_x_hyst:
 36988              	.LVL4538:
 36989              	.LFB253:
17629:Core/Src/bno055.c **** 
17630:Core/Src/bno055.c **** /*!
17631:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x hysteresis
17632:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17633:Core/Src/bno055.c ****  *
17634:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17635:Core/Src/bno055.c ****  *
17636:Core/Src/bno055.c ****  *  @return results of bus communication function
17637:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17638:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17639:Core/Src/bno055.c ****  *
17640:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17641:Core/Src/bno055.c ****  *
17642:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17643:Core/Src/bno055.c ****  *
17644:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17645:Core/Src/bno055.c ****  *
17646:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17647:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17648:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17649:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17650:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17651:Core/Src/bno055.c ****  *
17652:Core/Src/bno055.c ****  */
17653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_hyst(u8 *gyro_highrate_x_hyst_u8)
17654:Core/Src/bno055.c **** {
 36990              		.loc 1 17654 1 is_stmt 1 view -0
 36991              		.cfi_startproc
 36992              		@ args = 0, pretend = 0, frame = 8
 36993              		@ frame_needed = 0, uses_anonymous_args = 0
 36994              		.loc 1 17654 1 is_stmt 0 view .LVU10374
 36995 0000 30B5     		push	{r4, r5, lr}
 36996              	.LCFI1005:
 36997              		.cfi_def_cfa_offset 12
 36998              		.cfi_offset 4, -12
 36999              		.cfi_offset 5, -8
 37000              		.cfi_offset 14, -4
 37001 0002 83B0     		sub	sp, sp, #12
 37002              	.LCFI1006:
 37003              		.cfi_def_cfa_offset 24
17655:Core/Src/bno055.c ****     /* Variable used to return value of
17656:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 1038


17657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37004              		.loc 1 17657 5 is_stmt 1 view .LVU10375
 37005              	.LVL4539:
17658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37006              		.loc 1 17658 5 view .LVU10376
 37007              		.loc 1 17658 8 is_stmt 0 view .LVU10377
 37008 0004 0023     		movs	r3, #0
 37009 0006 8DF80730 		strb	r3, [sp, #7]
17659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37010              		.loc 1 17659 5 is_stmt 1 view .LVU10378
 37011              	.LVL4540:
17660:Core/Src/bno055.c **** 
17661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37012              		.loc 1 17662 5 view .LVU10379
 37013              		.loc 1 17662 18 is_stmt 0 view .LVU10380
 37014 000a 144B     		ldr	r3, .L2620
 37015 000c 1B68     		ldr	r3, [r3]
 37016              		.loc 1 17662 8 view .LVU10381
 37017 000e F3B1     		cbz	r3, .L2616
 37018 0010 0446     		mov	r4, r0
17663:Core/Src/bno055.c ****     {
17664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17665:Core/Src/bno055.c ****     }
17666:Core/Src/bno055.c ****     else
17667:Core/Src/bno055.c ****     {
17668:Core/Src/bno055.c ****         /*condition check for page,gyro highrate x hysteresis is
17669:Core/Src/bno055.c ****          * available in the page one*/
17670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37019              		.loc 1 17670 9 is_stmt 1 view .LVU10382
 37020              		.loc 1 17670 21 is_stmt 0 view .LVU10383
 37021 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37022              		.loc 1 17670 12 view .LVU10384
 37023 0014 012B     		cmp	r3, #1
 37024 0016 14D1     		bne	.L2619
 37025              	.LVL4541:
 37026              	.L2614:
17671:Core/Src/bno055.c ****         {
17672:Core/Src/bno055.c ****             /* Write page as one */
17673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17674:Core/Src/bno055.c ****         }
17675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37027              		.loc 1 17675 53 discriminator 1 view .LVU10385
 37028 0018 104B     		ldr	r3, .L2620
 37029 001a 1B68     		ldr	r3, [r3]
 37030 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37031              		.loc 1 17675 41 discriminator 1 view .LVU10386
 37032 001e 012B     		cmp	r3, #1
 37033 0020 18D1     		bne	.L2617
 37034              	.L2615:
17676:Core/Src/bno055.c ****         {
17677:Core/Src/bno055.c ****             /* Read the value of gyro highrate x hysteresis*/
17678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37035              		.loc 1 17678 13 is_stmt 1 view .LVU10387
 37036              		.loc 1 17678 32 is_stmt 0 view .LVU10388
 37037 0022 0E4B     		ldr	r3, .L2620
 37038 0024 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 1039


 37039 0026 0569     		ldr	r5, [r0, #16]
 37040              		.loc 1 17678 24 view .LVU10389
 37041 0028 0123     		movs	r3, #1
 37042 002a 0DF10702 		add	r2, sp, #7
 37043 002e 1821     		movs	r1, #24
 37044 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37045 0032 A847     		blx	r5
 37046              	.LVL4542:
17679:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_HYST_REG,
17680:Core/Src/bno055.c ****                                                       &data_u8r,
17681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17682:Core/Src/bno055.c ****             *gyro_highrate_x_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST);
 37047              		.loc 1 17682 13 is_stmt 1 view .LVU10390
 37048              		.loc 1 17682 40 is_stmt 0 view .LVU10391
 37049 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37050 0038 C3F34113 		ubfx	r3, r3, #5, #2
 37051              		.loc 1 17682 38 view .LVU10392
 37052 003c 2370     		strb	r3, [r4]
 37053              	.LVL4543:
 37054              	.L2613:
17683:Core/Src/bno055.c ****         }
17684:Core/Src/bno055.c ****         else
17685:Core/Src/bno055.c ****         {
17686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17687:Core/Src/bno055.c ****         }
17688:Core/Src/bno055.c ****     }
17689:Core/Src/bno055.c **** 
17690:Core/Src/bno055.c ****     return com_rslt;
17691:Core/Src/bno055.c **** }
 37055              		.loc 1 17691 1 view .LVU10393
 37056 003e 03B0     		add	sp, sp, #12
 37057              	.LCFI1007:
 37058              		.cfi_remember_state
 37059              		.cfi_def_cfa_offset 12
 37060              		@ sp needed
 37061 0040 30BD     		pop	{r4, r5, pc}
 37062              	.LVL4544:
 37063              	.L2619:
 37064              	.LCFI1008:
 37065              		.cfi_restore_state
17673:Core/Src/bno055.c ****         }
 37066              		.loc 1 17673 13 is_stmt 1 view .LVU10394
17673:Core/Src/bno055.c ****         }
 37067              		.loc 1 17673 23 is_stmt 0 view .LVU10395
 37068 0042 0120     		movs	r0, #1
 37069              	.LVL4545:
17673:Core/Src/bno055.c ****         }
 37070              		.loc 1 17673 23 view .LVU10396
 37071 0044 FFF7FEFF 		bl	bno055_write_page_id
 37072              	.LVL4546:
17675:Core/Src/bno055.c ****         {
 37073              		.loc 1 17675 9 is_stmt 1 view .LVU10397
17675:Core/Src/bno055.c ****         {
 37074              		.loc 1 17675 12 is_stmt 0 view .LVU10398
 37075 0048 0028     		cmp	r0, #0
 37076 004a EAD0     		beq	.L2615
 37077 004c E4E7     		b	.L2614
ARM GAS  /tmp/cc9kYR4Z.s 			page 1040


 37078              	.LVL4547:
 37079              	.L2616:
17664:Core/Src/bno055.c ****     }
 37080              		.loc 1 17664 16 view .LVU10399
 37081 004e 6FF07E00 		mvn	r0, #126
 37082              	.LVL4548:
17664:Core/Src/bno055.c ****     }
 37083              		.loc 1 17664 16 view .LVU10400
 37084 0052 F4E7     		b	.L2613
 37085              	.LVL4549:
 37086              	.L2617:
17686:Core/Src/bno055.c ****         }
 37087              		.loc 1 17686 22 view .LVU10401
 37088 0054 4FF0FF30 		mov	r0, #-1
 37089 0058 F1E7     		b	.L2613
 37090              	.L2621:
 37091 005a 00BF     		.align	2
 37092              	.L2620:
 37093 005c 00000000 		.word	.LANCHOR0
 37094              		.cfi_endproc
 37095              	.LFE253:
 37097              		.section	.text.bno055_set_gyro_highrate_x_hyst,"ax",%progbits
 37098              		.align	1
 37099              		.global	bno055_set_gyro_highrate_x_hyst
 37100              		.syntax unified
 37101              		.thumb
 37102              		.thumb_func
 37104              	bno055_set_gyro_highrate_x_hyst:
 37105              	.LVL4550:
 37106              	.LFB254:
17692:Core/Src/bno055.c **** 
17693:Core/Src/bno055.c **** /*!
17694:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x hysteresis
17695:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17696:Core/Src/bno055.c ****  *
17697:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17698:Core/Src/bno055.c ****  *
17699:Core/Src/bno055.c ****  *  @return results of bus communication function
17700:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17701:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17702:Core/Src/bno055.c ****  *
17703:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17704:Core/Src/bno055.c ****  *
17705:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17706:Core/Src/bno055.c ****  *
17707:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17708:Core/Src/bno055.c ****  *
17709:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17710:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17711:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17712:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17713:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17714:Core/Src/bno055.c ****  *
17715:Core/Src/bno055.c ****  */
17716:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_hyst(u8 gyro_highrate_x_hyst_u8)
17717:Core/Src/bno055.c **** {
 37107              		.loc 1 17717 1 is_stmt 1 view -0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1041


 37108              		.cfi_startproc
 37109              		@ args = 0, pretend = 0, frame = 8
 37110              		@ frame_needed = 0, uses_anonymous_args = 0
 37111              		.loc 1 17717 1 is_stmt 0 view .LVU10403
 37112 0000 30B5     		push	{r4, r5, lr}
 37113              	.LCFI1009:
 37114              		.cfi_def_cfa_offset 12
 37115              		.cfi_offset 4, -12
 37116              		.cfi_offset 5, -8
 37117              		.cfi_offset 14, -4
 37118 0002 83B0     		sub	sp, sp, #12
 37119              	.LCFI1010:
 37120              		.cfi_def_cfa_offset 24
17718:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37121              		.loc 1 17718 5 is_stmt 1 view .LVU10404
 37122              	.LVL4551:
17719:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37123              		.loc 1 17719 5 view .LVU10405
 37124              		.loc 1 17719 8 is_stmt 0 view .LVU10406
 37125 0004 0023     		movs	r3, #0
 37126 0006 8DF80730 		strb	r3, [sp, #7]
17720:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37127              		.loc 1 17720 5 is_stmt 1 view .LVU10407
 37128              	.LVL4552:
17721:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37129              		.loc 1 17721 5 view .LVU10408
 37130              		.loc 1 17721 8 is_stmt 0 view .LVU10409
 37131 000a 8DF80630 		strb	r3, [sp, #6]
17722:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37132              		.loc 1 17722 5 is_stmt 1 view .LVU10410
 37133              	.LVL4553:
17723:Core/Src/bno055.c **** 
17724:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17725:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37134              		.loc 1 17725 5 view .LVU10411
 37135              		.loc 1 17725 18 is_stmt 0 view .LVU10412
 37136 000e 2A4B     		ldr	r3, .L2634
 37137 0010 1B68     		ldr	r3, [r3]
 37138              		.loc 1 17725 8 view .LVU10413
 37139 0012 002B     		cmp	r3, #0
 37140 0014 4CD0     		beq	.L2626
 37141 0016 0546     		mov	r5, r0
17726:Core/Src/bno055.c ****     {
17727:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17728:Core/Src/bno055.c ****     }
17729:Core/Src/bno055.c ****     else
17730:Core/Src/bno055.c ****     {
17731:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17732:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17733:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17734:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37142              		.loc 1 17734 9 is_stmt 1 view .LVU10414
 37143              		.loc 1 17734 19 is_stmt 0 view .LVU10415
 37144 0018 0DF10600 		add	r0, sp, #6
 37145              	.LVL4554:
 37146              		.loc 1 17734 19 view .LVU10416
 37147 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 1042


 37148              	.LVL4555:
17735:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37149              		.loc 1 17735 9 is_stmt 1 view .LVU10417
 37150              		.loc 1 17735 12 is_stmt 0 view .LVU10418
 37151 0020 0446     		mov	r4, r0
 37152 0022 0028     		cmp	r0, #0
 37153 0024 33D1     		bne	.L2627
17736:Core/Src/bno055.c ****         {
17737:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37154              		.loc 1 17737 13 is_stmt 1 view .LVU10419
 37155              		.loc 1 17737 32 is_stmt 0 view .LVU10420
 37156 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37157              		.loc 1 17737 16 view .LVU10421
 37158 002a 1BB9     		cbnz	r3, .L2631
 37159              	.LVL4556:
 37160              	.L2625:
17738:Core/Src/bno055.c ****             {
17739:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17740:Core/Src/bno055.c ****             }
17741:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37161              		.loc 1 17741 13 is_stmt 1 view .LVU10422
 37162              		.loc 1 17741 16 is_stmt 0 view .LVU10423
 37163 002c 44B1     		cbz	r4, .L2632
17742:Core/Src/bno055.c ****             {
17743:Core/Src/bno055.c ****                 /* Write page as one */
17744:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17745:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17746:Core/Src/bno055.c ****                 {
17747:Core/Src/bno055.c ****                     /*Write the value of
17748:Core/Src/bno055.c ****                      * gyro highrate x hysteresis*/
17749:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17750:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
17751:Core/Src/bno055.c ****                                                               &data_u8r,
17752:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17753:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17754:Core/Src/bno055.c ****                     {
17755:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST, gyro_
17756:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17757:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
17758:Core/Src/bno055.c ****                                                                     &data_u8r,
17759:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17760:Core/Src/bno055.c ****                     }
17761:Core/Src/bno055.c ****                 }
17762:Core/Src/bno055.c ****                 else
17763:Core/Src/bno055.c ****                 {
17764:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17765:Core/Src/bno055.c ****                 }
17766:Core/Src/bno055.c ****             }
17767:Core/Src/bno055.c ****             else
17768:Core/Src/bno055.c ****             {
17769:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37164              		.loc 1 17769 26 view .LVU10424
 37165 002e 4FF0FF34 		mov	r4, #-1
 37166              	.LVL4557:
 37167              		.loc 1 17769 26 view .LVU10425
 37168 0032 2EE0     		b	.L2624
 37169              	.LVL4558:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1043


 37170              	.L2631:
17739:Core/Src/bno055.c ****             }
 37171              		.loc 1 17739 17 is_stmt 1 view .LVU10426
17739:Core/Src/bno055.c ****             }
 37172              		.loc 1 17739 28 is_stmt 0 view .LVU10427
 37173 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 37174              	.LVL4559:
17739:Core/Src/bno055.c ****             }
 37175              		.loc 1 17739 25 view .LVU10428
 37176 0038 54FA80F4 		uxtab	r4, r4, r0
 37177 003c 64B2     		sxtb	r4, r4
 37178              	.LVL4560:
17739:Core/Src/bno055.c ****             }
 37179              		.loc 1 17739 25 view .LVU10429
 37180 003e F5E7     		b	.L2625
 37181              	.L2632:
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37182              		.loc 1 17744 17 is_stmt 1 view .LVU10430
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37183              		.loc 1 17744 30 is_stmt 0 view .LVU10431
 37184 0040 0120     		movs	r0, #1
 37185 0042 FFF7FEFF 		bl	bno055_write_page_id
 37186              	.LVL4561:
17745:Core/Src/bno055.c ****                 {
 37187              		.loc 1 17745 17 is_stmt 1 view .LVU10432
17745:Core/Src/bno055.c ****                 {
 37188              		.loc 1 17745 20 is_stmt 0 view .LVU10433
 37189 0046 50BB     		cbnz	r0, .L2629
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37190              		.loc 1 17749 21 is_stmt 1 view .LVU10434
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37191              		.loc 1 17749 40 is_stmt 0 view .LVU10435
 37192 0048 1B4B     		ldr	r3, .L2634
 37193 004a 1868     		ldr	r0, [r3]
 37194              	.LVL4562:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37195              		.loc 1 17749 40 view .LVU10436
 37196 004c 0469     		ldr	r4, [r0, #16]
 37197              	.LVL4563:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37198              		.loc 1 17749 32 view .LVU10437
 37199 004e 0123     		movs	r3, #1
 37200 0050 0DF10702 		add	r2, sp, #7
 37201 0054 1821     		movs	r1, #24
 37202 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37203 0058 A047     		blx	r4
 37204              	.LVL4564:
17753:Core/Src/bno055.c ****                     {
 37205              		.loc 1 17753 21 is_stmt 1 view .LVU10438
17753:Core/Src/bno055.c ****                     {
 37206              		.loc 1 17753 24 is_stmt 0 view .LVU10439
 37207 005a 0446     		mov	r4, r0
 37208 005c C8B9     		cbnz	r0, .L2624
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37209              		.loc 1 17755 25 is_stmt 1 view .LVU10440
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37210              		.loc 1 17755 36 is_stmt 0 view .LVU10441
ARM GAS  /tmp/cc9kYR4Z.s 			page 1044


 37211 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37212 0062 23F06003 		bic	r3, r3, #96
 37213 0066 5BB2     		sxtb	r3, r3
 37214 0068 6801     		lsls	r0, r5, #5
 37215              	.LVL4565:
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37216              		.loc 1 17755 36 view .LVU10442
 37217 006a 00F06000 		and	r0, r0, #96
 37218 006e 0343     		orrs	r3, r3, r0
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37219              		.loc 1 17755 34 view .LVU10443
 37220 0070 8DF80730 		strb	r3, [sp, #7]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37221              		.loc 1 17756 25 is_stmt 1 view .LVU10444
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37222              		.loc 1 17756 45 is_stmt 0 view .LVU10445
 37223 0074 104B     		ldr	r3, .L2634
 37224 0076 1868     		ldr	r0, [r3]
 37225 0078 C568     		ldr	r5, [r0, #12]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37226              		.loc 1 17756 37 view .LVU10446
 37227 007a 0123     		movs	r3, #1
 37228 007c 0DF10702 		add	r2, sp, #7
 37229 0080 1821     		movs	r1, #24
 37230 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37231 0084 A847     		blx	r5
 37232              	.LVL4566:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37233              		.loc 1 17756 34 view .LVU10447
 37234 0086 54FA80F0 		uxtab	r0, r4, r0
 37235 008a 44B2     		sxtb	r4, r0
 37236              	.LVL4567:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37237              		.loc 1 17756 34 view .LVU10448
 37238 008c 01E0     		b	.L2624
 37239              	.LVL4568:
 37240              	.L2627:
17770:Core/Src/bno055.c ****             }
17771:Core/Src/bno055.c ****         }
17772:Core/Src/bno055.c ****         else
17773:Core/Src/bno055.c ****         {
17774:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37241              		.loc 1 17774 22 view .LVU10449
 37242 008e 4FF0FF34 		mov	r4, #-1
 37243              	.LVL4569:
 37244              	.L2624:
17775:Core/Src/bno055.c ****         }
17776:Core/Src/bno055.c ****     }
17777:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37245              		.loc 1 17777 5 is_stmt 1 view .LVU10450
 37246              		.loc 1 17777 24 is_stmt 0 view .LVU10451
 37247 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37248              		.loc 1 17777 8 view .LVU10452
 37249 0096 28B9     		cbnz	r0, .L2633
 37250              	.LVL4570:
 37251              	.L2623:
17778:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1045


17779:Core/Src/bno055.c ****         /* set the operation mode of
17780:Core/Src/bno055.c ****          * previous operation mode*/
17781:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17782:Core/Src/bno055.c ****     }
17783:Core/Src/bno055.c **** 
17784:Core/Src/bno055.c ****     return com_rslt;
17785:Core/Src/bno055.c **** }
 37252              		.loc 1 17785 1 view .LVU10453
 37253 0098 2046     		mov	r0, r4
 37254 009a 03B0     		add	sp, sp, #12
 37255              	.LCFI1011:
 37256              		.cfi_remember_state
 37257              		.cfi_def_cfa_offset 12
 37258              		@ sp needed
 37259 009c 30BD     		pop	{r4, r5, pc}
 37260              	.LVL4571:
 37261              	.L2629:
 37262              	.LCFI1012:
 37263              		.cfi_restore_state
17764:Core/Src/bno055.c ****                 }
 37264              		.loc 1 17764 30 view .LVU10454
 37265 009e 4FF0FF34 		mov	r4, #-1
 37266              	.LVL4572:
17764:Core/Src/bno055.c ****                 }
 37267              		.loc 1 17764 30 view .LVU10455
 37268 00a2 F6E7     		b	.L2624
 37269              	.LVL4573:
 37270              	.L2633:
17781:Core/Src/bno055.c ****     }
 37271              		.loc 1 17781 9 is_stmt 1 view .LVU10456
17781:Core/Src/bno055.c ****     }
 37272              		.loc 1 17781 21 is_stmt 0 view .LVU10457
 37273 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 37274              	.LVL4574:
17781:Core/Src/bno055.c ****     }
 37275              		.loc 1 17781 18 view .LVU10458
 37276 00a8 54FA80F0 		uxtab	r0, r4, r0
 37277 00ac 44B2     		sxtb	r4, r0
 37278              	.LVL4575:
17781:Core/Src/bno055.c ****     }
 37279              		.loc 1 17781 18 view .LVU10459
 37280 00ae F3E7     		b	.L2623
 37281              	.LVL4576:
 37282              	.L2626:
17727:Core/Src/bno055.c ****     }
 37283              		.loc 1 17727 16 view .LVU10460
 37284 00b0 6FF07E04 		mvn	r4, #126
 37285 00b4 F0E7     		b	.L2623
 37286              	.L2635:
 37287 00b6 00BF     		.align	2
 37288              	.L2634:
 37289 00b8 00000000 		.word	.LANCHOR0
 37290              		.cfi_endproc
 37291              	.LFE254:
 37293              		.section	.text.bno055_get_gyro_highrate_x_durn,"ax",%progbits
 37294              		.align	1
 37295              		.global	bno055_get_gyro_highrate_x_durn
ARM GAS  /tmp/cc9kYR4Z.s 			page 1046


 37296              		.syntax unified
 37297              		.thumb
 37298              		.thumb_func
 37300              	bno055_get_gyro_highrate_x_durn:
 37301              	.LVL4577:
 37302              	.LFB255:
17786:Core/Src/bno055.c **** 
17787:Core/Src/bno055.c **** /*!
17788:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x duration
17789:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17790:Core/Src/bno055.c ****  *
17791:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17792:Core/Src/bno055.c ****  *
17793:Core/Src/bno055.c ****  *  @return results of bus communication function
17794:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17795:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17796:Core/Src/bno055.c ****  *
17797:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17798:Core/Src/bno055.c ****  *
17799:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17800:Core/Src/bno055.c ****  *
17801:Core/Src/bno055.c ****  */
17802:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_durn(u8 *gyro_highrate_x_durn_u8)
17803:Core/Src/bno055.c **** {
 37303              		.loc 1 17803 1 is_stmt 1 view -0
 37304              		.cfi_startproc
 37305              		@ args = 0, pretend = 0, frame = 8
 37306              		@ frame_needed = 0, uses_anonymous_args = 0
 37307              		.loc 1 17803 1 is_stmt 0 view .LVU10462
 37308 0000 70B5     		push	{r4, r5, r6, lr}
 37309              	.LCFI1013:
 37310              		.cfi_def_cfa_offset 16
 37311              		.cfi_offset 4, -16
 37312              		.cfi_offset 5, -12
 37313              		.cfi_offset 6, -8
 37314              		.cfi_offset 14, -4
 37315 0002 82B0     		sub	sp, sp, #8
 37316              	.LCFI1014:
 37317              		.cfi_def_cfa_offset 24
17804:Core/Src/bno055.c ****     /* Variable used to return value of
17805:Core/Src/bno055.c ****      * communication routine*/
17806:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37318              		.loc 1 17806 5 is_stmt 1 view .LVU10463
 37319              	.LVL4578:
17807:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37320              		.loc 1 17807 5 view .LVU10464
 37321              		.loc 1 17807 8 is_stmt 0 view .LVU10465
 37322 0004 0023     		movs	r3, #0
 37323 0006 8DF80730 		strb	r3, [sp, #7]
17808:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37324              		.loc 1 17808 5 is_stmt 1 view .LVU10466
 37325              	.LVL4579:
17809:Core/Src/bno055.c **** 
17810:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17811:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37326              		.loc 1 17811 5 view .LVU10467
 37327              		.loc 1 17811 18 is_stmt 0 view .LVU10468
ARM GAS  /tmp/cc9kYR4Z.s 			page 1047


 37328 000a 134B     		ldr	r3, .L2644
 37329 000c 1B68     		ldr	r3, [r3]
 37330              		.loc 1 17811 8 view .LVU10469
 37331 000e E3B1     		cbz	r3, .L2640
 37332 0010 0546     		mov	r5, r0
17812:Core/Src/bno055.c ****     {
17813:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17814:Core/Src/bno055.c ****     }
17815:Core/Src/bno055.c ****     else
17816:Core/Src/bno055.c ****     {
17817:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x duration is
17818:Core/Src/bno055.c ****          * available in the page one*/
17819:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37333              		.loc 1 17819 9 is_stmt 1 view .LVU10470
 37334              		.loc 1 17819 21 is_stmt 0 view .LVU10471
 37335 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37336              		.loc 1 17819 12 view .LVU10472
 37337 0014 012B     		cmp	r3, #1
 37338 0016 12D1     		bne	.L2643
 37339              	.LVL4580:
 37340              	.L2638:
17820:Core/Src/bno055.c ****         {
17821:Core/Src/bno055.c ****             /* Write page as one */
17822:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17823:Core/Src/bno055.c ****         }
17824:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37341              		.loc 1 17824 53 discriminator 1 view .LVU10473
 37342 0018 0F4B     		ldr	r3, .L2644
 37343 001a 1B68     		ldr	r3, [r3]
 37344 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37345              		.loc 1 17824 41 discriminator 1 view .LVU10474
 37346 001e 012B     		cmp	r3, #1
 37347 0020 16D1     		bne	.L2641
 37348              	.L2639:
17825:Core/Src/bno055.c ****         {
17826:Core/Src/bno055.c ****             /* Read the value of gyro highrate x duration*/
17827:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37349              		.loc 1 17827 13 is_stmt 1 view .LVU10475
 37350              		.loc 1 17827 32 is_stmt 0 view .LVU10476
 37351 0022 0D4B     		ldr	r3, .L2644
 37352 0024 1C68     		ldr	r4, [r3]
 37353 0026 2669     		ldr	r6, [r4, #16]
 37354              		.loc 1 17827 24 view .LVU10477
 37355 0028 0123     		movs	r3, #1
 37356 002a 0DF10702 		add	r2, sp, #7
 37357 002e 1921     		movs	r1, #25
 37358 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 37359 0032 B047     		blx	r6
 37360              	.LVL4581:
17828:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_DURN_REG,
17829:Core/Src/bno055.c ****                                                       &data_u8r,
17830:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17831:Core/Src/bno055.c ****             *gyro_highrate_x_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN);
 37361              		.loc 1 17831 13 is_stmt 1 view .LVU10478
 37362              		.loc 1 17831 38 is_stmt 0 view .LVU10479
 37363 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37364 0038 2B70     		strb	r3, [r5]
ARM GAS  /tmp/cc9kYR4Z.s 			page 1048


 37365              	.LVL4582:
 37366              	.L2637:
17832:Core/Src/bno055.c ****         }
17833:Core/Src/bno055.c ****         else
17834:Core/Src/bno055.c ****         {
17835:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17836:Core/Src/bno055.c ****         }
17837:Core/Src/bno055.c ****     }
17838:Core/Src/bno055.c **** 
17839:Core/Src/bno055.c ****     return com_rslt;
17840:Core/Src/bno055.c **** }
 37367              		.loc 1 17840 1 view .LVU10480
 37368 003a 02B0     		add	sp, sp, #8
 37369              	.LCFI1015:
 37370              		.cfi_remember_state
 37371              		.cfi_def_cfa_offset 16
 37372              		@ sp needed
 37373 003c 70BD     		pop	{r4, r5, r6, pc}
 37374              	.LVL4583:
 37375              	.L2643:
 37376              	.LCFI1016:
 37377              		.cfi_restore_state
17822:Core/Src/bno055.c ****         }
 37378              		.loc 1 17822 13 is_stmt 1 view .LVU10481
17822:Core/Src/bno055.c ****         }
 37379              		.loc 1 17822 23 is_stmt 0 view .LVU10482
 37380 003e 0120     		movs	r0, #1
 37381              	.LVL4584:
17822:Core/Src/bno055.c ****         }
 37382              		.loc 1 17822 23 view .LVU10483
 37383 0040 FFF7FEFF 		bl	bno055_write_page_id
 37384              	.LVL4585:
17824:Core/Src/bno055.c ****         {
 37385              		.loc 1 17824 9 is_stmt 1 view .LVU10484
17824:Core/Src/bno055.c ****         {
 37386              		.loc 1 17824 12 is_stmt 0 view .LVU10485
 37387 0044 0028     		cmp	r0, #0
 37388 0046 ECD0     		beq	.L2639
 37389 0048 E6E7     		b	.L2638
 37390              	.LVL4586:
 37391              	.L2640:
17813:Core/Src/bno055.c ****     }
 37392              		.loc 1 17813 16 view .LVU10486
 37393 004a 6FF07E00 		mvn	r0, #126
 37394              	.LVL4587:
17813:Core/Src/bno055.c ****     }
 37395              		.loc 1 17813 16 view .LVU10487
 37396 004e F4E7     		b	.L2637
 37397              	.LVL4588:
 37398              	.L2641:
17835:Core/Src/bno055.c ****         }
 37399              		.loc 1 17835 22 view .LVU10488
 37400 0050 4FF0FF30 		mov	r0, #-1
 37401 0054 F1E7     		b	.L2637
 37402              	.L2645:
 37403 0056 00BF     		.align	2
 37404              	.L2644:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1049


 37405 0058 00000000 		.word	.LANCHOR0
 37406              		.cfi_endproc
 37407              	.LFE255:
 37409              		.section	.text.bno055_set_gyro_highrate_x_durn,"ax",%progbits
 37410              		.align	1
 37411              		.global	bno055_set_gyro_highrate_x_durn
 37412              		.syntax unified
 37413              		.thumb
 37414              		.thumb_func
 37416              	bno055_set_gyro_highrate_x_durn:
 37417              	.LVL4589:
 37418              	.LFB256:
17841:Core/Src/bno055.c **** 
17842:Core/Src/bno055.c **** /*!
17843:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x duration
17844:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17845:Core/Src/bno055.c ****  *
17846:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17847:Core/Src/bno055.c ****  *
17848:Core/Src/bno055.c ****  *  @return results of bus communication function
17849:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17850:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17851:Core/Src/bno055.c ****  *
17852:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17853:Core/Src/bno055.c ****  *
17854:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17855:Core/Src/bno055.c ****  */
17856:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_durn(u8 gyro_highrate_x_durn_u8)
17857:Core/Src/bno055.c **** {
 37419              		.loc 1 17857 1 is_stmt 1 view -0
 37420              		.cfi_startproc
 37421              		@ args = 0, pretend = 0, frame = 8
 37422              		@ frame_needed = 0, uses_anonymous_args = 0
 37423              		.loc 1 17857 1 is_stmt 0 view .LVU10490
 37424 0000 30B5     		push	{r4, r5, lr}
 37425              	.LCFI1017:
 37426              		.cfi_def_cfa_offset 12
 37427              		.cfi_offset 4, -12
 37428              		.cfi_offset 5, -8
 37429              		.cfi_offset 14, -4
 37430 0002 83B0     		sub	sp, sp, #12
 37431              	.LCFI1018:
 37432              		.cfi_def_cfa_offset 24
17858:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37433              		.loc 1 17858 5 is_stmt 1 view .LVU10491
 37434              	.LVL4590:
17859:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37435              		.loc 1 17859 5 view .LVU10492
 37436              		.loc 1 17859 8 is_stmt 0 view .LVU10493
 37437 0004 0023     		movs	r3, #0
 37438 0006 8DF80730 		strb	r3, [sp, #7]
17860:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37439              		.loc 1 17860 5 is_stmt 1 view .LVU10494
 37440              	.LVL4591:
17861:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37441              		.loc 1 17861 5 view .LVU10495
 37442              		.loc 1 17861 8 is_stmt 0 view .LVU10496
ARM GAS  /tmp/cc9kYR4Z.s 			page 1050


 37443 000a 8DF80630 		strb	r3, [sp, #6]
17862:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37444              		.loc 1 17862 5 is_stmt 1 view .LVU10497
 37445              	.LVL4592:
17863:Core/Src/bno055.c **** 
17864:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17865:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37446              		.loc 1 17865 5 view .LVU10498
 37447              		.loc 1 17865 18 is_stmt 0 view .LVU10499
 37448 000e 254B     		ldr	r3, .L2658
 37449 0010 1B68     		ldr	r3, [r3]
 37450              		.loc 1 17865 8 view .LVU10500
 37451 0012 002B     		cmp	r3, #0
 37452 0014 42D0     		beq	.L2650
 37453 0016 0546     		mov	r5, r0
17866:Core/Src/bno055.c ****     {
17867:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17868:Core/Src/bno055.c ****     }
17869:Core/Src/bno055.c ****     else
17870:Core/Src/bno055.c ****     {
17871:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17872:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17873:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17874:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37454              		.loc 1 17874 9 is_stmt 1 view .LVU10501
 37455              		.loc 1 17874 19 is_stmt 0 view .LVU10502
 37456 0018 0DF10600 		add	r0, sp, #6
 37457              	.LVL4593:
 37458              		.loc 1 17874 19 view .LVU10503
 37459 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37460              	.LVL4594:
17875:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37461              		.loc 1 17875 9 is_stmt 1 view .LVU10504
 37462              		.loc 1 17875 12 is_stmt 0 view .LVU10505
 37463 0020 0446     		mov	r4, r0
 37464 0022 50BB     		cbnz	r0, .L2651
17876:Core/Src/bno055.c ****         {
17877:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37465              		.loc 1 17877 13 is_stmt 1 view .LVU10506
 37466              		.loc 1 17877 32 is_stmt 0 view .LVU10507
 37467 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37468              		.loc 1 17877 16 view .LVU10508
 37469 0028 1BB9     		cbnz	r3, .L2655
 37470              	.LVL4595:
 37471              	.L2649:
17878:Core/Src/bno055.c ****             {
17879:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17880:Core/Src/bno055.c ****             }
17881:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37472              		.loc 1 17881 13 is_stmt 1 view .LVU10509
 37473              		.loc 1 17881 16 is_stmt 0 view .LVU10510
 37474 002a 44B1     		cbz	r4, .L2656
17882:Core/Src/bno055.c ****             {
17883:Core/Src/bno055.c ****                 /* Write page as one */
17884:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17885:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17886:Core/Src/bno055.c ****                 {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1051


17887:Core/Src/bno055.c ****                     /* Write the value
17888:Core/Src/bno055.c ****                      * of gyro highrate x duration*/
17889:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17890:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
17891:Core/Src/bno055.c ****                                                               &data_u8r,
17892:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17893:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17894:Core/Src/bno055.c ****                     {
17895:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN, gyro_
17896:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17897:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
17898:Core/Src/bno055.c ****                                                                     &data_u8r,
17899:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17900:Core/Src/bno055.c ****                     }
17901:Core/Src/bno055.c ****                 }
17902:Core/Src/bno055.c ****                 else
17903:Core/Src/bno055.c ****                 {
17904:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17905:Core/Src/bno055.c ****                 }
17906:Core/Src/bno055.c ****             }
17907:Core/Src/bno055.c ****             else
17908:Core/Src/bno055.c ****             {
17909:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37475              		.loc 1 17909 26 view .LVU10511
 37476 002c 4FF0FF34 		mov	r4, #-1
 37477              	.LVL4596:
 37478              		.loc 1 17909 26 view .LVU10512
 37479 0030 25E0     		b	.L2648
 37480              	.LVL4597:
 37481              	.L2655:
17879:Core/Src/bno055.c ****             }
 37482              		.loc 1 17879 17 is_stmt 1 view .LVU10513
17879:Core/Src/bno055.c ****             }
 37483              		.loc 1 17879 28 is_stmt 0 view .LVU10514
 37484 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37485              	.LVL4598:
17879:Core/Src/bno055.c ****             }
 37486              		.loc 1 17879 25 view .LVU10515
 37487 0036 54FA80F4 		uxtab	r4, r4, r0
 37488 003a 64B2     		sxtb	r4, r4
 37489              	.LVL4599:
17879:Core/Src/bno055.c ****             }
 37490              		.loc 1 17879 25 view .LVU10516
 37491 003c F5E7     		b	.L2649
 37492              	.L2656:
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37493              		.loc 1 17884 17 is_stmt 1 view .LVU10517
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37494              		.loc 1 17884 30 is_stmt 0 view .LVU10518
 37495 003e 0120     		movs	r0, #1
 37496 0040 FFF7FEFF 		bl	bno055_write_page_id
 37497              	.LVL4600:
17885:Core/Src/bno055.c ****                 {
 37498              		.loc 1 17885 17 is_stmt 1 view .LVU10519
17885:Core/Src/bno055.c ****                 {
 37499              		.loc 1 17885 20 is_stmt 0 view .LVU10520
 37500 0044 08BB     		cbnz	r0, .L2653
ARM GAS  /tmp/cc9kYR4Z.s 			page 1052


17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37501              		.loc 1 17889 21 is_stmt 1 view .LVU10521
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37502              		.loc 1 17889 40 is_stmt 0 view .LVU10522
 37503 0046 174B     		ldr	r3, .L2658
 37504 0048 1868     		ldr	r0, [r3]
 37505              	.LVL4601:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37506              		.loc 1 17889 40 view .LVU10523
 37507 004a 0469     		ldr	r4, [r0, #16]
 37508              	.LVL4602:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37509              		.loc 1 17889 32 view .LVU10524
 37510 004c 0123     		movs	r3, #1
 37511 004e 0DF10702 		add	r2, sp, #7
 37512 0052 1921     		movs	r1, #25
 37513 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37514 0056 A047     		blx	r4
 37515              	.LVL4603:
17893:Core/Src/bno055.c ****                     {
 37516              		.loc 1 17893 21 is_stmt 1 view .LVU10525
17893:Core/Src/bno055.c ****                     {
 37517              		.loc 1 17893 24 is_stmt 0 view .LVU10526
 37518 0058 0446     		mov	r4, r0
 37519 005a 80B9     		cbnz	r0, .L2648
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37520              		.loc 1 17895 25 is_stmt 1 view .LVU10527
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37521              		.loc 1 17895 34 is_stmt 0 view .LVU10528
 37522 005c 8DF80750 		strb	r5, [sp, #7]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37523              		.loc 1 17896 25 is_stmt 1 view .LVU10529
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37524              		.loc 1 17896 45 is_stmt 0 view .LVU10530
 37525 0060 104B     		ldr	r3, .L2658
 37526 0062 1868     		ldr	r0, [r3]
 37527              	.LVL4604:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37528              		.loc 1 17896 45 view .LVU10531
 37529 0064 C568     		ldr	r5, [r0, #12]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37530              		.loc 1 17896 37 view .LVU10532
 37531 0066 0123     		movs	r3, #1
 37532 0068 0DF10702 		add	r2, sp, #7
 37533 006c 1921     		movs	r1, #25
 37534 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37535 0070 A847     		blx	r5
 37536              	.LVL4605:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37537              		.loc 1 17896 34 view .LVU10533
 37538 0072 54FA80F0 		uxtab	r0, r4, r0
 37539 0076 44B2     		sxtb	r4, r0
 37540              	.LVL4606:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37541              		.loc 1 17896 34 view .LVU10534
 37542 0078 01E0     		b	.L2648
 37543              	.LVL4607:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1053


 37544              	.L2651:
17910:Core/Src/bno055.c ****             }
17911:Core/Src/bno055.c ****         }
17912:Core/Src/bno055.c ****         else
17913:Core/Src/bno055.c ****         {
17914:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37545              		.loc 1 17914 22 view .LVU10535
 37546 007a 4FF0FF34 		mov	r4, #-1
 37547              	.LVL4608:
 37548              	.L2648:
17915:Core/Src/bno055.c ****         }
17916:Core/Src/bno055.c ****     }
17917:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37549              		.loc 1 17917 5 is_stmt 1 view .LVU10536
 37550              		.loc 1 17917 24 is_stmt 0 view .LVU10537
 37551 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37552              		.loc 1 17917 8 view .LVU10538
 37553 0082 28B9     		cbnz	r0, .L2657
 37554              	.LVL4609:
 37555              	.L2647:
17918:Core/Src/bno055.c ****     {
17919:Core/Src/bno055.c ****         /* set the operation mode of
17920:Core/Src/bno055.c ****          * previous operation mode*/
17921:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17922:Core/Src/bno055.c ****     }
17923:Core/Src/bno055.c **** 
17924:Core/Src/bno055.c ****     return com_rslt;
17925:Core/Src/bno055.c **** }
 37556              		.loc 1 17925 1 view .LVU10539
 37557 0084 2046     		mov	r0, r4
 37558 0086 03B0     		add	sp, sp, #12
 37559              	.LCFI1019:
 37560              		.cfi_remember_state
 37561              		.cfi_def_cfa_offset 12
 37562              		@ sp needed
 37563 0088 30BD     		pop	{r4, r5, pc}
 37564              	.LVL4610:
 37565              	.L2653:
 37566              	.LCFI1020:
 37567              		.cfi_restore_state
17904:Core/Src/bno055.c ****                 }
 37568              		.loc 1 17904 30 view .LVU10540
 37569 008a 4FF0FF34 		mov	r4, #-1
 37570              	.LVL4611:
17904:Core/Src/bno055.c ****                 }
 37571              		.loc 1 17904 30 view .LVU10541
 37572 008e F6E7     		b	.L2648
 37573              	.LVL4612:
 37574              	.L2657:
17921:Core/Src/bno055.c ****     }
 37575              		.loc 1 17921 9 is_stmt 1 view .LVU10542
17921:Core/Src/bno055.c ****     }
 37576              		.loc 1 17921 21 is_stmt 0 view .LVU10543
 37577 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 37578              	.LVL4613:
17921:Core/Src/bno055.c ****     }
 37579              		.loc 1 17921 18 view .LVU10544
ARM GAS  /tmp/cc9kYR4Z.s 			page 1054


 37580 0094 54FA80F0 		uxtab	r0, r4, r0
 37581 0098 44B2     		sxtb	r4, r0
 37582              	.LVL4614:
17921:Core/Src/bno055.c ****     }
 37583              		.loc 1 17921 18 view .LVU10545
 37584 009a F3E7     		b	.L2647
 37585              	.LVL4615:
 37586              	.L2650:
17867:Core/Src/bno055.c ****     }
 37587              		.loc 1 17867 16 view .LVU10546
 37588 009c 6FF07E04 		mvn	r4, #126
 37589 00a0 F0E7     		b	.L2647
 37590              	.L2659:
 37591 00a2 00BF     		.align	2
 37592              	.L2658:
 37593 00a4 00000000 		.word	.LANCHOR0
 37594              		.cfi_endproc
 37595              	.LFE256:
 37597              		.section	.text.bno055_get_gyro_highrate_y_thres,"ax",%progbits
 37598              		.align	1
 37599              		.global	bno055_get_gyro_highrate_y_thres
 37600              		.syntax unified
 37601              		.thumb
 37602              		.thumb_func
 37604              	bno055_get_gyro_highrate_y_thres:
 37605              	.LVL4616:
 37606              	.LFB257:
17926:Core/Src/bno055.c **** 
17927:Core/Src/bno055.c **** /*!
17928:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y threshold
17929:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17930:Core/Src/bno055.c ****  *
17931:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17932:Core/Src/bno055.c ****  *
17933:Core/Src/bno055.c ****  *  @return results of bus communication function
17934:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17935:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17936:Core/Src/bno055.c ****  *
17937:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17938:Core/Src/bno055.c ****  *  selection of gyro range
17939:Core/Src/bno055.c ****  *
17940:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17941:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17942:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17943:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17944:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17945:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17946:Core/Src/bno055.c ****  *
17947:Core/Src/bno055.c ****  */
17948:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_thres(u8 *gyro_highrate_y_thres_u8)
17949:Core/Src/bno055.c **** {
 37607              		.loc 1 17949 1 is_stmt 1 view -0
 37608              		.cfi_startproc
 37609              		@ args = 0, pretend = 0, frame = 8
 37610              		@ frame_needed = 0, uses_anonymous_args = 0
 37611              		.loc 1 17949 1 is_stmt 0 view .LVU10548
 37612 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 1055


 37613              	.LCFI1021:
 37614              		.cfi_def_cfa_offset 12
 37615              		.cfi_offset 4, -12
 37616              		.cfi_offset 5, -8
 37617              		.cfi_offset 14, -4
 37618 0002 83B0     		sub	sp, sp, #12
 37619              	.LCFI1022:
 37620              		.cfi_def_cfa_offset 24
17950:Core/Src/bno055.c ****     /* Variable used to return value of
17951:Core/Src/bno055.c ****      * communication routine*/
17952:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37621              		.loc 1 17952 5 is_stmt 1 view .LVU10549
 37622              	.LVL4617:
17953:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37623              		.loc 1 17953 5 view .LVU10550
 37624              		.loc 1 17953 8 is_stmt 0 view .LVU10551
 37625 0004 0023     		movs	r3, #0
 37626 0006 8DF80730 		strb	r3, [sp, #7]
17954:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37627              		.loc 1 17954 5 is_stmt 1 view .LVU10552
 37628              	.LVL4618:
17955:Core/Src/bno055.c **** 
17956:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17957:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37629              		.loc 1 17957 5 view .LVU10553
 37630              		.loc 1 17957 18 is_stmt 0 view .LVU10554
 37631 000a 144B     		ldr	r3, .L2668
 37632 000c 1B68     		ldr	r3, [r3]
 37633              		.loc 1 17957 8 view .LVU10555
 37634 000e F3B1     		cbz	r3, .L2664
 37635 0010 0446     		mov	r4, r0
17958:Core/Src/bno055.c ****     {
17959:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17960:Core/Src/bno055.c ****     }
17961:Core/Src/bno055.c ****     else
17962:Core/Src/bno055.c ****     {
17963:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y threshold is
17964:Core/Src/bno055.c ****          * available in the page one*/
17965:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37636              		.loc 1 17965 9 is_stmt 1 view .LVU10556
 37637              		.loc 1 17965 21 is_stmt 0 view .LVU10557
 37638 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37639              		.loc 1 17965 12 view .LVU10558
 37640 0014 012B     		cmp	r3, #1
 37641 0016 14D1     		bne	.L2667
 37642              	.LVL4619:
 37643              	.L2662:
17966:Core/Src/bno055.c ****         {
17967:Core/Src/bno055.c ****             /* Write page as one */
17968:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17969:Core/Src/bno055.c ****         }
17970:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37644              		.loc 1 17970 53 discriminator 1 view .LVU10559
 37645 0018 104B     		ldr	r3, .L2668
 37646 001a 1B68     		ldr	r3, [r3]
 37647 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37648              		.loc 1 17970 41 discriminator 1 view .LVU10560
ARM GAS  /tmp/cc9kYR4Z.s 			page 1056


 37649 001e 012B     		cmp	r3, #1
 37650 0020 18D1     		bne	.L2665
 37651              	.L2663:
17971:Core/Src/bno055.c ****         {
17972:Core/Src/bno055.c ****             /* Read the value of gyro highrate y threshold*/
17973:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37652              		.loc 1 17973 13 is_stmt 1 view .LVU10561
 37653              		.loc 1 17973 32 is_stmt 0 view .LVU10562
 37654 0022 0E4B     		ldr	r3, .L2668
 37655 0024 1868     		ldr	r0, [r3]
 37656 0026 0569     		ldr	r5, [r0, #16]
 37657              		.loc 1 17973 24 view .LVU10563
 37658 0028 0123     		movs	r3, #1
 37659 002a 0DF10702 		add	r2, sp, #7
 37660 002e 1A21     		movs	r1, #26
 37661 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37662 0032 A847     		blx	r5
 37663              	.LVL4620:
17974:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_THRES_REG,
17975:Core/Src/bno055.c ****                                                       &data_u8r,
17976:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17977:Core/Src/bno055.c ****             *gyro_highrate_y_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES)
 37664              		.loc 1 17977 13 is_stmt 1 view .LVU10564
 37665              		.loc 1 17977 41 is_stmt 0 view .LVU10565
 37666 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37667 0038 03F01F03 		and	r3, r3, #31
 37668              		.loc 1 17977 39 view .LVU10566
 37669 003c 2370     		strb	r3, [r4]
 37670              	.LVL4621:
 37671              	.L2661:
17978:Core/Src/bno055.c ****         }
17979:Core/Src/bno055.c ****         else
17980:Core/Src/bno055.c ****         {
17981:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17982:Core/Src/bno055.c ****         }
17983:Core/Src/bno055.c ****     }
17984:Core/Src/bno055.c **** 
17985:Core/Src/bno055.c ****     return com_rslt;
17986:Core/Src/bno055.c **** }
 37672              		.loc 1 17986 1 view .LVU10567
 37673 003e 03B0     		add	sp, sp, #12
 37674              	.LCFI1023:
 37675              		.cfi_remember_state
 37676              		.cfi_def_cfa_offset 12
 37677              		@ sp needed
 37678 0040 30BD     		pop	{r4, r5, pc}
 37679              	.LVL4622:
 37680              	.L2667:
 37681              	.LCFI1024:
 37682              		.cfi_restore_state
17968:Core/Src/bno055.c ****         }
 37683              		.loc 1 17968 13 is_stmt 1 view .LVU10568
17968:Core/Src/bno055.c ****         }
 37684              		.loc 1 17968 23 is_stmt 0 view .LVU10569
 37685 0042 0120     		movs	r0, #1
 37686              	.LVL4623:
17968:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1057


 37687              		.loc 1 17968 23 view .LVU10570
 37688 0044 FFF7FEFF 		bl	bno055_write_page_id
 37689              	.LVL4624:
17970:Core/Src/bno055.c ****         {
 37690              		.loc 1 17970 9 is_stmt 1 view .LVU10571
17970:Core/Src/bno055.c ****         {
 37691              		.loc 1 17970 12 is_stmt 0 view .LVU10572
 37692 0048 0028     		cmp	r0, #0
 37693 004a EAD0     		beq	.L2663
 37694 004c E4E7     		b	.L2662
 37695              	.LVL4625:
 37696              	.L2664:
17959:Core/Src/bno055.c ****     }
 37697              		.loc 1 17959 16 view .LVU10573
 37698 004e 6FF07E00 		mvn	r0, #126
 37699              	.LVL4626:
17959:Core/Src/bno055.c ****     }
 37700              		.loc 1 17959 16 view .LVU10574
 37701 0052 F4E7     		b	.L2661
 37702              	.LVL4627:
 37703              	.L2665:
17981:Core/Src/bno055.c ****         }
 37704              		.loc 1 17981 22 view .LVU10575
 37705 0054 4FF0FF30 		mov	r0, #-1
 37706 0058 F1E7     		b	.L2661
 37707              	.L2669:
 37708 005a 00BF     		.align	2
 37709              	.L2668:
 37710 005c 00000000 		.word	.LANCHOR0
 37711              		.cfi_endproc
 37712              	.LFE257:
 37714              		.section	.text.bno055_set_gyro_highrate_y_thres,"ax",%progbits
 37715              		.align	1
 37716              		.global	bno055_set_gyro_highrate_y_thres
 37717              		.syntax unified
 37718              		.thumb
 37719              		.thumb_func
 37721              	bno055_set_gyro_highrate_y_thres:
 37722              	.LVL4628:
 37723              	.LFB258:
17987:Core/Src/bno055.c **** 
17988:Core/Src/bno055.c **** /*!
17989:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y threshold
17990:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17991:Core/Src/bno055.c ****  *
17992:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17993:Core/Src/bno055.c ****  *
17994:Core/Src/bno055.c ****  *  @return results of bus communication function
17995:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17996:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17997:Core/Src/bno055.c ****  *
17998:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17999:Core/Src/bno055.c ****  *  selection of gyro range
18000:Core/Src/bno055.c ****  *
18001:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18002:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18003:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
ARM GAS  /tmp/cc9kYR4Z.s 			page 1058


18004:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18005:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18006:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18007:Core/Src/bno055.c ****  *
18008:Core/Src/bno055.c ****  */
18009:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_thres(u8 gyro_highrate_y_thres_u8)
18010:Core/Src/bno055.c **** {
 37724              		.loc 1 18010 1 is_stmt 1 view -0
 37725              		.cfi_startproc
 37726              		@ args = 0, pretend = 0, frame = 8
 37727              		@ frame_needed = 0, uses_anonymous_args = 0
 37728              		.loc 1 18010 1 is_stmt 0 view .LVU10577
 37729 0000 30B5     		push	{r4, r5, lr}
 37730              	.LCFI1025:
 37731              		.cfi_def_cfa_offset 12
 37732              		.cfi_offset 4, -12
 37733              		.cfi_offset 5, -8
 37734              		.cfi_offset 14, -4
 37735 0002 83B0     		sub	sp, sp, #12
 37736              	.LCFI1026:
 37737              		.cfi_def_cfa_offset 24
18011:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37738              		.loc 1 18011 5 is_stmt 1 view .LVU10578
 37739              	.LVL4629:
18012:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37740              		.loc 1 18012 5 view .LVU10579
 37741              		.loc 1 18012 8 is_stmt 0 view .LVU10580
 37742 0004 0023     		movs	r3, #0
 37743 0006 8DF80730 		strb	r3, [sp, #7]
18013:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37744              		.loc 1 18013 5 is_stmt 1 view .LVU10581
 37745              	.LVL4630:
18014:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37746              		.loc 1 18014 5 view .LVU10582
 37747              		.loc 1 18014 8 is_stmt 0 view .LVU10583
 37748 000a 8DF80630 		strb	r3, [sp, #6]
18015:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37749              		.loc 1 18015 5 is_stmt 1 view .LVU10584
 37750              	.LVL4631:
18016:Core/Src/bno055.c **** 
18017:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18018:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37751              		.loc 1 18018 5 view .LVU10585
 37752              		.loc 1 18018 18 is_stmt 0 view .LVU10586
 37753 000e 294B     		ldr	r3, .L2682
 37754 0010 1B68     		ldr	r3, [r3]
 37755              		.loc 1 18018 8 view .LVU10587
 37756 0012 002B     		cmp	r3, #0
 37757 0014 4AD0     		beq	.L2674
 37758 0016 0546     		mov	r5, r0
18019:Core/Src/bno055.c ****     {
18020:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18021:Core/Src/bno055.c ****     }
18022:Core/Src/bno055.c ****     else
18023:Core/Src/bno055.c ****     {
18024:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18025:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
ARM GAS  /tmp/cc9kYR4Z.s 			page 1059


18026:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18027:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37759              		.loc 1 18027 9 is_stmt 1 view .LVU10588
 37760              		.loc 1 18027 19 is_stmt 0 view .LVU10589
 37761 0018 0DF10600 		add	r0, sp, #6
 37762              	.LVL4632:
 37763              		.loc 1 18027 19 view .LVU10590
 37764 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37765              	.LVL4633:
18028:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37766              		.loc 1 18028 9 is_stmt 1 view .LVU10591
 37767              		.loc 1 18028 12 is_stmt 0 view .LVU10592
 37768 0020 0446     		mov	r4, r0
 37769 0022 90BB     		cbnz	r0, .L2675
18029:Core/Src/bno055.c ****         {
18030:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37770              		.loc 1 18030 13 is_stmt 1 view .LVU10593
 37771              		.loc 1 18030 32 is_stmt 0 view .LVU10594
 37772 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37773              		.loc 1 18030 16 view .LVU10595
 37774 0028 1BB9     		cbnz	r3, .L2679
 37775              	.LVL4634:
 37776              	.L2673:
18031:Core/Src/bno055.c ****             {
18032:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18033:Core/Src/bno055.c ****             }
18034:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37777              		.loc 1 18034 13 is_stmt 1 view .LVU10596
 37778              		.loc 1 18034 16 is_stmt 0 view .LVU10597
 37779 002a 44B1     		cbz	r4, .L2680
18035:Core/Src/bno055.c ****             {
18036:Core/Src/bno055.c ****                 /* Write page as one */
18037:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18038:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18039:Core/Src/bno055.c ****                 {
18040:Core/Src/bno055.c ****                     /* Write the value
18041:Core/Src/bno055.c ****                      * of gyro highrate y threshold*/
18042:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18043:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
18044:Core/Src/bno055.c ****                                                               &data_u8r,
18045:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18046:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18047:Core/Src/bno055.c ****                     {
18048:Core/Src/bno055.c ****                         data_u8r =
18049:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
18050:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18051:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
18052:Core/Src/bno055.c ****                                                                     &data_u8r,
18053:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18054:Core/Src/bno055.c ****                     }
18055:Core/Src/bno055.c ****                 }
18056:Core/Src/bno055.c ****                 else
18057:Core/Src/bno055.c ****                 {
18058:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18059:Core/Src/bno055.c ****                 }
18060:Core/Src/bno055.c ****             }
18061:Core/Src/bno055.c ****             else
ARM GAS  /tmp/cc9kYR4Z.s 			page 1060


18062:Core/Src/bno055.c ****             {
18063:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37780              		.loc 1 18063 26 view .LVU10598
 37781 002c 4FF0FF34 		mov	r4, #-1
 37782              	.LVL4635:
 37783              		.loc 1 18063 26 view .LVU10599
 37784 0030 2DE0     		b	.L2672
 37785              	.LVL4636:
 37786              	.L2679:
18032:Core/Src/bno055.c ****             }
 37787              		.loc 1 18032 17 is_stmt 1 view .LVU10600
18032:Core/Src/bno055.c ****             }
 37788              		.loc 1 18032 28 is_stmt 0 view .LVU10601
 37789 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37790              	.LVL4637:
18032:Core/Src/bno055.c ****             }
 37791              		.loc 1 18032 25 view .LVU10602
 37792 0036 54FA80F4 		uxtab	r4, r4, r0
 37793 003a 64B2     		sxtb	r4, r4
 37794              	.LVL4638:
18032:Core/Src/bno055.c ****             }
 37795              		.loc 1 18032 25 view .LVU10603
 37796 003c F5E7     		b	.L2673
 37797              	.L2680:
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37798              		.loc 1 18037 17 is_stmt 1 view .LVU10604
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37799              		.loc 1 18037 30 is_stmt 0 view .LVU10605
 37800 003e 0120     		movs	r0, #1
 37801 0040 FFF7FEFF 		bl	bno055_write_page_id
 37802              	.LVL4639:
18038:Core/Src/bno055.c ****                 {
 37803              		.loc 1 18038 17 is_stmt 1 view .LVU10606
18038:Core/Src/bno055.c ****                 {
 37804              		.loc 1 18038 20 is_stmt 0 view .LVU10607
 37805 0044 48BB     		cbnz	r0, .L2677
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37806              		.loc 1 18042 21 is_stmt 1 view .LVU10608
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37807              		.loc 1 18042 40 is_stmt 0 view .LVU10609
 37808 0046 1B4B     		ldr	r3, .L2682
 37809 0048 1868     		ldr	r0, [r3]
 37810              	.LVL4640:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37811              		.loc 1 18042 40 view .LVU10610
 37812 004a 0469     		ldr	r4, [r0, #16]
 37813              	.LVL4641:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37814              		.loc 1 18042 32 view .LVU10611
 37815 004c 0123     		movs	r3, #1
 37816 004e 0DF10702 		add	r2, sp, #7
 37817 0052 1A21     		movs	r1, #26
 37818 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37819 0056 A047     		blx	r4
 37820              	.LVL4642:
18046:Core/Src/bno055.c ****                     {
 37821              		.loc 1 18046 21 is_stmt 1 view .LVU10612
ARM GAS  /tmp/cc9kYR4Z.s 			page 1061


18046:Core/Src/bno055.c ****                     {
 37822              		.loc 1 18046 24 is_stmt 0 view .LVU10613
 37823 0058 0446     		mov	r4, r0
 37824 005a C0B9     		cbnz	r0, .L2672
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 37825              		.loc 1 18048 25 is_stmt 1 view .LVU10614
18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37826              		.loc 1 18049 29 is_stmt 0 view .LVU10615
 37827 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37828 0060 23F01F03 		bic	r3, r3, #31
 37829 0064 5BB2     		sxtb	r3, r3
 37830 0066 05F01F00 		and	r0, r5, #31
 37831              	.LVL4643:
18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37832              		.loc 1 18049 29 view .LVU10616
 37833 006a 0343     		orrs	r3, r3, r0
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 37834              		.loc 1 18048 34 view .LVU10617
 37835 006c 8DF80730 		strb	r3, [sp, #7]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37836              		.loc 1 18050 25 is_stmt 1 view .LVU10618
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37837              		.loc 1 18050 45 is_stmt 0 view .LVU10619
 37838 0070 104B     		ldr	r3, .L2682
 37839 0072 1868     		ldr	r0, [r3]
 37840 0074 C568     		ldr	r5, [r0, #12]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37841              		.loc 1 18050 37 view .LVU10620
 37842 0076 0123     		movs	r3, #1
 37843 0078 0DF10702 		add	r2, sp, #7
 37844 007c 1A21     		movs	r1, #26
 37845 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37846 0080 A847     		blx	r5
 37847              	.LVL4644:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37848              		.loc 1 18050 34 view .LVU10621
 37849 0082 54FA80F0 		uxtab	r0, r4, r0
 37850 0086 44B2     		sxtb	r4, r0
 37851              	.LVL4645:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37852              		.loc 1 18050 34 view .LVU10622
 37853 0088 01E0     		b	.L2672
 37854              	.LVL4646:
 37855              	.L2675:
18064:Core/Src/bno055.c ****             }
18065:Core/Src/bno055.c ****         }
18066:Core/Src/bno055.c ****         else
18067:Core/Src/bno055.c ****         {
18068:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37856              		.loc 1 18068 22 view .LVU10623
 37857 008a 4FF0FF34 		mov	r4, #-1
 37858              	.LVL4647:
 37859              	.L2672:
18069:Core/Src/bno055.c ****         }
18070:Core/Src/bno055.c ****     }
18071:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37860              		.loc 1 18071 5 is_stmt 1 view .LVU10624
ARM GAS  /tmp/cc9kYR4Z.s 			page 1062


 37861              		.loc 1 18071 24 is_stmt 0 view .LVU10625
 37862 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37863              		.loc 1 18071 8 view .LVU10626
 37864 0092 28B9     		cbnz	r0, .L2681
 37865              	.LVL4648:
 37866              	.L2671:
18072:Core/Src/bno055.c ****     {
18073:Core/Src/bno055.c ****         /* set the operation mode of
18074:Core/Src/bno055.c ****          * previous operation mode*/
18075:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18076:Core/Src/bno055.c ****     }
18077:Core/Src/bno055.c **** 
18078:Core/Src/bno055.c ****     return com_rslt;
18079:Core/Src/bno055.c **** }
 37867              		.loc 1 18079 1 view .LVU10627
 37868 0094 2046     		mov	r0, r4
 37869 0096 03B0     		add	sp, sp, #12
 37870              	.LCFI1027:
 37871              		.cfi_remember_state
 37872              		.cfi_def_cfa_offset 12
 37873              		@ sp needed
 37874 0098 30BD     		pop	{r4, r5, pc}
 37875              	.LVL4649:
 37876              	.L2677:
 37877              	.LCFI1028:
 37878              		.cfi_restore_state
18058:Core/Src/bno055.c ****                 }
 37879              		.loc 1 18058 30 view .LVU10628
 37880 009a 4FF0FF34 		mov	r4, #-1
 37881              	.LVL4650:
18058:Core/Src/bno055.c ****                 }
 37882              		.loc 1 18058 30 view .LVU10629
 37883 009e F6E7     		b	.L2672
 37884              	.LVL4651:
 37885              	.L2681:
18075:Core/Src/bno055.c ****     }
 37886              		.loc 1 18075 9 is_stmt 1 view .LVU10630
18075:Core/Src/bno055.c ****     }
 37887              		.loc 1 18075 21 is_stmt 0 view .LVU10631
 37888 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 37889              	.LVL4652:
18075:Core/Src/bno055.c ****     }
 37890              		.loc 1 18075 18 view .LVU10632
 37891 00a4 54FA80F0 		uxtab	r0, r4, r0
 37892 00a8 44B2     		sxtb	r4, r0
 37893              	.LVL4653:
18075:Core/Src/bno055.c ****     }
 37894              		.loc 1 18075 18 view .LVU10633
 37895 00aa F3E7     		b	.L2671
 37896              	.LVL4654:
 37897              	.L2674:
18020:Core/Src/bno055.c ****     }
 37898              		.loc 1 18020 16 view .LVU10634
 37899 00ac 6FF07E04 		mvn	r4, #126
 37900 00b0 F0E7     		b	.L2671
 37901              	.L2683:
 37902 00b2 00BF     		.align	2
ARM GAS  /tmp/cc9kYR4Z.s 			page 1063


 37903              	.L2682:
 37904 00b4 00000000 		.word	.LANCHOR0
 37905              		.cfi_endproc
 37906              	.LFE258:
 37908              		.section	.text.bno055_get_gyro_highrate_y_hyst,"ax",%progbits
 37909              		.align	1
 37910              		.global	bno055_get_gyro_highrate_y_hyst
 37911              		.syntax unified
 37912              		.thumb
 37913              		.thumb_func
 37915              	bno055_get_gyro_highrate_y_hyst:
 37916              	.LVL4655:
 37917              	.LFB259:
18080:Core/Src/bno055.c **** 
18081:Core/Src/bno055.c **** /*!
18082:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y hysteresis
18083:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18084:Core/Src/bno055.c ****  *
18085:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18086:Core/Src/bno055.c ****  *
18087:Core/Src/bno055.c ****  *  @return results of bus communication function
18088:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18089:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18090:Core/Src/bno055.c ****  *
18091:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18092:Core/Src/bno055.c ****  *
18093:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18094:Core/Src/bno055.c ****  *
18095:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18096:Core/Src/bno055.c ****  *
18097:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18098:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18099:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18100:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18101:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18102:Core/Src/bno055.c ****  */
18103:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_hyst(u8 *gyro_highrate_y_hyst_u8)
18104:Core/Src/bno055.c **** {
 37918              		.loc 1 18104 1 is_stmt 1 view -0
 37919              		.cfi_startproc
 37920              		@ args = 0, pretend = 0, frame = 8
 37921              		@ frame_needed = 0, uses_anonymous_args = 0
 37922              		.loc 1 18104 1 is_stmt 0 view .LVU10636
 37923 0000 30B5     		push	{r4, r5, lr}
 37924              	.LCFI1029:
 37925              		.cfi_def_cfa_offset 12
 37926              		.cfi_offset 4, -12
 37927              		.cfi_offset 5, -8
 37928              		.cfi_offset 14, -4
 37929 0002 83B0     		sub	sp, sp, #12
 37930              	.LCFI1030:
 37931              		.cfi_def_cfa_offset 24
18105:Core/Src/bno055.c ****     /* Variable used to return value of
18106:Core/Src/bno055.c ****      * communication routine*/
18107:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37932              		.loc 1 18107 5 is_stmt 1 view .LVU10637
 37933              	.LVL4656:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1064


18108:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37934              		.loc 1 18108 5 view .LVU10638
 37935              		.loc 1 18108 8 is_stmt 0 view .LVU10639
 37936 0004 0023     		movs	r3, #0
 37937 0006 8DF80730 		strb	r3, [sp, #7]
18109:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37938              		.loc 1 18109 5 is_stmt 1 view .LVU10640
 37939              	.LVL4657:
18110:Core/Src/bno055.c **** 
18111:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18112:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37940              		.loc 1 18112 5 view .LVU10641
 37941              		.loc 1 18112 18 is_stmt 0 view .LVU10642
 37942 000a 144B     		ldr	r3, .L2692
 37943 000c 1B68     		ldr	r3, [r3]
 37944              		.loc 1 18112 8 view .LVU10643
 37945 000e F3B1     		cbz	r3, .L2688
 37946 0010 0446     		mov	r4, r0
18113:Core/Src/bno055.c ****     {
18114:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18115:Core/Src/bno055.c ****     }
18116:Core/Src/bno055.c ****     else
18117:Core/Src/bno055.c ****     {
18118:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y hysteresis is
18119:Core/Src/bno055.c ****          * available in the page one*/
18120:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37947              		.loc 1 18120 9 is_stmt 1 view .LVU10644
 37948              		.loc 1 18120 21 is_stmt 0 view .LVU10645
 37949 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37950              		.loc 1 18120 12 view .LVU10646
 37951 0014 012B     		cmp	r3, #1
 37952 0016 14D1     		bne	.L2691
 37953              	.LVL4658:
 37954              	.L2686:
18121:Core/Src/bno055.c ****         {
18122:Core/Src/bno055.c ****             /* Write page as one */
18123:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18124:Core/Src/bno055.c ****         }
18125:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37955              		.loc 1 18125 53 discriminator 1 view .LVU10647
 37956 0018 104B     		ldr	r3, .L2692
 37957 001a 1B68     		ldr	r3, [r3]
 37958 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37959              		.loc 1 18125 41 discriminator 1 view .LVU10648
 37960 001e 012B     		cmp	r3, #1
 37961 0020 18D1     		bne	.L2689
 37962              	.L2687:
18126:Core/Src/bno055.c ****         {
18127:Core/Src/bno055.c ****             /* Read the value of gyro highrate y hysteresis*/
18128:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37963              		.loc 1 18128 13 is_stmt 1 view .LVU10649
 37964              		.loc 1 18128 32 is_stmt 0 view .LVU10650
 37965 0022 0E4B     		ldr	r3, .L2692
 37966 0024 1868     		ldr	r0, [r3]
 37967 0026 0569     		ldr	r5, [r0, #16]
 37968              		.loc 1 18128 24 view .LVU10651
 37969 0028 0123     		movs	r3, #1
ARM GAS  /tmp/cc9kYR4Z.s 			page 1065


 37970 002a 0DF10702 		add	r2, sp, #7
 37971 002e 1A21     		movs	r1, #26
 37972 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37973 0032 A847     		blx	r5
 37974              	.LVL4659:
18129:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18130:Core/Src/bno055.c ****                                                       &data_u8r,
18131:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18132:Core/Src/bno055.c ****             *gyro_highrate_y_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST);
 37975              		.loc 1 18132 13 is_stmt 1 view .LVU10652
 37976              		.loc 1 18132 40 is_stmt 0 view .LVU10653
 37977 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37978 0038 C3F34113 		ubfx	r3, r3, #5, #2
 37979              		.loc 1 18132 38 view .LVU10654
 37980 003c 2370     		strb	r3, [r4]
 37981              	.LVL4660:
 37982              	.L2685:
18133:Core/Src/bno055.c ****         }
18134:Core/Src/bno055.c ****         else
18135:Core/Src/bno055.c ****         {
18136:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18137:Core/Src/bno055.c ****         }
18138:Core/Src/bno055.c ****     }
18139:Core/Src/bno055.c **** 
18140:Core/Src/bno055.c ****     return com_rslt;
18141:Core/Src/bno055.c **** }
 37983              		.loc 1 18141 1 view .LVU10655
 37984 003e 03B0     		add	sp, sp, #12
 37985              	.LCFI1031:
 37986              		.cfi_remember_state
 37987              		.cfi_def_cfa_offset 12
 37988              		@ sp needed
 37989 0040 30BD     		pop	{r4, r5, pc}
 37990              	.LVL4661:
 37991              	.L2691:
 37992              	.LCFI1032:
 37993              		.cfi_restore_state
18123:Core/Src/bno055.c ****         }
 37994              		.loc 1 18123 13 is_stmt 1 view .LVU10656
18123:Core/Src/bno055.c ****         }
 37995              		.loc 1 18123 23 is_stmt 0 view .LVU10657
 37996 0042 0120     		movs	r0, #1
 37997              	.LVL4662:
18123:Core/Src/bno055.c ****         }
 37998              		.loc 1 18123 23 view .LVU10658
 37999 0044 FFF7FEFF 		bl	bno055_write_page_id
 38000              	.LVL4663:
18125:Core/Src/bno055.c ****         {
 38001              		.loc 1 18125 9 is_stmt 1 view .LVU10659
18125:Core/Src/bno055.c ****         {
 38002              		.loc 1 18125 12 is_stmt 0 view .LVU10660
 38003 0048 0028     		cmp	r0, #0
 38004 004a EAD0     		beq	.L2687
 38005 004c E4E7     		b	.L2686
 38006              	.LVL4664:
 38007              	.L2688:
18114:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1066


 38008              		.loc 1 18114 16 view .LVU10661
 38009 004e 6FF07E00 		mvn	r0, #126
 38010              	.LVL4665:
18114:Core/Src/bno055.c ****     }
 38011              		.loc 1 18114 16 view .LVU10662
 38012 0052 F4E7     		b	.L2685
 38013              	.LVL4666:
 38014              	.L2689:
18136:Core/Src/bno055.c ****         }
 38015              		.loc 1 18136 22 view .LVU10663
 38016 0054 4FF0FF30 		mov	r0, #-1
 38017 0058 F1E7     		b	.L2685
 38018              	.L2693:
 38019 005a 00BF     		.align	2
 38020              	.L2692:
 38021 005c 00000000 		.word	.LANCHOR0
 38022              		.cfi_endproc
 38023              	.LFE259:
 38025              		.section	.text.bno055_set_gyro_highrate_y_hyst,"ax",%progbits
 38026              		.align	1
 38027              		.global	bno055_set_gyro_highrate_y_hyst
 38028              		.syntax unified
 38029              		.thumb
 38030              		.thumb_func
 38032              	bno055_set_gyro_highrate_y_hyst:
 38033              	.LVL4667:
 38034              	.LFB260:
18142:Core/Src/bno055.c **** 
18143:Core/Src/bno055.c **** /*!
18144:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y hysteresis
18145:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18146:Core/Src/bno055.c ****  *
18147:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18148:Core/Src/bno055.c ****  *
18149:Core/Src/bno055.c ****  *  @return results of bus communication function
18150:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18151:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18152:Core/Src/bno055.c ****  *
18153:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18154:Core/Src/bno055.c ****  *
18155:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18156:Core/Src/bno055.c ****  *
18157:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18158:Core/Src/bno055.c ****  *
18159:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18160:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18161:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18162:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18163:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18164:Core/Src/bno055.c ****  */
18165:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_hyst(u8 gyro_highrate_y_hyst_u8)
18166:Core/Src/bno055.c **** {
 38035              		.loc 1 18166 1 is_stmt 1 view -0
 38036              		.cfi_startproc
 38037              		@ args = 0, pretend = 0, frame = 8
 38038              		@ frame_needed = 0, uses_anonymous_args = 0
 38039              		.loc 1 18166 1 is_stmt 0 view .LVU10665
ARM GAS  /tmp/cc9kYR4Z.s 			page 1067


 38040 0000 30B5     		push	{r4, r5, lr}
 38041              	.LCFI1033:
 38042              		.cfi_def_cfa_offset 12
 38043              		.cfi_offset 4, -12
 38044              		.cfi_offset 5, -8
 38045              		.cfi_offset 14, -4
 38046 0002 83B0     		sub	sp, sp, #12
 38047              	.LCFI1034:
 38048              		.cfi_def_cfa_offset 24
18167:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38049              		.loc 1 18167 5 is_stmt 1 view .LVU10666
 38050              	.LVL4668:
18168:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38051              		.loc 1 18168 5 view .LVU10667
 38052              		.loc 1 18168 8 is_stmt 0 view .LVU10668
 38053 0004 0023     		movs	r3, #0
 38054 0006 8DF80730 		strb	r3, [sp, #7]
18169:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38055              		.loc 1 18169 5 is_stmt 1 view .LVU10669
 38056              	.LVL4669:
18170:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38057              		.loc 1 18170 5 view .LVU10670
 38058              		.loc 1 18170 8 is_stmt 0 view .LVU10671
 38059 000a 8DF80630 		strb	r3, [sp, #6]
18171:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38060              		.loc 1 18171 5 is_stmt 1 view .LVU10672
 38061              	.LVL4670:
18172:Core/Src/bno055.c **** 
18173:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18174:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38062              		.loc 1 18174 5 view .LVU10673
 38063              		.loc 1 18174 18 is_stmt 0 view .LVU10674
 38064 000e 2A4B     		ldr	r3, .L2706
 38065 0010 1B68     		ldr	r3, [r3]
 38066              		.loc 1 18174 8 view .LVU10675
 38067 0012 002B     		cmp	r3, #0
 38068 0014 4CD0     		beq	.L2698
 38069 0016 0546     		mov	r5, r0
18175:Core/Src/bno055.c ****     {
18176:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18177:Core/Src/bno055.c ****     }
18178:Core/Src/bno055.c ****     else
18179:Core/Src/bno055.c ****     {
18180:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18181:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18182:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18183:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38070              		.loc 1 18183 9 is_stmt 1 view .LVU10676
 38071              		.loc 1 18183 19 is_stmt 0 view .LVU10677
 38072 0018 0DF10600 		add	r0, sp, #6
 38073              	.LVL4671:
 38074              		.loc 1 18183 19 view .LVU10678
 38075 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38076              	.LVL4672:
18184:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38077              		.loc 1 18184 9 is_stmt 1 view .LVU10679
 38078              		.loc 1 18184 12 is_stmt 0 view .LVU10680
ARM GAS  /tmp/cc9kYR4Z.s 			page 1068


 38079 0020 0446     		mov	r4, r0
 38080 0022 0028     		cmp	r0, #0
 38081 0024 33D1     		bne	.L2699
18185:Core/Src/bno055.c ****         {
18186:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38082              		.loc 1 18186 13 is_stmt 1 view .LVU10681
 38083              		.loc 1 18186 32 is_stmt 0 view .LVU10682
 38084 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38085              		.loc 1 18186 16 view .LVU10683
 38086 002a 1BB9     		cbnz	r3, .L2703
 38087              	.LVL4673:
 38088              	.L2697:
18187:Core/Src/bno055.c ****             {
18188:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18189:Core/Src/bno055.c ****             }
18190:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38089              		.loc 1 18190 13 is_stmt 1 view .LVU10684
 38090              		.loc 1 18190 16 is_stmt 0 view .LVU10685
 38091 002c 44B1     		cbz	r4, .L2704
18191:Core/Src/bno055.c ****             {
18192:Core/Src/bno055.c ****                 /* Write page as one */
18193:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18194:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18195:Core/Src/bno055.c ****                 {
18196:Core/Src/bno055.c ****                     /* Write the value of
18197:Core/Src/bno055.c ****                      * gyro highrate y hysteresis*/
18198:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18199:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18200:Core/Src/bno055.c ****                                                               &data_u8r,
18201:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18202:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18203:Core/Src/bno055.c ****                     {
18204:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST, gyro_
18205:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18206:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
18207:Core/Src/bno055.c ****                                                                     &data_u8r,
18208:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18209:Core/Src/bno055.c ****                     }
18210:Core/Src/bno055.c ****                 }
18211:Core/Src/bno055.c ****                 else
18212:Core/Src/bno055.c ****                 {
18213:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18214:Core/Src/bno055.c ****                 }
18215:Core/Src/bno055.c ****             }
18216:Core/Src/bno055.c ****             else
18217:Core/Src/bno055.c ****             {
18218:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38092              		.loc 1 18218 26 view .LVU10686
 38093 002e 4FF0FF34 		mov	r4, #-1
 38094              	.LVL4674:
 38095              		.loc 1 18218 26 view .LVU10687
 38096 0032 2EE0     		b	.L2696
 38097              	.LVL4675:
 38098              	.L2703:
18188:Core/Src/bno055.c ****             }
 38099              		.loc 1 18188 17 is_stmt 1 view .LVU10688
18188:Core/Src/bno055.c ****             }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1069


 38100              		.loc 1 18188 28 is_stmt 0 view .LVU10689
 38101 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 38102              	.LVL4676:
18188:Core/Src/bno055.c ****             }
 38103              		.loc 1 18188 25 view .LVU10690
 38104 0038 54FA80F4 		uxtab	r4, r4, r0
 38105 003c 64B2     		sxtb	r4, r4
 38106              	.LVL4677:
18188:Core/Src/bno055.c ****             }
 38107              		.loc 1 18188 25 view .LVU10691
 38108 003e F5E7     		b	.L2697
 38109              	.L2704:
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38110              		.loc 1 18193 17 is_stmt 1 view .LVU10692
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38111              		.loc 1 18193 30 is_stmt 0 view .LVU10693
 38112 0040 0120     		movs	r0, #1
 38113 0042 FFF7FEFF 		bl	bno055_write_page_id
 38114              	.LVL4678:
18194:Core/Src/bno055.c ****                 {
 38115              		.loc 1 18194 17 is_stmt 1 view .LVU10694
18194:Core/Src/bno055.c ****                 {
 38116              		.loc 1 18194 20 is_stmt 0 view .LVU10695
 38117 0046 50BB     		cbnz	r0, .L2701
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38118              		.loc 1 18198 21 is_stmt 1 view .LVU10696
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38119              		.loc 1 18198 40 is_stmt 0 view .LVU10697
 38120 0048 1B4B     		ldr	r3, .L2706
 38121 004a 1868     		ldr	r0, [r3]
 38122              	.LVL4679:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38123              		.loc 1 18198 40 view .LVU10698
 38124 004c 0469     		ldr	r4, [r0, #16]
 38125              	.LVL4680:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38126              		.loc 1 18198 32 view .LVU10699
 38127 004e 0123     		movs	r3, #1
 38128 0050 0DF10702 		add	r2, sp, #7
 38129 0054 1A21     		movs	r1, #26
 38130 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38131 0058 A047     		blx	r4
 38132              	.LVL4681:
18202:Core/Src/bno055.c ****                     {
 38133              		.loc 1 18202 21 is_stmt 1 view .LVU10700
18202:Core/Src/bno055.c ****                     {
 38134              		.loc 1 18202 24 is_stmt 0 view .LVU10701
 38135 005a 0446     		mov	r4, r0
 38136 005c C8B9     		cbnz	r0, .L2696
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38137              		.loc 1 18204 25 is_stmt 1 view .LVU10702
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38138              		.loc 1 18204 36 is_stmt 0 view .LVU10703
 38139 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38140 0062 23F06003 		bic	r3, r3, #96
 38141 0066 5BB2     		sxtb	r3, r3
 38142 0068 6801     		lsls	r0, r5, #5
ARM GAS  /tmp/cc9kYR4Z.s 			page 1070


 38143              	.LVL4682:
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38144              		.loc 1 18204 36 view .LVU10704
 38145 006a 00F06000 		and	r0, r0, #96
 38146 006e 0343     		orrs	r3, r3, r0
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38147              		.loc 1 18204 34 view .LVU10705
 38148 0070 8DF80730 		strb	r3, [sp, #7]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38149              		.loc 1 18205 25 is_stmt 1 view .LVU10706
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38150              		.loc 1 18205 45 is_stmt 0 view .LVU10707
 38151 0074 104B     		ldr	r3, .L2706
 38152 0076 1868     		ldr	r0, [r3]
 38153 0078 C568     		ldr	r5, [r0, #12]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38154              		.loc 1 18205 37 view .LVU10708
 38155 007a 0123     		movs	r3, #1
 38156 007c 0DF10702 		add	r2, sp, #7
 38157 0080 1A21     		movs	r1, #26
 38158 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38159 0084 A847     		blx	r5
 38160              	.LVL4683:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38161              		.loc 1 18205 34 view .LVU10709
 38162 0086 54FA80F0 		uxtab	r0, r4, r0
 38163 008a 44B2     		sxtb	r4, r0
 38164              	.LVL4684:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38165              		.loc 1 18205 34 view .LVU10710
 38166 008c 01E0     		b	.L2696
 38167              	.LVL4685:
 38168              	.L2699:
18219:Core/Src/bno055.c ****             }
18220:Core/Src/bno055.c ****         }
18221:Core/Src/bno055.c ****         else
18222:Core/Src/bno055.c ****         {
18223:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38169              		.loc 1 18223 22 view .LVU10711
 38170 008e 4FF0FF34 		mov	r4, #-1
 38171              	.LVL4686:
 38172              	.L2696:
18224:Core/Src/bno055.c ****         }
18225:Core/Src/bno055.c ****     }
18226:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38173              		.loc 1 18226 5 is_stmt 1 view .LVU10712
 38174              		.loc 1 18226 24 is_stmt 0 view .LVU10713
 38175 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38176              		.loc 1 18226 8 view .LVU10714
 38177 0096 28B9     		cbnz	r0, .L2705
 38178              	.LVL4687:
 38179              	.L2695:
18227:Core/Src/bno055.c ****     {
18228:Core/Src/bno055.c ****         /* set the operation mode of
18229:Core/Src/bno055.c ****          * previous operation mode*/
18230:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18231:Core/Src/bno055.c ****     }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1071


18232:Core/Src/bno055.c **** 
18233:Core/Src/bno055.c ****     return com_rslt;
18234:Core/Src/bno055.c **** }
 38180              		.loc 1 18234 1 view .LVU10715
 38181 0098 2046     		mov	r0, r4
 38182 009a 03B0     		add	sp, sp, #12
 38183              	.LCFI1035:
 38184              		.cfi_remember_state
 38185              		.cfi_def_cfa_offset 12
 38186              		@ sp needed
 38187 009c 30BD     		pop	{r4, r5, pc}
 38188              	.LVL4688:
 38189              	.L2701:
 38190              	.LCFI1036:
 38191              		.cfi_restore_state
18213:Core/Src/bno055.c ****                 }
 38192              		.loc 1 18213 30 view .LVU10716
 38193 009e 4FF0FF34 		mov	r4, #-1
 38194              	.LVL4689:
18213:Core/Src/bno055.c ****                 }
 38195              		.loc 1 18213 30 view .LVU10717
 38196 00a2 F6E7     		b	.L2696
 38197              	.LVL4690:
 38198              	.L2705:
18230:Core/Src/bno055.c ****     }
 38199              		.loc 1 18230 9 is_stmt 1 view .LVU10718
18230:Core/Src/bno055.c ****     }
 38200              		.loc 1 18230 21 is_stmt 0 view .LVU10719
 38201 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 38202              	.LVL4691:
18230:Core/Src/bno055.c ****     }
 38203              		.loc 1 18230 18 view .LVU10720
 38204 00a8 54FA80F0 		uxtab	r0, r4, r0
 38205 00ac 44B2     		sxtb	r4, r0
 38206              	.LVL4692:
18230:Core/Src/bno055.c ****     }
 38207              		.loc 1 18230 18 view .LVU10721
 38208 00ae F3E7     		b	.L2695
 38209              	.LVL4693:
 38210              	.L2698:
18176:Core/Src/bno055.c ****     }
 38211              		.loc 1 18176 16 view .LVU10722
 38212 00b0 6FF07E04 		mvn	r4, #126
 38213 00b4 F0E7     		b	.L2695
 38214              	.L2707:
 38215 00b6 00BF     		.align	2
 38216              	.L2706:
 38217 00b8 00000000 		.word	.LANCHOR0
 38218              		.cfi_endproc
 38219              	.LFE260:
 38221              		.section	.text.bno055_get_gyro_highrate_y_durn,"ax",%progbits
 38222              		.align	1
 38223              		.global	bno055_get_gyro_highrate_y_durn
 38224              		.syntax unified
 38225              		.thumb
 38226              		.thumb_func
 38228              	bno055_get_gyro_highrate_y_durn:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1072


 38229              	.LVL4694:
 38230              	.LFB261:
18235:Core/Src/bno055.c **** 
18236:Core/Src/bno055.c **** /*!
18237:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y duration
18238:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18239:Core/Src/bno055.c ****  *
18240:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18241:Core/Src/bno055.c ****  *
18242:Core/Src/bno055.c ****  *  @return results of bus communication function
18243:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18244:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18245:Core/Src/bno055.c ****  *
18246:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18247:Core/Src/bno055.c ****  *
18248:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18249:Core/Src/bno055.c ****  */
18250:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_durn(u8 *gyro_highrate_y_durn_u8)
18251:Core/Src/bno055.c **** {
 38231              		.loc 1 18251 1 is_stmt 1 view -0
 38232              		.cfi_startproc
 38233              		@ args = 0, pretend = 0, frame = 8
 38234              		@ frame_needed = 0, uses_anonymous_args = 0
 38235              		.loc 1 18251 1 is_stmt 0 view .LVU10724
 38236 0000 70B5     		push	{r4, r5, r6, lr}
 38237              	.LCFI1037:
 38238              		.cfi_def_cfa_offset 16
 38239              		.cfi_offset 4, -16
 38240              		.cfi_offset 5, -12
 38241              		.cfi_offset 6, -8
 38242              		.cfi_offset 14, -4
 38243 0002 82B0     		sub	sp, sp, #8
 38244              	.LCFI1038:
 38245              		.cfi_def_cfa_offset 24
18252:Core/Src/bno055.c ****     /* Variable used to return value of
18253:Core/Src/bno055.c ****      * communication routine*/
18254:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38246              		.loc 1 18254 5 is_stmt 1 view .LVU10725
 38247              	.LVL4695:
18255:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38248              		.loc 1 18255 5 view .LVU10726
 38249              		.loc 1 18255 8 is_stmt 0 view .LVU10727
 38250 0004 0023     		movs	r3, #0
 38251 0006 8DF80730 		strb	r3, [sp, #7]
18256:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38252              		.loc 1 18256 5 is_stmt 1 view .LVU10728
 38253              	.LVL4696:
18257:Core/Src/bno055.c **** 
18258:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18259:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38254              		.loc 1 18259 5 view .LVU10729
 38255              		.loc 1 18259 18 is_stmt 0 view .LVU10730
 38256 000a 134B     		ldr	r3, .L2716
 38257 000c 1B68     		ldr	r3, [r3]
 38258              		.loc 1 18259 8 view .LVU10731
 38259 000e E3B1     		cbz	r3, .L2712
 38260 0010 0546     		mov	r5, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1073


18260:Core/Src/bno055.c ****     {
18261:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18262:Core/Src/bno055.c ****     }
18263:Core/Src/bno055.c ****     else
18264:Core/Src/bno055.c ****     {
18265:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y duration is
18266:Core/Src/bno055.c ****          * available in the page one*/
18267:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38261              		.loc 1 18267 9 is_stmt 1 view .LVU10732
 38262              		.loc 1 18267 21 is_stmt 0 view .LVU10733
 38263 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38264              		.loc 1 18267 12 view .LVU10734
 38265 0014 012B     		cmp	r3, #1
 38266 0016 12D1     		bne	.L2715
 38267              	.LVL4697:
 38268              	.L2710:
18268:Core/Src/bno055.c ****         {
18269:Core/Src/bno055.c ****             /* Write page as one */
18270:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18271:Core/Src/bno055.c ****         }
18272:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38269              		.loc 1 18272 53 discriminator 1 view .LVU10735
 38270 0018 0F4B     		ldr	r3, .L2716
 38271 001a 1B68     		ldr	r3, [r3]
 38272 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38273              		.loc 1 18272 41 discriminator 1 view .LVU10736
 38274 001e 012B     		cmp	r3, #1
 38275 0020 16D1     		bne	.L2713
 38276              	.L2711:
18273:Core/Src/bno055.c ****         {
18274:Core/Src/bno055.c ****             /* Read the value of gyro highrate y duration*/
18275:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38277              		.loc 1 18275 13 is_stmt 1 view .LVU10737
 38278              		.loc 1 18275 32 is_stmt 0 view .LVU10738
 38279 0022 0D4B     		ldr	r3, .L2716
 38280 0024 1C68     		ldr	r4, [r3]
 38281 0026 2669     		ldr	r6, [r4, #16]
 38282              		.loc 1 18275 24 view .LVU10739
 38283 0028 0123     		movs	r3, #1
 38284 002a 0DF10702 		add	r2, sp, #7
 38285 002e 1B21     		movs	r1, #27
 38286 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 38287 0032 B047     		blx	r6
 38288              	.LVL4698:
18276:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18277:Core/Src/bno055.c ****                                                       &data_u8r,
18278:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18279:Core/Src/bno055.c ****             *gyro_highrate_y_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN);
 38289              		.loc 1 18279 13 is_stmt 1 view .LVU10740
 38290              		.loc 1 18279 38 is_stmt 0 view .LVU10741
 38291 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38292 0038 2B70     		strb	r3, [r5]
 38293              	.LVL4699:
 38294              	.L2709:
18280:Core/Src/bno055.c ****         }
18281:Core/Src/bno055.c ****         else
18282:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1074


18283:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18284:Core/Src/bno055.c ****         }
18285:Core/Src/bno055.c ****     }
18286:Core/Src/bno055.c **** 
18287:Core/Src/bno055.c ****     return com_rslt;
18288:Core/Src/bno055.c **** }
 38295              		.loc 1 18288 1 view .LVU10742
 38296 003a 02B0     		add	sp, sp, #8
 38297              	.LCFI1039:
 38298              		.cfi_remember_state
 38299              		.cfi_def_cfa_offset 16
 38300              		@ sp needed
 38301 003c 70BD     		pop	{r4, r5, r6, pc}
 38302              	.LVL4700:
 38303              	.L2715:
 38304              	.LCFI1040:
 38305              		.cfi_restore_state
18270:Core/Src/bno055.c ****         }
 38306              		.loc 1 18270 13 is_stmt 1 view .LVU10743
18270:Core/Src/bno055.c ****         }
 38307              		.loc 1 18270 23 is_stmt 0 view .LVU10744
 38308 003e 0120     		movs	r0, #1
 38309              	.LVL4701:
18270:Core/Src/bno055.c ****         }
 38310              		.loc 1 18270 23 view .LVU10745
 38311 0040 FFF7FEFF 		bl	bno055_write_page_id
 38312              	.LVL4702:
18272:Core/Src/bno055.c ****         {
 38313              		.loc 1 18272 9 is_stmt 1 view .LVU10746
18272:Core/Src/bno055.c ****         {
 38314              		.loc 1 18272 12 is_stmt 0 view .LVU10747
 38315 0044 0028     		cmp	r0, #0
 38316 0046 ECD0     		beq	.L2711
 38317 0048 E6E7     		b	.L2710
 38318              	.LVL4703:
 38319              	.L2712:
18261:Core/Src/bno055.c ****     }
 38320              		.loc 1 18261 16 view .LVU10748
 38321 004a 6FF07E00 		mvn	r0, #126
 38322              	.LVL4704:
18261:Core/Src/bno055.c ****     }
 38323              		.loc 1 18261 16 view .LVU10749
 38324 004e F4E7     		b	.L2709
 38325              	.LVL4705:
 38326              	.L2713:
18283:Core/Src/bno055.c ****         }
 38327              		.loc 1 18283 22 view .LVU10750
 38328 0050 4FF0FF30 		mov	r0, #-1
 38329 0054 F1E7     		b	.L2709
 38330              	.L2717:
 38331 0056 00BF     		.align	2
 38332              	.L2716:
 38333 0058 00000000 		.word	.LANCHOR0
 38334              		.cfi_endproc
 38335              	.LFE261:
 38337              		.section	.text.bno055_set_gyro_highrate_y_durn,"ax",%progbits
 38338              		.align	1
ARM GAS  /tmp/cc9kYR4Z.s 			page 1075


 38339              		.global	bno055_set_gyro_highrate_y_durn
 38340              		.syntax unified
 38341              		.thumb
 38342              		.thumb_func
 38344              	bno055_set_gyro_highrate_y_durn:
 38345              	.LVL4706:
 38346              	.LFB262:
18289:Core/Src/bno055.c **** 
18290:Core/Src/bno055.c **** /*!
18291:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y duration
18292:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18293:Core/Src/bno055.c ****  *
18294:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18295:Core/Src/bno055.c ****  *
18296:Core/Src/bno055.c ****  *  @return results of bus communication function
18297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18299:Core/Src/bno055.c ****  *
18300:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18301:Core/Src/bno055.c ****  *
18302:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18303:Core/Src/bno055.c ****  */
18304:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_durn(u8 gyro_highrate_y_durn_u8)
18305:Core/Src/bno055.c **** {
 38347              		.loc 1 18305 1 is_stmt 1 view -0
 38348              		.cfi_startproc
 38349              		@ args = 0, pretend = 0, frame = 8
 38350              		@ frame_needed = 0, uses_anonymous_args = 0
 38351              		.loc 1 18305 1 is_stmt 0 view .LVU10752
 38352 0000 30B5     		push	{r4, r5, lr}
 38353              	.LCFI1041:
 38354              		.cfi_def_cfa_offset 12
 38355              		.cfi_offset 4, -12
 38356              		.cfi_offset 5, -8
 38357              		.cfi_offset 14, -4
 38358 0002 83B0     		sub	sp, sp, #12
 38359              	.LCFI1042:
 38360              		.cfi_def_cfa_offset 24
18306:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38361              		.loc 1 18306 5 is_stmt 1 view .LVU10753
 38362              	.LVL4707:
18307:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38363              		.loc 1 18307 5 view .LVU10754
 38364              		.loc 1 18307 8 is_stmt 0 view .LVU10755
 38365 0004 0023     		movs	r3, #0
 38366 0006 8DF80730 		strb	r3, [sp, #7]
18308:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38367              		.loc 1 18308 5 is_stmt 1 view .LVU10756
 38368              	.LVL4708:
18309:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38369              		.loc 1 18309 5 view .LVU10757
 38370              		.loc 1 18309 8 is_stmt 0 view .LVU10758
 38371 000a 8DF80630 		strb	r3, [sp, #6]
18310:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38372              		.loc 1 18310 5 is_stmt 1 view .LVU10759
 38373              	.LVL4709:
18311:Core/Src/bno055.c **** 
ARM GAS  /tmp/cc9kYR4Z.s 			page 1076


18312:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18313:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38374              		.loc 1 18313 5 view .LVU10760
 38375              		.loc 1 18313 18 is_stmt 0 view .LVU10761
 38376 000e 254B     		ldr	r3, .L2730
 38377 0010 1B68     		ldr	r3, [r3]
 38378              		.loc 1 18313 8 view .LVU10762
 38379 0012 002B     		cmp	r3, #0
 38380 0014 42D0     		beq	.L2722
 38381 0016 0546     		mov	r5, r0
18314:Core/Src/bno055.c ****     {
18315:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18316:Core/Src/bno055.c ****     }
18317:Core/Src/bno055.c ****     else
18318:Core/Src/bno055.c ****     {
18319:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18320:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18321:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18322:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38382              		.loc 1 18322 9 is_stmt 1 view .LVU10763
 38383              		.loc 1 18322 19 is_stmt 0 view .LVU10764
 38384 0018 0DF10600 		add	r0, sp, #6
 38385              	.LVL4710:
 38386              		.loc 1 18322 19 view .LVU10765
 38387 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38388              	.LVL4711:
18323:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38389              		.loc 1 18323 9 is_stmt 1 view .LVU10766
 38390              		.loc 1 18323 12 is_stmt 0 view .LVU10767
 38391 0020 0446     		mov	r4, r0
 38392 0022 50BB     		cbnz	r0, .L2723
18324:Core/Src/bno055.c ****         {
18325:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38393              		.loc 1 18325 13 is_stmt 1 view .LVU10768
 38394              		.loc 1 18325 32 is_stmt 0 view .LVU10769
 38395 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38396              		.loc 1 18325 16 view .LVU10770
 38397 0028 1BB9     		cbnz	r3, .L2727
 38398              	.LVL4712:
 38399              	.L2721:
18326:Core/Src/bno055.c ****             {
18327:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18328:Core/Src/bno055.c ****             }
18329:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38400              		.loc 1 18329 13 is_stmt 1 view .LVU10771
 38401              		.loc 1 18329 16 is_stmt 0 view .LVU10772
 38402 002a 44B1     		cbz	r4, .L2728
18330:Core/Src/bno055.c ****             {
18331:Core/Src/bno055.c ****                 /* Write page as one */
18332:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18333:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18334:Core/Src/bno055.c ****                 {
18335:Core/Src/bno055.c ****                     /* Write the value
18336:Core/Src/bno055.c ****                      * of gyro highrate y duration*/
18337:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18338:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18339:Core/Src/bno055.c ****                                                               &data_u8r,
ARM GAS  /tmp/cc9kYR4Z.s 			page 1077


18340:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18341:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18342:Core/Src/bno055.c ****                     {
18343:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN, gyro_
18344:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18345:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
18346:Core/Src/bno055.c ****                                                                     &data_u8r,
18347:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18348:Core/Src/bno055.c ****                     }
18349:Core/Src/bno055.c ****                 }
18350:Core/Src/bno055.c ****                 else
18351:Core/Src/bno055.c ****                 {
18352:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18353:Core/Src/bno055.c ****                 }
18354:Core/Src/bno055.c ****             }
18355:Core/Src/bno055.c ****             else
18356:Core/Src/bno055.c ****             {
18357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38403              		.loc 1 18357 26 view .LVU10773
 38404 002c 4FF0FF34 		mov	r4, #-1
 38405              	.LVL4713:
 38406              		.loc 1 18357 26 view .LVU10774
 38407 0030 25E0     		b	.L2720
 38408              	.LVL4714:
 38409              	.L2727:
18327:Core/Src/bno055.c ****             }
 38410              		.loc 1 18327 17 is_stmt 1 view .LVU10775
18327:Core/Src/bno055.c ****             }
 38411              		.loc 1 18327 28 is_stmt 0 view .LVU10776
 38412 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38413              	.LVL4715:
18327:Core/Src/bno055.c ****             }
 38414              		.loc 1 18327 25 view .LVU10777
 38415 0036 54FA80F4 		uxtab	r4, r4, r0
 38416 003a 64B2     		sxtb	r4, r4
 38417              	.LVL4716:
18327:Core/Src/bno055.c ****             }
 38418              		.loc 1 18327 25 view .LVU10778
 38419 003c F5E7     		b	.L2721
 38420              	.L2728:
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38421              		.loc 1 18332 17 is_stmt 1 view .LVU10779
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38422              		.loc 1 18332 30 is_stmt 0 view .LVU10780
 38423 003e 0120     		movs	r0, #1
 38424 0040 FFF7FEFF 		bl	bno055_write_page_id
 38425              	.LVL4717:
18333:Core/Src/bno055.c ****                 {
 38426              		.loc 1 18333 17 is_stmt 1 view .LVU10781
18333:Core/Src/bno055.c ****                 {
 38427              		.loc 1 18333 20 is_stmt 0 view .LVU10782
 38428 0044 08BB     		cbnz	r0, .L2725
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38429              		.loc 1 18337 21 is_stmt 1 view .LVU10783
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38430              		.loc 1 18337 40 is_stmt 0 view .LVU10784
 38431 0046 174B     		ldr	r3, .L2730
ARM GAS  /tmp/cc9kYR4Z.s 			page 1078


 38432 0048 1868     		ldr	r0, [r3]
 38433              	.LVL4718:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38434              		.loc 1 18337 40 view .LVU10785
 38435 004a 0469     		ldr	r4, [r0, #16]
 38436              	.LVL4719:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38437              		.loc 1 18337 32 view .LVU10786
 38438 004c 0123     		movs	r3, #1
 38439 004e 0DF10702 		add	r2, sp, #7
 38440 0052 1B21     		movs	r1, #27
 38441 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38442 0056 A047     		blx	r4
 38443              	.LVL4720:
18341:Core/Src/bno055.c ****                     {
 38444              		.loc 1 18341 21 is_stmt 1 view .LVU10787
18341:Core/Src/bno055.c ****                     {
 38445              		.loc 1 18341 24 is_stmt 0 view .LVU10788
 38446 0058 0446     		mov	r4, r0
 38447 005a 80B9     		cbnz	r0, .L2720
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38448              		.loc 1 18343 25 is_stmt 1 view .LVU10789
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38449              		.loc 1 18343 34 is_stmt 0 view .LVU10790
 38450 005c 8DF80750 		strb	r5, [sp, #7]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38451              		.loc 1 18344 25 is_stmt 1 view .LVU10791
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38452              		.loc 1 18344 45 is_stmt 0 view .LVU10792
 38453 0060 104B     		ldr	r3, .L2730
 38454 0062 1868     		ldr	r0, [r3]
 38455              	.LVL4721:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38456              		.loc 1 18344 45 view .LVU10793
 38457 0064 C568     		ldr	r5, [r0, #12]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38458              		.loc 1 18344 37 view .LVU10794
 38459 0066 0123     		movs	r3, #1
 38460 0068 0DF10702 		add	r2, sp, #7
 38461 006c 1B21     		movs	r1, #27
 38462 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38463 0070 A847     		blx	r5
 38464              	.LVL4722:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38465              		.loc 1 18344 34 view .LVU10795
 38466 0072 54FA80F0 		uxtab	r0, r4, r0
 38467 0076 44B2     		sxtb	r4, r0
 38468              	.LVL4723:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38469              		.loc 1 18344 34 view .LVU10796
 38470 0078 01E0     		b	.L2720
 38471              	.LVL4724:
 38472              	.L2723:
18358:Core/Src/bno055.c ****             }
18359:Core/Src/bno055.c ****         }
18360:Core/Src/bno055.c ****         else
18361:Core/Src/bno055.c ****         {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1079


18362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38473              		.loc 1 18362 22 view .LVU10797
 38474 007a 4FF0FF34 		mov	r4, #-1
 38475              	.LVL4725:
 38476              	.L2720:
18363:Core/Src/bno055.c ****         }
18364:Core/Src/bno055.c ****     }
18365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38477              		.loc 1 18365 5 is_stmt 1 view .LVU10798
 38478              		.loc 1 18365 24 is_stmt 0 view .LVU10799
 38479 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38480              		.loc 1 18365 8 view .LVU10800
 38481 0082 28B9     		cbnz	r0, .L2729
 38482              	.LVL4726:
 38483              	.L2719:
18366:Core/Src/bno055.c ****     {
18367:Core/Src/bno055.c ****         /* set the operation mode of
18368:Core/Src/bno055.c ****          * previous operation mode*/
18369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18370:Core/Src/bno055.c ****     }
18371:Core/Src/bno055.c **** 
18372:Core/Src/bno055.c ****     return com_rslt;
18373:Core/Src/bno055.c **** }
 38484              		.loc 1 18373 1 view .LVU10801
 38485 0084 2046     		mov	r0, r4
 38486 0086 03B0     		add	sp, sp, #12
 38487              	.LCFI1043:
 38488              		.cfi_remember_state
 38489              		.cfi_def_cfa_offset 12
 38490              		@ sp needed
 38491 0088 30BD     		pop	{r4, r5, pc}
 38492              	.LVL4727:
 38493              	.L2725:
 38494              	.LCFI1044:
 38495              		.cfi_restore_state
18352:Core/Src/bno055.c ****                 }
 38496              		.loc 1 18352 30 view .LVU10802
 38497 008a 4FF0FF34 		mov	r4, #-1
 38498              	.LVL4728:
18352:Core/Src/bno055.c ****                 }
 38499              		.loc 1 18352 30 view .LVU10803
 38500 008e F6E7     		b	.L2720
 38501              	.LVL4729:
 38502              	.L2729:
18369:Core/Src/bno055.c ****     }
 38503              		.loc 1 18369 9 is_stmt 1 view .LVU10804
18369:Core/Src/bno055.c ****     }
 38504              		.loc 1 18369 21 is_stmt 0 view .LVU10805
 38505 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 38506              	.LVL4730:
18369:Core/Src/bno055.c ****     }
 38507              		.loc 1 18369 18 view .LVU10806
 38508 0094 54FA80F0 		uxtab	r0, r4, r0
 38509 0098 44B2     		sxtb	r4, r0
 38510              	.LVL4731:
18369:Core/Src/bno055.c ****     }
 38511              		.loc 1 18369 18 view .LVU10807
ARM GAS  /tmp/cc9kYR4Z.s 			page 1080


 38512 009a F3E7     		b	.L2719
 38513              	.LVL4732:
 38514              	.L2722:
18315:Core/Src/bno055.c ****     }
 38515              		.loc 1 18315 16 view .LVU10808
 38516 009c 6FF07E04 		mvn	r4, #126
 38517 00a0 F0E7     		b	.L2719
 38518              	.L2731:
 38519 00a2 00BF     		.align	2
 38520              	.L2730:
 38521 00a4 00000000 		.word	.LANCHOR0
 38522              		.cfi_endproc
 38523              	.LFE262:
 38525              		.section	.text.bno055_get_gyro_highrate_z_thres,"ax",%progbits
 38526              		.align	1
 38527              		.global	bno055_get_gyro_highrate_z_thres
 38528              		.syntax unified
 38529              		.thumb
 38530              		.thumb_func
 38532              	bno055_get_gyro_highrate_z_thres:
 38533              	.LVL4733:
 38534              	.LFB263:
18374:Core/Src/bno055.c **** 
18375:Core/Src/bno055.c **** /*!
18376:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z threshold
18377:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18378:Core/Src/bno055.c ****  *
18379:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18380:Core/Src/bno055.c ****  *
18381:Core/Src/bno055.c ****  *  @return results of bus communication function
18382:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18383:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18384:Core/Src/bno055.c ****  *
18385:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18386:Core/Src/bno055.c ****  *  selection of gyro range
18387:Core/Src/bno055.c ****  *
18388:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18389:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18390:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18391:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18392:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18393:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18394:Core/Src/bno055.c ****  *
18395:Core/Src/bno055.c ****  */
18396:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_thres(u8 *gyro_highrate_z_thres_u8)
18397:Core/Src/bno055.c **** {
 38535              		.loc 1 18397 1 is_stmt 1 view -0
 38536              		.cfi_startproc
 38537              		@ args = 0, pretend = 0, frame = 8
 38538              		@ frame_needed = 0, uses_anonymous_args = 0
 38539              		.loc 1 18397 1 is_stmt 0 view .LVU10810
 38540 0000 30B5     		push	{r4, r5, lr}
 38541              	.LCFI1045:
 38542              		.cfi_def_cfa_offset 12
 38543              		.cfi_offset 4, -12
 38544              		.cfi_offset 5, -8
 38545              		.cfi_offset 14, -4
ARM GAS  /tmp/cc9kYR4Z.s 			page 1081


 38546 0002 83B0     		sub	sp, sp, #12
 38547              	.LCFI1046:
 38548              		.cfi_def_cfa_offset 24
18398:Core/Src/bno055.c ****     /* Variable used to return value of
18399:Core/Src/bno055.c ****      * communication routine*/
18400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38549              		.loc 1 18400 5 is_stmt 1 view .LVU10811
 38550              	.LVL4734:
18401:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38551              		.loc 1 18401 5 view .LVU10812
 38552              		.loc 1 18401 8 is_stmt 0 view .LVU10813
 38553 0004 0023     		movs	r3, #0
 38554 0006 8DF80730 		strb	r3, [sp, #7]
18402:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38555              		.loc 1 18402 5 is_stmt 1 view .LVU10814
 38556              	.LVL4735:
18403:Core/Src/bno055.c **** 
18404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38557              		.loc 1 18405 5 view .LVU10815
 38558              		.loc 1 18405 18 is_stmt 0 view .LVU10816
 38559 000a 144B     		ldr	r3, .L2740
 38560 000c 1B68     		ldr	r3, [r3]
 38561              		.loc 1 18405 8 view .LVU10817
 38562 000e F3B1     		cbz	r3, .L2736
 38563 0010 0446     		mov	r4, r0
18406:Core/Src/bno055.c ****     {
18407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18408:Core/Src/bno055.c ****     }
18409:Core/Src/bno055.c ****     else
18410:Core/Src/bno055.c ****     {
18411:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z threshold is
18412:Core/Src/bno055.c ****          * available in the page one*/
18413:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38564              		.loc 1 18413 9 is_stmt 1 view .LVU10818
 38565              		.loc 1 18413 21 is_stmt 0 view .LVU10819
 38566 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38567              		.loc 1 18413 12 view .LVU10820
 38568 0014 012B     		cmp	r3, #1
 38569 0016 14D1     		bne	.L2739
 38570              	.LVL4736:
 38571              	.L2734:
18414:Core/Src/bno055.c ****         {
18415:Core/Src/bno055.c ****             /* Write page as one */
18416:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18417:Core/Src/bno055.c ****         }
18418:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38572              		.loc 1 18418 53 discriminator 1 view .LVU10821
 38573 0018 104B     		ldr	r3, .L2740
 38574 001a 1B68     		ldr	r3, [r3]
 38575 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38576              		.loc 1 18418 41 discriminator 1 view .LVU10822
 38577 001e 012B     		cmp	r3, #1
 38578 0020 18D1     		bne	.L2737
 38579              	.L2735:
18419:Core/Src/bno055.c ****         {
18420:Core/Src/bno055.c ****             /* Read the value of gyro highrate z threshold*/
ARM GAS  /tmp/cc9kYR4Z.s 			page 1082


18421:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38580              		.loc 1 18421 13 is_stmt 1 view .LVU10823
 38581              		.loc 1 18421 32 is_stmt 0 view .LVU10824
 38582 0022 0E4B     		ldr	r3, .L2740
 38583 0024 1868     		ldr	r0, [r3]
 38584 0026 0569     		ldr	r5, [r0, #16]
 38585              		.loc 1 18421 24 view .LVU10825
 38586 0028 0123     		movs	r3, #1
 38587 002a 0DF10702 		add	r2, sp, #7
 38588 002e 1C21     		movs	r1, #28
 38589 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38590 0032 A847     		blx	r5
 38591              	.LVL4737:
18422:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18423:Core/Src/bno055.c ****                                                       &data_u8r,
18424:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18425:Core/Src/bno055.c ****             *gyro_highrate_z_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES)
 38592              		.loc 1 18425 13 is_stmt 1 view .LVU10826
 38593              		.loc 1 18425 41 is_stmt 0 view .LVU10827
 38594 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38595 0038 03F01F03 		and	r3, r3, #31
 38596              		.loc 1 18425 39 view .LVU10828
 38597 003c 2370     		strb	r3, [r4]
 38598              	.LVL4738:
 38599              	.L2733:
18426:Core/Src/bno055.c ****         }
18427:Core/Src/bno055.c ****         else
18428:Core/Src/bno055.c ****         {
18429:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18430:Core/Src/bno055.c ****         }
18431:Core/Src/bno055.c ****     }
18432:Core/Src/bno055.c **** 
18433:Core/Src/bno055.c ****     return com_rslt;
18434:Core/Src/bno055.c **** }
 38600              		.loc 1 18434 1 view .LVU10829
 38601 003e 03B0     		add	sp, sp, #12
 38602              	.LCFI1047:
 38603              		.cfi_remember_state
 38604              		.cfi_def_cfa_offset 12
 38605              		@ sp needed
 38606 0040 30BD     		pop	{r4, r5, pc}
 38607              	.LVL4739:
 38608              	.L2739:
 38609              	.LCFI1048:
 38610              		.cfi_restore_state
18416:Core/Src/bno055.c ****         }
 38611              		.loc 1 18416 13 is_stmt 1 view .LVU10830
18416:Core/Src/bno055.c ****         }
 38612              		.loc 1 18416 23 is_stmt 0 view .LVU10831
 38613 0042 0120     		movs	r0, #1
 38614              	.LVL4740:
18416:Core/Src/bno055.c ****         }
 38615              		.loc 1 18416 23 view .LVU10832
 38616 0044 FFF7FEFF 		bl	bno055_write_page_id
 38617              	.LVL4741:
18418:Core/Src/bno055.c ****         {
 38618              		.loc 1 18418 9 is_stmt 1 view .LVU10833
ARM GAS  /tmp/cc9kYR4Z.s 			page 1083


18418:Core/Src/bno055.c ****         {
 38619              		.loc 1 18418 12 is_stmt 0 view .LVU10834
 38620 0048 0028     		cmp	r0, #0
 38621 004a EAD0     		beq	.L2735
 38622 004c E4E7     		b	.L2734
 38623              	.LVL4742:
 38624              	.L2736:
18407:Core/Src/bno055.c ****     }
 38625              		.loc 1 18407 16 view .LVU10835
 38626 004e 6FF07E00 		mvn	r0, #126
 38627              	.LVL4743:
18407:Core/Src/bno055.c ****     }
 38628              		.loc 1 18407 16 view .LVU10836
 38629 0052 F4E7     		b	.L2733
 38630              	.LVL4744:
 38631              	.L2737:
18429:Core/Src/bno055.c ****         }
 38632              		.loc 1 18429 22 view .LVU10837
 38633 0054 4FF0FF30 		mov	r0, #-1
 38634 0058 F1E7     		b	.L2733
 38635              	.L2741:
 38636 005a 00BF     		.align	2
 38637              	.L2740:
 38638 005c 00000000 		.word	.LANCHOR0
 38639              		.cfi_endproc
 38640              	.LFE263:
 38642              		.section	.text.bno055_set_gyro_highrate_z_thres,"ax",%progbits
 38643              		.align	1
 38644              		.global	bno055_set_gyro_highrate_z_thres
 38645              		.syntax unified
 38646              		.thumb
 38647              		.thumb_func
 38649              	bno055_set_gyro_highrate_z_thres:
 38650              	.LVL4745:
 38651              	.LFB264:
18435:Core/Src/bno055.c **** 
18436:Core/Src/bno055.c **** /*!
18437:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z threshold
18438:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18439:Core/Src/bno055.c ****  *
18440:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18441:Core/Src/bno055.c ****  *
18442:Core/Src/bno055.c ****  *  @return results of bus communication function
18443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18445:Core/Src/bno055.c ****  *
18446:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18447:Core/Src/bno055.c ****  *  selection of gyro range
18448:Core/Src/bno055.c ****  *
18449:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18450:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18451:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18452:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18453:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18454:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18455:Core/Src/bno055.c ****  *
18456:Core/Src/bno055.c ****  */
ARM GAS  /tmp/cc9kYR4Z.s 			page 1084


18457:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_thres(u8 gyro_highrate_z_thres_u8)
18458:Core/Src/bno055.c **** {
 38652              		.loc 1 18458 1 is_stmt 1 view -0
 38653              		.cfi_startproc
 38654              		@ args = 0, pretend = 0, frame = 8
 38655              		@ frame_needed = 0, uses_anonymous_args = 0
 38656              		.loc 1 18458 1 is_stmt 0 view .LVU10839
 38657 0000 30B5     		push	{r4, r5, lr}
 38658              	.LCFI1049:
 38659              		.cfi_def_cfa_offset 12
 38660              		.cfi_offset 4, -12
 38661              		.cfi_offset 5, -8
 38662              		.cfi_offset 14, -4
 38663 0002 83B0     		sub	sp, sp, #12
 38664              	.LCFI1050:
 38665              		.cfi_def_cfa_offset 24
18459:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38666              		.loc 1 18459 5 is_stmt 1 view .LVU10840
 38667              	.LVL4746:
18460:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38668              		.loc 1 18460 5 view .LVU10841
 38669              		.loc 1 18460 8 is_stmt 0 view .LVU10842
 38670 0004 0023     		movs	r3, #0
 38671 0006 8DF80730 		strb	r3, [sp, #7]
18461:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38672              		.loc 1 18461 5 is_stmt 1 view .LVU10843
 38673              	.LVL4747:
18462:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38674              		.loc 1 18462 5 view .LVU10844
 38675              		.loc 1 18462 8 is_stmt 0 view .LVU10845
 38676 000a 8DF80630 		strb	r3, [sp, #6]
18463:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38677              		.loc 1 18463 5 is_stmt 1 view .LVU10846
 38678              	.LVL4748:
18464:Core/Src/bno055.c **** 
18465:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18466:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38679              		.loc 1 18466 5 view .LVU10847
 38680              		.loc 1 18466 18 is_stmt 0 view .LVU10848
 38681 000e 294B     		ldr	r3, .L2754
 38682 0010 1B68     		ldr	r3, [r3]
 38683              		.loc 1 18466 8 view .LVU10849
 38684 0012 002B     		cmp	r3, #0
 38685 0014 4AD0     		beq	.L2746
 38686 0016 0546     		mov	r5, r0
18467:Core/Src/bno055.c ****     {
18468:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18469:Core/Src/bno055.c ****     }
18470:Core/Src/bno055.c ****     else
18471:Core/Src/bno055.c ****     {
18472:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18473:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18474:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18475:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38687              		.loc 1 18475 9 is_stmt 1 view .LVU10850
 38688              		.loc 1 18475 19 is_stmt 0 view .LVU10851
 38689 0018 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/cc9kYR4Z.s 			page 1085


 38690              	.LVL4749:
 38691              		.loc 1 18475 19 view .LVU10852
 38692 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38693              	.LVL4750:
18476:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38694              		.loc 1 18476 9 is_stmt 1 view .LVU10853
 38695              		.loc 1 18476 12 is_stmt 0 view .LVU10854
 38696 0020 0446     		mov	r4, r0
 38697 0022 90BB     		cbnz	r0, .L2747
18477:Core/Src/bno055.c ****         {
18478:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38698              		.loc 1 18478 13 is_stmt 1 view .LVU10855
 38699              		.loc 1 18478 32 is_stmt 0 view .LVU10856
 38700 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38701              		.loc 1 18478 16 view .LVU10857
 38702 0028 1BB9     		cbnz	r3, .L2751
 38703              	.LVL4751:
 38704              	.L2745:
18479:Core/Src/bno055.c ****             {
18480:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18481:Core/Src/bno055.c ****             }
18482:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38705              		.loc 1 18482 13 is_stmt 1 view .LVU10858
 38706              		.loc 1 18482 16 is_stmt 0 view .LVU10859
 38707 002a 44B1     		cbz	r4, .L2752
18483:Core/Src/bno055.c ****             {
18484:Core/Src/bno055.c ****                 /* Write page as one */
18485:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18486:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18487:Core/Src/bno055.c ****                 {
18488:Core/Src/bno055.c ****                     /* Write the value
18489:Core/Src/bno055.c ****                      * of gyro highrate z threshold*/
18490:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18491:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18492:Core/Src/bno055.c ****                                                               &data_u8r,
18493:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18494:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18495:Core/Src/bno055.c ****                     {
18496:Core/Src/bno055.c ****                         data_u8r =
18497:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
18498:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18499:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
18500:Core/Src/bno055.c ****                                                                     &data_u8r,
18501:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18502:Core/Src/bno055.c ****                     }
18503:Core/Src/bno055.c ****                 }
18504:Core/Src/bno055.c ****                 else
18505:Core/Src/bno055.c ****                 {
18506:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18507:Core/Src/bno055.c ****                 }
18508:Core/Src/bno055.c ****             }
18509:Core/Src/bno055.c ****             else
18510:Core/Src/bno055.c ****             {
18511:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38708              		.loc 1 18511 26 view .LVU10860
 38709 002c 4FF0FF34 		mov	r4, #-1
 38710              	.LVL4752:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1086


 38711              		.loc 1 18511 26 view .LVU10861
 38712 0030 2DE0     		b	.L2744
 38713              	.LVL4753:
 38714              	.L2751:
18480:Core/Src/bno055.c ****             }
 38715              		.loc 1 18480 17 is_stmt 1 view .LVU10862
18480:Core/Src/bno055.c ****             }
 38716              		.loc 1 18480 28 is_stmt 0 view .LVU10863
 38717 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38718              	.LVL4754:
18480:Core/Src/bno055.c ****             }
 38719              		.loc 1 18480 25 view .LVU10864
 38720 0036 54FA80F4 		uxtab	r4, r4, r0
 38721 003a 64B2     		sxtb	r4, r4
 38722              	.LVL4755:
18480:Core/Src/bno055.c ****             }
 38723              		.loc 1 18480 25 view .LVU10865
 38724 003c F5E7     		b	.L2745
 38725              	.L2752:
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38726              		.loc 1 18485 17 is_stmt 1 view .LVU10866
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38727              		.loc 1 18485 30 is_stmt 0 view .LVU10867
 38728 003e 0120     		movs	r0, #1
 38729 0040 FFF7FEFF 		bl	bno055_write_page_id
 38730              	.LVL4756:
18486:Core/Src/bno055.c ****                 {
 38731              		.loc 1 18486 17 is_stmt 1 view .LVU10868
18486:Core/Src/bno055.c ****                 {
 38732              		.loc 1 18486 20 is_stmt 0 view .LVU10869
 38733 0044 48BB     		cbnz	r0, .L2749
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38734              		.loc 1 18490 21 is_stmt 1 view .LVU10870
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38735              		.loc 1 18490 40 is_stmt 0 view .LVU10871
 38736 0046 1B4B     		ldr	r3, .L2754
 38737 0048 1868     		ldr	r0, [r3]
 38738              	.LVL4757:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38739              		.loc 1 18490 40 view .LVU10872
 38740 004a 0469     		ldr	r4, [r0, #16]
 38741              	.LVL4758:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38742              		.loc 1 18490 32 view .LVU10873
 38743 004c 0123     		movs	r3, #1
 38744 004e 0DF10702 		add	r2, sp, #7
 38745 0052 1C21     		movs	r1, #28
 38746 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38747 0056 A047     		blx	r4
 38748              	.LVL4759:
18494:Core/Src/bno055.c ****                     {
 38749              		.loc 1 18494 21 is_stmt 1 view .LVU10874
18494:Core/Src/bno055.c ****                     {
 38750              		.loc 1 18494 24 is_stmt 0 view .LVU10875
 38751 0058 0446     		mov	r4, r0
 38752 005a C0B9     		cbnz	r0, .L2744
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
ARM GAS  /tmp/cc9kYR4Z.s 			page 1087


 38753              		.loc 1 18496 25 is_stmt 1 view .LVU10876
18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38754              		.loc 1 18497 29 is_stmt 0 view .LVU10877
 38755 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38756 0060 23F01F03 		bic	r3, r3, #31
 38757 0064 5BB2     		sxtb	r3, r3
 38758 0066 05F01F00 		and	r0, r5, #31
 38759              	.LVL4760:
18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38760              		.loc 1 18497 29 view .LVU10878
 38761 006a 0343     		orrs	r3, r3, r0
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 38762              		.loc 1 18496 34 view .LVU10879
 38763 006c 8DF80730 		strb	r3, [sp, #7]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38764              		.loc 1 18498 25 is_stmt 1 view .LVU10880
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38765              		.loc 1 18498 45 is_stmt 0 view .LVU10881
 38766 0070 104B     		ldr	r3, .L2754
 38767 0072 1868     		ldr	r0, [r3]
 38768 0074 C568     		ldr	r5, [r0, #12]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38769              		.loc 1 18498 37 view .LVU10882
 38770 0076 0123     		movs	r3, #1
 38771 0078 0DF10702 		add	r2, sp, #7
 38772 007c 1C21     		movs	r1, #28
 38773 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38774 0080 A847     		blx	r5
 38775              	.LVL4761:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38776              		.loc 1 18498 34 view .LVU10883
 38777 0082 54FA80F0 		uxtab	r0, r4, r0
 38778 0086 44B2     		sxtb	r4, r0
 38779              	.LVL4762:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38780              		.loc 1 18498 34 view .LVU10884
 38781 0088 01E0     		b	.L2744
 38782              	.LVL4763:
 38783              	.L2747:
18512:Core/Src/bno055.c ****             }
18513:Core/Src/bno055.c ****         }
18514:Core/Src/bno055.c ****         else
18515:Core/Src/bno055.c ****         {
18516:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38784              		.loc 1 18516 22 view .LVU10885
 38785 008a 4FF0FF34 		mov	r4, #-1
 38786              	.LVL4764:
 38787              	.L2744:
18517:Core/Src/bno055.c ****         }
18518:Core/Src/bno055.c ****     }
18519:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38788              		.loc 1 18519 5 is_stmt 1 view .LVU10886
 38789              		.loc 1 18519 24 is_stmt 0 view .LVU10887
 38790 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38791              		.loc 1 18519 8 view .LVU10888
 38792 0092 28B9     		cbnz	r0, .L2753
 38793              	.LVL4765:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1088


 38794              	.L2743:
18520:Core/Src/bno055.c ****     {
18521:Core/Src/bno055.c ****         /* set the operation mode of
18522:Core/Src/bno055.c ****          * previous operation mode*/
18523:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18524:Core/Src/bno055.c ****     }
18525:Core/Src/bno055.c **** 
18526:Core/Src/bno055.c ****     return com_rslt;
18527:Core/Src/bno055.c **** }
 38795              		.loc 1 18527 1 view .LVU10889
 38796 0094 2046     		mov	r0, r4
 38797 0096 03B0     		add	sp, sp, #12
 38798              	.LCFI1051:
 38799              		.cfi_remember_state
 38800              		.cfi_def_cfa_offset 12
 38801              		@ sp needed
 38802 0098 30BD     		pop	{r4, r5, pc}
 38803              	.LVL4766:
 38804              	.L2749:
 38805              	.LCFI1052:
 38806              		.cfi_restore_state
18506:Core/Src/bno055.c ****                 }
 38807              		.loc 1 18506 30 view .LVU10890
 38808 009a 4FF0FF34 		mov	r4, #-1
 38809              	.LVL4767:
18506:Core/Src/bno055.c ****                 }
 38810              		.loc 1 18506 30 view .LVU10891
 38811 009e F6E7     		b	.L2744
 38812              	.LVL4768:
 38813              	.L2753:
18523:Core/Src/bno055.c ****     }
 38814              		.loc 1 18523 9 is_stmt 1 view .LVU10892
18523:Core/Src/bno055.c ****     }
 38815              		.loc 1 18523 21 is_stmt 0 view .LVU10893
 38816 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 38817              	.LVL4769:
18523:Core/Src/bno055.c ****     }
 38818              		.loc 1 18523 18 view .LVU10894
 38819 00a4 54FA80F0 		uxtab	r0, r4, r0
 38820 00a8 44B2     		sxtb	r4, r0
 38821              	.LVL4770:
18523:Core/Src/bno055.c ****     }
 38822              		.loc 1 18523 18 view .LVU10895
 38823 00aa F3E7     		b	.L2743
 38824              	.LVL4771:
 38825              	.L2746:
18468:Core/Src/bno055.c ****     }
 38826              		.loc 1 18468 16 view .LVU10896
 38827 00ac 6FF07E04 		mvn	r4, #126
 38828 00b0 F0E7     		b	.L2743
 38829              	.L2755:
 38830 00b2 00BF     		.align	2
 38831              	.L2754:
 38832 00b4 00000000 		.word	.LANCHOR0
 38833              		.cfi_endproc
 38834              	.LFE264:
 38836              		.section	.text.bno055_get_gyro_highrate_z_hyst,"ax",%progbits
ARM GAS  /tmp/cc9kYR4Z.s 			page 1089


 38837              		.align	1
 38838              		.global	bno055_get_gyro_highrate_z_hyst
 38839              		.syntax unified
 38840              		.thumb
 38841              		.thumb_func
 38843              	bno055_get_gyro_highrate_z_hyst:
 38844              	.LVL4772:
 38845              	.LFB265:
18528:Core/Src/bno055.c **** 
18529:Core/Src/bno055.c **** /*!
18530:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z hysteresis
18531:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18532:Core/Src/bno055.c ****  *
18533:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18534:Core/Src/bno055.c ****  *
18535:Core/Src/bno055.c ****  *  @return results of bus communication function
18536:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18537:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18538:Core/Src/bno055.c ****  *
18539:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18540:Core/Src/bno055.c ****  *
18541:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18542:Core/Src/bno055.c ****  *
18543:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18544:Core/Src/bno055.c ****  *
18545:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18546:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18547:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18548:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18549:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18550:Core/Src/bno055.c ****  */
18551:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_hyst(u8 *gyro_highrate_z_hyst_u8)
18552:Core/Src/bno055.c **** {
 38846              		.loc 1 18552 1 is_stmt 1 view -0
 38847              		.cfi_startproc
 38848              		@ args = 0, pretend = 0, frame = 8
 38849              		@ frame_needed = 0, uses_anonymous_args = 0
 38850              		.loc 1 18552 1 is_stmt 0 view .LVU10898
 38851 0000 30B5     		push	{r4, r5, lr}
 38852              	.LCFI1053:
 38853              		.cfi_def_cfa_offset 12
 38854              		.cfi_offset 4, -12
 38855              		.cfi_offset 5, -8
 38856              		.cfi_offset 14, -4
 38857 0002 83B0     		sub	sp, sp, #12
 38858              	.LCFI1054:
 38859              		.cfi_def_cfa_offset 24
18553:Core/Src/bno055.c ****     /* Variable used to return value of
18554:Core/Src/bno055.c ****      * communication routine*/
18555:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38860              		.loc 1 18555 5 is_stmt 1 view .LVU10899
 38861              	.LVL4773:
18556:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38862              		.loc 1 18556 5 view .LVU10900
 38863              		.loc 1 18556 8 is_stmt 0 view .LVU10901
 38864 0004 0023     		movs	r3, #0
 38865 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/cc9kYR4Z.s 			page 1090


18557:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38866              		.loc 1 18557 5 is_stmt 1 view .LVU10902
 38867              	.LVL4774:
18558:Core/Src/bno055.c **** 
18559:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18560:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38868              		.loc 1 18560 5 view .LVU10903
 38869              		.loc 1 18560 18 is_stmt 0 view .LVU10904
 38870 000a 144B     		ldr	r3, .L2764
 38871 000c 1B68     		ldr	r3, [r3]
 38872              		.loc 1 18560 8 view .LVU10905
 38873 000e F3B1     		cbz	r3, .L2760
 38874 0010 0446     		mov	r4, r0
18561:Core/Src/bno055.c ****     {
18562:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18563:Core/Src/bno055.c ****     }
18564:Core/Src/bno055.c ****     else
18565:Core/Src/bno055.c ****     {
18566:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z hysteresis is
18567:Core/Src/bno055.c ****          * available in the page one*/
18568:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38875              		.loc 1 18568 9 is_stmt 1 view .LVU10906
 38876              		.loc 1 18568 21 is_stmt 0 view .LVU10907
 38877 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38878              		.loc 1 18568 12 view .LVU10908
 38879 0014 012B     		cmp	r3, #1
 38880 0016 14D1     		bne	.L2763
 38881              	.LVL4775:
 38882              	.L2758:
18569:Core/Src/bno055.c ****         {
18570:Core/Src/bno055.c ****             /* Write page as one */
18571:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18572:Core/Src/bno055.c ****         }
18573:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38883              		.loc 1 18573 53 discriminator 1 view .LVU10909
 38884 0018 104B     		ldr	r3, .L2764
 38885 001a 1B68     		ldr	r3, [r3]
 38886 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38887              		.loc 1 18573 41 discriminator 1 view .LVU10910
 38888 001e 012B     		cmp	r3, #1
 38889 0020 18D1     		bne	.L2761
 38890              	.L2759:
18574:Core/Src/bno055.c ****         {
18575:Core/Src/bno055.c ****             /* Read the value of gyro highrate z hysteresis*/
18576:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38891              		.loc 1 18576 13 is_stmt 1 view .LVU10911
 38892              		.loc 1 18576 32 is_stmt 0 view .LVU10912
 38893 0022 0E4B     		ldr	r3, .L2764
 38894 0024 1868     		ldr	r0, [r3]
 38895 0026 0569     		ldr	r5, [r0, #16]
 38896              		.loc 1 18576 24 view .LVU10913
 38897 0028 0123     		movs	r3, #1
 38898 002a 0DF10702 		add	r2, sp, #7
 38899 002e 1C21     		movs	r1, #28
 38900 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38901 0032 A847     		blx	r5
 38902              	.LVL4776:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1091


18577:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18578:Core/Src/bno055.c ****                                                       &data_u8r,
18579:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18580:Core/Src/bno055.c ****             *gyro_highrate_z_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST);
 38903              		.loc 1 18580 13 is_stmt 1 view .LVU10914
 38904              		.loc 1 18580 40 is_stmt 0 view .LVU10915
 38905 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38906 0038 C3F34113 		ubfx	r3, r3, #5, #2
 38907              		.loc 1 18580 38 view .LVU10916
 38908 003c 2370     		strb	r3, [r4]
 38909              	.LVL4777:
 38910              	.L2757:
18581:Core/Src/bno055.c ****         }
18582:Core/Src/bno055.c ****         else
18583:Core/Src/bno055.c ****         {
18584:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18585:Core/Src/bno055.c ****         }
18586:Core/Src/bno055.c ****     }
18587:Core/Src/bno055.c **** 
18588:Core/Src/bno055.c ****     return com_rslt;
18589:Core/Src/bno055.c **** }
 38911              		.loc 1 18589 1 view .LVU10917
 38912 003e 03B0     		add	sp, sp, #12
 38913              	.LCFI1055:
 38914              		.cfi_remember_state
 38915              		.cfi_def_cfa_offset 12
 38916              		@ sp needed
 38917 0040 30BD     		pop	{r4, r5, pc}
 38918              	.LVL4778:
 38919              	.L2763:
 38920              	.LCFI1056:
 38921              		.cfi_restore_state
18571:Core/Src/bno055.c ****         }
 38922              		.loc 1 18571 13 is_stmt 1 view .LVU10918
18571:Core/Src/bno055.c ****         }
 38923              		.loc 1 18571 23 is_stmt 0 view .LVU10919
 38924 0042 0120     		movs	r0, #1
 38925              	.LVL4779:
18571:Core/Src/bno055.c ****         }
 38926              		.loc 1 18571 23 view .LVU10920
 38927 0044 FFF7FEFF 		bl	bno055_write_page_id
 38928              	.LVL4780:
18573:Core/Src/bno055.c ****         {
 38929              		.loc 1 18573 9 is_stmt 1 view .LVU10921
18573:Core/Src/bno055.c ****         {
 38930              		.loc 1 18573 12 is_stmt 0 view .LVU10922
 38931 0048 0028     		cmp	r0, #0
 38932 004a EAD0     		beq	.L2759
 38933 004c E4E7     		b	.L2758
 38934              	.LVL4781:
 38935              	.L2760:
18562:Core/Src/bno055.c ****     }
 38936              		.loc 1 18562 16 view .LVU10923
 38937 004e 6FF07E00 		mvn	r0, #126
 38938              	.LVL4782:
18562:Core/Src/bno055.c ****     }
 38939              		.loc 1 18562 16 view .LVU10924
ARM GAS  /tmp/cc9kYR4Z.s 			page 1092


 38940 0052 F4E7     		b	.L2757
 38941              	.LVL4783:
 38942              	.L2761:
18584:Core/Src/bno055.c ****         }
 38943              		.loc 1 18584 22 view .LVU10925
 38944 0054 4FF0FF30 		mov	r0, #-1
 38945 0058 F1E7     		b	.L2757
 38946              	.L2765:
 38947 005a 00BF     		.align	2
 38948              	.L2764:
 38949 005c 00000000 		.word	.LANCHOR0
 38950              		.cfi_endproc
 38951              	.LFE265:
 38953              		.section	.text.bno055_set_gyro_highrate_z_hyst,"ax",%progbits
 38954              		.align	1
 38955              		.global	bno055_set_gyro_highrate_z_hyst
 38956              		.syntax unified
 38957              		.thumb
 38958              		.thumb_func
 38960              	bno055_set_gyro_highrate_z_hyst:
 38961              	.LVL4784:
 38962              	.LFB266:
18590:Core/Src/bno055.c **** 
18591:Core/Src/bno055.c **** /*!
18592:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z hysteresis
18593:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18594:Core/Src/bno055.c ****  *
18595:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18596:Core/Src/bno055.c ****  *
18597:Core/Src/bno055.c ****  *  @return results of bus communication function
18598:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18599:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18600:Core/Src/bno055.c ****  *
18601:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18602:Core/Src/bno055.c ****  *
18603:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18604:Core/Src/bno055.c ****  *
18605:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18606:Core/Src/bno055.c ****  *
18607:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18608:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18609:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18610:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18611:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18612:Core/Src/bno055.c ****  */
18613:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_hyst(u8 gyro_highrate_z_hyst_u8)
18614:Core/Src/bno055.c **** {
 38963              		.loc 1 18614 1 is_stmt 1 view -0
 38964              		.cfi_startproc
 38965              		@ args = 0, pretend = 0, frame = 8
 38966              		@ frame_needed = 0, uses_anonymous_args = 0
 38967              		.loc 1 18614 1 is_stmt 0 view .LVU10927
 38968 0000 30B5     		push	{r4, r5, lr}
 38969              	.LCFI1057:
 38970              		.cfi_def_cfa_offset 12
 38971              		.cfi_offset 4, -12
 38972              		.cfi_offset 5, -8
ARM GAS  /tmp/cc9kYR4Z.s 			page 1093


 38973              		.cfi_offset 14, -4
 38974 0002 83B0     		sub	sp, sp, #12
 38975              	.LCFI1058:
 38976              		.cfi_def_cfa_offset 24
18615:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38977              		.loc 1 18615 5 is_stmt 1 view .LVU10928
 38978              	.LVL4785:
18616:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38979              		.loc 1 18616 5 view .LVU10929
 38980              		.loc 1 18616 8 is_stmt 0 view .LVU10930
 38981 0004 0023     		movs	r3, #0
 38982 0006 8DF80730 		strb	r3, [sp, #7]
18617:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38983              		.loc 1 18617 5 is_stmt 1 view .LVU10931
 38984              	.LVL4786:
18618:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38985              		.loc 1 18618 5 view .LVU10932
 38986              		.loc 1 18618 8 is_stmt 0 view .LVU10933
 38987 000a 8DF80630 		strb	r3, [sp, #6]
18619:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38988              		.loc 1 18619 5 is_stmt 1 view .LVU10934
 38989              	.LVL4787:
18620:Core/Src/bno055.c **** 
18621:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18622:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38990              		.loc 1 18622 5 view .LVU10935
 38991              		.loc 1 18622 18 is_stmt 0 view .LVU10936
 38992 000e 2A4B     		ldr	r3, .L2778
 38993 0010 1B68     		ldr	r3, [r3]
 38994              		.loc 1 18622 8 view .LVU10937
 38995 0012 002B     		cmp	r3, #0
 38996 0014 4CD0     		beq	.L2770
 38997 0016 0546     		mov	r5, r0
18623:Core/Src/bno055.c ****     {
18624:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18625:Core/Src/bno055.c ****     }
18626:Core/Src/bno055.c ****     else
18627:Core/Src/bno055.c ****     {
18628:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18629:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18630:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18631:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38998              		.loc 1 18631 9 is_stmt 1 view .LVU10938
 38999              		.loc 1 18631 19 is_stmt 0 view .LVU10939
 39000 0018 0DF10600 		add	r0, sp, #6
 39001              	.LVL4788:
 39002              		.loc 1 18631 19 view .LVU10940
 39003 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39004              	.LVL4789:
18632:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39005              		.loc 1 18632 9 is_stmt 1 view .LVU10941
 39006              		.loc 1 18632 12 is_stmt 0 view .LVU10942
 39007 0020 0446     		mov	r4, r0
 39008 0022 0028     		cmp	r0, #0
 39009 0024 33D1     		bne	.L2771
18633:Core/Src/bno055.c ****         {
18634:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/cc9kYR4Z.s 			page 1094


 39010              		.loc 1 18634 13 is_stmt 1 view .LVU10943
 39011              		.loc 1 18634 32 is_stmt 0 view .LVU10944
 39012 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39013              		.loc 1 18634 16 view .LVU10945
 39014 002a 1BB9     		cbnz	r3, .L2775
 39015              	.LVL4790:
 39016              	.L2769:
18635:Core/Src/bno055.c ****             {
18636:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18637:Core/Src/bno055.c ****             }
18638:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39017              		.loc 1 18638 13 is_stmt 1 view .LVU10946
 39018              		.loc 1 18638 16 is_stmt 0 view .LVU10947
 39019 002c 44B1     		cbz	r4, .L2776
18639:Core/Src/bno055.c ****             {
18640:Core/Src/bno055.c ****                 /* Write page as one */
18641:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18642:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18643:Core/Src/bno055.c ****                 {
18644:Core/Src/bno055.c ****                     /* Write the value
18645:Core/Src/bno055.c ****                      * of gyro highrate z hysteresis*/
18646:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18647:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18648:Core/Src/bno055.c ****                                                               &data_u8r,
18649:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18650:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18651:Core/Src/bno055.c ****                     {
18652:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST, gyro_
18653:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18654:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
18655:Core/Src/bno055.c ****                                                                     &data_u8r,
18656:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18657:Core/Src/bno055.c ****                     }
18658:Core/Src/bno055.c ****                 }
18659:Core/Src/bno055.c ****                 else
18660:Core/Src/bno055.c ****                 {
18661:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18662:Core/Src/bno055.c ****                 }
18663:Core/Src/bno055.c ****             }
18664:Core/Src/bno055.c ****             else
18665:Core/Src/bno055.c ****             {
18666:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39020              		.loc 1 18666 26 view .LVU10948
 39021 002e 4FF0FF34 		mov	r4, #-1
 39022              	.LVL4791:
 39023              		.loc 1 18666 26 view .LVU10949
 39024 0032 2EE0     		b	.L2768
 39025              	.LVL4792:
 39026              	.L2775:
18636:Core/Src/bno055.c ****             }
 39027              		.loc 1 18636 17 is_stmt 1 view .LVU10950
18636:Core/Src/bno055.c ****             }
 39028              		.loc 1 18636 28 is_stmt 0 view .LVU10951
 39029 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 39030              	.LVL4793:
18636:Core/Src/bno055.c ****             }
 39031              		.loc 1 18636 25 view .LVU10952
ARM GAS  /tmp/cc9kYR4Z.s 			page 1095


 39032 0038 54FA80F4 		uxtab	r4, r4, r0
 39033 003c 64B2     		sxtb	r4, r4
 39034              	.LVL4794:
18636:Core/Src/bno055.c ****             }
 39035              		.loc 1 18636 25 view .LVU10953
 39036 003e F5E7     		b	.L2769
 39037              	.L2776:
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39038              		.loc 1 18641 17 is_stmt 1 view .LVU10954
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39039              		.loc 1 18641 30 is_stmt 0 view .LVU10955
 39040 0040 0120     		movs	r0, #1
 39041 0042 FFF7FEFF 		bl	bno055_write_page_id
 39042              	.LVL4795:
18642:Core/Src/bno055.c ****                 {
 39043              		.loc 1 18642 17 is_stmt 1 view .LVU10956
18642:Core/Src/bno055.c ****                 {
 39044              		.loc 1 18642 20 is_stmt 0 view .LVU10957
 39045 0046 50BB     		cbnz	r0, .L2773
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39046              		.loc 1 18646 21 is_stmt 1 view .LVU10958
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39047              		.loc 1 18646 40 is_stmt 0 view .LVU10959
 39048 0048 1B4B     		ldr	r3, .L2778
 39049 004a 1868     		ldr	r0, [r3]
 39050              	.LVL4796:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39051              		.loc 1 18646 40 view .LVU10960
 39052 004c 0469     		ldr	r4, [r0, #16]
 39053              	.LVL4797:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39054              		.loc 1 18646 32 view .LVU10961
 39055 004e 0123     		movs	r3, #1
 39056 0050 0DF10702 		add	r2, sp, #7
 39057 0054 1C21     		movs	r1, #28
 39058 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39059 0058 A047     		blx	r4
 39060              	.LVL4798:
18650:Core/Src/bno055.c ****                     {
 39061              		.loc 1 18650 21 is_stmt 1 view .LVU10962
18650:Core/Src/bno055.c ****                     {
 39062              		.loc 1 18650 24 is_stmt 0 view .LVU10963
 39063 005a 0446     		mov	r4, r0
 39064 005c C8B9     		cbnz	r0, .L2768
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39065              		.loc 1 18652 25 is_stmt 1 view .LVU10964
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39066              		.loc 1 18652 36 is_stmt 0 view .LVU10965
 39067 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39068 0062 23F06003 		bic	r3, r3, #96
 39069 0066 5BB2     		sxtb	r3, r3
 39070 0068 6801     		lsls	r0, r5, #5
 39071              	.LVL4799:
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39072              		.loc 1 18652 36 view .LVU10966
 39073 006a 00F06000 		and	r0, r0, #96
 39074 006e 0343     		orrs	r3, r3, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1096


18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39075              		.loc 1 18652 34 view .LVU10967
 39076 0070 8DF80730 		strb	r3, [sp, #7]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39077              		.loc 1 18653 25 is_stmt 1 view .LVU10968
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39078              		.loc 1 18653 45 is_stmt 0 view .LVU10969
 39079 0074 104B     		ldr	r3, .L2778
 39080 0076 1868     		ldr	r0, [r3]
 39081 0078 C568     		ldr	r5, [r0, #12]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39082              		.loc 1 18653 37 view .LVU10970
 39083 007a 0123     		movs	r3, #1
 39084 007c 0DF10702 		add	r2, sp, #7
 39085 0080 1C21     		movs	r1, #28
 39086 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39087 0084 A847     		blx	r5
 39088              	.LVL4800:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39089              		.loc 1 18653 34 view .LVU10971
 39090 0086 54FA80F0 		uxtab	r0, r4, r0
 39091 008a 44B2     		sxtb	r4, r0
 39092              	.LVL4801:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39093              		.loc 1 18653 34 view .LVU10972
 39094 008c 01E0     		b	.L2768
 39095              	.LVL4802:
 39096              	.L2771:
18667:Core/Src/bno055.c ****             }
18668:Core/Src/bno055.c ****         }
18669:Core/Src/bno055.c ****         else
18670:Core/Src/bno055.c ****         {
18671:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39097              		.loc 1 18671 22 view .LVU10973
 39098 008e 4FF0FF34 		mov	r4, #-1
 39099              	.LVL4803:
 39100              	.L2768:
18672:Core/Src/bno055.c ****         }
18673:Core/Src/bno055.c ****     }
18674:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39101              		.loc 1 18674 5 is_stmt 1 view .LVU10974
 39102              		.loc 1 18674 24 is_stmt 0 view .LVU10975
 39103 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39104              		.loc 1 18674 8 view .LVU10976
 39105 0096 28B9     		cbnz	r0, .L2777
 39106              	.LVL4804:
 39107              	.L2767:
18675:Core/Src/bno055.c ****     {
18676:Core/Src/bno055.c ****         /* set the operation mode of
18677:Core/Src/bno055.c ****          * previous operation mode*/
18678:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18679:Core/Src/bno055.c ****     }
18680:Core/Src/bno055.c **** 
18681:Core/Src/bno055.c ****     return com_rslt;
18682:Core/Src/bno055.c **** }
 39108              		.loc 1 18682 1 view .LVU10977
 39109 0098 2046     		mov	r0, r4
ARM GAS  /tmp/cc9kYR4Z.s 			page 1097


 39110 009a 03B0     		add	sp, sp, #12
 39111              	.LCFI1059:
 39112              		.cfi_remember_state
 39113              		.cfi_def_cfa_offset 12
 39114              		@ sp needed
 39115 009c 30BD     		pop	{r4, r5, pc}
 39116              	.LVL4805:
 39117              	.L2773:
 39118              	.LCFI1060:
 39119              		.cfi_restore_state
18661:Core/Src/bno055.c ****                 }
 39120              		.loc 1 18661 30 view .LVU10978
 39121 009e 4FF0FF34 		mov	r4, #-1
 39122              	.LVL4806:
18661:Core/Src/bno055.c ****                 }
 39123              		.loc 1 18661 30 view .LVU10979
 39124 00a2 F6E7     		b	.L2768
 39125              	.LVL4807:
 39126              	.L2777:
18678:Core/Src/bno055.c ****     }
 39127              		.loc 1 18678 9 is_stmt 1 view .LVU10980
18678:Core/Src/bno055.c ****     }
 39128              		.loc 1 18678 21 is_stmt 0 view .LVU10981
 39129 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 39130              	.LVL4808:
18678:Core/Src/bno055.c ****     }
 39131              		.loc 1 18678 18 view .LVU10982
 39132 00a8 54FA80F0 		uxtab	r0, r4, r0
 39133 00ac 44B2     		sxtb	r4, r0
 39134              	.LVL4809:
18678:Core/Src/bno055.c ****     }
 39135              		.loc 1 18678 18 view .LVU10983
 39136 00ae F3E7     		b	.L2767
 39137              	.LVL4810:
 39138              	.L2770:
18624:Core/Src/bno055.c ****     }
 39139              		.loc 1 18624 16 view .LVU10984
 39140 00b0 6FF07E04 		mvn	r4, #126
 39141 00b4 F0E7     		b	.L2767
 39142              	.L2779:
 39143 00b6 00BF     		.align	2
 39144              	.L2778:
 39145 00b8 00000000 		.word	.LANCHOR0
 39146              		.cfi_endproc
 39147              	.LFE266:
 39149              		.section	.text.bno055_get_gyro_highrate_z_durn,"ax",%progbits
 39150              		.align	1
 39151              		.global	bno055_get_gyro_highrate_z_durn
 39152              		.syntax unified
 39153              		.thumb
 39154              		.thumb_func
 39156              	bno055_get_gyro_highrate_z_durn:
 39157              	.LVL4811:
 39158              	.LFB267:
18683:Core/Src/bno055.c **** 
18684:Core/Src/bno055.c **** /*!
18685:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z duration
ARM GAS  /tmp/cc9kYR4Z.s 			page 1098


18686:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18687:Core/Src/bno055.c ****  *
18688:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18689:Core/Src/bno055.c ****  *
18690:Core/Src/bno055.c ****  *  @return results of bus communication function
18691:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18692:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18693:Core/Src/bno055.c ****  *
18694:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18695:Core/Src/bno055.c ****  *
18696:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18697:Core/Src/bno055.c ****  */
18698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_durn(u8 *gyro_highrate_z_durn_u8)
18699:Core/Src/bno055.c **** {
 39159              		.loc 1 18699 1 is_stmt 1 view -0
 39160              		.cfi_startproc
 39161              		@ args = 0, pretend = 0, frame = 8
 39162              		@ frame_needed = 0, uses_anonymous_args = 0
 39163              		.loc 1 18699 1 is_stmt 0 view .LVU10986
 39164 0000 70B5     		push	{r4, r5, r6, lr}
 39165              	.LCFI1061:
 39166              		.cfi_def_cfa_offset 16
 39167              		.cfi_offset 4, -16
 39168              		.cfi_offset 5, -12
 39169              		.cfi_offset 6, -8
 39170              		.cfi_offset 14, -4
 39171 0002 82B0     		sub	sp, sp, #8
 39172              	.LCFI1062:
 39173              		.cfi_def_cfa_offset 24
18700:Core/Src/bno055.c ****     /* Variable used to return value of
18701:Core/Src/bno055.c ****      * communication routine*/
18702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39174              		.loc 1 18702 5 is_stmt 1 view .LVU10987
 39175              	.LVL4812:
18703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39176              		.loc 1 18703 5 view .LVU10988
 39177              		.loc 1 18703 8 is_stmt 0 view .LVU10989
 39178 0004 0023     		movs	r3, #0
 39179 0006 8DF80730 		strb	r3, [sp, #7]
18704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39180              		.loc 1 18704 5 is_stmt 1 view .LVU10990
 39181              	.LVL4813:
18705:Core/Src/bno055.c **** 
18706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39182              		.loc 1 18707 5 view .LVU10991
 39183              		.loc 1 18707 18 is_stmt 0 view .LVU10992
 39184 000a 134B     		ldr	r3, .L2788
 39185 000c 1B68     		ldr	r3, [r3]
 39186              		.loc 1 18707 8 view .LVU10993
 39187 000e E3B1     		cbz	r3, .L2784
 39188 0010 0546     		mov	r5, r0
18708:Core/Src/bno055.c ****     {
18709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18710:Core/Src/bno055.c ****     }
18711:Core/Src/bno055.c ****     else
18712:Core/Src/bno055.c ****     {
ARM GAS  /tmp/cc9kYR4Z.s 			page 1099


18713:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z duration is
18714:Core/Src/bno055.c ****          * available in the page one*/
18715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39189              		.loc 1 18715 9 is_stmt 1 view .LVU10994
 39190              		.loc 1 18715 21 is_stmt 0 view .LVU10995
 39191 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39192              		.loc 1 18715 12 view .LVU10996
 39193 0014 012B     		cmp	r3, #1
 39194 0016 12D1     		bne	.L2787
 39195              	.LVL4814:
 39196              	.L2782:
18716:Core/Src/bno055.c ****         {
18717:Core/Src/bno055.c ****             /* Write page as one */
18718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18719:Core/Src/bno055.c ****         }
18720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39197              		.loc 1 18720 53 discriminator 1 view .LVU10997
 39198 0018 0F4B     		ldr	r3, .L2788
 39199 001a 1B68     		ldr	r3, [r3]
 39200 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39201              		.loc 1 18720 41 discriminator 1 view .LVU10998
 39202 001e 012B     		cmp	r3, #1
 39203 0020 16D1     		bne	.L2785
 39204              	.L2783:
18721:Core/Src/bno055.c ****         {
18722:Core/Src/bno055.c ****             /* Read the value of gyro highrate z duration*/
18723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39205              		.loc 1 18723 13 is_stmt 1 view .LVU10999
 39206              		.loc 1 18723 32 is_stmt 0 view .LVU11000
 39207 0022 0D4B     		ldr	r3, .L2788
 39208 0024 1C68     		ldr	r4, [r3]
 39209 0026 2669     		ldr	r6, [r4, #16]
 39210              		.loc 1 18723 24 view .LVU11001
 39211 0028 0123     		movs	r3, #1
 39212 002a 0DF10702 		add	r2, sp, #7
 39213 002e 1D21     		movs	r1, #29
 39214 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 39215 0032 B047     		blx	r6
 39216              	.LVL4815:
18724:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18725:Core/Src/bno055.c ****                                                       &data_u8r,
18726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18727:Core/Src/bno055.c ****             *gyro_highrate_z_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN);
 39217              		.loc 1 18727 13 is_stmt 1 view .LVU11002
 39218              		.loc 1 18727 38 is_stmt 0 view .LVU11003
 39219 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39220 0038 2B70     		strb	r3, [r5]
 39221              	.LVL4816:
 39222              	.L2781:
18728:Core/Src/bno055.c ****         }
18729:Core/Src/bno055.c ****         else
18730:Core/Src/bno055.c ****         {
18731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18732:Core/Src/bno055.c ****         }
18733:Core/Src/bno055.c ****     }
18734:Core/Src/bno055.c **** 
18735:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 1100


18736:Core/Src/bno055.c **** }
 39223              		.loc 1 18736 1 view .LVU11004
 39224 003a 02B0     		add	sp, sp, #8
 39225              	.LCFI1063:
 39226              		.cfi_remember_state
 39227              		.cfi_def_cfa_offset 16
 39228              		@ sp needed
 39229 003c 70BD     		pop	{r4, r5, r6, pc}
 39230              	.LVL4817:
 39231              	.L2787:
 39232              	.LCFI1064:
 39233              		.cfi_restore_state
18718:Core/Src/bno055.c ****         }
 39234              		.loc 1 18718 13 is_stmt 1 view .LVU11005
18718:Core/Src/bno055.c ****         }
 39235              		.loc 1 18718 23 is_stmt 0 view .LVU11006
 39236 003e 0120     		movs	r0, #1
 39237              	.LVL4818:
18718:Core/Src/bno055.c ****         }
 39238              		.loc 1 18718 23 view .LVU11007
 39239 0040 FFF7FEFF 		bl	bno055_write_page_id
 39240              	.LVL4819:
18720:Core/Src/bno055.c ****         {
 39241              		.loc 1 18720 9 is_stmt 1 view .LVU11008
18720:Core/Src/bno055.c ****         {
 39242              		.loc 1 18720 12 is_stmt 0 view .LVU11009
 39243 0044 0028     		cmp	r0, #0
 39244 0046 ECD0     		beq	.L2783
 39245 0048 E6E7     		b	.L2782
 39246              	.LVL4820:
 39247              	.L2784:
18709:Core/Src/bno055.c ****     }
 39248              		.loc 1 18709 16 view .LVU11010
 39249 004a 6FF07E00 		mvn	r0, #126
 39250              	.LVL4821:
18709:Core/Src/bno055.c ****     }
 39251              		.loc 1 18709 16 view .LVU11011
 39252 004e F4E7     		b	.L2781
 39253              	.LVL4822:
 39254              	.L2785:
18731:Core/Src/bno055.c ****         }
 39255              		.loc 1 18731 22 view .LVU11012
 39256 0050 4FF0FF30 		mov	r0, #-1
 39257 0054 F1E7     		b	.L2781
 39258              	.L2789:
 39259 0056 00BF     		.align	2
 39260              	.L2788:
 39261 0058 00000000 		.word	.LANCHOR0
 39262              		.cfi_endproc
 39263              	.LFE267:
 39265              		.section	.text.bno055_set_gyro_highrate_z_durn,"ax",%progbits
 39266              		.align	1
 39267              		.global	bno055_set_gyro_highrate_z_durn
 39268              		.syntax unified
 39269              		.thumb
 39270              		.thumb_func
 39272              	bno055_set_gyro_highrate_z_durn:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1101


 39273              	.LVL4823:
 39274              	.LFB268:
18737:Core/Src/bno055.c **** 
18738:Core/Src/bno055.c **** /*!
18739:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z duration
18740:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18741:Core/Src/bno055.c ****  *
18742:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18743:Core/Src/bno055.c ****  *
18744:Core/Src/bno055.c ****  *  @return results of bus communication function
18745:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18746:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18747:Core/Src/bno055.c ****  *
18748:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18749:Core/Src/bno055.c ****  *
18750:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18751:Core/Src/bno055.c ****  */
18752:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_durn(u8 gyro_highrate_z_durn_u8)
18753:Core/Src/bno055.c **** {
 39275              		.loc 1 18753 1 is_stmt 1 view -0
 39276              		.cfi_startproc
 39277              		@ args = 0, pretend = 0, frame = 8
 39278              		@ frame_needed = 0, uses_anonymous_args = 0
 39279              		.loc 1 18753 1 is_stmt 0 view .LVU11014
 39280 0000 30B5     		push	{r4, r5, lr}
 39281              	.LCFI1065:
 39282              		.cfi_def_cfa_offset 12
 39283              		.cfi_offset 4, -12
 39284              		.cfi_offset 5, -8
 39285              		.cfi_offset 14, -4
 39286 0002 83B0     		sub	sp, sp, #12
 39287              	.LCFI1066:
 39288              		.cfi_def_cfa_offset 24
18754:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39289              		.loc 1 18754 5 is_stmt 1 view .LVU11015
 39290              	.LVL4824:
18755:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39291              		.loc 1 18755 5 view .LVU11016
 39292              		.loc 1 18755 8 is_stmt 0 view .LVU11017
 39293 0004 0023     		movs	r3, #0
 39294 0006 8DF80730 		strb	r3, [sp, #7]
18756:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39295              		.loc 1 18756 5 is_stmt 1 view .LVU11018
 39296              	.LVL4825:
18757:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39297              		.loc 1 18757 5 view .LVU11019
18758:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39298              		.loc 1 18758 5 view .LVU11020
 39299              		.loc 1 18758 8 is_stmt 0 view .LVU11021
 39300 000a 8DF80630 		strb	r3, [sp, #6]
18759:Core/Src/bno055.c **** 
18760:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18761:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39301              		.loc 1 18761 5 is_stmt 1 view .LVU11022
 39302              		.loc 1 18761 18 is_stmt 0 view .LVU11023
 39303 000e 254B     		ldr	r3, .L2802
 39304 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9kYR4Z.s 			page 1102


 39305              		.loc 1 18761 8 view .LVU11024
 39306 0012 002B     		cmp	r3, #0
 39307 0014 42D0     		beq	.L2794
 39308 0016 0546     		mov	r5, r0
18762:Core/Src/bno055.c ****     {
18763:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18764:Core/Src/bno055.c ****     }
18765:Core/Src/bno055.c ****     else
18766:Core/Src/bno055.c ****     {
18767:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18768:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18769:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18770:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39309              		.loc 1 18770 9 is_stmt 1 view .LVU11025
 39310              		.loc 1 18770 19 is_stmt 0 view .LVU11026
 39311 0018 0DF10600 		add	r0, sp, #6
 39312              	.LVL4826:
 39313              		.loc 1 18770 19 view .LVU11027
 39314 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39315              	.LVL4827:
18771:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39316              		.loc 1 18771 9 is_stmt 1 view .LVU11028
 39317              		.loc 1 18771 12 is_stmt 0 view .LVU11029
 39318 0020 0446     		mov	r4, r0
 39319 0022 50BB     		cbnz	r0, .L2795
18772:Core/Src/bno055.c ****         {
18773:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39320              		.loc 1 18773 13 is_stmt 1 view .LVU11030
 39321              		.loc 1 18773 32 is_stmt 0 view .LVU11031
 39322 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39323              		.loc 1 18773 16 view .LVU11032
 39324 0028 1BB9     		cbnz	r3, .L2799
 39325              	.LVL4828:
 39326              	.L2793:
18774:Core/Src/bno055.c ****             {
18775:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18776:Core/Src/bno055.c ****             }
18777:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39327              		.loc 1 18777 13 is_stmt 1 view .LVU11033
 39328              		.loc 1 18777 16 is_stmt 0 view .LVU11034
 39329 002a 44B1     		cbz	r4, .L2800
18778:Core/Src/bno055.c ****             {
18779:Core/Src/bno055.c ****                 /* Write page as one */
18780:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18781:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18782:Core/Src/bno055.c ****                 {
18783:Core/Src/bno055.c ****                     /* Write the value of
18784:Core/Src/bno055.c ****                      * gyro highrate z duration*/
18785:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18786:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18787:Core/Src/bno055.c ****                                                               &data_u8r,
18788:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18789:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18790:Core/Src/bno055.c ****                     {
18791:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN, gyro_
18792:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18793:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
ARM GAS  /tmp/cc9kYR4Z.s 			page 1103


18794:Core/Src/bno055.c ****                                                                     &data_u8r,
18795:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18796:Core/Src/bno055.c ****                     }
18797:Core/Src/bno055.c ****                 }
18798:Core/Src/bno055.c ****                 else
18799:Core/Src/bno055.c ****                 {
18800:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18801:Core/Src/bno055.c ****                 }
18802:Core/Src/bno055.c ****             }
18803:Core/Src/bno055.c ****             else
18804:Core/Src/bno055.c ****             {
18805:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39330              		.loc 1 18805 26 view .LVU11035
 39331 002c 4FF0FF34 		mov	r4, #-1
 39332              	.LVL4829:
 39333              		.loc 1 18805 26 view .LVU11036
 39334 0030 25E0     		b	.L2792
 39335              	.LVL4830:
 39336              	.L2799:
18775:Core/Src/bno055.c ****             }
 39337              		.loc 1 18775 17 is_stmt 1 view .LVU11037
18775:Core/Src/bno055.c ****             }
 39338              		.loc 1 18775 28 is_stmt 0 view .LVU11038
 39339 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39340              	.LVL4831:
18775:Core/Src/bno055.c ****             }
 39341              		.loc 1 18775 25 view .LVU11039
 39342 0036 54FA80F4 		uxtab	r4, r4, r0
 39343 003a 64B2     		sxtb	r4, r4
 39344              	.LVL4832:
18775:Core/Src/bno055.c ****             }
 39345              		.loc 1 18775 25 view .LVU11040
 39346 003c F5E7     		b	.L2793
 39347              	.L2800:
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39348              		.loc 1 18780 17 is_stmt 1 view .LVU11041
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39349              		.loc 1 18780 30 is_stmt 0 view .LVU11042
 39350 003e 0120     		movs	r0, #1
 39351 0040 FFF7FEFF 		bl	bno055_write_page_id
 39352              	.LVL4833:
18781:Core/Src/bno055.c ****                 {
 39353              		.loc 1 18781 17 is_stmt 1 view .LVU11043
18781:Core/Src/bno055.c ****                 {
 39354              		.loc 1 18781 20 is_stmt 0 view .LVU11044
 39355 0044 08BB     		cbnz	r0, .L2797
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39356              		.loc 1 18785 21 is_stmt 1 view .LVU11045
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39357              		.loc 1 18785 40 is_stmt 0 view .LVU11046
 39358 0046 174B     		ldr	r3, .L2802
 39359 0048 1868     		ldr	r0, [r3]
 39360              	.LVL4834:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39361              		.loc 1 18785 40 view .LVU11047
 39362 004a 0469     		ldr	r4, [r0, #16]
 39363              	.LVL4835:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1104


18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39364              		.loc 1 18785 32 view .LVU11048
 39365 004c 0123     		movs	r3, #1
 39366 004e 0DF10702 		add	r2, sp, #7
 39367 0052 1D21     		movs	r1, #29
 39368 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39369 0056 A047     		blx	r4
 39370              	.LVL4836:
18789:Core/Src/bno055.c ****                     {
 39371              		.loc 1 18789 21 is_stmt 1 view .LVU11049
18789:Core/Src/bno055.c ****                     {
 39372              		.loc 1 18789 24 is_stmt 0 view .LVU11050
 39373 0058 0446     		mov	r4, r0
 39374 005a 80B9     		cbnz	r0, .L2792
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39375              		.loc 1 18791 25 is_stmt 1 view .LVU11051
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39376              		.loc 1 18791 34 is_stmt 0 view .LVU11052
 39377 005c 8DF80750 		strb	r5, [sp, #7]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39378              		.loc 1 18792 25 is_stmt 1 view .LVU11053
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39379              		.loc 1 18792 45 is_stmt 0 view .LVU11054
 39380 0060 104B     		ldr	r3, .L2802
 39381 0062 1868     		ldr	r0, [r3]
 39382              	.LVL4837:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39383              		.loc 1 18792 45 view .LVU11055
 39384 0064 C568     		ldr	r5, [r0, #12]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39385              		.loc 1 18792 37 view .LVU11056
 39386 0066 0123     		movs	r3, #1
 39387 0068 0DF10702 		add	r2, sp, #7
 39388 006c 1D21     		movs	r1, #29
 39389 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39390 0070 A847     		blx	r5
 39391              	.LVL4838:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39392              		.loc 1 18792 34 view .LVU11057
 39393 0072 54FA80F0 		uxtab	r0, r4, r0
 39394 0076 44B2     		sxtb	r4, r0
 39395              	.LVL4839:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39396              		.loc 1 18792 34 view .LVU11058
 39397 0078 01E0     		b	.L2792
 39398              	.LVL4840:
 39399              	.L2795:
18806:Core/Src/bno055.c ****             }
18807:Core/Src/bno055.c ****         }
18808:Core/Src/bno055.c ****         else
18809:Core/Src/bno055.c ****         {
18810:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39400              		.loc 1 18810 22 view .LVU11059
 39401 007a 4FF0FF34 		mov	r4, #-1
 39402              	.LVL4841:
 39403              	.L2792:
18811:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1105


18812:Core/Src/bno055.c ****     }
18813:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39404              		.loc 1 18813 5 is_stmt 1 view .LVU11060
 39405              		.loc 1 18813 24 is_stmt 0 view .LVU11061
 39406 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39407              		.loc 1 18813 8 view .LVU11062
 39408 0082 28B9     		cbnz	r0, .L2801
 39409              	.LVL4842:
 39410              	.L2791:
18814:Core/Src/bno055.c ****     {
18815:Core/Src/bno055.c ****         /* set the operation mode of
18816:Core/Src/bno055.c ****          * previous operation mode*/
18817:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18818:Core/Src/bno055.c ****     }
18819:Core/Src/bno055.c **** 
18820:Core/Src/bno055.c ****     return com_rslt;
18821:Core/Src/bno055.c **** }
 39411              		.loc 1 18821 1 view .LVU11063
 39412 0084 2046     		mov	r0, r4
 39413 0086 03B0     		add	sp, sp, #12
 39414              	.LCFI1067:
 39415              		.cfi_remember_state
 39416              		.cfi_def_cfa_offset 12
 39417              		@ sp needed
 39418 0088 30BD     		pop	{r4, r5, pc}
 39419              	.LVL4843:
 39420              	.L2797:
 39421              	.LCFI1068:
 39422              		.cfi_restore_state
18800:Core/Src/bno055.c ****                 }
 39423              		.loc 1 18800 30 view .LVU11064
 39424 008a 4FF0FF34 		mov	r4, #-1
 39425              	.LVL4844:
18800:Core/Src/bno055.c ****                 }
 39426              		.loc 1 18800 30 view .LVU11065
 39427 008e F6E7     		b	.L2792
 39428              	.LVL4845:
 39429              	.L2801:
18817:Core/Src/bno055.c ****     }
 39430              		.loc 1 18817 9 is_stmt 1 view .LVU11066
18817:Core/Src/bno055.c ****     }
 39431              		.loc 1 18817 21 is_stmt 0 view .LVU11067
 39432 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 39433              	.LVL4846:
18817:Core/Src/bno055.c ****     }
 39434              		.loc 1 18817 18 view .LVU11068
 39435 0094 54FA80F0 		uxtab	r0, r4, r0
 39436 0098 44B2     		sxtb	r4, r0
 39437              	.LVL4847:
18817:Core/Src/bno055.c ****     }
 39438              		.loc 1 18817 18 view .LVU11069
 39439 009a F3E7     		b	.L2791
 39440              	.LVL4848:
 39441              	.L2794:
18763:Core/Src/bno055.c ****     }
 39442              		.loc 1 18763 16 view .LVU11070
 39443 009c 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/cc9kYR4Z.s 			page 1106


 39444 00a0 F0E7     		b	.L2791
 39445              	.L2803:
 39446 00a2 00BF     		.align	2
 39447              	.L2802:
 39448 00a4 00000000 		.word	.LANCHOR0
 39449              		.cfi_endproc
 39450              	.LFE268:
 39452              		.section	.text.bno055_get_gyro_any_motion_thres,"ax",%progbits
 39453              		.align	1
 39454              		.global	bno055_get_gyro_any_motion_thres
 39455              		.syntax unified
 39456              		.thumb
 39457              		.thumb_func
 39459              	bno055_get_gyro_any_motion_thres:
 39460              	.LVL4849:
 39461              	.LFB269:
18822:Core/Src/bno055.c **** 
18823:Core/Src/bno055.c **** /*!
18824:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion threshold
18825:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18826:Core/Src/bno055.c ****  *
18827:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18828:Core/Src/bno055.c ****  *
18829:Core/Src/bno055.c ****  *  @return results of bus communication function
18830:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18831:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18832:Core/Src/bno055.c ****  *
18833:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18834:Core/Src/bno055.c ****  *  on the selection of gyro range
18835:Core/Src/bno055.c ****  *
18836:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18837:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18838:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18839:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18840:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18841:Core/Src/bno055.c ****  *
18842:Core/Src/bno055.c ****  */
18843:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_thres(u8 *gyro_any_motion_thres_u8)
18844:Core/Src/bno055.c **** {
 39462              		.loc 1 18844 1 is_stmt 1 view -0
 39463              		.cfi_startproc
 39464              		@ args = 0, pretend = 0, frame = 8
 39465              		@ frame_needed = 0, uses_anonymous_args = 0
 39466              		.loc 1 18844 1 is_stmt 0 view .LVU11072
 39467 0000 30B5     		push	{r4, r5, lr}
 39468              	.LCFI1069:
 39469              		.cfi_def_cfa_offset 12
 39470              		.cfi_offset 4, -12
 39471              		.cfi_offset 5, -8
 39472              		.cfi_offset 14, -4
 39473 0002 83B0     		sub	sp, sp, #12
 39474              	.LCFI1070:
 39475              		.cfi_def_cfa_offset 24
18845:Core/Src/bno055.c ****     /* Variable used to return value of
18846:Core/Src/bno055.c ****      * communication routine*/
18847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39476              		.loc 1 18847 5 is_stmt 1 view .LVU11073
ARM GAS  /tmp/cc9kYR4Z.s 			page 1107


 39477              	.LVL4850:
18848:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39478              		.loc 1 18848 5 view .LVU11074
 39479              		.loc 1 18848 8 is_stmt 0 view .LVU11075
 39480 0004 0023     		movs	r3, #0
 39481 0006 8DF80730 		strb	r3, [sp, #7]
18849:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39482              		.loc 1 18849 5 is_stmt 1 view .LVU11076
 39483              	.LVL4851:
18850:Core/Src/bno055.c **** 
18851:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18852:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39484              		.loc 1 18852 5 view .LVU11077
 39485              		.loc 1 18852 18 is_stmt 0 view .LVU11078
 39486 000a 144B     		ldr	r3, .L2812
 39487 000c 1B68     		ldr	r3, [r3]
 39488              		.loc 1 18852 8 view .LVU11079
 39489 000e F3B1     		cbz	r3, .L2808
 39490 0010 0446     		mov	r4, r0
18853:Core/Src/bno055.c ****     {
18854:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18855:Core/Src/bno055.c ****     }
18856:Core/Src/bno055.c ****     else
18857:Core/Src/bno055.c ****     {
18858:Core/Src/bno055.c ****         /*condition check for page,gyro anymotion threshold is
18859:Core/Src/bno055.c ****          * available in the page one*/
18860:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39491              		.loc 1 18860 9 is_stmt 1 view .LVU11080
 39492              		.loc 1 18860 21 is_stmt 0 view .LVU11081
 39493 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39494              		.loc 1 18860 12 view .LVU11082
 39495 0014 012B     		cmp	r3, #1
 39496 0016 14D1     		bne	.L2811
 39497              	.LVL4852:
 39498              	.L2806:
18861:Core/Src/bno055.c ****         {
18862:Core/Src/bno055.c ****             /* Write page as one */
18863:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18864:Core/Src/bno055.c ****         }
18865:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39499              		.loc 1 18865 53 discriminator 1 view .LVU11083
 39500 0018 104B     		ldr	r3, .L2812
 39501 001a 1B68     		ldr	r3, [r3]
 39502 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39503              		.loc 1 18865 41 discriminator 1 view .LVU11084
 39504 001e 012B     		cmp	r3, #1
 39505 0020 18D1     		bne	.L2809
 39506              	.L2807:
18866:Core/Src/bno055.c ****         {
18867:Core/Src/bno055.c ****             /* Read the value of gyro anymotion threshold*/
18868:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39507              		.loc 1 18868 13 is_stmt 1 view .LVU11085
 39508              		.loc 1 18868 32 is_stmt 0 view .LVU11086
 39509 0022 0E4B     		ldr	r3, .L2812
 39510 0024 1868     		ldr	r0, [r3]
 39511 0026 0569     		ldr	r5, [r0, #16]
 39512              		.loc 1 18868 24 view .LVU11087
ARM GAS  /tmp/cc9kYR4Z.s 			page 1108


 39513 0028 0123     		movs	r3, #1
 39514 002a 0DF10702 		add	r2, sp, #7
 39515 002e 1E21     		movs	r1, #30
 39516 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39517 0032 A847     		blx	r5
 39518              	.LVL4853:
18869:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_THRES_REG,
18870:Core/Src/bno055.c ****                                                       &data_u8r,
18871:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18872:Core/Src/bno055.c ****             *gyro_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES)
 39519              		.loc 1 18872 13 is_stmt 1 view .LVU11088
 39520              		.loc 1 18872 41 is_stmt 0 view .LVU11089
 39521 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39522 0038 03F07F03 		and	r3, r3, #127
 39523              		.loc 1 18872 39 view .LVU11090
 39524 003c 2370     		strb	r3, [r4]
 39525              	.LVL4854:
 39526              	.L2805:
18873:Core/Src/bno055.c ****         }
18874:Core/Src/bno055.c ****         else
18875:Core/Src/bno055.c ****         {
18876:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18877:Core/Src/bno055.c ****         }
18878:Core/Src/bno055.c ****     }
18879:Core/Src/bno055.c **** 
18880:Core/Src/bno055.c ****     return com_rslt;
18881:Core/Src/bno055.c **** }
 39527              		.loc 1 18881 1 view .LVU11091
 39528 003e 03B0     		add	sp, sp, #12
 39529              	.LCFI1071:
 39530              		.cfi_remember_state
 39531              		.cfi_def_cfa_offset 12
 39532              		@ sp needed
 39533 0040 30BD     		pop	{r4, r5, pc}
 39534              	.LVL4855:
 39535              	.L2811:
 39536              	.LCFI1072:
 39537              		.cfi_restore_state
18863:Core/Src/bno055.c ****         }
 39538              		.loc 1 18863 13 is_stmt 1 view .LVU11092
18863:Core/Src/bno055.c ****         }
 39539              		.loc 1 18863 23 is_stmt 0 view .LVU11093
 39540 0042 0120     		movs	r0, #1
 39541              	.LVL4856:
18863:Core/Src/bno055.c ****         }
 39542              		.loc 1 18863 23 view .LVU11094
 39543 0044 FFF7FEFF 		bl	bno055_write_page_id
 39544              	.LVL4857:
18865:Core/Src/bno055.c ****         {
 39545              		.loc 1 18865 9 is_stmt 1 view .LVU11095
18865:Core/Src/bno055.c ****         {
 39546              		.loc 1 18865 12 is_stmt 0 view .LVU11096
 39547 0048 0028     		cmp	r0, #0
 39548 004a EAD0     		beq	.L2807
 39549 004c E4E7     		b	.L2806
 39550              	.LVL4858:
 39551              	.L2808:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1109


18854:Core/Src/bno055.c ****     }
 39552              		.loc 1 18854 16 view .LVU11097
 39553 004e 6FF07E00 		mvn	r0, #126
 39554              	.LVL4859:
18854:Core/Src/bno055.c ****     }
 39555              		.loc 1 18854 16 view .LVU11098
 39556 0052 F4E7     		b	.L2805
 39557              	.LVL4860:
 39558              	.L2809:
18876:Core/Src/bno055.c ****         }
 39559              		.loc 1 18876 22 view .LVU11099
 39560 0054 4FF0FF30 		mov	r0, #-1
 39561 0058 F1E7     		b	.L2805
 39562              	.L2813:
 39563 005a 00BF     		.align	2
 39564              	.L2812:
 39565 005c 00000000 		.word	.LANCHOR0
 39566              		.cfi_endproc
 39567              	.LFE269:
 39569              		.section	.text.bno055_set_gyro_any_motion_thres,"ax",%progbits
 39570              		.align	1
 39571              		.global	bno055_set_gyro_any_motion_thres
 39572              		.syntax unified
 39573              		.thumb
 39574              		.thumb_func
 39576              	bno055_set_gyro_any_motion_thres:
 39577              	.LVL4861:
 39578              	.LFB270:
18882:Core/Src/bno055.c **** 
18883:Core/Src/bno055.c **** /*!
18884:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion threshold
18885:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18886:Core/Src/bno055.c ****  *
18887:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18888:Core/Src/bno055.c ****  *
18889:Core/Src/bno055.c ****  *  @return results of bus communication function
18890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18892:Core/Src/bno055.c ****  *
18893:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18894:Core/Src/bno055.c ****  *  on the selection of gyro range
18895:Core/Src/bno055.c ****  *
18896:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18897:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18898:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18899:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18900:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18901:Core/Src/bno055.c ****  *
18902:Core/Src/bno055.c ****  */
18903:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_thres(u8 gyro_any_motion_thres_u8)
18904:Core/Src/bno055.c **** {
 39579              		.loc 1 18904 1 is_stmt 1 view -0
 39580              		.cfi_startproc
 39581              		@ args = 0, pretend = 0, frame = 8
 39582              		@ frame_needed = 0, uses_anonymous_args = 0
 39583              		.loc 1 18904 1 is_stmt 0 view .LVU11101
 39584 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 1110


 39585              	.LCFI1073:
 39586              		.cfi_def_cfa_offset 12
 39587              		.cfi_offset 4, -12
 39588              		.cfi_offset 5, -8
 39589              		.cfi_offset 14, -4
 39590 0002 83B0     		sub	sp, sp, #12
 39591              	.LCFI1074:
 39592              		.cfi_def_cfa_offset 24
18905:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39593              		.loc 1 18905 5 is_stmt 1 view .LVU11102
 39594              	.LVL4862:
18906:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39595              		.loc 1 18906 5 view .LVU11103
 39596              		.loc 1 18906 8 is_stmt 0 view .LVU11104
 39597 0004 0023     		movs	r3, #0
 39598 0006 8DF80730 		strb	r3, [sp, #7]
18907:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39599              		.loc 1 18907 5 is_stmt 1 view .LVU11105
 39600              	.LVL4863:
18908:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39601              		.loc 1 18908 5 view .LVU11106
 39602              		.loc 1 18908 8 is_stmt 0 view .LVU11107
 39603 000a 8DF80630 		strb	r3, [sp, #6]
18909:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39604              		.loc 1 18909 5 is_stmt 1 view .LVU11108
 39605              	.LVL4864:
18910:Core/Src/bno055.c **** 
18911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39606              		.loc 1 18912 5 view .LVU11109
 39607              		.loc 1 18912 18 is_stmt 0 view .LVU11110
 39608 000e 294B     		ldr	r3, .L2826
 39609 0010 1B68     		ldr	r3, [r3]
 39610              		.loc 1 18912 8 view .LVU11111
 39611 0012 002B     		cmp	r3, #0
 39612 0014 4AD0     		beq	.L2818
 39613 0016 0546     		mov	r5, r0
18913:Core/Src/bno055.c ****     {
18914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18915:Core/Src/bno055.c ****     }
18916:Core/Src/bno055.c ****     else
18917:Core/Src/bno055.c ****     {
18918:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18919:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18920:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18921:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39614              		.loc 1 18921 9 is_stmt 1 view .LVU11112
 39615              		.loc 1 18921 19 is_stmt 0 view .LVU11113
 39616 0018 0DF10600 		add	r0, sp, #6
 39617              	.LVL4865:
 39618              		.loc 1 18921 19 view .LVU11114
 39619 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39620              	.LVL4866:
18922:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39621              		.loc 1 18922 9 is_stmt 1 view .LVU11115
 39622              		.loc 1 18922 12 is_stmt 0 view .LVU11116
 39623 0020 0446     		mov	r4, r0
ARM GAS  /tmp/cc9kYR4Z.s 			page 1111


 39624 0022 90BB     		cbnz	r0, .L2819
18923:Core/Src/bno055.c ****         {
18924:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39625              		.loc 1 18924 13 is_stmt 1 view .LVU11117
 39626              		.loc 1 18924 32 is_stmt 0 view .LVU11118
 39627 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39628              		.loc 1 18924 16 view .LVU11119
 39629 0028 1BB9     		cbnz	r3, .L2823
 39630              	.LVL4867:
 39631              	.L2817:
18925:Core/Src/bno055.c ****             {
18926:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18927:Core/Src/bno055.c ****             }
18928:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39632              		.loc 1 18928 13 is_stmt 1 view .LVU11120
 39633              		.loc 1 18928 16 is_stmt 0 view .LVU11121
 39634 002a 44B1     		cbz	r4, .L2824
18929:Core/Src/bno055.c ****             {
18930:Core/Src/bno055.c ****                 /* Write page as one */
18931:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18932:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18933:Core/Src/bno055.c ****                 {
18934:Core/Src/bno055.c ****                     /* Write the value
18935:Core/Src/bno055.c ****                      * of gyro anymotion threshold*/
18936:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18937:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
18938:Core/Src/bno055.c ****                                                               &data_u8r,
18939:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18940:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18941:Core/Src/bno055.c ****                     {
18942:Core/Src/bno055.c ****                         data_u8r =
18943:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
18944:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18945:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
18946:Core/Src/bno055.c ****                                                                     &data_u8r,
18947:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18948:Core/Src/bno055.c ****                     }
18949:Core/Src/bno055.c ****                 }
18950:Core/Src/bno055.c ****                 else
18951:Core/Src/bno055.c ****                 {
18952:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18953:Core/Src/bno055.c ****                 }
18954:Core/Src/bno055.c ****             }
18955:Core/Src/bno055.c ****             else
18956:Core/Src/bno055.c ****             {
18957:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39635              		.loc 1 18957 26 view .LVU11122
 39636 002c 4FF0FF34 		mov	r4, #-1
 39637              	.LVL4868:
 39638              		.loc 1 18957 26 view .LVU11123
 39639 0030 2DE0     		b	.L2816
 39640              	.LVL4869:
 39641              	.L2823:
18926:Core/Src/bno055.c ****             }
 39642              		.loc 1 18926 17 is_stmt 1 view .LVU11124
18926:Core/Src/bno055.c ****             }
 39643              		.loc 1 18926 28 is_stmt 0 view .LVU11125
ARM GAS  /tmp/cc9kYR4Z.s 			page 1112


 39644 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39645              	.LVL4870:
18926:Core/Src/bno055.c ****             }
 39646              		.loc 1 18926 25 view .LVU11126
 39647 0036 54FA80F4 		uxtab	r4, r4, r0
 39648 003a 64B2     		sxtb	r4, r4
 39649              	.LVL4871:
18926:Core/Src/bno055.c ****             }
 39650              		.loc 1 18926 25 view .LVU11127
 39651 003c F5E7     		b	.L2817
 39652              	.L2824:
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39653              		.loc 1 18931 17 is_stmt 1 view .LVU11128
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39654              		.loc 1 18931 30 is_stmt 0 view .LVU11129
 39655 003e 0120     		movs	r0, #1
 39656 0040 FFF7FEFF 		bl	bno055_write_page_id
 39657              	.LVL4872:
18932:Core/Src/bno055.c ****                 {
 39658              		.loc 1 18932 17 is_stmt 1 view .LVU11130
18932:Core/Src/bno055.c ****                 {
 39659              		.loc 1 18932 20 is_stmt 0 view .LVU11131
 39660 0044 48BB     		cbnz	r0, .L2821
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39661              		.loc 1 18936 21 is_stmt 1 view .LVU11132
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39662              		.loc 1 18936 40 is_stmt 0 view .LVU11133
 39663 0046 1B4B     		ldr	r3, .L2826
 39664 0048 1868     		ldr	r0, [r3]
 39665              	.LVL4873:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39666              		.loc 1 18936 40 view .LVU11134
 39667 004a 0469     		ldr	r4, [r0, #16]
 39668              	.LVL4874:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39669              		.loc 1 18936 32 view .LVU11135
 39670 004c 0123     		movs	r3, #1
 39671 004e 0DF10702 		add	r2, sp, #7
 39672 0052 1E21     		movs	r1, #30
 39673 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39674 0056 A047     		blx	r4
 39675              	.LVL4875:
18940:Core/Src/bno055.c ****                     {
 39676              		.loc 1 18940 21 is_stmt 1 view .LVU11136
18940:Core/Src/bno055.c ****                     {
 39677              		.loc 1 18940 24 is_stmt 0 view .LVU11137
 39678 0058 0446     		mov	r4, r0
 39679 005a C0B9     		cbnz	r0, .L2816
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 39680              		.loc 1 18942 25 is_stmt 1 view .LVU11138
18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39681              		.loc 1 18943 29 is_stmt 0 view .LVU11139
 39682 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39683 0060 23F07F03 		bic	r3, r3, #127
 39684 0064 5BB2     		sxtb	r3, r3
 39685 0066 05F07F00 		and	r0, r5, #127
 39686              	.LVL4876:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1113


18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39687              		.loc 1 18943 29 view .LVU11140
 39688 006a 0343     		orrs	r3, r3, r0
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 39689              		.loc 1 18942 34 view .LVU11141
 39690 006c 8DF80730 		strb	r3, [sp, #7]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39691              		.loc 1 18944 25 is_stmt 1 view .LVU11142
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39692              		.loc 1 18944 45 is_stmt 0 view .LVU11143
 39693 0070 104B     		ldr	r3, .L2826
 39694 0072 1868     		ldr	r0, [r3]
 39695 0074 C568     		ldr	r5, [r0, #12]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39696              		.loc 1 18944 37 view .LVU11144
 39697 0076 0123     		movs	r3, #1
 39698 0078 0DF10702 		add	r2, sp, #7
 39699 007c 1E21     		movs	r1, #30
 39700 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39701 0080 A847     		blx	r5
 39702              	.LVL4877:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39703              		.loc 1 18944 34 view .LVU11145
 39704 0082 54FA80F0 		uxtab	r0, r4, r0
 39705 0086 44B2     		sxtb	r4, r0
 39706              	.LVL4878:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39707              		.loc 1 18944 34 view .LVU11146
 39708 0088 01E0     		b	.L2816
 39709              	.LVL4879:
 39710              	.L2819:
18958:Core/Src/bno055.c ****             }
18959:Core/Src/bno055.c ****         }
18960:Core/Src/bno055.c ****         else
18961:Core/Src/bno055.c ****         {
18962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39711              		.loc 1 18962 22 view .LVU11147
 39712 008a 4FF0FF34 		mov	r4, #-1
 39713              	.LVL4880:
 39714              	.L2816:
18963:Core/Src/bno055.c ****         }
18964:Core/Src/bno055.c ****     }
18965:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39715              		.loc 1 18965 5 is_stmt 1 view .LVU11148
 39716              		.loc 1 18965 24 is_stmt 0 view .LVU11149
 39717 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39718              		.loc 1 18965 8 view .LVU11150
 39719 0092 28B9     		cbnz	r0, .L2825
 39720              	.LVL4881:
 39721              	.L2815:
18966:Core/Src/bno055.c ****     {
18967:Core/Src/bno055.c ****         /* set the operation mode of
18968:Core/Src/bno055.c ****          * previous operation mode*/
18969:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18970:Core/Src/bno055.c ****     }
18971:Core/Src/bno055.c **** 
18972:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/cc9kYR4Z.s 			page 1114


18973:Core/Src/bno055.c **** }
 39722              		.loc 1 18973 1 view .LVU11151
 39723 0094 2046     		mov	r0, r4
 39724 0096 03B0     		add	sp, sp, #12
 39725              	.LCFI1075:
 39726              		.cfi_remember_state
 39727              		.cfi_def_cfa_offset 12
 39728              		@ sp needed
 39729 0098 30BD     		pop	{r4, r5, pc}
 39730              	.LVL4882:
 39731              	.L2821:
 39732              	.LCFI1076:
 39733              		.cfi_restore_state
18952:Core/Src/bno055.c ****                 }
 39734              		.loc 1 18952 30 view .LVU11152
 39735 009a 4FF0FF34 		mov	r4, #-1
 39736              	.LVL4883:
18952:Core/Src/bno055.c ****                 }
 39737              		.loc 1 18952 30 view .LVU11153
 39738 009e F6E7     		b	.L2816
 39739              	.LVL4884:
 39740              	.L2825:
18969:Core/Src/bno055.c ****     }
 39741              		.loc 1 18969 9 is_stmt 1 view .LVU11154
18969:Core/Src/bno055.c ****     }
 39742              		.loc 1 18969 21 is_stmt 0 view .LVU11155
 39743 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 39744              	.LVL4885:
18969:Core/Src/bno055.c ****     }
 39745              		.loc 1 18969 18 view .LVU11156
 39746 00a4 54FA80F0 		uxtab	r0, r4, r0
 39747 00a8 44B2     		sxtb	r4, r0
 39748              	.LVL4886:
18969:Core/Src/bno055.c ****     }
 39749              		.loc 1 18969 18 view .LVU11157
 39750 00aa F3E7     		b	.L2815
 39751              	.LVL4887:
 39752              	.L2818:
18914:Core/Src/bno055.c ****     }
 39753              		.loc 1 18914 16 view .LVU11158
 39754 00ac 6FF07E04 		mvn	r4, #126
 39755 00b0 F0E7     		b	.L2815
 39756              	.L2827:
 39757 00b2 00BF     		.align	2
 39758              	.L2826:
 39759 00b4 00000000 		.word	.LANCHOR0
 39760              		.cfi_endproc
 39761              	.LFE270:
 39763              		.section	.text.bno055_get_gyro_any_motion_slope_samples,"ax",%progbits
 39764              		.align	1
 39765              		.global	bno055_get_gyro_any_motion_slope_samples
 39766              		.syntax unified
 39767              		.thumb
 39768              		.thumb_func
 39770              	bno055_get_gyro_any_motion_slope_samples:
 39771              	.LVL4888:
 39772              	.LFB271:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1115


18974:Core/Src/bno055.c **** 
18975:Core/Src/bno055.c **** /*!
18976:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion slope samples
18977:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
18978:Core/Src/bno055.c ****  *
18979:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
18980:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
18981:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
18982:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
18983:Core/Src/bno055.c ****  *            0                          |    8 samples
18984:Core/Src/bno055.c ****  *            1                          |    16 samples
18985:Core/Src/bno055.c ****  *            2                          |    32 samples
18986:Core/Src/bno055.c ****  *            3                          |    64 samples
18987:Core/Src/bno055.c ****  *
18988:Core/Src/bno055.c ****  *  @return results of bus communication function
18989:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18990:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18991:Core/Src/bno055.c ****  *
18992:Core/Src/bno055.c ****  */
18993:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_slope_samples(u8 *gyro_any_motion_slope_samp
18994:Core/Src/bno055.c **** {
 39773              		.loc 1 18994 1 is_stmt 1 view -0
 39774              		.cfi_startproc
 39775              		@ args = 0, pretend = 0, frame = 8
 39776              		@ frame_needed = 0, uses_anonymous_args = 0
 39777              		.loc 1 18994 1 is_stmt 0 view .LVU11160
 39778 0000 30B5     		push	{r4, r5, lr}
 39779              	.LCFI1077:
 39780              		.cfi_def_cfa_offset 12
 39781              		.cfi_offset 4, -12
 39782              		.cfi_offset 5, -8
 39783              		.cfi_offset 14, -4
 39784 0002 83B0     		sub	sp, sp, #12
 39785              	.LCFI1078:
 39786              		.cfi_def_cfa_offset 24
18995:Core/Src/bno055.c ****     /* Variable used to return value of
18996:Core/Src/bno055.c ****      * communication routine*/
18997:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39787              		.loc 1 18997 5 is_stmt 1 view .LVU11161
 39788              	.LVL4889:
18998:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39789              		.loc 1 18998 5 view .LVU11162
 39790              		.loc 1 18998 8 is_stmt 0 view .LVU11163
 39791 0004 0023     		movs	r3, #0
 39792 0006 8DF80730 		strb	r3, [sp, #7]
18999:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39793              		.loc 1 18999 5 is_stmt 1 view .LVU11164
 39794              	.LVL4890:
19000:Core/Src/bno055.c **** 
19001:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19002:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39795              		.loc 1 19002 5 view .LVU11165
 39796              		.loc 1 19002 18 is_stmt 0 view .LVU11166
 39797 000a 144B     		ldr	r3, .L2836
 39798 000c 1B68     		ldr	r3, [r3]
 39799              		.loc 1 19002 8 view .LVU11167
 39800 000e F3B1     		cbz	r3, .L2832
ARM GAS  /tmp/cc9kYR4Z.s 			page 1116


 39801 0010 0446     		mov	r4, r0
19003:Core/Src/bno055.c ****     {
19004:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19005:Core/Src/bno055.c ****     }
19006:Core/Src/bno055.c ****     else
19007:Core/Src/bno055.c ****     {
19008:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion slope samples is
19009:Core/Src/bno055.c ****          * available in the page one*/
19010:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39802              		.loc 1 19010 9 is_stmt 1 view .LVU11168
 39803              		.loc 1 19010 21 is_stmt 0 view .LVU11169
 39804 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39805              		.loc 1 19010 12 view .LVU11170
 39806 0014 012B     		cmp	r3, #1
 39807 0016 14D1     		bne	.L2835
 39808              	.LVL4891:
 39809              	.L2830:
19011:Core/Src/bno055.c ****         {
19012:Core/Src/bno055.c ****             /* Write page as one */
19013:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19014:Core/Src/bno055.c ****         }
19015:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39810              		.loc 1 19015 53 discriminator 1 view .LVU11171
 39811 0018 104B     		ldr	r3, .L2836
 39812 001a 1B68     		ldr	r3, [r3]
 39813 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39814              		.loc 1 19015 41 discriminator 1 view .LVU11172
 39815 001e 012B     		cmp	r3, #1
 39816 0020 18D1     		bne	.L2833
 39817              	.L2831:
19016:Core/Src/bno055.c ****         {
19017:Core/Src/bno055.c ****             /*Read the value of gyro anymotion slope samples*/
19018:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39818              		.loc 1 19018 13 is_stmt 1 view .LVU11173
 39819              		.loc 1 19018 32 is_stmt 0 view .LVU11174
 39820 0022 0E4B     		ldr	r3, .L2836
 39821 0024 1868     		ldr	r0, [r3]
 39822 0026 0569     		ldr	r5, [r0, #16]
 39823              		.loc 1 19018 24 view .LVU11175
 39824 0028 0123     		movs	r3, #1
 39825 002a 0DF10702 		add	r2, sp, #7
 39826 002e 1F21     		movs	r1, #31
 39827 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39828 0032 A847     		blx	r5
 39829              	.LVL4892:
19019:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLOPE_SAMPLES_REG,
19020:Core/Src/bno055.c ****                                                       &data_u8r,
19021:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19022:Core/Src/bno055.c ****             *gyro_any_motion_slope_samples_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLOPE_SAM
 39830              		.loc 1 19022 13 is_stmt 1 view .LVU11176
 39831              		.loc 1 19022 49 is_stmt 0 view .LVU11177
 39832 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39833 0038 03F00303 		and	r3, r3, #3
 39834              		.loc 1 19022 47 view .LVU11178
 39835 003c 2370     		strb	r3, [r4]
 39836              	.LVL4893:
 39837              	.L2829:
ARM GAS  /tmp/cc9kYR4Z.s 			page 1117


19023:Core/Src/bno055.c ****         }
19024:Core/Src/bno055.c ****         else
19025:Core/Src/bno055.c ****         {
19026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19027:Core/Src/bno055.c ****         }
19028:Core/Src/bno055.c ****     }
19029:Core/Src/bno055.c **** 
19030:Core/Src/bno055.c ****     return com_rslt;
19031:Core/Src/bno055.c **** }
 39838              		.loc 1 19031 1 view .LVU11179
 39839 003e 03B0     		add	sp, sp, #12
 39840              	.LCFI1079:
 39841              		.cfi_remember_state
 39842              		.cfi_def_cfa_offset 12
 39843              		@ sp needed
 39844 0040 30BD     		pop	{r4, r5, pc}
 39845              	.LVL4894:
 39846              	.L2835:
 39847              	.LCFI1080:
 39848              		.cfi_restore_state
19013:Core/Src/bno055.c ****         }
 39849              		.loc 1 19013 13 is_stmt 1 view .LVU11180
19013:Core/Src/bno055.c ****         }
 39850              		.loc 1 19013 23 is_stmt 0 view .LVU11181
 39851 0042 0120     		movs	r0, #1
 39852              	.LVL4895:
19013:Core/Src/bno055.c ****         }
 39853              		.loc 1 19013 23 view .LVU11182
 39854 0044 FFF7FEFF 		bl	bno055_write_page_id
 39855              	.LVL4896:
19015:Core/Src/bno055.c ****         {
 39856              		.loc 1 19015 9 is_stmt 1 view .LVU11183
19015:Core/Src/bno055.c ****         {
 39857              		.loc 1 19015 12 is_stmt 0 view .LVU11184
 39858 0048 0028     		cmp	r0, #0
 39859 004a EAD0     		beq	.L2831
 39860 004c E4E7     		b	.L2830
 39861              	.LVL4897:
 39862              	.L2832:
19004:Core/Src/bno055.c ****     }
 39863              		.loc 1 19004 16 view .LVU11185
 39864 004e 6FF07E00 		mvn	r0, #126
 39865              	.LVL4898:
19004:Core/Src/bno055.c ****     }
 39866              		.loc 1 19004 16 view .LVU11186
 39867 0052 F4E7     		b	.L2829
 39868              	.LVL4899:
 39869              	.L2833:
19026:Core/Src/bno055.c ****         }
 39870              		.loc 1 19026 22 view .LVU11187
 39871 0054 4FF0FF30 		mov	r0, #-1
 39872 0058 F1E7     		b	.L2829
 39873              	.L2837:
 39874 005a 00BF     		.align	2
 39875              	.L2836:
 39876 005c 00000000 		.word	.LANCHOR0
 39877              		.cfi_endproc
ARM GAS  /tmp/cc9kYR4Z.s 			page 1118


 39878              	.LFE271:
 39880              		.section	.text.bno055_set_gyro_any_motion_slope_samples,"ax",%progbits
 39881              		.align	1
 39882              		.global	bno055_set_gyro_any_motion_slope_samples
 39883              		.syntax unified
 39884              		.thumb
 39885              		.thumb_func
 39887              	bno055_set_gyro_any_motion_slope_samples:
 39888              	.LVL4900:
 39889              	.LFB272:
19032:Core/Src/bno055.c **** 
19033:Core/Src/bno055.c **** /*!
19034:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion slope samples
19035:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
19036:Core/Src/bno055.c ****  *
19037:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
19038:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
19039:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
19040:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
19041:Core/Src/bno055.c ****  *            0                          |    8 samples
19042:Core/Src/bno055.c ****  *            1                          |    16 samples
19043:Core/Src/bno055.c ****  *            2                          |    32 samples
19044:Core/Src/bno055.c ****  *            3                          |    64 samples
19045:Core/Src/bno055.c ****  *
19046:Core/Src/bno055.c ****  *  @return results of bus communication function
19047:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19048:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19049:Core/Src/bno055.c ****  *
19050:Core/Src/bno055.c ****  */
19051:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_slope_samples(u8 gyro_any_motion_slope_sampl
19052:Core/Src/bno055.c **** {
 39890              		.loc 1 19052 1 is_stmt 1 view -0
 39891              		.cfi_startproc
 39892              		@ args = 0, pretend = 0, frame = 8
 39893              		@ frame_needed = 0, uses_anonymous_args = 0
 39894              		.loc 1 19052 1 is_stmt 0 view .LVU11189
 39895 0000 30B5     		push	{r4, r5, lr}
 39896              	.LCFI1081:
 39897              		.cfi_def_cfa_offset 12
 39898              		.cfi_offset 4, -12
 39899              		.cfi_offset 5, -8
 39900              		.cfi_offset 14, -4
 39901 0002 83B0     		sub	sp, sp, #12
 39902              	.LCFI1082:
 39903              		.cfi_def_cfa_offset 24
19053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39904              		.loc 1 19053 5 is_stmt 1 view .LVU11190
 39905              	.LVL4901:
19054:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39906              		.loc 1 19054 5 view .LVU11191
 39907              		.loc 1 19054 8 is_stmt 0 view .LVU11192
 39908 0004 0023     		movs	r3, #0
 39909 0006 8DF80730 		strb	r3, [sp, #7]
19055:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39910              		.loc 1 19055 5 is_stmt 1 view .LVU11193
 39911              	.LVL4902:
19056:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/cc9kYR4Z.s 			page 1119


 39912              		.loc 1 19056 5 view .LVU11194
19057:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39913              		.loc 1 19057 5 view .LVU11195
 39914              		.loc 1 19057 8 is_stmt 0 view .LVU11196
 39915 000a 8DF80630 		strb	r3, [sp, #6]
19058:Core/Src/bno055.c **** 
19059:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19060:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39916              		.loc 1 19060 5 is_stmt 1 view .LVU11197
 39917              		.loc 1 19060 18 is_stmt 0 view .LVU11198
 39918 000e 294B     		ldr	r3, .L2850
 39919 0010 1B68     		ldr	r3, [r3]
 39920              		.loc 1 19060 8 view .LVU11199
 39921 0012 002B     		cmp	r3, #0
 39922 0014 4AD0     		beq	.L2842
 39923 0016 0546     		mov	r5, r0
19061:Core/Src/bno055.c ****     {
19062:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19063:Core/Src/bno055.c ****     }
19064:Core/Src/bno055.c ****     else
19065:Core/Src/bno055.c ****     {
19066:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19067:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19068:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19069:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39924              		.loc 1 19069 9 is_stmt 1 view .LVU11200
 39925              		.loc 1 19069 19 is_stmt 0 view .LVU11201
 39926 0018 0DF10600 		add	r0, sp, #6
 39927              	.LVL4903:
 39928              		.loc 1 19069 19 view .LVU11202
 39929 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39930              	.LVL4904:
19070:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39931              		.loc 1 19070 9 is_stmt 1 view .LVU11203
 39932              		.loc 1 19070 12 is_stmt 0 view .LVU11204
 39933 0020 0446     		mov	r4, r0
 39934 0022 90BB     		cbnz	r0, .L2843
19071:Core/Src/bno055.c ****         {
19072:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39935              		.loc 1 19072 13 is_stmt 1 view .LVU11205
 39936              		.loc 1 19072 32 is_stmt 0 view .LVU11206
 39937 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39938              		.loc 1 19072 16 view .LVU11207
 39939 0028 1BB9     		cbnz	r3, .L2847
 39940              	.LVL4905:
 39941              	.L2841:
19073:Core/Src/bno055.c ****             {
19074:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19075:Core/Src/bno055.c ****             }
19076:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39942              		.loc 1 19076 13 is_stmt 1 view .LVU11208
 39943              		.loc 1 19076 16 is_stmt 0 view .LVU11209
 39944 002a 44B1     		cbz	r4, .L2848
19077:Core/Src/bno055.c ****             {
19078:Core/Src/bno055.c ****                 /* Write page as one */
19079:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19080:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/cc9kYR4Z.s 			page 1120


19081:Core/Src/bno055.c ****                 {
19082:Core/Src/bno055.c ****                     /* Write the value of
19083:Core/Src/bno055.c ****                      * gyro anymotion slope samples*/
19084:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19085:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
19086:Core/Src/bno055.c ****                                                               &data_u8r,
19087:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19088:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19089:Core/Src/bno055.c ****                     {
19090:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
19091:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
19092:Core/Src/bno055.c ****                                                        gyro_any_motion_slope_samples_u8);
19093:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19094:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
19095:Core/Src/bno055.c ****                                                                     &data_u8r,
19096:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19097:Core/Src/bno055.c ****                     }
19098:Core/Src/bno055.c ****                 }
19099:Core/Src/bno055.c ****                 else
19100:Core/Src/bno055.c ****                 {
19101:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19102:Core/Src/bno055.c ****                 }
19103:Core/Src/bno055.c ****             }
19104:Core/Src/bno055.c ****             else
19105:Core/Src/bno055.c ****             {
19106:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39945              		.loc 1 19106 26 view .LVU11210
 39946 002c 4FF0FF34 		mov	r4, #-1
 39947              	.LVL4906:
 39948              		.loc 1 19106 26 view .LVU11211
 39949 0030 2DE0     		b	.L2840
 39950              	.LVL4907:
 39951              	.L2847:
19074:Core/Src/bno055.c ****             }
 39952              		.loc 1 19074 17 is_stmt 1 view .LVU11212
19074:Core/Src/bno055.c ****             }
 39953              		.loc 1 19074 28 is_stmt 0 view .LVU11213
 39954 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39955              	.LVL4908:
19074:Core/Src/bno055.c ****             }
 39956              		.loc 1 19074 25 view .LVU11214
 39957 0036 54FA80F4 		uxtab	r4, r4, r0
 39958 003a 64B2     		sxtb	r4, r4
 39959              	.LVL4909:
19074:Core/Src/bno055.c ****             }
 39960              		.loc 1 19074 25 view .LVU11215
 39961 003c F5E7     		b	.L2841
 39962              	.L2848:
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39963              		.loc 1 19079 17 is_stmt 1 view .LVU11216
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39964              		.loc 1 19079 30 is_stmt 0 view .LVU11217
 39965 003e 0120     		movs	r0, #1
 39966 0040 FFF7FEFF 		bl	bno055_write_page_id
 39967              	.LVL4910:
19080:Core/Src/bno055.c ****                 {
 39968              		.loc 1 19080 17 is_stmt 1 view .LVU11218
ARM GAS  /tmp/cc9kYR4Z.s 			page 1121


19080:Core/Src/bno055.c ****                 {
 39969              		.loc 1 19080 20 is_stmt 0 view .LVU11219
 39970 0044 48BB     		cbnz	r0, .L2845
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 39971              		.loc 1 19084 21 is_stmt 1 view .LVU11220
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 39972              		.loc 1 19084 40 is_stmt 0 view .LVU11221
 39973 0046 1B4B     		ldr	r3, .L2850
 39974 0048 1868     		ldr	r0, [r3]
 39975              	.LVL4911:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 39976              		.loc 1 19084 40 view .LVU11222
 39977 004a 0469     		ldr	r4, [r0, #16]
 39978              	.LVL4912:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 39979              		.loc 1 19084 32 view .LVU11223
 39980 004c 0123     		movs	r3, #1
 39981 004e 0DF10702 		add	r2, sp, #7
 39982 0052 1F21     		movs	r1, #31
 39983 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39984 0056 A047     		blx	r4
 39985              	.LVL4913:
19088:Core/Src/bno055.c ****                     {
 39986              		.loc 1 19088 21 is_stmt 1 view .LVU11224
19088:Core/Src/bno055.c ****                     {
 39987              		.loc 1 19088 24 is_stmt 0 view .LVU11225
 39988 0058 0446     		mov	r4, r0
 39989 005a C0B9     		cbnz	r0, .L2840
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 39990              		.loc 1 19090 25 is_stmt 1 view .LVU11226
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 39991              		.loc 1 19090 36 is_stmt 0 view .LVU11227
 39992 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39993 0060 23F00303 		bic	r3, r3, #3
 39994 0064 5BB2     		sxtb	r3, r3
 39995 0066 05F00300 		and	r0, r5, #3
 39996              	.LVL4914:
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 39997              		.loc 1 19090 36 view .LVU11228
 39998 006a 0343     		orrs	r3, r3, r0
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 39999              		.loc 1 19090 34 view .LVU11229
 40000 006c 8DF80730 		strb	r3, [sp, #7]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40001              		.loc 1 19093 25 is_stmt 1 view .LVU11230
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40002              		.loc 1 19093 45 is_stmt 0 view .LVU11231
 40003 0070 104B     		ldr	r3, .L2850
 40004 0072 1868     		ldr	r0, [r3]
 40005 0074 C568     		ldr	r5, [r0, #12]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40006              		.loc 1 19093 37 view .LVU11232
 40007 0076 0123     		movs	r3, #1
 40008 0078 0DF10702 		add	r2, sp, #7
 40009 007c 1F21     		movs	r1, #31
 40010 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40011 0080 A847     		blx	r5
ARM GAS  /tmp/cc9kYR4Z.s 			page 1122


 40012              	.LVL4915:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40013              		.loc 1 19093 34 view .LVU11233
 40014 0082 54FA80F0 		uxtab	r0, r4, r0
 40015 0086 44B2     		sxtb	r4, r0
 40016              	.LVL4916:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40017              		.loc 1 19093 34 view .LVU11234
 40018 0088 01E0     		b	.L2840
 40019              	.LVL4917:
 40020              	.L2843:
19107:Core/Src/bno055.c ****             }
19108:Core/Src/bno055.c ****         }
19109:Core/Src/bno055.c ****         else
19110:Core/Src/bno055.c ****         {
19111:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40021              		.loc 1 19111 22 view .LVU11235
 40022 008a 4FF0FF34 		mov	r4, #-1
 40023              	.LVL4918:
 40024              	.L2840:
19112:Core/Src/bno055.c ****         }
19113:Core/Src/bno055.c ****     }
19114:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40025              		.loc 1 19114 5 is_stmt 1 view .LVU11236
 40026              		.loc 1 19114 24 is_stmt 0 view .LVU11237
 40027 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40028              		.loc 1 19114 8 view .LVU11238
 40029 0092 28B9     		cbnz	r0, .L2849
 40030              	.LVL4919:
 40031              	.L2839:
19115:Core/Src/bno055.c ****     {
19116:Core/Src/bno055.c ****         /* set the operation mode of
19117:Core/Src/bno055.c ****          * previous operation mode*/
19118:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19119:Core/Src/bno055.c ****     }
19120:Core/Src/bno055.c **** 
19121:Core/Src/bno055.c ****     return com_rslt;
19122:Core/Src/bno055.c **** }
 40032              		.loc 1 19122 1 view .LVU11239
 40033 0094 2046     		mov	r0, r4
 40034 0096 03B0     		add	sp, sp, #12
 40035              	.LCFI1083:
 40036              		.cfi_remember_state
 40037              		.cfi_def_cfa_offset 12
 40038              		@ sp needed
 40039 0098 30BD     		pop	{r4, r5, pc}
 40040              	.LVL4920:
 40041              	.L2845:
 40042              	.LCFI1084:
 40043              		.cfi_restore_state
19101:Core/Src/bno055.c ****                 }
 40044              		.loc 1 19101 30 view .LVU11240
 40045 009a 4FF0FF34 		mov	r4, #-1
 40046              	.LVL4921:
19101:Core/Src/bno055.c ****                 }
 40047              		.loc 1 19101 30 view .LVU11241
 40048 009e F6E7     		b	.L2840
ARM GAS  /tmp/cc9kYR4Z.s 			page 1123


 40049              	.LVL4922:
 40050              	.L2849:
19118:Core/Src/bno055.c ****     }
 40051              		.loc 1 19118 9 is_stmt 1 view .LVU11242
19118:Core/Src/bno055.c ****     }
 40052              		.loc 1 19118 21 is_stmt 0 view .LVU11243
 40053 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 40054              	.LVL4923:
19118:Core/Src/bno055.c ****     }
 40055              		.loc 1 19118 18 view .LVU11244
 40056 00a4 54FA80F0 		uxtab	r0, r4, r0
 40057 00a8 44B2     		sxtb	r4, r0
 40058              	.LVL4924:
19118:Core/Src/bno055.c ****     }
 40059              		.loc 1 19118 18 view .LVU11245
 40060 00aa F3E7     		b	.L2839
 40061              	.LVL4925:
 40062              	.L2842:
19062:Core/Src/bno055.c ****     }
 40063              		.loc 1 19062 16 view .LVU11246
 40064 00ac 6FF07E04 		mvn	r4, #126
 40065 00b0 F0E7     		b	.L2839
 40066              	.L2851:
 40067 00b2 00BF     		.align	2
 40068              	.L2850:
 40069 00b4 00000000 		.word	.LANCHOR0
 40070              		.cfi_endproc
 40071              	.LFE272:
 40073              		.section	.text.bno055_get_gyro_any_motion_awake_durn,"ax",%progbits
 40074              		.align	1
 40075              		.global	bno055_get_gyro_any_motion_awake_durn
 40076              		.syntax unified
 40077              		.thumb
 40078              		.thumb_func
 40080              	bno055_get_gyro_any_motion_awake_durn:
 40081              	.LVL4926:
 40082              	.LFB273:
19123:Core/Src/bno055.c **** 
19124:Core/Src/bno055.c **** /*!
19125:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion awake duration
19126:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19127:Core/Src/bno055.c ****  *
19128:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19129:Core/Src/bno055.c ****  *
19130:Core/Src/bno055.c ****  *  @return results of bus communication function
19131:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19132:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19133:Core/Src/bno055.c ****  *
19134:Core/Src/bno055.c ****  */
19135:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_awake_durn(u8 *gyro_awake_durn_u8)
19136:Core/Src/bno055.c **** {
 40083              		.loc 1 19136 1 is_stmt 1 view -0
 40084              		.cfi_startproc
 40085              		@ args = 0, pretend = 0, frame = 8
 40086              		@ frame_needed = 0, uses_anonymous_args = 0
 40087              		.loc 1 19136 1 is_stmt 0 view .LVU11248
 40088 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc9kYR4Z.s 			page 1124


 40089              	.LCFI1085:
 40090              		.cfi_def_cfa_offset 12
 40091              		.cfi_offset 4, -12
 40092              		.cfi_offset 5, -8
 40093              		.cfi_offset 14, -4
 40094 0002 83B0     		sub	sp, sp, #12
 40095              	.LCFI1086:
 40096              		.cfi_def_cfa_offset 24
19137:Core/Src/bno055.c ****     /* Variable used to return value of
19138:Core/Src/bno055.c ****      * communication routine*/
19139:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40097              		.loc 1 19139 5 is_stmt 1 view .LVU11249
 40098              	.LVL4927:
19140:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40099              		.loc 1 19140 5 view .LVU11250
 40100              		.loc 1 19140 8 is_stmt 0 view .LVU11251
 40101 0004 0023     		movs	r3, #0
 40102 0006 8DF80730 		strb	r3, [sp, #7]
19141:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40103              		.loc 1 19141 5 is_stmt 1 view .LVU11252
 40104              	.LVL4928:
19142:Core/Src/bno055.c **** 
19143:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19144:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40105              		.loc 1 19144 5 view .LVU11253
 40106              		.loc 1 19144 18 is_stmt 0 view .LVU11254
 40107 000a 144B     		ldr	r3, .L2860
 40108 000c 1B68     		ldr	r3, [r3]
 40109              		.loc 1 19144 8 view .LVU11255
 40110 000e F3B1     		cbz	r3, .L2856
 40111 0010 0446     		mov	r4, r0
19145:Core/Src/bno055.c ****     {
19146:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19147:Core/Src/bno055.c ****     }
19148:Core/Src/bno055.c ****     else
19149:Core/Src/bno055.c ****     {
19150:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion awake duration is
19151:Core/Src/bno055.c ****          * available in the page one*/
19152:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 40112              		.loc 1 19152 9 is_stmt 1 view .LVU11256
 40113              		.loc 1 19152 21 is_stmt 0 view .LVU11257
 40114 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40115              		.loc 1 19152 12 view .LVU11258
 40116 0014 012B     		cmp	r3, #1
 40117 0016 14D1     		bne	.L2859
 40118              	.LVL4929:
 40119              	.L2854:
19153:Core/Src/bno055.c ****         {
19154:Core/Src/bno055.c ****             /* Write page as one */
19155:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19156:Core/Src/bno055.c ****         }
19157:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 40120              		.loc 1 19157 53 discriminator 1 view .LVU11259
 40121 0018 104B     		ldr	r3, .L2860
 40122 001a 1B68     		ldr	r3, [r3]
 40123 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40124              		.loc 1 19157 41 discriminator 1 view .LVU11260
ARM GAS  /tmp/cc9kYR4Z.s 			page 1125


 40125 001e 012B     		cmp	r3, #1
 40126 0020 18D1     		bne	.L2857
 40127              	.L2855:
19158:Core/Src/bno055.c ****         {
19159:Core/Src/bno055.c ****             /* Read the value of gyro anymotion awake duration*/
19160:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 40128              		.loc 1 19160 13 is_stmt 1 view .LVU11261
 40129              		.loc 1 19160 32 is_stmt 0 view .LVU11262
 40130 0022 0E4B     		ldr	r3, .L2860
 40131 0024 1868     		ldr	r0, [r3]
 40132 0026 0569     		ldr	r5, [r0, #16]
 40133              		.loc 1 19160 24 view .LVU11263
 40134 0028 0123     		movs	r3, #1
 40135 002a 0DF10702 		add	r2, sp, #7
 40136 002e 1F21     		movs	r1, #31
 40137 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40138 0032 A847     		blx	r5
 40139              	.LVL4930:
19161:Core/Src/bno055.c ****                                                       BNO055_GYRO_AWAKE_DURN_REG,
19162:Core/Src/bno055.c ****                                                       &data_u8r,
19163:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19164:Core/Src/bno055.c ****             *gyro_awake_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN);
 40140              		.loc 1 19164 13 is_stmt 1 view .LVU11264
 40141              		.loc 1 19164 35 is_stmt 0 view .LVU11265
 40142 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 40143 0038 C3F38103 		ubfx	r3, r3, #2, #2
 40144              		.loc 1 19164 33 view .LVU11266
 40145 003c 2370     		strb	r3, [r4]
 40146              	.LVL4931:
 40147              	.L2853:
19165:Core/Src/bno055.c ****         }
19166:Core/Src/bno055.c ****         else
19167:Core/Src/bno055.c ****         {
19168:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19169:Core/Src/bno055.c ****         }
19170:Core/Src/bno055.c ****     }
19171:Core/Src/bno055.c **** 
19172:Core/Src/bno055.c ****     return com_rslt;
19173:Core/Src/bno055.c **** }
 40148              		.loc 1 19173 1 view .LVU11267
 40149 003e 03B0     		add	sp, sp, #12
 40150              	.LCFI1087:
 40151              		.cfi_remember_state
 40152              		.cfi_def_cfa_offset 12
 40153              		@ sp needed
 40154 0040 30BD     		pop	{r4, r5, pc}
 40155              	.LVL4932:
 40156              	.L2859:
 40157              	.LCFI1088:
 40158              		.cfi_restore_state
19155:Core/Src/bno055.c ****         }
 40159              		.loc 1 19155 13 is_stmt 1 view .LVU11268
19155:Core/Src/bno055.c ****         }
 40160              		.loc 1 19155 23 is_stmt 0 view .LVU11269
 40161 0042 0120     		movs	r0, #1
 40162              	.LVL4933:
19155:Core/Src/bno055.c ****         }
ARM GAS  /tmp/cc9kYR4Z.s 			page 1126


 40163              		.loc 1 19155 23 view .LVU11270
 40164 0044 FFF7FEFF 		bl	bno055_write_page_id
 40165              	.LVL4934:
19157:Core/Src/bno055.c ****         {
 40166              		.loc 1 19157 9 is_stmt 1 view .LVU11271
19157:Core/Src/bno055.c ****         {
 40167              		.loc 1 19157 12 is_stmt 0 view .LVU11272
 40168 0048 0028     		cmp	r0, #0
 40169 004a EAD0     		beq	.L2855
 40170 004c E4E7     		b	.L2854
 40171              	.LVL4935:
 40172              	.L2856:
19146:Core/Src/bno055.c ****     }
 40173              		.loc 1 19146 16 view .LVU11273
 40174 004e 6FF07E00 		mvn	r0, #126
 40175              	.LVL4936:
19146:Core/Src/bno055.c ****     }
 40176              		.loc 1 19146 16 view .LVU11274
 40177 0052 F4E7     		b	.L2853
 40178              	.LVL4937:
 40179              	.L2857:
19168:Core/Src/bno055.c ****         }
 40180              		.loc 1 19168 22 view .LVU11275
 40181 0054 4FF0FF30 		mov	r0, #-1
 40182 0058 F1E7     		b	.L2853
 40183              	.L2861:
 40184 005a 00BF     		.align	2
 40185              	.L2860:
 40186 005c 00000000 		.word	.LANCHOR0
 40187              		.cfi_endproc
 40188              	.LFE273:
 40190              		.section	.text.bno055_set_gyro_any_motion_awake_durn,"ax",%progbits
 40191              		.align	1
 40192              		.global	bno055_set_gyro_any_motion_awake_durn
 40193              		.syntax unified
 40194              		.thumb
 40195              		.thumb_func
 40197              	bno055_set_gyro_any_motion_awake_durn:
 40198              	.LVL4938:
 40199              	.LFB274:
19174:Core/Src/bno055.c **** 
19175:Core/Src/bno055.c **** /*!
19176:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion awake duration
19177:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19178:Core/Src/bno055.c ****  *
19179:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19180:Core/Src/bno055.c ****  *
19181:Core/Src/bno055.c ****  *  @return results of bus communication function
19182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19184:Core/Src/bno055.c ****  *
19185:Core/Src/bno055.c ****  */
19186:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_awake_durn(u8 gyro_awake_durn_u8)
19187:Core/Src/bno055.c **** {
 40200              		.loc 1 19187 1 is_stmt 1 view -0
 40201              		.cfi_startproc
 40202              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc9kYR4Z.s 			page 1127


 40203              		@ frame_needed = 0, uses_anonymous_args = 0
 40204              		.loc 1 19187 1 is_stmt 0 view .LVU11277
 40205 0000 30B5     		push	{r4, r5, lr}
 40206              	.LCFI1089:
 40207              		.cfi_def_cfa_offset 12
 40208              		.cfi_offset 4, -12
 40209              		.cfi_offset 5, -8
 40210              		.cfi_offset 14, -4
 40211 0002 83B0     		sub	sp, sp, #12
 40212              	.LCFI1090:
 40213              		.cfi_def_cfa_offset 24
19188:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40214              		.loc 1 19188 5 is_stmt 1 view .LVU11278
 40215              	.LVL4939:
19189:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40216              		.loc 1 19189 5 view .LVU11279
 40217              		.loc 1 19189 8 is_stmt 0 view .LVU11280
 40218 0004 0023     		movs	r3, #0
 40219 0006 8DF80730 		strb	r3, [sp, #7]
19190:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40220              		.loc 1 19190 5 is_stmt 1 view .LVU11281
 40221              	.LVL4940:
19191:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 40222              		.loc 1 19191 5 view .LVU11282
19192:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 40223              		.loc 1 19192 5 view .LVU11283
 40224              		.loc 1 19192 8 is_stmt 0 view .LVU11284
 40225 000a 8DF80630 		strb	r3, [sp, #6]
19193:Core/Src/bno055.c **** 
19194:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19195:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40226              		.loc 1 19195 5 is_stmt 1 view .LVU11285
 40227              		.loc 1 19195 18 is_stmt 0 view .LVU11286
 40228 000e 2A4B     		ldr	r3, .L2874
 40229 0010 1B68     		ldr	r3, [r3]
 40230              		.loc 1 19195 8 view .LVU11287
 40231 0012 002B     		cmp	r3, #0
 40232 0014 4CD0     		beq	.L2866
 40233 0016 0546     		mov	r5, r0
19196:Core/Src/bno055.c ****     {
19197:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19198:Core/Src/bno055.c ****     }
19199:Core/Src/bno055.c ****     else
19200:Core/Src/bno055.c ****     {
19201:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19202:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19203:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19204:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 40234              		.loc 1 19204 9 is_stmt 1 view .LVU11288
 40235              		.loc 1 19204 19 is_stmt 0 view .LVU11289
 40236 0018 0DF10600 		add	r0, sp, #6
 40237              	.LVL4941:
 40238              		.loc 1 19204 19 view .LVU11290
 40239 001c FFF7FEFF 		bl	bno055_get_operation_mode
 40240              	.LVL4942:
19205:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 40241              		.loc 1 19205 9 is_stmt 1 view .LVU11291
ARM GAS  /tmp/cc9kYR4Z.s 			page 1128


 40242              		.loc 1 19205 12 is_stmt 0 view .LVU11292
 40243 0020 0446     		mov	r4, r0
 40244 0022 0028     		cmp	r0, #0
 40245 0024 33D1     		bne	.L2867
19206:Core/Src/bno055.c ****         {
19207:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40246              		.loc 1 19207 13 is_stmt 1 view .LVU11293
 40247              		.loc 1 19207 32 is_stmt 0 view .LVU11294
 40248 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 40249              		.loc 1 19207 16 view .LVU11295
 40250 002a 1BB9     		cbnz	r3, .L2871
 40251              	.LVL4943:
 40252              	.L2865:
19208:Core/Src/bno055.c ****             {
19209:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19210:Core/Src/bno055.c ****             }
19211:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 40253              		.loc 1 19211 13 is_stmt 1 view .LVU11296
 40254              		.loc 1 19211 16 is_stmt 0 view .LVU11297
 40255 002c 44B1     		cbz	r4, .L2872
19212:Core/Src/bno055.c ****             {
19213:Core/Src/bno055.c ****                 /* Write page as one */
19214:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19215:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19216:Core/Src/bno055.c ****                 {
19217:Core/Src/bno055.c ****                     /* Write the value of gyro
19218:Core/Src/bno055.c ****                      *  anymotion awake duration*/
19219:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19220:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
19221:Core/Src/bno055.c ****                                                               &data_u8r,
19222:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19223:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19224:Core/Src/bno055.c ****                     {
19225:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN, gyro_awake
19226:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19227:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
19228:Core/Src/bno055.c ****                                                                     &data_u8r,
19229:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19230:Core/Src/bno055.c ****                     }
19231:Core/Src/bno055.c ****                 }
19232:Core/Src/bno055.c ****                 else
19233:Core/Src/bno055.c ****                 {
19234:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19235:Core/Src/bno055.c ****                 }
19236:Core/Src/bno055.c ****             }
19237:Core/Src/bno055.c ****             else
19238:Core/Src/bno055.c ****             {
19239:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 40256              		.loc 1 19239 26 view .LVU11298
 40257 002e 4FF0FF34 		mov	r4, #-1
 40258              	.LVL4944:
 40259              		.loc 1 19239 26 view .LVU11299
 40260 0032 2EE0     		b	.L2864
 40261              	.LVL4945:
 40262              	.L2871:
19209:Core/Src/bno055.c ****             }
 40263              		.loc 1 19209 17 is_stmt 1 view .LVU11300
ARM GAS  /tmp/cc9kYR4Z.s 			page 1129


19209:Core/Src/bno055.c ****             }
 40264              		.loc 1 19209 28 is_stmt 0 view .LVU11301
 40265 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 40266              	.LVL4946:
19209:Core/Src/bno055.c ****             }
 40267              		.loc 1 19209 25 view .LVU11302
 40268 0038 54FA80F4 		uxtab	r4, r4, r0
 40269 003c 64B2     		sxtb	r4, r4
 40270              	.LVL4947:
19209:Core/Src/bno055.c ****             }
 40271              		.loc 1 19209 25 view .LVU11303
 40272 003e F5E7     		b	.L2865
 40273              	.L2872:
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40274              		.loc 1 19214 17 is_stmt 1 view .LVU11304
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40275              		.loc 1 19214 30 is_stmt 0 view .LVU11305
 40276 0040 0120     		movs	r0, #1
 40277 0042 FFF7FEFF 		bl	bno055_write_page_id
 40278              	.LVL4948:
19215:Core/Src/bno055.c ****                 {
 40279              		.loc 1 19215 17 is_stmt 1 view .LVU11306
19215:Core/Src/bno055.c ****                 {
 40280              		.loc 1 19215 20 is_stmt 0 view .LVU11307
 40281 0046 50BB     		cbnz	r0, .L2869
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40282              		.loc 1 19219 21 is_stmt 1 view .LVU11308
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40283              		.loc 1 19219 40 is_stmt 0 view .LVU11309
 40284 0048 1B4B     		ldr	r3, .L2874
 40285 004a 1868     		ldr	r0, [r3]
 40286              	.LVL4949:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40287              		.loc 1 19219 40 view .LVU11310
 40288 004c 0469     		ldr	r4, [r0, #16]
 40289              	.LVL4950:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40290              		.loc 1 19219 32 view .LVU11311
 40291 004e 0123     		movs	r3, #1
 40292 0050 0DF10702 		add	r2, sp, #7
 40293 0054 1F21     		movs	r1, #31
 40294 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40295 0058 A047     		blx	r4
 40296              	.LVL4951:
19223:Core/Src/bno055.c ****                     {
 40297              		.loc 1 19223 21 is_stmt 1 view .LVU11312
19223:Core/Src/bno055.c ****                     {
 40298              		.loc 1 19223 24 is_stmt 0 view .LVU11313
 40299 005a 0446     		mov	r4, r0
 40300 005c C8B9     		cbnz	r0, .L2864
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40301              		.loc 1 19225 25 is_stmt 1 view .LVU11314
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40302              		.loc 1 19225 36 is_stmt 0 view .LVU11315
 40303 005e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 40304 0062 23F00C03 		bic	r3, r3, #12
 40305 0066 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/cc9kYR4Z.s 			page 1130


 40306 0068 A800     		lsls	r0, r5, #2
 40307              	.LVL4952:
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40308              		.loc 1 19225 36 view .LVU11316
 40309 006a 00F00C00 		and	r0, r0, #12
 40310 006e 0343     		orrs	r3, r3, r0
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40311              		.loc 1 19225 34 view .LVU11317
 40312 0070 8DF80730 		strb	r3, [sp, #7]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40313              		.loc 1 19226 25 is_stmt 1 view .LVU11318
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40314              		.loc 1 19226 45 is_stmt 0 view .LVU11319
 40315 0074 104B     		ldr	r3, .L2874
 40316 0076 1868     		ldr	r0, [r3]
 40317 0078 C568     		ldr	r5, [r0, #12]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40318              		.loc 1 19226 37 view .LVU11320
 40319 007a 0123     		movs	r3, #1
 40320 007c 0DF10702 		add	r2, sp, #7
 40321 0080 1F21     		movs	r1, #31
 40322 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40323 0084 A847     		blx	r5
 40324              	.LVL4953:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40325              		.loc 1 19226 34 view .LVU11321
 40326 0086 54FA80F0 		uxtab	r0, r4, r0
 40327 008a 44B2     		sxtb	r4, r0
 40328              	.LVL4954:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40329              		.loc 1 19226 34 view .LVU11322
 40330 008c 01E0     		b	.L2864
 40331              	.LVL4955:
 40332              	.L2867:
19240:Core/Src/bno055.c ****             }
19241:Core/Src/bno055.c ****         }
19242:Core/Src/bno055.c ****         else
19243:Core/Src/bno055.c ****         {
19244:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40333              		.loc 1 19244 22 view .LVU11323
 40334 008e 4FF0FF34 		mov	r4, #-1
 40335              	.LVL4956:
 40336              	.L2864:
19245:Core/Src/bno055.c ****         }
19246:Core/Src/bno055.c ****     }
19247:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40337              		.loc 1 19247 5 is_stmt 1 view .LVU11324
 40338              		.loc 1 19247 24 is_stmt 0 view .LVU11325
 40339 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40340              		.loc 1 19247 8 view .LVU11326
 40341 0096 28B9     		cbnz	r0, .L2873
 40342              	.LVL4957:
 40343              	.L2863:
19248:Core/Src/bno055.c ****     {
19249:Core/Src/bno055.c ****         /* set the operation mode
19250:Core/Src/bno055.c ****          * of previous operation mode*/
19251:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
ARM GAS  /tmp/cc9kYR4Z.s 			page 1131


19252:Core/Src/bno055.c ****     }
19253:Core/Src/bno055.c **** 
19254:Core/Src/bno055.c ****     return com_rslt;
19255:Core/Src/bno055.c **** }
 40344              		.loc 1 19255 1 view .LVU11327
 40345 0098 2046     		mov	r0, r4
 40346 009a 03B0     		add	sp, sp, #12
 40347              	.LCFI1091:
 40348              		.cfi_remember_state
 40349              		.cfi_def_cfa_offset 12
 40350              		@ sp needed
 40351 009c 30BD     		pop	{r4, r5, pc}
 40352              	.LVL4958:
 40353              	.L2869:
 40354              	.LCFI1092:
 40355              		.cfi_restore_state
19234:Core/Src/bno055.c ****                 }
 40356              		.loc 1 19234 30 view .LVU11328
 40357 009e 4FF0FF34 		mov	r4, #-1
 40358              	.LVL4959:
19234:Core/Src/bno055.c ****                 }
 40359              		.loc 1 19234 30 view .LVU11329
 40360 00a2 F6E7     		b	.L2864
 40361              	.LVL4960:
 40362              	.L2873:
19251:Core/Src/bno055.c ****     }
 40363              		.loc 1 19251 9 is_stmt 1 view .LVU11330
19251:Core/Src/bno055.c ****     }
 40364              		.loc 1 19251 21 is_stmt 0 view .LVU11331
 40365 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 40366              	.LVL4961:
19251:Core/Src/bno055.c ****     }
 40367              		.loc 1 19251 18 view .LVU11332
 40368 00a8 54FA80F0 		uxtab	r0, r4, r0
 40369 00ac 44B2     		sxtb	r4, r0
 40370              	.LVL4962:
19251:Core/Src/bno055.c ****     }
 40371              		.loc 1 19251 18 view .LVU11333
 40372 00ae F3E7     		b	.L2863
 40373              	.LVL4963:
 40374              	.L2866:
19197:Core/Src/bno055.c ****     }
 40375              		.loc 1 19197 16 view .LVU11334
 40376 00b0 6FF07E04 		mvn	r4, #126
 40377 00b4 F0E7     		b	.L2863
 40378              	.L2875:
 40379 00b6 00BF     		.align	2
 40380              	.L2874:
 40381 00b8 00000000 		.word	.LANCHOR0
 40382              		.cfi_endproc
 40383              	.LFE274:
 40385              		.section	.rodata
 40386              		.align	2
 40387              		.set	.LANCHOR1,. + 0
 40388              	.LC0:
 40389 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 40389      0000
ARM GAS  /tmp/cc9kYR4Z.s 			page 1132


 40390 0006 0000     		.space	2
 40391              	.LC1:
 40392 0008 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 40392      00000000 
 40393              	.LC2:
 40394 0010 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 40394      00000000 
 40394      00000000 
 40394      00
 40395 001d 00000000 		.ascii	"\000\000\000\000\000"
 40395      00
 40396              		.section	.bss.p_bno055,"aw",%nobits
 40397              		.align	2
 40398              		.set	.LANCHOR0,. + 0
 40401              	p_bno055:
 40402 0000 00000000 		.space	4
 40403              		.text
 40404              	.Letext0:
 40405              		.file 2 "Core/Inc/bno055.h"
ARM GAS  /tmp/cc9kYR4Z.s 			page 1133


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bno055.c
     /tmp/cc9kYR4Z.s:20     .text.bno055_init:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26     .text.bno055_init:0000000000000000 bno055_init
     /tmp/cc9kYR4Z.s:245    .text.bno055_init:00000000000000f8 $d
     /tmp/cc9kYR4Z.s:250    .text.bno055_write_register:0000000000000000 $t
     /tmp/cc9kYR4Z.s:256    .text.bno055_write_register:0000000000000000 bno055_write_register
     /tmp/cc9kYR4Z.s:309    .text.bno055_write_register:000000000000001c $d
     /tmp/cc9kYR4Z.s:314    .text.bno055_read_register:0000000000000000 $t
     /tmp/cc9kYR4Z.s:320    .text.bno055_read_register:0000000000000000 bno055_read_register
     /tmp/cc9kYR4Z.s:373    .text.bno055_read_register:000000000000001c $d
     /tmp/cc9kYR4Z.s:378    .text.bno055_read_page_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:384    .text.bno055_read_page_id:0000000000000000 bno055_read_page_id
     /tmp/cc9kYR4Z.s:470    .text.bno055_read_page_id:0000000000000040 $d
     /tmp/cc9kYR4Z.s:475    .text.bno055_write_page_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:481    .text.bno055_write_page_id:0000000000000000 bno055_write_page_id
     /tmp/cc9kYR4Z.s:583    .text.bno055_write_page_id:0000000000000058 $d
     /tmp/cc9kYR4Z.s:588    .text.bno055_read_chip_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:594    .text.bno055_read_chip_id:0000000000000000 bno055_read_chip_id
     /tmp/cc9kYR4Z.s:697    .text.bno055_read_chip_id:0000000000000054 $d
     /tmp/cc9kYR4Z.s:702    .text.bno055_read_sw_rev_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:708    .text.bno055_read_sw_rev_id:0000000000000000 bno055_read_sw_rev_id
     /tmp/cc9kYR4Z.s:816    .text.bno055_read_sw_rev_id:0000000000000058 $d
     /tmp/cc9kYR4Z.s:821    .text.bno055_read_accel_rev_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:827    .text.bno055_read_accel_rev_id:0000000000000000 bno055_read_accel_rev_id
     /tmp/cc9kYR4Z.s:930    .text.bno055_read_accel_rev_id:0000000000000054 $d
     /tmp/cc9kYR4Z.s:935    .text.bno055_read_mag_rev_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:941    .text.bno055_read_mag_rev_id:0000000000000000 bno055_read_mag_rev_id
     /tmp/cc9kYR4Z.s:1044   .text.bno055_read_mag_rev_id:0000000000000054 $d
     /tmp/cc9kYR4Z.s:1049   .text.bno055_read_gyro_rev_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1055   .text.bno055_read_gyro_rev_id:0000000000000000 bno055_read_gyro_rev_id
     /tmp/cc9kYR4Z.s:1158   .text.bno055_read_gyro_rev_id:0000000000000054 $d
     /tmp/cc9kYR4Z.s:1163   .text.bno055_read_bl_rev_id:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1169   .text.bno055_read_bl_rev_id:0000000000000000 bno055_read_bl_rev_id
     /tmp/cc9kYR4Z.s:1272   .text.bno055_read_bl_rev_id:0000000000000054 $d
     /tmp/cc9kYR4Z.s:1277   .text.bno055_read_accel_x:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1283   .text.bno055_read_accel_x:0000000000000000 bno055_read_accel_x
     /tmp/cc9kYR4Z.s:1392   .text.bno055_read_accel_x:0000000000000058 $d
     /tmp/cc9kYR4Z.s:1397   .text.bno055_read_accel_y:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1403   .text.bno055_read_accel_y:0000000000000000 bno055_read_accel_y
     /tmp/cc9kYR4Z.s:1512   .text.bno055_read_accel_y:0000000000000058 $d
     /tmp/cc9kYR4Z.s:1517   .text.bno055_read_accel_z:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1523   .text.bno055_read_accel_z:0000000000000000 bno055_read_accel_z
     /tmp/cc9kYR4Z.s:1632   .text.bno055_read_accel_z:0000000000000058 $d
     /tmp/cc9kYR4Z.s:1637   .text.bno055_read_accel_xyz:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1643   .text.bno055_read_accel_xyz:0000000000000000 bno055_read_accel_xyz
     /tmp/cc9kYR4Z.s:1774   .text.bno055_read_accel_xyz:000000000000007c $d
     /tmp/cc9kYR4Z.s:1780   .text.bno055_read_mag_x:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1786   .text.bno055_read_mag_x:0000000000000000 bno055_read_mag_x
     /tmp/cc9kYR4Z.s:1895   .text.bno055_read_mag_x:0000000000000058 $d
     /tmp/cc9kYR4Z.s:1900   .text.bno055_read_mag_y:0000000000000000 $t
     /tmp/cc9kYR4Z.s:1906   .text.bno055_read_mag_y:0000000000000000 bno055_read_mag_y
     /tmp/cc9kYR4Z.s:2015   .text.bno055_read_mag_y:0000000000000058 $d
     /tmp/cc9kYR4Z.s:2020   .text.bno055_read_mag_z:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2026   .text.bno055_read_mag_z:0000000000000000 bno055_read_mag_z
     /tmp/cc9kYR4Z.s:2135   .text.bno055_read_mag_z:0000000000000058 $d
     /tmp/cc9kYR4Z.s:2140   .text.bno055_read_mag_xyz:0000000000000000 $t
ARM GAS  /tmp/cc9kYR4Z.s 			page 1134


     /tmp/cc9kYR4Z.s:2146   .text.bno055_read_mag_xyz:0000000000000000 bno055_read_mag_xyz
     /tmp/cc9kYR4Z.s:2277   .text.bno055_read_mag_xyz:000000000000007c $d
     /tmp/cc9kYR4Z.s:2283   .text.bno055_read_gyro_x:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2289   .text.bno055_read_gyro_x:0000000000000000 bno055_read_gyro_x
     /tmp/cc9kYR4Z.s:2398   .text.bno055_read_gyro_x:0000000000000058 $d
     /tmp/cc9kYR4Z.s:2403   .text.bno055_read_gyro_y:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2409   .text.bno055_read_gyro_y:0000000000000000 bno055_read_gyro_y
     /tmp/cc9kYR4Z.s:2518   .text.bno055_read_gyro_y:0000000000000058 $d
     /tmp/cc9kYR4Z.s:2523   .text.bno055_read_gyro_z:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2529   .text.bno055_read_gyro_z:0000000000000000 bno055_read_gyro_z
     /tmp/cc9kYR4Z.s:2638   .text.bno055_read_gyro_z:0000000000000058 $d
     /tmp/cc9kYR4Z.s:2643   .text.bno055_read_gyro_xyz:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2649   .text.bno055_read_gyro_xyz:0000000000000000 bno055_read_gyro_xyz
     /tmp/cc9kYR4Z.s:2780   .text.bno055_read_gyro_xyz:000000000000007c $d
     /tmp/cc9kYR4Z.s:2786   .text.bno055_read_euler_h:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2792   .text.bno055_read_euler_h:0000000000000000 bno055_read_euler_h
     /tmp/cc9kYR4Z.s:2901   .text.bno055_read_euler_h:0000000000000058 $d
     /tmp/cc9kYR4Z.s:2906   .text.bno055_read_euler_r:0000000000000000 $t
     /tmp/cc9kYR4Z.s:2912   .text.bno055_read_euler_r:0000000000000000 bno055_read_euler_r
     /tmp/cc9kYR4Z.s:3021   .text.bno055_read_euler_r:0000000000000058 $d
     /tmp/cc9kYR4Z.s:3026   .text.bno055_read_euler_p:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3032   .text.bno055_read_euler_p:0000000000000000 bno055_read_euler_p
     /tmp/cc9kYR4Z.s:3141   .text.bno055_read_euler_p:0000000000000058 $d
     /tmp/cc9kYR4Z.s:3146   .text.bno055_read_euler_hrp:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3152   .text.bno055_read_euler_hrp:0000000000000000 bno055_read_euler_hrp
     /tmp/cc9kYR4Z.s:3283   .text.bno055_read_euler_hrp:000000000000007c $d
     /tmp/cc9kYR4Z.s:3289   .text.bno055_read_quaternion_w:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3295   .text.bno055_read_quaternion_w:0000000000000000 bno055_read_quaternion_w
     /tmp/cc9kYR4Z.s:3404   .text.bno055_read_quaternion_w:0000000000000058 $d
     /tmp/cc9kYR4Z.s:3409   .text.bno055_read_quaternion_x:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3415   .text.bno055_read_quaternion_x:0000000000000000 bno055_read_quaternion_x
     /tmp/cc9kYR4Z.s:3524   .text.bno055_read_quaternion_x:0000000000000058 $d
     /tmp/cc9kYR4Z.s:3529   .text.bno055_read_quaternion_y:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3535   .text.bno055_read_quaternion_y:0000000000000000 bno055_read_quaternion_y
     /tmp/cc9kYR4Z.s:3644   .text.bno055_read_quaternion_y:0000000000000058 $d
     /tmp/cc9kYR4Z.s:3649   .text.bno055_read_quaternion_z:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3655   .text.bno055_read_quaternion_z:0000000000000000 bno055_read_quaternion_z
     /tmp/cc9kYR4Z.s:3764   .text.bno055_read_quaternion_z:0000000000000058 $d
     /tmp/cc9kYR4Z.s:3769   .text.bno055_read_quaternion_wxyz:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3775   .text.bno055_read_quaternion_wxyz:0000000000000000 bno055_read_quaternion_wxyz
     /tmp/cc9kYR4Z.s:3918   .text.bno055_read_quaternion_wxyz:000000000000008c $d
     /tmp/cc9kYR4Z.s:3924   .text.bno055_read_linear_accel_x:0000000000000000 $t
     /tmp/cc9kYR4Z.s:3930   .text.bno055_read_linear_accel_x:0000000000000000 bno055_read_linear_accel_x
     /tmp/cc9kYR4Z.s:4039   .text.bno055_read_linear_accel_x:0000000000000058 $d
     /tmp/cc9kYR4Z.s:4044   .text.bno055_read_linear_accel_y:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4050   .text.bno055_read_linear_accel_y:0000000000000000 bno055_read_linear_accel_y
     /tmp/cc9kYR4Z.s:4159   .text.bno055_read_linear_accel_y:0000000000000058 $d
     /tmp/cc9kYR4Z.s:4164   .text.bno055_read_linear_accel_z:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4170   .text.bno055_read_linear_accel_z:0000000000000000 bno055_read_linear_accel_z
     /tmp/cc9kYR4Z.s:4279   .text.bno055_read_linear_accel_z:0000000000000058 $d
     /tmp/cc9kYR4Z.s:4284   .text.bno055_read_linear_accel_xyz:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4290   .text.bno055_read_linear_accel_xyz:0000000000000000 bno055_read_linear_accel_xyz
     /tmp/cc9kYR4Z.s:4421   .text.bno055_read_linear_accel_xyz:000000000000007c $d
     /tmp/cc9kYR4Z.s:4427   .text.bno055_read_gravity_x:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4433   .text.bno055_read_gravity_x:0000000000000000 bno055_read_gravity_x
     /tmp/cc9kYR4Z.s:4542   .text.bno055_read_gravity_x:0000000000000058 $d
     /tmp/cc9kYR4Z.s:4547   .text.bno055_read_gravity_y:0000000000000000 $t
ARM GAS  /tmp/cc9kYR4Z.s 			page 1135


     /tmp/cc9kYR4Z.s:4553   .text.bno055_read_gravity_y:0000000000000000 bno055_read_gravity_y
     /tmp/cc9kYR4Z.s:4662   .text.bno055_read_gravity_y:0000000000000058 $d
     /tmp/cc9kYR4Z.s:4667   .text.bno055_read_gravity_z:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4673   .text.bno055_read_gravity_z:0000000000000000 bno055_read_gravity_z
     /tmp/cc9kYR4Z.s:4782   .text.bno055_read_gravity_z:0000000000000058 $d
     /tmp/cc9kYR4Z.s:4787   .text.bno055_read_gravity_xyz:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4793   .text.bno055_read_gravity_xyz:0000000000000000 bno055_read_gravity_xyz
     /tmp/cc9kYR4Z.s:4924   .text.bno055_read_gravity_xyz:000000000000007c $d
     /tmp/cc9kYR4Z.s:4930   .text.bno055_read_temp_data:0000000000000000 $t
     /tmp/cc9kYR4Z.s:4936   .text.bno055_read_temp_data:0000000000000000 bno055_read_temp_data
     /tmp/cc9kYR4Z.s:5039   .text.bno055_read_temp_data:0000000000000054 $d
     /tmp/cc9kYR4Z.s:5047   .text.bno055_convert_float_mag_x_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5053   .text.bno055_convert_float_mag_x_uT:0000000000000000 bno055_convert_float_mag_x_uT
     /tmp/cc9kYR4Z.s:5128   .text.bno055_convert_float_mag_x_uT:000000000000003c $d
     /tmp/cc9kYR4Z.s:5133   .text.bno055_convert_float_mag_y_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5139   .text.bno055_convert_float_mag_y_uT:0000000000000000 bno055_convert_float_mag_y_uT
     /tmp/cc9kYR4Z.s:5214   .text.bno055_convert_float_mag_y_uT:000000000000003c $d
     /tmp/cc9kYR4Z.s:5219   .text.bno055_convert_float_mag_z_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5225   .text.bno055_convert_float_mag_z_uT:0000000000000000 bno055_convert_float_mag_z_uT
     /tmp/cc9kYR4Z.s:5300   .text.bno055_convert_float_mag_z_uT:000000000000003c $d
     /tmp/cc9kYR4Z.s:5305   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5311   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 bno055_convert_float_mag_xyz_uT
     /tmp/cc9kYR4Z.s:5413   .text.bno055_convert_float_mag_xyz_uT:000000000000006c $d
     /tmp/cc9kYR4Z.s:5419   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5425   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 bno055_convert_float_linear_accel_x_msq
     /tmp/cc9kYR4Z.s:5500   .text.bno055_convert_float_linear_accel_x_msq:000000000000003c $d
     /tmp/cc9kYR4Z.s:5505   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5511   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 bno055_convert_float_linear_accel_y_msq
     /tmp/cc9kYR4Z.s:5586   .text.bno055_convert_float_linear_accel_y_msq:000000000000003c $d
     /tmp/cc9kYR4Z.s:5591   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5597   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 bno055_convert_float_linear_accel_z_msq
     /tmp/cc9kYR4Z.s:5672   .text.bno055_convert_float_linear_accel_z_msq:000000000000003c $d
     /tmp/cc9kYR4Z.s:5677   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5683   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 bno055_convert_float_linear_accel_xyz_msq
     /tmp/cc9kYR4Z.s:5785   .text.bno055_convert_float_linear_accel_xyz_msq:000000000000006c $d
     /tmp/cc9kYR4Z.s:5790   .text.bno055_convert_gravity_float_x_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5796   .text.bno055_convert_gravity_float_x_msq:0000000000000000 bno055_convert_gravity_float_x_msq
     /tmp/cc9kYR4Z.s:5871   .text.bno055_convert_gravity_float_x_msq:000000000000003c $d
     /tmp/cc9kYR4Z.s:5876   .text.bno055_convert_gravity_float_y_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5882   .text.bno055_convert_gravity_float_y_msq:0000000000000000 bno055_convert_gravity_float_y_msq
     /tmp/cc9kYR4Z.s:5957   .text.bno055_convert_gravity_float_y_msq:000000000000003c $d
     /tmp/cc9kYR4Z.s:5962   .text.bno055_convert_gravity_float_z_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:5968   .text.bno055_convert_gravity_float_z_msq:0000000000000000 bno055_convert_gravity_float_z_msq
     /tmp/cc9kYR4Z.s:6043   .text.bno055_convert_gravity_float_z_msq:000000000000003c $d
     /tmp/cc9kYR4Z.s:6048   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6054   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 bno055_convert_float_gravity_xyz_msq
     /tmp/cc9kYR4Z.s:6156   .text.bno055_convert_float_gravity_xyz_msq:000000000000006c $d
     /tmp/cc9kYR4Z.s:6161   .text.bno055_convert_double_mag_x_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6167   .text.bno055_convert_double_mag_x_uT:0000000000000000 bno055_convert_double_mag_x_uT
     /tmp/cc9kYR4Z.s:6240   .text.bno055_convert_double_mag_x_uT:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6245   .text.bno055_convert_double_mag_y_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6251   .text.bno055_convert_double_mag_y_uT:0000000000000000 bno055_convert_double_mag_y_uT
     /tmp/cc9kYR4Z.s:6324   .text.bno055_convert_double_mag_y_uT:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6329   .text.bno055_convert_double_mag_z_uT:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6335   .text.bno055_convert_double_mag_z_uT:0000000000000000 bno055_convert_double_mag_z_uT
     /tmp/cc9kYR4Z.s:6408   .text.bno055_convert_double_mag_z_uT:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6413   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 $t
ARM GAS  /tmp/cc9kYR4Z.s 			page 1136


     /tmp/cc9kYR4Z.s:6419   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 bno055_convert_double_mag_xyz_uT
     /tmp/cc9kYR4Z.s:6512   .text.bno055_convert_double_mag_xyz_uT:0000000000000068 $d
     /tmp/cc9kYR4Z.s:6517   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6523   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 bno055_convert_double_linear_accel_x_msq
     /tmp/cc9kYR4Z.s:6596   .text.bno055_convert_double_linear_accel_x_msq:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6601   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6607   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 bno055_convert_double_linear_accel_y_msq
     /tmp/cc9kYR4Z.s:6680   .text.bno055_convert_double_linear_accel_y_msq:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6685   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6691   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 bno055_convert_double_linear_accel_z_msq
     /tmp/cc9kYR4Z.s:6764   .text.bno055_convert_double_linear_accel_z_msq:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6769   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6775   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 bno055_convert_double_linear_accel_xyz_msq
     /tmp/cc9kYR4Z.s:6868   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000068 $d
     /tmp/cc9kYR4Z.s:6873   .text.bno055_convert_gravity_double_x_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6879   .text.bno055_convert_gravity_double_x_msq:0000000000000000 bno055_convert_gravity_double_x_msq
     /tmp/cc9kYR4Z.s:6952   .text.bno055_convert_gravity_double_x_msq:0000000000000038 $d
     /tmp/cc9kYR4Z.s:6957   .text.bno055_convert_gravity_double_y_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:6963   .text.bno055_convert_gravity_double_y_msq:0000000000000000 bno055_convert_gravity_double_y_msq
     /tmp/cc9kYR4Z.s:7040   .text.bno055_convert_gravity_double_y_msq:0000000000000038 $d
     /tmp/cc9kYR4Z.s:7045   .text.bno055_convert_gravity_double_z_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7051   .text.bno055_convert_gravity_double_z_msq:0000000000000000 bno055_convert_gravity_double_z_msq
     /tmp/cc9kYR4Z.s:7128   .text.bno055_convert_gravity_double_z_msq:0000000000000038 $d
     /tmp/cc9kYR4Z.s:7133   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7139   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 bno055_convert_double_gravity_xyz_msq
     /tmp/cc9kYR4Z.s:7236   .text.bno055_convert_double_gravity_xyz_msq:0000000000000068 $d
     /tmp/cc9kYR4Z.s:7241   .text.bno055_get_mag_calib_stat:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7247   .text.bno055_get_mag_calib_stat:0000000000000000 bno055_get_mag_calib_stat
     /tmp/cc9kYR4Z.s:7351   .text.bno055_get_mag_calib_stat:0000000000000058 $d
     /tmp/cc9kYR4Z.s:7356   .text.bno055_get_accel_calib_stat:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7362   .text.bno055_get_accel_calib_stat:0000000000000000 bno055_get_accel_calib_stat
     /tmp/cc9kYR4Z.s:7466   .text.bno055_get_accel_calib_stat:0000000000000058 $d
     /tmp/cc9kYR4Z.s:7471   .text.bno055_get_gyro_calib_stat:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7477   .text.bno055_get_gyro_calib_stat:0000000000000000 bno055_get_gyro_calib_stat
     /tmp/cc9kYR4Z.s:7581   .text.bno055_get_gyro_calib_stat:0000000000000058 $d
     /tmp/cc9kYR4Z.s:7586   .text.bno055_get_sys_calib_stat:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7592   .text.bno055_get_sys_calib_stat:0000000000000000 bno055_get_sys_calib_stat
     /tmp/cc9kYR4Z.s:7696   .text.bno055_get_sys_calib_stat:0000000000000054 $d
     /tmp/cc9kYR4Z.s:7701   .text.bno055_get_selftest_accel:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7707   .text.bno055_get_selftest_accel:0000000000000000 bno055_get_selftest_accel
     /tmp/cc9kYR4Z.s:7811   .text.bno055_get_selftest_accel:0000000000000058 $d
     /tmp/cc9kYR4Z.s:7816   .text.bno055_get_selftest_mag:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7822   .text.bno055_get_selftest_mag:0000000000000000 bno055_get_selftest_mag
     /tmp/cc9kYR4Z.s:7926   .text.bno055_get_selftest_mag:0000000000000058 $d
     /tmp/cc9kYR4Z.s:7931   .text.bno055_get_selftest_gyro:0000000000000000 $t
     /tmp/cc9kYR4Z.s:7937   .text.bno055_get_selftest_gyro:0000000000000000 bno055_get_selftest_gyro
     /tmp/cc9kYR4Z.s:8041   .text.bno055_get_selftest_gyro:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8046   .text.bno055_get_selftest_mcu:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8052   .text.bno055_get_selftest_mcu:0000000000000000 bno055_get_selftest_mcu
     /tmp/cc9kYR4Z.s:8156   .text.bno055_get_selftest_mcu:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8161   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8167   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 bno055_get_intr_stat_gyro_any_motion
     /tmp/cc9kYR4Z.s:8271   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8276   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8282   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 bno055_get_intr_stat_gyro_highrate
     /tmp/cc9kYR4Z.s:8386   .text.bno055_get_intr_stat_gyro_highrate:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8391   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 $t
ARM GAS  /tmp/cc9kYR4Z.s 			page 1137


     /tmp/cc9kYR4Z.s:8397   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 bno055_get_intr_stat_accel_high_g
     /tmp/cc9kYR4Z.s:8501   .text.bno055_get_intr_stat_accel_high_g:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8506   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8512   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 bno055_get_intr_stat_accel_any_motion
     /tmp/cc9kYR4Z.s:8616   .text.bno055_get_intr_stat_accel_any_motion:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8621   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8627   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 bno055_get_intr_stat_accel_no_motion
     /tmp/cc9kYR4Z.s:8731   .text.bno055_get_intr_stat_accel_no_motion:0000000000000054 $d
     /tmp/cc9kYR4Z.s:8736   .text.bno055_get_stat_main_clk:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8742   .text.bno055_get_stat_main_clk:0000000000000000 bno055_get_stat_main_clk
     /tmp/cc9kYR4Z.s:8846   .text.bno055_get_stat_main_clk:0000000000000058 $d
     /tmp/cc9kYR4Z.s:8851   .text.bno055_get_sys_stat_code:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8857   .text.bno055_get_sys_stat_code:0000000000000000 bno055_get_sys_stat_code
     /tmp/cc9kYR4Z.s:8960   .text.bno055_get_sys_stat_code:0000000000000054 $d
     /tmp/cc9kYR4Z.s:8965   .text.bno055_get_sys_error_code:0000000000000000 $t
     /tmp/cc9kYR4Z.s:8971   .text.bno055_get_sys_error_code:0000000000000000 bno055_get_sys_error_code
     /tmp/cc9kYR4Z.s:9074   .text.bno055_get_sys_error_code:0000000000000054 $d
     /tmp/cc9kYR4Z.s:9079   .text.bno055_get_accel_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9085   .text.bno055_get_accel_unit:0000000000000000 bno055_get_accel_unit
     /tmp/cc9kYR4Z.s:9189   .text.bno055_get_accel_unit:0000000000000058 $d
     /tmp/cc9kYR4Z.s:9194   .text.bno055_get_gyro_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9200   .text.bno055_get_gyro_unit:0000000000000000 bno055_get_gyro_unit
     /tmp/cc9kYR4Z.s:9304   .text.bno055_get_gyro_unit:0000000000000058 $d
     /tmp/cc9kYR4Z.s:9309   .text.bno055_get_euler_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9315   .text.bno055_get_euler_unit:0000000000000000 bno055_get_euler_unit
     /tmp/cc9kYR4Z.s:9419   .text.bno055_get_euler_unit:0000000000000058 $d
     /tmp/cc9kYR4Z.s:9424   .text.bno055_get_tilt_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9430   .text.bno055_get_tilt_unit:0000000000000000 bno055_get_tilt_unit
     /tmp/cc9kYR4Z.s:9534   .text.bno055_get_tilt_unit:0000000000000058 $d
     /tmp/cc9kYR4Z.s:9539   .text.bno055_get_temp_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9545   .text.bno055_get_temp_unit:0000000000000000 bno055_get_temp_unit
     /tmp/cc9kYR4Z.s:9649   .text.bno055_get_temp_unit:0000000000000058 $d
     /tmp/cc9kYR4Z.s:9654   .text.bno055_get_data_output_format:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9660   .text.bno055_get_data_output_format:0000000000000000 bno055_get_data_output_format
     /tmp/cc9kYR4Z.s:9764   .text.bno055_get_data_output_format:0000000000000054 $d
     /tmp/cc9kYR4Z.s:9769   .text.bno055_get_operation_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9775   .text.bno055_get_operation_mode:0000000000000000 bno055_get_operation_mode
     /tmp/cc9kYR4Z.s:9879   .text.bno055_get_operation_mode:0000000000000058 $d
     /tmp/cc9kYR4Z.s:9884   .text.bno055_set_operation_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:9890   .text.bno055_set_operation_mode:0000000000000000 bno055_set_operation_mode
     /tmp/cc9kYR4Z.s:10131  .text.bno055_set_operation_mode:000000000000011c $d
     /tmp/cc9kYR4Z.s:10136  .text.bno055_set_accel_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10142  .text.bno055_set_accel_unit:0000000000000000 bno055_set_accel_unit
     /tmp/cc9kYR4Z.s:10307  .text.bno055_set_accel_unit:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:10312  .text.bno055_convert_float_accel_x_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10318  .text.bno055_convert_float_accel_x_msq:0000000000000000 bno055_convert_float_accel_x_msq
     /tmp/cc9kYR4Z.s:10447  .text.bno055_convert_float_accel_x_msq:0000000000000074 $d
     /tmp/cc9kYR4Z.s:10453  .text.bno055_convert_float_accel_x_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10459  .text.bno055_convert_float_accel_x_mg:0000000000000000 bno055_convert_float_accel_x_mg
     /tmp/cc9kYR4Z.s:10577  .text.bno055_convert_float_accel_y_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10583  .text.bno055_convert_float_accel_y_msq:0000000000000000 bno055_convert_float_accel_y_msq
     /tmp/cc9kYR4Z.s:10712  .text.bno055_convert_float_accel_y_msq:0000000000000074 $d
     /tmp/cc9kYR4Z.s:10718  .text.bno055_convert_float_accel_y_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10724  .text.bno055_convert_float_accel_y_mg:0000000000000000 bno055_convert_float_accel_y_mg
     /tmp/cc9kYR4Z.s:10842  .text.bno055_convert_float_accel_z_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10848  .text.bno055_convert_float_accel_z_msq:0000000000000000 bno055_convert_float_accel_z_msq
     /tmp/cc9kYR4Z.s:10977  .text.bno055_convert_float_accel_z_msq:0000000000000074 $d
ARM GAS  /tmp/cc9kYR4Z.s 			page 1138


     /tmp/cc9kYR4Z.s:10983  .text.bno055_convert_float_accel_z_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:10989  .text.bno055_convert_float_accel_z_mg:0000000000000000 bno055_convert_float_accel_z_mg
     /tmp/cc9kYR4Z.s:11107  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11113  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 bno055_convert_float_accel_xyz_msq
     /tmp/cc9kYR4Z.s:11260  .text.bno055_convert_float_accel_xyz_msq:000000000000009c $d
     /tmp/cc9kYR4Z.s:11265  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11271  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 bno055_convert_float_accel_xyz_mg
     /tmp/cc9kYR4Z.s:11408  .text.bno055_convert_double_accel_x_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11414  .text.bno055_convert_double_accel_x_msq:0000000000000000 bno055_convert_double_accel_x_msq
     /tmp/cc9kYR4Z.s:11532  .text.bno055_convert_double_accel_x_msq:0000000000000068 $d
     /tmp/cc9kYR4Z.s:11537  .text.bno055_convert_double_accel_x_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11543  .text.bno055_convert_double_accel_x_mg:0000000000000000 bno055_convert_double_accel_x_mg
     /tmp/cc9kYR4Z.s:11658  .text.bno055_convert_double_accel_y_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11664  .text.bno055_convert_double_accel_y_msq:0000000000000000 bno055_convert_double_accel_y_msq
     /tmp/cc9kYR4Z.s:11782  .text.bno055_convert_double_accel_y_msq:0000000000000068 $d
     /tmp/cc9kYR4Z.s:11787  .text.bno055_convert_double_accel_y_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11793  .text.bno055_convert_double_accel_y_mg:0000000000000000 bno055_convert_double_accel_y_mg
     /tmp/cc9kYR4Z.s:11908  .text.bno055_convert_double_accel_z_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:11914  .text.bno055_convert_double_accel_z_msq:0000000000000000 bno055_convert_double_accel_z_msq
     /tmp/cc9kYR4Z.s:12032  .text.bno055_convert_double_accel_z_msq:0000000000000068 $d
     /tmp/cc9kYR4Z.s:12037  .text.bno055_convert_double_accel_z_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12043  .text.bno055_convert_double_accel_z_mg:0000000000000000 bno055_convert_double_accel_z_mg
     /tmp/cc9kYR4Z.s:12158  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12164  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 bno055_convert_double_accel_xyz_msq
     /tmp/cc9kYR4Z.s:12302  .text.bno055_convert_double_accel_xyz_msq:0000000000000094 $d
     /tmp/cc9kYR4Z.s:12307  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12313  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 bno055_convert_double_accel_xyz_mg
     /tmp/cc9kYR4Z.s:12441  .text.bno055_set_gyro_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12447  .text.bno055_set_gyro_unit:0000000000000000 bno055_set_gyro_unit
     /tmp/cc9kYR4Z.s:12613  .text.bno055_set_gyro_unit:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:12618  .text.bno055_convert_float_gyro_x_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12624  .text.bno055_convert_float_gyro_x_dps:0000000000000000 bno055_convert_float_gyro_x_dps
     /tmp/cc9kYR4Z.s:12744  .text.bno055_convert_float_gyro_x_dps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:12749  .text.bno055_convert_float_gyro_x_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12755  .text.bno055_convert_float_gyro_x_rps:0000000000000000 bno055_convert_float_gyro_x_rps
     /tmp/cc9kYR4Z.s:12876  .text.bno055_convert_float_gyro_x_rps:000000000000006c $d
     /tmp/cc9kYR4Z.s:12881  .text.bno055_convert_float_gyro_y_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:12887  .text.bno055_convert_float_gyro_y_dps:0000000000000000 bno055_convert_float_gyro_y_dps
     /tmp/cc9kYR4Z.s:13007  .text.bno055_convert_float_gyro_y_dps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:13012  .text.bno055_convert_float_gyro_y_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13018  .text.bno055_convert_float_gyro_y_rps:0000000000000000 bno055_convert_float_gyro_y_rps
     /tmp/cc9kYR4Z.s:13139  .text.bno055_convert_float_gyro_y_rps:000000000000006c $d
     /tmp/cc9kYR4Z.s:13144  .text.bno055_convert_float_gyro_z_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13150  .text.bno055_convert_float_gyro_z_dps:0000000000000000 bno055_convert_float_gyro_z_dps
     /tmp/cc9kYR4Z.s:13270  .text.bno055_convert_float_gyro_z_dps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:13275  .text.bno055_convert_float_gyro_z_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13281  .text.bno055_convert_float_gyro_z_rps:0000000000000000 bno055_convert_float_gyro_z_rps
     /tmp/cc9kYR4Z.s:13402  .text.bno055_convert_float_gyro_z_rps:000000000000006c $d
     /tmp/cc9kYR4Z.s:13407  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13413  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 bno055_convert_float_gyro_xyz_dps
     /tmp/cc9kYR4Z.s:13560  .text.bno055_convert_float_gyro_xyz_dps:000000000000009c $d
     /tmp/cc9kYR4Z.s:13565  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13571  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 bno055_convert_float_gyro_xyz_rps
     /tmp/cc9kYR4Z.s:13719  .text.bno055_convert_float_gyro_xyz_rps:000000000000009c $d
     /tmp/cc9kYR4Z.s:13724  .text.bno055_convert_double_gyro_x_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13730  .text.bno055_convert_double_gyro_x_dps:0000000000000000 bno055_convert_double_gyro_x_dps
     /tmp/cc9kYR4Z.s:13848  .text.bno055_convert_double_gyro_x_dps:0000000000000068 $d
ARM GAS  /tmp/cc9kYR4Z.s 			page 1139


     /tmp/cc9kYR4Z.s:13853  .text.bno055_convert_double_gyro_x_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13859  .text.bno055_convert_double_gyro_x_rps:0000000000000000 bno055_convert_double_gyro_x_rps
     /tmp/cc9kYR4Z.s:13978  .text.bno055_convert_double_gyro_x_rps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:13983  .text.bno055_convert_double_gyro_y_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:13989  .text.bno055_convert_double_gyro_y_dps:0000000000000000 bno055_convert_double_gyro_y_dps
     /tmp/cc9kYR4Z.s:14107  .text.bno055_convert_double_gyro_y_dps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:14112  .text.bno055_convert_double_gyro_y_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14118  .text.bno055_convert_double_gyro_y_rps:0000000000000000 bno055_convert_double_gyro_y_rps
     /tmp/cc9kYR4Z.s:14237  .text.bno055_convert_double_gyro_y_rps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:14242  .text.bno055_convert_double_gyro_z_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14248  .text.bno055_convert_double_gyro_z_dps:0000000000000000 bno055_convert_double_gyro_z_dps
     /tmp/cc9kYR4Z.s:14366  .text.bno055_convert_double_gyro_z_dps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:14371  .text.bno055_convert_double_gyro_z_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14377  .text.bno055_convert_double_gyro_z_rps:0000000000000000 bno055_convert_double_gyro_z_rps
     /tmp/cc9kYR4Z.s:14496  .text.bno055_convert_double_gyro_z_rps:0000000000000068 $d
     /tmp/cc9kYR4Z.s:14501  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14507  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 bno055_convert_double_gyro_xyz_dps
     /tmp/cc9kYR4Z.s:14645  .text.bno055_convert_double_gyro_xyz_dps:0000000000000094 $d
     /tmp/cc9kYR4Z.s:14650  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14656  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 bno055_convert_double_gyro_xyz_rps
     /tmp/cc9kYR4Z.s:14795  .text.bno055_convert_double_gyro_xyz_rps:0000000000000098 $d
     /tmp/cc9kYR4Z.s:14800  .text.bno055_set_euler_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14806  .text.bno055_set_euler_unit:0000000000000000 bno055_set_euler_unit
     /tmp/cc9kYR4Z.s:14972  .text.bno055_set_euler_unit:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:14977  .text.bno055_convert_float_euler_h_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:14983  .text.bno055_convert_float_euler_h_deg:0000000000000000 bno055_convert_float_euler_h_deg
     /tmp/cc9kYR4Z.s:15103  .text.bno055_convert_float_euler_h_deg:0000000000000068 $d
     /tmp/cc9kYR4Z.s:15108  .text.bno055_convert_float_euler_h_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15114  .text.bno055_convert_float_euler_h_rad:0000000000000000 bno055_convert_float_euler_h_rad
     /tmp/cc9kYR4Z.s:15235  .text.bno055_convert_float_euler_h_rad:000000000000006c $d
     /tmp/cc9kYR4Z.s:15240  .text.bno055_convert_float_euler_r_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15246  .text.bno055_convert_float_euler_r_deg:0000000000000000 bno055_convert_float_euler_r_deg
     /tmp/cc9kYR4Z.s:15366  .text.bno055_convert_float_euler_r_deg:0000000000000068 $d
     /tmp/cc9kYR4Z.s:15371  .text.bno055_convert_float_euler_r_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15377  .text.bno055_convert_float_euler_r_rad:0000000000000000 bno055_convert_float_euler_r_rad
     /tmp/cc9kYR4Z.s:15498  .text.bno055_convert_float_euler_r_rad:000000000000006c $d
     /tmp/cc9kYR4Z.s:15503  .text.bno055_convert_float_euler_p_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15509  .text.bno055_convert_float_euler_p_deg:0000000000000000 bno055_convert_float_euler_p_deg
     /tmp/cc9kYR4Z.s:15629  .text.bno055_convert_float_euler_p_deg:0000000000000068 $d
     /tmp/cc9kYR4Z.s:15634  .text.bno055_convert_float_euler_p_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15640  .text.bno055_convert_float_euler_p_rad:0000000000000000 bno055_convert_float_euler_p_rad
     /tmp/cc9kYR4Z.s:15761  .text.bno055_convert_float_euler_p_rad:000000000000006c $d
     /tmp/cc9kYR4Z.s:15766  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15772  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 bno055_convert_float_euler_hpr_deg
     /tmp/cc9kYR4Z.s:15919  .text.bno055_convert_float_euler_hpr_deg:000000000000009c $d
     /tmp/cc9kYR4Z.s:15924  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:15930  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 bno055_convert_float_euler_hpr_rad
     /tmp/cc9kYR4Z.s:16078  .text.bno055_convert_float_euler_hpr_rad:000000000000009c $d
     /tmp/cc9kYR4Z.s:16083  .text.bno055_convert_double_euler_h_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16089  .text.bno055_convert_double_euler_h_deg:0000000000000000 bno055_convert_double_euler_h_deg
     /tmp/cc9kYR4Z.s:16207  .text.bno055_convert_double_euler_h_deg:0000000000000068 $d
     /tmp/cc9kYR4Z.s:16212  .text.bno055_convert_double_euler_h_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16218  .text.bno055_convert_double_euler_h_rad:0000000000000000 bno055_convert_double_euler_h_rad
     /tmp/cc9kYR4Z.s:16337  .text.bno055_convert_double_euler_h_rad:0000000000000068 $d
     /tmp/cc9kYR4Z.s:16342  .text.bno055_convert_double_euler_r_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16348  .text.bno055_convert_double_euler_r_deg:0000000000000000 bno055_convert_double_euler_r_deg
     /tmp/cc9kYR4Z.s:16466  .text.bno055_convert_double_euler_r_deg:0000000000000068 $d
ARM GAS  /tmp/cc9kYR4Z.s 			page 1140


     /tmp/cc9kYR4Z.s:16471  .text.bno055_convert_double_euler_r_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16477  .text.bno055_convert_double_euler_r_rad:0000000000000000 bno055_convert_double_euler_r_rad
     /tmp/cc9kYR4Z.s:16596  .text.bno055_convert_double_euler_r_rad:0000000000000068 $d
     /tmp/cc9kYR4Z.s:16601  .text.bno055_convert_double_euler_p_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16607  .text.bno055_convert_double_euler_p_deg:0000000000000000 bno055_convert_double_euler_p_deg
     /tmp/cc9kYR4Z.s:16725  .text.bno055_convert_double_euler_p_deg:0000000000000068 $d
     /tmp/cc9kYR4Z.s:16730  .text.bno055_convert_double_euler_p_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16736  .text.bno055_convert_double_euler_p_rad:0000000000000000 bno055_convert_double_euler_p_rad
     /tmp/cc9kYR4Z.s:16855  .text.bno055_convert_double_euler_p_rad:0000000000000068 $d
     /tmp/cc9kYR4Z.s:16860  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 $t
     /tmp/cc9kYR4Z.s:16866  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 bno055_convert_double_euler_hpr_deg
     /tmp/cc9kYR4Z.s:17004  .text.bno055_convert_double_euler_hpr_deg:0000000000000094 $d
     /tmp/cc9kYR4Z.s:17009  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17015  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 bno055_convert_double_euler_hpr_rad
     /tmp/cc9kYR4Z.s:17142  .text.bno055_convert_double_euler_hpr_rad:000000000000008c $d
     /tmp/cc9kYR4Z.s:17147  .text.bno055_set_tilt_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17153  .text.bno055_set_tilt_unit:0000000000000000 bno055_set_tilt_unit
     /tmp/cc9kYR4Z.s:17319  .text.bno055_set_tilt_unit:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:17324  .text.bno055_set_temp_unit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17330  .text.bno055_set_temp_unit:0000000000000000 bno055_set_temp_unit
     /tmp/cc9kYR4Z.s:17496  .text.bno055_set_temp_unit:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:17502  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17508  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 bno055_convert_float_temp_fahrenheit
     /tmp/cc9kYR4Z.s:17630  .text.bno055_convert_float_temp_celsius:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17636  .text.bno055_convert_float_temp_celsius:0000000000000000 bno055_convert_float_temp_celsius
     /tmp/cc9kYR4Z.s:17753  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17759  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 bno055_convert_double_temp_fahrenheit
     /tmp/cc9kYR4Z.s:17882  .text.bno055_convert_double_temp_celsius:0000000000000000 $t
     /tmp/cc9kYR4Z.s:17888  .text.bno055_convert_double_temp_celsius:0000000000000000 bno055_convert_double_temp_celsius
     /tmp/cc9kYR4Z.s:18005  .text.bno055_set_data_output_format:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18011  .text.bno055_set_data_output_format:0000000000000000 bno055_set_data_output_format
     /tmp/cc9kYR4Z.s:18174  .text.bno055_set_data_output_format:00000000000000a0 $d
     /tmp/cc9kYR4Z.s:18179  .text.bno055_get_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18185  .text.bno055_get_power_mode:0000000000000000 bno055_get_power_mode
     /tmp/cc9kYR4Z.s:18289  .text.bno055_get_power_mode:0000000000000058 $d
     /tmp/cc9kYR4Z.s:18294  .text.bno055_set_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18300  .text.bno055_set_power_mode:0000000000000000 bno055_set_power_mode
     /tmp/cc9kYR4Z.s:18465  .text.bno055_set_power_mode:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:18470  .text.bno055_get_intr_rst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18476  .text.bno055_get_intr_rst:0000000000000000 bno055_get_intr_rst
     /tmp/cc9kYR4Z.s:18580  .text.bno055_get_intr_rst:0000000000000058 $d
     /tmp/cc9kYR4Z.s:18585  .text.bno055_set_intr_rst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18591  .text.bno055_set_intr_rst:0000000000000000 bno055_set_intr_rst
     /tmp/cc9kYR4Z.s:18720  .text.bno055_set_intr_rst:0000000000000084 $d
     /tmp/cc9kYR4Z.s:18725  .text.bno055_get_clk_src:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18731  .text.bno055_get_clk_src:0000000000000000 bno055_get_clk_src
     /tmp/cc9kYR4Z.s:18835  .text.bno055_get_clk_src:0000000000000054 $d
     /tmp/cc9kYR4Z.s:18840  .text.bno055_set_clk_src:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18846  .text.bno055_set_clk_src:0000000000000000 bno055_set_clk_src
     /tmp/cc9kYR4Z.s:18972  .text.bno055_set_clk_src:000000000000007c $d
     /tmp/cc9kYR4Z.s:18977  .text.bno055_get_sys_rst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:18983  .text.bno055_get_sys_rst:0000000000000000 bno055_get_sys_rst
     /tmp/cc9kYR4Z.s:19087  .text.bno055_get_sys_rst:0000000000000058 $d
     /tmp/cc9kYR4Z.s:19092  .text.bno055_set_sys_rst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:19098  .text.bno055_set_sys_rst:0000000000000000 bno055_set_sys_rst
     /tmp/cc9kYR4Z.s:19222  .text.bno055_set_sys_rst:0000000000000078 $d
     /tmp/cc9kYR4Z.s:19227  .text.bno055_get_selftest:0000000000000000 $t
ARM GAS  /tmp/cc9kYR4Z.s 			page 1141


     /tmp/cc9kYR4Z.s:19233  .text.bno055_get_selftest:0000000000000000 bno055_get_selftest
     /tmp/cc9kYR4Z.s:19337  .text.bno055_get_selftest:0000000000000058 $d
     /tmp/cc9kYR4Z.s:19342  .text.bno055_set_selftest:0000000000000000 $t
     /tmp/cc9kYR4Z.s:19348  .text.bno055_set_selftest:0000000000000000 bno055_set_selftest
     /tmp/cc9kYR4Z.s:19513  .text.bno055_set_selftest:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:19518  .text.bno055_get_temp_source:0000000000000000 $t
     /tmp/cc9kYR4Z.s:19524  .text.bno055_get_temp_source:0000000000000000 bno055_get_temp_source
     /tmp/cc9kYR4Z.s:19628  .text.bno055_get_temp_source:0000000000000058 $d
     /tmp/cc9kYR4Z.s:19633  .text.bno055_set_temp_source:0000000000000000 $t
     /tmp/cc9kYR4Z.s:19639  .text.bno055_set_temp_source:0000000000000000 bno055_set_temp_source
     /tmp/cc9kYR4Z.s:19804  .text.bno055_set_temp_source:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:19809  .text.bno055_get_axis_remap_value:0000000000000000 $t
     /tmp/cc9kYR4Z.s:19815  .text.bno055_get_axis_remap_value:0000000000000000 bno055_get_axis_remap_value
     /tmp/cc9kYR4Z.s:19919  .text.bno055_get_axis_remap_value:0000000000000058 $d
     /tmp/cc9kYR4Z.s:19924  .text.bno055_set_axis_remap_value:0000000000000000 $t
     /tmp/cc9kYR4Z.s:19930  .text.bno055_set_axis_remap_value:0000000000000000 bno055_set_axis_remap_value
     /tmp/cc9kYR4Z.s:20154  .text.bno055_set_axis_remap_value:0000000000000100 $d
     /tmp/cc9kYR4Z.s:20160  .text.bno055_get_remap_x_sign:0000000000000000 $t
     /tmp/cc9kYR4Z.s:20166  .text.bno055_get_remap_x_sign:0000000000000000 bno055_get_remap_x_sign
     /tmp/cc9kYR4Z.s:20270  .text.bno055_get_remap_x_sign:0000000000000058 $d
     /tmp/cc9kYR4Z.s:20275  .text.bno055_set_remap_x_sign:0000000000000000 $t
     /tmp/cc9kYR4Z.s:20281  .text.bno055_set_remap_x_sign:0000000000000000 bno055_set_remap_x_sign
     /tmp/cc9kYR4Z.s:20447  .text.bno055_set_remap_x_sign:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:20452  .text.bno055_get_remap_y_sign:0000000000000000 $t
     /tmp/cc9kYR4Z.s:20458  .text.bno055_get_remap_y_sign:0000000000000000 bno055_get_remap_y_sign
     /tmp/cc9kYR4Z.s:20562  .text.bno055_get_remap_y_sign:0000000000000058 $d
     /tmp/cc9kYR4Z.s:20567  .text.bno055_set_remap_y_sign:0000000000000000 $t
     /tmp/cc9kYR4Z.s:20573  .text.bno055_set_remap_y_sign:0000000000000000 bno055_set_remap_y_sign
     /tmp/cc9kYR4Z.s:20739  .text.bno055_set_remap_y_sign:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:20744  .text.bno055_get_remap_z_sign:0000000000000000 $t
     /tmp/cc9kYR4Z.s:20750  .text.bno055_get_remap_z_sign:0000000000000000 bno055_get_remap_z_sign
     /tmp/cc9kYR4Z.s:20854  .text.bno055_get_remap_z_sign:0000000000000058 $d
     /tmp/cc9kYR4Z.s:20859  .text.bno055_set_remap_z_sign:0000000000000000 $t
     /tmp/cc9kYR4Z.s:20865  .text.bno055_set_remap_z_sign:0000000000000000 bno055_set_remap_z_sign
     /tmp/cc9kYR4Z.s:21030  .text.bno055_set_remap_z_sign:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:21035  .text.bno055_read_sic_matrix:0000000000000000 $t
     /tmp/cc9kYR4Z.s:21041  .text.bno055_read_sic_matrix:0000000000000000 bno055_read_sic_matrix
     /tmp/cc9kYR4Z.s:21254  .text.bno055_read_sic_matrix:00000000000000e4 $d
     /tmp/cc9kYR4Z.s:21260  .text.bno055_write_sic_matrix:0000000000000000 $t
     /tmp/cc9kYR4Z.s:21266  .text.bno055_write_sic_matrix:0000000000000000 bno055_write_sic_matrix
     /tmp/cc9kYR4Z.s:21860  .text.bno055_write_sic_matrix:00000000000002ac $d
     /tmp/cc9kYR4Z.s:21864  .text.bno055_write_sic_matrix:00000000000002b0 $t
     /tmp/cc9kYR4Z.s:22313  .text.bno055_write_sic_matrix:00000000000004ac $d
     /tmp/cc9kYR4Z.s:22318  .text.bno055_read_accel_offset:0000000000000000 $t
     /tmp/cc9kYR4Z.s:22324  .text.bno055_read_accel_offset:0000000000000000 bno055_read_accel_offset
     /tmp/cc9kYR4Z.s:22510  .text.bno055_read_accel_offset:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:22516  .text.bno055_write_accel_offset:0000000000000000 $t
     /tmp/cc9kYR4Z.s:22522  .text.bno055_write_accel_offset:0000000000000000 bno055_write_accel_offset
     /tmp/cc9kYR4Z.s:23049  .text.bno055_write_accel_offset:0000000000000240 $d
     /tmp/cc9kYR4Z.s:23054  .text.bno055_read_mag_offset:0000000000000000 $t
     /tmp/cc9kYR4Z.s:23060  .text.bno055_read_mag_offset:0000000000000000 bno055_read_mag_offset
     /tmp/cc9kYR4Z.s:23246  .text.bno055_read_mag_offset:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:23252  .text.bno055_write_mag_offset:0000000000000000 $t
     /tmp/cc9kYR4Z.s:23258  .text.bno055_write_mag_offset:0000000000000000 bno055_write_mag_offset
     /tmp/cc9kYR4Z.s:23789  .text.bno055_write_mag_offset:000000000000024c $d
     /tmp/cc9kYR4Z.s:23794  .text.bno055_read_gyro_offset:0000000000000000 $t
     /tmp/cc9kYR4Z.s:23800  .text.bno055_read_gyro_offset:0000000000000000 bno055_read_gyro_offset
ARM GAS  /tmp/cc9kYR4Z.s 			page 1142


     /tmp/cc9kYR4Z.s:23941  .text.bno055_read_gyro_offset:0000000000000084 $d
     /tmp/cc9kYR4Z.s:23947  .text.bno055_write_gyro_offset:0000000000000000 $t
     /tmp/cc9kYR4Z.s:23953  .text.bno055_write_gyro_offset:0000000000000000 bno055_write_gyro_offset
     /tmp/cc9kYR4Z.s:24382  .text.bno055_write_gyro_offset:00000000000001d4 $d
     /tmp/cc9kYR4Z.s:24387  .text.bno055_get_accel_range:0000000000000000 $t
     /tmp/cc9kYR4Z.s:24393  .text.bno055_get_accel_range:0000000000000000 bno055_get_accel_range
     /tmp/cc9kYR4Z.s:24499  .text.bno055_get_accel_range:000000000000005c $d
     /tmp/cc9kYR4Z.s:24504  .text.bno055_set_accel_range:0000000000000000 $t
     /tmp/cc9kYR4Z.s:24510  .text.bno055_set_accel_range:0000000000000000 bno055_set_accel_range
     /tmp/cc9kYR4Z.s:24705  .text.bno055_set_accel_range:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:24710  .text.bno055_get_accel_bw:0000000000000000 $t
     /tmp/cc9kYR4Z.s:24716  .text.bno055_get_accel_bw:0000000000000000 bno055_get_accel_bw
     /tmp/cc9kYR4Z.s:24822  .text.bno055_get_accel_bw:000000000000005c $d
     /tmp/cc9kYR4Z.s:24827  .text.bno055_set_accel_bw:0000000000000000 $t
     /tmp/cc9kYR4Z.s:24833  .text.bno055_set_accel_bw:0000000000000000 bno055_set_accel_bw
     /tmp/cc9kYR4Z.s:25029  .text.bno055_set_accel_bw:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:25034  .text.bno055_get_accel_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:25040  .text.bno055_get_accel_power_mode:0000000000000000 bno055_get_accel_power_mode
     /tmp/cc9kYR4Z.s:25146  .text.bno055_get_accel_power_mode:0000000000000058 $d
     /tmp/cc9kYR4Z.s:25151  .text.bno055_set_accel_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:25157  .text.bno055_set_accel_power_mode:0000000000000000 bno055_set_accel_power_mode
     /tmp/cc9kYR4Z.s:25349  .text.bno055_set_accel_power_mode:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:25354  .text.bno055_get_mag_data_output_rate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:25360  .text.bno055_get_mag_data_output_rate:0000000000000000 bno055_get_mag_data_output_rate
     /tmp/cc9kYR4Z.s:25466  .text.bno055_get_mag_data_output_rate:000000000000005c $d
     /tmp/cc9kYR4Z.s:25471  .text.bno055_set_mag_data_output_rate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:25477  .text.bno055_set_mag_data_output_rate:0000000000000000 bno055_set_mag_data_output_rate
     /tmp/cc9kYR4Z.s:25671  .text.bno055_set_mag_data_output_rate:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:25676  .text.bno055_get_mag_operation_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:25682  .text.bno055_get_mag_operation_mode:0000000000000000 bno055_get_mag_operation_mode
     /tmp/cc9kYR4Z.s:25788  .text.bno055_get_mag_operation_mode:000000000000005c $d
     /tmp/cc9kYR4Z.s:25793  .text.bno055_set_mag_operation_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:25799  .text.bno055_set_mag_operation_mode:0000000000000000 bno055_set_mag_operation_mode
     /tmp/cc9kYR4Z.s:25994  .text.bno055_set_mag_operation_mode:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:25999  .text.bno055_get_mag_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26005  .text.bno055_get_mag_power_mode:0000000000000000 bno055_get_mag_power_mode
     /tmp/cc9kYR4Z.s:26111  .text.bno055_get_mag_power_mode:000000000000005c $d
     /tmp/cc9kYR4Z.s:26116  .text.bno055_set_mag_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26122  .text.bno055_set_mag_power_mode:0000000000000000 bno055_set_mag_power_mode
     /tmp/cc9kYR4Z.s:26317  .text.bno055_set_mag_power_mode:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:26322  .text.bno055_get_gyro_range:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26328  .text.bno055_get_gyro_range:0000000000000000 bno055_get_gyro_range
     /tmp/cc9kYR4Z.s:26434  .text.bno055_get_gyro_range:000000000000005c $d
     /tmp/cc9kYR4Z.s:26439  .text.bno055_set_gyro_range:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26445  .text.bno055_set_gyro_range:0000000000000000 bno055_set_gyro_range
     /tmp/cc9kYR4Z.s:26639  .text.bno055_set_gyro_range:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:26644  .text.bno055_get_gyro_bw:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26650  .text.bno055_get_gyro_bw:0000000000000000 bno055_get_gyro_bw
     /tmp/cc9kYR4Z.s:26756  .text.bno055_get_gyro_bw:000000000000005c $d
     /tmp/cc9kYR4Z.s:26761  .text.bno055_get_gyro_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26767  .text.bno055_get_gyro_power_mode:0000000000000000 bno055_get_gyro_power_mode
     /tmp/cc9kYR4Z.s:26873  .text.bno055_get_gyro_power_mode:000000000000005c $d
     /tmp/cc9kYR4Z.s:26878  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:26884  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 bno055_get_accel_sleep_tmr_mode
     /tmp/cc9kYR4Z.s:26990  .text.bno055_get_accel_sleep_tmr_mode:000000000000005c $d
     /tmp/cc9kYR4Z.s:26995  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27001  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 bno055_set_accel_sleep_tmr_mode
ARM GAS  /tmp/cc9kYR4Z.s 			page 1143


     /tmp/cc9kYR4Z.s:27196  .text.bno055_set_accel_sleep_tmr_mode:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:27201  .text.bno055_get_accel_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27207  .text.bno055_get_accel_sleep_durn:0000000000000000 bno055_get_accel_sleep_durn
     /tmp/cc9kYR4Z.s:27313  .text.bno055_get_accel_sleep_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:27318  .text.bno055_set_accel_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27324  .text.bno055_set_accel_sleep_durn:0000000000000000 bno055_set_accel_sleep_durn
     /tmp/cc9kYR4Z.s:27520  .text.bno055_set_accel_sleep_durn:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:27525  .text.bno055_get_gyro_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27531  .text.bno055_get_gyro_sleep_durn:0000000000000000 bno055_get_gyro_sleep_durn
     /tmp/cc9kYR4Z.s:27637  .text.bno055_get_gyro_sleep_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:27642  .text.bno055_set_gyro_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27648  .text.bno055_set_gyro_sleep_durn:0000000000000000 bno055_set_gyro_sleep_durn
     /tmp/cc9kYR4Z.s:27842  .text.bno055_set_gyro_sleep_durn:00000000000000c0 $d
     /tmp/cc9kYR4Z.s:27847  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27853  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 bno055_get_gyro_auto_sleep_durn
     /tmp/cc9kYR4Z.s:27959  .text.bno055_get_gyro_auto_sleep_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:27964  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:27970  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 bno055_gyro_set_auto_sleep_durn
     /tmp/cc9kYR4Z.s:28086  .text.bno055_gyro_set_auto_sleep_durn:000000000000006e $d
     /tmp/cc9kYR4Z.s:28094  .text.bno055_gyro_set_auto_sleep_durn:0000000000000076 $t
     /tmp/cc9kYR4Z.s:28261  .text.bno055_gyro_set_auto_sleep_durn:0000000000000120 $d
     /tmp/cc9kYR4Z.s:28266  .text.bno055_set_gyro_bw:0000000000000000 $t
     /tmp/cc9kYR4Z.s:28272  .text.bno055_set_gyro_bw:0000000000000000 bno055_set_gyro_bw
     /tmp/cc9kYR4Z.s:28518  .text.bno055_set_gyro_bw:00000000000000f8 $d
     /tmp/cc9kYR4Z.s:28523  .text.bno055_set_gyro_power_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:28529  .text.bno055_set_gyro_power_mode:0000000000000000 bno055_set_gyro_power_mode
     /tmp/cc9kYR4Z.s:28632  .text.bno055_set_gyro_power_mode:000000000000005e $d
     /tmp/cc9kYR4Z.s:28779  .text.bno055_set_gyro_power_mode:0000000000000100 $d
     /tmp/cc9kYR4Z.s:28784  .text.bno055_get_mag_sleep_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:28790  .text.bno055_get_mag_sleep_mode:0000000000000000 bno055_get_mag_sleep_mode
     /tmp/cc9kYR4Z.s:28896  .text.bno055_get_mag_sleep_mode:000000000000005c $d
     /tmp/cc9kYR4Z.s:28901  .text.bno055_set_mag_sleep_mode:0000000000000000 $t
     /tmp/cc9kYR4Z.s:28907  .text.bno055_set_mag_sleep_mode:0000000000000000 bno055_set_mag_sleep_mode
     /tmp/cc9kYR4Z.s:29089  .text.bno055_set_mag_sleep_mode:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:29094  .text.bno055_get_mag_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29100  .text.bno055_get_mag_sleep_durn:0000000000000000 bno055_get_mag_sleep_durn
     /tmp/cc9kYR4Z.s:29206  .text.bno055_get_mag_sleep_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:29211  .text.bno055_set_mag_sleep_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29217  .text.bno055_set_mag_sleep_durn:0000000000000000 bno055_set_mag_sleep_durn
     /tmp/cc9kYR4Z.s:29401  .text.bno055_set_mag_sleep_durn:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:29406  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29412  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 bno055_get_intr_mask_gyro_any_motion
     /tmp/cc9kYR4Z.s:29518  .text.bno055_get_intr_mask_gyro_any_motion:000000000000005c $d
     /tmp/cc9kYR4Z.s:29523  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29529  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 bno055_set_intr_mask_gyro_any_motion
     /tmp/cc9kYR4Z.s:29660  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000088 $d
     /tmp/cc9kYR4Z.s:29665  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29671  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 bno055_get_intr_mask_gyro_highrate
     /tmp/cc9kYR4Z.s:29777  .text.bno055_get_intr_mask_gyro_highrate:000000000000005c $d
     /tmp/cc9kYR4Z.s:29782  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29788  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 bno055_set_intr_mask_gyro_highrate
     /tmp/cc9kYR4Z.s:29919  .text.bno055_set_intr_mask_gyro_highrate:0000000000000088 $d
     /tmp/cc9kYR4Z.s:29924  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 $t
     /tmp/cc9kYR4Z.s:29930  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 bno055_get_intr_mask_accel_high_g
     /tmp/cc9kYR4Z.s:30036  .text.bno055_get_intr_mask_accel_high_g:000000000000005c $d
     /tmp/cc9kYR4Z.s:30041  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30047  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 bno055_set_intr_mask_accel_high_g
ARM GAS  /tmp/cc9kYR4Z.s 			page 1144


     /tmp/cc9kYR4Z.s:30178  .text.bno055_set_intr_mask_accel_high_g:0000000000000088 $d
     /tmp/cc9kYR4Z.s:30183  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30189  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 bno055_get_intr_mask_accel_any_motion
     /tmp/cc9kYR4Z.s:30295  .text.bno055_get_intr_mask_accel_any_motion:000000000000005c $d
     /tmp/cc9kYR4Z.s:30300  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30306  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 bno055_set_intr_mask_accel_any_motion
     /tmp/cc9kYR4Z.s:30437  .text.bno055_set_intr_mask_accel_any_motion:0000000000000088 $d
     /tmp/cc9kYR4Z.s:30442  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30448  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 bno055_get_intr_mask_accel_no_motion
     /tmp/cc9kYR4Z.s:30554  .text.bno055_get_intr_mask_accel_no_motion:0000000000000058 $d
     /tmp/cc9kYR4Z.s:30559  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30565  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 bno055_set_intr_mask_accel_no_motion
     /tmp/cc9kYR4Z.s:30693  .text.bno055_set_intr_mask_accel_no_motion:0000000000000080 $d
     /tmp/cc9kYR4Z.s:30698  .text.bno055_get_intr_gyro_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30704  .text.bno055_get_intr_gyro_any_motion:0000000000000000 bno055_get_intr_gyro_any_motion
     /tmp/cc9kYR4Z.s:30810  .text.bno055_get_intr_gyro_any_motion:000000000000005c $d
     /tmp/cc9kYR4Z.s:30815  .text.bno055_set_intr_gyro_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30821  .text.bno055_set_intr_gyro_any_motion:0000000000000000 bno055_set_intr_gyro_any_motion
     /tmp/cc9kYR4Z.s:30952  .text.bno055_set_intr_gyro_any_motion:0000000000000088 $d
     /tmp/cc9kYR4Z.s:30957  .text.bno055_get_intr_gyro_highrate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:30963  .text.bno055_get_intr_gyro_highrate:0000000000000000 bno055_get_intr_gyro_highrate
     /tmp/cc9kYR4Z.s:31069  .text.bno055_get_intr_gyro_highrate:000000000000005c $d
     /tmp/cc9kYR4Z.s:31074  .text.bno055_set_intr_gyro_highrate:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31080  .text.bno055_set_intr_gyro_highrate:0000000000000000 bno055_set_intr_gyro_highrate
     /tmp/cc9kYR4Z.s:31211  .text.bno055_set_intr_gyro_highrate:0000000000000088 $d
     /tmp/cc9kYR4Z.s:31216  .text.bno055_get_intr_accel_high_g:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31222  .text.bno055_get_intr_accel_high_g:0000000000000000 bno055_get_intr_accel_high_g
     /tmp/cc9kYR4Z.s:31328  .text.bno055_get_intr_accel_high_g:000000000000005c $d
     /tmp/cc9kYR4Z.s:31333  .text.bno055_set_intr_accel_high_g:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31339  .text.bno055_set_intr_accel_high_g:0000000000000000 bno055_set_intr_accel_high_g
     /tmp/cc9kYR4Z.s:31470  .text.bno055_set_intr_accel_high_g:0000000000000088 $d
     /tmp/cc9kYR4Z.s:31475  .text.bno055_get_intr_accel_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31481  .text.bno055_get_intr_accel_any_motion:0000000000000000 bno055_get_intr_accel_any_motion
     /tmp/cc9kYR4Z.s:31587  .text.bno055_get_intr_accel_any_motion:000000000000005c $d
     /tmp/cc9kYR4Z.s:31592  .text.bno055_set_intr_accel_any_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31598  .text.bno055_set_intr_accel_any_motion:0000000000000000 bno055_set_intr_accel_any_motion
     /tmp/cc9kYR4Z.s:31729  .text.bno055_set_intr_accel_any_motion:0000000000000088 $d
     /tmp/cc9kYR4Z.s:31734  .text.bno055_get_intr_accel_no_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31740  .text.bno055_get_intr_accel_no_motion:0000000000000000 bno055_get_intr_accel_no_motion
     /tmp/cc9kYR4Z.s:31846  .text.bno055_get_intr_accel_no_motion:0000000000000058 $d
     /tmp/cc9kYR4Z.s:31851  .text.bno055_set_intr_accel_no_motion:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31857  .text.bno055_set_intr_accel_no_motion:0000000000000000 bno055_set_intr_accel_no_motion
     /tmp/cc9kYR4Z.s:31985  .text.bno055_set_intr_accel_no_motion:0000000000000080 $d
     /tmp/cc9kYR4Z.s:31990  .text.bno055_get_accel_any_motion_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:31996  .text.bno055_get_accel_any_motion_thres:0000000000000000 bno055_get_accel_any_motion_thres
     /tmp/cc9kYR4Z.s:32101  .text.bno055_get_accel_any_motion_thres:0000000000000058 $d
     /tmp/cc9kYR4Z.s:32106  .text.bno055_set_accel_any_motion_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:32112  .text.bno055_set_accel_any_motion_thres:0000000000000000 bno055_set_accel_any_motion_thres
     /tmp/cc9kYR4Z.s:32288  .text.bno055_set_accel_any_motion_thres:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:32293  .text.bno055_get_accel_any_motion_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:32299  .text.bno055_get_accel_any_motion_durn:0000000000000000 bno055_get_accel_any_motion_durn
     /tmp/cc9kYR4Z.s:32405  .text.bno055_get_accel_any_motion_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:32410  .text.bno055_set_accel_any_motion_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:32416  .text.bno055_set_accel_any_motion_durn:0000000000000000 bno055_set_accel_any_motion_durn
     /tmp/cc9kYR4Z.s:32598  .text.bno055_set_accel_any_motion_durn:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:32603  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:32609  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_get_accel_any_motion_no_motion_axis_enable
ARM GAS  /tmp/cc9kYR4Z.s 			page 1145


     /tmp/cc9kYR4Z.s:32772  .text.bno055_get_accel_any_motion_no_motion_axis_enable:00000000000000ac $d
     /tmp/cc9kYR4Z.s:32777  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:32783  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_set_accel_any_motion_no_motion_axis_enable
     /tmp/cc9kYR4Z.s:33076  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000160 $d
     /tmp/cc9kYR4Z.s:33081  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:33087  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 bno055_get_accel_high_g_axis_enable
     /tmp/cc9kYR4Z.s:33250  .text.bno055_get_accel_high_g_axis_enable:00000000000000a8 $d
     /tmp/cc9kYR4Z.s:33255  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:33261  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 bno055_set_accel_high_g_axis_enable
     /tmp/cc9kYR4Z.s:33551  .text.bno055_set_accel_high_g_axis_enable:0000000000000158 $d
     /tmp/cc9kYR4Z.s:33556  .text.bno055_get_accel_high_g_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:33562  .text.bno055_get_accel_high_g_durn:0000000000000000 bno055_get_accel_high_g_durn
     /tmp/cc9kYR4Z.s:33667  .text.bno055_get_accel_high_g_durn:0000000000000058 $d
     /tmp/cc9kYR4Z.s:33672  .text.bno055_set_accel_high_g_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:33678  .text.bno055_set_accel_high_g_durn:0000000000000000 bno055_set_accel_high_g_durn
     /tmp/cc9kYR4Z.s:33855  .text.bno055_set_accel_high_g_durn:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:33860  .text.bno055_get_accel_high_g_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:33866  .text.bno055_get_accel_high_g_thres:0000000000000000 bno055_get_accel_high_g_thres
     /tmp/cc9kYR4Z.s:33971  .text.bno055_get_accel_high_g_thres:0000000000000058 $d
     /tmp/cc9kYR4Z.s:33976  .text.bno055_set_accel_high_g_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:33982  .text.bno055_set_accel_high_g_thres:0000000000000000 bno055_set_accel_high_g_thres
     /tmp/cc9kYR4Z.s:34159  .text.bno055_set_accel_high_g_thres:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:34164  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:34170  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 bno055_get_accel_slow_no_motion_thres
     /tmp/cc9kYR4Z.s:34275  .text.bno055_get_accel_slow_no_motion_thres:0000000000000058 $d
     /tmp/cc9kYR4Z.s:34280  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:34286  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 bno055_set_accel_slow_no_motion_thres
     /tmp/cc9kYR4Z.s:34463  .text.bno055_set_accel_slow_no_motion_thres:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:34468  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:34474  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 bno055_get_accel_slow_no_motion_enable
     /tmp/cc9kYR4Z.s:34580  .text.bno055_get_accel_slow_no_motion_enable:000000000000005c $d
     /tmp/cc9kYR4Z.s:34585  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:34591  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 bno055_set_accel_slow_no_motion_enable
     /tmp/cc9kYR4Z.s:34774  .text.bno055_set_accel_slow_no_motion_enable:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:34779  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:34785  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 bno055_get_accel_slow_no_motion_durn
     /tmp/cc9kYR4Z.s:34891  .text.bno055_get_accel_slow_no_motion_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:34896  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:34902  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 bno055_set_accel_slow_no_motion_durn
     /tmp/cc9kYR4Z.s:35087  .text.bno055_set_accel_slow_no_motion_durn:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:35092  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:35098  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 bno055_get_gyro_any_motion_axis_enable
     /tmp/cc9kYR4Z.s:35261  .text.bno055_get_gyro_any_motion_axis_enable:00000000000000ac $d
     /tmp/cc9kYR4Z.s:35266  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:35272  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 bno055_set_gyro_any_motion_axis_enable
     /tmp/cc9kYR4Z.s:35565  .text.bno055_set_gyro_any_motion_axis_enable:000000000000015c $d
     /tmp/cc9kYR4Z.s:35570  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:35576  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 bno055_get_gyro_highrate_axis_enable
     /tmp/cc9kYR4Z.s:35739  .text.bno055_get_gyro_highrate_axis_enable:00000000000000ac $d
     /tmp/cc9kYR4Z.s:35744  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/cc9kYR4Z.s:35750  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 bno055_set_gyro_highrate_axis_enable
     /tmp/cc9kYR4Z.s:36044  .text.bno055_set_gyro_highrate_axis_enable:0000000000000160 $d
     /tmp/cc9kYR4Z.s:36049  .text.bno055_get_gyro_any_motion_filter:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36055  .text.bno055_get_gyro_any_motion_filter:0000000000000000 bno055_get_gyro_any_motion_filter
     /tmp/cc9kYR4Z.s:36161  .text.bno055_get_gyro_any_motion_filter:000000000000005c $d
     /tmp/cc9kYR4Z.s:36166  .text.bno055_set_gyro_any_motion_filter:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36172  .text.bno055_set_gyro_any_motion_filter:0000000000000000 bno055_set_gyro_any_motion_filter
ARM GAS  /tmp/cc9kYR4Z.s 			page 1146


     /tmp/cc9kYR4Z.s:36357  .text.bno055_set_gyro_any_motion_filter:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:36362  .text.bno055_get_gyro_highrate_filter:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36368  .text.bno055_get_gyro_highrate_filter:0000000000000000 bno055_get_gyro_highrate_filter
     /tmp/cc9kYR4Z.s:36474  .text.bno055_get_gyro_highrate_filter:0000000000000058 $d
     /tmp/cc9kYR4Z.s:36479  .text.bno055_set_gyro_highrate_filter:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36485  .text.bno055_set_gyro_highrate_filter:0000000000000000 bno055_set_gyro_highrate_filter
     /tmp/cc9kYR4Z.s:36665  .text.bno055_set_gyro_highrate_filter:00000000000000b0 $d
     /tmp/cc9kYR4Z.s:36670  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36676  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 bno055_get_gyro_highrate_x_thres
     /tmp/cc9kYR4Z.s:36782  .text.bno055_get_gyro_highrate_x_thres:000000000000005c $d
     /tmp/cc9kYR4Z.s:36787  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36793  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 bno055_set_gyro_highrate_x_thres
     /tmp/cc9kYR4Z.s:36976  .text.bno055_set_gyro_highrate_x_thres:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:36981  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:36987  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 bno055_get_gyro_highrate_x_hyst
     /tmp/cc9kYR4Z.s:37093  .text.bno055_get_gyro_highrate_x_hyst:000000000000005c $d
     /tmp/cc9kYR4Z.s:37098  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:37104  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 bno055_set_gyro_highrate_x_hyst
     /tmp/cc9kYR4Z.s:37289  .text.bno055_set_gyro_highrate_x_hyst:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:37294  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:37300  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 bno055_get_gyro_highrate_x_durn
     /tmp/cc9kYR4Z.s:37405  .text.bno055_get_gyro_highrate_x_durn:0000000000000058 $d
     /tmp/cc9kYR4Z.s:37410  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:37416  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 bno055_set_gyro_highrate_x_durn
     /tmp/cc9kYR4Z.s:37593  .text.bno055_set_gyro_highrate_x_durn:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:37598  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:37604  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 bno055_get_gyro_highrate_y_thres
     /tmp/cc9kYR4Z.s:37710  .text.bno055_get_gyro_highrate_y_thres:000000000000005c $d
     /tmp/cc9kYR4Z.s:37715  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:37721  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 bno055_set_gyro_highrate_y_thres
     /tmp/cc9kYR4Z.s:37904  .text.bno055_set_gyro_highrate_y_thres:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:37909  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:37915  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 bno055_get_gyro_highrate_y_hyst
     /tmp/cc9kYR4Z.s:38021  .text.bno055_get_gyro_highrate_y_hyst:000000000000005c $d
     /tmp/cc9kYR4Z.s:38026  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38032  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 bno055_set_gyro_highrate_y_hyst
     /tmp/cc9kYR4Z.s:38217  .text.bno055_set_gyro_highrate_y_hyst:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:38222  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38228  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 bno055_get_gyro_highrate_y_durn
     /tmp/cc9kYR4Z.s:38333  .text.bno055_get_gyro_highrate_y_durn:0000000000000058 $d
     /tmp/cc9kYR4Z.s:38338  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38344  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 bno055_set_gyro_highrate_y_durn
     /tmp/cc9kYR4Z.s:38521  .text.bno055_set_gyro_highrate_y_durn:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:38526  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38532  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 bno055_get_gyro_highrate_z_thres
     /tmp/cc9kYR4Z.s:38638  .text.bno055_get_gyro_highrate_z_thres:000000000000005c $d
     /tmp/cc9kYR4Z.s:38643  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38649  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 bno055_set_gyro_highrate_z_thres
     /tmp/cc9kYR4Z.s:38832  .text.bno055_set_gyro_highrate_z_thres:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:38837  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38843  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 bno055_get_gyro_highrate_z_hyst
     /tmp/cc9kYR4Z.s:38949  .text.bno055_get_gyro_highrate_z_hyst:000000000000005c $d
     /tmp/cc9kYR4Z.s:38954  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/cc9kYR4Z.s:38960  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 bno055_set_gyro_highrate_z_hyst
     /tmp/cc9kYR4Z.s:39145  .text.bno055_set_gyro_highrate_z_hyst:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:39150  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:39156  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 bno055_get_gyro_highrate_z_durn
ARM GAS  /tmp/cc9kYR4Z.s 			page 1147


     /tmp/cc9kYR4Z.s:39261  .text.bno055_get_gyro_highrate_z_durn:0000000000000058 $d
     /tmp/cc9kYR4Z.s:39266  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:39272  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 bno055_set_gyro_highrate_z_durn
     /tmp/cc9kYR4Z.s:39448  .text.bno055_set_gyro_highrate_z_durn:00000000000000a4 $d
     /tmp/cc9kYR4Z.s:39453  .text.bno055_get_gyro_any_motion_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:39459  .text.bno055_get_gyro_any_motion_thres:0000000000000000 bno055_get_gyro_any_motion_thres
     /tmp/cc9kYR4Z.s:39565  .text.bno055_get_gyro_any_motion_thres:000000000000005c $d
     /tmp/cc9kYR4Z.s:39570  .text.bno055_set_gyro_any_motion_thres:0000000000000000 $t
     /tmp/cc9kYR4Z.s:39576  .text.bno055_set_gyro_any_motion_thres:0000000000000000 bno055_set_gyro_any_motion_thres
     /tmp/cc9kYR4Z.s:39759  .text.bno055_set_gyro_any_motion_thres:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:39764  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/cc9kYR4Z.s:39770  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 bno055_get_gyro_any_motion_slope_samples
     /tmp/cc9kYR4Z.s:39876  .text.bno055_get_gyro_any_motion_slope_samples:000000000000005c $d
     /tmp/cc9kYR4Z.s:39881  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/cc9kYR4Z.s:39887  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 bno055_set_gyro_any_motion_slope_samples
     /tmp/cc9kYR4Z.s:40069  .text.bno055_set_gyro_any_motion_slope_samples:00000000000000b4 $d
     /tmp/cc9kYR4Z.s:40074  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:40080  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 bno055_get_gyro_any_motion_awake_durn
     /tmp/cc9kYR4Z.s:40186  .text.bno055_get_gyro_any_motion_awake_durn:000000000000005c $d
     /tmp/cc9kYR4Z.s:40191  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/cc9kYR4Z.s:40197  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 bno055_set_gyro_any_motion_awake_durn
     /tmp/cc9kYR4Z.s:40381  .text.bno055_set_gyro_any_motion_awake_durn:00000000000000b8 $d
     /tmp/cc9kYR4Z.s:40386  .rodata:0000000000000000 $d
     /tmp/cc9kYR4Z.s:40397  .bss.p_bno055:0000000000000000 $d
     /tmp/cc9kYR4Z.s:40401  .bss.p_bno055:0000000000000000 p_bno055
     /tmp/cc9kYR4Z.s:28633  .text.bno055_set_gyro_power_mode:000000000000005f $d
     /tmp/cc9kYR4Z.s:28633  .text.bno055_set_gyro_power_mode:0000000000000060 $t

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
__aeabi_dadd
