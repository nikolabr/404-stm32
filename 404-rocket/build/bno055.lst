ARM GAS  /tmp/ccO72alg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bno055.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.bno055_init,"ax",%progbits
  20              		.align	1
  21              		.global	bno055_init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	bno055_init:
  27              	.LVL0:
  28              	.LFB0:
  29              		.file 1 "Core/Src/bno055.c"
   1:Core/Src/bno055.c **** /**
   2:Core/Src/bno055.c **** * Copyright (c) 2020 Bosch Sensortec GmbH. All rights reserved.
   3:Core/Src/bno055.c **** *
   4:Core/Src/bno055.c **** * BSD-3-Clause
   5:Core/Src/bno055.c **** *
   6:Core/Src/bno055.c **** * Redistribution and use in source and binary forms, with or without
   7:Core/Src/bno055.c **** * modification, are permitted provided that the following conditions are met:
   8:Core/Src/bno055.c **** *
   9:Core/Src/bno055.c **** * 1. Redistributions of source code must retain the above copyright
  10:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer.
  11:Core/Src/bno055.c **** *
  12:Core/Src/bno055.c **** * 2. Redistributions in binary form must reproduce the above copyright
  13:Core/Src/bno055.c **** *    notice, this list of conditions and the following disclaimer in the
  14:Core/Src/bno055.c **** *    documentation and/or other materials provided with the distribution.
  15:Core/Src/bno055.c **** *
  16:Core/Src/bno055.c **** * 3. Neither the name of the copyright holder nor the names of its
  17:Core/Src/bno055.c **** *    contributors may be used to endorse or promote products derived from
  18:Core/Src/bno055.c **** *    this software without specific prior written permission.
  19:Core/Src/bno055.c **** *
  20:Core/Src/bno055.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  21:Core/Src/bno055.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  22:Core/Src/bno055.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  23:Core/Src/bno055.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  24:Core/Src/bno055.c **** * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  25:Core/Src/bno055.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:Core/Src/bno055.c **** * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Core/Src/bno055.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:Core/Src/bno055.c **** * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:Core/Src/bno055.c **** * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
ARM GAS  /tmp/ccO72alg.s 			page 2


  30:Core/Src/bno055.c **** * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Core/Src/bno055.c **** * POSSIBILITY OF SUCH DAMAGE.
  32:Core/Src/bno055.c **** *
  33:Core/Src/bno055.c **** * @file bno055.c
  34:Core/Src/bno055.c **** * @date 10/01/2020
  35:Core/Src/bno055.c **** * @version  2.0.6
  36:Core/Src/bno055.c **** *
  37:Core/Src/bno055.c **** */
  38:Core/Src/bno055.c **** 
  39:Core/Src/bno055.c **** /*********************************************************/
  40:Core/Src/bno055.c **** /*              INCLUDES    */
  41:Core/Src/bno055.c **** /*******************************************************/
  42:Core/Src/bno055.c **** #include "bno055.h"
  43:Core/Src/bno055.c **** 
  44:Core/Src/bno055.c **** #ifdef __KERNEL__
  45:Core/Src/bno055.c **** #include <linux/types.h>
  46:Core/Src/bno055.c **** #include <linux/kernel.h>
  47:Core/Src/bno055.c **** #else
  48:Core/Src/bno055.c **** #include <stdint.h>
  49:Core/Src/bno055.c **** #include <stddef.h>
  50:Core/Src/bno055.c **** #endif
  51:Core/Src/bno055.c **** 
  52:Core/Src/bno055.c **** #ifndef NULL
  53:Core/Src/bno055.c **** #ifdef __cplusplus
  54:Core/Src/bno055.c **** #define NULL 0
  55:Core/Src/bno055.c **** #else
  56:Core/Src/bno055.c **** #define NULL ((void *) 0)
  57:Core/Src/bno055.c **** #endif
  58:Core/Src/bno055.c **** #endif
  59:Core/Src/bno055.c **** 
  60:Core/Src/bno055.c **** /*! file <BNO055 >
  61:Core/Src/bno055.c ****  * brief <Sensor driver for BNO055> */
  62:Core/Src/bno055.c **** 
  63:Core/Src/bno055.c **** /*  STRUCTURE DEFINITIONS   */
  64:Core/Src/bno055.c **** static struct bno055_t *p_bno055;
  65:Core/Src/bno055.c **** 
  66:Core/Src/bno055.c **** /*   LOCAL FUNCTIONS    */
  67:Core/Src/bno055.c **** 
  68:Core/Src/bno055.c **** /*!
  69:Core/Src/bno055.c ****  *  @brief
  70:Core/Src/bno055.c ****  *  This API is used for initialize
  71:Core/Src/bno055.c ****  *  bus read, bus write function pointers,device
  72:Core/Src/bno055.c ****  *  address,accel revision id, gyro revision id
  73:Core/Src/bno055.c ****  *  mag revision id, software revision id, boot loader
  74:Core/Src/bno055.c ****  *  revision id and page id
  75:Core/Src/bno055.c ****  *
  76:Core/Src/bno055.c ****  *  @param  bno055 - structure pointer
  77:Core/Src/bno055.c ****  *
  78:Core/Src/bno055.c ****  *
  79:Core/Src/bno055.c ****  *  @return results of bus communication function
  80:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
  81:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
  82:Core/Src/bno055.c ****  *
  83:Core/Src/bno055.c ****  *  @note While changing the parameter of the bno055_t
  84:Core/Src/bno055.c ****  *  consider the following point:
  85:Core/Src/bno055.c ****  *  Changing the reference value of the parameter
  86:Core/Src/bno055.c ****  *  will changes the local copy or local reference
ARM GAS  /tmp/ccO72alg.s 			page 3


  87:Core/Src/bno055.c ****  *  make sure your changes will not
  88:Core/Src/bno055.c ****  *  affect the reference value of the parameter
  89:Core/Src/bno055.c ****  *  (Better case don't change the reference value of the parameter)
  90:Core/Src/bno055.c ****  */
  91:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_init(struct bno055_t *bno055)
  92:Core/Src/bno055.c **** {
  30              		.loc 1 92 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 92 1 is_stmt 0 view .LVU1
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 20
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 32
  93:Core/Src/bno055.c ****     /* Variable used to return value of
  94:Core/Src/bno055.c ****      * communication routine*/
  95:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
  46              		.loc 1 95 5 is_stmt 1 view .LVU2
  47              	.LVL1:
  96:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
  48              		.loc 1 96 5 view .LVU3
  49              		.loc 1 96 8 is_stmt 0 view .LVU4
  50 0004 0026     		movs	r6, #0
  51 0006 8DF80760 		strb	r6, [sp, #7]
  97:Core/Src/bno055.c ****     u8 bno055_page_zero_u8 = BNO055_PAGE_ZERO;
  52              		.loc 1 97 5 is_stmt 1 view .LVU5
  53              		.loc 1 97 8 is_stmt 0 view .LVU6
  54 000a 8DF80660 		strb	r6, [sp, #6]
  98:Core/Src/bno055.c **** 
  99:Core/Src/bno055.c ****     /* Array holding the Software revision id
 100:Core/Src/bno055.c ****      */
 101:Core/Src/bno055.c ****     u8 a_SW_ID_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
  55              		.loc 1 101 5 is_stmt 1 view .LVU7
  56              		.loc 1 101 8 is_stmt 0 view .LVU8
  57 000e ADF80460 		strh	r6, [sp, #4]	@ movhi
 102:Core/Src/bno055.c **** 
 103:Core/Src/bno055.c ****     /* stuct parameters are assign to bno055*/
 104:Core/Src/bno055.c ****     p_bno055 = bno055;
  58              		.loc 1 104 5 is_stmt 1 view .LVU9
  59              		.loc 1 104 14 is_stmt 0 view .LVU10
  60 0012 394C     		ldr	r4, .L3
  61 0014 2060     		str	r0, [r4]
 105:Core/Src/bno055.c **** 
 106:Core/Src/bno055.c ****     /* Write the default page as zero*/
 107:Core/Src/bno055.c ****     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
  62              		.loc 1 107 5 is_stmt 1 view .LVU11
  63              		.loc 1 107 24 is_stmt 0 view .LVU12
  64 0016 C568     		ldr	r5, [r0, #12]
  65              		.loc 1 107 16 view .LVU13
ARM GAS  /tmp/ccO72alg.s 			page 4


  66 0018 0123     		movs	r3, #1
  67 001a 0DF10602 		add	r2, sp, #6
  68 001e 0721     		movs	r1, #7
  69 0020 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  70              	.LVL2:
  71              		.loc 1 107 16 view .LVU14
  72 0022 A847     		blx	r5
  73              	.LVL3:
  74              		.loc 1 107 16 view .LVU15
  75 0024 0546     		mov	r5, r0
  76              	.LVL4:
 108:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 109:Core/Src/bno055.c ****                                                &bno055_page_zero_u8,
 110:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 111:Core/Src/bno055.c **** 
 112:Core/Src/bno055.c ****     /* Read the chip id of the sensor from page
 113:Core/Src/bno055.c ****      * zero 0x00 register*/
 114:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
  77              		.loc 1 114 5 is_stmt 1 view .LVU16
  78              		.loc 1 114 25 is_stmt 0 view .LVU17
  79 0026 2068     		ldr	r0, [r4]
  80 0028 0769     		ldr	r7, [r0, #16]
  81              		.loc 1 114 17 view .LVU18
  82 002a 0123     		movs	r3, #1
  83 002c 0DF10702 		add	r2, sp, #7
  84 0030 3146     		mov	r1, r6
  85 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
  86 0034 B847     		blx	r7
  87              	.LVL5:
  88              		.loc 1 114 14 view .LVU19
  89 0036 55FA80F5 		uxtab	r5, r5, r0
  90              	.LVL6:
  91              		.loc 1 114 14 view .LVU20
  92 003a EDB2     		uxtb	r5, r5
  93              	.LVL7:
 115:Core/Src/bno055.c ****                                                BNO055_CHIP_ID_REG,
 116:Core/Src/bno055.c ****                                                &data_u8,
 117:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 118:Core/Src/bno055.c ****     p_bno055->chip_id = data_u8;
  94              		.loc 1 118 5 is_stmt 1 view .LVU21
  95              		.loc 1 118 13 is_stmt 0 view .LVU22
  96 003c 2068     		ldr	r0, [r4]
  97              		.loc 1 118 23 view .LVU23
  98 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  99 0042 0370     		strb	r3, [r0]
 119:Core/Src/bno055.c **** 
 120:Core/Src/bno055.c ****     /* Read the accel revision id from page
 121:Core/Src/bno055.c ****      * zero 0x01 register*/
 122:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 100              		.loc 1 122 5 is_stmt 1 view .LVU24
 101              		.loc 1 122 25 is_stmt 0 view .LVU25
 102 0044 0669     		ldr	r6, [r0, #16]
 103              		.loc 1 122 17 view .LVU26
 104 0046 0123     		movs	r3, #1
 105 0048 0DF10702 		add	r2, sp, #7
 106 004c 1946     		mov	r1, r3
 107 004e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 5


 108 0050 B047     		blx	r6
 109              	.LVL8:
 110              		.loc 1 122 14 view .LVU27
 111 0052 55FA80F5 		uxtab	r5, r5, r0
 112              	.LVL9:
 113              		.loc 1 122 14 view .LVU28
 114 0056 EDB2     		uxtb	r5, r5
 115              	.LVL10:
 123:Core/Src/bno055.c ****                                                BNO055_ACCEL_REV_ID_REG,
 124:Core/Src/bno055.c ****                                                &data_u8,
 125:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 126:Core/Src/bno055.c ****     p_bno055->accel_rev_id = data_u8;
 116              		.loc 1 126 5 is_stmt 1 view .LVU29
 117              		.loc 1 126 13 is_stmt 0 view .LVU30
 118 0058 2068     		ldr	r0, [r4]
 119              		.loc 1 126 28 view .LVU31
 120 005a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 121 005e 4371     		strb	r3, [r0, #5]
 127:Core/Src/bno055.c **** 
 128:Core/Src/bno055.c ****     /* Read the mag revision id from page
 129:Core/Src/bno055.c ****      * zero 0x02 register*/
 130:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 122              		.loc 1 130 5 is_stmt 1 view .LVU32
 123              		.loc 1 130 25 is_stmt 0 view .LVU33
 124 0060 0669     		ldr	r6, [r0, #16]
 125              		.loc 1 130 17 view .LVU34
 126 0062 0123     		movs	r3, #1
 127 0064 0DF10702 		add	r2, sp, #7
 128 0068 0221     		movs	r1, #2
 129 006a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 130 006c B047     		blx	r6
 131              	.LVL11:
 132              		.loc 1 130 14 view .LVU35
 133 006e 55FA80F5 		uxtab	r5, r5, r0
 134              	.LVL12:
 135              		.loc 1 130 14 view .LVU36
 136 0072 EDB2     		uxtb	r5, r5
 137              	.LVL13:
 131:Core/Src/bno055.c ****                                                BNO055_MAG_REV_ID_REG,
 132:Core/Src/bno055.c ****                                                &data_u8,
 133:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 134:Core/Src/bno055.c ****     p_bno055->mag_rev_id = data_u8;
 138              		.loc 1 134 5 is_stmt 1 view .LVU37
 139              		.loc 1 134 13 is_stmt 0 view .LVU38
 140 0074 2068     		ldr	r0, [r4]
 141              		.loc 1 134 26 view .LVU39
 142 0076 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 143 007a 8371     		strb	r3, [r0, #6]
 135:Core/Src/bno055.c **** 
 136:Core/Src/bno055.c ****     /* Read the gyro revision id from page
 137:Core/Src/bno055.c ****      * zero 0x02 register*/
 138:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 144              		.loc 1 138 5 is_stmt 1 view .LVU40
 145              		.loc 1 138 25 is_stmt 0 view .LVU41
 146 007c 0669     		ldr	r6, [r0, #16]
 147              		.loc 1 138 17 view .LVU42
 148 007e 0123     		movs	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 6


 149 0080 0DF10702 		add	r2, sp, #7
 150 0084 0321     		movs	r1, #3
 151 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 152 0088 B047     		blx	r6
 153              	.LVL14:
 154              		.loc 1 138 14 view .LVU43
 155 008a 55FA80F5 		uxtab	r5, r5, r0
 156              	.LVL15:
 157              		.loc 1 138 14 view .LVU44
 158 008e EDB2     		uxtb	r5, r5
 159              	.LVL16:
 139:Core/Src/bno055.c ****                                                BNO055_GYRO_REV_ID_REG,
 140:Core/Src/bno055.c ****                                                &data_u8,
 141:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 142:Core/Src/bno055.c ****     p_bno055->gyro_rev_id = data_u8;
 160              		.loc 1 142 5 is_stmt 1 view .LVU45
 161              		.loc 1 142 13 is_stmt 0 view .LVU46
 162 0090 2068     		ldr	r0, [r4]
 163              		.loc 1 142 27 view .LVU47
 164 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 165 0096 C371     		strb	r3, [r0, #7]
 143:Core/Src/bno055.c **** 
 144:Core/Src/bno055.c ****     /* Read the boot loader revision from page
 145:Core/Src/bno055.c ****      * zero 0x06 register*/
 146:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 166              		.loc 1 146 5 is_stmt 1 view .LVU48
 167              		.loc 1 146 25 is_stmt 0 view .LVU49
 168 0098 0669     		ldr	r6, [r0, #16]
 169              		.loc 1 146 17 view .LVU50
 170 009a 0123     		movs	r3, #1
 171 009c 0DF10702 		add	r2, sp, #7
 172 00a0 0621     		movs	r1, #6
 173 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 174 00a4 B047     		blx	r6
 175              	.LVL17:
 176              		.loc 1 146 14 view .LVU51
 177 00a6 55FA80F5 		uxtab	r5, r5, r0
 178              	.LVL18:
 179              		.loc 1 146 14 view .LVU52
 180 00aa EDB2     		uxtb	r5, r5
 181              	.LVL19:
 147:Core/Src/bno055.c ****                                                BNO055_BL_REV_ID_REG,
 148:Core/Src/bno055.c ****                                                &data_u8,
 149:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 150:Core/Src/bno055.c ****     p_bno055->bl_rev_id = data_u8;
 182              		.loc 1 150 5 is_stmt 1 view .LVU53
 183              		.loc 1 150 13 is_stmt 0 view .LVU54
 184 00ac 2068     		ldr	r0, [r4]
 185              		.loc 1 150 25 view .LVU55
 186 00ae 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 187 00b2 0372     		strb	r3, [r0, #8]
 151:Core/Src/bno055.c **** 
 152:Core/Src/bno055.c ****     /* Read the software revision id from page
 153:Core/Src/bno055.c ****      * zero 0x04 and 0x05 register( 2 bytes of data)*/
 154:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 188              		.loc 1 154 5 is_stmt 1 view .LVU56
 189              		.loc 1 154 25 is_stmt 0 view .LVU57
ARM GAS  /tmp/ccO72alg.s 			page 7


 190 00b4 0669     		ldr	r6, [r0, #16]
 191              		.loc 1 154 17 view .LVU58
 192 00b6 0223     		movs	r3, #2
 193 00b8 01AA     		add	r2, sp, #4
 194 00ba 0421     		movs	r1, #4
 195 00bc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 196 00be B047     		blx	r6
 197              	.LVL20:
 198              		.loc 1 154 14 view .LVU59
 199 00c0 55FA80F5 		uxtab	r5, r5, r0
 200              	.LVL21:
 201              		.loc 1 154 14 view .LVU60
 202 00c4 EDB2     		uxtb	r5, r5
 203              	.LVL22:
 155:Core/Src/bno055.c ****                                                BNO055_SW_REV_ID_LSB_REG,
 156:Core/Src/bno055.c ****                                                a_SW_ID_u8,
 157:Core/Src/bno055.c ****                                                BNO055_LSB_MSB_READ_LENGTH);
 158:Core/Src/bno055.c ****     a_SW_ID_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(a_SW_ID_u8[BNO055_SW_ID_LSB], BNO055_SW_REV_
 204              		.loc 1 158 5 is_stmt 1 view .LVU61
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 205              		.loc 1 159 5 view .LVU62
 160:Core/Src/bno055.c ****         (u16)((((u32)((u8)a_SW_ID_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) | (a_SW_ID_u8[
 206              		.loc 1 160 37 is_stmt 0 view .LVU63
 207 00c6 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 208              		.loc 1 160 99 view .LVU64
 209 00ca 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 210              		.loc 1 159 13 view .LVU65
 211 00ce 2068     		ldr	r0, [r4]
 212              		.loc 1 160 9 view .LVU66
 213 00d0 43EA0223 		orr	r3, r3, r2, lsl #8
 159:Core/Src/bno055.c ****     p_bno055->sw_rev_id =
 214              		.loc 1 159 25 view .LVU67
 215 00d4 4380     		strh	r3, [r0, #2]	@ movhi
 161:Core/Src/bno055.c **** 
 162:Core/Src/bno055.c ****     /* Read the page id from the register 0x07*/
 163:Core/Src/bno055.c ****     com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 216              		.loc 1 163 5 is_stmt 1 view .LVU68
 217              		.loc 1 163 25 is_stmt 0 view .LVU69
 218 00d6 0669     		ldr	r6, [r0, #16]
 219              		.loc 1 163 17 view .LVU70
 220 00d8 0123     		movs	r3, #1
 221 00da 0DF10702 		add	r2, sp, #7
 222 00de 0721     		movs	r1, #7
 223 00e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 224 00e2 B047     		blx	r6
 225              	.LVL23:
 226              		.loc 1 163 14 view .LVU71
 227 00e4 55FA80F0 		uxtab	r0, r5, r0
 228              	.LVL24:
 164:Core/Src/bno055.c ****                                                BNO055_PAGE_ID_REG,
 165:Core/Src/bno055.c ****                                                &data_u8,
 166:Core/Src/bno055.c ****                                                BNO055_GEN_READ_WRITE_LENGTH);
 167:Core/Src/bno055.c ****     p_bno055->page_id = data_u8;
 229              		.loc 1 167 5 is_stmt 1 view .LVU72
 230              		.loc 1 167 13 is_stmt 0 view .LVU73
 231 00e8 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccO72alg.s 			page 8


 232              		.loc 1 167 23 view .LVU74
 233 00ea 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 234 00ee 1A71     		strb	r2, [r3, #4]
 168:Core/Src/bno055.c **** 
 169:Core/Src/bno055.c ****     return com_rslt;
 235              		.loc 1 169 5 is_stmt 1 view .LVU75
 170:Core/Src/bno055.c **** }
 236              		.loc 1 170 1 is_stmt 0 view .LVU76
 237 00f0 40B2     		sxtb	r0, r0
 238              		.loc 1 170 1 view .LVU77
 239 00f2 03B0     		add	sp, sp, #12
 240              	.LCFI2:
 241              		.cfi_def_cfa_offset 20
 242              		@ sp needed
 243 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 244              	.L4:
 245 00f6 00BF     		.align	2
 246              	.L3:
 247 00f8 00000000 		.word	.LANCHOR0
 248              		.cfi_endproc
 249              	.LFE0:
 251              		.section	.text.bno055_write_register,"ax",%progbits
 252              		.align	1
 253              		.global	bno055_write_register
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	bno055_write_register:
 259              	.LVL25:
 260              	.LFB1:
 171:Core/Src/bno055.c **** 
 172:Core/Src/bno055.c **** /*!
 173:Core/Src/bno055.c ****  *  @brief
 174:Core/Src/bno055.c ****  *  This API gives data to the given register and
 175:Core/Src/bno055.c ****  *  the data is written in the corresponding register address
 176:Core/Src/bno055.c ****  *
 177:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 178:Core/Src/bno055.c ****  *  @param data_u8 : Data to be written to the register
 179:Core/Src/bno055.c ****  *  @param len_u8  : Length of the Data
 180:Core/Src/bno055.c ****  *
 181:Core/Src/bno055.c ****  *  @return results of bus communication function
 182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 184:Core/Src/bno055.c ****  *
 185:Core/Src/bno055.c ****  *
 186:Core/Src/bno055.c ****  */
 187:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 188:Core/Src/bno055.c **** {
 261              		.loc 1 188 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 188 1 is_stmt 0 view .LVU79
 266 0000 38B5     		push	{r3, r4, r5, lr}
 267              	.LCFI3:
 268              		.cfi_def_cfa_offset 16
 269              		.cfi_offset 3, -16
ARM GAS  /tmp/ccO72alg.s 			page 9


 270              		.cfi_offset 4, -12
 271              		.cfi_offset 5, -8
 272              		.cfi_offset 14, -4
 273 0002 1346     		mov	r3, r2
 189:Core/Src/bno055.c ****     /* Variable used to return value of
 190:Core/Src/bno055.c ****      * communication routine*/
 191:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 274              		.loc 1 191 5 is_stmt 1 view .LVU80
 275              	.LVL26:
 192:Core/Src/bno055.c **** 
 193:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 194:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 276              		.loc 1 194 5 view .LVU81
 277              		.loc 1 194 18 is_stmt 0 view .LVU82
 278 0004 054A     		ldr	r2, .L9
 279              	.LVL27:
 280              		.loc 1 194 18 view .LVU83
 281 0006 1468     		ldr	r4, [r2]
 282              		.loc 1 194 8 view .LVU84
 283 0008 2CB1     		cbz	r4, .L7
 195:Core/Src/bno055.c ****     {
 196:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 197:Core/Src/bno055.c ****     }
 198:Core/Src/bno055.c ****     else
 199:Core/Src/bno055.c ****     {
 200:Core/Src/bno055.c ****         /* Write the values of respective given register */
 201:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 284              		.loc 1 201 9 is_stmt 1 view .LVU85
 285              		.loc 1 201 28 is_stmt 0 view .LVU86
 286 000a E568     		ldr	r5, [r4, #12]
 287              		.loc 1 201 20 view .LVU87
 288 000c 0A46     		mov	r2, r1
 289 000e 0146     		mov	r1, r0
 290              	.LVL28:
 291              		.loc 1 201 20 view .LVU88
 292 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 293              	.LVL29:
 294              		.loc 1 201 20 view .LVU89
 295 0012 A847     		blx	r5
 296              	.LVL30:
 202:Core/Src/bno055.c ****     }
 203:Core/Src/bno055.c **** 
 204:Core/Src/bno055.c ****     return com_rslt;
 297              		.loc 1 204 5 is_stmt 1 view .LVU90
 298              	.L6:
 205:Core/Src/bno055.c **** }
 299              		.loc 1 205 1 is_stmt 0 view .LVU91
 300 0014 38BD     		pop	{r3, r4, r5, pc}
 301              	.LVL31:
 302              	.L7:
 196:Core/Src/bno055.c ****     }
 303              		.loc 1 196 16 view .LVU92
 304 0016 6FF07E00 		mvn	r0, #126
 305              	.LVL32:
 196:Core/Src/bno055.c ****     }
 306              		.loc 1 196 16 view .LVU93
 307 001a FBE7     		b	.L6
ARM GAS  /tmp/ccO72alg.s 			page 10


 308              	.L10:
 309              		.align	2
 310              	.L9:
 311 001c 00000000 		.word	.LANCHOR0
 312              		.cfi_endproc
 313              	.LFE1:
 315              		.section	.text.bno055_read_register,"ax",%progbits
 316              		.align	1
 317              		.global	bno055_read_register
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	bno055_read_register:
 323              	.LVL33:
 324              	.LFB2:
 206:Core/Src/bno055.c **** 
 207:Core/Src/bno055.c **** /*!
 208:Core/Src/bno055.c ****  *  @brief This API reads the data from
 209:Core/Src/bno055.c ****  *  the given register address
 210:Core/Src/bno055.c ****  *
 211:Core/Src/bno055.c ****  *  @param addr_u8 : Address of the register
 212:Core/Src/bno055.c ****  *  @param data_u8 : address of the variable,
 213:Core/Src/bno055.c ****  *  read value will be kept
 214:Core/Src/bno055.c ****  *  @param len_u8  : Length of the data
 215:Core/Src/bno055.c ****  *
 216:Core/Src/bno055.c ****  *
 217:Core/Src/bno055.c ****  *  @return results of bus communication function
 218:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 219:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 220:Core/Src/bno055.c ****  *
 221:Core/Src/bno055.c ****  */
 222:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_register(u8 addr_u8, u8 *data_u8, u8 len_u8)
 223:Core/Src/bno055.c **** {
 325              		.loc 1 223 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		.loc 1 223 1 is_stmt 0 view .LVU95
 330 0000 38B5     		push	{r3, r4, r5, lr}
 331              	.LCFI4:
 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 3, -16
 334              		.cfi_offset 4, -12
 335              		.cfi_offset 5, -8
 336              		.cfi_offset 14, -4
 337 0002 1346     		mov	r3, r2
 224:Core/Src/bno055.c ****     /* Variable used to return value of
 225:Core/Src/bno055.c ****      * communication routine*/
 226:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 338              		.loc 1 226 5 is_stmt 1 view .LVU96
 339              	.LVL34:
 227:Core/Src/bno055.c **** 
 228:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 229:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 340              		.loc 1 229 5 view .LVU97
 341              		.loc 1 229 18 is_stmt 0 view .LVU98
 342 0004 054A     		ldr	r2, .L15
ARM GAS  /tmp/ccO72alg.s 			page 11


 343              	.LVL35:
 344              		.loc 1 229 18 view .LVU99
 345 0006 1468     		ldr	r4, [r2]
 346              		.loc 1 229 8 view .LVU100
 347 0008 2CB1     		cbz	r4, .L13
 230:Core/Src/bno055.c ****     {
 231:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 232:Core/Src/bno055.c ****     }
 233:Core/Src/bno055.c ****     else
 234:Core/Src/bno055.c ****     {
 235:Core/Src/bno055.c ****         /* Read the value from given register*/
 236:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr, addr_u8, data_u8, len_u8);
 348              		.loc 1 236 9 is_stmt 1 view .LVU101
 349              		.loc 1 236 28 is_stmt 0 view .LVU102
 350 000a 2569     		ldr	r5, [r4, #16]
 351              		.loc 1 236 20 view .LVU103
 352 000c 0A46     		mov	r2, r1
 353 000e 0146     		mov	r1, r0
 354              	.LVL36:
 355              		.loc 1 236 20 view .LVU104
 356 0010 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 357              	.LVL37:
 358              		.loc 1 236 20 view .LVU105
 359 0012 A847     		blx	r5
 360              	.LVL38:
 237:Core/Src/bno055.c ****     }
 238:Core/Src/bno055.c **** 
 239:Core/Src/bno055.c ****     return com_rslt;
 361              		.loc 1 239 5 is_stmt 1 view .LVU106
 362              	.L12:
 240:Core/Src/bno055.c **** }
 363              		.loc 1 240 1 is_stmt 0 view .LVU107
 364 0014 38BD     		pop	{r3, r4, r5, pc}
 365              	.LVL39:
 366              	.L13:
 231:Core/Src/bno055.c ****     }
 367              		.loc 1 231 16 view .LVU108
 368 0016 6FF07E00 		mvn	r0, #126
 369              	.LVL40:
 231:Core/Src/bno055.c ****     }
 370              		.loc 1 231 16 view .LVU109
 371 001a FBE7     		b	.L12
 372              	.L16:
 373              		.align	2
 374              	.L15:
 375 001c 00000000 		.word	.LANCHOR0
 376              		.cfi_endproc
 377              	.LFE2:
 379              		.section	.text.bno055_read_page_id,"ax",%progbits
 380              		.align	1
 381              		.global	bno055_read_page_id
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 386              	bno055_read_page_id:
 387              	.LVL41:
 388              	.LFB5:
ARM GAS  /tmp/ccO72alg.s 			page 12


 241:Core/Src/bno055.c **** 
 242:Core/Src/bno055.c **** /*!
 243:Core/Src/bno055.c ****  *  @brief This API reads chip id
 244:Core/Src/bno055.c ****  *  from register 0x00 it is a byte of data
 245:Core/Src/bno055.c ****  *
 246:Core/Src/bno055.c ****  *
 247:Core/Src/bno055.c ****  *  @param chip_id_u8 : The chip id value 0xA0
 248:Core/Src/bno055.c ****  *
 249:Core/Src/bno055.c ****  *  @return results of bus communication function
 250:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 251:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 252:Core/Src/bno055.c ****  */
 253:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_chip_id(u8 *chip_id_u8)
 254:Core/Src/bno055.c **** {
 255:Core/Src/bno055.c ****     /* Variable used to return value of
 256:Core/Src/bno055.c ****      * communication routine*/
 257:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 258:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 259:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 260:Core/Src/bno055.c **** 
 261:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 262:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 263:Core/Src/bno055.c ****     {
 264:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 265:Core/Src/bno055.c ****     }
 266:Core/Src/bno055.c ****     else
 267:Core/Src/bno055.c ****     {
 268:Core/Src/bno055.c ****         /*condition check for page, chip id is
 269:Core/Src/bno055.c ****          * available in the page zero*/
 270:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 271:Core/Src/bno055.c ****         {
 272:Core/Src/bno055.c ****             /* Write the page zero*/
 273:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 274:Core/Src/bno055.c ****         }
 275:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 276:Core/Src/bno055.c ****         {
 277:Core/Src/bno055.c ****             /* Read the chip id*/
 278:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 279:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 280:Core/Src/bno055.c ****                                                       &data_u8,
 281:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 282:Core/Src/bno055.c ****             *chip_id_u8 = data_u8;
 283:Core/Src/bno055.c ****         }
 284:Core/Src/bno055.c ****         else
 285:Core/Src/bno055.c ****         {
 286:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 287:Core/Src/bno055.c ****         }
 288:Core/Src/bno055.c ****     }
 289:Core/Src/bno055.c **** 
 290:Core/Src/bno055.c ****     return com_rslt;
 291:Core/Src/bno055.c **** }
 292:Core/Src/bno055.c **** 
 293:Core/Src/bno055.c **** /*!
 294:Core/Src/bno055.c ****  *  @brief This API reads software revision id
 295:Core/Src/bno055.c ****  *  from register 0x04 and 0x05 it is a two byte of data
 296:Core/Src/bno055.c ****  *
 297:Core/Src/bno055.c ****  *  @param sw_id_u8 : The SW revision id
ARM GAS  /tmp/ccO72alg.s 			page 13


 298:Core/Src/bno055.c ****  *
 299:Core/Src/bno055.c ****  *  @return results of bus communication function
 300:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 301:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 302:Core/Src/bno055.c ****  *
 303:Core/Src/bno055.c ****  *
 304:Core/Src/bno055.c ****  */
 305:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sw_rev_id(u16 *sw_id_u8)
 306:Core/Src/bno055.c **** {
 307:Core/Src/bno055.c ****     /* Variable used to return value of
 308:Core/Src/bno055.c ****      * communication routine*/
 309:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 310:Core/Src/bno055.c **** 
 311:Core/Src/bno055.c ****     /* array having the software revision id
 312:Core/Src/bno055.c ****      * data_u8[0] - LSB
 313:Core/Src/bno055.c ****      * data_u8[1] - MSB*/
 314:Core/Src/bno055.c ****     u8 data_u8[BNO055_REV_ID_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 316:Core/Src/bno055.c **** 
 317:Core/Src/bno055.c ****     /* Check the struct  p_bno055 is empty*/
 318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 319:Core/Src/bno055.c ****     {
 320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 321:Core/Src/bno055.c ****     }
 322:Core/Src/bno055.c ****     else
 323:Core/Src/bno055.c ****     {
 324:Core/Src/bno055.c ****         /*condition check for page, chip id is
 325:Core/Src/bno055.c ****          * available in the page zero*/
 326:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 327:Core/Src/bno055.c ****         {
 328:Core/Src/bno055.c ****             /* Write the page zero*/
 329:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 330:Core/Src/bno055.c ****         }
 331:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 332:Core/Src/bno055.c ****         {
 333:Core/Src/bno055.c ****             /* Read the two byte value of software
 334:Core/Src/bno055.c ****              * revision id*/
 335:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 336:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 337:Core/Src/bno055.c ****                                                       data_u8,
 338:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 339:Core/Src/bno055.c ****             data_u8[BNO055_SW_ID_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SW_ID_LSB], BNO055_SW_RE
 340:Core/Src/bno055.c ****             *sw_id_u8 =
 341:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 342:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 343:Core/Src/bno055.c ****         }
 344:Core/Src/bno055.c ****         else
 345:Core/Src/bno055.c ****         {
 346:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 347:Core/Src/bno055.c ****         }
 348:Core/Src/bno055.c ****     }
 349:Core/Src/bno055.c **** 
 350:Core/Src/bno055.c ****     return com_rslt;
 351:Core/Src/bno055.c **** }
 352:Core/Src/bno055.c **** 
 353:Core/Src/bno055.c **** /*!
 354:Core/Src/bno055.c ****  *  @brief This API reads page id
ARM GAS  /tmp/ccO72alg.s 			page 14


 355:Core/Src/bno055.c ****  *  from register 0x07 it is a byte of data
 356:Core/Src/bno055.c ****  *
 357:Core/Src/bno055.c ****  *
 358:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 359:Core/Src/bno055.c ****  *
 360:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 361:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 362:Core/Src/bno055.c ****  *
 363:Core/Src/bno055.c ****  *  @return results of bus communication function
 364:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 365:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 366:Core/Src/bno055.c ****  *
 367:Core/Src/bno055.c ****  *
 368:Core/Src/bno055.c ****  */
 369:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_page_id(u8 *page_id_u8)
 370:Core/Src/bno055.c **** {
 389              		.loc 1 370 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		.loc 1 370 1 is_stmt 0 view .LVU111
 394 0000 70B5     		push	{r4, r5, r6, lr}
 395              	.LCFI5:
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 4, -16
 398              		.cfi_offset 5, -12
 399              		.cfi_offset 6, -8
 400              		.cfi_offset 14, -4
 401 0002 82B0     		sub	sp, sp, #8
 402              	.LCFI6:
 403              		.cfi_def_cfa_offset 24
 371:Core/Src/bno055.c ****     /* Variable used to return value of
 372:Core/Src/bno055.c ****      * communication routine*/
 373:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 404              		.loc 1 373 5 is_stmt 1 view .LVU112
 405              	.LVL42:
 374:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 406              		.loc 1 374 5 view .LVU113
 407              		.loc 1 374 8 is_stmt 0 view .LVU114
 408 0004 0023     		movs	r3, #0
 409 0006 8DF80730 		strb	r3, [sp, #7]
 375:Core/Src/bno055.c **** 
 376:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 377:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 410              		.loc 1 377 5 is_stmt 1 view .LVU115
 411              		.loc 1 377 18 is_stmt 0 view .LVU116
 412 000a 0D4B     		ldr	r3, .L22
 413 000c 1C68     		ldr	r4, [r3]
 414              		.loc 1 377 8 view .LVU117
 415 000e 84B1     		cbz	r4, .L19
 416 0010 0546     		mov	r5, r0
 378:Core/Src/bno055.c ****     {
 379:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 380:Core/Src/bno055.c ****     }
 381:Core/Src/bno055.c ****     else
 382:Core/Src/bno055.c ****     {
 383:Core/Src/bno055.c ****         /* Read the page id form 0x07*/
ARM GAS  /tmp/ccO72alg.s 			page 15


 384:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 417              		.loc 1 384 9 is_stmt 1 view .LVU118
 418              		.loc 1 384 28 is_stmt 0 view .LVU119
 419 0012 2669     		ldr	r6, [r4, #16]
 420              		.loc 1 384 20 view .LVU120
 421 0014 0123     		movs	r3, #1
 422 0016 0DF10702 		add	r2, sp, #7
 423 001a 0721     		movs	r1, #7
 424 001c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 425              	.LVL43:
 426              		.loc 1 384 20 view .LVU121
 427 001e B047     		blx	r6
 428              	.LVL44:
 385:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 386:Core/Src/bno055.c ****                                                   &data_u8,
 387:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 388:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 429              		.loc 1 388 9 is_stmt 1 view .LVU122
 430              		.loc 1 388 12 is_stmt 0 view .LVU123
 431 0020 50B9     		cbnz	r0, .L20
 389:Core/Src/bno055.c ****         {
 390:Core/Src/bno055.c ****             data_u8 = BNO055_GET_BITSLICE(data_u8, BNO055_PAGE_ID);
 432              		.loc 1 390 13 is_stmt 1 view .LVU124
 433              		.loc 1 390 21 is_stmt 0 view .LVU125
 434 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 391:Core/Src/bno055.c ****             *page_id_u8 = data_u8;
 435              		.loc 1 391 13 is_stmt 1 view .LVU126
 436              		.loc 1 391 25 is_stmt 0 view .LVU127
 437 0026 2B70     		strb	r3, [r5]
 392:Core/Src/bno055.c ****             p_bno055->page_id = data_u8;
 438              		.loc 1 392 13 is_stmt 1 view .LVU128
 439              		.loc 1 392 21 is_stmt 0 view .LVU129
 440 0028 054A     		ldr	r2, .L22
 441 002a 1268     		ldr	r2, [r2]
 442              		.loc 1 392 31 view .LVU130
 443 002c 1371     		strb	r3, [r2, #4]
 444              	.LVL45:
 445              	.L18:
 393:Core/Src/bno055.c ****         }
 394:Core/Src/bno055.c ****         else
 395:Core/Src/bno055.c ****         {
 396:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 397:Core/Src/bno055.c ****         }
 398:Core/Src/bno055.c ****     }
 399:Core/Src/bno055.c **** 
 400:Core/Src/bno055.c ****     return com_rslt;
 401:Core/Src/bno055.c **** }
 446              		.loc 1 401 1 view .LVU131
 447 002e 02B0     		add	sp, sp, #8
 448              	.LCFI7:
 449              		.cfi_remember_state
 450              		.cfi_def_cfa_offset 16
 451              		@ sp needed
 452 0030 70BD     		pop	{r4, r5, r6, pc}
 453              	.LVL46:
 454              	.L19:
 455              	.LCFI8:
ARM GAS  /tmp/ccO72alg.s 			page 16


 456              		.cfi_restore_state
 379:Core/Src/bno055.c ****     }
 457              		.loc 1 379 16 view .LVU132
 458 0032 6FF07E00 		mvn	r0, #126
 459              	.LVL47:
 379:Core/Src/bno055.c ****     }
 460              		.loc 1 379 16 view .LVU133
 461 0036 FAE7     		b	.L18
 462              	.LVL48:
 463              	.L20:
 396:Core/Src/bno055.c ****         }
 464              		.loc 1 396 22 view .LVU134
 465 0038 4FF0FF30 		mov	r0, #-1
 466              	.LVL49:
 396:Core/Src/bno055.c ****         }
 467              		.loc 1 396 22 view .LVU135
 468 003c F7E7     		b	.L18
 469              	.L23:
 470 003e 00BF     		.align	2
 471              	.L22:
 472 0040 00000000 		.word	.LANCHOR0
 473              		.cfi_endproc
 474              	.LFE5:
 476              		.section	.text.bno055_write_page_id,"ax",%progbits
 477              		.align	1
 478              		.global	bno055_write_page_id
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	bno055_write_page_id:
 484              	.LVL50:
 485              	.LFB6:
 402:Core/Src/bno055.c **** 
 403:Core/Src/bno055.c **** /*!
 404:Core/Src/bno055.c ****  *  @brief This API used to write
 405:Core/Src/bno055.c ****  *  the page id register 0x07
 406:Core/Src/bno055.c ****  *
 407:Core/Src/bno055.c ****  *  @param page_id_u8 : The value of page id
 408:Core/Src/bno055.c ****  *
 409:Core/Src/bno055.c ****  *  BNO055_PAGE_ZERO -> 0x00
 410:Core/Src/bno055.c ****  *  BNO055_PAGE_ONE  -> 0x01
 411:Core/Src/bno055.c ****  *
 412:Core/Src/bno055.c ****  *  @return results of bus communication function
 413:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 414:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 415:Core/Src/bno055.c ****  *
 416:Core/Src/bno055.c ****  *
 417:Core/Src/bno055.c ****  */
 418:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_page_id(u8 page_id_u8)
 419:Core/Src/bno055.c **** {
 486              		.loc 1 419 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		.loc 1 419 1 is_stmt 0 view .LVU137
 491 0000 70B5     		push	{r4, r5, r6, lr}
 492              	.LCFI9:
ARM GAS  /tmp/ccO72alg.s 			page 17


 493              		.cfi_def_cfa_offset 16
 494              		.cfi_offset 4, -16
 495              		.cfi_offset 5, -12
 496              		.cfi_offset 6, -8
 497              		.cfi_offset 14, -4
 498 0002 82B0     		sub	sp, sp, #8
 499              	.LCFI10:
 500              		.cfi_def_cfa_offset 24
 501 0004 0446     		mov	r4, r0
 420:Core/Src/bno055.c ****     /* Variable used to return value of
 421:Core/Src/bno055.c ****      * communication routine*/
 422:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 502              		.loc 1 422 5 is_stmt 1 view .LVU138
 503              	.LVL51:
 423:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 504              		.loc 1 423 5 view .LVU139
 505              		.loc 1 423 8 is_stmt 0 view .LVU140
 506 0006 0023     		movs	r3, #0
 507 0008 8DF80730 		strb	r3, [sp, #7]
 424:Core/Src/bno055.c **** 
 425:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 426:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 508              		.loc 1 426 5 is_stmt 1 view .LVU141
 509              		.loc 1 426 18 is_stmt 0 view .LVU142
 510 000c 124B     		ldr	r3, .L29
 511 000e 1868     		ldr	r0, [r3]
 512              	.LVL52:
 513              		.loc 1 426 8 view .LVU143
 514 0010 E0B1     		cbz	r0, .L26
 427:Core/Src/bno055.c ****     {
 428:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 429:Core/Src/bno055.c ****     }
 430:Core/Src/bno055.c ****     else
 431:Core/Src/bno055.c ****     {
 432:Core/Src/bno055.c ****         /* Read the current page*/
 433:Core/Src/bno055.c ****         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 515              		.loc 1 433 9 is_stmt 1 view .LVU144
 516              		.loc 1 433 28 is_stmt 0 view .LVU145
 517 0012 0569     		ldr	r5, [r0, #16]
 518              		.loc 1 433 20 view .LVU146
 519 0014 0123     		movs	r3, #1
 520 0016 0DF10702 		add	r2, sp, #7
 521 001a 0721     		movs	r1, #7
 522 001c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 523 001e A847     		blx	r5
 524              	.LVL53:
 434:Core/Src/bno055.c ****                                                   BNO055_PAGE_ID_REG,
 435:Core/Src/bno055.c ****                                                   &data_u8r,
 436:Core/Src/bno055.c ****                                                   BNO055_GEN_READ_WRITE_LENGTH);
 437:Core/Src/bno055.c **** 
 438:Core/Src/bno055.c ****         /* Check condition for communication BNO055_SUCCESS*/
 439:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 525              		.loc 1 439 9 is_stmt 1 view .LVU147
 526              		.loc 1 439 12 is_stmt 0 view .LVU148
 527 0020 0546     		mov	r5, r0
 528 0022 B0B9     		cbnz	r0, .L27
 440:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 18


 441:Core/Src/bno055.c ****             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_PAGE_ID, page_id_u8);
 529              		.loc 1 441 13 is_stmt 1 view .LVU149
 530              		.loc 1 441 22 is_stmt 0 view .LVU150
 531 0024 8DF80740 		strb	r4, [sp, #7]
 442:Core/Src/bno055.c **** 
 443:Core/Src/bno055.c ****             /* Write the page id*/
 444:Core/Src/bno055.c ****             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 532              		.loc 1 444 13 is_stmt 1 view .LVU151
 533              		.loc 1 444 33 is_stmt 0 view .LVU152
 534 0028 0B4B     		ldr	r3, .L29
 535 002a 1868     		ldr	r0, [r3]
 536              	.LVL54:
 537              		.loc 1 444 33 view .LVU153
 538 002c C668     		ldr	r6, [r0, #12]
 539              		.loc 1 444 25 view .LVU154
 540 002e 0123     		movs	r3, #1
 541 0030 0DF10702 		add	r2, sp, #7
 542 0034 0721     		movs	r1, #7
 543 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 544 0038 B047     		blx	r6
 545              	.LVL55:
 546              		.loc 1 444 22 view .LVU155
 547 003a 55FA80F3 		uxtab	r3, r5, r0
 548 003e 58B2     		sxtb	r0, r3
 549              	.LVL56:
 445:Core/Src/bno055.c ****                                                         BNO055_PAGE_ID_REG,
 446:Core/Src/bno055.c ****                                                         &data_u8r,
 447:Core/Src/bno055.c ****                                                         BNO055_GEN_READ_WRITE_LENGTH);
 448:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 550              		.loc 1 448 13 is_stmt 1 view .LVU156
 551              		.loc 1 448 16 is_stmt 0 view .LVU157
 552 0040 10B9     		cbnz	r0, .L25
 449:Core/Src/bno055.c ****             {
 450:Core/Src/bno055.c ****                 p_bno055->page_id = page_id_u8;
 553              		.loc 1 450 17 is_stmt 1 view .LVU158
 554              		.loc 1 450 25 is_stmt 0 view .LVU159
 555 0042 054B     		ldr	r3, .L29
 556 0044 1B68     		ldr	r3, [r3]
 557              		.loc 1 450 35 view .LVU160
 558 0046 1C71     		strb	r4, [r3, #4]
 559              	.LVL57:
 560              	.L25:
 451:Core/Src/bno055.c ****             }
 452:Core/Src/bno055.c ****         }
 453:Core/Src/bno055.c ****         else
 454:Core/Src/bno055.c ****         {
 455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 456:Core/Src/bno055.c ****         }
 457:Core/Src/bno055.c ****     }
 458:Core/Src/bno055.c **** 
 459:Core/Src/bno055.c ****     return com_rslt;
 460:Core/Src/bno055.c **** }
 561              		.loc 1 460 1 view .LVU161
 562 0048 02B0     		add	sp, sp, #8
 563              	.LCFI11:
 564              		.cfi_remember_state
 565              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccO72alg.s 			page 19


 566              		@ sp needed
 567 004a 70BD     		pop	{r4, r5, r6, pc}
 568              	.LVL58:
 569              	.L26:
 570              	.LCFI12:
 571              		.cfi_restore_state
 428:Core/Src/bno055.c ****     }
 572              		.loc 1 428 16 view .LVU162
 573 004c 6FF07E00 		mvn	r0, #126
 574 0050 FAE7     		b	.L25
 575              	.LVL59:
 576              	.L27:
 455:Core/Src/bno055.c ****         }
 577              		.loc 1 455 22 view .LVU163
 578 0052 4FF0FF30 		mov	r0, #-1
 579              	.LVL60:
 455:Core/Src/bno055.c ****         }
 580              		.loc 1 455 22 view .LVU164
 581 0056 F7E7     		b	.L25
 582              	.L30:
 583              		.align	2
 584              	.L29:
 585 0058 00000000 		.word	.LANCHOR0
 586              		.cfi_endproc
 587              	.LFE6:
 589              		.section	.text.bno055_read_chip_id,"ax",%progbits
 590              		.align	1
 591              		.global	bno055_read_chip_id
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 596              	bno055_read_chip_id:
 597              	.LVL61:
 598              	.LFB3:
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 599              		.loc 1 254 1 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 8
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 254:Core/Src/bno055.c ****     /* Variable used to return value of
 603              		.loc 1 254 1 is_stmt 0 view .LVU166
 604 0000 70B5     		push	{r4, r5, r6, lr}
 605              	.LCFI13:
 606              		.cfi_def_cfa_offset 16
 607              		.cfi_offset 4, -16
 608              		.cfi_offset 5, -12
 609              		.cfi_offset 6, -8
 610              		.cfi_offset 14, -4
 611 0002 82B0     		sub	sp, sp, #8
 612              	.LCFI14:
 613              		.cfi_def_cfa_offset 24
 257:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 614              		.loc 1 257 5 is_stmt 1 view .LVU167
 615              	.LVL62:
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 616              		.loc 1 258 5 view .LVU168
 258:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 20


 617              		.loc 1 258 8 is_stmt 0 view .LVU169
 618 0004 0023     		movs	r3, #0
 619 0006 8DF80730 		strb	r3, [sp, #7]
 259:Core/Src/bno055.c **** 
 620              		.loc 1 259 5 is_stmt 1 view .LVU170
 621              	.LVL63:
 262:Core/Src/bno055.c ****     {
 622              		.loc 1 262 5 view .LVU171
 262:Core/Src/bno055.c ****     {
 623              		.loc 1 262 18 is_stmt 0 view .LVU172
 624 000a 124B     		ldr	r3, .L39
 625 000c 1B68     		ldr	r3, [r3]
 262:Core/Src/bno055.c ****     {
 626              		.loc 1 262 8 view .LVU173
 627 000e D3B1     		cbz	r3, .L35
 628 0010 0546     		mov	r5, r0
 270:Core/Src/bno055.c ****         {
 629              		.loc 1 270 9 is_stmt 1 view .LVU174
 270:Core/Src/bno055.c ****         {
 630              		.loc 1 270 21 is_stmt 0 view .LVU175
 631 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 270:Core/Src/bno055.c ****         {
 632              		.loc 1 270 12 view .LVU176
 633 0014 8BB9     		cbnz	r3, .L38
 634              	.LVL64:
 635              	.L33:
 275:Core/Src/bno055.c ****         {
 636              		.loc 1 275 53 discriminator 1 view .LVU177
 637 0016 0F4B     		ldr	r3, .L39
 638 0018 1B68     		ldr	r3, [r3]
 639 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 275:Core/Src/bno055.c ****         {
 640              		.loc 1 275 41 discriminator 1 view .LVU178
 641 001c B3B9     		cbnz	r3, .L36
 642              	.L34:
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 643              		.loc 1 278 13 is_stmt 1 view .LVU179
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 644              		.loc 1 278 32 is_stmt 0 view .LVU180
 645 001e 0D4B     		ldr	r3, .L39
 646 0020 1C68     		ldr	r4, [r3]
 647 0022 2669     		ldr	r6, [r4, #16]
 278:Core/Src/bno055.c ****                                                       BNO055_CHIP_ID_REG,
 648              		.loc 1 278 24 view .LVU181
 649 0024 0123     		movs	r3, #1
 650 0026 0DF10702 		add	r2, sp, #7
 651 002a 0021     		movs	r1, #0
 652 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 653 002e B047     		blx	r6
 654              	.LVL65:
 282:Core/Src/bno055.c ****         }
 655              		.loc 1 282 13 is_stmt 1 view .LVU182
 282:Core/Src/bno055.c ****         }
 656              		.loc 1 282 25 is_stmt 0 view .LVU183
 657 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 658 0034 2B70     		strb	r3, [r5]
 659              	.LVL66:
ARM GAS  /tmp/ccO72alg.s 			page 21


 660              	.L32:
 291:Core/Src/bno055.c **** 
 661              		.loc 1 291 1 view .LVU184
 662 0036 02B0     		add	sp, sp, #8
 663              	.LCFI15:
 664              		.cfi_remember_state
 665              		.cfi_def_cfa_offset 16
 666              		@ sp needed
 667 0038 70BD     		pop	{r4, r5, r6, pc}
 668              	.LVL67:
 669              	.L38:
 670              	.LCFI16:
 671              		.cfi_restore_state
 273:Core/Src/bno055.c ****         }
 672              		.loc 1 273 13 is_stmt 1 view .LVU185
 273:Core/Src/bno055.c ****         }
 673              		.loc 1 273 23 is_stmt 0 view .LVU186
 674 003a 0020     		movs	r0, #0
 675              	.LVL68:
 273:Core/Src/bno055.c ****         }
 676              		.loc 1 273 23 view .LVU187
 677 003c FFF7FEFF 		bl	bno055_write_page_id
 678              	.LVL69:
 275:Core/Src/bno055.c ****         {
 679              		.loc 1 275 9 is_stmt 1 view .LVU188
 275:Core/Src/bno055.c ****         {
 680              		.loc 1 275 12 is_stmt 0 view .LVU189
 681 0040 0028     		cmp	r0, #0
 682 0042 ECD0     		beq	.L34
 683 0044 E7E7     		b	.L33
 684              	.LVL70:
 685              	.L35:
 264:Core/Src/bno055.c ****     }
 686              		.loc 1 264 16 view .LVU190
 687 0046 6FF07E00 		mvn	r0, #126
 688              	.LVL71:
 264:Core/Src/bno055.c ****     }
 689              		.loc 1 264 16 view .LVU191
 690 004a F4E7     		b	.L32
 691              	.LVL72:
 692              	.L36:
 286:Core/Src/bno055.c ****         }
 693              		.loc 1 286 22 view .LVU192
 694 004c 4FF0FF30 		mov	r0, #-1
 695 0050 F1E7     		b	.L32
 696              	.L40:
 697 0052 00BF     		.align	2
 698              	.L39:
 699 0054 00000000 		.word	.LANCHOR0
 700              		.cfi_endproc
 701              	.LFE3:
 703              		.section	.text.bno055_read_sw_rev_id,"ax",%progbits
 704              		.align	1
 705              		.global	bno055_read_sw_rev_id
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
ARM GAS  /tmp/ccO72alg.s 			page 22


 710              	bno055_read_sw_rev_id:
 711              	.LVL73:
 712              	.LFB4:
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 713              		.loc 1 306 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 8
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 306:Core/Src/bno055.c ****     /* Variable used to return value of
 717              		.loc 1 306 1 is_stmt 0 view .LVU194
 718 0000 30B5     		push	{r4, r5, lr}
 719              	.LCFI17:
 720              		.cfi_def_cfa_offset 12
 721              		.cfi_offset 4, -12
 722              		.cfi_offset 5, -8
 723              		.cfi_offset 14, -4
 724 0002 83B0     		sub	sp, sp, #12
 725              	.LCFI18:
 726              		.cfi_def_cfa_offset 24
 309:Core/Src/bno055.c **** 
 727              		.loc 1 309 5 is_stmt 1 view .LVU195
 728              	.LVL74:
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 729              		.loc 1 314 5 view .LVU196
 314:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 730              		.loc 1 314 8 is_stmt 0 view .LVU197
 731 0004 0023     		movs	r3, #0
 732 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 315:Core/Src/bno055.c **** 
 733              		.loc 1 315 5 is_stmt 1 view .LVU198
 734              	.LVL75:
 318:Core/Src/bno055.c ****     {
 735              		.loc 1 318 5 view .LVU199
 318:Core/Src/bno055.c ****     {
 736              		.loc 1 318 18 is_stmt 0 view .LVU200
 737 000a 134B     		ldr	r3, .L49
 738 000c 1B68     		ldr	r3, [r3]
 318:Core/Src/bno055.c ****     {
 739              		.loc 1 318 8 view .LVU201
 740 000e EBB1     		cbz	r3, .L45
 741 0010 0446     		mov	r4, r0
 326:Core/Src/bno055.c ****         {
 742              		.loc 1 326 9 is_stmt 1 view .LVU202
 326:Core/Src/bno055.c ****         {
 743              		.loc 1 326 21 is_stmt 0 view .LVU203
 744 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 326:Core/Src/bno055.c ****         {
 745              		.loc 1 326 12 view .LVU204
 746 0014 A3B9     		cbnz	r3, .L48
 747              	.LVL76:
 748              	.L43:
 331:Core/Src/bno055.c ****         {
 749              		.loc 1 331 53 discriminator 1 view .LVU205
 750 0016 104B     		ldr	r3, .L49
 751 0018 1B68     		ldr	r3, [r3]
 752 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 331:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 23


 753              		.loc 1 331 41 discriminator 1 view .LVU206
 754 001c CBB9     		cbnz	r3, .L46
 755              	.L44:
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 756              		.loc 1 335 13 is_stmt 1 view .LVU207
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 757              		.loc 1 335 32 is_stmt 0 view .LVU208
 758 001e 0E4B     		ldr	r3, .L49
 759 0020 1868     		ldr	r0, [r3]
 760 0022 0569     		ldr	r5, [r0, #16]
 335:Core/Src/bno055.c ****                                                       BNO055_SW_REV_ID_LSB_REG,
 761              		.loc 1 335 24 view .LVU209
 762 0024 0223     		movs	r3, #2
 763 0026 01AA     		add	r2, sp, #4
 764 0028 0421     		movs	r1, #4
 765 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 766 002c A847     		blx	r5
 767              	.LVL77:
 339:Core/Src/bno055.c ****             *sw_id_u8 =
 768              		.loc 1 339 13 is_stmt 1 view .LVU210
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 769              		.loc 1 340 13 view .LVU211
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 770              		.loc 1 341 42 is_stmt 0 view .LVU212
 771 002e 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 342:Core/Src/bno055.c ****         }
 772              		.loc 1 342 31 view .LVU213
 773 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 341:Core/Src/bno055.c ****                       (data_u8[BNO055_SW_ID_LSB]));
 774              		.loc 1 341 17 view .LVU214
 775 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 340:Core/Src/bno055.c ****                 (u16)((((u32)((u8)data_u8[BNO055_SW_ID_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 776              		.loc 1 340 23 view .LVU215
 777 003a 2380     		strh	r3, [r4]	@ movhi
 778              	.LVL78:
 779              	.L42:
 351:Core/Src/bno055.c **** 
 780              		.loc 1 351 1 view .LVU216
 781 003c 03B0     		add	sp, sp, #12
 782              	.LCFI19:
 783              		.cfi_remember_state
 784              		.cfi_def_cfa_offset 12
 785              		@ sp needed
 786 003e 30BD     		pop	{r4, r5, pc}
 787              	.LVL79:
 788              	.L48:
 789              	.LCFI20:
 790              		.cfi_restore_state
 329:Core/Src/bno055.c ****         }
 791              		.loc 1 329 13 is_stmt 1 view .LVU217
 329:Core/Src/bno055.c ****         }
 792              		.loc 1 329 23 is_stmt 0 view .LVU218
 793 0040 0020     		movs	r0, #0
 794              	.LVL80:
 329:Core/Src/bno055.c ****         }
 795              		.loc 1 329 23 view .LVU219
 796 0042 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccO72alg.s 			page 24


 797              	.LVL81:
 331:Core/Src/bno055.c ****         {
 798              		.loc 1 331 9 is_stmt 1 view .LVU220
 331:Core/Src/bno055.c ****         {
 799              		.loc 1 331 12 is_stmt 0 view .LVU221
 800 0046 0028     		cmp	r0, #0
 801 0048 E9D0     		beq	.L44
 802 004a E4E7     		b	.L43
 803              	.LVL82:
 804              	.L45:
 320:Core/Src/bno055.c ****     }
 805              		.loc 1 320 16 view .LVU222
 806 004c 6FF07E00 		mvn	r0, #126
 807              	.LVL83:
 320:Core/Src/bno055.c ****     }
 808              		.loc 1 320 16 view .LVU223
 809 0050 F4E7     		b	.L42
 810              	.LVL84:
 811              	.L46:
 346:Core/Src/bno055.c ****         }
 812              		.loc 1 346 22 view .LVU224
 813 0052 4FF0FF30 		mov	r0, #-1
 814 0056 F1E7     		b	.L42
 815              	.L50:
 816              		.align	2
 817              	.L49:
 818 0058 00000000 		.word	.LANCHOR0
 819              		.cfi_endproc
 820              	.LFE4:
 822              		.section	.text.bno055_read_accel_rev_id,"ax",%progbits
 823              		.align	1
 824              		.global	bno055_read_accel_rev_id
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 829              	bno055_read_accel_rev_id:
 830              	.LVL85:
 831              	.LFB7:
 461:Core/Src/bno055.c **** 
 462:Core/Src/bno055.c **** /*!
 463:Core/Src/bno055.c ****  *  @brief This API reads accel revision id
 464:Core/Src/bno055.c ****  *  from register 0x01 it is a byte of value
 465:Core/Src/bno055.c ****  *
 466:Core/Src/bno055.c ****  *  @param accel_rev_id_u8 : The accel revision id 0xFB
 467:Core/Src/bno055.c ****  *
 468:Core/Src/bno055.c ****  *  @return results of bus communication function
 469:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 470:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 471:Core/Src/bno055.c ****  *
 472:Core/Src/bno055.c ****  *
 473:Core/Src/bno055.c ****  */
 474:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_rev_id(u8 *accel_rev_id_u8)
 475:Core/Src/bno055.c **** {
 832              		.loc 1 475 1 is_stmt 1 view -0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 8
 835              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccO72alg.s 			page 25


 836              		.loc 1 475 1 is_stmt 0 view .LVU226
 837 0000 70B5     		push	{r4, r5, r6, lr}
 838              	.LCFI21:
 839              		.cfi_def_cfa_offset 16
 840              		.cfi_offset 4, -16
 841              		.cfi_offset 5, -12
 842              		.cfi_offset 6, -8
 843              		.cfi_offset 14, -4
 844 0002 82B0     		sub	sp, sp, #8
 845              	.LCFI22:
 846              		.cfi_def_cfa_offset 24
 476:Core/Src/bno055.c ****     /* Variable used to return value of
 477:Core/Src/bno055.c ****      * communication routine*/
 478:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 847              		.loc 1 478 5 is_stmt 1 view .LVU227
 848              	.LVL86:
 479:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 849              		.loc 1 479 5 view .LVU228
 850              		.loc 1 479 8 is_stmt 0 view .LVU229
 851 0004 0023     		movs	r3, #0
 852 0006 8DF80730 		strb	r3, [sp, #7]
 480:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 853              		.loc 1 480 5 is_stmt 1 view .LVU230
 854              	.LVL87:
 481:Core/Src/bno055.c **** 
 482:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 483:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 855              		.loc 1 483 5 view .LVU231
 856              		.loc 1 483 18 is_stmt 0 view .LVU232
 857 000a 124B     		ldr	r3, .L59
 858 000c 1B68     		ldr	r3, [r3]
 859              		.loc 1 483 8 view .LVU233
 860 000e D3B1     		cbz	r3, .L55
 861 0010 0546     		mov	r5, r0
 484:Core/Src/bno055.c ****     {
 485:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 486:Core/Src/bno055.c ****     }
 487:Core/Src/bno055.c ****     else
 488:Core/Src/bno055.c ****     {
 489:Core/Src/bno055.c ****         /*condition check for page, chip id is
 490:Core/Src/bno055.c ****          * available in the page zero*/
 491:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 862              		.loc 1 491 9 is_stmt 1 view .LVU234
 863              		.loc 1 491 21 is_stmt 0 view .LVU235
 864 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 865              		.loc 1 491 12 view .LVU236
 866 0014 8BB9     		cbnz	r3, .L58
 867              	.LVL88:
 868              	.L53:
 492:Core/Src/bno055.c ****         {
 493:Core/Src/bno055.c ****             /* Write the page zero*/
 494:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 495:Core/Src/bno055.c ****         }
 496:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 869              		.loc 1 496 53 discriminator 1 view .LVU237
 870 0016 0F4B     		ldr	r3, .L59
 871 0018 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 26


 872 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 873              		.loc 1 496 41 discriminator 1 view .LVU238
 874 001c B3B9     		cbnz	r3, .L56
 875              	.L54:
 497:Core/Src/bno055.c ****         {
 498:Core/Src/bno055.c ****             /* Read the accel revision id */
 499:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 876              		.loc 1 499 13 is_stmt 1 view .LVU239
 877              		.loc 1 499 32 is_stmt 0 view .LVU240
 878 001e 0D4B     		ldr	r3, .L59
 879 0020 1C68     		ldr	r4, [r3]
 880 0022 2669     		ldr	r6, [r4, #16]
 881              		.loc 1 499 24 view .LVU241
 882 0024 0123     		movs	r3, #1
 883 0026 0DF10702 		add	r2, sp, #7
 884 002a 1946     		mov	r1, r3
 885 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 886 002e B047     		blx	r6
 887              	.LVL89:
 500:Core/Src/bno055.c ****                                                       BNO055_ACCEL_REV_ID_REG,
 501:Core/Src/bno055.c ****                                                       &data_u8,
 502:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 503:Core/Src/bno055.c ****             *accel_rev_id_u8 = data_u8;
 888              		.loc 1 503 13 is_stmt 1 view .LVU242
 889              		.loc 1 503 30 is_stmt 0 view .LVU243
 890 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 891 0034 2B70     		strb	r3, [r5]
 892              	.LVL90:
 893              	.L52:
 504:Core/Src/bno055.c ****         }
 505:Core/Src/bno055.c ****         else
 506:Core/Src/bno055.c ****         {
 507:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 508:Core/Src/bno055.c ****         }
 509:Core/Src/bno055.c ****     }
 510:Core/Src/bno055.c **** 
 511:Core/Src/bno055.c ****     return com_rslt;
 512:Core/Src/bno055.c **** }
 894              		.loc 1 512 1 view .LVU244
 895 0036 02B0     		add	sp, sp, #8
 896              	.LCFI23:
 897              		.cfi_remember_state
 898              		.cfi_def_cfa_offset 16
 899              		@ sp needed
 900 0038 70BD     		pop	{r4, r5, r6, pc}
 901              	.LVL91:
 902              	.L58:
 903              	.LCFI24:
 904              		.cfi_restore_state
 494:Core/Src/bno055.c ****         }
 905              		.loc 1 494 13 is_stmt 1 view .LVU245
 494:Core/Src/bno055.c ****         }
 906              		.loc 1 494 23 is_stmt 0 view .LVU246
 907 003a 0020     		movs	r0, #0
 908              	.LVL92:
 494:Core/Src/bno055.c ****         }
 909              		.loc 1 494 23 view .LVU247
ARM GAS  /tmp/ccO72alg.s 			page 27


 910 003c FFF7FEFF 		bl	bno055_write_page_id
 911              	.LVL93:
 496:Core/Src/bno055.c ****         {
 912              		.loc 1 496 9 is_stmt 1 view .LVU248
 496:Core/Src/bno055.c ****         {
 913              		.loc 1 496 12 is_stmt 0 view .LVU249
 914 0040 0028     		cmp	r0, #0
 915 0042 ECD0     		beq	.L54
 916 0044 E7E7     		b	.L53
 917              	.LVL94:
 918              	.L55:
 485:Core/Src/bno055.c ****     }
 919              		.loc 1 485 16 view .LVU250
 920 0046 6FF07E00 		mvn	r0, #126
 921              	.LVL95:
 485:Core/Src/bno055.c ****     }
 922              		.loc 1 485 16 view .LVU251
 923 004a F4E7     		b	.L52
 924              	.LVL96:
 925              	.L56:
 507:Core/Src/bno055.c ****         }
 926              		.loc 1 507 22 view .LVU252
 927 004c 4FF0FF30 		mov	r0, #-1
 928 0050 F1E7     		b	.L52
 929              	.L60:
 930 0052 00BF     		.align	2
 931              	.L59:
 932 0054 00000000 		.word	.LANCHOR0
 933              		.cfi_endproc
 934              	.LFE7:
 936              		.section	.text.bno055_read_mag_rev_id,"ax",%progbits
 937              		.align	1
 938              		.global	bno055_read_mag_rev_id
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 943              	bno055_read_mag_rev_id:
 944              	.LVL97:
 945              	.LFB8:
 513:Core/Src/bno055.c **** 
 514:Core/Src/bno055.c **** /*!
 515:Core/Src/bno055.c ****  *  @brief This API reads mag revision id
 516:Core/Src/bno055.c ****  *  from register 0x02 it is a byte of value
 517:Core/Src/bno055.c ****  *
 518:Core/Src/bno055.c ****  *  @param mag_rev_id_u8 : The mag revision id 0x32
 519:Core/Src/bno055.c ****  *
 520:Core/Src/bno055.c ****  *  @return results of bus communication function
 521:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 522:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 523:Core/Src/bno055.c ****  *
 524:Core/Src/bno055.c ****  *
 525:Core/Src/bno055.c ****  */
 526:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_rev_id(u8 *mag_rev_id_u8)
 527:Core/Src/bno055.c **** {
 946              		.loc 1 527 1 is_stmt 1 view -0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccO72alg.s 			page 28


 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		.loc 1 527 1 is_stmt 0 view .LVU254
 951 0000 70B5     		push	{r4, r5, r6, lr}
 952              	.LCFI25:
 953              		.cfi_def_cfa_offset 16
 954              		.cfi_offset 4, -16
 955              		.cfi_offset 5, -12
 956              		.cfi_offset 6, -8
 957              		.cfi_offset 14, -4
 958 0002 82B0     		sub	sp, sp, #8
 959              	.LCFI26:
 960              		.cfi_def_cfa_offset 24
 528:Core/Src/bno055.c ****     /* Variable used to return value of
 529:Core/Src/bno055.c ****      * communication routine*/
 530:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 961              		.loc 1 530 5 is_stmt 1 view .LVU255
 962              	.LVL98:
 531:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 963              		.loc 1 531 5 view .LVU256
 964              		.loc 1 531 8 is_stmt 0 view .LVU257
 965 0004 0023     		movs	r3, #0
 966 0006 8DF80730 		strb	r3, [sp, #7]
 532:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 967              		.loc 1 532 5 is_stmt 1 view .LVU258
 968              	.LVL99:
 533:Core/Src/bno055.c **** 
 534:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 535:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 969              		.loc 1 535 5 view .LVU259
 970              		.loc 1 535 18 is_stmt 0 view .LVU260
 971 000a 124B     		ldr	r3, .L69
 972 000c 1B68     		ldr	r3, [r3]
 973              		.loc 1 535 8 view .LVU261
 974 000e D3B1     		cbz	r3, .L65
 975 0010 0546     		mov	r5, r0
 536:Core/Src/bno055.c ****     {
 537:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 538:Core/Src/bno055.c ****     }
 539:Core/Src/bno055.c ****     else
 540:Core/Src/bno055.c ****     {
 541:Core/Src/bno055.c ****         /*condition check for page, chip id is
 542:Core/Src/bno055.c ****          * available in the page zero*/
 543:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 976              		.loc 1 543 9 is_stmt 1 view .LVU262
 977              		.loc 1 543 21 is_stmt 0 view .LVU263
 978 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 979              		.loc 1 543 12 view .LVU264
 980 0014 8BB9     		cbnz	r3, .L68
 981              	.LVL100:
 982              	.L63:
 544:Core/Src/bno055.c ****         {
 545:Core/Src/bno055.c ****             /* Write the page zero*/
 546:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 547:Core/Src/bno055.c ****         }
 548:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 983              		.loc 1 548 53 discriminator 1 view .LVU265
 984 0016 0F4B     		ldr	r3, .L69
ARM GAS  /tmp/ccO72alg.s 			page 29


 985 0018 1B68     		ldr	r3, [r3]
 986 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 987              		.loc 1 548 41 discriminator 1 view .LVU266
 988 001c B3B9     		cbnz	r3, .L66
 989              	.L64:
 549:Core/Src/bno055.c ****         {
 550:Core/Src/bno055.c ****             /* Read the mag revision id */
 551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 990              		.loc 1 551 13 is_stmt 1 view .LVU267
 991              		.loc 1 551 32 is_stmt 0 view .LVU268
 992 001e 0D4B     		ldr	r3, .L69
 993 0020 1C68     		ldr	r4, [r3]
 994 0022 2669     		ldr	r6, [r4, #16]
 995              		.loc 1 551 24 view .LVU269
 996 0024 0123     		movs	r3, #1
 997 0026 0DF10702 		add	r2, sp, #7
 998 002a 0221     		movs	r1, #2
 999 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1000 002e B047     		blx	r6
 1001              	.LVL101:
 552:Core/Src/bno055.c ****                                                       BNO055_MAG_REV_ID_REG,
 553:Core/Src/bno055.c ****                                                       &data_u8,
 554:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 555:Core/Src/bno055.c ****             *mag_rev_id_u8 = data_u8;
 1002              		.loc 1 555 13 is_stmt 1 view .LVU270
 1003              		.loc 1 555 28 is_stmt 0 view .LVU271
 1004 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1005 0034 2B70     		strb	r3, [r5]
 1006              	.LVL102:
 1007              	.L62:
 556:Core/Src/bno055.c ****         }
 557:Core/Src/bno055.c ****         else
 558:Core/Src/bno055.c ****         {
 559:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 560:Core/Src/bno055.c ****         }
 561:Core/Src/bno055.c ****     }
 562:Core/Src/bno055.c **** 
 563:Core/Src/bno055.c ****     return com_rslt;
 564:Core/Src/bno055.c **** }
 1008              		.loc 1 564 1 view .LVU272
 1009 0036 02B0     		add	sp, sp, #8
 1010              	.LCFI27:
 1011              		.cfi_remember_state
 1012              		.cfi_def_cfa_offset 16
 1013              		@ sp needed
 1014 0038 70BD     		pop	{r4, r5, r6, pc}
 1015              	.LVL103:
 1016              	.L68:
 1017              	.LCFI28:
 1018              		.cfi_restore_state
 546:Core/Src/bno055.c ****         }
 1019              		.loc 1 546 13 is_stmt 1 view .LVU273
 546:Core/Src/bno055.c ****         }
 1020              		.loc 1 546 23 is_stmt 0 view .LVU274
 1021 003a 0020     		movs	r0, #0
 1022              	.LVL104:
 546:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 30


 1023              		.loc 1 546 23 view .LVU275
 1024 003c FFF7FEFF 		bl	bno055_write_page_id
 1025              	.LVL105:
 548:Core/Src/bno055.c ****         {
 1026              		.loc 1 548 9 is_stmt 1 view .LVU276
 548:Core/Src/bno055.c ****         {
 1027              		.loc 1 548 12 is_stmt 0 view .LVU277
 1028 0040 0028     		cmp	r0, #0
 1029 0042 ECD0     		beq	.L64
 1030 0044 E7E7     		b	.L63
 1031              	.LVL106:
 1032              	.L65:
 537:Core/Src/bno055.c ****     }
 1033              		.loc 1 537 16 view .LVU278
 1034 0046 6FF07E00 		mvn	r0, #126
 1035              	.LVL107:
 537:Core/Src/bno055.c ****     }
 1036              		.loc 1 537 16 view .LVU279
 1037 004a F4E7     		b	.L62
 1038              	.LVL108:
 1039              	.L66:
 559:Core/Src/bno055.c ****         }
 1040              		.loc 1 559 22 view .LVU280
 1041 004c 4FF0FF30 		mov	r0, #-1
 1042 0050 F1E7     		b	.L62
 1043              	.L70:
 1044 0052 00BF     		.align	2
 1045              	.L69:
 1046 0054 00000000 		.word	.LANCHOR0
 1047              		.cfi_endproc
 1048              	.LFE8:
 1050              		.section	.text.bno055_read_gyro_rev_id,"ax",%progbits
 1051              		.align	1
 1052              		.global	bno055_read_gyro_rev_id
 1053              		.syntax unified
 1054              		.thumb
 1055              		.thumb_func
 1057              	bno055_read_gyro_rev_id:
 1058              	.LVL109:
 1059              	.LFB9:
 565:Core/Src/bno055.c **** 
 566:Core/Src/bno055.c **** /*!
 567:Core/Src/bno055.c ****  *  @brief This API reads gyro revision id
 568:Core/Src/bno055.c ****  *  from register 0x03 it is a byte of value
 569:Core/Src/bno055.c ****  *
 570:Core/Src/bno055.c ****  *  @param gyro_rev_id_u8 : The gyro revision id 0xF0
 571:Core/Src/bno055.c ****  *
 572:Core/Src/bno055.c ****  *
 573:Core/Src/bno055.c ****  *
 574:Core/Src/bno055.c ****  *  @return results of bus communication function
 575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 577:Core/Src/bno055.c ****  *
 578:Core/Src/bno055.c ****  *
 579:Core/Src/bno055.c ****  */
 580:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_rev_id(u8 *gyro_rev_id_u8)
 581:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 31


 1060              		.loc 1 581 1 is_stmt 1 view -0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 8
 1063              		@ frame_needed = 0, uses_anonymous_args = 0
 1064              		.loc 1 581 1 is_stmt 0 view .LVU282
 1065 0000 70B5     		push	{r4, r5, r6, lr}
 1066              	.LCFI29:
 1067              		.cfi_def_cfa_offset 16
 1068              		.cfi_offset 4, -16
 1069              		.cfi_offset 5, -12
 1070              		.cfi_offset 6, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              	.LCFI30:
 1074              		.cfi_def_cfa_offset 24
 582:Core/Src/bno055.c ****     /* Variable used to return value of
 583:Core/Src/bno055.c ****      * communication routine*/
 584:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1075              		.loc 1 584 5 is_stmt 1 view .LVU283
 1076              	.LVL110:
 585:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1077              		.loc 1 585 5 view .LVU284
 1078              		.loc 1 585 8 is_stmt 0 view .LVU285
 1079 0004 0023     		movs	r3, #0
 1080 0006 8DF80730 		strb	r3, [sp, #7]
 586:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1081              		.loc 1 586 5 is_stmt 1 view .LVU286
 1082              	.LVL111:
 587:Core/Src/bno055.c **** 
 588:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 589:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1083              		.loc 1 589 5 view .LVU287
 1084              		.loc 1 589 18 is_stmt 0 view .LVU288
 1085 000a 124B     		ldr	r3, .L79
 1086 000c 1B68     		ldr	r3, [r3]
 1087              		.loc 1 589 8 view .LVU289
 1088 000e D3B1     		cbz	r3, .L75
 1089 0010 0546     		mov	r5, r0
 590:Core/Src/bno055.c ****     {
 591:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 592:Core/Src/bno055.c ****     }
 593:Core/Src/bno055.c ****     else
 594:Core/Src/bno055.c ****     {
 595:Core/Src/bno055.c ****         /*condition check for page, chip id is
 596:Core/Src/bno055.c ****          * available in the page zero*/
 597:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1090              		.loc 1 597 9 is_stmt 1 view .LVU290
 1091              		.loc 1 597 21 is_stmt 0 view .LVU291
 1092 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1093              		.loc 1 597 12 view .LVU292
 1094 0014 8BB9     		cbnz	r3, .L78
 1095              	.LVL112:
 1096              	.L73:
 598:Core/Src/bno055.c ****         {
 599:Core/Src/bno055.c ****             /* Write the page zero*/
 600:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 601:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 32


 602:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1097              		.loc 1 602 53 discriminator 1 view .LVU293
 1098 0016 0F4B     		ldr	r3, .L79
 1099 0018 1B68     		ldr	r3, [r3]
 1100 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1101              		.loc 1 602 41 discriminator 1 view .LVU294
 1102 001c B3B9     		cbnz	r3, .L76
 1103              	.L74:
 603:Core/Src/bno055.c ****         {
 604:Core/Src/bno055.c ****             /* Read the gyro revision id */
 605:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1104              		.loc 1 605 13 is_stmt 1 view .LVU295
 1105              		.loc 1 605 32 is_stmt 0 view .LVU296
 1106 001e 0D4B     		ldr	r3, .L79
 1107 0020 1C68     		ldr	r4, [r3]
 1108 0022 2669     		ldr	r6, [r4, #16]
 1109              		.loc 1 605 24 view .LVU297
 1110 0024 0123     		movs	r3, #1
 1111 0026 0DF10702 		add	r2, sp, #7
 1112 002a 0321     		movs	r1, #3
 1113 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1114 002e B047     		blx	r6
 1115              	.LVL113:
 606:Core/Src/bno055.c ****                                                       BNO055_GYRO_REV_ID_REG,
 607:Core/Src/bno055.c ****                                                       &data_u8,
 608:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 609:Core/Src/bno055.c ****             *gyro_rev_id_u8 = data_u8;
 1116              		.loc 1 609 13 is_stmt 1 view .LVU298
 1117              		.loc 1 609 29 is_stmt 0 view .LVU299
 1118 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1119 0034 2B70     		strb	r3, [r5]
 1120              	.LVL114:
 1121              	.L72:
 610:Core/Src/bno055.c ****         }
 611:Core/Src/bno055.c ****         else
 612:Core/Src/bno055.c ****         {
 613:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 614:Core/Src/bno055.c ****         }
 615:Core/Src/bno055.c ****     }
 616:Core/Src/bno055.c **** 
 617:Core/Src/bno055.c ****     return com_rslt;
 618:Core/Src/bno055.c **** }
 1122              		.loc 1 618 1 view .LVU300
 1123 0036 02B0     		add	sp, sp, #8
 1124              	.LCFI31:
 1125              		.cfi_remember_state
 1126              		.cfi_def_cfa_offset 16
 1127              		@ sp needed
 1128 0038 70BD     		pop	{r4, r5, r6, pc}
 1129              	.LVL115:
 1130              	.L78:
 1131              	.LCFI32:
 1132              		.cfi_restore_state
 600:Core/Src/bno055.c ****         }
 1133              		.loc 1 600 13 is_stmt 1 view .LVU301
 600:Core/Src/bno055.c ****         }
 1134              		.loc 1 600 23 is_stmt 0 view .LVU302
ARM GAS  /tmp/ccO72alg.s 			page 33


 1135 003a 0020     		movs	r0, #0
 1136              	.LVL116:
 600:Core/Src/bno055.c ****         }
 1137              		.loc 1 600 23 view .LVU303
 1138 003c FFF7FEFF 		bl	bno055_write_page_id
 1139              	.LVL117:
 602:Core/Src/bno055.c ****         {
 1140              		.loc 1 602 9 is_stmt 1 view .LVU304
 602:Core/Src/bno055.c ****         {
 1141              		.loc 1 602 12 is_stmt 0 view .LVU305
 1142 0040 0028     		cmp	r0, #0
 1143 0042 ECD0     		beq	.L74
 1144 0044 E7E7     		b	.L73
 1145              	.LVL118:
 1146              	.L75:
 591:Core/Src/bno055.c ****     }
 1147              		.loc 1 591 16 view .LVU306
 1148 0046 6FF07E00 		mvn	r0, #126
 1149              	.LVL119:
 591:Core/Src/bno055.c ****     }
 1150              		.loc 1 591 16 view .LVU307
 1151 004a F4E7     		b	.L72
 1152              	.LVL120:
 1153              	.L76:
 613:Core/Src/bno055.c ****         }
 1154              		.loc 1 613 22 view .LVU308
 1155 004c 4FF0FF30 		mov	r0, #-1
 1156 0050 F1E7     		b	.L72
 1157              	.L80:
 1158 0052 00BF     		.align	2
 1159              	.L79:
 1160 0054 00000000 		.word	.LANCHOR0
 1161              		.cfi_endproc
 1162              	.LFE9:
 1164              		.section	.text.bno055_read_bl_rev_id,"ax",%progbits
 1165              		.align	1
 1166              		.global	bno055_read_bl_rev_id
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1171              	bno055_read_bl_rev_id:
 1172              	.LVL121:
 1173              	.LFB10:
 619:Core/Src/bno055.c **** 
 620:Core/Src/bno055.c **** /*!
 621:Core/Src/bno055.c ****  *  @brief This API used to read boot loader revision id
 622:Core/Src/bno055.c ****  *  from register 0x06 it is a byte of value
 623:Core/Src/bno055.c ****  *
 624:Core/Src/bno055.c ****  *  @param bl_rev_id_u8 : The boot loader revision id
 625:Core/Src/bno055.c ****  *
 626:Core/Src/bno055.c ****  *
 627:Core/Src/bno055.c ****  *  @return results of bus communication function
 628:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 629:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 630:Core/Src/bno055.c ****  *
 631:Core/Src/bno055.c ****  *
 632:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccO72alg.s 			page 34


 633:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_bl_rev_id(u8 *bl_rev_id_u8)
 634:Core/Src/bno055.c **** {
 1174              		.loc 1 634 1 is_stmt 1 view -0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 8
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              		.loc 1 634 1 is_stmt 0 view .LVU310
 1179 0000 70B5     		push	{r4, r5, r6, lr}
 1180              	.LCFI33:
 1181              		.cfi_def_cfa_offset 16
 1182              		.cfi_offset 4, -16
 1183              		.cfi_offset 5, -12
 1184              		.cfi_offset 6, -8
 1185              		.cfi_offset 14, -4
 1186 0002 82B0     		sub	sp, sp, #8
 1187              	.LCFI34:
 1188              		.cfi_def_cfa_offset 24
 635:Core/Src/bno055.c ****     /* Variable used to return value of
 636:Core/Src/bno055.c ****      * communication routine*/
 637:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1189              		.loc 1 637 5 is_stmt 1 view .LVU311
 1190              	.LVL122:
 638:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 1191              		.loc 1 638 5 view .LVU312
 1192              		.loc 1 638 8 is_stmt 0 view .LVU313
 1193 0004 0023     		movs	r3, #0
 1194 0006 8DF80730 		strb	r3, [sp, #7]
 639:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1195              		.loc 1 639 5 is_stmt 1 view .LVU314
 1196              	.LVL123:
 640:Core/Src/bno055.c **** 
 641:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 642:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1197              		.loc 1 642 5 view .LVU315
 1198              		.loc 1 642 18 is_stmt 0 view .LVU316
 1199 000a 124B     		ldr	r3, .L89
 1200 000c 1B68     		ldr	r3, [r3]
 1201              		.loc 1 642 8 view .LVU317
 1202 000e D3B1     		cbz	r3, .L85
 1203 0010 0546     		mov	r5, r0
 643:Core/Src/bno055.c ****     {
 644:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 645:Core/Src/bno055.c ****     }
 646:Core/Src/bno055.c ****     else
 647:Core/Src/bno055.c ****     {
 648:Core/Src/bno055.c ****         /*condition check for page, chip id is
 649:Core/Src/bno055.c ****          * available in the page zero*/
 650:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1204              		.loc 1 650 9 is_stmt 1 view .LVU318
 1205              		.loc 1 650 21 is_stmt 0 view .LVU319
 1206 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1207              		.loc 1 650 12 view .LVU320
 1208 0014 8BB9     		cbnz	r3, .L88
 1209              	.LVL124:
 1210              	.L83:
 651:Core/Src/bno055.c ****         {
 652:Core/Src/bno055.c ****             /* Write the page zero*/
ARM GAS  /tmp/ccO72alg.s 			page 35


 653:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 654:Core/Src/bno055.c ****         }
 655:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1211              		.loc 1 655 53 discriminator 1 view .LVU321
 1212 0016 0F4B     		ldr	r3, .L89
 1213 0018 1B68     		ldr	r3, [r3]
 1214 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1215              		.loc 1 655 41 discriminator 1 view .LVU322
 1216 001c B3B9     		cbnz	r3, .L86
 1217              	.L84:
 656:Core/Src/bno055.c ****         {
 657:Core/Src/bno055.c ****             /* Read the boot loader revision id */
 658:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1218              		.loc 1 658 13 is_stmt 1 view .LVU323
 1219              		.loc 1 658 32 is_stmt 0 view .LVU324
 1220 001e 0D4B     		ldr	r3, .L89
 1221 0020 1C68     		ldr	r4, [r3]
 1222 0022 2669     		ldr	r6, [r4, #16]
 1223              		.loc 1 658 24 view .LVU325
 1224 0024 0123     		movs	r3, #1
 1225 0026 0DF10702 		add	r2, sp, #7
 1226 002a 0621     		movs	r1, #6
 1227 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 1228 002e B047     		blx	r6
 1229              	.LVL125:
 659:Core/Src/bno055.c ****                                                       BNO055_BL_REV_ID_REG,
 660:Core/Src/bno055.c ****                                                       &data_u8,
 661:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
 662:Core/Src/bno055.c ****             *bl_rev_id_u8 = data_u8;
 1230              		.loc 1 662 13 is_stmt 1 view .LVU326
 1231              		.loc 1 662 27 is_stmt 0 view .LVU327
 1232 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 1233 0034 2B70     		strb	r3, [r5]
 1234              	.LVL126:
 1235              	.L82:
 663:Core/Src/bno055.c ****         }
 664:Core/Src/bno055.c ****         else
 665:Core/Src/bno055.c ****         {
 666:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 667:Core/Src/bno055.c ****         }
 668:Core/Src/bno055.c ****     }
 669:Core/Src/bno055.c **** 
 670:Core/Src/bno055.c ****     return com_rslt;
 671:Core/Src/bno055.c **** }
 1236              		.loc 1 671 1 view .LVU328
 1237 0036 02B0     		add	sp, sp, #8
 1238              	.LCFI35:
 1239              		.cfi_remember_state
 1240              		.cfi_def_cfa_offset 16
 1241              		@ sp needed
 1242 0038 70BD     		pop	{r4, r5, r6, pc}
 1243              	.LVL127:
 1244              	.L88:
 1245              	.LCFI36:
 1246              		.cfi_restore_state
 653:Core/Src/bno055.c ****         }
 1247              		.loc 1 653 13 is_stmt 1 view .LVU329
ARM GAS  /tmp/ccO72alg.s 			page 36


 653:Core/Src/bno055.c ****         }
 1248              		.loc 1 653 23 is_stmt 0 view .LVU330
 1249 003a 0020     		movs	r0, #0
 1250              	.LVL128:
 653:Core/Src/bno055.c ****         }
 1251              		.loc 1 653 23 view .LVU331
 1252 003c FFF7FEFF 		bl	bno055_write_page_id
 1253              	.LVL129:
 655:Core/Src/bno055.c ****         {
 1254              		.loc 1 655 9 is_stmt 1 view .LVU332
 655:Core/Src/bno055.c ****         {
 1255              		.loc 1 655 12 is_stmt 0 view .LVU333
 1256 0040 0028     		cmp	r0, #0
 1257 0042 ECD0     		beq	.L84
 1258 0044 E7E7     		b	.L83
 1259              	.LVL130:
 1260              	.L85:
 644:Core/Src/bno055.c ****     }
 1261              		.loc 1 644 16 view .LVU334
 1262 0046 6FF07E00 		mvn	r0, #126
 1263              	.LVL131:
 644:Core/Src/bno055.c ****     }
 1264              		.loc 1 644 16 view .LVU335
 1265 004a F4E7     		b	.L82
 1266              	.LVL132:
 1267              	.L86:
 666:Core/Src/bno055.c ****         }
 1268              		.loc 1 666 22 view .LVU336
 1269 004c 4FF0FF30 		mov	r0, #-1
 1270 0050 F1E7     		b	.L82
 1271              	.L90:
 1272 0052 00BF     		.align	2
 1273              	.L89:
 1274 0054 00000000 		.word	.LANCHOR0
 1275              		.cfi_endproc
 1276              	.LFE10:
 1278              		.section	.text.bno055_read_accel_x,"ax",%progbits
 1279              		.align	1
 1280              		.global	bno055_read_accel_x
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1285              	bno055_read_accel_x:
 1286              	.LVL133:
 1287              	.LFB11:
 672:Core/Src/bno055.c **** 
 673:Core/Src/bno055.c **** /*!
 674:Core/Src/bno055.c ****  *  @brief This API reads acceleration data X values
 675:Core/Src/bno055.c ****  *  from register 0x08 and 0x09 it is a two byte data
 676:Core/Src/bno055.c ****  *
 677:Core/Src/bno055.c ****  *
 678:Core/Src/bno055.c ****  *
 679:Core/Src/bno055.c ****  *
 680:Core/Src/bno055.c ****  *  @param accel_x_s16 : The X raw data
 681:Core/Src/bno055.c ****  *
 682:Core/Src/bno055.c ****  *
 683:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 37


 684:Core/Src/bno055.c ****  *  @return results of bus communication function
 685:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 686:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 687:Core/Src/bno055.c ****  *
 688:Core/Src/bno055.c ****  *
 689:Core/Src/bno055.c ****  */
 690:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_x(s16 *accel_x_s16)
 691:Core/Src/bno055.c **** {
 1288              		.loc 1 691 1 is_stmt 1 view -0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 8
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              		.loc 1 691 1 is_stmt 0 view .LVU338
 1293 0000 30B5     		push	{r4, r5, lr}
 1294              	.LCFI37:
 1295              		.cfi_def_cfa_offset 12
 1296              		.cfi_offset 4, -12
 1297              		.cfi_offset 5, -8
 1298              		.cfi_offset 14, -4
 1299 0002 83B0     		sub	sp, sp, #12
 1300              	.LCFI38:
 1301              		.cfi_def_cfa_offset 24
 692:Core/Src/bno055.c ****     /* Variable used to return value of
 693:Core/Src/bno055.c ****      * communication routine*/
 694:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1302              		.loc 1 694 5 is_stmt 1 view .LVU339
 1303              	.LVL134:
 695:Core/Src/bno055.c **** 
 696:Core/Src/bno055.c ****     /* Array holding the accel x value
 697:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x-LSB
 698:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x-MSB
 699:Core/Src/bno055.c ****      */
 700:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1304              		.loc 1 700 5 view .LVU340
 1305              		.loc 1 700 8 is_stmt 0 view .LVU341
 1306 0004 0023     		movs	r3, #0
 1307 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 701:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1308              		.loc 1 701 5 is_stmt 1 view .LVU342
 1309              	.LVL135:
 702:Core/Src/bno055.c **** 
 703:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 704:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1310              		.loc 1 704 5 view .LVU343
 1311              		.loc 1 704 18 is_stmt 0 view .LVU344
 1312 000a 134B     		ldr	r3, .L99
 1313 000c 1B68     		ldr	r3, [r3]
 1314              		.loc 1 704 8 view .LVU345
 1315 000e EBB1     		cbz	r3, .L95
 1316 0010 0446     		mov	r4, r0
 705:Core/Src/bno055.c ****     {
 706:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 707:Core/Src/bno055.c ****     }
 708:Core/Src/bno055.c ****     else
 709:Core/Src/bno055.c ****     {
 710:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1317              		.loc 1 710 9 is_stmt 1 view .LVU346
ARM GAS  /tmp/ccO72alg.s 			page 38


 1318              		.loc 1 710 21 is_stmt 0 view .LVU347
 1319 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1320              		.loc 1 710 12 view .LVU348
 1321 0014 A3B9     		cbnz	r3, .L98
 1322              	.LVL136:
 1323              	.L93:
 711:Core/Src/bno055.c ****         {
 712:Core/Src/bno055.c ****             /* Write the page zero*/
 713:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 714:Core/Src/bno055.c ****         }
 715:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1324              		.loc 1 715 53 discriminator 1 view .LVU349
 1325 0016 104B     		ldr	r3, .L99
 1326 0018 1B68     		ldr	r3, [r3]
 1327 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1328              		.loc 1 715 41 discriminator 1 view .LVU350
 1329 001c CBB9     		cbnz	r3, .L96
 1330              	.L94:
 716:Core/Src/bno055.c ****         {
 717:Core/Src/bno055.c ****             /* Read the accel x axis two byte value*/
 718:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1331              		.loc 1 718 13 is_stmt 1 view .LVU351
 1332              		.loc 1 718 32 is_stmt 0 view .LVU352
 1333 001e 0E4B     		ldr	r3, .L99
 1334 0020 1868     		ldr	r0, [r3]
 1335 0022 0569     		ldr	r5, [r0, #16]
 1336              		.loc 1 718 24 view .LVU353
 1337 0024 0223     		movs	r3, #2
 1338 0026 01AA     		add	r2, sp, #4
 1339 0028 0821     		movs	r1, #8
 1340 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1341 002c A847     		blx	r5
 1342              	.LVL137:
 719:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 720:Core/Src/bno055.c ****                                                       data_u8,
 721:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 722:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1343              		.loc 1 722 13 is_stmt 1 view .LVU354
 723:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_LSB_VALUEX);
 724:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1344              		.loc 1 724 13 view .LVU355
 725:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_X_MSB_VALUEX);
 726:Core/Src/bno055.c ****             *accel_x_s16 =
 1345              		.loc 1 726 13 view .LVU356
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1346              		.loc 1 727 30 is_stmt 0 view .LVU357
 1347 002e 9DF90520 		ldrsb	r2, [sp, #5]
 728:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1348              		.loc 1 728 31 view .LVU358
 1349 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 727:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1350              		.loc 1 727 17 view .LVU359
 1351 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 726:Core/Src/bno055.c ****                 (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_DATA_MSB])) << (BNO055_SHIFT_EIGHT_BITS)) |
 1352              		.loc 1 726 26 view .LVU360
 1353 003a 2380     		strh	r3, [r4]	@ movhi
 1354              	.LVL138:
ARM GAS  /tmp/ccO72alg.s 			page 39


 1355              	.L92:
 729:Core/Src/bno055.c ****         }
 730:Core/Src/bno055.c ****         else
 731:Core/Src/bno055.c ****         {
 732:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 733:Core/Src/bno055.c ****         }
 734:Core/Src/bno055.c ****     }
 735:Core/Src/bno055.c **** 
 736:Core/Src/bno055.c ****     return com_rslt;
 737:Core/Src/bno055.c **** }
 1356              		.loc 1 737 1 view .LVU361
 1357 003c 03B0     		add	sp, sp, #12
 1358              	.LCFI39:
 1359              		.cfi_remember_state
 1360              		.cfi_def_cfa_offset 12
 1361              		@ sp needed
 1362 003e 30BD     		pop	{r4, r5, pc}
 1363              	.LVL139:
 1364              	.L98:
 1365              	.LCFI40:
 1366              		.cfi_restore_state
 713:Core/Src/bno055.c ****         }
 1367              		.loc 1 713 13 is_stmt 1 view .LVU362
 713:Core/Src/bno055.c ****         }
 1368              		.loc 1 713 23 is_stmt 0 view .LVU363
 1369 0040 0020     		movs	r0, #0
 1370              	.LVL140:
 713:Core/Src/bno055.c ****         }
 1371              		.loc 1 713 23 view .LVU364
 1372 0042 FFF7FEFF 		bl	bno055_write_page_id
 1373              	.LVL141:
 715:Core/Src/bno055.c ****         {
 1374              		.loc 1 715 9 is_stmt 1 view .LVU365
 715:Core/Src/bno055.c ****         {
 1375              		.loc 1 715 12 is_stmt 0 view .LVU366
 1376 0046 0028     		cmp	r0, #0
 1377 0048 E9D0     		beq	.L94
 1378 004a E4E7     		b	.L93
 1379              	.LVL142:
 1380              	.L95:
 706:Core/Src/bno055.c ****     }
 1381              		.loc 1 706 16 view .LVU367
 1382 004c 6FF07E00 		mvn	r0, #126
 1383              	.LVL143:
 706:Core/Src/bno055.c ****     }
 1384              		.loc 1 706 16 view .LVU368
 1385 0050 F4E7     		b	.L92
 1386              	.LVL144:
 1387              	.L96:
 732:Core/Src/bno055.c ****         }
 1388              		.loc 1 732 22 view .LVU369
 1389 0052 4FF0FF30 		mov	r0, #-1
 1390 0056 F1E7     		b	.L92
 1391              	.L100:
 1392              		.align	2
 1393              	.L99:
 1394 0058 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 40


 1395              		.cfi_endproc
 1396              	.LFE11:
 1398              		.section	.text.bno055_read_accel_y,"ax",%progbits
 1399              		.align	1
 1400              		.global	bno055_read_accel_y
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1405              	bno055_read_accel_y:
 1406              	.LVL145:
 1407              	.LFB12:
 738:Core/Src/bno055.c **** 
 739:Core/Src/bno055.c **** /*!
 740:Core/Src/bno055.c ****  *  @brief This API reads acceleration data Y values
 741:Core/Src/bno055.c ****  *  from register 0x0A and 0x0B it is a two byte data
 742:Core/Src/bno055.c ****  *
 743:Core/Src/bno055.c ****  *
 744:Core/Src/bno055.c ****  *
 745:Core/Src/bno055.c ****  *
 746:Core/Src/bno055.c ****  *  @param accel_y_s16 : The Y raw data
 747:Core/Src/bno055.c ****  *
 748:Core/Src/bno055.c ****  *
 749:Core/Src/bno055.c ****  *
 750:Core/Src/bno055.c ****  *  @return results of bus communication function
 751:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 752:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 753:Core/Src/bno055.c ****  *
 754:Core/Src/bno055.c ****  *
 755:Core/Src/bno055.c ****  */
 756:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_y(s16 *accel_y_s16)
 757:Core/Src/bno055.c **** {
 1408              		.loc 1 757 1 is_stmt 1 view -0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 8
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		.loc 1 757 1 is_stmt 0 view .LVU371
 1413 0000 30B5     		push	{r4, r5, lr}
 1414              	.LCFI41:
 1415              		.cfi_def_cfa_offset 12
 1416              		.cfi_offset 4, -12
 1417              		.cfi_offset 5, -8
 1418              		.cfi_offset 14, -4
 1419 0002 83B0     		sub	sp, sp, #12
 1420              	.LCFI42:
 1421              		.cfi_def_cfa_offset 24
 758:Core/Src/bno055.c ****     /* Variable used to return value of
 759:Core/Src/bno055.c ****      * communication routine*/
 760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1422              		.loc 1 760 5 is_stmt 1 view .LVU372
 1423              	.LVL146:
 761:Core/Src/bno055.c **** 
 762:Core/Src/bno055.c ****     /* Array holding the accel y value
 763:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y-LSB
 764:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y-MSB
 765:Core/Src/bno055.c ****      */
 766:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1424              		.loc 1 766 5 view .LVU373
ARM GAS  /tmp/ccO72alg.s 			page 41


 1425              		.loc 1 766 8 is_stmt 0 view .LVU374
 1426 0004 0023     		movs	r3, #0
 1427 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 767:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1428              		.loc 1 767 5 is_stmt 1 view .LVU375
 1429              	.LVL147:
 768:Core/Src/bno055.c **** 
 769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1430              		.loc 1 770 5 view .LVU376
 1431              		.loc 1 770 18 is_stmt 0 view .LVU377
 1432 000a 134B     		ldr	r3, .L109
 1433 000c 1B68     		ldr	r3, [r3]
 1434              		.loc 1 770 8 view .LVU378
 1435 000e EBB1     		cbz	r3, .L105
 1436 0010 0446     		mov	r4, r0
 771:Core/Src/bno055.c ****     {
 772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 773:Core/Src/bno055.c ****     }
 774:Core/Src/bno055.c ****     else
 775:Core/Src/bno055.c ****     {
 776:Core/Src/bno055.c ****         /*condition check for page, chip id is
 777:Core/Src/bno055.c ****          * available in the page zero*/
 778:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1437              		.loc 1 778 9 is_stmt 1 view .LVU379
 1438              		.loc 1 778 21 is_stmt 0 view .LVU380
 1439 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1440              		.loc 1 778 12 view .LVU381
 1441 0014 A3B9     		cbnz	r3, .L108
 1442              	.LVL148:
 1443              	.L103:
 779:Core/Src/bno055.c ****         {
 780:Core/Src/bno055.c ****             /* Write the page zero*/
 781:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 782:Core/Src/bno055.c ****         }
 783:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1444              		.loc 1 783 53 discriminator 1 view .LVU382
 1445 0016 104B     		ldr	r3, .L109
 1446 0018 1B68     		ldr	r3, [r3]
 1447 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1448              		.loc 1 783 41 discriminator 1 view .LVU383
 1449 001c CBB9     		cbnz	r3, .L106
 1450              	.L104:
 784:Core/Src/bno055.c ****         {
 785:Core/Src/bno055.c ****             /* Read the accel y axis two byte value*/
 786:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1451              		.loc 1 786 13 is_stmt 1 view .LVU384
 1452              		.loc 1 786 32 is_stmt 0 view .LVU385
 1453 001e 0E4B     		ldr	r3, .L109
 1454 0020 1868     		ldr	r0, [r3]
 1455 0022 0569     		ldr	r5, [r0, #16]
 1456              		.loc 1 786 24 view .LVU386
 1457 0024 0223     		movs	r3, #2
 1458 0026 01AA     		add	r2, sp, #4
 1459 0028 0A21     		movs	r1, #10
 1460 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1461 002c A847     		blx	r5
ARM GAS  /tmp/ccO72alg.s 			page 42


 1462              	.LVL149:
 787:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Y_LSB_VALUEY_REG,
 788:Core/Src/bno055.c ****                                                       data_u8,
 789:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 790:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1463              		.loc 1 790 13 is_stmt 1 view .LVU387
 791:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_LSB_VALUEY);
 792:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1464              		.loc 1 792 13 view .LVU388
 793:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Y_MSB_VALUEY);
 794:Core/Src/bno055.c ****             *accel_y_s16 =
 1465              		.loc 1 794 13 view .LVU389
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1466              		.loc 1 795 31 is_stmt 0 view .LVU390
 1467 002e 9DF90520 		ldrsb	r2, [sp, #5]
 796:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1468              		.loc 1 796 31 view .LVU391
 1469 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 795:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1470              		.loc 1 795 17 view .LVU392
 1471 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 794:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1472              		.loc 1 794 26 view .LVU393
 1473 003a 2380     		strh	r3, [r4]	@ movhi
 1474              	.LVL150:
 1475              	.L102:
 797:Core/Src/bno055.c ****         }
 798:Core/Src/bno055.c ****         else
 799:Core/Src/bno055.c ****         {
 800:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 801:Core/Src/bno055.c ****         }
 802:Core/Src/bno055.c ****     }
 803:Core/Src/bno055.c **** 
 804:Core/Src/bno055.c ****     return com_rslt;
 805:Core/Src/bno055.c **** }
 1476              		.loc 1 805 1 view .LVU394
 1477 003c 03B0     		add	sp, sp, #12
 1478              	.LCFI43:
 1479              		.cfi_remember_state
 1480              		.cfi_def_cfa_offset 12
 1481              		@ sp needed
 1482 003e 30BD     		pop	{r4, r5, pc}
 1483              	.LVL151:
 1484              	.L108:
 1485              	.LCFI44:
 1486              		.cfi_restore_state
 781:Core/Src/bno055.c ****         }
 1487              		.loc 1 781 13 is_stmt 1 view .LVU395
 781:Core/Src/bno055.c ****         }
 1488              		.loc 1 781 23 is_stmt 0 view .LVU396
 1489 0040 0020     		movs	r0, #0
 1490              	.LVL152:
 781:Core/Src/bno055.c ****         }
 1491              		.loc 1 781 23 view .LVU397
 1492 0042 FFF7FEFF 		bl	bno055_write_page_id
 1493              	.LVL153:
 783:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 43


 1494              		.loc 1 783 9 is_stmt 1 view .LVU398
 783:Core/Src/bno055.c ****         {
 1495              		.loc 1 783 12 is_stmt 0 view .LVU399
 1496 0046 0028     		cmp	r0, #0
 1497 0048 E9D0     		beq	.L104
 1498 004a E4E7     		b	.L103
 1499              	.LVL154:
 1500              	.L105:
 772:Core/Src/bno055.c ****     }
 1501              		.loc 1 772 16 view .LVU400
 1502 004c 6FF07E00 		mvn	r0, #126
 1503              	.LVL155:
 772:Core/Src/bno055.c ****     }
 1504              		.loc 1 772 16 view .LVU401
 1505 0050 F4E7     		b	.L102
 1506              	.LVL156:
 1507              	.L106:
 800:Core/Src/bno055.c ****         }
 1508              		.loc 1 800 22 view .LVU402
 1509 0052 4FF0FF30 		mov	r0, #-1
 1510 0056 F1E7     		b	.L102
 1511              	.L110:
 1512              		.align	2
 1513              	.L109:
 1514 0058 00000000 		.word	.LANCHOR0
 1515              		.cfi_endproc
 1516              	.LFE12:
 1518              		.section	.text.bno055_read_accel_z,"ax",%progbits
 1519              		.align	1
 1520              		.global	bno055_read_accel_z
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1525              	bno055_read_accel_z:
 1526              	.LVL157:
 1527              	.LFB13:
 806:Core/Src/bno055.c **** 
 807:Core/Src/bno055.c **** /*!
 808:Core/Src/bno055.c ****  *  @brief This API reads acceleration data z values
 809:Core/Src/bno055.c ****  *  from register 0x0C and 0x0D it is a two byte data
 810:Core/Src/bno055.c ****  *
 811:Core/Src/bno055.c ****  *
 812:Core/Src/bno055.c ****  *
 813:Core/Src/bno055.c ****  *
 814:Core/Src/bno055.c ****  *  @param accel_z_s16 : The z raw data
 815:Core/Src/bno055.c ****  *
 816:Core/Src/bno055.c ****  *
 817:Core/Src/bno055.c ****  *
 818:Core/Src/bno055.c ****  *  @return results of bus communication function
 819:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 820:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 821:Core/Src/bno055.c ****  *
 822:Core/Src/bno055.c ****  *
 823:Core/Src/bno055.c ****  */
 824:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_z(s16 *accel_z_s16)
 825:Core/Src/bno055.c **** {
 1528              		.loc 1 825 1 is_stmt 1 view -0
ARM GAS  /tmp/ccO72alg.s 			page 44


 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 8
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532              		.loc 1 825 1 is_stmt 0 view .LVU404
 1533 0000 30B5     		push	{r4, r5, lr}
 1534              	.LCFI45:
 1535              		.cfi_def_cfa_offset 12
 1536              		.cfi_offset 4, -12
 1537              		.cfi_offset 5, -8
 1538              		.cfi_offset 14, -4
 1539 0002 83B0     		sub	sp, sp, #12
 1540              	.LCFI46:
 1541              		.cfi_def_cfa_offset 24
 826:Core/Src/bno055.c ****     /* Variable used to return value of
 827:Core/Src/bno055.c ****      * communication routine*/
 828:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1542              		.loc 1 828 5 is_stmt 1 view .LVU405
 1543              	.LVL158:
 829:Core/Src/bno055.c **** 
 830:Core/Src/bno055.c ****     /* Array holding the accel z value
 831:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z-LSB
 832:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z-MSB
 833:Core/Src/bno055.c ****      */
 834:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1544              		.loc 1 834 5 view .LVU406
 1545              		.loc 1 834 8 is_stmt 0 view .LVU407
 1546 0004 0023     		movs	r3, #0
 1547 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 835:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1548              		.loc 1 835 5 is_stmt 1 view .LVU408
 1549              	.LVL159:
 836:Core/Src/bno055.c **** 
 837:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 838:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1550              		.loc 1 838 5 view .LVU409
 1551              		.loc 1 838 18 is_stmt 0 view .LVU410
 1552 000a 134B     		ldr	r3, .L119
 1553 000c 1B68     		ldr	r3, [r3]
 1554              		.loc 1 838 8 view .LVU411
 1555 000e EBB1     		cbz	r3, .L115
 1556 0010 0446     		mov	r4, r0
 839:Core/Src/bno055.c ****     {
 840:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 841:Core/Src/bno055.c ****     }
 842:Core/Src/bno055.c ****     else
 843:Core/Src/bno055.c ****     {
 844:Core/Src/bno055.c ****         /*condition check for page, chip id is
 845:Core/Src/bno055.c ****          * available in the page zero*/
 846:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1557              		.loc 1 846 9 is_stmt 1 view .LVU412
 1558              		.loc 1 846 21 is_stmt 0 view .LVU413
 1559 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1560              		.loc 1 846 12 view .LVU414
 1561 0014 A3B9     		cbnz	r3, .L118
 1562              	.LVL160:
 1563              	.L113:
 847:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 45


 848:Core/Src/bno055.c ****             /* Write the page zero*/
 849:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 850:Core/Src/bno055.c ****         }
 851:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1564              		.loc 1 851 53 discriminator 1 view .LVU415
 1565 0016 104B     		ldr	r3, .L119
 1566 0018 1B68     		ldr	r3, [r3]
 1567 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1568              		.loc 1 851 41 discriminator 1 view .LVU416
 1569 001c CBB9     		cbnz	r3, .L116
 1570              	.L114:
 852:Core/Src/bno055.c ****         {
 853:Core/Src/bno055.c ****             /* Read the accel z axis two byte value*/
 854:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1571              		.loc 1 854 13 is_stmt 1 view .LVU417
 1572              		.loc 1 854 32 is_stmt 0 view .LVU418
 1573 001e 0E4B     		ldr	r3, .L119
 1574 0020 1868     		ldr	r0, [r3]
 1575 0022 0569     		ldr	r5, [r0, #16]
 1576              		.loc 1 854 24 view .LVU419
 1577 0024 0223     		movs	r3, #2
 1578 0026 01AA     		add	r2, sp, #4
 1579 0028 0C21     		movs	r1, #12
 1580 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1581 002c A847     		blx	r5
 1582              	.LVL161:
 855:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_Z_LSB_VALUEZ_REG,
 856:Core/Src/bno055.c ****                                                       data_u8,
 857:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
 858:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1583              		.loc 1 858 13 is_stmt 1 view .LVU420
 859:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_LSB_VALUEZ);
 860:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1584              		.loc 1 860 13 view .LVU421
 861:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_DATA_Z_MSB_VALUEZ);
 862:Core/Src/bno055.c ****             *accel_z_s16 =
 1585              		.loc 1 862 13 view .LVU422
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1586              		.loc 1 863 31 is_stmt 0 view .LVU423
 1587 002e 9DF90520 		ldrsb	r2, [sp, #5]
 864:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1588              		.loc 1 864 31 view .LVU424
 1589 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 863:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1590              		.loc 1 863 17 view .LVU425
 1591 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 862:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1592              		.loc 1 862 26 view .LVU426
 1593 003a 2380     		strh	r3, [r4]	@ movhi
 1594              	.LVL162:
 1595              	.L112:
 865:Core/Src/bno055.c ****         }
 866:Core/Src/bno055.c ****         else
 867:Core/Src/bno055.c ****         {
 868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 869:Core/Src/bno055.c ****         }
 870:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 46


 871:Core/Src/bno055.c **** 
 872:Core/Src/bno055.c ****     return com_rslt;
 873:Core/Src/bno055.c **** }
 1596              		.loc 1 873 1 view .LVU427
 1597 003c 03B0     		add	sp, sp, #12
 1598              	.LCFI47:
 1599              		.cfi_remember_state
 1600              		.cfi_def_cfa_offset 12
 1601              		@ sp needed
 1602 003e 30BD     		pop	{r4, r5, pc}
 1603              	.LVL163:
 1604              	.L118:
 1605              	.LCFI48:
 1606              		.cfi_restore_state
 849:Core/Src/bno055.c ****         }
 1607              		.loc 1 849 13 is_stmt 1 view .LVU428
 849:Core/Src/bno055.c ****         }
 1608              		.loc 1 849 23 is_stmt 0 view .LVU429
 1609 0040 0020     		movs	r0, #0
 1610              	.LVL164:
 849:Core/Src/bno055.c ****         }
 1611              		.loc 1 849 23 view .LVU430
 1612 0042 FFF7FEFF 		bl	bno055_write_page_id
 1613              	.LVL165:
 851:Core/Src/bno055.c ****         {
 1614              		.loc 1 851 9 is_stmt 1 view .LVU431
 851:Core/Src/bno055.c ****         {
 1615              		.loc 1 851 12 is_stmt 0 view .LVU432
 1616 0046 0028     		cmp	r0, #0
 1617 0048 E9D0     		beq	.L114
 1618 004a E4E7     		b	.L113
 1619              	.LVL166:
 1620              	.L115:
 840:Core/Src/bno055.c ****     }
 1621              		.loc 1 840 16 view .LVU433
 1622 004c 6FF07E00 		mvn	r0, #126
 1623              	.LVL167:
 840:Core/Src/bno055.c ****     }
 1624              		.loc 1 840 16 view .LVU434
 1625 0050 F4E7     		b	.L112
 1626              	.LVL168:
 1627              	.L116:
 868:Core/Src/bno055.c ****         }
 1628              		.loc 1 868 22 view .LVU435
 1629 0052 4FF0FF30 		mov	r0, #-1
 1630 0056 F1E7     		b	.L112
 1631              	.L120:
 1632              		.align	2
 1633              	.L119:
 1634 0058 00000000 		.word	.LANCHOR0
 1635              		.cfi_endproc
 1636              	.LFE13:
 1638              		.section	.text.bno055_read_accel_xyz,"ax",%progbits
 1639              		.align	1
 1640              		.global	bno055_read_accel_xyz
 1641              		.syntax unified
 1642              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 47


 1643              		.thumb_func
 1645              	bno055_read_accel_xyz:
 1646              	.LVL169:
 1647              	.LFB14:
 874:Core/Src/bno055.c **** 
 875:Core/Src/bno055.c **** /*!
 876:Core/Src/bno055.c ****  *  @brief This API reads acceleration data xyz values
 877:Core/Src/bno055.c ****  *  from register 0x08 to 0x0D it is a six byte data
 878:Core/Src/bno055.c ****  *
 879:Core/Src/bno055.c ****  *
 880:Core/Src/bno055.c ****  *  @param accel : The value of accel xyz data
 881:Core/Src/bno055.c ****  *
 882:Core/Src/bno055.c ****  *  Parameter |    result
 883:Core/Src/bno055.c ****  *  --------- | -----------------
 884:Core/Src/bno055.c ****  *   x        | The accel x data
 885:Core/Src/bno055.c ****  *   y        | The accel y data
 886:Core/Src/bno055.c ****  *   z        | The accel z data
 887:Core/Src/bno055.c ****  *
 888:Core/Src/bno055.c ****  *
 889:Core/Src/bno055.c ****  *
 890:Core/Src/bno055.c ****  *  @return results of bus communication function
 891:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 892:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 893:Core/Src/bno055.c ****  *
 894:Core/Src/bno055.c ****  */
 895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_xyz(struct bno055_accel_t *accel)
 896:Core/Src/bno055.c **** {
 1648              		.loc 1 896 1 is_stmt 1 view -0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 8
 1651              		@ frame_needed = 0, uses_anonymous_args = 0
 1652              		.loc 1 896 1 is_stmt 0 view .LVU437
 1653 0000 30B5     		push	{r4, r5, lr}
 1654              	.LCFI49:
 1655              		.cfi_def_cfa_offset 12
 1656              		.cfi_offset 4, -12
 1657              		.cfi_offset 5, -8
 1658              		.cfi_offset 14, -4
 1659 0002 83B0     		sub	sp, sp, #12
 1660              	.LCFI50:
 1661              		.cfi_def_cfa_offset 24
 1662 0004 0446     		mov	r4, r0
 897:Core/Src/bno055.c ****     /* Variable used to return value of
 898:Core/Src/bno055.c ****      * communication routine*/
 899:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1663              		.loc 1 899 5 is_stmt 1 view .LVU438
 1664              	.LVL170:
 900:Core/Src/bno055.c **** 
 901:Core/Src/bno055.c ****     /* Array holding the accel xyz value
 902:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
 903:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
 904:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
 905:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
 906:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
 907:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
 908:Core/Src/bno055.c ****      */
 909:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
ARM GAS  /tmp/ccO72alg.s 			page 48


 1665              		.loc 1 909 5 view .LVU439
 1666              		.loc 1 909 8 is_stmt 0 view .LVU440
 1667 0006 1D4B     		ldr	r3, .L129
 1668 0008 93E80300 		ldm	r3, {r0, r1}
 1669              	.LVL171:
 1670              		.loc 1 909 8 view .LVU441
 1671 000c 0090     		str	r0, [sp]
 1672 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
 910:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
 911:Core/Src/bno055.c ****     };
 912:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1673              		.loc 1 912 5 is_stmt 1 view .LVU442
 1674              	.LVL172:
 913:Core/Src/bno055.c **** 
 914:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
 915:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1675              		.loc 1 915 5 view .LVU443
 1676              		.loc 1 915 18 is_stmt 0 view .LVU444
 1677 0012 1B4B     		ldr	r3, .L129+4
 1678 0014 1B68     		ldr	r3, [r3]
 1679              		.loc 1 915 8 view .LVU445
 1680 0016 53B3     		cbz	r3, .L125
 916:Core/Src/bno055.c ****     {
 917:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
 918:Core/Src/bno055.c ****     }
 919:Core/Src/bno055.c ****     else
 920:Core/Src/bno055.c ****     {
 921:Core/Src/bno055.c ****         /*condition check for page, chip id is
 922:Core/Src/bno055.c ****          * available in the page zero*/
 923:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1681              		.loc 1 923 9 is_stmt 1 view .LVU446
 1682              		.loc 1 923 21 is_stmt 0 view .LVU447
 1683 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1684              		.loc 1 923 12 view .LVU448
 1685 001a 13BB     		cbnz	r3, .L128
 1686              	.LVL173:
 1687              	.L123:
 924:Core/Src/bno055.c ****         {
 925:Core/Src/bno055.c ****             /* Write the page zero*/
 926:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
 927:Core/Src/bno055.c ****         }
 928:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1688              		.loc 1 928 53 discriminator 1 view .LVU449
 1689 001c 184B     		ldr	r3, .L129+4
 1690 001e 1B68     		ldr	r3, [r3]
 1691 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1692              		.loc 1 928 41 discriminator 1 view .LVU450
 1693 0022 3BBB     		cbnz	r3, .L126
 1694              	.L124:
 929:Core/Src/bno055.c ****         {
 930:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1695              		.loc 1 930 13 is_stmt 1 view .LVU451
 1696              		.loc 1 930 32 is_stmt 0 view .LVU452
 1697 0024 164B     		ldr	r3, .L129+4
 1698 0026 1868     		ldr	r0, [r3]
 1699 0028 0569     		ldr	r5, [r0, #16]
 1700              		.loc 1 930 24 view .LVU453
ARM GAS  /tmp/ccO72alg.s 			page 49


 1701 002a 0623     		movs	r3, #6
 1702 002c 6A46     		mov	r2, sp
 1703 002e 0821     		movs	r1, #8
 1704 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1705 0032 A847     		blx	r5
 1706              	.LVL174:
 931:Core/Src/bno055.c ****                                                       BNO055_ACCEL_DATA_X_LSB_VALUEX_REG,
 932:Core/Src/bno055.c ****                                                       data_u8,
 933:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
 934:Core/Src/bno055.c **** 
 935:Core/Src/bno055.c ****             /* Data X*/
 936:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1707              		.loc 1 936 13 is_stmt 1 view .LVU454
 937:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_LSB_VAL
 938:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1708              		.loc 1 938 13 view .LVU455
 939:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_X_MSB_VAL
 940:Core/Src/bno055.c ****             accel->x =
 1709              		.loc 1 940 13 view .LVU456
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1710              		.loc 1 941 31 is_stmt 0 view .LVU457
 1711 0034 9DF90120 		ldrsb	r2, [sp, #1]
 942:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 1712              		.loc 1 942 31 view .LVU458
 1713 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 941:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1714              		.loc 1 941 17 view .LVU459
 1715 003c 43EA0223 		orr	r3, r3, r2, lsl #8
 940:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1716              		.loc 1 940 22 view .LVU460
 1717 0040 2380     		strh	r3, [r4]	@ movhi
 943:Core/Src/bno055.c **** 
 944:Core/Src/bno055.c ****             /* Data Y*/
 945:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1718              		.loc 1 945 13 is_stmt 1 view .LVU461
 946:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_LSB_VAL
 947:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1719              		.loc 1 947 13 view .LVU462
 948:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Y_MSB_VAL
 949:Core/Src/bno055.c ****             accel->y =
 1720              		.loc 1 949 13 view .LVU463
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1721              		.loc 1 950 31 is_stmt 0 view .LVU464
 1722 0042 9DF90320 		ldrsb	r2, [sp, #3]
 951:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 1723              		.loc 1 951 31 view .LVU465
 1724 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 950:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1725              		.loc 1 950 17 view .LVU466
 1726 004a 43EA0223 		orr	r3, r3, r2, lsl #8
 949:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1727              		.loc 1 949 22 view .LVU467
 1728 004e 6380     		strh	r3, [r4, #2]	@ movhi
 952:Core/Src/bno055.c **** 
 953:Core/Src/bno055.c ****             /* Data Z*/
 954:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1729              		.loc 1 954 13 is_stmt 1 view .LVU468
ARM GAS  /tmp/ccO72alg.s 			page 50


 955:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_LSB_VAL
 956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 1730              		.loc 1 956 13 view .LVU469
 957:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_DATA_Z_MSB_VAL
 958:Core/Src/bno055.c ****             accel->z =
 1731              		.loc 1 958 13 view .LVU470
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1732              		.loc 1 959 31 is_stmt 0 view .LVU471
 1733 0050 9DF90520 		ldrsb	r2, [sp, #5]
 960:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 1734              		.loc 1 960 31 view .LVU472
 1735 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 959:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1736              		.loc 1 959 17 view .LVU473
 1737 0058 43EA0223 		orr	r3, r3, r2, lsl #8
 958:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 1738              		.loc 1 958 22 view .LVU474
 1739 005c A380     		strh	r3, [r4, #4]	@ movhi
 1740              	.LVL175:
 1741              	.L122:
 961:Core/Src/bno055.c ****         }
 962:Core/Src/bno055.c ****         else
 963:Core/Src/bno055.c ****         {
 964:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 965:Core/Src/bno055.c ****         }
 966:Core/Src/bno055.c ****     }
 967:Core/Src/bno055.c **** 
 968:Core/Src/bno055.c ****     return com_rslt;
 969:Core/Src/bno055.c **** }
 1742              		.loc 1 969 1 view .LVU475
 1743 005e 03B0     		add	sp, sp, #12
 1744              	.LCFI51:
 1745              		.cfi_remember_state
 1746              		.cfi_def_cfa_offset 12
 1747              		@ sp needed
 1748 0060 30BD     		pop	{r4, r5, pc}
 1749              	.LVL176:
 1750              	.L128:
 1751              	.LCFI52:
 1752              		.cfi_restore_state
 926:Core/Src/bno055.c ****         }
 1753              		.loc 1 926 13 is_stmt 1 view .LVU476
 926:Core/Src/bno055.c ****         }
 1754              		.loc 1 926 23 is_stmt 0 view .LVU477
 1755 0062 0020     		movs	r0, #0
 1756 0064 FFF7FEFF 		bl	bno055_write_page_id
 1757              	.LVL177:
 928:Core/Src/bno055.c ****         {
 1758              		.loc 1 928 9 is_stmt 1 view .LVU478
 928:Core/Src/bno055.c ****         {
 1759              		.loc 1 928 12 is_stmt 0 view .LVU479
 1760 0068 0028     		cmp	r0, #0
 1761 006a DBD0     		beq	.L124
 1762 006c D6E7     		b	.L123
 1763              	.LVL178:
 1764              	.L125:
 917:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 51


 1765              		.loc 1 917 16 view .LVU480
 1766 006e 6FF07E00 		mvn	r0, #126
 1767 0072 F4E7     		b	.L122
 1768              	.LVL179:
 1769              	.L126:
 964:Core/Src/bno055.c ****         }
 1770              		.loc 1 964 22 view .LVU481
 1771 0074 4FF0FF30 		mov	r0, #-1
 1772 0078 F1E7     		b	.L122
 1773              	.L130:
 1774 007a 00BF     		.align	2
 1775              	.L129:
 1776 007c 00000000 		.word	.LANCHOR1
 1777 0080 00000000 		.word	.LANCHOR0
 1778              		.cfi_endproc
 1779              	.LFE14:
 1781              		.section	.text.bno055_read_mag_x,"ax",%progbits
 1782              		.align	1
 1783              		.global	bno055_read_mag_x
 1784              		.syntax unified
 1785              		.thumb
 1786              		.thumb_func
 1788              	bno055_read_mag_x:
 1789              	.LVL180:
 1790              	.LFB15:
 970:Core/Src/bno055.c **** 
 971:Core/Src/bno055.c **** /*!
 972:Core/Src/bno055.c ****  *  @brief This API reads mag data x values
 973:Core/Src/bno055.c ****  *  from register 0x0E and 0x0F it is a two byte data
 974:Core/Src/bno055.c ****  *
 975:Core/Src/bno055.c ****  *
 976:Core/Src/bno055.c ****  *
 977:Core/Src/bno055.c ****  *
 978:Core/Src/bno055.c ****  *  @param mag_x_s16 : The x raw data
 979:Core/Src/bno055.c ****  *
 980:Core/Src/bno055.c ****  *
 981:Core/Src/bno055.c ****  *
 982:Core/Src/bno055.c ****  *  @return results of bus communication function
 983:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
 984:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
 985:Core/Src/bno055.c ****  *
 986:Core/Src/bno055.c ****  *
 987:Core/Src/bno055.c ****  *
 988:Core/Src/bno055.c ****  */
 989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_x(s16 *mag_x_s16)
 990:Core/Src/bno055.c **** {
 1791              		.loc 1 990 1 is_stmt 1 view -0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 8
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              		.loc 1 990 1 is_stmt 0 view .LVU483
 1796 0000 30B5     		push	{r4, r5, lr}
 1797              	.LCFI53:
 1798              		.cfi_def_cfa_offset 12
 1799              		.cfi_offset 4, -12
 1800              		.cfi_offset 5, -8
 1801              		.cfi_offset 14, -4
ARM GAS  /tmp/ccO72alg.s 			page 52


 1802 0002 83B0     		sub	sp, sp, #12
 1803              	.LCFI54:
 1804              		.cfi_def_cfa_offset 24
 991:Core/Src/bno055.c ****     /* Variable used to return value of
 992:Core/Src/bno055.c ****      * communication routine*/
 993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1805              		.loc 1 993 5 is_stmt 1 view .LVU484
 1806              	.LVL181:
 994:Core/Src/bno055.c **** 
 995:Core/Src/bno055.c ****     /* Array holding the mag x value
 996:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
 997:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
 998:Core/Src/bno055.c ****      */
 999:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1807              		.loc 1 999 5 view .LVU485
 1808              		.loc 1 999 8 is_stmt 0 view .LVU486
 1809 0004 0023     		movs	r3, #0
 1810 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1000:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1811              		.loc 1 1000 5 is_stmt 1 view .LVU487
 1812              	.LVL182:
1001:Core/Src/bno055.c **** 
1002:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1003:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1813              		.loc 1 1003 5 view .LVU488
 1814              		.loc 1 1003 18 is_stmt 0 view .LVU489
 1815 000a 134B     		ldr	r3, .L139
 1816 000c 1B68     		ldr	r3, [r3]
 1817              		.loc 1 1003 8 view .LVU490
 1818 000e EBB1     		cbz	r3, .L135
 1819 0010 0446     		mov	r4, r0
1004:Core/Src/bno055.c ****     {
1005:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1006:Core/Src/bno055.c ****     }
1007:Core/Src/bno055.c ****     else
1008:Core/Src/bno055.c ****     {
1009:Core/Src/bno055.c ****         /*condition check for page, chip id is
1010:Core/Src/bno055.c ****          * available in the page zero*/
1011:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1820              		.loc 1 1011 9 is_stmt 1 view .LVU491
 1821              		.loc 1 1011 21 is_stmt 0 view .LVU492
 1822 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1823              		.loc 1 1011 12 view .LVU493
 1824 0014 A3B9     		cbnz	r3, .L138
 1825              	.LVL183:
 1826              	.L133:
1012:Core/Src/bno055.c ****         {
1013:Core/Src/bno055.c ****             /* Write the page zero*/
1014:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1015:Core/Src/bno055.c ****         }
1016:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1827              		.loc 1 1016 53 discriminator 1 view .LVU494
 1828 0016 104B     		ldr	r3, .L139
 1829 0018 1B68     		ldr	r3, [r3]
 1830 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1831              		.loc 1 1016 41 discriminator 1 view .LVU495
 1832 001c CBB9     		cbnz	r3, .L136
ARM GAS  /tmp/ccO72alg.s 			page 53


 1833              	.L134:
1017:Core/Src/bno055.c ****         {
1018:Core/Src/bno055.c ****             /*Read the mag x two bytes of data */
1019:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1834              		.loc 1 1019 13 is_stmt 1 view .LVU496
 1835              		.loc 1 1019 32 is_stmt 0 view .LVU497
 1836 001e 0E4B     		ldr	r3, .L139
 1837 0020 1868     		ldr	r0, [r3]
 1838 0022 0569     		ldr	r5, [r0, #16]
 1839              		.loc 1 1019 24 view .LVU498
 1840 0024 0223     		movs	r3, #2
 1841 0026 01AA     		add	r2, sp, #4
 1842 0028 0E21     		movs	r1, #14
 1843 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1844 002c A847     		blx	r5
 1845              	.LVL184:
1020:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1021:Core/Src/bno055.c ****                                                       data_u8,
1022:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1023:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1846              		.loc 1 1023 13 is_stmt 1 view .LVU499
1024:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_LSB_VALUEX);
1025:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1847              		.loc 1 1025 13 view .LVU500
1026:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_X_MSB_VALUEX);
1027:Core/Src/bno055.c ****             *mag_x_s16 =
 1848              		.loc 1 1027 13 view .LVU501
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1849              		.loc 1 1028 31 is_stmt 0 view .LVU502
 1850 002e 9DF90520 		ldrsb	r2, [sp, #5]
1029:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1851              		.loc 1 1029 31 view .LVU503
 1852 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1028:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1853              		.loc 1 1028 17 view .LVU504
 1854 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1027:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1855              		.loc 1 1027 24 view .LVU505
 1856 003a 2380     		strh	r3, [r4]	@ movhi
 1857              	.LVL185:
 1858              	.L132:
1030:Core/Src/bno055.c ****         }
1031:Core/Src/bno055.c ****         else
1032:Core/Src/bno055.c ****         {
1033:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1034:Core/Src/bno055.c ****         }
1035:Core/Src/bno055.c ****     }
1036:Core/Src/bno055.c **** 
1037:Core/Src/bno055.c ****     return com_rslt;
1038:Core/Src/bno055.c **** }
 1859              		.loc 1 1038 1 view .LVU506
 1860 003c 03B0     		add	sp, sp, #12
 1861              	.LCFI55:
 1862              		.cfi_remember_state
 1863              		.cfi_def_cfa_offset 12
 1864              		@ sp needed
 1865 003e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 54


 1866              	.LVL186:
 1867              	.L138:
 1868              	.LCFI56:
 1869              		.cfi_restore_state
1014:Core/Src/bno055.c ****         }
 1870              		.loc 1 1014 13 is_stmt 1 view .LVU507
1014:Core/Src/bno055.c ****         }
 1871              		.loc 1 1014 23 is_stmt 0 view .LVU508
 1872 0040 0020     		movs	r0, #0
 1873              	.LVL187:
1014:Core/Src/bno055.c ****         }
 1874              		.loc 1 1014 23 view .LVU509
 1875 0042 FFF7FEFF 		bl	bno055_write_page_id
 1876              	.LVL188:
1016:Core/Src/bno055.c ****         {
 1877              		.loc 1 1016 9 is_stmt 1 view .LVU510
1016:Core/Src/bno055.c ****         {
 1878              		.loc 1 1016 12 is_stmt 0 view .LVU511
 1879 0046 0028     		cmp	r0, #0
 1880 0048 E9D0     		beq	.L134
 1881 004a E4E7     		b	.L133
 1882              	.LVL189:
 1883              	.L135:
1005:Core/Src/bno055.c ****     }
 1884              		.loc 1 1005 16 view .LVU512
 1885 004c 6FF07E00 		mvn	r0, #126
 1886              	.LVL190:
1005:Core/Src/bno055.c ****     }
 1887              		.loc 1 1005 16 view .LVU513
 1888 0050 F4E7     		b	.L132
 1889              	.LVL191:
 1890              	.L136:
1033:Core/Src/bno055.c ****         }
 1891              		.loc 1 1033 22 view .LVU514
 1892 0052 4FF0FF30 		mov	r0, #-1
 1893 0056 F1E7     		b	.L132
 1894              	.L140:
 1895              		.align	2
 1896              	.L139:
 1897 0058 00000000 		.word	.LANCHOR0
 1898              		.cfi_endproc
 1899              	.LFE15:
 1901              		.section	.text.bno055_read_mag_y,"ax",%progbits
 1902              		.align	1
 1903              		.global	bno055_read_mag_y
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1908              	bno055_read_mag_y:
 1909              	.LVL192:
 1910              	.LFB16:
1039:Core/Src/bno055.c **** 
1040:Core/Src/bno055.c **** /*!
1041:Core/Src/bno055.c ****  *  @brief This API reads mag data y values
1042:Core/Src/bno055.c ****  *  from register 0x10 and 0x11 it is a two byte data
1043:Core/Src/bno055.c ****  *
1044:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 55


1045:Core/Src/bno055.c ****  *
1046:Core/Src/bno055.c ****  *
1047:Core/Src/bno055.c ****  *  @param mag_y_s16 : The y raw data
1048:Core/Src/bno055.c ****  *
1049:Core/Src/bno055.c ****  *
1050:Core/Src/bno055.c ****  *
1051:Core/Src/bno055.c ****  *  @return results of bus communication function
1052:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1053:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1054:Core/Src/bno055.c ****  *
1055:Core/Src/bno055.c ****  *
1056:Core/Src/bno055.c ****  */
1057:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_y(s16 *mag_y_s16)
1058:Core/Src/bno055.c **** {
 1911              		.loc 1 1058 1 is_stmt 1 view -0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 8
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		.loc 1 1058 1 is_stmt 0 view .LVU516
 1916 0000 30B5     		push	{r4, r5, lr}
 1917              	.LCFI57:
 1918              		.cfi_def_cfa_offset 12
 1919              		.cfi_offset 4, -12
 1920              		.cfi_offset 5, -8
 1921              		.cfi_offset 14, -4
 1922 0002 83B0     		sub	sp, sp, #12
 1923              	.LCFI58:
 1924              		.cfi_def_cfa_offset 24
1059:Core/Src/bno055.c ****     /* Variable used to return value of
1060:Core/Src/bno055.c ****      * communication routine*/
1061:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 1925              		.loc 1 1061 5 is_stmt 1 view .LVU517
 1926              	.LVL193:
1062:Core/Src/bno055.c **** 
1063:Core/Src/bno055.c ****     /* Array holding the mag y value
1064:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
1065:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
1066:Core/Src/bno055.c ****      */
1067:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 1927              		.loc 1 1067 5 view .LVU518
 1928              		.loc 1 1067 8 is_stmt 0 view .LVU519
 1929 0004 0023     		movs	r3, #0
 1930 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1068:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 1931              		.loc 1 1068 5 is_stmt 1 view .LVU520
 1932              	.LVL194:
1069:Core/Src/bno055.c **** 
1070:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1071:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 1933              		.loc 1 1071 5 view .LVU521
 1934              		.loc 1 1071 18 is_stmt 0 view .LVU522
 1935 000a 134B     		ldr	r3, .L149
 1936 000c 1B68     		ldr	r3, [r3]
 1937              		.loc 1 1071 8 view .LVU523
 1938 000e EBB1     		cbz	r3, .L145
 1939 0010 0446     		mov	r4, r0
1072:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 56


1073:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1074:Core/Src/bno055.c ****     }
1075:Core/Src/bno055.c ****     else
1076:Core/Src/bno055.c ****     {
1077:Core/Src/bno055.c ****         /*condition check for page, chip id is
1078:Core/Src/bno055.c ****          * available in the page zero*/
1079:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 1940              		.loc 1 1079 9 is_stmt 1 view .LVU524
 1941              		.loc 1 1079 21 is_stmt 0 view .LVU525
 1942 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1943              		.loc 1 1079 12 view .LVU526
 1944 0014 A3B9     		cbnz	r3, .L148
 1945              	.LVL195:
 1946              	.L143:
1080:Core/Src/bno055.c ****         {
1081:Core/Src/bno055.c ****             /* Write the page zero*/
1082:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1083:Core/Src/bno055.c ****         }
1084:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 1947              		.loc 1 1084 53 discriminator 1 view .LVU527
 1948 0016 104B     		ldr	r3, .L149
 1949 0018 1B68     		ldr	r3, [r3]
 1950 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1951              		.loc 1 1084 41 discriminator 1 view .LVU528
 1952 001c CBB9     		cbnz	r3, .L146
 1953              	.L144:
1085:Core/Src/bno055.c ****         {
1086:Core/Src/bno055.c ****             /*Read the mag y two bytes of data */
1087:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 1954              		.loc 1 1087 13 is_stmt 1 view .LVU529
 1955              		.loc 1 1087 32 is_stmt 0 view .LVU530
 1956 001e 0E4B     		ldr	r3, .L149
 1957 0020 1868     		ldr	r0, [r3]
 1958 0022 0569     		ldr	r5, [r0, #16]
 1959              		.loc 1 1087 24 view .LVU531
 1960 0024 0223     		movs	r3, #2
 1961 0026 01AA     		add	r2, sp, #4
 1962 0028 1021     		movs	r1, #16
 1963 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 1964 002c A847     		blx	r5
 1965              	.LVL196:
1088:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Y_LSB_VALUEY_REG,
1089:Core/Src/bno055.c ****                                                       data_u8,
1090:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1091:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 1966              		.loc 1 1091 13 is_stmt 1 view .LVU532
1092:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_LSB_VALUEY);
1093:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 1967              		.loc 1 1093 13 view .LVU533
1094:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Y_MSB_VALUEY);
1095:Core/Src/bno055.c ****             *mag_y_s16 =
 1968              		.loc 1 1095 13 view .LVU534
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1969              		.loc 1 1096 31 is_stmt 0 view .LVU535
 1970 002e 9DF90520 		ldrsb	r2, [sp, #5]
1097:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 1971              		.loc 1 1097 31 view .LVU536
ARM GAS  /tmp/ccO72alg.s 			page 57


 1972 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1096:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1973              		.loc 1 1096 17 view .LVU537
 1974 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1095:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 1975              		.loc 1 1095 24 view .LVU538
 1976 003a 2380     		strh	r3, [r4]	@ movhi
 1977              	.LVL197:
 1978              	.L142:
1098:Core/Src/bno055.c ****         }
1099:Core/Src/bno055.c ****         else
1100:Core/Src/bno055.c ****         {
1101:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1102:Core/Src/bno055.c ****         }
1103:Core/Src/bno055.c ****     }
1104:Core/Src/bno055.c **** 
1105:Core/Src/bno055.c ****     return com_rslt;
1106:Core/Src/bno055.c **** }
 1979              		.loc 1 1106 1 view .LVU539
 1980 003c 03B0     		add	sp, sp, #12
 1981              	.LCFI59:
 1982              		.cfi_remember_state
 1983              		.cfi_def_cfa_offset 12
 1984              		@ sp needed
 1985 003e 30BD     		pop	{r4, r5, pc}
 1986              	.LVL198:
 1987              	.L148:
 1988              	.LCFI60:
 1989              		.cfi_restore_state
1082:Core/Src/bno055.c ****         }
 1990              		.loc 1 1082 13 is_stmt 1 view .LVU540
1082:Core/Src/bno055.c ****         }
 1991              		.loc 1 1082 23 is_stmt 0 view .LVU541
 1992 0040 0020     		movs	r0, #0
 1993              	.LVL199:
1082:Core/Src/bno055.c ****         }
 1994              		.loc 1 1082 23 view .LVU542
 1995 0042 FFF7FEFF 		bl	bno055_write_page_id
 1996              	.LVL200:
1084:Core/Src/bno055.c ****         {
 1997              		.loc 1 1084 9 is_stmt 1 view .LVU543
1084:Core/Src/bno055.c ****         {
 1998              		.loc 1 1084 12 is_stmt 0 view .LVU544
 1999 0046 0028     		cmp	r0, #0
 2000 0048 E9D0     		beq	.L144
 2001 004a E4E7     		b	.L143
 2002              	.LVL201:
 2003              	.L145:
1073:Core/Src/bno055.c ****     }
 2004              		.loc 1 1073 16 view .LVU545
 2005 004c 6FF07E00 		mvn	r0, #126
 2006              	.LVL202:
1073:Core/Src/bno055.c ****     }
 2007              		.loc 1 1073 16 view .LVU546
 2008 0050 F4E7     		b	.L142
 2009              	.LVL203:
 2010              	.L146:
ARM GAS  /tmp/ccO72alg.s 			page 58


1101:Core/Src/bno055.c ****         }
 2011              		.loc 1 1101 22 view .LVU547
 2012 0052 4FF0FF30 		mov	r0, #-1
 2013 0056 F1E7     		b	.L142
 2014              	.L150:
 2015              		.align	2
 2016              	.L149:
 2017 0058 00000000 		.word	.LANCHOR0
 2018              		.cfi_endproc
 2019              	.LFE16:
 2021              		.section	.text.bno055_read_mag_z,"ax",%progbits
 2022              		.align	1
 2023              		.global	bno055_read_mag_z
 2024              		.syntax unified
 2025              		.thumb
 2026              		.thumb_func
 2028              	bno055_read_mag_z:
 2029              	.LVL204:
 2030              	.LFB17:
1107:Core/Src/bno055.c **** 
1108:Core/Src/bno055.c **** /*!
1109:Core/Src/bno055.c ****  *  @brief This API reads mag data z values
1110:Core/Src/bno055.c ****  *  from register 0x12 and 0x13 it is a two byte data
1111:Core/Src/bno055.c ****  *
1112:Core/Src/bno055.c ****  *
1113:Core/Src/bno055.c ****  *
1114:Core/Src/bno055.c ****  *
1115:Core/Src/bno055.c ****  *  @param mag_z_s16 : The z raw data
1116:Core/Src/bno055.c ****  *
1117:Core/Src/bno055.c ****  *
1118:Core/Src/bno055.c ****  *
1119:Core/Src/bno055.c ****  *  @return results of bus communication function
1120:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1121:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1122:Core/Src/bno055.c ****  *
1123:Core/Src/bno055.c ****  *
1124:Core/Src/bno055.c ****  *
1125:Core/Src/bno055.c ****  */
1126:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_z(s16 *mag_z_s16)
1127:Core/Src/bno055.c **** {
 2031              		.loc 1 1127 1 is_stmt 1 view -0
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 8
 2034              		@ frame_needed = 0, uses_anonymous_args = 0
 2035              		.loc 1 1127 1 is_stmt 0 view .LVU549
 2036 0000 30B5     		push	{r4, r5, lr}
 2037              	.LCFI61:
 2038              		.cfi_def_cfa_offset 12
 2039              		.cfi_offset 4, -12
 2040              		.cfi_offset 5, -8
 2041              		.cfi_offset 14, -4
 2042 0002 83B0     		sub	sp, sp, #12
 2043              	.LCFI62:
 2044              		.cfi_def_cfa_offset 24
1128:Core/Src/bno055.c ****     /* Variable used to return value of
1129:Core/Src/bno055.c ****      * communication routine*/
1130:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 59


 2045              		.loc 1 1130 5 is_stmt 1 view .LVU550
 2046              	.LVL205:
1131:Core/Src/bno055.c **** 
1132:Core/Src/bno055.c ****     /* Array holding the mag z value
1133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
1134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
1135:Core/Src/bno055.c ****      */
1136:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2047              		.loc 1 1136 5 view .LVU551
 2048              		.loc 1 1136 8 is_stmt 0 view .LVU552
 2049 0004 0023     		movs	r3, #0
 2050 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2051              		.loc 1 1137 5 is_stmt 1 view .LVU553
 2052              	.LVL206:
1138:Core/Src/bno055.c **** 
1139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2053              		.loc 1 1140 5 view .LVU554
 2054              		.loc 1 1140 18 is_stmt 0 view .LVU555
 2055 000a 134B     		ldr	r3, .L159
 2056 000c 1B68     		ldr	r3, [r3]
 2057              		.loc 1 1140 8 view .LVU556
 2058 000e EBB1     		cbz	r3, .L155
 2059 0010 0446     		mov	r4, r0
1141:Core/Src/bno055.c ****     {
1142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1143:Core/Src/bno055.c ****     }
1144:Core/Src/bno055.c ****     else
1145:Core/Src/bno055.c ****     {
1146:Core/Src/bno055.c ****         /*condition check for page, chip id is
1147:Core/Src/bno055.c ****          * available in the page zero*/
1148:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2060              		.loc 1 1148 9 is_stmt 1 view .LVU557
 2061              		.loc 1 1148 21 is_stmt 0 view .LVU558
 2062 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2063              		.loc 1 1148 12 view .LVU559
 2064 0014 A3B9     		cbnz	r3, .L158
 2065              	.LVL207:
 2066              	.L153:
1149:Core/Src/bno055.c ****         {
1150:Core/Src/bno055.c ****             /* Write the page zero*/
1151:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1152:Core/Src/bno055.c ****         }
1153:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2067              		.loc 1 1153 53 discriminator 1 view .LVU560
 2068 0016 104B     		ldr	r3, .L159
 2069 0018 1B68     		ldr	r3, [r3]
 2070 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2071              		.loc 1 1153 41 discriminator 1 view .LVU561
 2072 001c CBB9     		cbnz	r3, .L156
 2073              	.L154:
1154:Core/Src/bno055.c ****         {
1155:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2074              		.loc 1 1155 13 is_stmt 1 view .LVU562
 2075              		.loc 1 1155 32 is_stmt 0 view .LVU563
 2076 001e 0E4B     		ldr	r3, .L159
ARM GAS  /tmp/ccO72alg.s 			page 60


 2077 0020 1868     		ldr	r0, [r3]
 2078 0022 0569     		ldr	r5, [r0, #16]
 2079              		.loc 1 1155 24 view .LVU564
 2080 0024 0223     		movs	r3, #2
 2081 0026 01AA     		add	r2, sp, #4
 2082 0028 1221     		movs	r1, #18
 2083 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2084 002c A847     		blx	r5
 2085              	.LVL208:
1156:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_Z_LSB_VALUEZ_REG,
1157:Core/Src/bno055.c ****                                                       data_u8,
1158:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1159:Core/Src/bno055.c **** 
1160:Core/Src/bno055.c ****             /*Read the mag z two bytes of data */
1161:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2086              		.loc 1 1161 13 is_stmt 1 view .LVU565
1162:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_LSB_VALUEZ);
1163:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2087              		.loc 1 1163 13 view .LVU566
1164:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_Z_MSB_VALUEZ);
1165:Core/Src/bno055.c ****             *mag_z_s16 =
 2088              		.loc 1 1165 13 view .LVU567
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2089              		.loc 1 1166 31 is_stmt 0 view .LVU568
 2090 002e 9DF90520 		ldrsb	r2, [sp, #5]
1167:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2091              		.loc 1 1167 31 view .LVU569
 2092 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1166:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2093              		.loc 1 1166 17 view .LVU570
 2094 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1165:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2095              		.loc 1 1165 24 view .LVU571
 2096 003a 2380     		strh	r3, [r4]	@ movhi
 2097              	.LVL209:
 2098              	.L152:
1168:Core/Src/bno055.c ****         }
1169:Core/Src/bno055.c ****         else
1170:Core/Src/bno055.c ****         {
1171:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1172:Core/Src/bno055.c ****         }
1173:Core/Src/bno055.c ****     }
1174:Core/Src/bno055.c **** 
1175:Core/Src/bno055.c ****     return com_rslt;
1176:Core/Src/bno055.c **** }
 2099              		.loc 1 1176 1 view .LVU572
 2100 003c 03B0     		add	sp, sp, #12
 2101              	.LCFI63:
 2102              		.cfi_remember_state
 2103              		.cfi_def_cfa_offset 12
 2104              		@ sp needed
 2105 003e 30BD     		pop	{r4, r5, pc}
 2106              	.LVL210:
 2107              	.L158:
 2108              	.LCFI64:
 2109              		.cfi_restore_state
1151:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 61


 2110              		.loc 1 1151 13 is_stmt 1 view .LVU573
1151:Core/Src/bno055.c ****         }
 2111              		.loc 1 1151 23 is_stmt 0 view .LVU574
 2112 0040 0020     		movs	r0, #0
 2113              	.LVL211:
1151:Core/Src/bno055.c ****         }
 2114              		.loc 1 1151 23 view .LVU575
 2115 0042 FFF7FEFF 		bl	bno055_write_page_id
 2116              	.LVL212:
1153:Core/Src/bno055.c ****         {
 2117              		.loc 1 1153 9 is_stmt 1 view .LVU576
1153:Core/Src/bno055.c ****         {
 2118              		.loc 1 1153 12 is_stmt 0 view .LVU577
 2119 0046 0028     		cmp	r0, #0
 2120 0048 E9D0     		beq	.L154
 2121 004a E4E7     		b	.L153
 2122              	.LVL213:
 2123              	.L155:
1142:Core/Src/bno055.c ****     }
 2124              		.loc 1 1142 16 view .LVU578
 2125 004c 6FF07E00 		mvn	r0, #126
 2126              	.LVL214:
1142:Core/Src/bno055.c ****     }
 2127              		.loc 1 1142 16 view .LVU579
 2128 0050 F4E7     		b	.L152
 2129              	.LVL215:
 2130              	.L156:
1171:Core/Src/bno055.c ****         }
 2131              		.loc 1 1171 22 view .LVU580
 2132 0052 4FF0FF30 		mov	r0, #-1
 2133 0056 F1E7     		b	.L152
 2134              	.L160:
 2135              		.align	2
 2136              	.L159:
 2137 0058 00000000 		.word	.LANCHOR0
 2138              		.cfi_endproc
 2139              	.LFE17:
 2141              		.section	.text.bno055_read_mag_xyz,"ax",%progbits
 2142              		.align	1
 2143              		.global	bno055_read_mag_xyz
 2144              		.syntax unified
 2145              		.thumb
 2146              		.thumb_func
 2148              	bno055_read_mag_xyz:
 2149              	.LVL216:
 2150              	.LFB18:
1177:Core/Src/bno055.c **** 
1178:Core/Src/bno055.c **** /*!
1179:Core/Src/bno055.c ****  *  @brief This API reads mag data xyz values
1180:Core/Src/bno055.c ****  *  from register 0x0E to 0x13 it is a six byte data
1181:Core/Src/bno055.c ****  *
1182:Core/Src/bno055.c ****  *
1183:Core/Src/bno055.c ****  *  @param mag : The mag xyz values
1184:Core/Src/bno055.c ****  *
1185:Core/Src/bno055.c ****  *  Parameter |    result
1186:Core/Src/bno055.c ****  *  --------- | -----------------
1187:Core/Src/bno055.c ****  *   x        | The mag x data
ARM GAS  /tmp/ccO72alg.s 			page 62


1188:Core/Src/bno055.c ****  *   y        | The mag y data
1189:Core/Src/bno055.c ****  *   z        | The mag z data
1190:Core/Src/bno055.c ****  *
1191:Core/Src/bno055.c ****  *
1192:Core/Src/bno055.c ****  *
1193:Core/Src/bno055.c ****  *  @return results of bus communication function
1194:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1195:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1196:Core/Src/bno055.c ****  *
1197:Core/Src/bno055.c ****  */
1198:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_xyz(struct bno055_mag_t *mag)
1199:Core/Src/bno055.c **** {
 2151              		.loc 1 1199 1 is_stmt 1 view -0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 8
 2154              		@ frame_needed = 0, uses_anonymous_args = 0
 2155              		.loc 1 1199 1 is_stmt 0 view .LVU582
 2156 0000 30B5     		push	{r4, r5, lr}
 2157              	.LCFI65:
 2158              		.cfi_def_cfa_offset 12
 2159              		.cfi_offset 4, -12
 2160              		.cfi_offset 5, -8
 2161              		.cfi_offset 14, -4
 2162 0002 83B0     		sub	sp, sp, #12
 2163              	.LCFI66:
 2164              		.cfi_def_cfa_offset 24
 2165 0004 0446     		mov	r4, r0
1200:Core/Src/bno055.c ****     /* Variable used to return value of
1201:Core/Src/bno055.c ****      * communication routine*/
1202:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2166              		.loc 1 1202 5 is_stmt 1 view .LVU583
 2167              	.LVL217:
1203:Core/Src/bno055.c **** 
1204:Core/Src/bno055.c ****     /* Array holding the mag xyz value
1205:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1206:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1207:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
1208:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1209:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
1210:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1211:Core/Src/bno055.c ****      */
1212:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_XYZ_DATA_SIZE] = {
 2168              		.loc 1 1212 5 view .LVU584
 2169              		.loc 1 1212 8 is_stmt 0 view .LVU585
 2170 0006 1D4B     		ldr	r3, .L169
 2171 0008 93E80300 		ldm	r3, {r0, r1}
 2172              	.LVL218:
 2173              		.loc 1 1212 8 view .LVU586
 2174 000c 0090     		str	r0, [sp]
 2175 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1213:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1214:Core/Src/bno055.c ****     };
1215:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2176              		.loc 1 1215 5 is_stmt 1 view .LVU587
 2177              	.LVL219:
1216:Core/Src/bno055.c **** 
1217:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccO72alg.s 			page 63


1218:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2178              		.loc 1 1218 5 view .LVU588
 2179              		.loc 1 1218 18 is_stmt 0 view .LVU589
 2180 0012 1B4B     		ldr	r3, .L169+4
 2181 0014 1B68     		ldr	r3, [r3]
 2182              		.loc 1 1218 8 view .LVU590
 2183 0016 53B3     		cbz	r3, .L165
1219:Core/Src/bno055.c ****     {
1220:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1221:Core/Src/bno055.c ****     }
1222:Core/Src/bno055.c ****     else
1223:Core/Src/bno055.c ****     {
1224:Core/Src/bno055.c ****         /*condition check for page, chip id is
1225:Core/Src/bno055.c ****          * available in the page zero*/
1226:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2184              		.loc 1 1226 9 is_stmt 1 view .LVU591
 2185              		.loc 1 1226 21 is_stmt 0 view .LVU592
 2186 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2187              		.loc 1 1226 12 view .LVU593
 2188 001a 13BB     		cbnz	r3, .L168
 2189              	.LVL220:
 2190              	.L163:
1227:Core/Src/bno055.c ****         {
1228:Core/Src/bno055.c ****             /* Write the page zero*/
1229:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1230:Core/Src/bno055.c ****         }
1231:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2191              		.loc 1 1231 53 discriminator 1 view .LVU594
 2192 001c 184B     		ldr	r3, .L169+4
 2193 001e 1B68     		ldr	r3, [r3]
 2194 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2195              		.loc 1 1231 41 discriminator 1 view .LVU595
 2196 0022 3BBB     		cbnz	r3, .L166
 2197              	.L164:
1232:Core/Src/bno055.c ****         {
1233:Core/Src/bno055.c ****             /*Read the six byte value of mag xyz*/
1234:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2198              		.loc 1 1234 13 is_stmt 1 view .LVU596
 2199              		.loc 1 1234 32 is_stmt 0 view .LVU597
 2200 0024 164B     		ldr	r3, .L169+4
 2201 0026 1868     		ldr	r0, [r3]
 2202 0028 0569     		ldr	r5, [r0, #16]
 2203              		.loc 1 1234 24 view .LVU598
 2204 002a 0623     		movs	r3, #6
 2205 002c 6A46     		mov	r2, sp
 2206 002e 0E21     		movs	r1, #14
 2207 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2208 0032 A847     		blx	r5
 2209              	.LVL221:
1235:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_X_LSB_VALUEX_REG,
1236:Core/Src/bno055.c ****                                                       data_u8,
1237:Core/Src/bno055.c ****                                                       BNO055_MAG_XYZ_DATA_SIZE);
1238:Core/Src/bno055.c **** 
1239:Core/Src/bno055.c ****             /* Data X*/
1240:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2210              		.loc 1 1240 13 is_stmt 1 view .LVU599
1241:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_LSB_VALUE
ARM GAS  /tmp/ccO72alg.s 			page 64


1242:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2211              		.loc 1 1242 13 view .LVU600
1243:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_X_MSB_VALUE
1244:Core/Src/bno055.c ****             mag->x =
 2212              		.loc 1 1244 13 view .LVU601
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2213              		.loc 1 1245 31 is_stmt 0 view .LVU602
 2214 0034 9DF90120 		ldrsb	r2, [sp, #1]
1246:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2215              		.loc 1 1246 31 view .LVU603
 2216 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1245:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2217              		.loc 1 1245 17 view .LVU604
 2218 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1244:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2219              		.loc 1 1244 20 view .LVU605
 2220 0040 2380     		strh	r3, [r4]	@ movhi
1247:Core/Src/bno055.c **** 
1248:Core/Src/bno055.c ****             /* Data Y*/
1249:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2221              		.loc 1 1249 13 is_stmt 1 view .LVU606
1250:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_LSB_VALUE
1251:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2222              		.loc 1 1251 13 view .LVU607
1252:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Y_MSB_VALUE
1253:Core/Src/bno055.c ****             mag->y =
 2223              		.loc 1 1253 13 view .LVU608
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2224              		.loc 1 1254 31 is_stmt 0 view .LVU609
 2225 0042 9DF90320 		ldrsb	r2, [sp, #3]
1255:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2226              		.loc 1 1255 31 view .LVU610
 2227 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1254:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2228              		.loc 1 1254 17 view .LVU611
 2229 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1253:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2230              		.loc 1 1253 20 view .LVU612
 2231 004e 6380     		strh	r3, [r4, #2]	@ movhi
1256:Core/Src/bno055.c **** 
1257:Core/Src/bno055.c ****             /* Data Z*/
1258:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2232              		.loc 1 1258 13 is_stmt 1 view .LVU613
1259:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_LSB_VALUE
1260:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2233              		.loc 1 1260 13 view .LVU614
1261:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_Z_MSB_VALUE
1262:Core/Src/bno055.c ****             mag->z =
 2234              		.loc 1 1262 13 view .LVU615
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2235              		.loc 1 1263 31 is_stmt 0 view .LVU616
 2236 0050 9DF90520 		ldrsb	r2, [sp, #5]
1264:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2237              		.loc 1 1264 31 view .LVU617
 2238 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1263:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2239              		.loc 1 1263 17 view .LVU618
ARM GAS  /tmp/ccO72alg.s 			page 65


 2240 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1262:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2241              		.loc 1 1262 20 view .LVU619
 2242 005c A380     		strh	r3, [r4, #4]	@ movhi
 2243              	.LVL222:
 2244              	.L162:
1265:Core/Src/bno055.c ****         }
1266:Core/Src/bno055.c ****         else
1267:Core/Src/bno055.c ****         {
1268:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1269:Core/Src/bno055.c ****         }
1270:Core/Src/bno055.c ****     }
1271:Core/Src/bno055.c **** 
1272:Core/Src/bno055.c ****     return com_rslt;
1273:Core/Src/bno055.c **** }
 2245              		.loc 1 1273 1 view .LVU620
 2246 005e 03B0     		add	sp, sp, #12
 2247              	.LCFI67:
 2248              		.cfi_remember_state
 2249              		.cfi_def_cfa_offset 12
 2250              		@ sp needed
 2251 0060 30BD     		pop	{r4, r5, pc}
 2252              	.LVL223:
 2253              	.L168:
 2254              	.LCFI68:
 2255              		.cfi_restore_state
1229:Core/Src/bno055.c ****         }
 2256              		.loc 1 1229 13 is_stmt 1 view .LVU621
1229:Core/Src/bno055.c ****         }
 2257              		.loc 1 1229 23 is_stmt 0 view .LVU622
 2258 0062 0020     		movs	r0, #0
 2259 0064 FFF7FEFF 		bl	bno055_write_page_id
 2260              	.LVL224:
1231:Core/Src/bno055.c ****         {
 2261              		.loc 1 1231 9 is_stmt 1 view .LVU623
1231:Core/Src/bno055.c ****         {
 2262              		.loc 1 1231 12 is_stmt 0 view .LVU624
 2263 0068 0028     		cmp	r0, #0
 2264 006a DBD0     		beq	.L164
 2265 006c D6E7     		b	.L163
 2266              	.LVL225:
 2267              	.L165:
1220:Core/Src/bno055.c ****     }
 2268              		.loc 1 1220 16 view .LVU625
 2269 006e 6FF07E00 		mvn	r0, #126
 2270 0072 F4E7     		b	.L162
 2271              	.LVL226:
 2272              	.L166:
1268:Core/Src/bno055.c ****         }
 2273              		.loc 1 1268 22 view .LVU626
 2274 0074 4FF0FF30 		mov	r0, #-1
 2275 0078 F1E7     		b	.L162
 2276              	.L170:
 2277 007a 00BF     		.align	2
 2278              	.L169:
 2279 007c 00000000 		.word	.LANCHOR1
 2280 0080 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 66


 2281              		.cfi_endproc
 2282              	.LFE18:
 2284              		.section	.text.bno055_read_gyro_x,"ax",%progbits
 2285              		.align	1
 2286              		.global	bno055_read_gyro_x
 2287              		.syntax unified
 2288              		.thumb
 2289              		.thumb_func
 2291              	bno055_read_gyro_x:
 2292              	.LVL227:
 2293              	.LFB19:
1274:Core/Src/bno055.c **** 
1275:Core/Src/bno055.c **** /*!
1276:Core/Src/bno055.c ****  *  @brief This API reads gyro data x values
1277:Core/Src/bno055.c ****  *  from register 0x14 and 0x15 it is a two byte data
1278:Core/Src/bno055.c ****  *
1279:Core/Src/bno055.c ****  *
1280:Core/Src/bno055.c ****  *
1281:Core/Src/bno055.c ****  *
1282:Core/Src/bno055.c ****  *  @param gyro_x_s16 : The x raw data
1283:Core/Src/bno055.c ****  *
1284:Core/Src/bno055.c ****  *
1285:Core/Src/bno055.c ****  *
1286:Core/Src/bno055.c ****  *  @return results of bus communication function
1287:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1288:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1289:Core/Src/bno055.c ****  *
1290:Core/Src/bno055.c ****  *
1291:Core/Src/bno055.c ****  */
1292:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_x(s16 *gyro_x_s16)
1293:Core/Src/bno055.c **** {
 2294              		.loc 1 1293 1 is_stmt 1 view -0
 2295              		.cfi_startproc
 2296              		@ args = 0, pretend = 0, frame = 8
 2297              		@ frame_needed = 0, uses_anonymous_args = 0
 2298              		.loc 1 1293 1 is_stmt 0 view .LVU628
 2299 0000 30B5     		push	{r4, r5, lr}
 2300              	.LCFI69:
 2301              		.cfi_def_cfa_offset 12
 2302              		.cfi_offset 4, -12
 2303              		.cfi_offset 5, -8
 2304              		.cfi_offset 14, -4
 2305 0002 83B0     		sub	sp, sp, #12
 2306              	.LCFI70:
 2307              		.cfi_def_cfa_offset 24
1294:Core/Src/bno055.c ****     /* Variable used to return value of
1295:Core/Src/bno055.c ****      * communication routine*/
1296:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2308              		.loc 1 1296 5 is_stmt 1 view .LVU629
 2309              	.LVL228:
1297:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2310              		.loc 1 1297 5 view .LVU630
 2311              		.loc 1 1297 8 is_stmt 0 view .LVU631
 2312 0004 0023     		movs	r3, #0
 2313 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1298:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2314              		.loc 1 1298 5 is_stmt 1 view .LVU632
ARM GAS  /tmp/ccO72alg.s 			page 67


 2315              	.LVL229:
1299:Core/Src/bno055.c **** 
1300:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1301:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2316              		.loc 1 1301 5 view .LVU633
 2317              		.loc 1 1301 18 is_stmt 0 view .LVU634
 2318 000a 134B     		ldr	r3, .L179
 2319 000c 1B68     		ldr	r3, [r3]
 2320              		.loc 1 1301 8 view .LVU635
 2321 000e EBB1     		cbz	r3, .L175
 2322 0010 0446     		mov	r4, r0
1302:Core/Src/bno055.c ****     {
1303:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1304:Core/Src/bno055.c ****     }
1305:Core/Src/bno055.c ****     else
1306:Core/Src/bno055.c ****     {
1307:Core/Src/bno055.c ****         /*condition check for page, chip id is
1308:Core/Src/bno055.c ****          * available in the page zero*/
1309:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2323              		.loc 1 1309 9 is_stmt 1 view .LVU636
 2324              		.loc 1 1309 21 is_stmt 0 view .LVU637
 2325 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2326              		.loc 1 1309 12 view .LVU638
 2327 0014 A3B9     		cbnz	r3, .L178
 2328              	.LVL230:
 2329              	.L173:
1310:Core/Src/bno055.c ****         {
1311:Core/Src/bno055.c ****             /* Write the page zero*/
1312:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1313:Core/Src/bno055.c ****         }
1314:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2330              		.loc 1 1314 53 discriminator 1 view .LVU639
 2331 0016 104B     		ldr	r3, .L179
 2332 0018 1B68     		ldr	r3, [r3]
 2333 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2334              		.loc 1 1314 41 discriminator 1 view .LVU640
 2335 001c CBB9     		cbnz	r3, .L176
 2336              	.L174:
1315:Core/Src/bno055.c ****         {
1316:Core/Src/bno055.c ****             /* Read the gyro 16 bit x value*/
1317:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2337              		.loc 1 1317 13 is_stmt 1 view .LVU641
 2338              		.loc 1 1317 32 is_stmt 0 view .LVU642
 2339 001e 0E4B     		ldr	r3, .L179
 2340 0020 1868     		ldr	r0, [r3]
 2341 0022 0569     		ldr	r5, [r0, #16]
 2342              		.loc 1 1317 24 view .LVU643
 2343 0024 0223     		movs	r3, #2
 2344 0026 01AA     		add	r2, sp, #4
 2345 0028 1421     		movs	r1, #20
 2346 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2347 002c A847     		blx	r5
 2348              	.LVL231:
1318:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1319:Core/Src/bno055.c ****                                                       data_u8,
1320:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1321:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
ARM GAS  /tmp/ccO72alg.s 			page 68


 2349              		.loc 1 1321 13 is_stmt 1 view .LVU644
1322:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_LSB_VALUEX);
1323:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2350              		.loc 1 1323 13 view .LVU645
1324:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_X_MSB_VALUEX);
1325:Core/Src/bno055.c ****             *gyro_x_s16 =
 2351              		.loc 1 1325 13 view .LVU646
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2352              		.loc 1 1326 31 is_stmt 0 view .LVU647
 2353 002e 9DF90520 		ldrsb	r2, [sp, #5]
1327:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2354              		.loc 1 1327 31 view .LVU648
 2355 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1326:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2356              		.loc 1 1326 17 view .LVU649
 2357 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1325:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2358              		.loc 1 1325 25 view .LVU650
 2359 003a 2380     		strh	r3, [r4]	@ movhi
 2360              	.LVL232:
 2361              	.L172:
1328:Core/Src/bno055.c ****         }
1329:Core/Src/bno055.c ****         else
1330:Core/Src/bno055.c ****         {
1331:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1332:Core/Src/bno055.c ****         }
1333:Core/Src/bno055.c ****     }
1334:Core/Src/bno055.c **** 
1335:Core/Src/bno055.c ****     return com_rslt;
1336:Core/Src/bno055.c **** }
 2362              		.loc 1 1336 1 view .LVU651
 2363 003c 03B0     		add	sp, sp, #12
 2364              	.LCFI71:
 2365              		.cfi_remember_state
 2366              		.cfi_def_cfa_offset 12
 2367              		@ sp needed
 2368 003e 30BD     		pop	{r4, r5, pc}
 2369              	.LVL233:
 2370              	.L178:
 2371              	.LCFI72:
 2372              		.cfi_restore_state
1312:Core/Src/bno055.c ****         }
 2373              		.loc 1 1312 13 is_stmt 1 view .LVU652
1312:Core/Src/bno055.c ****         }
 2374              		.loc 1 1312 23 is_stmt 0 view .LVU653
 2375 0040 0020     		movs	r0, #0
 2376              	.LVL234:
1312:Core/Src/bno055.c ****         }
 2377              		.loc 1 1312 23 view .LVU654
 2378 0042 FFF7FEFF 		bl	bno055_write_page_id
 2379              	.LVL235:
1314:Core/Src/bno055.c ****         {
 2380              		.loc 1 1314 9 is_stmt 1 view .LVU655
1314:Core/Src/bno055.c ****         {
 2381              		.loc 1 1314 12 is_stmt 0 view .LVU656
 2382 0046 0028     		cmp	r0, #0
 2383 0048 E9D0     		beq	.L174
ARM GAS  /tmp/ccO72alg.s 			page 69


 2384 004a E4E7     		b	.L173
 2385              	.LVL236:
 2386              	.L175:
1303:Core/Src/bno055.c ****     }
 2387              		.loc 1 1303 16 view .LVU657
 2388 004c 6FF07E00 		mvn	r0, #126
 2389              	.LVL237:
1303:Core/Src/bno055.c ****     }
 2390              		.loc 1 1303 16 view .LVU658
 2391 0050 F4E7     		b	.L172
 2392              	.LVL238:
 2393              	.L176:
1331:Core/Src/bno055.c ****         }
 2394              		.loc 1 1331 22 view .LVU659
 2395 0052 4FF0FF30 		mov	r0, #-1
 2396 0056 F1E7     		b	.L172
 2397              	.L180:
 2398              		.align	2
 2399              	.L179:
 2400 0058 00000000 		.word	.LANCHOR0
 2401              		.cfi_endproc
 2402              	.LFE19:
 2404              		.section	.text.bno055_read_gyro_y,"ax",%progbits
 2405              		.align	1
 2406              		.global	bno055_read_gyro_y
 2407              		.syntax unified
 2408              		.thumb
 2409              		.thumb_func
 2411              	bno055_read_gyro_y:
 2412              	.LVL239:
 2413              	.LFB20:
1337:Core/Src/bno055.c **** 
1338:Core/Src/bno055.c **** /*!
1339:Core/Src/bno055.c ****  *  @brief This API reads gyro data y values
1340:Core/Src/bno055.c ****  *  from register 0x16 and 0x17 it is a two byte data
1341:Core/Src/bno055.c ****  *
1342:Core/Src/bno055.c ****  *
1343:Core/Src/bno055.c ****  *
1344:Core/Src/bno055.c ****  *
1345:Core/Src/bno055.c ****  *  @param gyro_y_s16 : The y raw data
1346:Core/Src/bno055.c ****  *
1347:Core/Src/bno055.c ****  *
1348:Core/Src/bno055.c ****  *
1349:Core/Src/bno055.c ****  *  @return results of bus communication function
1350:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1351:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1352:Core/Src/bno055.c ****  *
1353:Core/Src/bno055.c ****  *
1354:Core/Src/bno055.c ****  */
1355:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_y(s16 *gyro_y_s16)
1356:Core/Src/bno055.c **** {
 2414              		.loc 1 1356 1 is_stmt 1 view -0
 2415              		.cfi_startproc
 2416              		@ args = 0, pretend = 0, frame = 8
 2417              		@ frame_needed = 0, uses_anonymous_args = 0
 2418              		.loc 1 1356 1 is_stmt 0 view .LVU661
 2419 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccO72alg.s 			page 70


 2420              	.LCFI73:
 2421              		.cfi_def_cfa_offset 12
 2422              		.cfi_offset 4, -12
 2423              		.cfi_offset 5, -8
 2424              		.cfi_offset 14, -4
 2425 0002 83B0     		sub	sp, sp, #12
 2426              	.LCFI74:
 2427              		.cfi_def_cfa_offset 24
1357:Core/Src/bno055.c ****     /* Variable used to return value of
1358:Core/Src/bno055.c ****      * communication routine*/
1359:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2428              		.loc 1 1359 5 is_stmt 1 view .LVU662
 2429              	.LVL240:
1360:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2430              		.loc 1 1360 5 view .LVU663
 2431              		.loc 1 1360 8 is_stmt 0 view .LVU664
 2432 0004 0023     		movs	r3, #0
 2433 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1361:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2434              		.loc 1 1361 5 is_stmt 1 view .LVU665
 2435              	.LVL241:
1362:Core/Src/bno055.c **** 
1363:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1364:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2436              		.loc 1 1364 5 view .LVU666
 2437              		.loc 1 1364 18 is_stmt 0 view .LVU667
 2438 000a 134B     		ldr	r3, .L189
 2439 000c 1B68     		ldr	r3, [r3]
 2440              		.loc 1 1364 8 view .LVU668
 2441 000e EBB1     		cbz	r3, .L185
 2442 0010 0446     		mov	r4, r0
1365:Core/Src/bno055.c ****     {
1366:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1367:Core/Src/bno055.c ****     }
1368:Core/Src/bno055.c ****     else
1369:Core/Src/bno055.c ****     {
1370:Core/Src/bno055.c ****         /*condition check for page, chip id is
1371:Core/Src/bno055.c ****          * available in the page zero*/
1372:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2443              		.loc 1 1372 9 is_stmt 1 view .LVU669
 2444              		.loc 1 1372 21 is_stmt 0 view .LVU670
 2445 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2446              		.loc 1 1372 12 view .LVU671
 2447 0014 A3B9     		cbnz	r3, .L188
 2448              	.LVL242:
 2449              	.L183:
1373:Core/Src/bno055.c ****         {
1374:Core/Src/bno055.c ****             /* Write the page zero*/
1375:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1376:Core/Src/bno055.c ****         }
1377:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2450              		.loc 1 1377 53 discriminator 1 view .LVU672
 2451 0016 104B     		ldr	r3, .L189
 2452 0018 1B68     		ldr	r3, [r3]
 2453 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2454              		.loc 1 1377 41 discriminator 1 view .LVU673
 2455 001c CBB9     		cbnz	r3, .L186
ARM GAS  /tmp/ccO72alg.s 			page 71


 2456              	.L184:
1378:Core/Src/bno055.c ****         {
1379:Core/Src/bno055.c ****             /* Read the value of gyro y */
1380:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2457              		.loc 1 1380 13 is_stmt 1 view .LVU674
 2458              		.loc 1 1380 32 is_stmt 0 view .LVU675
 2459 001e 0E4B     		ldr	r3, .L189
 2460 0020 1868     		ldr	r0, [r3]
 2461 0022 0569     		ldr	r5, [r0, #16]
 2462              		.loc 1 1380 24 view .LVU676
 2463 0024 0223     		movs	r3, #2
 2464 0026 01AA     		add	r2, sp, #4
 2465 0028 1621     		movs	r1, #22
 2466 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2467 002c A847     		blx	r5
 2468              	.LVL243:
1381:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Y_LSB_VALUEY_REG,
1382:Core/Src/bno055.c ****                                                       data_u8,
1383:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1384:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2469              		.loc 1 1384 13 is_stmt 1 view .LVU677
1385:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_LSB_VALUEY);
1386:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2470              		.loc 1 1386 13 view .LVU678
1387:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Y_MSB_VALUEY);
1388:Core/Src/bno055.c ****             *gyro_y_s16 =
 2471              		.loc 1 1388 13 view .LVU679
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2472              		.loc 1 1389 31 is_stmt 0 view .LVU680
 2473 002e 9DF90520 		ldrsb	r2, [sp, #5]
1390:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2474              		.loc 1 1390 31 view .LVU681
 2475 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1389:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2476              		.loc 1 1389 17 view .LVU682
 2477 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1388:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2478              		.loc 1 1388 25 view .LVU683
 2479 003a 2380     		strh	r3, [r4]	@ movhi
 2480              	.LVL244:
 2481              	.L182:
1391:Core/Src/bno055.c ****         }
1392:Core/Src/bno055.c ****         else
1393:Core/Src/bno055.c ****         {
1394:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1395:Core/Src/bno055.c ****         }
1396:Core/Src/bno055.c ****     }
1397:Core/Src/bno055.c **** 
1398:Core/Src/bno055.c ****     return com_rslt;
1399:Core/Src/bno055.c **** }
 2482              		.loc 1 1399 1 view .LVU684
 2483 003c 03B0     		add	sp, sp, #12
 2484              	.LCFI75:
 2485              		.cfi_remember_state
 2486              		.cfi_def_cfa_offset 12
 2487              		@ sp needed
 2488 003e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 72


 2489              	.LVL245:
 2490              	.L188:
 2491              	.LCFI76:
 2492              		.cfi_restore_state
1375:Core/Src/bno055.c ****         }
 2493              		.loc 1 1375 13 is_stmt 1 view .LVU685
1375:Core/Src/bno055.c ****         }
 2494              		.loc 1 1375 23 is_stmt 0 view .LVU686
 2495 0040 0020     		movs	r0, #0
 2496              	.LVL246:
1375:Core/Src/bno055.c ****         }
 2497              		.loc 1 1375 23 view .LVU687
 2498 0042 FFF7FEFF 		bl	bno055_write_page_id
 2499              	.LVL247:
1377:Core/Src/bno055.c ****         {
 2500              		.loc 1 1377 9 is_stmt 1 view .LVU688
1377:Core/Src/bno055.c ****         {
 2501              		.loc 1 1377 12 is_stmt 0 view .LVU689
 2502 0046 0028     		cmp	r0, #0
 2503 0048 E9D0     		beq	.L184
 2504 004a E4E7     		b	.L183
 2505              	.LVL248:
 2506              	.L185:
1366:Core/Src/bno055.c ****     }
 2507              		.loc 1 1366 16 view .LVU690
 2508 004c 6FF07E00 		mvn	r0, #126
 2509              	.LVL249:
1366:Core/Src/bno055.c ****     }
 2510              		.loc 1 1366 16 view .LVU691
 2511 0050 F4E7     		b	.L182
 2512              	.LVL250:
 2513              	.L186:
1394:Core/Src/bno055.c ****         }
 2514              		.loc 1 1394 22 view .LVU692
 2515 0052 4FF0FF30 		mov	r0, #-1
 2516 0056 F1E7     		b	.L182
 2517              	.L190:
 2518              		.align	2
 2519              	.L189:
 2520 0058 00000000 		.word	.LANCHOR0
 2521              		.cfi_endproc
 2522              	.LFE20:
 2524              		.section	.text.bno055_read_gyro_z,"ax",%progbits
 2525              		.align	1
 2526              		.global	bno055_read_gyro_z
 2527              		.syntax unified
 2528              		.thumb
 2529              		.thumb_func
 2531              	bno055_read_gyro_z:
 2532              	.LVL251:
 2533              	.LFB21:
1400:Core/Src/bno055.c **** 
1401:Core/Src/bno055.c **** /*!
1402:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1403:Core/Src/bno055.c ****  *  from register 0x18 and 0x19 it is a two byte data
1404:Core/Src/bno055.c ****  *
1405:Core/Src/bno055.c ****  *  @param gyro_z_s16 : The z raw data
ARM GAS  /tmp/ccO72alg.s 			page 73


1406:Core/Src/bno055.c ****  *
1407:Core/Src/bno055.c ****  *  @return results of bus communication function
1408:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1409:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1410:Core/Src/bno055.c ****  *
1411:Core/Src/bno055.c ****  *
1412:Core/Src/bno055.c ****  */
1413:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_z(s16 *gyro_z_s16)
1414:Core/Src/bno055.c **** {
 2534              		.loc 1 1414 1 is_stmt 1 view -0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 8
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              		.loc 1 1414 1 is_stmt 0 view .LVU694
 2539 0000 30B5     		push	{r4, r5, lr}
 2540              	.LCFI77:
 2541              		.cfi_def_cfa_offset 12
 2542              		.cfi_offset 4, -12
 2543              		.cfi_offset 5, -8
 2544              		.cfi_offset 14, -4
 2545 0002 83B0     		sub	sp, sp, #12
 2546              	.LCFI78:
 2547              		.cfi_def_cfa_offset 24
1415:Core/Src/bno055.c ****     /* Variable used to return value of
1416:Core/Src/bno055.c ****      * communication routine*/
1417:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2548              		.loc 1 1417 5 is_stmt 1 view .LVU695
 2549              	.LVL252:
1418:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2550              		.loc 1 1418 5 view .LVU696
 2551              		.loc 1 1418 8 is_stmt 0 view .LVU697
 2552 0004 0023     		movs	r3, #0
 2553 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1419:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2554              		.loc 1 1419 5 is_stmt 1 view .LVU698
 2555              	.LVL253:
1420:Core/Src/bno055.c **** 
1421:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1422:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2556              		.loc 1 1422 5 view .LVU699
 2557              		.loc 1 1422 18 is_stmt 0 view .LVU700
 2558 000a 134B     		ldr	r3, .L199
 2559 000c 1B68     		ldr	r3, [r3]
 2560              		.loc 1 1422 8 view .LVU701
 2561 000e EBB1     		cbz	r3, .L195
 2562 0010 0446     		mov	r4, r0
1423:Core/Src/bno055.c ****     {
1424:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1425:Core/Src/bno055.c ****     }
1426:Core/Src/bno055.c ****     else
1427:Core/Src/bno055.c ****     {
1428:Core/Src/bno055.c ****         /*condition check for page, chip id is
1429:Core/Src/bno055.c ****          * available in the page zero*/
1430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2563              		.loc 1 1430 9 is_stmt 1 view .LVU702
 2564              		.loc 1 1430 21 is_stmt 0 view .LVU703
 2565 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 74


 2566              		.loc 1 1430 12 view .LVU704
 2567 0014 A3B9     		cbnz	r3, .L198
 2568              	.LVL254:
 2569              	.L193:
1431:Core/Src/bno055.c ****         {
1432:Core/Src/bno055.c ****             /* Write the page zero*/
1433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1434:Core/Src/bno055.c ****         }
1435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2570              		.loc 1 1435 53 discriminator 1 view .LVU705
 2571 0016 104B     		ldr	r3, .L199
 2572 0018 1B68     		ldr	r3, [r3]
 2573 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2574              		.loc 1 1435 41 discriminator 1 view .LVU706
 2575 001c CBB9     		cbnz	r3, .L196
 2576              	.L194:
1436:Core/Src/bno055.c ****         {
1437:Core/Src/bno055.c ****             /* Read the gyro z 16 bit value*/
1438:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2577              		.loc 1 1438 13 is_stmt 1 view .LVU707
 2578              		.loc 1 1438 32 is_stmt 0 view .LVU708
 2579 001e 0E4B     		ldr	r3, .L199
 2580 0020 1868     		ldr	r0, [r3]
 2581 0022 0569     		ldr	r5, [r0, #16]
 2582              		.loc 1 1438 24 view .LVU709
 2583 0024 0223     		movs	r3, #2
 2584 0026 01AA     		add	r2, sp, #4
 2585 0028 1821     		movs	r1, #24
 2586 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2587 002c A847     		blx	r5
 2588              	.LVL255:
1439:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_Z_LSB_VALUEZ_REG,
1440:Core/Src/bno055.c ****                                                       data_u8,
1441:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1442:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 2589              		.loc 1 1442 13 is_stmt 1 view .LVU710
1443:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_LSB_VALUEZ);
1444:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 2590              		.loc 1 1444 13 view .LVU711
1445:Core/Src/bno055.c ****                                                                   BNO055_GYRO_DATA_Z_MSB_VALUEZ);
1446:Core/Src/bno055.c ****             *gyro_z_s16 =
 2591              		.loc 1 1446 13 view .LVU712
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2592              		.loc 1 1447 31 is_stmt 0 view .LVU713
 2593 002e 9DF90520 		ldrsb	r2, [sp, #5]
1448:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 2594              		.loc 1 1448 31 view .LVU714
 2595 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1447:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2596              		.loc 1 1447 17 view .LVU715
 2597 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1446:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 2598              		.loc 1 1446 25 view .LVU716
 2599 003a 2380     		strh	r3, [r4]	@ movhi
 2600              	.LVL256:
 2601              	.L192:
1449:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 75


1450:Core/Src/bno055.c ****         else
1451:Core/Src/bno055.c ****         {
1452:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1453:Core/Src/bno055.c ****         }
1454:Core/Src/bno055.c ****     }
1455:Core/Src/bno055.c **** 
1456:Core/Src/bno055.c ****     return com_rslt;
1457:Core/Src/bno055.c **** }
 2602              		.loc 1 1457 1 view .LVU717
 2603 003c 03B0     		add	sp, sp, #12
 2604              	.LCFI79:
 2605              		.cfi_remember_state
 2606              		.cfi_def_cfa_offset 12
 2607              		@ sp needed
 2608 003e 30BD     		pop	{r4, r5, pc}
 2609              	.LVL257:
 2610              	.L198:
 2611              	.LCFI80:
 2612              		.cfi_restore_state
1433:Core/Src/bno055.c ****         }
 2613              		.loc 1 1433 13 is_stmt 1 view .LVU718
1433:Core/Src/bno055.c ****         }
 2614              		.loc 1 1433 23 is_stmt 0 view .LVU719
 2615 0040 0020     		movs	r0, #0
 2616              	.LVL258:
1433:Core/Src/bno055.c ****         }
 2617              		.loc 1 1433 23 view .LVU720
 2618 0042 FFF7FEFF 		bl	bno055_write_page_id
 2619              	.LVL259:
1435:Core/Src/bno055.c ****         {
 2620              		.loc 1 1435 9 is_stmt 1 view .LVU721
1435:Core/Src/bno055.c ****         {
 2621              		.loc 1 1435 12 is_stmt 0 view .LVU722
 2622 0046 0028     		cmp	r0, #0
 2623 0048 E9D0     		beq	.L194
 2624 004a E4E7     		b	.L193
 2625              	.LVL260:
 2626              	.L195:
1424:Core/Src/bno055.c ****     }
 2627              		.loc 1 1424 16 view .LVU723
 2628 004c 6FF07E00 		mvn	r0, #126
 2629              	.LVL261:
1424:Core/Src/bno055.c ****     }
 2630              		.loc 1 1424 16 view .LVU724
 2631 0050 F4E7     		b	.L192
 2632              	.LVL262:
 2633              	.L196:
1452:Core/Src/bno055.c ****         }
 2634              		.loc 1 1452 22 view .LVU725
 2635 0052 4FF0FF30 		mov	r0, #-1
 2636 0056 F1E7     		b	.L192
 2637              	.L200:
 2638              		.align	2
 2639              	.L199:
 2640 0058 00000000 		.word	.LANCHOR0
 2641              		.cfi_endproc
 2642              	.LFE21:
ARM GAS  /tmp/ccO72alg.s 			page 76


 2644              		.section	.text.bno055_read_gyro_xyz,"ax",%progbits
 2645              		.align	1
 2646              		.global	bno055_read_gyro_xyz
 2647              		.syntax unified
 2648              		.thumb
 2649              		.thumb_func
 2651              	bno055_read_gyro_xyz:
 2652              	.LVL263:
 2653              	.LFB22:
1458:Core/Src/bno055.c **** 
1459:Core/Src/bno055.c **** /*!
1460:Core/Src/bno055.c ****  *  @brief This API reads gyro data xyz values
1461:Core/Src/bno055.c ****  *  from register 0x14 to 0x19 it is a six byte data
1462:Core/Src/bno055.c ****  *
1463:Core/Src/bno055.c ****  *
1464:Core/Src/bno055.c ****  *  @param gyro : The value of gyro xyz data's
1465:Core/Src/bno055.c ****  *
1466:Core/Src/bno055.c ****  *  Parameter |    result
1467:Core/Src/bno055.c ****  *  --------- | -----------------
1468:Core/Src/bno055.c ****  *   x        | The gyro x data
1469:Core/Src/bno055.c ****  *   y        | The gyro y data
1470:Core/Src/bno055.c ****  *   z        | The gyro z data
1471:Core/Src/bno055.c ****  *
1472:Core/Src/bno055.c ****  *
1473:Core/Src/bno055.c ****  *
1474:Core/Src/bno055.c ****  *  @return results of bus communication function
1475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1477:Core/Src/bno055.c ****  *
1478:Core/Src/bno055.c ****  */
1479:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_xyz(struct bno055_gyro_t *gyro)
1480:Core/Src/bno055.c **** {
 2654              		.loc 1 1480 1 is_stmt 1 view -0
 2655              		.cfi_startproc
 2656              		@ args = 0, pretend = 0, frame = 8
 2657              		@ frame_needed = 0, uses_anonymous_args = 0
 2658              		.loc 1 1480 1 is_stmt 0 view .LVU727
 2659 0000 30B5     		push	{r4, r5, lr}
 2660              	.LCFI81:
 2661              		.cfi_def_cfa_offset 12
 2662              		.cfi_offset 4, -12
 2663              		.cfi_offset 5, -8
 2664              		.cfi_offset 14, -4
 2665 0002 83B0     		sub	sp, sp, #12
 2666              	.LCFI82:
 2667              		.cfi_def_cfa_offset 24
 2668 0004 0446     		mov	r4, r0
1481:Core/Src/bno055.c ****     /* Variable used to return value of
1482:Core/Src/bno055.c ****      * communication routine*/
1483:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2669              		.loc 1 1483 5 is_stmt 1 view .LVU728
 2670              	.LVL264:
1484:Core/Src/bno055.c **** 
1485:Core/Src/bno055.c ****     /* Array holding the gyro xyz value
1486:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
1487:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
1488:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
ARM GAS  /tmp/ccO72alg.s 			page 77


1489:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
1490:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
1491:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
1492:Core/Src/bno055.c ****      */
1493:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_XYZ_DATA_SIZE] = {
 2671              		.loc 1 1493 5 view .LVU729
 2672              		.loc 1 1493 8 is_stmt 0 view .LVU730
 2673 0006 1D4B     		ldr	r3, .L209
 2674 0008 93E80300 		ldm	r3, {r0, r1}
 2675              	.LVL265:
 2676              		.loc 1 1493 8 view .LVU731
 2677 000c 0090     		str	r0, [sp]
 2678 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1494:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1495:Core/Src/bno055.c ****     };
1496:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2679              		.loc 1 1496 5 is_stmt 1 view .LVU732
 2680              	.LVL266:
1497:Core/Src/bno055.c **** 
1498:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1499:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2681              		.loc 1 1499 5 view .LVU733
 2682              		.loc 1 1499 18 is_stmt 0 view .LVU734
 2683 0012 1B4B     		ldr	r3, .L209+4
 2684 0014 1B68     		ldr	r3, [r3]
 2685              		.loc 1 1499 8 view .LVU735
 2686 0016 53B3     		cbz	r3, .L205
1500:Core/Src/bno055.c ****     {
1501:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1502:Core/Src/bno055.c ****     }
1503:Core/Src/bno055.c ****     else
1504:Core/Src/bno055.c ****     {
1505:Core/Src/bno055.c ****         /*condition check for page, chip id is
1506:Core/Src/bno055.c ****          * available in the page zero*/
1507:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2687              		.loc 1 1507 9 is_stmt 1 view .LVU736
 2688              		.loc 1 1507 21 is_stmt 0 view .LVU737
 2689 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2690              		.loc 1 1507 12 view .LVU738
 2691 001a 13BB     		cbnz	r3, .L208
 2692              	.LVL267:
 2693              	.L203:
1508:Core/Src/bno055.c ****         {
1509:Core/Src/bno055.c ****             /* Write the page zero*/
1510:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1511:Core/Src/bno055.c ****         }
1512:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2694              		.loc 1 1512 53 discriminator 1 view .LVU739
 2695 001c 184B     		ldr	r3, .L209+4
 2696 001e 1B68     		ldr	r3, [r3]
 2697 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2698              		.loc 1 1512 41 discriminator 1 view .LVU740
 2699 0022 3BBB     		cbnz	r3, .L206
 2700              	.L204:
1513:Core/Src/bno055.c ****         {
1514:Core/Src/bno055.c ****             /* Read the six bytes data of gyro xyz*/
1515:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 78


 2701              		.loc 1 1515 13 is_stmt 1 view .LVU741
 2702              		.loc 1 1515 32 is_stmt 0 view .LVU742
 2703 0024 164B     		ldr	r3, .L209+4
 2704 0026 1868     		ldr	r0, [r3]
 2705 0028 0569     		ldr	r5, [r0, #16]
 2706              		.loc 1 1515 24 view .LVU743
 2707 002a 0623     		movs	r3, #6
 2708 002c 6A46     		mov	r2, sp
 2709 002e 1421     		movs	r1, #20
 2710 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2711 0032 A847     		blx	r5
 2712              	.LVL268:
1516:Core/Src/bno055.c ****                                                       BNO055_GYRO_DATA_X_LSB_VALUEX_REG,
1517:Core/Src/bno055.c ****                                                       data_u8,
1518:Core/Src/bno055.c ****                                                       BNO055_GYRO_XYZ_DATA_SIZE);
1519:Core/Src/bno055.c **** 
1520:Core/Src/bno055.c ****             /* Data x*/
1521:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2713              		.loc 1 1521 13 is_stmt 1 view .LVU744
1522:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_LSB_VALU
1523:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2714              		.loc 1 1523 13 view .LVU745
1524:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_X_MSB_VALU
1525:Core/Src/bno055.c ****             gyro->x =
 2715              		.loc 1 1525 13 view .LVU746
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2716              		.loc 1 1526 31 is_stmt 0 view .LVU747
 2717 0034 9DF90120 		ldrsb	r2, [sp, #1]
1527:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 2718              		.loc 1 1527 31 view .LVU748
 2719 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1526:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2720              		.loc 1 1526 17 view .LVU749
 2721 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1525:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2722              		.loc 1 1525 21 view .LVU750
 2723 0040 2380     		strh	r3, [r4]	@ movhi
1528:Core/Src/bno055.c **** 
1529:Core/Src/bno055.c ****             /* Data y*/
1530:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2724              		.loc 1 1530 13 is_stmt 1 view .LVU751
1531:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_LSB_VALU
1532:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2725              		.loc 1 1532 13 view .LVU752
1533:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Y_MSB_VALU
1534:Core/Src/bno055.c ****             gyro->y =
 2726              		.loc 1 1534 13 view .LVU753
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2727              		.loc 1 1535 31 is_stmt 0 view .LVU754
 2728 0042 9DF90320 		ldrsb	r2, [sp, #3]
1536:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 2729              		.loc 1 1536 31 view .LVU755
 2730 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1535:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2731              		.loc 1 1535 17 view .LVU756
 2732 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1534:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
ARM GAS  /tmp/ccO72alg.s 			page 79


 2733              		.loc 1 1534 21 view .LVU757
 2734 004e 6380     		strh	r3, [r4, #2]	@ movhi
1537:Core/Src/bno055.c **** 
1538:Core/Src/bno055.c ****             /* Data z*/
1539:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2735              		.loc 1 1539 13 is_stmt 1 view .LVU758
1540:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_LSB_VALU
1541:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2736              		.loc 1 1541 13 view .LVU759
1542:Core/Src/bno055.c ****                                                                         BNO055_GYRO_DATA_Z_MSB_VALU
1543:Core/Src/bno055.c ****             gyro->z =
 2737              		.loc 1 1543 13 view .LVU760
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2738              		.loc 1 1544 31 is_stmt 0 view .LVU761
 2739 0050 9DF90520 		ldrsb	r2, [sp, #5]
1545:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 2740              		.loc 1 1545 31 view .LVU762
 2741 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1544:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2742              		.loc 1 1544 17 view .LVU763
 2743 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1543:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2744              		.loc 1 1543 21 view .LVU764
 2745 005c A380     		strh	r3, [r4, #4]	@ movhi
 2746              	.LVL269:
 2747              	.L202:
1546:Core/Src/bno055.c ****         }
1547:Core/Src/bno055.c ****         else
1548:Core/Src/bno055.c ****         {
1549:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1550:Core/Src/bno055.c ****         }
1551:Core/Src/bno055.c ****     }
1552:Core/Src/bno055.c **** 
1553:Core/Src/bno055.c ****     return com_rslt;
1554:Core/Src/bno055.c **** }
 2748              		.loc 1 1554 1 view .LVU765
 2749 005e 03B0     		add	sp, sp, #12
 2750              	.LCFI83:
 2751              		.cfi_remember_state
 2752              		.cfi_def_cfa_offset 12
 2753              		@ sp needed
 2754 0060 30BD     		pop	{r4, r5, pc}
 2755              	.LVL270:
 2756              	.L208:
 2757              	.LCFI84:
 2758              		.cfi_restore_state
1510:Core/Src/bno055.c ****         }
 2759              		.loc 1 1510 13 is_stmt 1 view .LVU766
1510:Core/Src/bno055.c ****         }
 2760              		.loc 1 1510 23 is_stmt 0 view .LVU767
 2761 0062 0020     		movs	r0, #0
 2762 0064 FFF7FEFF 		bl	bno055_write_page_id
 2763              	.LVL271:
1512:Core/Src/bno055.c ****         {
 2764              		.loc 1 1512 9 is_stmt 1 view .LVU768
1512:Core/Src/bno055.c ****         {
 2765              		.loc 1 1512 12 is_stmt 0 view .LVU769
ARM GAS  /tmp/ccO72alg.s 			page 80


 2766 0068 0028     		cmp	r0, #0
 2767 006a DBD0     		beq	.L204
 2768 006c D6E7     		b	.L203
 2769              	.LVL272:
 2770              	.L205:
1501:Core/Src/bno055.c ****     }
 2771              		.loc 1 1501 16 view .LVU770
 2772 006e 6FF07E00 		mvn	r0, #126
 2773 0072 F4E7     		b	.L202
 2774              	.LVL273:
 2775              	.L206:
1549:Core/Src/bno055.c ****         }
 2776              		.loc 1 1549 22 view .LVU771
 2777 0074 4FF0FF30 		mov	r0, #-1
 2778 0078 F1E7     		b	.L202
 2779              	.L210:
 2780 007a 00BF     		.align	2
 2781              	.L209:
 2782 007c 00000000 		.word	.LANCHOR1
 2783 0080 00000000 		.word	.LANCHOR0
 2784              		.cfi_endproc
 2785              	.LFE22:
 2787              		.section	.text.bno055_read_euler_h,"ax",%progbits
 2788              		.align	1
 2789              		.global	bno055_read_euler_h
 2790              		.syntax unified
 2791              		.thumb
 2792              		.thumb_func
 2794              	bno055_read_euler_h:
 2795              	.LVL274:
 2796              	.LFB23:
1555:Core/Src/bno055.c **** 
1556:Core/Src/bno055.c **** /*!
1557:Core/Src/bno055.c ****  *  @brief This API reads gyro data z values
1558:Core/Src/bno055.c ****  *  from register 0x1A and 0x1B it is a two byte data
1559:Core/Src/bno055.c ****  *
1560:Core/Src/bno055.c ****  *  @param euler_h_s16 : The raw h data
1561:Core/Src/bno055.c ****  *
1562:Core/Src/bno055.c ****  *  @return results of bus communication function
1563:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1564:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1565:Core/Src/bno055.c ****  *
1566:Core/Src/bno055.c ****  */
1567:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_h(s16 *euler_h_s16)
1568:Core/Src/bno055.c **** {
 2797              		.loc 1 1568 1 is_stmt 1 view -0
 2798              		.cfi_startproc
 2799              		@ args = 0, pretend = 0, frame = 8
 2800              		@ frame_needed = 0, uses_anonymous_args = 0
 2801              		.loc 1 1568 1 is_stmt 0 view .LVU773
 2802 0000 30B5     		push	{r4, r5, lr}
 2803              	.LCFI85:
 2804              		.cfi_def_cfa_offset 12
 2805              		.cfi_offset 4, -12
 2806              		.cfi_offset 5, -8
 2807              		.cfi_offset 14, -4
 2808 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 81


 2809              	.LCFI86:
 2810              		.cfi_def_cfa_offset 24
1569:Core/Src/bno055.c ****     /* Variable used to return value of
1570:Core/Src/bno055.c ****      * communication routine*/
1571:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2811              		.loc 1 1571 5 is_stmt 1 view .LVU774
 2812              	.LVL275:
1572:Core/Src/bno055.c **** 
1573:Core/Src/bno055.c ****     /* Array holding the Euler h value
1574:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - h->LSB
1575:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - h->MSB
1576:Core/Src/bno055.c ****      */
1577:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2813              		.loc 1 1577 5 view .LVU775
 2814              		.loc 1 1577 8 is_stmt 0 view .LVU776
 2815 0004 0023     		movs	r3, #0
 2816 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1578:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2817              		.loc 1 1578 5 is_stmt 1 view .LVU777
 2818              	.LVL276:
1579:Core/Src/bno055.c **** 
1580:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1581:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2819              		.loc 1 1581 5 view .LVU778
 2820              		.loc 1 1581 18 is_stmt 0 view .LVU779
 2821 000a 134B     		ldr	r3, .L219
 2822 000c 1B68     		ldr	r3, [r3]
 2823              		.loc 1 1581 8 view .LVU780
 2824 000e EBB1     		cbz	r3, .L215
 2825 0010 0446     		mov	r4, r0
1582:Core/Src/bno055.c ****     {
1583:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1584:Core/Src/bno055.c ****     }
1585:Core/Src/bno055.c ****     else
1586:Core/Src/bno055.c ****     {
1587:Core/Src/bno055.c ****         /*condition check for page, chip id is
1588:Core/Src/bno055.c ****          * available in the page zero*/
1589:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 2826              		.loc 1 1589 9 is_stmt 1 view .LVU781
 2827              		.loc 1 1589 21 is_stmt 0 view .LVU782
 2828 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2829              		.loc 1 1589 12 view .LVU783
 2830 0014 A3B9     		cbnz	r3, .L218
 2831              	.LVL277:
 2832              	.L213:
1590:Core/Src/bno055.c ****         {
1591:Core/Src/bno055.c ****             /* Write the page zero*/
1592:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1593:Core/Src/bno055.c ****         }
1594:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2833              		.loc 1 1594 53 discriminator 1 view .LVU784
 2834 0016 104B     		ldr	r3, .L219
 2835 0018 1B68     		ldr	r3, [r3]
 2836 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2837              		.loc 1 1594 41 discriminator 1 view .LVU785
 2838 001c CBB9     		cbnz	r3, .L216
 2839              	.L214:
ARM GAS  /tmp/ccO72alg.s 			page 82


1595:Core/Src/bno055.c ****         {
1596:Core/Src/bno055.c ****             /* Read the eulre heading data*/
1597:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2840              		.loc 1 1597 13 is_stmt 1 view .LVU786
 2841              		.loc 1 1597 32 is_stmt 0 view .LVU787
 2842 001e 0E4B     		ldr	r3, .L219
 2843 0020 1868     		ldr	r0, [r3]
 2844 0022 0569     		ldr	r5, [r0, #16]
 2845              		.loc 1 1597 24 view .LVU788
 2846 0024 0223     		movs	r3, #2
 2847 0026 01AA     		add	r2, sp, #4
 2848 0028 1A21     		movs	r1, #26
 2849 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2850 002c A847     		blx	r5
 2851              	.LVL278:
1598:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1599:Core/Src/bno055.c ****                                                       data_u8,
1600:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1601:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2852              		.loc 1 1601 13 is_stmt 1 view .LVU789
1602:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_LSB_VALUEH);
1603:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2853              		.loc 1 1603 13 view .LVU790
1604:Core/Src/bno055.c ****                                                                         BNO055_EULER_H_MSB_VALUEH);
1605:Core/Src/bno055.c ****             *euler_h_s16 =
 2854              		.loc 1 1605 13 view .LVU791
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2855              		.loc 1 1606 31 is_stmt 0 view .LVU792
 2856 002e 9DF90520 		ldrsb	r2, [sp, #5]
1607:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2857              		.loc 1 1607 31 view .LVU793
 2858 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1606:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2859              		.loc 1 1606 17 view .LVU794
 2860 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1605:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2861              		.loc 1 1605 26 view .LVU795
 2862 003a 2380     		strh	r3, [r4]	@ movhi
 2863              	.LVL279:
 2864              	.L212:
1608:Core/Src/bno055.c ****         }
1609:Core/Src/bno055.c ****         else
1610:Core/Src/bno055.c ****         {
1611:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1612:Core/Src/bno055.c ****         }
1613:Core/Src/bno055.c ****     }
1614:Core/Src/bno055.c **** 
1615:Core/Src/bno055.c ****     return com_rslt;
1616:Core/Src/bno055.c **** }
 2865              		.loc 1 1616 1 view .LVU796
 2866 003c 03B0     		add	sp, sp, #12
 2867              	.LCFI87:
 2868              		.cfi_remember_state
 2869              		.cfi_def_cfa_offset 12
 2870              		@ sp needed
 2871 003e 30BD     		pop	{r4, r5, pc}
 2872              	.LVL280:
ARM GAS  /tmp/ccO72alg.s 			page 83


 2873              	.L218:
 2874              	.LCFI88:
 2875              		.cfi_restore_state
1592:Core/Src/bno055.c ****         }
 2876              		.loc 1 1592 13 is_stmt 1 view .LVU797
1592:Core/Src/bno055.c ****         }
 2877              		.loc 1 1592 23 is_stmt 0 view .LVU798
 2878 0040 0020     		movs	r0, #0
 2879              	.LVL281:
1592:Core/Src/bno055.c ****         }
 2880              		.loc 1 1592 23 view .LVU799
 2881 0042 FFF7FEFF 		bl	bno055_write_page_id
 2882              	.LVL282:
1594:Core/Src/bno055.c ****         {
 2883              		.loc 1 1594 9 is_stmt 1 view .LVU800
1594:Core/Src/bno055.c ****         {
 2884              		.loc 1 1594 12 is_stmt 0 view .LVU801
 2885 0046 0028     		cmp	r0, #0
 2886 0048 E9D0     		beq	.L214
 2887 004a E4E7     		b	.L213
 2888              	.LVL283:
 2889              	.L215:
1583:Core/Src/bno055.c ****     }
 2890              		.loc 1 1583 16 view .LVU802
 2891 004c 6FF07E00 		mvn	r0, #126
 2892              	.LVL284:
1583:Core/Src/bno055.c ****     }
 2893              		.loc 1 1583 16 view .LVU803
 2894 0050 F4E7     		b	.L212
 2895              	.LVL285:
 2896              	.L216:
1611:Core/Src/bno055.c ****         }
 2897              		.loc 1 1611 22 view .LVU804
 2898 0052 4FF0FF30 		mov	r0, #-1
 2899 0056 F1E7     		b	.L212
 2900              	.L220:
 2901              		.align	2
 2902              	.L219:
 2903 0058 00000000 		.word	.LANCHOR0
 2904              		.cfi_endproc
 2905              	.LFE23:
 2907              		.section	.text.bno055_read_euler_r,"ax",%progbits
 2908              		.align	1
 2909              		.global	bno055_read_euler_r
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2914              	bno055_read_euler_r:
 2915              	.LVL286:
 2916              	.LFB24:
1617:Core/Src/bno055.c **** 
1618:Core/Src/bno055.c **** /*!
1619:Core/Src/bno055.c ****  *  @brief This API reads Euler data r values
1620:Core/Src/bno055.c ****  *  from register 0x1C and 0x1D it is a two byte data
1621:Core/Src/bno055.c ****  *
1622:Core/Src/bno055.c ****  *  @param euler_r_s16 : The raw r data
1623:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 84


1624:Core/Src/bno055.c ****  *  @return results of bus communication function
1625:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1626:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1627:Core/Src/bno055.c ****  *
1628:Core/Src/bno055.c ****  */
1629:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_r(s16 *euler_r_s16)
1630:Core/Src/bno055.c **** {
 2917              		.loc 1 1630 1 is_stmt 1 view -0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 8
 2920              		@ frame_needed = 0, uses_anonymous_args = 0
 2921              		.loc 1 1630 1 is_stmt 0 view .LVU806
 2922 0000 30B5     		push	{r4, r5, lr}
 2923              	.LCFI89:
 2924              		.cfi_def_cfa_offset 12
 2925              		.cfi_offset 4, -12
 2926              		.cfi_offset 5, -8
 2927              		.cfi_offset 14, -4
 2928 0002 83B0     		sub	sp, sp, #12
 2929              	.LCFI90:
 2930              		.cfi_def_cfa_offset 24
1631:Core/Src/bno055.c ****     /* Variable used to return value of
1632:Core/Src/bno055.c ****      * communication routine*/
1633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 2931              		.loc 1 1633 5 is_stmt 1 view .LVU807
 2932              	.LVL287:
1634:Core/Src/bno055.c **** 
1635:Core/Src/bno055.c ****     /* Array holding the Euler r value
1636:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - r->LSB
1637:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - r->MSB
1638:Core/Src/bno055.c ****      */
1639:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 2933              		.loc 1 1639 5 view .LVU808
 2934              		.loc 1 1639 8 is_stmt 0 view .LVU809
 2935 0004 0023     		movs	r3, #0
 2936 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1640:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 2937              		.loc 1 1640 5 is_stmt 1 view .LVU810
 2938              	.LVL288:
1641:Core/Src/bno055.c **** 
1642:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1643:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 2939              		.loc 1 1643 5 view .LVU811
 2940              		.loc 1 1643 18 is_stmt 0 view .LVU812
 2941 000a 134B     		ldr	r3, .L229
 2942 000c 1B68     		ldr	r3, [r3]
 2943              		.loc 1 1643 8 view .LVU813
 2944 000e EBB1     		cbz	r3, .L225
 2945 0010 0446     		mov	r4, r0
1644:Core/Src/bno055.c ****     {
1645:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1646:Core/Src/bno055.c ****     }
1647:Core/Src/bno055.c ****     else
1648:Core/Src/bno055.c ****     {
1649:Core/Src/bno055.c ****         /*condition check for page, chip id is
1650:Core/Src/bno055.c ****          * available in the page zero*/
1651:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccO72alg.s 			page 85


 2946              		.loc 1 1651 9 is_stmt 1 view .LVU814
 2947              		.loc 1 1651 21 is_stmt 0 view .LVU815
 2948 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2949              		.loc 1 1651 12 view .LVU816
 2950 0014 A3B9     		cbnz	r3, .L228
 2951              	.LVL289:
 2952              	.L223:
1652:Core/Src/bno055.c ****         {
1653:Core/Src/bno055.c ****             /* Write the page zero*/
1654:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1655:Core/Src/bno055.c ****         }
1656:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 2953              		.loc 1 1656 53 discriminator 1 view .LVU817
 2954 0016 104B     		ldr	r3, .L229
 2955 0018 1B68     		ldr	r3, [r3]
 2956 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2957              		.loc 1 1656 41 discriminator 1 view .LVU818
 2958 001c CBB9     		cbnz	r3, .L226
 2959              	.L224:
1657:Core/Src/bno055.c ****         {
1658:Core/Src/bno055.c ****             /* Read the Euler roll data*/
1659:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 2960              		.loc 1 1659 13 is_stmt 1 view .LVU819
 2961              		.loc 1 1659 32 is_stmt 0 view .LVU820
 2962 001e 0E4B     		ldr	r3, .L229
 2963 0020 1868     		ldr	r0, [r3]
 2964 0022 0569     		ldr	r5, [r0, #16]
 2965              		.loc 1 1659 24 view .LVU821
 2966 0024 0223     		movs	r3, #2
 2967 0026 01AA     		add	r2, sp, #4
 2968 0028 1C21     		movs	r1, #28
 2969 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 2970 002c A847     		blx	r5
 2971              	.LVL290:
1660:Core/Src/bno055.c ****                                                       BNO055_EULER_R_LSB_VALUER_REG,
1661:Core/Src/bno055.c ****                                                       data_u8,
1662:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1663:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2972              		.loc 1 1663 13 is_stmt 1 view .LVU822
1664:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_LSB_VALUER);
1665:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 2973              		.loc 1 1665 13 view .LVU823
1666:Core/Src/bno055.c ****                                                                         BNO055_EULER_R_MSB_VALUER);
1667:Core/Src/bno055.c ****             *euler_r_s16 =
 2974              		.loc 1 1667 13 view .LVU824
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2975              		.loc 1 1668 31 is_stmt 0 view .LVU825
 2976 002e 9DF90520 		ldrsb	r2, [sp, #5]
1669:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 2977              		.loc 1 1669 31 view .LVU826
 2978 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1668:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2979              		.loc 1 1668 17 view .LVU827
 2980 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1667:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 2981              		.loc 1 1667 26 view .LVU828
 2982 003a 2380     		strh	r3, [r4]	@ movhi
ARM GAS  /tmp/ccO72alg.s 			page 86


 2983              	.LVL291:
 2984              	.L222:
1670:Core/Src/bno055.c ****         }
1671:Core/Src/bno055.c ****         else
1672:Core/Src/bno055.c ****         {
1673:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1674:Core/Src/bno055.c ****         }
1675:Core/Src/bno055.c ****     }
1676:Core/Src/bno055.c **** 
1677:Core/Src/bno055.c ****     return com_rslt;
1678:Core/Src/bno055.c **** }
 2985              		.loc 1 1678 1 view .LVU829
 2986 003c 03B0     		add	sp, sp, #12
 2987              	.LCFI91:
 2988              		.cfi_remember_state
 2989              		.cfi_def_cfa_offset 12
 2990              		@ sp needed
 2991 003e 30BD     		pop	{r4, r5, pc}
 2992              	.LVL292:
 2993              	.L228:
 2994              	.LCFI92:
 2995              		.cfi_restore_state
1654:Core/Src/bno055.c ****         }
 2996              		.loc 1 1654 13 is_stmt 1 view .LVU830
1654:Core/Src/bno055.c ****         }
 2997              		.loc 1 1654 23 is_stmt 0 view .LVU831
 2998 0040 0020     		movs	r0, #0
 2999              	.LVL293:
1654:Core/Src/bno055.c ****         }
 3000              		.loc 1 1654 23 view .LVU832
 3001 0042 FFF7FEFF 		bl	bno055_write_page_id
 3002              	.LVL294:
1656:Core/Src/bno055.c ****         {
 3003              		.loc 1 1656 9 is_stmt 1 view .LVU833
1656:Core/Src/bno055.c ****         {
 3004              		.loc 1 1656 12 is_stmt 0 view .LVU834
 3005 0046 0028     		cmp	r0, #0
 3006 0048 E9D0     		beq	.L224
 3007 004a E4E7     		b	.L223
 3008              	.LVL295:
 3009              	.L225:
1645:Core/Src/bno055.c ****     }
 3010              		.loc 1 1645 16 view .LVU835
 3011 004c 6FF07E00 		mvn	r0, #126
 3012              	.LVL296:
1645:Core/Src/bno055.c ****     }
 3013              		.loc 1 1645 16 view .LVU836
 3014 0050 F4E7     		b	.L222
 3015              	.LVL297:
 3016              	.L226:
1673:Core/Src/bno055.c ****         }
 3017              		.loc 1 1673 22 view .LVU837
 3018 0052 4FF0FF30 		mov	r0, #-1
 3019 0056 F1E7     		b	.L222
 3020              	.L230:
 3021              		.align	2
 3022              	.L229:
ARM GAS  /tmp/ccO72alg.s 			page 87


 3023 0058 00000000 		.word	.LANCHOR0
 3024              		.cfi_endproc
 3025              	.LFE24:
 3027              		.section	.text.bno055_read_euler_p,"ax",%progbits
 3028              		.align	1
 3029              		.global	bno055_read_euler_p
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3034              	bno055_read_euler_p:
 3035              	.LVL298:
 3036              	.LFB25:
1679:Core/Src/bno055.c **** 
1680:Core/Src/bno055.c **** /*!
1681:Core/Src/bno055.c ****  *  @brief This API reads Euler data p values
1682:Core/Src/bno055.c ****  *  from register 0x1E and 0x1F it is a two byte data
1683:Core/Src/bno055.c ****  *
1684:Core/Src/bno055.c ****  *  @param euler_p_s16 : The raw p data
1685:Core/Src/bno055.c ****  *
1686:Core/Src/bno055.c ****  *  @return results of bus communication function
1687:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1688:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1689:Core/Src/bno055.c ****  *
1690:Core/Src/bno055.c ****  *
1691:Core/Src/bno055.c ****  */
1692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_p(s16 *euler_p_s16)
1693:Core/Src/bno055.c **** {
 3037              		.loc 1 1693 1 is_stmt 1 view -0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 8
 3040              		@ frame_needed = 0, uses_anonymous_args = 0
 3041              		.loc 1 1693 1 is_stmt 0 view .LVU839
 3042 0000 30B5     		push	{r4, r5, lr}
 3043              	.LCFI93:
 3044              		.cfi_def_cfa_offset 12
 3045              		.cfi_offset 4, -12
 3046              		.cfi_offset 5, -8
 3047              		.cfi_offset 14, -4
 3048 0002 83B0     		sub	sp, sp, #12
 3049              	.LCFI94:
 3050              		.cfi_def_cfa_offset 24
1694:Core/Src/bno055.c ****     /* Variable used to return value of
1695:Core/Src/bno055.c ****      * communication routine*/
1696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3051              		.loc 1 1696 5 is_stmt 1 view .LVU840
 3052              	.LVL299:
1697:Core/Src/bno055.c **** 
1698:Core/Src/bno055.c ****     /* Array holding the Euler p value
1699:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_LSB] - p->LSB
1700:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_MSB] - p->MSB
1701:Core/Src/bno055.c ****      */
1702:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3053              		.loc 1 1702 5 view .LVU841
 3054              		.loc 1 1702 8 is_stmt 0 view .LVU842
 3055 0004 0023     		movs	r3, #0
 3056 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1703:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 88


 3057              		.loc 1 1703 5 is_stmt 1 view .LVU843
 3058              	.LVL300:
1704:Core/Src/bno055.c **** 
1705:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1706:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3059              		.loc 1 1706 5 view .LVU844
 3060              		.loc 1 1706 18 is_stmt 0 view .LVU845
 3061 000a 134B     		ldr	r3, .L239
 3062 000c 1B68     		ldr	r3, [r3]
 3063              		.loc 1 1706 8 view .LVU846
 3064 000e EBB1     		cbz	r3, .L235
 3065 0010 0446     		mov	r4, r0
1707:Core/Src/bno055.c ****     {
1708:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1709:Core/Src/bno055.c ****     }
1710:Core/Src/bno055.c ****     else
1711:Core/Src/bno055.c ****     {
1712:Core/Src/bno055.c ****         /*condition check for page, chip id is
1713:Core/Src/bno055.c ****          * available in the page zero*/
1714:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3066              		.loc 1 1714 9 is_stmt 1 view .LVU847
 3067              		.loc 1 1714 21 is_stmt 0 view .LVU848
 3068 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3069              		.loc 1 1714 12 view .LVU849
 3070 0014 A3B9     		cbnz	r3, .L238
 3071              	.LVL301:
 3072              	.L233:
1715:Core/Src/bno055.c ****         {
1716:Core/Src/bno055.c ****             /* Write the page zero*/
1717:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1718:Core/Src/bno055.c ****         }
1719:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3073              		.loc 1 1719 53 discriminator 1 view .LVU850
 3074 0016 104B     		ldr	r3, .L239
 3075 0018 1B68     		ldr	r3, [r3]
 3076 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3077              		.loc 1 1719 41 discriminator 1 view .LVU851
 3078 001c CBB9     		cbnz	r3, .L236
 3079              	.L234:
1720:Core/Src/bno055.c ****         {
1721:Core/Src/bno055.c ****             /* Read the Euler p data*/
1722:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3080              		.loc 1 1722 13 is_stmt 1 view .LVU852
 3081              		.loc 1 1722 32 is_stmt 0 view .LVU853
 3082 001e 0E4B     		ldr	r3, .L239
 3083 0020 1868     		ldr	r0, [r3]
 3084 0022 0569     		ldr	r5, [r0, #16]
 3085              		.loc 1 1722 24 view .LVU854
 3086 0024 0223     		movs	r3, #2
 3087 0026 01AA     		add	r2, sp, #4
 3088 0028 1E21     		movs	r1, #30
 3089 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3090 002c A847     		blx	r5
 3091              	.LVL302:
1723:Core/Src/bno055.c ****                                                       BNO055_EULER_P_LSB_VALUEP_REG,
1724:Core/Src/bno055.c ****                                                       data_u8,
1725:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 89


1726:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 3092              		.loc 1 1726 13 is_stmt 1 view .LVU855
1727:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_LSB_VALUEP);
1728:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 3093              		.loc 1 1728 13 view .LVU856
1729:Core/Src/bno055.c ****                                                                         BNO055_EULER_P_MSB_VALUEP);
1730:Core/Src/bno055.c ****             *euler_p_s16 =
 3094              		.loc 1 1730 13 view .LVU857
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3095              		.loc 1 1731 31 is_stmt 0 view .LVU858
 3096 002e 9DF90520 		ldrsb	r2, [sp, #5]
1732:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_LSB]));
 3097              		.loc 1 1732 31 view .LVU859
 3098 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1731:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3099              		.loc 1 1731 17 view .LVU860
 3100 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1730:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_MSB])) << BNO055_SHIFT_EIGHT_BIT
 3101              		.loc 1 1730 26 view .LVU861
 3102 003a 2380     		strh	r3, [r4]	@ movhi
 3103              	.LVL303:
 3104              	.L232:
1733:Core/Src/bno055.c ****         }
1734:Core/Src/bno055.c ****         else
1735:Core/Src/bno055.c ****         {
1736:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1737:Core/Src/bno055.c ****         }
1738:Core/Src/bno055.c ****     }
1739:Core/Src/bno055.c **** 
1740:Core/Src/bno055.c ****     return com_rslt;
1741:Core/Src/bno055.c **** }
 3105              		.loc 1 1741 1 view .LVU862
 3106 003c 03B0     		add	sp, sp, #12
 3107              	.LCFI95:
 3108              		.cfi_remember_state
 3109              		.cfi_def_cfa_offset 12
 3110              		@ sp needed
 3111 003e 30BD     		pop	{r4, r5, pc}
 3112              	.LVL304:
 3113              	.L238:
 3114              	.LCFI96:
 3115              		.cfi_restore_state
1717:Core/Src/bno055.c ****         }
 3116              		.loc 1 1717 13 is_stmt 1 view .LVU863
1717:Core/Src/bno055.c ****         }
 3117              		.loc 1 1717 23 is_stmt 0 view .LVU864
 3118 0040 0020     		movs	r0, #0
 3119              	.LVL305:
1717:Core/Src/bno055.c ****         }
 3120              		.loc 1 1717 23 view .LVU865
 3121 0042 FFF7FEFF 		bl	bno055_write_page_id
 3122              	.LVL306:
1719:Core/Src/bno055.c ****         {
 3123              		.loc 1 1719 9 is_stmt 1 view .LVU866
1719:Core/Src/bno055.c ****         {
 3124              		.loc 1 1719 12 is_stmt 0 view .LVU867
 3125 0046 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 90


 3126 0048 E9D0     		beq	.L234
 3127 004a E4E7     		b	.L233
 3128              	.LVL307:
 3129              	.L235:
1708:Core/Src/bno055.c ****     }
 3130              		.loc 1 1708 16 view .LVU868
 3131 004c 6FF07E00 		mvn	r0, #126
 3132              	.LVL308:
1708:Core/Src/bno055.c ****     }
 3133              		.loc 1 1708 16 view .LVU869
 3134 0050 F4E7     		b	.L232
 3135              	.LVL309:
 3136              	.L236:
1736:Core/Src/bno055.c ****         }
 3137              		.loc 1 1736 22 view .LVU870
 3138 0052 4FF0FF30 		mov	r0, #-1
 3139 0056 F1E7     		b	.L232
 3140              	.L240:
 3141              		.align	2
 3142              	.L239:
 3143 0058 00000000 		.word	.LANCHOR0
 3144              		.cfi_endproc
 3145              	.LFE25:
 3147              		.section	.text.bno055_read_euler_hrp,"ax",%progbits
 3148              		.align	1
 3149              		.global	bno055_read_euler_hrp
 3150              		.syntax unified
 3151              		.thumb
 3152              		.thumb_func
 3154              	bno055_read_euler_hrp:
 3155              	.LVL310:
 3156              	.LFB26:
1742:Core/Src/bno055.c **** 
1743:Core/Src/bno055.c **** /*!
1744:Core/Src/bno055.c ****  *  @brief This API reads Euler data hrp values
1745:Core/Src/bno055.c ****  *  from register 0x1A to 0x1F it is a six byte data
1746:Core/Src/bno055.c ****  *
1747:Core/Src/bno055.c ****  *
1748:Core/Src/bno055.c ****  *  @param euler : The Euler hrp data's
1749:Core/Src/bno055.c ****  *
1750:Core/Src/bno055.c ****  *  Parameter |    result
1751:Core/Src/bno055.c ****  *  --------- | -----------------
1752:Core/Src/bno055.c ****  *   h        | The Euler h data
1753:Core/Src/bno055.c ****  *   r        | The Euler r data
1754:Core/Src/bno055.c ****  *   p        | The Euler p data
1755:Core/Src/bno055.c ****  *
1756:Core/Src/bno055.c ****  *
1757:Core/Src/bno055.c ****  *  @return results of bus communication function
1758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1760:Core/Src/bno055.c ****  *
1761:Core/Src/bno055.c ****  */
1762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_euler_hrp(struct bno055_euler_t *euler)
1763:Core/Src/bno055.c **** {
 3157              		.loc 1 1763 1 is_stmt 1 view -0
 3158              		.cfi_startproc
 3159              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccO72alg.s 			page 91


 3160              		@ frame_needed = 0, uses_anonymous_args = 0
 3161              		.loc 1 1763 1 is_stmt 0 view .LVU872
 3162 0000 30B5     		push	{r4, r5, lr}
 3163              	.LCFI97:
 3164              		.cfi_def_cfa_offset 12
 3165              		.cfi_offset 4, -12
 3166              		.cfi_offset 5, -8
 3167              		.cfi_offset 14, -4
 3168 0002 83B0     		sub	sp, sp, #12
 3169              	.LCFI98:
 3170              		.cfi_def_cfa_offset 24
 3171 0004 0446     		mov	r4, r0
1764:Core/Src/bno055.c ****     /* Variable used to return value of
1765:Core/Src/bno055.c ****      * communication routine*/
1766:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3172              		.loc 1 1766 5 is_stmt 1 view .LVU873
 3173              	.LVL311:
1767:Core/Src/bno055.c **** 
1768:Core/Src/bno055.c ****     /* Array holding the Euler hrp value
1769:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] - h->LSB
1770:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] - h->MSB
1771:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] - r->MSB
1772:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] - r->MSB
1773:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] - p->MSB
1774:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] - p->MSB
1775:Core/Src/bno055.c ****      */
1776:Core/Src/bno055.c ****     u8 data_u8[BNO055_EULER_HRP_DATA_SIZE] = {
 3174              		.loc 1 1776 5 view .LVU874
 3175              		.loc 1 1776 8 is_stmt 0 view .LVU875
 3176 0006 1D4B     		ldr	r3, .L249
 3177 0008 93E80300 		ldm	r3, {r0, r1}
 3178              	.LVL312:
 3179              		.loc 1 1776 8 view .LVU876
 3180 000c 0090     		str	r0, [sp]
 3181 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
1777:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
1778:Core/Src/bno055.c ****     };
1779:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3182              		.loc 1 1779 5 is_stmt 1 view .LVU877
 3183              	.LVL313:
1780:Core/Src/bno055.c **** 
1781:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1782:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3184              		.loc 1 1782 5 view .LVU878
 3185              		.loc 1 1782 18 is_stmt 0 view .LVU879
 3186 0012 1B4B     		ldr	r3, .L249+4
 3187 0014 1B68     		ldr	r3, [r3]
 3188              		.loc 1 1782 8 view .LVU880
 3189 0016 53B3     		cbz	r3, .L245
1783:Core/Src/bno055.c ****     {
1784:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1785:Core/Src/bno055.c ****     }
1786:Core/Src/bno055.c ****     else
1787:Core/Src/bno055.c ****     {
1788:Core/Src/bno055.c ****         /*condition check for page, chip id is
1789:Core/Src/bno055.c ****          * available in the page zero*/
1790:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccO72alg.s 			page 92


 3190              		.loc 1 1790 9 is_stmt 1 view .LVU881
 3191              		.loc 1 1790 21 is_stmt 0 view .LVU882
 3192 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3193              		.loc 1 1790 12 view .LVU883
 3194 001a 13BB     		cbnz	r3, .L248
 3195              	.LVL314:
 3196              	.L243:
1791:Core/Src/bno055.c ****         {
1792:Core/Src/bno055.c ****             /* Write the page zero*/
1793:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1794:Core/Src/bno055.c ****         }
1795:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3197              		.loc 1 1795 53 discriminator 1 view .LVU884
 3198 001c 184B     		ldr	r3, .L249+4
 3199 001e 1B68     		ldr	r3, [r3]
 3200 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3201              		.loc 1 1795 41 discriminator 1 view .LVU885
 3202 0022 3BBB     		cbnz	r3, .L246
 3203              	.L244:
1796:Core/Src/bno055.c ****         {
1797:Core/Src/bno055.c ****             /* Read the six byte of Euler hrp data*/
1798:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3204              		.loc 1 1798 13 is_stmt 1 view .LVU886
 3205              		.loc 1 1798 32 is_stmt 0 view .LVU887
 3206 0024 164B     		ldr	r3, .L249+4
 3207 0026 1868     		ldr	r0, [r3]
 3208 0028 0569     		ldr	r5, [r0, #16]
 3209              		.loc 1 1798 24 view .LVU888
 3210 002a 0623     		movs	r3, #6
 3211 002c 6A46     		mov	r2, sp
 3212 002e 1A21     		movs	r1, #26
 3213 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3214 0032 A847     		blx	r5
 3215              	.LVL315:
1799:Core/Src/bno055.c ****                                                       BNO055_EULER_H_LSB_VALUEH_REG,
1800:Core/Src/bno055.c ****                                                       data_u8,
1801:Core/Src/bno055.c ****                                                       BNO055_EULER_HRP_DATA_SIZE);
1802:Core/Src/bno055.c **** 
1803:Core/Src/bno055.c ****             /* Data h*/
1804:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB] = BNO055_GET_BITSLICE(
 3216              		.loc 1 1804 13 is_stmt 1 view .LVU889
1805:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB],
1806:Core/Src/bno055.c ****                 BNO055_EULER_H_LSB_VALUEH);
1807:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB] = BNO055_GET_BITSLICE(
 3217              		.loc 1 1807 13 view .LVU890
1808:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB],
1809:Core/Src/bno055.c ****                 BNO055_EULER_H_MSB_VALUEH);
1810:Core/Src/bno055.c ****             euler->h =
 3218              		.loc 1 1810 13 view .LVU891
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3219              		.loc 1 1811 31 is_stmt 0 view .LVU892
 3220 0034 9DF90120 		ldrsb	r2, [sp, #1]
1812:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_LSB]));
 3221              		.loc 1 1812 31 view .LVU893
 3222 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
1811:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3223              		.loc 1 1811 17 view .LVU894
ARM GAS  /tmp/ccO72alg.s 			page 93


 3224 003c 43EA0223 		orr	r3, r3, r2, lsl #8
1810:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_H_MSB])) << BNO055_SHIFT_EIG
 3225              		.loc 1 1810 22 view .LVU895
 3226 0040 2380     		strh	r3, [r4]	@ movhi
1813:Core/Src/bno055.c **** 
1814:Core/Src/bno055.c ****             /* Data r*/
1815:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB] = BNO055_GET_BITSLICE(
 3227              		.loc 1 1815 13 is_stmt 1 view .LVU896
1816:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB],
1817:Core/Src/bno055.c ****                 BNO055_EULER_R_LSB_VALUER);
1818:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB] = BNO055_GET_BITSLICE(
 3228              		.loc 1 1818 13 view .LVU897
1819:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB],
1820:Core/Src/bno055.c ****                 BNO055_EULER_R_MSB_VALUER);
1821:Core/Src/bno055.c ****             euler->r =
 3229              		.loc 1 1821 13 view .LVU898
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3230              		.loc 1 1822 31 is_stmt 0 view .LVU899
 3231 0042 9DF90320 		ldrsb	r2, [sp, #3]
1823:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_LSB]));
 3232              		.loc 1 1823 31 view .LVU900
 3233 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
1822:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3234              		.loc 1 1822 17 view .LVU901
 3235 004a 43EA0223 		orr	r3, r3, r2, lsl #8
1821:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_R_MSB])) << BNO055_SHIFT_EIG
 3236              		.loc 1 1821 22 view .LVU902
 3237 004e 6380     		strh	r3, [r4, #2]	@ movhi
1824:Core/Src/bno055.c **** 
1825:Core/Src/bno055.c ****             /* Data p*/
1826:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB] = BNO055_GET_BITSLICE(
 3238              		.loc 1 1826 13 is_stmt 1 view .LVU903
1827:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB],
1828:Core/Src/bno055.c ****                 BNO055_EULER_P_LSB_VALUEP);
1829:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB] = BNO055_GET_BITSLICE(
 3239              		.loc 1 1829 13 view .LVU904
1830:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB],
1831:Core/Src/bno055.c ****                 BNO055_EULER_P_MSB_VALUEP);
1832:Core/Src/bno055.c ****             euler->p =
 3240              		.loc 1 1832 13 view .LVU905
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3241              		.loc 1 1833 31 is_stmt 0 view .LVU906
 3242 0050 9DF90520 		ldrsb	r2, [sp, #5]
1834:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_LSB]));
 3243              		.loc 1 1834 31 view .LVU907
 3244 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1833:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3245              		.loc 1 1833 17 view .LVU908
 3246 0058 43EA0223 		orr	r3, r3, r2, lsl #8
1832:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_EULER_HRP_P_MSB])) << BNO055_SHIFT_EIG
 3247              		.loc 1 1832 22 view .LVU909
 3248 005c A380     		strh	r3, [r4, #4]	@ movhi
 3249              	.LVL316:
 3250              	.L242:
1835:Core/Src/bno055.c ****         }
1836:Core/Src/bno055.c ****         else
1837:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 94


1838:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1839:Core/Src/bno055.c ****         }
1840:Core/Src/bno055.c ****     }
1841:Core/Src/bno055.c **** 
1842:Core/Src/bno055.c ****     return com_rslt;
1843:Core/Src/bno055.c **** }
 3251              		.loc 1 1843 1 view .LVU910
 3252 005e 03B0     		add	sp, sp, #12
 3253              	.LCFI99:
 3254              		.cfi_remember_state
 3255              		.cfi_def_cfa_offset 12
 3256              		@ sp needed
 3257 0060 30BD     		pop	{r4, r5, pc}
 3258              	.LVL317:
 3259              	.L248:
 3260              	.LCFI100:
 3261              		.cfi_restore_state
1793:Core/Src/bno055.c ****         }
 3262              		.loc 1 1793 13 is_stmt 1 view .LVU911
1793:Core/Src/bno055.c ****         }
 3263              		.loc 1 1793 23 is_stmt 0 view .LVU912
 3264 0062 0020     		movs	r0, #0
 3265 0064 FFF7FEFF 		bl	bno055_write_page_id
 3266              	.LVL318:
1795:Core/Src/bno055.c ****         {
 3267              		.loc 1 1795 9 is_stmt 1 view .LVU913
1795:Core/Src/bno055.c ****         {
 3268              		.loc 1 1795 12 is_stmt 0 view .LVU914
 3269 0068 0028     		cmp	r0, #0
 3270 006a DBD0     		beq	.L244
 3271 006c D6E7     		b	.L243
 3272              	.LVL319:
 3273              	.L245:
1784:Core/Src/bno055.c ****     }
 3274              		.loc 1 1784 16 view .LVU915
 3275 006e 6FF07E00 		mvn	r0, #126
 3276 0072 F4E7     		b	.L242
 3277              	.LVL320:
 3278              	.L246:
1838:Core/Src/bno055.c ****         }
 3279              		.loc 1 1838 22 view .LVU916
 3280 0074 4FF0FF30 		mov	r0, #-1
 3281 0078 F1E7     		b	.L242
 3282              	.L250:
 3283 007a 00BF     		.align	2
 3284              	.L249:
 3285 007c 00000000 		.word	.LANCHOR1
 3286 0080 00000000 		.word	.LANCHOR0
 3287              		.cfi_endproc
 3288              	.LFE26:
 3290              		.section	.text.bno055_read_quaternion_w,"ax",%progbits
 3291              		.align	1
 3292              		.global	bno055_read_quaternion_w
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3297              	bno055_read_quaternion_w:
ARM GAS  /tmp/ccO72alg.s 			page 95


 3298              	.LVL321:
 3299              	.LFB27:
1844:Core/Src/bno055.c **** 
1845:Core/Src/bno055.c **** /*!
1846:Core/Src/bno055.c ****  *  @brief This API reads quaternion data w values
1847:Core/Src/bno055.c ****  *  from register 0x20 and 0x21 it is a two byte data
1848:Core/Src/bno055.c ****  *
1849:Core/Src/bno055.c ****  *  @param quaternion_w_s16 : The raw w data
1850:Core/Src/bno055.c ****  *
1851:Core/Src/bno055.c ****  *  @return results of bus communication function
1852:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1853:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1854:Core/Src/bno055.c ****  *
1855:Core/Src/bno055.c ****  *
1856:Core/Src/bno055.c ****  */
1857:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_w(s16 *quaternion_w_s16)
1858:Core/Src/bno055.c **** {
 3300              		.loc 1 1858 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 8
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
 3304              		.loc 1 1858 1 is_stmt 0 view .LVU918
 3305 0000 30B5     		push	{r4, r5, lr}
 3306              	.LCFI101:
 3307              		.cfi_def_cfa_offset 12
 3308              		.cfi_offset 4, -12
 3309              		.cfi_offset 5, -8
 3310              		.cfi_offset 14, -4
 3311 0002 83B0     		sub	sp, sp, #12
 3312              	.LCFI102:
 3313              		.cfi_def_cfa_offset 24
1859:Core/Src/bno055.c ****     /* Variable used to return value of
1860:Core/Src/bno055.c ****      * communication routine*/
1861:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3314              		.loc 1 1861 5 is_stmt 1 view .LVU919
 3315              	.LVL322:
1862:Core/Src/bno055.c **** 
1863:Core/Src/bno055.c ****     /* Array holding the Quaternion w value
1864:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - w->LSB
1865:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - w->MSB
1866:Core/Src/bno055.c ****      */
1867:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3316              		.loc 1 1867 5 view .LVU920
 3317              		.loc 1 1867 8 is_stmt 0 view .LVU921
 3318 0004 0023     		movs	r3, #0
 3319 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1868:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3320              		.loc 1 1868 5 is_stmt 1 view .LVU922
 3321              	.LVL323:
1869:Core/Src/bno055.c **** 
1870:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1871:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3322              		.loc 1 1871 5 view .LVU923
 3323              		.loc 1 1871 18 is_stmt 0 view .LVU924
 3324 000a 134B     		ldr	r3, .L259
 3325 000c 1B68     		ldr	r3, [r3]
 3326              		.loc 1 1871 8 view .LVU925
ARM GAS  /tmp/ccO72alg.s 			page 96


 3327 000e EBB1     		cbz	r3, .L255
 3328 0010 0446     		mov	r4, r0
1872:Core/Src/bno055.c ****     {
1873:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1874:Core/Src/bno055.c ****     }
1875:Core/Src/bno055.c ****     else
1876:Core/Src/bno055.c ****     {
1877:Core/Src/bno055.c ****         /*condition check for page, chip id is
1878:Core/Src/bno055.c ****          * available in the page zero*/
1879:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3329              		.loc 1 1879 9 is_stmt 1 view .LVU926
 3330              		.loc 1 1879 21 is_stmt 0 view .LVU927
 3331 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3332              		.loc 1 1879 12 view .LVU928
 3333 0014 A3B9     		cbnz	r3, .L258
 3334              	.LVL324:
 3335              	.L253:
1880:Core/Src/bno055.c ****         {
1881:Core/Src/bno055.c ****             /* Write the page zero*/
1882:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1883:Core/Src/bno055.c ****         }
1884:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3336              		.loc 1 1884 53 discriminator 1 view .LVU929
 3337 0016 104B     		ldr	r3, .L259
 3338 0018 1B68     		ldr	r3, [r3]
 3339 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3340              		.loc 1 1884 41 discriminator 1 view .LVU930
 3341 001c CBB9     		cbnz	r3, .L256
 3342              	.L254:
1885:Core/Src/bno055.c ****         {
1886:Core/Src/bno055.c ****             /* Read the two byte value
1887:Core/Src/bno055.c ****              * of quaternion w data*/
1888:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3343              		.loc 1 1888 13 is_stmt 1 view .LVU931
 3344              		.loc 1 1888 32 is_stmt 0 view .LVU932
 3345 001e 0E4B     		ldr	r3, .L259
 3346 0020 1868     		ldr	r0, [r3]
 3347 0022 0569     		ldr	r5, [r0, #16]
 3348              		.loc 1 1888 24 view .LVU933
 3349 0024 0223     		movs	r3, #2
 3350 0026 01AA     		add	r2, sp, #4
 3351 0028 2021     		movs	r1, #32
 3352 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3353 002c A847     		blx	r5
 3354              	.LVL325:
1889:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
1890:Core/Src/bno055.c ****                                                       data_u8,
1891:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1892:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3355              		.loc 1 1892 13 is_stmt 1 view .LVU934
1893:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1894:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3356              		.loc 1 1894 13 view .LVU935
1895:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1896:Core/Src/bno055.c ****             *quaternion_w_s16 =
 3357              		.loc 1 1896 13 view .LVU936
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
ARM GAS  /tmp/ccO72alg.s 			page 97


 3358              		.loc 1 1897 31 is_stmt 0 view .LVU937
 3359 002e 9DF90520 		ldrsb	r2, [sp, #5]
1898:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3360              		.loc 1 1898 31 view .LVU938
 3361 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1897:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3362              		.loc 1 1897 17 view .LVU939
 3363 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1896:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3364              		.loc 1 1896 31 view .LVU940
 3365 003a 2380     		strh	r3, [r4]	@ movhi
 3366              	.LVL326:
 3367              	.L252:
1899:Core/Src/bno055.c ****         }
1900:Core/Src/bno055.c ****         else
1901:Core/Src/bno055.c ****         {
1902:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1903:Core/Src/bno055.c ****         }
1904:Core/Src/bno055.c ****     }
1905:Core/Src/bno055.c **** 
1906:Core/Src/bno055.c ****     return com_rslt;
1907:Core/Src/bno055.c **** }
 3368              		.loc 1 1907 1 view .LVU941
 3369 003c 03B0     		add	sp, sp, #12
 3370              	.LCFI103:
 3371              		.cfi_remember_state
 3372              		.cfi_def_cfa_offset 12
 3373              		@ sp needed
 3374 003e 30BD     		pop	{r4, r5, pc}
 3375              	.LVL327:
 3376              	.L258:
 3377              	.LCFI104:
 3378              		.cfi_restore_state
1882:Core/Src/bno055.c ****         }
 3379              		.loc 1 1882 13 is_stmt 1 view .LVU942
1882:Core/Src/bno055.c ****         }
 3380              		.loc 1 1882 23 is_stmt 0 view .LVU943
 3381 0040 0020     		movs	r0, #0
 3382              	.LVL328:
1882:Core/Src/bno055.c ****         }
 3383              		.loc 1 1882 23 view .LVU944
 3384 0042 FFF7FEFF 		bl	bno055_write_page_id
 3385              	.LVL329:
1884:Core/Src/bno055.c ****         {
 3386              		.loc 1 1884 9 is_stmt 1 view .LVU945
1884:Core/Src/bno055.c ****         {
 3387              		.loc 1 1884 12 is_stmt 0 view .LVU946
 3388 0046 0028     		cmp	r0, #0
 3389 0048 E9D0     		beq	.L254
 3390 004a E4E7     		b	.L253
 3391              	.LVL330:
 3392              	.L255:
1873:Core/Src/bno055.c ****     }
 3393              		.loc 1 1873 16 view .LVU947
 3394 004c 6FF07E00 		mvn	r0, #126
 3395              	.LVL331:
1873:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 98


 3396              		.loc 1 1873 16 view .LVU948
 3397 0050 F4E7     		b	.L252
 3398              	.LVL332:
 3399              	.L256:
1902:Core/Src/bno055.c ****         }
 3400              		.loc 1 1902 22 view .LVU949
 3401 0052 4FF0FF30 		mov	r0, #-1
 3402 0056 F1E7     		b	.L252
 3403              	.L260:
 3404              		.align	2
 3405              	.L259:
 3406 0058 00000000 		.word	.LANCHOR0
 3407              		.cfi_endproc
 3408              	.LFE27:
 3410              		.section	.text.bno055_read_quaternion_x,"ax",%progbits
 3411              		.align	1
 3412              		.global	bno055_read_quaternion_x
 3413              		.syntax unified
 3414              		.thumb
 3415              		.thumb_func
 3417              	bno055_read_quaternion_x:
 3418              	.LVL333:
 3419              	.LFB28:
1908:Core/Src/bno055.c **** 
1909:Core/Src/bno055.c **** /*!
1910:Core/Src/bno055.c ****  *  @brief This API reads quaternion data x values
1911:Core/Src/bno055.c ****  *  from register 0x22 and 0x23 it is a two byte data
1912:Core/Src/bno055.c ****  *
1913:Core/Src/bno055.c ****  *  @param quaternion_x_s16 : The raw x data
1914:Core/Src/bno055.c ****  *
1915:Core/Src/bno055.c ****  *  @return results of bus communication function
1916:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1917:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1918:Core/Src/bno055.c ****  *
1919:Core/Src/bno055.c ****  *
1920:Core/Src/bno055.c ****  */
1921:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_x(s16 *quaternion_x_s16)
1922:Core/Src/bno055.c **** {
 3420              		.loc 1 1922 1 is_stmt 1 view -0
 3421              		.cfi_startproc
 3422              		@ args = 0, pretend = 0, frame = 8
 3423              		@ frame_needed = 0, uses_anonymous_args = 0
 3424              		.loc 1 1922 1 is_stmt 0 view .LVU951
 3425 0000 30B5     		push	{r4, r5, lr}
 3426              	.LCFI105:
 3427              		.cfi_def_cfa_offset 12
 3428              		.cfi_offset 4, -12
 3429              		.cfi_offset 5, -8
 3430              		.cfi_offset 14, -4
 3431 0002 83B0     		sub	sp, sp, #12
 3432              	.LCFI106:
 3433              		.cfi_def_cfa_offset 24
1923:Core/Src/bno055.c ****     /* Variable used to return value of
1924:Core/Src/bno055.c ****      * communication routine*/
1925:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3434              		.loc 1 1925 5 is_stmt 1 view .LVU952
 3435              	.LVL334:
ARM GAS  /tmp/ccO72alg.s 			page 99


1926:Core/Src/bno055.c **** 
1927:Core/Src/bno055.c ****     /* Array holding the quaternion x value
1928:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - x->LSB
1929:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - x->MSB
1930:Core/Src/bno055.c ****      */
1931:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3436              		.loc 1 1931 5 view .LVU953
 3437              		.loc 1 1931 8 is_stmt 0 view .LVU954
 3438 0004 0023     		movs	r3, #0
 3439 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1932:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3440              		.loc 1 1932 5 is_stmt 1 view .LVU955
 3441              	.LVL335:
1933:Core/Src/bno055.c **** 
1934:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1935:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3442              		.loc 1 1935 5 view .LVU956
 3443              		.loc 1 1935 18 is_stmt 0 view .LVU957
 3444 000a 134B     		ldr	r3, .L269
 3445 000c 1B68     		ldr	r3, [r3]
 3446              		.loc 1 1935 8 view .LVU958
 3447 000e EBB1     		cbz	r3, .L265
 3448 0010 0446     		mov	r4, r0
1936:Core/Src/bno055.c ****     {
1937:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
1938:Core/Src/bno055.c ****     }
1939:Core/Src/bno055.c ****     else
1940:Core/Src/bno055.c ****     {
1941:Core/Src/bno055.c ****         /*condition check for page, chip id is
1942:Core/Src/bno055.c ****          * available in the page zero*/
1943:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3449              		.loc 1 1943 9 is_stmt 1 view .LVU959
 3450              		.loc 1 1943 21 is_stmt 0 view .LVU960
 3451 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3452              		.loc 1 1943 12 view .LVU961
 3453 0014 A3B9     		cbnz	r3, .L268
 3454              	.LVL336:
 3455              	.L263:
1944:Core/Src/bno055.c ****         {
1945:Core/Src/bno055.c ****             /* Write the page zero*/
1946:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
1947:Core/Src/bno055.c ****         }
1948:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3456              		.loc 1 1948 53 discriminator 1 view .LVU962
 3457 0016 104B     		ldr	r3, .L269
 3458 0018 1B68     		ldr	r3, [r3]
 3459 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3460              		.loc 1 1948 41 discriminator 1 view .LVU963
 3461 001c CBB9     		cbnz	r3, .L266
 3462              	.L264:
1949:Core/Src/bno055.c ****         {
1950:Core/Src/bno055.c ****             /* Read the two byte value
1951:Core/Src/bno055.c ****              * of quaternion x data*/
1952:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3463              		.loc 1 1952 13 is_stmt 1 view .LVU964
 3464              		.loc 1 1952 32 is_stmt 0 view .LVU965
 3465 001e 0E4B     		ldr	r3, .L269
ARM GAS  /tmp/ccO72alg.s 			page 100


 3466 0020 1868     		ldr	r0, [r3]
 3467 0022 0569     		ldr	r5, [r0, #16]
 3468              		.loc 1 1952 24 view .LVU966
 3469 0024 0223     		movs	r3, #2
 3470 0026 01AA     		add	r2, sp, #4
 3471 0028 2221     		movs	r1, #34
 3472 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3473 002c A847     		blx	r5
 3474              	.LVL337:
1953:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_X_LSB_VALUEX_REG,
1954:Core/Src/bno055.c ****                                                       data_u8,
1955:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
1956:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3475              		.loc 1 1956 13 is_stmt 1 view .LVU967
1957:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1958:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3476              		.loc 1 1958 13 view .LVU968
1959:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
1960:Core/Src/bno055.c ****             *quaternion_x_s16 =
 3477              		.loc 1 1960 13 view .LVU969
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3478              		.loc 1 1961 31 is_stmt 0 view .LVU970
 3479 002e 9DF90520 		ldrsb	r2, [sp, #5]
1962:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3480              		.loc 1 1962 31 view .LVU971
 3481 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1961:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3482              		.loc 1 1961 17 view .LVU972
 3483 0036 43EA0223 		orr	r3, r3, r2, lsl #8
1960:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3484              		.loc 1 1960 31 view .LVU973
 3485 003a 2380     		strh	r3, [r4]	@ movhi
 3486              	.LVL338:
 3487              	.L262:
1963:Core/Src/bno055.c ****         }
1964:Core/Src/bno055.c ****         else
1965:Core/Src/bno055.c ****         {
1966:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
1967:Core/Src/bno055.c ****         }
1968:Core/Src/bno055.c ****     }
1969:Core/Src/bno055.c **** 
1970:Core/Src/bno055.c ****     return com_rslt;
1971:Core/Src/bno055.c **** }
 3488              		.loc 1 1971 1 view .LVU974
 3489 003c 03B0     		add	sp, sp, #12
 3490              	.LCFI107:
 3491              		.cfi_remember_state
 3492              		.cfi_def_cfa_offset 12
 3493              		@ sp needed
 3494 003e 30BD     		pop	{r4, r5, pc}
 3495              	.LVL339:
 3496              	.L268:
 3497              	.LCFI108:
 3498              		.cfi_restore_state
1946:Core/Src/bno055.c ****         }
 3499              		.loc 1 1946 13 is_stmt 1 view .LVU975
1946:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 101


 3500              		.loc 1 1946 23 is_stmt 0 view .LVU976
 3501 0040 0020     		movs	r0, #0
 3502              	.LVL340:
1946:Core/Src/bno055.c ****         }
 3503              		.loc 1 1946 23 view .LVU977
 3504 0042 FFF7FEFF 		bl	bno055_write_page_id
 3505              	.LVL341:
1948:Core/Src/bno055.c ****         {
 3506              		.loc 1 1948 9 is_stmt 1 view .LVU978
1948:Core/Src/bno055.c ****         {
 3507              		.loc 1 1948 12 is_stmt 0 view .LVU979
 3508 0046 0028     		cmp	r0, #0
 3509 0048 E9D0     		beq	.L264
 3510 004a E4E7     		b	.L263
 3511              	.LVL342:
 3512              	.L265:
1937:Core/Src/bno055.c ****     }
 3513              		.loc 1 1937 16 view .LVU980
 3514 004c 6FF07E00 		mvn	r0, #126
 3515              	.LVL343:
1937:Core/Src/bno055.c ****     }
 3516              		.loc 1 1937 16 view .LVU981
 3517 0050 F4E7     		b	.L262
 3518              	.LVL344:
 3519              	.L266:
1966:Core/Src/bno055.c ****         }
 3520              		.loc 1 1966 22 view .LVU982
 3521 0052 4FF0FF30 		mov	r0, #-1
 3522 0056 F1E7     		b	.L262
 3523              	.L270:
 3524              		.align	2
 3525              	.L269:
 3526 0058 00000000 		.word	.LANCHOR0
 3527              		.cfi_endproc
 3528              	.LFE28:
 3530              		.section	.text.bno055_read_quaternion_y,"ax",%progbits
 3531              		.align	1
 3532              		.global	bno055_read_quaternion_y
 3533              		.syntax unified
 3534              		.thumb
 3535              		.thumb_func
 3537              	bno055_read_quaternion_y:
 3538              	.LVL345:
 3539              	.LFB29:
1972:Core/Src/bno055.c **** 
1973:Core/Src/bno055.c **** /*!
1974:Core/Src/bno055.c ****  *  @brief This API reads quaternion data y values
1975:Core/Src/bno055.c ****  *  from register 0x24 and 0x25 it is a two byte data
1976:Core/Src/bno055.c ****  *
1977:Core/Src/bno055.c ****  *  @param quaternion_y_s16 : The raw y data
1978:Core/Src/bno055.c ****  *
1979:Core/Src/bno055.c ****  *  @return results of bus communication function
1980:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
1981:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
1982:Core/Src/bno055.c ****  *
1983:Core/Src/bno055.c ****  *
1984:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccO72alg.s 			page 102


1985:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_y(s16 *quaternion_y_s16)
1986:Core/Src/bno055.c **** {
 3540              		.loc 1 1986 1 is_stmt 1 view -0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 8
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              		.loc 1 1986 1 is_stmt 0 view .LVU984
 3545 0000 30B5     		push	{r4, r5, lr}
 3546              	.LCFI109:
 3547              		.cfi_def_cfa_offset 12
 3548              		.cfi_offset 4, -12
 3549              		.cfi_offset 5, -8
 3550              		.cfi_offset 14, -4
 3551 0002 83B0     		sub	sp, sp, #12
 3552              	.LCFI110:
 3553              		.cfi_def_cfa_offset 24
1987:Core/Src/bno055.c ****     /* Variable used to return value of
1988:Core/Src/bno055.c ****      * communication routine*/
1989:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3554              		.loc 1 1989 5 is_stmt 1 view .LVU985
 3555              	.LVL346:
1990:Core/Src/bno055.c **** 
1991:Core/Src/bno055.c ****     /* Array holding the quaternion y value
1992:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - y->LSB
1993:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - y->MSB
1994:Core/Src/bno055.c ****      */
1995:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3556              		.loc 1 1995 5 view .LVU986
 3557              		.loc 1 1995 8 is_stmt 0 view .LVU987
 3558 0004 0023     		movs	r3, #0
 3559 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
1996:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3560              		.loc 1 1996 5 is_stmt 1 view .LVU988
 3561              	.LVL347:
1997:Core/Src/bno055.c **** 
1998:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
1999:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3562              		.loc 1 1999 5 view .LVU989
 3563              		.loc 1 1999 18 is_stmt 0 view .LVU990
 3564 000a 134B     		ldr	r3, .L279
 3565 000c 1B68     		ldr	r3, [r3]
 3566              		.loc 1 1999 8 view .LVU991
 3567 000e EBB1     		cbz	r3, .L275
 3568 0010 0446     		mov	r4, r0
2000:Core/Src/bno055.c ****     {
2001:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2002:Core/Src/bno055.c ****     }
2003:Core/Src/bno055.c ****     else
2004:Core/Src/bno055.c ****     {
2005:Core/Src/bno055.c ****         /*condition check for page, chip id is
2006:Core/Src/bno055.c ****          * available in the page zero*/
2007:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3569              		.loc 1 2007 9 is_stmt 1 view .LVU992
 3570              		.loc 1 2007 21 is_stmt 0 view .LVU993
 3571 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3572              		.loc 1 2007 12 view .LVU994
 3573 0014 A3B9     		cbnz	r3, .L278
ARM GAS  /tmp/ccO72alg.s 			page 103


 3574              	.LVL348:
 3575              	.L273:
2008:Core/Src/bno055.c ****         {
2009:Core/Src/bno055.c ****             /* Write the page zero*/
2010:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2011:Core/Src/bno055.c ****         }
2012:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3576              		.loc 1 2012 53 discriminator 1 view .LVU995
 3577 0016 104B     		ldr	r3, .L279
 3578 0018 1B68     		ldr	r3, [r3]
 3579 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3580              		.loc 1 2012 41 discriminator 1 view .LVU996
 3581 001c CBB9     		cbnz	r3, .L276
 3582              	.L274:
2013:Core/Src/bno055.c ****         {
2014:Core/Src/bno055.c ****             /* Read the two byte value
2015:Core/Src/bno055.c ****              * of quaternion y data*/
2016:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3583              		.loc 1 2016 13 is_stmt 1 view .LVU997
 3584              		.loc 1 2016 32 is_stmt 0 view .LVU998
 3585 001e 0E4B     		ldr	r3, .L279
 3586 0020 1868     		ldr	r0, [r3]
 3587 0022 0569     		ldr	r5, [r0, #16]
 3588              		.loc 1 2016 24 view .LVU999
 3589 0024 0223     		movs	r3, #2
 3590 0026 01AA     		add	r2, sp, #4
 3591 0028 2421     		movs	r1, #36
 3592 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3593 002c A847     		blx	r5
 3594              	.LVL349:
2017:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Y_LSB_VALUEY_REG,
2018:Core/Src/bno055.c ****                                                       data_u8,
2019:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2020:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3595              		.loc 1 2020 13 is_stmt 1 view .LVU1000
2021:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2022:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3596              		.loc 1 2022 13 view .LVU1001
2023:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2024:Core/Src/bno055.c ****             *quaternion_y_s16 =
 3597              		.loc 1 2024 13 view .LVU1002
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3598              		.loc 1 2025 31 is_stmt 0 view .LVU1003
 3599 002e 9DF90520 		ldrsb	r2, [sp, #5]
2026:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3600              		.loc 1 2026 31 view .LVU1004
 3601 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2025:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3602              		.loc 1 2025 17 view .LVU1005
 3603 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2024:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3604              		.loc 1 2024 31 view .LVU1006
 3605 003a 2380     		strh	r3, [r4]	@ movhi
 3606              	.LVL350:
 3607              	.L272:
2027:Core/Src/bno055.c ****         }
2028:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccO72alg.s 			page 104


2029:Core/Src/bno055.c ****         {
2030:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2031:Core/Src/bno055.c ****         }
2032:Core/Src/bno055.c ****     }
2033:Core/Src/bno055.c **** 
2034:Core/Src/bno055.c ****     return com_rslt;
2035:Core/Src/bno055.c **** }
 3608              		.loc 1 2035 1 view .LVU1007
 3609 003c 03B0     		add	sp, sp, #12
 3610              	.LCFI111:
 3611              		.cfi_remember_state
 3612              		.cfi_def_cfa_offset 12
 3613              		@ sp needed
 3614 003e 30BD     		pop	{r4, r5, pc}
 3615              	.LVL351:
 3616              	.L278:
 3617              	.LCFI112:
 3618              		.cfi_restore_state
2010:Core/Src/bno055.c ****         }
 3619              		.loc 1 2010 13 is_stmt 1 view .LVU1008
2010:Core/Src/bno055.c ****         }
 3620              		.loc 1 2010 23 is_stmt 0 view .LVU1009
 3621 0040 0020     		movs	r0, #0
 3622              	.LVL352:
2010:Core/Src/bno055.c ****         }
 3623              		.loc 1 2010 23 view .LVU1010
 3624 0042 FFF7FEFF 		bl	bno055_write_page_id
 3625              	.LVL353:
2012:Core/Src/bno055.c ****         {
 3626              		.loc 1 2012 9 is_stmt 1 view .LVU1011
2012:Core/Src/bno055.c ****         {
 3627              		.loc 1 2012 12 is_stmt 0 view .LVU1012
 3628 0046 0028     		cmp	r0, #0
 3629 0048 E9D0     		beq	.L274
 3630 004a E4E7     		b	.L273
 3631              	.LVL354:
 3632              	.L275:
2001:Core/Src/bno055.c ****     }
 3633              		.loc 1 2001 16 view .LVU1013
 3634 004c 6FF07E00 		mvn	r0, #126
 3635              	.LVL355:
2001:Core/Src/bno055.c ****     }
 3636              		.loc 1 2001 16 view .LVU1014
 3637 0050 F4E7     		b	.L272
 3638              	.LVL356:
 3639              	.L276:
2030:Core/Src/bno055.c ****         }
 3640              		.loc 1 2030 22 view .LVU1015
 3641 0052 4FF0FF30 		mov	r0, #-1
 3642 0056 F1E7     		b	.L272
 3643              	.L280:
 3644              		.align	2
 3645              	.L279:
 3646 0058 00000000 		.word	.LANCHOR0
 3647              		.cfi_endproc
 3648              	.LFE29:
 3650              		.section	.text.bno055_read_quaternion_z,"ax",%progbits
ARM GAS  /tmp/ccO72alg.s 			page 105


 3651              		.align	1
 3652              		.global	bno055_read_quaternion_z
 3653              		.syntax unified
 3654              		.thumb
 3655              		.thumb_func
 3657              	bno055_read_quaternion_z:
 3658              	.LVL357:
 3659              	.LFB30:
2036:Core/Src/bno055.c **** 
2037:Core/Src/bno055.c **** /*!
2038:Core/Src/bno055.c ****  *  @brief This API reads quaternion data z values
2039:Core/Src/bno055.c ****  *  from register 0x26 and 0x27 it is a two byte data
2040:Core/Src/bno055.c ****  *
2041:Core/Src/bno055.c ****  *  @param quaternion_z_s16 : The raw z data
2042:Core/Src/bno055.c ****  *
2043:Core/Src/bno055.c ****  *  @return results of bus communication function
2044:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2045:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2046:Core/Src/bno055.c ****  *
2047:Core/Src/bno055.c ****  *
2048:Core/Src/bno055.c ****  */
2049:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_z(s16 *quaternion_z_s16)
2050:Core/Src/bno055.c **** {
 3660              		.loc 1 2050 1 is_stmt 1 view -0
 3661              		.cfi_startproc
 3662              		@ args = 0, pretend = 0, frame = 8
 3663              		@ frame_needed = 0, uses_anonymous_args = 0
 3664              		.loc 1 2050 1 is_stmt 0 view .LVU1017
 3665 0000 30B5     		push	{r4, r5, lr}
 3666              	.LCFI113:
 3667              		.cfi_def_cfa_offset 12
 3668              		.cfi_offset 4, -12
 3669              		.cfi_offset 5, -8
 3670              		.cfi_offset 14, -4
 3671 0002 83B0     		sub	sp, sp, #12
 3672              	.LCFI114:
 3673              		.cfi_def_cfa_offset 24
2051:Core/Src/bno055.c ****     /* Variable used to return value of
2052:Core/Src/bno055.c ****      * communication routine*/
2053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3674              		.loc 1 2053 5 is_stmt 1 view .LVU1018
 3675              	.LVL358:
2054:Core/Src/bno055.c **** 
2055:Core/Src/bno055.c ****     /* Array holding the quaternion z value
2056:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] - z->LSB
2057:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] - z->MSB
2058:Core/Src/bno055.c ****      */
2059:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3676              		.loc 1 2059 5 view .LVU1019
 3677              		.loc 1 2059 8 is_stmt 0 view .LVU1020
 3678 0004 0023     		movs	r3, #0
 3679 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2060:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3680              		.loc 1 2060 5 is_stmt 1 view .LVU1021
 3681              	.LVL359:
2061:Core/Src/bno055.c **** 
2062:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccO72alg.s 			page 106


2063:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3682              		.loc 1 2063 5 view .LVU1022
 3683              		.loc 1 2063 18 is_stmt 0 view .LVU1023
 3684 000a 134B     		ldr	r3, .L289
 3685 000c 1B68     		ldr	r3, [r3]
 3686              		.loc 1 2063 8 view .LVU1024
 3687 000e EBB1     		cbz	r3, .L285
 3688 0010 0446     		mov	r4, r0
2064:Core/Src/bno055.c ****     {
2065:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2066:Core/Src/bno055.c ****     }
2067:Core/Src/bno055.c ****     else
2068:Core/Src/bno055.c ****     {
2069:Core/Src/bno055.c ****         /*condition check for page, chip id is
2070:Core/Src/bno055.c ****          * available in the page zero*/
2071:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3689              		.loc 1 2071 9 is_stmt 1 view .LVU1025
 3690              		.loc 1 2071 21 is_stmt 0 view .LVU1026
 3691 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3692              		.loc 1 2071 12 view .LVU1027
 3693 0014 A3B9     		cbnz	r3, .L288
 3694              	.LVL360:
 3695              	.L283:
2072:Core/Src/bno055.c ****         {
2073:Core/Src/bno055.c ****             /* Write the page zero*/
2074:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2075:Core/Src/bno055.c ****         }
2076:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3696              		.loc 1 2076 53 discriminator 1 view .LVU1028
 3697 0016 104B     		ldr	r3, .L289
 3698 0018 1B68     		ldr	r3, [r3]
 3699 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3700              		.loc 1 2076 41 discriminator 1 view .LVU1029
 3701 001c CBB9     		cbnz	r3, .L286
 3702              	.L284:
2077:Core/Src/bno055.c ****         {
2078:Core/Src/bno055.c ****             /* Read the two byte value
2079:Core/Src/bno055.c ****              * of quaternion z data*/
2080:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3703              		.loc 1 2080 13 is_stmt 1 view .LVU1030
 3704              		.loc 1 2080 32 is_stmt 0 view .LVU1031
 3705 001e 0E4B     		ldr	r3, .L289
 3706 0020 1868     		ldr	r0, [r3]
 3707 0022 0569     		ldr	r5, [r0, #16]
 3708              		.loc 1 2080 24 view .LVU1032
 3709 0024 0223     		movs	r3, #2
 3710 0026 01AA     		add	r2, sp, #4
 3711 0028 2621     		movs	r1, #38
 3712 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3713 002c A847     		blx	r5
 3714              	.LVL361:
2081:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_Z_LSB_VALUEZ_REG,
2082:Core/Src/bno055.c ****                                                       data_u8,
2083:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2084:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3715              		.loc 1 2084 13 is_stmt 1 view .LVU1033
2085:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
ARM GAS  /tmp/ccO72alg.s 			page 107


2086:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_
 3716              		.loc 1 2086 13 view .LVU1034
2087:Core/Src/bno055.c ****                                                                              BNO055_QUATERNION_DATA
2088:Core/Src/bno055.c ****             *quaternion_z_s16 =
 3717              		.loc 1 2088 13 view .LVU1035
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3718              		.loc 1 2089 31 is_stmt 0 view .LVU1036
 3719 002e 9DF90520 		ldrsb	r2, [sp, #5]
2090:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_LSB]));
 3720              		.loc 1 2090 31 view .LVU1037
 3721 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2089:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3722              		.loc 1 2089 17 view .LVU1038
 3723 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2088:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_MSB])) << BNO055_SHIFT_EIGH
 3724              		.loc 1 2088 31 view .LVU1039
 3725 003a 2380     		strh	r3, [r4]	@ movhi
 3726              	.LVL362:
 3727              	.L282:
2091:Core/Src/bno055.c ****         }
2092:Core/Src/bno055.c ****         else
2093:Core/Src/bno055.c ****         {
2094:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2095:Core/Src/bno055.c ****         }
2096:Core/Src/bno055.c ****     }
2097:Core/Src/bno055.c **** 
2098:Core/Src/bno055.c ****     return com_rslt;
2099:Core/Src/bno055.c **** }
 3728              		.loc 1 2099 1 view .LVU1040
 3729 003c 03B0     		add	sp, sp, #12
 3730              	.LCFI115:
 3731              		.cfi_remember_state
 3732              		.cfi_def_cfa_offset 12
 3733              		@ sp needed
 3734 003e 30BD     		pop	{r4, r5, pc}
 3735              	.LVL363:
 3736              	.L288:
 3737              	.LCFI116:
 3738              		.cfi_restore_state
2074:Core/Src/bno055.c ****         }
 3739              		.loc 1 2074 13 is_stmt 1 view .LVU1041
2074:Core/Src/bno055.c ****         }
 3740              		.loc 1 2074 23 is_stmt 0 view .LVU1042
 3741 0040 0020     		movs	r0, #0
 3742              	.LVL364:
2074:Core/Src/bno055.c ****         }
 3743              		.loc 1 2074 23 view .LVU1043
 3744 0042 FFF7FEFF 		bl	bno055_write_page_id
 3745              	.LVL365:
2076:Core/Src/bno055.c ****         {
 3746              		.loc 1 2076 9 is_stmt 1 view .LVU1044
2076:Core/Src/bno055.c ****         {
 3747              		.loc 1 2076 12 is_stmt 0 view .LVU1045
 3748 0046 0028     		cmp	r0, #0
 3749 0048 E9D0     		beq	.L284
 3750 004a E4E7     		b	.L283
 3751              	.LVL366:
ARM GAS  /tmp/ccO72alg.s 			page 108


 3752              	.L285:
2065:Core/Src/bno055.c ****     }
 3753              		.loc 1 2065 16 view .LVU1046
 3754 004c 6FF07E00 		mvn	r0, #126
 3755              	.LVL367:
2065:Core/Src/bno055.c ****     }
 3756              		.loc 1 2065 16 view .LVU1047
 3757 0050 F4E7     		b	.L282
 3758              	.LVL368:
 3759              	.L286:
2094:Core/Src/bno055.c ****         }
 3760              		.loc 1 2094 22 view .LVU1048
 3761 0052 4FF0FF30 		mov	r0, #-1
 3762 0056 F1E7     		b	.L282
 3763              	.L290:
 3764              		.align	2
 3765              	.L289:
 3766 0058 00000000 		.word	.LANCHOR0
 3767              		.cfi_endproc
 3768              	.LFE30:
 3770              		.section	.text.bno055_read_quaternion_wxyz,"ax",%progbits
 3771              		.align	1
 3772              		.global	bno055_read_quaternion_wxyz
 3773              		.syntax unified
 3774              		.thumb
 3775              		.thumb_func
 3777              	bno055_read_quaternion_wxyz:
 3778              	.LVL369:
 3779              	.LFB31:
2100:Core/Src/bno055.c **** 
2101:Core/Src/bno055.c **** /*!
2102:Core/Src/bno055.c ****  *  @brief This API reads Quaternion data wxyz values
2103:Core/Src/bno055.c ****  *  from register 0x20 to 0x27 it is a six byte data
2104:Core/Src/bno055.c ****  *
2105:Core/Src/bno055.c ****  *
2106:Core/Src/bno055.c ****  *  @param quaternion : The value of quaternion wxyz data's
2107:Core/Src/bno055.c ****  *
2108:Core/Src/bno055.c ****  *  Parameter |    result
2109:Core/Src/bno055.c ****  *  --------- | -----------------
2110:Core/Src/bno055.c ****  *   w        | The quaternion w data
2111:Core/Src/bno055.c ****  *   x        | The quaternion x data
2112:Core/Src/bno055.c ****  *   y        | The quaternion y data
2113:Core/Src/bno055.c ****  *   z        | The quaternion z data
2114:Core/Src/bno055.c ****  *
2115:Core/Src/bno055.c ****  *
2116:Core/Src/bno055.c ****  *
2117:Core/Src/bno055.c ****  *  @return results of bus communication function
2118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2120:Core/Src/bno055.c ****  *
2121:Core/Src/bno055.c ****  */
2122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_quaternion_wxyz(struct bno055_quaternion_t *quaternion)
2123:Core/Src/bno055.c **** {
 3780              		.loc 1 2123 1 is_stmt 1 view -0
 3781              		.cfi_startproc
 3782              		@ args = 0, pretend = 0, frame = 8
 3783              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccO72alg.s 			page 109


 3784              		.loc 1 2123 1 is_stmt 0 view .LVU1050
 3785 0000 30B5     		push	{r4, r5, lr}
 3786              	.LCFI117:
 3787              		.cfi_def_cfa_offset 12
 3788              		.cfi_offset 4, -12
 3789              		.cfi_offset 5, -8
 3790              		.cfi_offset 14, -4
 3791 0002 83B0     		sub	sp, sp, #12
 3792              	.LCFI118:
 3793              		.cfi_def_cfa_offset 24
 3794 0004 0446     		mov	r4, r0
2124:Core/Src/bno055.c ****     /* Variable used to return value of
2125:Core/Src/bno055.c ****      * communication routine*/
2126:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3795              		.loc 1 2126 5 is_stmt 1 view .LVU1051
 3796              	.LVL370:
2127:Core/Src/bno055.c **** 
2128:Core/Src/bno055.c ****     /* Array holding the quaternion wxyz value
2129:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] - w->LSB
2130:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] - w->MSB
2131:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] - x->LSB
2132:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] - x->MSB
2133:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] - y->MSB
2134:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] - y->MSB
2135:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] - z->MSB
2136:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] - z->MSB
2137:Core/Src/bno055.c ****      */
2138:Core/Src/bno055.c ****     u8 data_u8[BNO055_QUATERNION_WXYZ_DATA_SIZE] = {
 3797              		.loc 1 2138 5 view .LVU1052
 3798              		.loc 1 2138 8 is_stmt 0 view .LVU1053
 3799 0006 214B     		ldr	r3, .L299
 3800 0008 93E80300 		ldm	r3, {r0, r1}
 3801              	.LVL371:
 3802              		.loc 1 2138 8 view .LVU1054
 3803 000c 02AB     		add	r3, sp, #8
 3804 000e 03E90300 		stmdb	r3, {r0, r1}
2139:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2140:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
2141:Core/Src/bno055.c ****     };
2142:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3805              		.loc 1 2142 5 is_stmt 1 view .LVU1055
 3806              	.LVL372:
2143:Core/Src/bno055.c **** 
2144:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2145:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3807              		.loc 1 2145 5 view .LVU1056
 3808              		.loc 1 2145 18 is_stmt 0 view .LVU1057
 3809 0012 1F4B     		ldr	r3, .L299+4
 3810 0014 1B68     		ldr	r3, [r3]
 3811              		.loc 1 2145 8 view .LVU1058
 3812 0016 002B     		cmp	r3, #0
 3813 0018 31D0     		beq	.L295
2146:Core/Src/bno055.c ****     {
2147:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2148:Core/Src/bno055.c ****     }
2149:Core/Src/bno055.c ****     else
2150:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 110


2151:Core/Src/bno055.c ****         /*condition check for page, chip id is
2152:Core/Src/bno055.c ****          * available in the page zero*/
2153:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3814              		.loc 1 2153 9 is_stmt 1 view .LVU1059
 3815              		.loc 1 2153 21 is_stmt 0 view .LVU1060
 3816 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3817              		.loc 1 2153 12 view .LVU1061
 3818 001c 4BBB     		cbnz	r3, .L298
 3819              	.LVL373:
 3820              	.L293:
2154:Core/Src/bno055.c ****         {
2155:Core/Src/bno055.c ****             /* Write the page zero*/
2156:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2157:Core/Src/bno055.c ****         }
2158:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3821              		.loc 1 2158 53 discriminator 1 view .LVU1062
 3822 001e 1C4B     		ldr	r3, .L299+4
 3823 0020 1B68     		ldr	r3, [r3]
 3824 0022 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3825              		.loc 1 2158 41 discriminator 1 view .LVU1063
 3826 0024 73BB     		cbnz	r3, .L296
 3827              	.L294:
2159:Core/Src/bno055.c ****         {
2160:Core/Src/bno055.c ****             /* Read the eight byte value
2161:Core/Src/bno055.c ****              * of quaternion wxyz data*/
2162:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3828              		.loc 1 2162 13 is_stmt 1 view .LVU1064
 3829              		.loc 1 2162 32 is_stmt 0 view .LVU1065
 3830 0026 1A4B     		ldr	r3, .L299+4
 3831 0028 1868     		ldr	r0, [r3]
 3832 002a 0569     		ldr	r5, [r0, #16]
 3833              		.loc 1 2162 24 view .LVU1066
 3834 002c 0823     		movs	r3, #8
 3835 002e 6A46     		mov	r2, sp
 3836 0030 2021     		movs	r1, #32
 3837 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3838 0034 A847     		blx	r5
 3839              	.LVL374:
2163:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_DATA_W_LSB_VALUEW_REG,
2164:Core/Src/bno055.c ****                                                       data_u8,
2165:Core/Src/bno055.c ****                                                       BNO055_QUATERNION_WXYZ_DATA_SIZE);
2166:Core/Src/bno055.c **** 
2167:Core/Src/bno055.c ****             /* Data W*/
2168:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB] =
 3840              		.loc 1 2168 13 is_stmt 1 view .LVU1067
2169:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB],
2170:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_LSB_VALUEW);
2171:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB] =
 3841              		.loc 1 2171 13 view .LVU1068
2172:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB],
2173:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_W_MSB_VALUEW);
2174:Core/Src/bno055.c ****             quaternion->w =
 3842              		.loc 1 2174 13 view .LVU1069
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3843              		.loc 1 2175 31 is_stmt 0 view .LVU1070
 3844 0036 9DF90120 		ldrsb	r2, [sp, #1]
2176:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_LSB]));
ARM GAS  /tmp/ccO72alg.s 			page 111


 3845              		.loc 1 2176 31 view .LVU1071
 3846 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2175:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3847              		.loc 1 2175 17 view .LVU1072
 3848 003e 43EA0223 		orr	r3, r3, r2, lsl #8
2174:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_W_MSB])) << BNO055_SHI
 3849              		.loc 1 2174 27 view .LVU1073
 3850 0042 2380     		strh	r3, [r4]	@ movhi
2177:Core/Src/bno055.c **** 
2178:Core/Src/bno055.c ****             /* Data X*/
2179:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB] =
 3851              		.loc 1 2179 13 is_stmt 1 view .LVU1074
2180:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB],
2181:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_LSB_VALUEX);
2182:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB] =
 3852              		.loc 1 2182 13 view .LVU1075
2183:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB],
2184:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_X_MSB_VALUEX);
2185:Core/Src/bno055.c ****             quaternion->x =
 3853              		.loc 1 2185 13 view .LVU1076
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3854              		.loc 1 2186 31 is_stmt 0 view .LVU1077
 3855 0044 9DF90320 		ldrsb	r2, [sp, #3]
2187:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_LSB]));
 3856              		.loc 1 2187 31 view .LVU1078
 3857 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2186:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3858              		.loc 1 2186 17 view .LVU1079
 3859 004c 43EA0223 		orr	r3, r3, r2, lsl #8
2185:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_X_MSB])) << BNO055_SHI
 3860              		.loc 1 2185 27 view .LVU1080
 3861 0050 6380     		strh	r3, [r4, #2]	@ movhi
2188:Core/Src/bno055.c **** 
2189:Core/Src/bno055.c ****             /* Data Y*/
2190:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB] =
 3862              		.loc 1 2190 13 is_stmt 1 view .LVU1081
2191:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB],
2192:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_LSB_VALUEY);
2193:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB] =
 3863              		.loc 1 2193 13 view .LVU1082
2194:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB],
2195:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Y_MSB_VALUEY);
2196:Core/Src/bno055.c ****             quaternion->y =
 3864              		.loc 1 2196 13 view .LVU1083
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3865              		.loc 1 2197 31 is_stmt 0 view .LVU1084
 3866 0052 9DF90520 		ldrsb	r2, [sp, #5]
2198:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_LSB]));
 3867              		.loc 1 2198 31 view .LVU1085
 3868 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2197:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3869              		.loc 1 2197 17 view .LVU1086
 3870 005a 43EA0223 		orr	r3, r3, r2, lsl #8
2196:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Y_MSB])) << BNO055_SHI
 3871              		.loc 1 2196 27 view .LVU1087
 3872 005e A380     		strh	r3, [r4, #4]	@ movhi
2199:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 112


2200:Core/Src/bno055.c ****             /* Data Z*/
2201:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB] =
 3873              		.loc 1 2201 13 is_stmt 1 view .LVU1088
2202:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB],
2203:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_LSB_VALUEZ);
2204:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB] =
 3874              		.loc 1 2204 13 view .LVU1089
2205:Core/Src/bno055.c ****                 BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB],
2206:Core/Src/bno055.c ****                                     BNO055_QUATERNION_DATA_Z_MSB_VALUEZ);
2207:Core/Src/bno055.c ****             quaternion->z =
 3875              		.loc 1 2207 13 view .LVU1090
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3876              		.loc 1 2208 31 is_stmt 0 view .LVU1091
 3877 0060 9DF90720 		ldrsb	r2, [sp, #7]
2209:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_LSB]));
 3878              		.loc 1 2209 31 view .LVU1092
 3879 0064 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
2208:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3880              		.loc 1 2208 17 view .LVU1093
 3881 0068 43EA0223 		orr	r3, r3, r2, lsl #8
2207:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_QUATERNION_WXYZ_Z_MSB])) << BNO055_SHI
 3882              		.loc 1 2207 27 view .LVU1094
 3883 006c E380     		strh	r3, [r4, #6]	@ movhi
 3884              	.LVL375:
 3885              	.L292:
2210:Core/Src/bno055.c ****         }
2211:Core/Src/bno055.c ****         else
2212:Core/Src/bno055.c ****         {
2213:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2214:Core/Src/bno055.c ****         }
2215:Core/Src/bno055.c ****     }
2216:Core/Src/bno055.c **** 
2217:Core/Src/bno055.c ****     return com_rslt;
2218:Core/Src/bno055.c **** }
 3886              		.loc 1 2218 1 view .LVU1095
 3887 006e 03B0     		add	sp, sp, #12
 3888              	.LCFI119:
 3889              		.cfi_remember_state
 3890              		.cfi_def_cfa_offset 12
 3891              		@ sp needed
 3892 0070 30BD     		pop	{r4, r5, pc}
 3893              	.LVL376:
 3894              	.L298:
 3895              	.LCFI120:
 3896              		.cfi_restore_state
2156:Core/Src/bno055.c ****         }
 3897              		.loc 1 2156 13 is_stmt 1 view .LVU1096
2156:Core/Src/bno055.c ****         }
 3898              		.loc 1 2156 23 is_stmt 0 view .LVU1097
 3899 0072 0020     		movs	r0, #0
 3900 0074 FFF7FEFF 		bl	bno055_write_page_id
 3901              	.LVL377:
2158:Core/Src/bno055.c ****         {
 3902              		.loc 1 2158 9 is_stmt 1 view .LVU1098
2158:Core/Src/bno055.c ****         {
 3903              		.loc 1 2158 12 is_stmt 0 view .LVU1099
 3904 0078 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 113


 3905 007a D4D0     		beq	.L294
 3906 007c CFE7     		b	.L293
 3907              	.LVL378:
 3908              	.L295:
2147:Core/Src/bno055.c ****     }
 3909              		.loc 1 2147 16 view .LVU1100
 3910 007e 6FF07E00 		mvn	r0, #126
 3911 0082 F4E7     		b	.L292
 3912              	.LVL379:
 3913              	.L296:
2213:Core/Src/bno055.c ****         }
 3914              		.loc 1 2213 22 view .LVU1101
 3915 0084 4FF0FF30 		mov	r0, #-1
 3916 0088 F1E7     		b	.L292
 3917              	.L300:
 3918 008a 00BF     		.align	2
 3919              	.L299:
 3920 008c 08000000 		.word	.LANCHOR1+8
 3921 0090 00000000 		.word	.LANCHOR0
 3922              		.cfi_endproc
 3923              	.LFE31:
 3925              		.section	.text.bno055_read_linear_accel_x,"ax",%progbits
 3926              		.align	1
 3927              		.global	bno055_read_linear_accel_x
 3928              		.syntax unified
 3929              		.thumb
 3930              		.thumb_func
 3932              	bno055_read_linear_accel_x:
 3933              	.LVL380:
 3934              	.LFB32:
2219:Core/Src/bno055.c **** 
2220:Core/Src/bno055.c **** /*!
2221:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2222:Core/Src/bno055.c ****  *  from register 0x29 and 0x2A it is a two byte data
2223:Core/Src/bno055.c ****  *
2224:Core/Src/bno055.c ****  *  @param linear_accel_x_s16 : The raw x data
2225:Core/Src/bno055.c ****  *
2226:Core/Src/bno055.c ****  *  @return results of bus communication function
2227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2229:Core/Src/bno055.c ****  *
2230:Core/Src/bno055.c ****  *
2231:Core/Src/bno055.c ****  */
2232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_x(s16 *linear_accel_x_s16)
2233:Core/Src/bno055.c **** {
 3935              		.loc 1 2233 1 is_stmt 1 view -0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 8
 3938              		@ frame_needed = 0, uses_anonymous_args = 0
 3939              		.loc 1 2233 1 is_stmt 0 view .LVU1103
 3940 0000 30B5     		push	{r4, r5, lr}
 3941              	.LCFI121:
 3942              		.cfi_def_cfa_offset 12
 3943              		.cfi_offset 4, -12
 3944              		.cfi_offset 5, -8
 3945              		.cfi_offset 14, -4
 3946 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 114


 3947              	.LCFI122:
 3948              		.cfi_def_cfa_offset 24
2234:Core/Src/bno055.c ****     /* Variable used to return value of
2235:Core/Src/bno055.c ****      * communication routine*/
2236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 3949              		.loc 1 2236 5 is_stmt 1 view .LVU1104
 3950              	.LVL381:
2237:Core/Src/bno055.c **** 
2238:Core/Src/bno055.c ****     /* Array holding the linear accel x value
2239:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2240:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2241:Core/Src/bno055.c ****      */
2242:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 3951              		.loc 1 2242 5 view .LVU1105
 3952              		.loc 1 2242 8 is_stmt 0 view .LVU1106
 3953 0004 0023     		movs	r3, #0
 3954 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2243:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 3955              		.loc 1 2243 5 is_stmt 1 view .LVU1107
 3956              	.LVL382:
2244:Core/Src/bno055.c **** 
2245:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2246:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 3957              		.loc 1 2246 5 view .LVU1108
 3958              		.loc 1 2246 18 is_stmt 0 view .LVU1109
 3959 000a 134B     		ldr	r3, .L309
 3960 000c 1B68     		ldr	r3, [r3]
 3961              		.loc 1 2246 8 view .LVU1110
 3962 000e EBB1     		cbz	r3, .L305
 3963 0010 0446     		mov	r4, r0
2247:Core/Src/bno055.c ****     {
2248:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2249:Core/Src/bno055.c ****     }
2250:Core/Src/bno055.c ****     else
2251:Core/Src/bno055.c ****     {
2252:Core/Src/bno055.c ****         /*condition check for page, chip id is
2253:Core/Src/bno055.c ****          * available in the page zero*/
2254:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 3964              		.loc 1 2254 9 is_stmt 1 view .LVU1111
 3965              		.loc 1 2254 21 is_stmt 0 view .LVU1112
 3966 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3967              		.loc 1 2254 12 view .LVU1113
 3968 0014 A3B9     		cbnz	r3, .L308
 3969              	.LVL383:
 3970              	.L303:
2255:Core/Src/bno055.c ****         {
2256:Core/Src/bno055.c ****             /* Write the page zero*/
2257:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2258:Core/Src/bno055.c ****         }
2259:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 3971              		.loc 1 2259 53 discriminator 1 view .LVU1114
 3972 0016 104B     		ldr	r3, .L309
 3973 0018 1B68     		ldr	r3, [r3]
 3974 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3975              		.loc 1 2259 41 discriminator 1 view .LVU1115
 3976 001c CBB9     		cbnz	r3, .L306
 3977              	.L304:
ARM GAS  /tmp/ccO72alg.s 			page 115


2260:Core/Src/bno055.c ****         {
2261:Core/Src/bno055.c ****             /* Read the two byte value
2262:Core/Src/bno055.c ****             * of linear accel x data*/
2263:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 3978              		.loc 1 2263 13 is_stmt 1 view .LVU1116
 3979              		.loc 1 2263 32 is_stmt 0 view .LVU1117
 3980 001e 0E4B     		ldr	r3, .L309
 3981 0020 1868     		ldr	r0, [r3]
 3982 0022 0569     		ldr	r5, [r0, #16]
 3983              		.loc 1 2263 24 view .LVU1118
 3984 0024 0223     		movs	r3, #2
 3985 0026 01AA     		add	r2, sp, #4
 3986 0028 2821     		movs	r1, #40
 3987 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 3988 002c A847     		blx	r5
 3989              	.LVL384:
2264:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2265:Core/Src/bno055.c ****                                                       data_u8,
2266:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2267:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 3990              		.loc 1 2267 13 is_stmt 1 view .LVU1119
2268:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_LSB_VA
2269:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 3991              		.loc 1 2269 13 view .LVU1120
2270:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_X_MSB_VA
2271:Core/Src/bno055.c ****             *linear_accel_x_s16 =
 3992              		.loc 1 2271 13 view .LVU1121
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3993              		.loc 1 2272 31 is_stmt 0 view .LVU1122
 3994 002e 9DF90520 		ldrsb	r2, [sp, #5]
2273:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 3995              		.loc 1 2273 31 view .LVU1123
 3996 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2272:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3997              		.loc 1 2272 17 view .LVU1124
 3998 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2271:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 3999              		.loc 1 2271 33 view .LVU1125
 4000 003a 2380     		strh	r3, [r4]	@ movhi
 4001              	.LVL385:
 4002              	.L302:
2274:Core/Src/bno055.c ****         }
2275:Core/Src/bno055.c ****         else
2276:Core/Src/bno055.c ****         {
2277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2278:Core/Src/bno055.c ****         }
2279:Core/Src/bno055.c ****     }
2280:Core/Src/bno055.c **** 
2281:Core/Src/bno055.c ****     return com_rslt;
2282:Core/Src/bno055.c **** }
 4003              		.loc 1 2282 1 view .LVU1126
 4004 003c 03B0     		add	sp, sp, #12
 4005              	.LCFI123:
 4006              		.cfi_remember_state
 4007              		.cfi_def_cfa_offset 12
 4008              		@ sp needed
 4009 003e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 116


 4010              	.LVL386:
 4011              	.L308:
 4012              	.LCFI124:
 4013              		.cfi_restore_state
2257:Core/Src/bno055.c ****         }
 4014              		.loc 1 2257 13 is_stmt 1 view .LVU1127
2257:Core/Src/bno055.c ****         }
 4015              		.loc 1 2257 23 is_stmt 0 view .LVU1128
 4016 0040 0020     		movs	r0, #0
 4017              	.LVL387:
2257:Core/Src/bno055.c ****         }
 4018              		.loc 1 2257 23 view .LVU1129
 4019 0042 FFF7FEFF 		bl	bno055_write_page_id
 4020              	.LVL388:
2259:Core/Src/bno055.c ****         {
 4021              		.loc 1 2259 9 is_stmt 1 view .LVU1130
2259:Core/Src/bno055.c ****         {
 4022              		.loc 1 2259 12 is_stmt 0 view .LVU1131
 4023 0046 0028     		cmp	r0, #0
 4024 0048 E9D0     		beq	.L304
 4025 004a E4E7     		b	.L303
 4026              	.LVL389:
 4027              	.L305:
2248:Core/Src/bno055.c ****     }
 4028              		.loc 1 2248 16 view .LVU1132
 4029 004c 6FF07E00 		mvn	r0, #126
 4030              	.LVL390:
2248:Core/Src/bno055.c ****     }
 4031              		.loc 1 2248 16 view .LVU1133
 4032 0050 F4E7     		b	.L302
 4033              	.LVL391:
 4034              	.L306:
2277:Core/Src/bno055.c ****         }
 4035              		.loc 1 2277 22 view .LVU1134
 4036 0052 4FF0FF30 		mov	r0, #-1
 4037 0056 F1E7     		b	.L302
 4038              	.L310:
 4039              		.align	2
 4040              	.L309:
 4041 0058 00000000 		.word	.LANCHOR0
 4042              		.cfi_endproc
 4043              	.LFE32:
 4045              		.section	.text.bno055_read_linear_accel_y,"ax",%progbits
 4046              		.align	1
 4047              		.global	bno055_read_linear_accel_y
 4048              		.syntax unified
 4049              		.thumb
 4050              		.thumb_func
 4052              	bno055_read_linear_accel_y:
 4053              	.LVL392:
 4054              	.LFB33:
2283:Core/Src/bno055.c **** 
2284:Core/Src/bno055.c **** /*!
2285:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2286:Core/Src/bno055.c ****  *  from register 0x2B and 0x2C it is a two byte data
2287:Core/Src/bno055.c ****  *
2288:Core/Src/bno055.c ****  *  @param linear_accel_y_s16 : The raw y data
ARM GAS  /tmp/ccO72alg.s 			page 117


2289:Core/Src/bno055.c ****  *
2290:Core/Src/bno055.c ****  *  @return results of bus communication function
2291:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2292:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2293:Core/Src/bno055.c ****  *
2294:Core/Src/bno055.c ****  *
2295:Core/Src/bno055.c ****  */
2296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_y(s16 *linear_accel_y_s16)
2297:Core/Src/bno055.c **** {
 4055              		.loc 1 2297 1 is_stmt 1 view -0
 4056              		.cfi_startproc
 4057              		@ args = 0, pretend = 0, frame = 8
 4058              		@ frame_needed = 0, uses_anonymous_args = 0
 4059              		.loc 1 2297 1 is_stmt 0 view .LVU1136
 4060 0000 30B5     		push	{r4, r5, lr}
 4061              	.LCFI125:
 4062              		.cfi_def_cfa_offset 12
 4063              		.cfi_offset 4, -12
 4064              		.cfi_offset 5, -8
 4065              		.cfi_offset 14, -4
 4066 0002 83B0     		sub	sp, sp, #12
 4067              	.LCFI126:
 4068              		.cfi_def_cfa_offset 24
2298:Core/Src/bno055.c ****     /* Variable used to return value of
2299:Core/Src/bno055.c ****      * communication routine*/
2300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4069              		.loc 1 2300 5 is_stmt 1 view .LVU1137
 4070              	.LVL393:
2301:Core/Src/bno055.c **** 
2302:Core/Src/bno055.c ****     /* Array holding the linear accel y value
2303:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2304:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2305:Core/Src/bno055.c ****      */
2306:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4071              		.loc 1 2306 5 view .LVU1138
 4072              		.loc 1 2306 8 is_stmt 0 view .LVU1139
 4073 0004 0023     		movs	r3, #0
 4074 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2307:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4075              		.loc 1 2307 5 is_stmt 1 view .LVU1140
 4076              	.LVL394:
2308:Core/Src/bno055.c **** 
2309:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2310:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4077              		.loc 1 2310 5 view .LVU1141
 4078              		.loc 1 2310 18 is_stmt 0 view .LVU1142
 4079 000a 134B     		ldr	r3, .L319
 4080 000c 1B68     		ldr	r3, [r3]
 4081              		.loc 1 2310 8 view .LVU1143
 4082 000e EBB1     		cbz	r3, .L315
 4083 0010 0446     		mov	r4, r0
2311:Core/Src/bno055.c ****     {
2312:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2313:Core/Src/bno055.c ****     }
2314:Core/Src/bno055.c ****     else
2315:Core/Src/bno055.c ****     {
2316:Core/Src/bno055.c ****         /*condition check for page, chip id is
ARM GAS  /tmp/ccO72alg.s 			page 118


2317:Core/Src/bno055.c ****          * available in the page zero*/
2318:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4084              		.loc 1 2318 9 is_stmt 1 view .LVU1144
 4085              		.loc 1 2318 21 is_stmt 0 view .LVU1145
 4086 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4087              		.loc 1 2318 12 view .LVU1146
 4088 0014 A3B9     		cbnz	r3, .L318
 4089              	.LVL395:
 4090              	.L313:
2319:Core/Src/bno055.c ****         {
2320:Core/Src/bno055.c ****             /* Write the page zero*/
2321:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2322:Core/Src/bno055.c ****         }
2323:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4091              		.loc 1 2323 53 discriminator 1 view .LVU1147
 4092 0016 104B     		ldr	r3, .L319
 4093 0018 1B68     		ldr	r3, [r3]
 4094 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4095              		.loc 1 2323 41 discriminator 1 view .LVU1148
 4096 001c CBB9     		cbnz	r3, .L316
 4097              	.L314:
2324:Core/Src/bno055.c ****         {
2325:Core/Src/bno055.c ****             /* Read the two byte value
2326:Core/Src/bno055.c ****             * of linear accel y data*/
2327:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4098              		.loc 1 2327 13 is_stmt 1 view .LVU1149
 4099              		.loc 1 2327 32 is_stmt 0 view .LVU1150
 4100 001e 0E4B     		ldr	r3, .L319
 4101 0020 1868     		ldr	r0, [r3]
 4102 0022 0569     		ldr	r5, [r0, #16]
 4103              		.loc 1 2327 24 view .LVU1151
 4104 0024 0223     		movs	r3, #2
 4105 0026 01AA     		add	r2, sp, #4
 4106 0028 2A21     		movs	r1, #42
 4107 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4108 002c A847     		blx	r5
 4109              	.LVL396:
2328:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Y_LSB_VALUEY_REG,
2329:Core/Src/bno055.c ****                                                       data_u8,
2330:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2331:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4110              		.loc 1 2331 13 is_stmt 1 view .LVU1152
2332:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_LSB_VA
2333:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4111              		.loc 1 2333 13 view .LVU1153
2334:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Y_MSB_VA
2335:Core/Src/bno055.c ****             *linear_accel_y_s16 =
 4112              		.loc 1 2335 13 view .LVU1154
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4113              		.loc 1 2336 31 is_stmt 0 view .LVU1155
 4114 002e 9DF90520 		ldrsb	r2, [sp, #5]
2337:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4115              		.loc 1 2337 31 view .LVU1156
 4116 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2336:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4117              		.loc 1 2336 17 view .LVU1157
 4118 0036 43EA0223 		orr	r3, r3, r2, lsl #8
ARM GAS  /tmp/ccO72alg.s 			page 119


2335:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4119              		.loc 1 2335 33 view .LVU1158
 4120 003a 2380     		strh	r3, [r4]	@ movhi
 4121              	.LVL397:
 4122              	.L312:
2338:Core/Src/bno055.c ****         }
2339:Core/Src/bno055.c ****         else
2340:Core/Src/bno055.c ****         {
2341:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2342:Core/Src/bno055.c ****         }
2343:Core/Src/bno055.c ****     }
2344:Core/Src/bno055.c **** 
2345:Core/Src/bno055.c ****     return com_rslt;
2346:Core/Src/bno055.c **** }
 4123              		.loc 1 2346 1 view .LVU1159
 4124 003c 03B0     		add	sp, sp, #12
 4125              	.LCFI127:
 4126              		.cfi_remember_state
 4127              		.cfi_def_cfa_offset 12
 4128              		@ sp needed
 4129 003e 30BD     		pop	{r4, r5, pc}
 4130              	.LVL398:
 4131              	.L318:
 4132              	.LCFI128:
 4133              		.cfi_restore_state
2321:Core/Src/bno055.c ****         }
 4134              		.loc 1 2321 13 is_stmt 1 view .LVU1160
2321:Core/Src/bno055.c ****         }
 4135              		.loc 1 2321 23 is_stmt 0 view .LVU1161
 4136 0040 0020     		movs	r0, #0
 4137              	.LVL399:
2321:Core/Src/bno055.c ****         }
 4138              		.loc 1 2321 23 view .LVU1162
 4139 0042 FFF7FEFF 		bl	bno055_write_page_id
 4140              	.LVL400:
2323:Core/Src/bno055.c ****         {
 4141              		.loc 1 2323 9 is_stmt 1 view .LVU1163
2323:Core/Src/bno055.c ****         {
 4142              		.loc 1 2323 12 is_stmt 0 view .LVU1164
 4143 0046 0028     		cmp	r0, #0
 4144 0048 E9D0     		beq	.L314
 4145 004a E4E7     		b	.L313
 4146              	.LVL401:
 4147              	.L315:
2312:Core/Src/bno055.c ****     }
 4148              		.loc 1 2312 16 view .LVU1165
 4149 004c 6FF07E00 		mvn	r0, #126
 4150              	.LVL402:
2312:Core/Src/bno055.c ****     }
 4151              		.loc 1 2312 16 view .LVU1166
 4152 0050 F4E7     		b	.L312
 4153              	.LVL403:
 4154              	.L316:
2341:Core/Src/bno055.c ****         }
 4155              		.loc 1 2341 22 view .LVU1167
 4156 0052 4FF0FF30 		mov	r0, #-1
 4157 0056 F1E7     		b	.L312
ARM GAS  /tmp/ccO72alg.s 			page 120


 4158              	.L320:
 4159              		.align	2
 4160              	.L319:
 4161 0058 00000000 		.word	.LANCHOR0
 4162              		.cfi_endproc
 4163              	.LFE33:
 4165              		.section	.text.bno055_read_linear_accel_z,"ax",%progbits
 4166              		.align	1
 4167              		.global	bno055_read_linear_accel_z
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4172              	bno055_read_linear_accel_z:
 4173              	.LVL404:
 4174              	.LFB34:
2347:Core/Src/bno055.c **** 
2348:Core/Src/bno055.c **** /*!
2349:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data x values
2350:Core/Src/bno055.c ****  *  from register 0x2C and 0x2D it is a two byte data
2351:Core/Src/bno055.c ****  *
2352:Core/Src/bno055.c ****  *  @param linear_accel_z_s16 : The raw z data
2353:Core/Src/bno055.c ****  *
2354:Core/Src/bno055.c ****  *  @return results of bus communication function
2355:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2356:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2357:Core/Src/bno055.c ****  *
2358:Core/Src/bno055.c ****  *
2359:Core/Src/bno055.c ****  */
2360:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_z(s16 *linear_accel_z_s16)
2361:Core/Src/bno055.c **** {
 4175              		.loc 1 2361 1 is_stmt 1 view -0
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 8
 4178              		@ frame_needed = 0, uses_anonymous_args = 0
 4179              		.loc 1 2361 1 is_stmt 0 view .LVU1169
 4180 0000 30B5     		push	{r4, r5, lr}
 4181              	.LCFI129:
 4182              		.cfi_def_cfa_offset 12
 4183              		.cfi_offset 4, -12
 4184              		.cfi_offset 5, -8
 4185              		.cfi_offset 14, -4
 4186 0002 83B0     		sub	sp, sp, #12
 4187              	.LCFI130:
 4188              		.cfi_def_cfa_offset 24
2362:Core/Src/bno055.c ****     /* Variable used to return value of
2363:Core/Src/bno055.c ****      * communication routine*/
2364:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4189              		.loc 1 2364 5 is_stmt 1 view .LVU1170
 4190              	.LVL405:
2365:Core/Src/bno055.c **** 
2366:Core/Src/bno055.c ****     /* Array holding the linear accel z value
2367:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2368:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2369:Core/Src/bno055.c ****      */
2370:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4191              		.loc 1 2370 5 view .LVU1171
 4192              		.loc 1 2370 8 is_stmt 0 view .LVU1172
ARM GAS  /tmp/ccO72alg.s 			page 121


 4193 0004 0023     		movs	r3, #0
 4194 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2371:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4195              		.loc 1 2371 5 is_stmt 1 view .LVU1173
 4196              	.LVL406:
2372:Core/Src/bno055.c **** 
2373:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2374:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4197              		.loc 1 2374 5 view .LVU1174
 4198              		.loc 1 2374 18 is_stmt 0 view .LVU1175
 4199 000a 134B     		ldr	r3, .L329
 4200 000c 1B68     		ldr	r3, [r3]
 4201              		.loc 1 2374 8 view .LVU1176
 4202 000e EBB1     		cbz	r3, .L325
 4203 0010 0446     		mov	r4, r0
2375:Core/Src/bno055.c ****     {
2376:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2377:Core/Src/bno055.c ****     }
2378:Core/Src/bno055.c ****     else
2379:Core/Src/bno055.c ****     {
2380:Core/Src/bno055.c ****         /*condition check for page, chip id is
2381:Core/Src/bno055.c ****          * available in the page zero*/
2382:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4204              		.loc 1 2382 9 is_stmt 1 view .LVU1177
 4205              		.loc 1 2382 21 is_stmt 0 view .LVU1178
 4206 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4207              		.loc 1 2382 12 view .LVU1179
 4208 0014 A3B9     		cbnz	r3, .L328
 4209              	.LVL407:
 4210              	.L323:
2383:Core/Src/bno055.c ****         {
2384:Core/Src/bno055.c ****             /* Write the page zero*/
2385:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2386:Core/Src/bno055.c ****         }
2387:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4211              		.loc 1 2387 53 discriminator 1 view .LVU1180
 4212 0016 104B     		ldr	r3, .L329
 4213 0018 1B68     		ldr	r3, [r3]
 4214 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4215              		.loc 1 2387 41 discriminator 1 view .LVU1181
 4216 001c CBB9     		cbnz	r3, .L326
 4217              	.L324:
2388:Core/Src/bno055.c ****         {
2389:Core/Src/bno055.c ****             /* Read the two byte value
2390:Core/Src/bno055.c ****             * of linear accel z data*/
2391:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4218              		.loc 1 2391 13 is_stmt 1 view .LVU1182
 4219              		.loc 1 2391 32 is_stmt 0 view .LVU1183
 4220 001e 0E4B     		ldr	r3, .L329
 4221 0020 1868     		ldr	r0, [r3]
 4222 0022 0569     		ldr	r5, [r0, #16]
 4223              		.loc 1 2391 24 view .LVU1184
 4224 0024 0223     		movs	r3, #2
 4225 0026 01AA     		add	r2, sp, #4
 4226 0028 2C21     		movs	r1, #44
 4227 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4228 002c A847     		blx	r5
ARM GAS  /tmp/ccO72alg.s 			page 122


 4229              	.LVL408:
2392:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_Z_LSB_VALUEZ_REG,
2393:Core/Src/bno055.c ****                                                       data_u8,
2394:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2395:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4230              		.loc 1 2395 13 is_stmt 1 view .LVU1185
2396:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_LSB_VA
2397:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4231              		.loc 1 2397 13 view .LVU1186
2398:Core/Src/bno055.c ****                                                                   BNO055_LINEAR_ACCEL_DATA_Z_MSB_VA
2399:Core/Src/bno055.c ****             *linear_accel_z_s16 =
 4232              		.loc 1 2399 13 view .LVU1187
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4233              		.loc 1 2400 31 is_stmt 0 view .LVU1188
 4234 002e 9DF90520 		ldrsb	r2, [sp, #5]
2401:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4235              		.loc 1 2401 31 view .LVU1189
 4236 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2400:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4237              		.loc 1 2400 17 view .LVU1190
 4238 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2399:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4239              		.loc 1 2399 33 view .LVU1191
 4240 003a 2380     		strh	r3, [r4]	@ movhi
 4241              	.LVL409:
 4242              	.L322:
2402:Core/Src/bno055.c ****         }
2403:Core/Src/bno055.c ****         else
2404:Core/Src/bno055.c ****         {
2405:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2406:Core/Src/bno055.c ****         }
2407:Core/Src/bno055.c ****     }
2408:Core/Src/bno055.c **** 
2409:Core/Src/bno055.c ****     return com_rslt;
2410:Core/Src/bno055.c **** }
 4243              		.loc 1 2410 1 view .LVU1192
 4244 003c 03B0     		add	sp, sp, #12
 4245              	.LCFI131:
 4246              		.cfi_remember_state
 4247              		.cfi_def_cfa_offset 12
 4248              		@ sp needed
 4249 003e 30BD     		pop	{r4, r5, pc}
 4250              	.LVL410:
 4251              	.L328:
 4252              	.LCFI132:
 4253              		.cfi_restore_state
2385:Core/Src/bno055.c ****         }
 4254              		.loc 1 2385 13 is_stmt 1 view .LVU1193
2385:Core/Src/bno055.c ****         }
 4255              		.loc 1 2385 23 is_stmt 0 view .LVU1194
 4256 0040 0020     		movs	r0, #0
 4257              	.LVL411:
2385:Core/Src/bno055.c ****         }
 4258              		.loc 1 2385 23 view .LVU1195
 4259 0042 FFF7FEFF 		bl	bno055_write_page_id
 4260              	.LVL412:
2387:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 123


 4261              		.loc 1 2387 9 is_stmt 1 view .LVU1196
2387:Core/Src/bno055.c ****         {
 4262              		.loc 1 2387 12 is_stmt 0 view .LVU1197
 4263 0046 0028     		cmp	r0, #0
 4264 0048 E9D0     		beq	.L324
 4265 004a E4E7     		b	.L323
 4266              	.LVL413:
 4267              	.L325:
2376:Core/Src/bno055.c ****     }
 4268              		.loc 1 2376 16 view .LVU1198
 4269 004c 6FF07E00 		mvn	r0, #126
 4270              	.LVL414:
2376:Core/Src/bno055.c ****     }
 4271              		.loc 1 2376 16 view .LVU1199
 4272 0050 F4E7     		b	.L322
 4273              	.LVL415:
 4274              	.L326:
2405:Core/Src/bno055.c ****         }
 4275              		.loc 1 2405 22 view .LVU1200
 4276 0052 4FF0FF30 		mov	r0, #-1
 4277 0056 F1E7     		b	.L322
 4278              	.L330:
 4279              		.align	2
 4280              	.L329:
 4281 0058 00000000 		.word	.LANCHOR0
 4282              		.cfi_endproc
 4283              	.LFE34:
 4285              		.section	.text.bno055_read_linear_accel_xyz,"ax",%progbits
 4286              		.align	1
 4287              		.global	bno055_read_linear_accel_xyz
 4288              		.syntax unified
 4289              		.thumb
 4290              		.thumb_func
 4292              	bno055_read_linear_accel_xyz:
 4293              	.LVL416:
 4294              	.LFB35:
2411:Core/Src/bno055.c **** 
2412:Core/Src/bno055.c **** /*!
2413:Core/Src/bno055.c ****  *  @brief This API reads Linear accel data xyz values
2414:Core/Src/bno055.c ****  *  from register 0x28 to 0x2D it is a six byte data
2415:Core/Src/bno055.c ****  *
2416:Core/Src/bno055.c ****  *
2417:Core/Src/bno055.c ****  *  @param linear_accel : The value of linear accel xyz data's
2418:Core/Src/bno055.c ****  *
2419:Core/Src/bno055.c ****  *  Parameter |    result
2420:Core/Src/bno055.c ****  *  --------- | -----------------
2421:Core/Src/bno055.c ****  *   x        | The linear accel x data
2422:Core/Src/bno055.c ****  *   y        | The linear accel y data
2423:Core/Src/bno055.c ****  *   z        | The linear accel z data
2424:Core/Src/bno055.c ****  *
2425:Core/Src/bno055.c ****  *
2426:Core/Src/bno055.c ****  *  @return results of bus communication function
2427:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2428:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2429:Core/Src/bno055.c ****  */
2430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_linear_accel_xyz(struct bno055_linear_accel_t *linear_accel
2431:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 124


 4295              		.loc 1 2431 1 is_stmt 1 view -0
 4296              		.cfi_startproc
 4297              		@ args = 0, pretend = 0, frame = 8
 4298              		@ frame_needed = 0, uses_anonymous_args = 0
 4299              		.loc 1 2431 1 is_stmt 0 view .LVU1202
 4300 0000 30B5     		push	{r4, r5, lr}
 4301              	.LCFI133:
 4302              		.cfi_def_cfa_offset 12
 4303              		.cfi_offset 4, -12
 4304              		.cfi_offset 5, -8
 4305              		.cfi_offset 14, -4
 4306 0002 83B0     		sub	sp, sp, #12
 4307              	.LCFI134:
 4308              		.cfi_def_cfa_offset 24
 4309 0004 0446     		mov	r4, r0
2432:Core/Src/bno055.c ****     /* Variable used to return value of
2433:Core/Src/bno055.c ****      * communication routine*/
2434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4310              		.loc 1 2434 5 is_stmt 1 view .LVU1203
 4311              	.LVL417:
2435:Core/Src/bno055.c **** 
2436:Core/Src/bno055.c ****     /* Array holding the linear accel xyz value
2437:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2438:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2439:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2440:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2441:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2442:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2443:Core/Src/bno055.c ****      */
2444:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_XYZ_DATA_SIZE] = {
 4312              		.loc 1 2444 5 view .LVU1204
 4313              		.loc 1 2444 8 is_stmt 0 view .LVU1205
 4314 0006 1D4B     		ldr	r3, .L339
 4315 0008 93E80300 		ldm	r3, {r0, r1}
 4316              	.LVL418:
 4317              		.loc 1 2444 8 view .LVU1206
 4318 000c 0090     		str	r0, [sp]
 4319 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2445:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2446:Core/Src/bno055.c ****     };
2447:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4320              		.loc 1 2447 5 is_stmt 1 view .LVU1207
 4321              	.LVL419:
2448:Core/Src/bno055.c **** 
2449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4322              		.loc 1 2450 5 view .LVU1208
 4323              		.loc 1 2450 18 is_stmt 0 view .LVU1209
 4324 0012 1B4B     		ldr	r3, .L339+4
 4325 0014 1B68     		ldr	r3, [r3]
 4326              		.loc 1 2450 8 view .LVU1210
 4327 0016 53B3     		cbz	r3, .L335
2451:Core/Src/bno055.c ****     {
2452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2453:Core/Src/bno055.c ****     }
2454:Core/Src/bno055.c ****     else
2455:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 125


2456:Core/Src/bno055.c ****         /*condition check for page, chip id is
2457:Core/Src/bno055.c ****          * available in the page zero*/
2458:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4328              		.loc 1 2458 9 is_stmt 1 view .LVU1211
 4329              		.loc 1 2458 21 is_stmt 0 view .LVU1212
 4330 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4331              		.loc 1 2458 12 view .LVU1213
 4332 001a 13BB     		cbnz	r3, .L338
 4333              	.LVL420:
 4334              	.L333:
2459:Core/Src/bno055.c ****         {
2460:Core/Src/bno055.c ****             /* Write the page zero*/
2461:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2462:Core/Src/bno055.c ****         }
2463:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4335              		.loc 1 2463 53 discriminator 1 view .LVU1214
 4336 001c 184B     		ldr	r3, .L339+4
 4337 001e 1B68     		ldr	r3, [r3]
 4338 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4339              		.loc 1 2463 41 discriminator 1 view .LVU1215
 4340 0022 3BBB     		cbnz	r3, .L336
 4341              	.L334:
2464:Core/Src/bno055.c ****         {
2465:Core/Src/bno055.c ****             /* Read the six byte value
2466:Core/Src/bno055.c ****              *  of linear accel xyz data*/
2467:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4342              		.loc 1 2467 13 is_stmt 1 view .LVU1216
 4343              		.loc 1 2467 32 is_stmt 0 view .LVU1217
 4344 0024 164B     		ldr	r3, .L339+4
 4345 0026 1868     		ldr	r0, [r3]
 4346 0028 0569     		ldr	r5, [r0, #16]
 4347              		.loc 1 2467 24 view .LVU1218
 4348 002a 0623     		movs	r3, #6
 4349 002c 6A46     		mov	r2, sp
 4350 002e 2821     		movs	r1, #40
 4351 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4352 0032 A847     		blx	r5
 4353              	.LVL421:
2468:Core/Src/bno055.c ****                                                       BNO055_LINEAR_ACCEL_DATA_X_LSB_VALUEX_REG,
2469:Core/Src/bno055.c ****                                                       data_u8,
2470:Core/Src/bno055.c ****                                                       BNO055_ACCEL_XYZ_DATA_SIZE);
2471:Core/Src/bno055.c **** 
2472:Core/Src/bno055.c ****             /* Data x*/
2473:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4354              		.loc 1 2473 13 is_stmt 1 view .LVU1219
2474:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2475:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4355              		.loc 1 2475 13 view .LVU1220
2476:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_X_
2477:Core/Src/bno055.c ****             linear_accel->x =
 4356              		.loc 1 2477 13 view .LVU1221
2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4357              		.loc 1 2478 31 is_stmt 0 view .LVU1222
 4358 0034 9DF90120 		ldrsb	r2, [sp, #1]
2479:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4359              		.loc 1 2479 31 view .LVU1223
 4360 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 126


2478:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4361              		.loc 1 2478 17 view .LVU1224
 4362 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2477:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4363              		.loc 1 2477 29 view .LVU1225
 4364 0040 2380     		strh	r3, [r4]	@ movhi
2480:Core/Src/bno055.c **** 
2481:Core/Src/bno055.c ****             /* Data y*/
2482:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4365              		.loc 1 2482 13 is_stmt 1 view .LVU1226
2483:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2484:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4366              		.loc 1 2484 13 view .LVU1227
2485:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Y_
2486:Core/Src/bno055.c ****             linear_accel->y =
 4367              		.loc 1 2486 13 view .LVU1228
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4368              		.loc 1 2487 31 is_stmt 0 view .LVU1229
 4369 0042 9DF90320 		ldrsb	r2, [sp, #3]
2488:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4370              		.loc 1 2488 31 view .LVU1230
 4371 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2487:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4372              		.loc 1 2487 17 view .LVU1231
 4373 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2486:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4374              		.loc 1 2486 29 view .LVU1232
 4375 004e 6380     		strh	r3, [r4, #2]	@ movhi
2489:Core/Src/bno055.c **** 
2490:Core/Src/bno055.c ****             /* Data z*/
2491:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4376              		.loc 1 2491 13 is_stmt 1 view .LVU1233
2492:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2493:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4377              		.loc 1 2493 13 view .LVU1234
2494:Core/Src/bno055.c ****                                                                         BNO055_LINEAR_ACCEL_DATA_Z_
2495:Core/Src/bno055.c ****             linear_accel->z =
 4378              		.loc 1 2495 13 view .LVU1235
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4379              		.loc 1 2496 31 is_stmt 0 view .LVU1236
 4380 0050 9DF90520 		ldrsb	r2, [sp, #5]
2497:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4381              		.loc 1 2497 31 view .LVU1237
 4382 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2496:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4383              		.loc 1 2496 17 view .LVU1238
 4384 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2495:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4385              		.loc 1 2495 29 view .LVU1239
 4386 005c A380     		strh	r3, [r4, #4]	@ movhi
 4387              	.LVL422:
 4388              	.L332:
2498:Core/Src/bno055.c ****         }
2499:Core/Src/bno055.c ****         else
2500:Core/Src/bno055.c ****         {
2501:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2502:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 127


2503:Core/Src/bno055.c ****     }
2504:Core/Src/bno055.c **** 
2505:Core/Src/bno055.c ****     return com_rslt;
2506:Core/Src/bno055.c **** }
 4389              		.loc 1 2506 1 view .LVU1240
 4390 005e 03B0     		add	sp, sp, #12
 4391              	.LCFI135:
 4392              		.cfi_remember_state
 4393              		.cfi_def_cfa_offset 12
 4394              		@ sp needed
 4395 0060 30BD     		pop	{r4, r5, pc}
 4396              	.LVL423:
 4397              	.L338:
 4398              	.LCFI136:
 4399              		.cfi_restore_state
2461:Core/Src/bno055.c ****         }
 4400              		.loc 1 2461 13 is_stmt 1 view .LVU1241
2461:Core/Src/bno055.c ****         }
 4401              		.loc 1 2461 23 is_stmt 0 view .LVU1242
 4402 0062 0020     		movs	r0, #0
 4403 0064 FFF7FEFF 		bl	bno055_write_page_id
 4404              	.LVL424:
2463:Core/Src/bno055.c ****         {
 4405              		.loc 1 2463 9 is_stmt 1 view .LVU1243
2463:Core/Src/bno055.c ****         {
 4406              		.loc 1 2463 12 is_stmt 0 view .LVU1244
 4407 0068 0028     		cmp	r0, #0
 4408 006a DBD0     		beq	.L334
 4409 006c D6E7     		b	.L333
 4410              	.LVL425:
 4411              	.L335:
2452:Core/Src/bno055.c ****     }
 4412              		.loc 1 2452 16 view .LVU1245
 4413 006e 6FF07E00 		mvn	r0, #126
 4414 0072 F4E7     		b	.L332
 4415              	.LVL426:
 4416              	.L336:
2501:Core/Src/bno055.c ****         }
 4417              		.loc 1 2501 22 view .LVU1246
 4418 0074 4FF0FF30 		mov	r0, #-1
 4419 0078 F1E7     		b	.L332
 4420              	.L340:
 4421 007a 00BF     		.align	2
 4422              	.L339:
 4423 007c 00000000 		.word	.LANCHOR1
 4424 0080 00000000 		.word	.LANCHOR0
 4425              		.cfi_endproc
 4426              	.LFE35:
 4428              		.section	.text.bno055_read_gravity_x,"ax",%progbits
 4429              		.align	1
 4430              		.global	bno055_read_gravity_x
 4431              		.syntax unified
 4432              		.thumb
 4433              		.thumb_func
 4435              	bno055_read_gravity_x:
 4436              	.LVL427:
 4437              	.LFB36:
ARM GAS  /tmp/ccO72alg.s 			page 128


2507:Core/Src/bno055.c **** 
2508:Core/Src/bno055.c **** /*!
2509:Core/Src/bno055.c ****  *  @brief This API reads gravity data x values
2510:Core/Src/bno055.c ****  *  from register 0x2E and 0x2F it is a two byte data
2511:Core/Src/bno055.c ****  *
2512:Core/Src/bno055.c ****  *  @param gravity_x_s16 : The raw x data
2513:Core/Src/bno055.c ****  *
2514:Core/Src/bno055.c ****  *  @return results of bus communication function
2515:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2516:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2517:Core/Src/bno055.c ****  *
2518:Core/Src/bno055.c ****  *
2519:Core/Src/bno055.c ****  */
2520:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_x(s16 *gravity_x_s16)
2521:Core/Src/bno055.c **** {
 4438              		.loc 1 2521 1 is_stmt 1 view -0
 4439              		.cfi_startproc
 4440              		@ args = 0, pretend = 0, frame = 8
 4441              		@ frame_needed = 0, uses_anonymous_args = 0
 4442              		.loc 1 2521 1 is_stmt 0 view .LVU1248
 4443 0000 30B5     		push	{r4, r5, lr}
 4444              	.LCFI137:
 4445              		.cfi_def_cfa_offset 12
 4446              		.cfi_offset 4, -12
 4447              		.cfi_offset 5, -8
 4448              		.cfi_offset 14, -4
 4449 0002 83B0     		sub	sp, sp, #12
 4450              	.LCFI138:
 4451              		.cfi_def_cfa_offset 24
2522:Core/Src/bno055.c ****     /* Variable used to return value of
2523:Core/Src/bno055.c ****      * communication routine*/
2524:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4452              		.loc 1 2524 5 is_stmt 1 view .LVU1249
 4453              	.LVL428:
2525:Core/Src/bno055.c **** 
2526:Core/Src/bno055.c ****     /* Array holding the gravity x value
2527:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - x->LSB
2528:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - x->MSB
2529:Core/Src/bno055.c ****      */
2530:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4454              		.loc 1 2530 5 view .LVU1250
 4455              		.loc 1 2530 8 is_stmt 0 view .LVU1251
 4456 0004 0023     		movs	r3, #0
 4457 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2531:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4458              		.loc 1 2531 5 is_stmt 1 view .LVU1252
 4459              	.LVL429:
2532:Core/Src/bno055.c **** 
2533:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2534:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4460              		.loc 1 2534 5 view .LVU1253
 4461              		.loc 1 2534 18 is_stmt 0 view .LVU1254
 4462 000a 134B     		ldr	r3, .L349
 4463 000c 1B68     		ldr	r3, [r3]
 4464              		.loc 1 2534 8 view .LVU1255
 4465 000e EBB1     		cbz	r3, .L345
 4466 0010 0446     		mov	r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 129


2535:Core/Src/bno055.c ****     {
2536:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2537:Core/Src/bno055.c ****     }
2538:Core/Src/bno055.c ****     else
2539:Core/Src/bno055.c ****     {
2540:Core/Src/bno055.c ****         /*condition check for page, chip id is
2541:Core/Src/bno055.c ****          * available in the page zero*/
2542:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4467              		.loc 1 2542 9 is_stmt 1 view .LVU1256
 4468              		.loc 1 2542 21 is_stmt 0 view .LVU1257
 4469 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4470              		.loc 1 2542 12 view .LVU1258
 4471 0014 A3B9     		cbnz	r3, .L348
 4472              	.LVL430:
 4473              	.L343:
2543:Core/Src/bno055.c ****         {
2544:Core/Src/bno055.c ****             /* Write the page zero*/
2545:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2546:Core/Src/bno055.c ****         }
2547:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4474              		.loc 1 2547 53 discriminator 1 view .LVU1259
 4475 0016 104B     		ldr	r3, .L349
 4476 0018 1B68     		ldr	r3, [r3]
 4477 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4478              		.loc 1 2547 41 discriminator 1 view .LVU1260
 4479 001c CBB9     		cbnz	r3, .L346
 4480              	.L344:
2548:Core/Src/bno055.c ****         {
2549:Core/Src/bno055.c ****             /* Read the two byte value
2550:Core/Src/bno055.c ****              * of gravity x data*/
2551:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4481              		.loc 1 2551 13 is_stmt 1 view .LVU1261
 4482              		.loc 1 2551 32 is_stmt 0 view .LVU1262
 4483 001e 0E4B     		ldr	r3, .L349
 4484 0020 1868     		ldr	r0, [r3]
 4485 0022 0569     		ldr	r5, [r0, #16]
 4486              		.loc 1 2551 24 view .LVU1263
 4487 0024 0223     		movs	r3, #2
 4488 0026 01AA     		add	r2, sp, #4
 4489 0028 2E21     		movs	r1, #46
 4490 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4491 002c A847     		blx	r5
 4492              	.LVL431:
2552:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2553:Core/Src/bno055.c ****                                                       data_u8,
2554:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2555:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4493              		.loc 1 2555 13 is_stmt 1 view .LVU1264
2556:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_LSB_VALUEX)
2557:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4494              		.loc 1 2557 13 view .LVU1265
2558:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_X_MSB_VALUEX)
2559:Core/Src/bno055.c ****             *gravity_x_s16 =
 4495              		.loc 1 2559 13 view .LVU1266
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4496              		.loc 1 2560 31 is_stmt 0 view .LVU1267
 4497 002e 9DF90520 		ldrsb	r2, [sp, #5]
ARM GAS  /tmp/ccO72alg.s 			page 130


2561:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4498              		.loc 1 2561 31 view .LVU1268
 4499 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2560:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4500              		.loc 1 2560 17 view .LVU1269
 4501 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2559:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4502              		.loc 1 2559 28 view .LVU1270
 4503 003a 2380     		strh	r3, [r4]	@ movhi
 4504              	.LVL432:
 4505              	.L342:
2562:Core/Src/bno055.c ****         }
2563:Core/Src/bno055.c ****         else
2564:Core/Src/bno055.c ****         {
2565:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2566:Core/Src/bno055.c ****         }
2567:Core/Src/bno055.c ****     }
2568:Core/Src/bno055.c **** 
2569:Core/Src/bno055.c ****     return com_rslt;
2570:Core/Src/bno055.c **** }
 4506              		.loc 1 2570 1 view .LVU1271
 4507 003c 03B0     		add	sp, sp, #12
 4508              	.LCFI139:
 4509              		.cfi_remember_state
 4510              		.cfi_def_cfa_offset 12
 4511              		@ sp needed
 4512 003e 30BD     		pop	{r4, r5, pc}
 4513              	.LVL433:
 4514              	.L348:
 4515              	.LCFI140:
 4516              		.cfi_restore_state
2545:Core/Src/bno055.c ****         }
 4517              		.loc 1 2545 13 is_stmt 1 view .LVU1272
2545:Core/Src/bno055.c ****         }
 4518              		.loc 1 2545 23 is_stmt 0 view .LVU1273
 4519 0040 0020     		movs	r0, #0
 4520              	.LVL434:
2545:Core/Src/bno055.c ****         }
 4521              		.loc 1 2545 23 view .LVU1274
 4522 0042 FFF7FEFF 		bl	bno055_write_page_id
 4523              	.LVL435:
2547:Core/Src/bno055.c ****         {
 4524              		.loc 1 2547 9 is_stmt 1 view .LVU1275
2547:Core/Src/bno055.c ****         {
 4525              		.loc 1 2547 12 is_stmt 0 view .LVU1276
 4526 0046 0028     		cmp	r0, #0
 4527 0048 E9D0     		beq	.L344
 4528 004a E4E7     		b	.L343
 4529              	.LVL436:
 4530              	.L345:
2536:Core/Src/bno055.c ****     }
 4531              		.loc 1 2536 16 view .LVU1277
 4532 004c 6FF07E00 		mvn	r0, #126
 4533              	.LVL437:
2536:Core/Src/bno055.c ****     }
 4534              		.loc 1 2536 16 view .LVU1278
 4535 0050 F4E7     		b	.L342
ARM GAS  /tmp/ccO72alg.s 			page 131


 4536              	.LVL438:
 4537              	.L346:
2565:Core/Src/bno055.c ****         }
 4538              		.loc 1 2565 22 view .LVU1279
 4539 0052 4FF0FF30 		mov	r0, #-1
 4540 0056 F1E7     		b	.L342
 4541              	.L350:
 4542              		.align	2
 4543              	.L349:
 4544 0058 00000000 		.word	.LANCHOR0
 4545              		.cfi_endproc
 4546              	.LFE36:
 4548              		.section	.text.bno055_read_gravity_y,"ax",%progbits
 4549              		.align	1
 4550              		.global	bno055_read_gravity_y
 4551              		.syntax unified
 4552              		.thumb
 4553              		.thumb_func
 4555              	bno055_read_gravity_y:
 4556              	.LVL439:
 4557              	.LFB37:
2571:Core/Src/bno055.c **** 
2572:Core/Src/bno055.c **** /*!
2573:Core/Src/bno055.c ****  *  @brief This API reads gravity data y values
2574:Core/Src/bno055.c ****  *  from register 0x30 and 0x31 it is a two byte data
2575:Core/Src/bno055.c ****  *
2576:Core/Src/bno055.c ****  *  @param gravity_y_s16 : The raw y data
2577:Core/Src/bno055.c ****  *
2578:Core/Src/bno055.c ****  *  @return results of bus communication function
2579:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2580:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2581:Core/Src/bno055.c ****  *
2582:Core/Src/bno055.c ****  *
2583:Core/Src/bno055.c ****  */
2584:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_y(s16 *gravity_y_s16)
2585:Core/Src/bno055.c **** {
 4558              		.loc 1 2585 1 is_stmt 1 view -0
 4559              		.cfi_startproc
 4560              		@ args = 0, pretend = 0, frame = 8
 4561              		@ frame_needed = 0, uses_anonymous_args = 0
 4562              		.loc 1 2585 1 is_stmt 0 view .LVU1281
 4563 0000 30B5     		push	{r4, r5, lr}
 4564              	.LCFI141:
 4565              		.cfi_def_cfa_offset 12
 4566              		.cfi_offset 4, -12
 4567              		.cfi_offset 5, -8
 4568              		.cfi_offset 14, -4
 4569 0002 83B0     		sub	sp, sp, #12
 4570              	.LCFI142:
 4571              		.cfi_def_cfa_offset 24
2586:Core/Src/bno055.c ****     /* Variable used to return value of
2587:Core/Src/bno055.c ****      * communication routine*/
2588:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4572              		.loc 1 2588 5 is_stmt 1 view .LVU1282
 4573              	.LVL440:
2589:Core/Src/bno055.c **** 
2590:Core/Src/bno055.c ****     /* Array holding the gravity y value
ARM GAS  /tmp/ccO72alg.s 			page 132


2591:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - y->LSB
2592:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - y->MSB
2593:Core/Src/bno055.c ****      */
2594:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4574              		.loc 1 2594 5 view .LVU1283
 4575              		.loc 1 2594 8 is_stmt 0 view .LVU1284
 4576 0004 0023     		movs	r3, #0
 4577 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2595:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4578              		.loc 1 2595 5 is_stmt 1 view .LVU1285
 4579              	.LVL441:
2596:Core/Src/bno055.c **** 
2597:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2598:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4580              		.loc 1 2598 5 view .LVU1286
 4581              		.loc 1 2598 18 is_stmt 0 view .LVU1287
 4582 000a 134B     		ldr	r3, .L359
 4583 000c 1B68     		ldr	r3, [r3]
 4584              		.loc 1 2598 8 view .LVU1288
 4585 000e EBB1     		cbz	r3, .L355
 4586 0010 0446     		mov	r4, r0
2599:Core/Src/bno055.c ****     {
2600:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2601:Core/Src/bno055.c ****     }
2602:Core/Src/bno055.c ****     else
2603:Core/Src/bno055.c ****     {
2604:Core/Src/bno055.c ****         /*condition check for page, chip id is
2605:Core/Src/bno055.c ****          * available in the page zero*/
2606:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4587              		.loc 1 2606 9 is_stmt 1 view .LVU1289
 4588              		.loc 1 2606 21 is_stmt 0 view .LVU1290
 4589 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4590              		.loc 1 2606 12 view .LVU1291
 4591 0014 A3B9     		cbnz	r3, .L358
 4592              	.LVL442:
 4593              	.L353:
2607:Core/Src/bno055.c ****         {
2608:Core/Src/bno055.c ****             /* Write the page zero*/
2609:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2610:Core/Src/bno055.c ****         }
2611:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4594              		.loc 1 2611 53 discriminator 1 view .LVU1292
 4595 0016 104B     		ldr	r3, .L359
 4596 0018 1B68     		ldr	r3, [r3]
 4597 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4598              		.loc 1 2611 41 discriminator 1 view .LVU1293
 4599 001c CBB9     		cbnz	r3, .L356
 4600              	.L354:
2612:Core/Src/bno055.c ****         {
2613:Core/Src/bno055.c ****             /* Read the two byte value
2614:Core/Src/bno055.c ****              * of gravity y data*/
2615:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4601              		.loc 1 2615 13 is_stmt 1 view .LVU1294
 4602              		.loc 1 2615 32 is_stmt 0 view .LVU1295
 4603 001e 0E4B     		ldr	r3, .L359
 4604 0020 1868     		ldr	r0, [r3]
 4605 0022 0569     		ldr	r5, [r0, #16]
ARM GAS  /tmp/ccO72alg.s 			page 133


 4606              		.loc 1 2615 24 view .LVU1296
 4607 0024 0223     		movs	r3, #2
 4608 0026 01AA     		add	r2, sp, #4
 4609 0028 3021     		movs	r1, #48
 4610 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4611 002c A847     		blx	r5
 4612              	.LVL443:
2616:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Y_LSB_VALUEY_REG,
2617:Core/Src/bno055.c ****                                                       data_u8,
2618:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2619:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4613              		.loc 1 2619 13 is_stmt 1 view .LVU1297
2620:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_LSB_VALUEY)
2621:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4614              		.loc 1 2621 13 view .LVU1298
2622:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Y_MSB_VALUEY)
2623:Core/Src/bno055.c ****             *gravity_y_s16 =
 4615              		.loc 1 2623 13 view .LVU1299
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4616              		.loc 1 2624 31 is_stmt 0 view .LVU1300
 4617 002e 9DF90520 		ldrsb	r2, [sp, #5]
2625:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4618              		.loc 1 2625 31 view .LVU1301
 4619 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2624:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4620              		.loc 1 2624 17 view .LVU1302
 4621 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2623:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4622              		.loc 1 2623 28 view .LVU1303
 4623 003a 2380     		strh	r3, [r4]	@ movhi
 4624              	.LVL444:
 4625              	.L352:
2626:Core/Src/bno055.c ****         }
2627:Core/Src/bno055.c ****         else
2628:Core/Src/bno055.c ****         {
2629:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2630:Core/Src/bno055.c ****         }
2631:Core/Src/bno055.c ****     }
2632:Core/Src/bno055.c **** 
2633:Core/Src/bno055.c ****     return com_rslt;
2634:Core/Src/bno055.c **** }
 4626              		.loc 1 2634 1 view .LVU1304
 4627 003c 03B0     		add	sp, sp, #12
 4628              	.LCFI143:
 4629              		.cfi_remember_state
 4630              		.cfi_def_cfa_offset 12
 4631              		@ sp needed
 4632 003e 30BD     		pop	{r4, r5, pc}
 4633              	.LVL445:
 4634              	.L358:
 4635              	.LCFI144:
 4636              		.cfi_restore_state
2609:Core/Src/bno055.c ****         }
 4637              		.loc 1 2609 13 is_stmt 1 view .LVU1305
2609:Core/Src/bno055.c ****         }
 4638              		.loc 1 2609 23 is_stmt 0 view .LVU1306
 4639 0040 0020     		movs	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 134


 4640              	.LVL446:
2609:Core/Src/bno055.c ****         }
 4641              		.loc 1 2609 23 view .LVU1307
 4642 0042 FFF7FEFF 		bl	bno055_write_page_id
 4643              	.LVL447:
2611:Core/Src/bno055.c ****         {
 4644              		.loc 1 2611 9 is_stmt 1 view .LVU1308
2611:Core/Src/bno055.c ****         {
 4645              		.loc 1 2611 12 is_stmt 0 view .LVU1309
 4646 0046 0028     		cmp	r0, #0
 4647 0048 E9D0     		beq	.L354
 4648 004a E4E7     		b	.L353
 4649              	.LVL448:
 4650              	.L355:
2600:Core/Src/bno055.c ****     }
 4651              		.loc 1 2600 16 view .LVU1310
 4652 004c 6FF07E00 		mvn	r0, #126
 4653              	.LVL449:
2600:Core/Src/bno055.c ****     }
 4654              		.loc 1 2600 16 view .LVU1311
 4655 0050 F4E7     		b	.L352
 4656              	.LVL450:
 4657              	.L356:
2629:Core/Src/bno055.c ****         }
 4658              		.loc 1 2629 22 view .LVU1312
 4659 0052 4FF0FF30 		mov	r0, #-1
 4660 0056 F1E7     		b	.L352
 4661              	.L360:
 4662              		.align	2
 4663              	.L359:
 4664 0058 00000000 		.word	.LANCHOR0
 4665              		.cfi_endproc
 4666              	.LFE37:
 4668              		.section	.text.bno055_read_gravity_z,"ax",%progbits
 4669              		.align	1
 4670              		.global	bno055_read_gravity_z
 4671              		.syntax unified
 4672              		.thumb
 4673              		.thumb_func
 4675              	bno055_read_gravity_z:
 4676              	.LVL451:
 4677              	.LFB38:
2635:Core/Src/bno055.c **** 
2636:Core/Src/bno055.c **** /*!
2637:Core/Src/bno055.c ****  *  @brief This API reads gravity data z values
2638:Core/Src/bno055.c ****  *  from register 0x32 and 0x33 it is a two byte data
2639:Core/Src/bno055.c ****  *
2640:Core/Src/bno055.c ****  *  @param gravity_z_s16 : The raw z data
2641:Core/Src/bno055.c ****  *
2642:Core/Src/bno055.c ****  *  @return results of bus communication function
2643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2645:Core/Src/bno055.c ****  *
2646:Core/Src/bno055.c ****  *
2647:Core/Src/bno055.c ****  */
2648:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_z(s16 *gravity_z_s16)
2649:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 135


 4678              		.loc 1 2649 1 is_stmt 1 view -0
 4679              		.cfi_startproc
 4680              		@ args = 0, pretend = 0, frame = 8
 4681              		@ frame_needed = 0, uses_anonymous_args = 0
 4682              		.loc 1 2649 1 is_stmt 0 view .LVU1314
 4683 0000 30B5     		push	{r4, r5, lr}
 4684              	.LCFI145:
 4685              		.cfi_def_cfa_offset 12
 4686              		.cfi_offset 4, -12
 4687              		.cfi_offset 5, -8
 4688              		.cfi_offset 14, -4
 4689 0002 83B0     		sub	sp, sp, #12
 4690              	.LCFI146:
 4691              		.cfi_def_cfa_offset 24
2650:Core/Src/bno055.c ****     /* Variable used to return value of
2651:Core/Src/bno055.c ****      * communication routine*/
2652:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4692              		.loc 1 2652 5 is_stmt 1 view .LVU1315
 4693              	.LVL452:
2653:Core/Src/bno055.c **** 
2654:Core/Src/bno055.c ****     /* Array holding the gravity z value
2655:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_LSB] - z->LSB
2656:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_MSB] - z->MSB
2657:Core/Src/bno055.c ****      */
2658:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_DATA_SIZE] = { BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 4694              		.loc 1 2658 5 view .LVU1316
 4695              		.loc 1 2658 8 is_stmt 0 view .LVU1317
 4696 0004 0023     		movs	r3, #0
 4697 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
2659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4698              		.loc 1 2659 5 is_stmt 1 view .LVU1318
 4699              	.LVL453:
2660:Core/Src/bno055.c **** 
2661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4700              		.loc 1 2662 5 view .LVU1319
 4701              		.loc 1 2662 18 is_stmt 0 view .LVU1320
 4702 000a 134B     		ldr	r3, .L369
 4703 000c 1B68     		ldr	r3, [r3]
 4704              		.loc 1 2662 8 view .LVU1321
 4705 000e EBB1     		cbz	r3, .L365
 4706 0010 0446     		mov	r4, r0
2663:Core/Src/bno055.c ****     {
2664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2665:Core/Src/bno055.c ****     }
2666:Core/Src/bno055.c ****     else
2667:Core/Src/bno055.c ****     {
2668:Core/Src/bno055.c ****         /*condition check for page, chip id is
2669:Core/Src/bno055.c ****          * available in the page zero*/
2670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4707              		.loc 1 2670 9 is_stmt 1 view .LVU1322
 4708              		.loc 1 2670 21 is_stmt 0 view .LVU1323
 4709 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4710              		.loc 1 2670 12 view .LVU1324
 4711 0014 A3B9     		cbnz	r3, .L368
 4712              	.LVL454:
 4713              	.L363:
ARM GAS  /tmp/ccO72alg.s 			page 136


2671:Core/Src/bno055.c ****         {
2672:Core/Src/bno055.c ****             /* Write the page zero*/
2673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2674:Core/Src/bno055.c ****         }
2675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4714              		.loc 1 2675 53 discriminator 1 view .LVU1325
 4715 0016 104B     		ldr	r3, .L369
 4716 0018 1B68     		ldr	r3, [r3]
 4717 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4718              		.loc 1 2675 41 discriminator 1 view .LVU1326
 4719 001c CBB9     		cbnz	r3, .L366
 4720              	.L364:
2676:Core/Src/bno055.c ****         {
2677:Core/Src/bno055.c ****             /* Read the two byte value
2678:Core/Src/bno055.c ****              * of gravity z data*/
2679:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4721              		.loc 1 2679 13 is_stmt 1 view .LVU1327
 4722              		.loc 1 2679 32 is_stmt 0 view .LVU1328
 4723 001e 0E4B     		ldr	r3, .L369
 4724 0020 1868     		ldr	r0, [r3]
 4725 0022 0569     		ldr	r5, [r0, #16]
 4726              		.loc 1 2679 24 view .LVU1329
 4727 0024 0223     		movs	r3, #2
 4728 0026 01AA     		add	r2, sp, #4
 4729 0028 3221     		movs	r1, #50
 4730 002a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4731 002c A847     		blx	r5
 4732              	.LVL455:
2680:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_Z_LSB_VALUEZ_REG,
2681:Core/Src/bno055.c ****                                                       data_u8,
2682:Core/Src/bno055.c ****                                                       BNO055_LSB_MSB_READ_LENGTH);
2683:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_LSB],
 4733              		.loc 1 2683 13 is_stmt 1 view .LVU1330
2684:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_LSB_VALUEZ)
2685:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_MSB],
 4734              		.loc 1 2685 13 view .LVU1331
2686:Core/Src/bno055.c ****                                                                   BNO055_GRAVITY_DATA_Z_MSB_VALUEZ)
2687:Core/Src/bno055.c ****             *gravity_z_s16 =
 4735              		.loc 1 2687 13 view .LVU1332
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4736              		.loc 1 2688 31 is_stmt 0 view .LVU1333
 4737 002e 9DF90520 		ldrsb	r2, [sp, #5]
2689:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_LSB]));
 4738              		.loc 1 2689 31 view .LVU1334
 4739 0032 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2688:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4740              		.loc 1 2688 17 view .LVU1335
 4741 0036 43EA0223 		orr	r3, r3, r2, lsl #8
2687:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_MSB])) << BNO055_SHIFT_EIGHT_BITS) |
 4742              		.loc 1 2687 28 view .LVU1336
 4743 003a 2380     		strh	r3, [r4]	@ movhi
 4744              	.LVL456:
 4745              	.L362:
2690:Core/Src/bno055.c ****         }
2691:Core/Src/bno055.c ****         else
2692:Core/Src/bno055.c ****         {
2693:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 137


2694:Core/Src/bno055.c ****         }
2695:Core/Src/bno055.c ****     }
2696:Core/Src/bno055.c **** 
2697:Core/Src/bno055.c ****     return com_rslt;
2698:Core/Src/bno055.c **** }
 4746              		.loc 1 2698 1 view .LVU1337
 4747 003c 03B0     		add	sp, sp, #12
 4748              	.LCFI147:
 4749              		.cfi_remember_state
 4750              		.cfi_def_cfa_offset 12
 4751              		@ sp needed
 4752 003e 30BD     		pop	{r4, r5, pc}
 4753              	.LVL457:
 4754              	.L368:
 4755              	.LCFI148:
 4756              		.cfi_restore_state
2673:Core/Src/bno055.c ****         }
 4757              		.loc 1 2673 13 is_stmt 1 view .LVU1338
2673:Core/Src/bno055.c ****         }
 4758              		.loc 1 2673 23 is_stmt 0 view .LVU1339
 4759 0040 0020     		movs	r0, #0
 4760              	.LVL458:
2673:Core/Src/bno055.c ****         }
 4761              		.loc 1 2673 23 view .LVU1340
 4762 0042 FFF7FEFF 		bl	bno055_write_page_id
 4763              	.LVL459:
2675:Core/Src/bno055.c ****         {
 4764              		.loc 1 2675 9 is_stmt 1 view .LVU1341
2675:Core/Src/bno055.c ****         {
 4765              		.loc 1 2675 12 is_stmt 0 view .LVU1342
 4766 0046 0028     		cmp	r0, #0
 4767 0048 E9D0     		beq	.L364
 4768 004a E4E7     		b	.L363
 4769              	.LVL460:
 4770              	.L365:
2664:Core/Src/bno055.c ****     }
 4771              		.loc 1 2664 16 view .LVU1343
 4772 004c 6FF07E00 		mvn	r0, #126
 4773              	.LVL461:
2664:Core/Src/bno055.c ****     }
 4774              		.loc 1 2664 16 view .LVU1344
 4775 0050 F4E7     		b	.L362
 4776              	.LVL462:
 4777              	.L366:
2693:Core/Src/bno055.c ****         }
 4778              		.loc 1 2693 22 view .LVU1345
 4779 0052 4FF0FF30 		mov	r0, #-1
 4780 0056 F1E7     		b	.L362
 4781              	.L370:
 4782              		.align	2
 4783              	.L369:
 4784 0058 00000000 		.word	.LANCHOR0
 4785              		.cfi_endproc
 4786              	.LFE38:
 4788              		.section	.text.bno055_read_gravity_xyz,"ax",%progbits
 4789              		.align	1
 4790              		.global	bno055_read_gravity_xyz
ARM GAS  /tmp/ccO72alg.s 			page 138


 4791              		.syntax unified
 4792              		.thumb
 4793              		.thumb_func
 4795              	bno055_read_gravity_xyz:
 4796              	.LVL463:
 4797              	.LFB39:
2699:Core/Src/bno055.c **** 
2700:Core/Src/bno055.c **** /*!
2701:Core/Src/bno055.c ****  *  @brief This API reads gravity data xyz values
2702:Core/Src/bno055.c ****  *  from register 0x2E to 0x33 it is a six byte data
2703:Core/Src/bno055.c ****  *
2704:Core/Src/bno055.c ****  *
2705:Core/Src/bno055.c ****  *  @param gravity : The value of gravity xyz data's
2706:Core/Src/bno055.c ****  *
2707:Core/Src/bno055.c ****  *  Parameter |    result
2708:Core/Src/bno055.c ****  *  --------- | -----------------
2709:Core/Src/bno055.c ****  *   x        | The gravity x data
2710:Core/Src/bno055.c ****  *   y        | The gravity y data
2711:Core/Src/bno055.c ****  *   z        | The gravity z data
2712:Core/Src/bno055.c ****  *
2713:Core/Src/bno055.c ****  *
2714:Core/Src/bno055.c ****  *  @return results of bus communication function
2715:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2716:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2717:Core/Src/bno055.c ****  *
2718:Core/Src/bno055.c ****  */
2719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gravity_xyz(struct bno055_gravity_t *gravity)
2720:Core/Src/bno055.c **** {
 4798              		.loc 1 2720 1 is_stmt 1 view -0
 4799              		.cfi_startproc
 4800              		@ args = 0, pretend = 0, frame = 8
 4801              		@ frame_needed = 0, uses_anonymous_args = 0
 4802              		.loc 1 2720 1 is_stmt 0 view .LVU1347
 4803 0000 30B5     		push	{r4, r5, lr}
 4804              	.LCFI149:
 4805              		.cfi_def_cfa_offset 12
 4806              		.cfi_offset 4, -12
 4807              		.cfi_offset 5, -8
 4808              		.cfi_offset 14, -4
 4809 0002 83B0     		sub	sp, sp, #12
 4810              	.LCFI150:
 4811              		.cfi_def_cfa_offset 24
 4812 0004 0446     		mov	r4, r0
2721:Core/Src/bno055.c ****     /* Variable used to return value of
2722:Core/Src/bno055.c ****      * communication routine*/
2723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4813              		.loc 1 2723 5 is_stmt 1 view .LVU1348
 4814              	.LVL464:
2724:Core/Src/bno055.c **** 
2725:Core/Src/bno055.c ****     /* Array holding the gravity xyz value
2726:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] - x->LSB
2727:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] - x->MSB
2728:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] - y->MSB
2729:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] - y->MSB
2730:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] - z->MSB
2731:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] - z->MSB
2732:Core/Src/bno055.c ****      */
ARM GAS  /tmp/ccO72alg.s 			page 139


2733:Core/Src/bno055.c ****     u8 data_u8[BNO055_GRAVITY_XYZ_DATA_SIZE] = {
 4815              		.loc 1 2733 5 view .LVU1349
 4816              		.loc 1 2733 8 is_stmt 0 view .LVU1350
 4817 0006 1D4B     		ldr	r3, .L379
 4818 0008 93E80300 		ldm	r3, {r0, r1}
 4819              	.LVL465:
 4820              		.loc 1 2733 8 view .LVU1351
 4821 000c 0090     		str	r0, [sp]
 4822 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
2734:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
2735:Core/Src/bno055.c ****     };
2736:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4823              		.loc 1 2736 5 is_stmt 1 view .LVU1352
 4824              	.LVL466:
2737:Core/Src/bno055.c **** 
2738:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2739:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4825              		.loc 1 2739 5 view .LVU1353
 4826              		.loc 1 2739 18 is_stmt 0 view .LVU1354
 4827 0012 1B4B     		ldr	r3, .L379+4
 4828 0014 1B68     		ldr	r3, [r3]
 4829              		.loc 1 2739 8 view .LVU1355
 4830 0016 53B3     		cbz	r3, .L375
2740:Core/Src/bno055.c ****     {
2741:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2742:Core/Src/bno055.c ****     }
2743:Core/Src/bno055.c ****     else
2744:Core/Src/bno055.c ****     {
2745:Core/Src/bno055.c ****         /*condition check for page, chip id is
2746:Core/Src/bno055.c ****          * available in the page zero*/
2747:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4831              		.loc 1 2747 9 is_stmt 1 view .LVU1356
 4832              		.loc 1 2747 21 is_stmt 0 view .LVU1357
 4833 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4834              		.loc 1 2747 12 view .LVU1358
 4835 001a 13BB     		cbnz	r3, .L378
 4836              	.LVL467:
 4837              	.L373:
2748:Core/Src/bno055.c ****         {
2749:Core/Src/bno055.c ****             /* Write the page zero*/
2750:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2751:Core/Src/bno055.c ****         }
2752:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4838              		.loc 1 2752 53 discriminator 1 view .LVU1359
 4839 001c 184B     		ldr	r3, .L379+4
 4840 001e 1B68     		ldr	r3, [r3]
 4841 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4842              		.loc 1 2752 41 discriminator 1 view .LVU1360
 4843 0022 3BBB     		cbnz	r3, .L376
 4844              	.L374:
2753:Core/Src/bno055.c ****         {
2754:Core/Src/bno055.c ****             /* Read the six byte value
2755:Core/Src/bno055.c ****              * of gravity xyz data*/
2756:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4845              		.loc 1 2756 13 is_stmt 1 view .LVU1361
 4846              		.loc 1 2756 32 is_stmt 0 view .LVU1362
 4847 0024 164B     		ldr	r3, .L379+4
ARM GAS  /tmp/ccO72alg.s 			page 140


 4848 0026 1868     		ldr	r0, [r3]
 4849 0028 0569     		ldr	r5, [r0, #16]
 4850              		.loc 1 2756 24 view .LVU1363
 4851 002a 0623     		movs	r3, #6
 4852 002c 6A46     		mov	r2, sp
 4853 002e 2E21     		movs	r1, #46
 4854 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 4855 0032 A847     		blx	r5
 4856              	.LVL468:
2757:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_DATA_X_LSB_VALUEX_REG,
2758:Core/Src/bno055.c ****                                                       data_u8,
2759:Core/Src/bno055.c ****                                                       BNO055_GRAVITY_XYZ_DATA_SIZE);
2760:Core/Src/bno055.c **** 
2761:Core/Src/bno055.c ****             /* Data x*/
2762:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4857              		.loc 1 2762 13 is_stmt 1 view .LVU1364
2763:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_LSB_V
2764:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4858              		.loc 1 2764 13 view .LVU1365
2765:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_X_MSB_V
2766:Core/Src/bno055.c ****             gravity->x =
 4859              		.loc 1 2766 13 view .LVU1366
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4860              		.loc 1 2767 30 is_stmt 0 view .LVU1367
 4861 0034 9DF90120 		ldrsb	r2, [sp, #1]
2768:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_X_LSB]));
 4862              		.loc 1 2768 31 view .LVU1368
 4863 0038 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
2767:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4864              		.loc 1 2767 17 view .LVU1369
 4865 003c 43EA0223 		orr	r3, r3, r2, lsl #8
2766:Core/Src/bno055.c ****                 (s16)(((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_X_MSB]) << BNO055_SHIFT_EIGHT_BITS)
 4866              		.loc 1 2766 24 view .LVU1370
 4867 0040 2380     		strh	r3, [r4]	@ movhi
2769:Core/Src/bno055.c **** 
2770:Core/Src/bno055.c ****             /* Data y*/
2771:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4868              		.loc 1 2771 13 is_stmt 1 view .LVU1371
2772:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_LSB_V
2773:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4869              		.loc 1 2773 13 view .LVU1372
2774:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Y_MSB_V
2775:Core/Src/bno055.c ****             gravity->y =
 4870              		.loc 1 2775 13 view .LVU1373
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4871              		.loc 1 2776 31 is_stmt 0 view .LVU1374
 4872 0042 9DF90320 		ldrsb	r2, [sp, #3]
2777:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Y_LSB]));
 4873              		.loc 1 2777 31 view .LVU1375
 4874 0046 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
2776:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4875              		.loc 1 2776 17 view .LVU1376
 4876 004a 43EA0223 		orr	r3, r3, r2, lsl #8
2775:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Y_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4877              		.loc 1 2775 24 view .LVU1377
 4878 004e 6380     		strh	r3, [r4, #2]	@ movhi
2778:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 141


2779:Core/Src/bno055.c ****             /* Data z*/
2780:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4879              		.loc 1 2780 13 is_stmt 1 view .LVU1378
2781:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_LSB_V
2782:Core/Src/bno055.c ****             data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSOR_DATA_
 4880              		.loc 1 2782 13 view .LVU1379
2783:Core/Src/bno055.c ****                                                                         BNO055_GRAVITY_DATA_Z_MSB_V
2784:Core/Src/bno055.c ****             gravity->z =
 4881              		.loc 1 2784 13 view .LVU1380
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4882              		.loc 1 2785 31 is_stmt 0 view .LVU1381
 4883 0050 9DF90520 		ldrsb	r2, [sp, #5]
2786:Core/Src/bno055.c ****                       (data_u8[BNO055_SENSOR_DATA_XYZ_Z_LSB]));
 4884              		.loc 1 2786 31 view .LVU1382
 4885 0054 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
2785:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4886              		.loc 1 2785 17 view .LVU1383
 4887 0058 43EA0223 		orr	r3, r3, r2, lsl #8
2784:Core/Src/bno055.c ****                 (s16)((((s32)((s8)data_u8[BNO055_SENSOR_DATA_XYZ_Z_MSB])) << BNO055_SHIFT_EIGHT_BIT
 4888              		.loc 1 2784 24 view .LVU1384
 4889 005c A380     		strh	r3, [r4, #4]	@ movhi
 4890              	.LVL469:
 4891              	.L372:
2787:Core/Src/bno055.c ****         }
2788:Core/Src/bno055.c ****         else
2789:Core/Src/bno055.c ****         {
2790:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2791:Core/Src/bno055.c ****         }
2792:Core/Src/bno055.c ****     }
2793:Core/Src/bno055.c **** 
2794:Core/Src/bno055.c ****     return com_rslt;
2795:Core/Src/bno055.c **** }
 4892              		.loc 1 2795 1 view .LVU1385
 4893 005e 03B0     		add	sp, sp, #12
 4894              	.LCFI151:
 4895              		.cfi_remember_state
 4896              		.cfi_def_cfa_offset 12
 4897              		@ sp needed
 4898 0060 30BD     		pop	{r4, r5, pc}
 4899              	.LVL470:
 4900              	.L378:
 4901              	.LCFI152:
 4902              		.cfi_restore_state
2750:Core/Src/bno055.c ****         }
 4903              		.loc 1 2750 13 is_stmt 1 view .LVU1386
2750:Core/Src/bno055.c ****         }
 4904              		.loc 1 2750 23 is_stmt 0 view .LVU1387
 4905 0062 0020     		movs	r0, #0
 4906 0064 FFF7FEFF 		bl	bno055_write_page_id
 4907              	.LVL471:
2752:Core/Src/bno055.c ****         {
 4908              		.loc 1 2752 9 is_stmt 1 view .LVU1388
2752:Core/Src/bno055.c ****         {
 4909              		.loc 1 2752 12 is_stmt 0 view .LVU1389
 4910 0068 0028     		cmp	r0, #0
 4911 006a DBD0     		beq	.L374
 4912 006c D6E7     		b	.L373
ARM GAS  /tmp/ccO72alg.s 			page 142


 4913              	.LVL472:
 4914              	.L375:
2741:Core/Src/bno055.c ****     }
 4915              		.loc 1 2741 16 view .LVU1390
 4916 006e 6FF07E00 		mvn	r0, #126
 4917 0072 F4E7     		b	.L372
 4918              	.LVL473:
 4919              	.L376:
2790:Core/Src/bno055.c ****         }
 4920              		.loc 1 2790 22 view .LVU1391
 4921 0074 4FF0FF30 		mov	r0, #-1
 4922 0078 F1E7     		b	.L372
 4923              	.L380:
 4924 007a 00BF     		.align	2
 4925              	.L379:
 4926 007c 00000000 		.word	.LANCHOR1
 4927 0080 00000000 		.word	.LANCHOR0
 4928              		.cfi_endproc
 4929              	.LFE39:
 4931              		.section	.text.bno055_read_temp_data,"ax",%progbits
 4932              		.align	1
 4933              		.global	bno055_read_temp_data
 4934              		.syntax unified
 4935              		.thumb
 4936              		.thumb_func
 4938              	bno055_read_temp_data:
 4939              	.LVL474:
 4940              	.LFB40:
2796:Core/Src/bno055.c **** 
2797:Core/Src/bno055.c **** /*!
2798:Core/Src/bno055.c ****  *  @brief This API reads temperature values
2799:Core/Src/bno055.c ****  *  from register 0x33 it is a byte data
2800:Core/Src/bno055.c ****  *
2801:Core/Src/bno055.c ****  *  @param temp_s8 : The raw temperature data
2802:Core/Src/bno055.c ****  *
2803:Core/Src/bno055.c ****  *  @return results of bus communication function
2804:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2805:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2806:Core/Src/bno055.c ****  *
2807:Core/Src/bno055.c ****  *
2808:Core/Src/bno055.c ****  */
2809:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_temp_data(s8 *temp_s8)
2810:Core/Src/bno055.c **** {
 4941              		.loc 1 2810 1 is_stmt 1 view -0
 4942              		.cfi_startproc
 4943              		@ args = 0, pretend = 0, frame = 8
 4944              		@ frame_needed = 0, uses_anonymous_args = 0
 4945              		.loc 1 2810 1 is_stmt 0 view .LVU1393
 4946 0000 70B5     		push	{r4, r5, r6, lr}
 4947              	.LCFI153:
 4948              		.cfi_def_cfa_offset 16
 4949              		.cfi_offset 4, -16
 4950              		.cfi_offset 5, -12
 4951              		.cfi_offset 6, -8
 4952              		.cfi_offset 14, -4
 4953 0002 82B0     		sub	sp, sp, #8
 4954              	.LCFI154:
ARM GAS  /tmp/ccO72alg.s 			page 143


 4955              		.cfi_def_cfa_offset 24
2811:Core/Src/bno055.c ****     /* Variable used to return value of
2812:Core/Src/bno055.c ****      * communication routine*/
2813:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 4956              		.loc 1 2813 5 is_stmt 1 view .LVU1394
 4957              	.LVL475:
2814:Core/Src/bno055.c ****     u8 data_u8 = BNO055_INIT_VALUE;
 4958              		.loc 1 2814 5 view .LVU1395
 4959              		.loc 1 2814 8 is_stmt 0 view .LVU1396
 4960 0004 0023     		movs	r3, #0
 4961 0006 8DF80730 		strb	r3, [sp, #7]
2815:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 4962              		.loc 1 2815 5 is_stmt 1 view .LVU1397
 4963              	.LVL476:
2816:Core/Src/bno055.c **** 
2817:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
2818:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 4964              		.loc 1 2818 5 view .LVU1398
 4965              		.loc 1 2818 18 is_stmt 0 view .LVU1399
 4966 000a 124B     		ldr	r3, .L389
 4967 000c 1B68     		ldr	r3, [r3]
 4968              		.loc 1 2818 8 view .LVU1400
 4969 000e D3B1     		cbz	r3, .L385
 4970 0010 0546     		mov	r5, r0
2819:Core/Src/bno055.c ****     {
2820:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
2821:Core/Src/bno055.c ****     }
2822:Core/Src/bno055.c ****     else
2823:Core/Src/bno055.c ****     {
2824:Core/Src/bno055.c ****         /*condition check for page, chip id is
2825:Core/Src/bno055.c ****          * available in the page zero*/
2826:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 4971              		.loc 1 2826 9 is_stmt 1 view .LVU1401
 4972              		.loc 1 2826 21 is_stmt 0 view .LVU1402
 4973 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4974              		.loc 1 2826 12 view .LVU1403
 4975 0014 8BB9     		cbnz	r3, .L388
 4976              	.LVL477:
 4977              	.L383:
2827:Core/Src/bno055.c ****         {
2828:Core/Src/bno055.c ****             /* Write the page zero*/
2829:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
2830:Core/Src/bno055.c ****         }
2831:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 4978              		.loc 1 2831 53 discriminator 1 view .LVU1404
 4979 0016 0F4B     		ldr	r3, .L389
 4980 0018 1B68     		ldr	r3, [r3]
 4981 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4982              		.loc 1 2831 41 discriminator 1 view .LVU1405
 4983 001c B3B9     		cbnz	r3, .L386
 4984              	.L384:
2832:Core/Src/bno055.c ****         {
2833:Core/Src/bno055.c ****             /* Read the raw temperature data */
2834:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 4985              		.loc 1 2834 13 is_stmt 1 view .LVU1406
 4986              		.loc 1 2834 32 is_stmt 0 view .LVU1407
 4987 001e 0D4B     		ldr	r3, .L389
ARM GAS  /tmp/ccO72alg.s 			page 144


 4988 0020 1C68     		ldr	r4, [r3]
 4989 0022 2669     		ldr	r6, [r4, #16]
 4990              		.loc 1 2834 24 view .LVU1408
 4991 0024 0123     		movs	r3, #1
 4992 0026 0DF10702 		add	r2, sp, #7
 4993 002a 3421     		movs	r1, #52
 4994 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 4995 002e B047     		blx	r6
 4996              	.LVL478:
2835:Core/Src/bno055.c ****                                                       BNO055_TEMP_REG,
2836:Core/Src/bno055.c ****                                                       &data_u8,
2837:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
2838:Core/Src/bno055.c ****             *temp_s8 = data_u8;
 4997              		.loc 1 2838 13 is_stmt 1 view .LVU1409
 4998              		.loc 1 2838 22 is_stmt 0 view .LVU1410
 4999 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 5000 0034 2B70     		strb	r3, [r5]
 5001              	.LVL479:
 5002              	.L382:
2839:Core/Src/bno055.c ****         }
2840:Core/Src/bno055.c ****         else
2841:Core/Src/bno055.c ****         {
2842:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2843:Core/Src/bno055.c ****         }
2844:Core/Src/bno055.c ****     }
2845:Core/Src/bno055.c **** 
2846:Core/Src/bno055.c ****     return com_rslt;
2847:Core/Src/bno055.c **** }
 5003              		.loc 1 2847 1 view .LVU1411
 5004 0036 02B0     		add	sp, sp, #8
 5005              	.LCFI155:
 5006              		.cfi_remember_state
 5007              		.cfi_def_cfa_offset 16
 5008              		@ sp needed
 5009 0038 70BD     		pop	{r4, r5, r6, pc}
 5010              	.LVL480:
 5011              	.L388:
 5012              	.LCFI156:
 5013              		.cfi_restore_state
2829:Core/Src/bno055.c ****         }
 5014              		.loc 1 2829 13 is_stmt 1 view .LVU1412
2829:Core/Src/bno055.c ****         }
 5015              		.loc 1 2829 23 is_stmt 0 view .LVU1413
 5016 003a 0020     		movs	r0, #0
 5017              	.LVL481:
2829:Core/Src/bno055.c ****         }
 5018              		.loc 1 2829 23 view .LVU1414
 5019 003c FFF7FEFF 		bl	bno055_write_page_id
 5020              	.LVL482:
2831:Core/Src/bno055.c ****         {
 5021              		.loc 1 2831 9 is_stmt 1 view .LVU1415
2831:Core/Src/bno055.c ****         {
 5022              		.loc 1 2831 12 is_stmt 0 view .LVU1416
 5023 0040 0028     		cmp	r0, #0
 5024 0042 ECD0     		beq	.L384
 5025 0044 E7E7     		b	.L383
 5026              	.LVL483:
ARM GAS  /tmp/ccO72alg.s 			page 145


 5027              	.L385:
2820:Core/Src/bno055.c ****     }
 5028              		.loc 1 2820 16 view .LVU1417
 5029 0046 6FF07E00 		mvn	r0, #126
 5030              	.LVL484:
2820:Core/Src/bno055.c ****     }
 5031              		.loc 1 2820 16 view .LVU1418
 5032 004a F4E7     		b	.L382
 5033              	.LVL485:
 5034              	.L386:
2842:Core/Src/bno055.c ****         }
 5035              		.loc 1 2842 22 view .LVU1419
 5036 004c 4FF0FF30 		mov	r0, #-1
 5037 0050 F1E7     		b	.L382
 5038              	.L390:
 5039 0052 00BF     		.align	2
 5040              	.L389:
 5041 0054 00000000 		.word	.LANCHOR0
 5042              		.cfi_endproc
 5043              	.LFE40:
 5045              		.global	__aeabi_i2d
 5046              		.global	__aeabi_dmul
 5047              		.global	__aeabi_d2f
 5048              		.section	.text.bno055_convert_float_mag_x_uT,"ax",%progbits
 5049              		.align	1
 5050              		.global	bno055_convert_float_mag_x_uT
 5051              		.syntax unified
 5052              		.thumb
 5053              		.thumb_func
 5055              	bno055_convert_float_mag_x_uT:
 5056              	.LVL486:
 5057              	.LFB49:
2848:Core/Src/bno055.c **** #ifdef  BNO055_FLOAT_ENABLE
2849:Core/Src/bno055.c **** 
2850:Core/Src/bno055.c **** /*!
2851:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2852:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2853:Core/Src/bno055.c ****  *
2854:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x meterpersecseq data
2855:Core/Src/bno055.c ****  *
2856:Core/Src/bno055.c ****  *
2857:Core/Src/bno055.c ****  *
2858:Core/Src/bno055.c ****  *  @return results of bus communication function
2859:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2860:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2861:Core/Src/bno055.c ****  *
2862:Core/Src/bno055.c ****  *
2863:Core/Src/bno055.c ****  */
2864:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_msq(float *accel_x_f)
2865:Core/Src/bno055.c **** {
2866:Core/Src/bno055.c ****     /* Variable used to return value of
2867:Core/Src/bno055.c ****      * communication routine*/
2868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2869:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2870:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2871:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2872:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 146


2873:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2874:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2875:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2876:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2877:Core/Src/bno055.c ****     {
2878:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
2879:Core/Src/bno055.c ****     }
2880:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2881:Core/Src/bno055.c ****     {
2882:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2883:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2884:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2885:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2886:Core/Src/bno055.c ****         {
2887:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2888:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
2889:Core/Src/bno055.c ****             *accel_x_f = data_f;
2890:Core/Src/bno055.c ****         }
2891:Core/Src/bno055.c ****         else
2892:Core/Src/bno055.c ****         {
2893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2894:Core/Src/bno055.c ****         }
2895:Core/Src/bno055.c ****     }
2896:Core/Src/bno055.c ****     else
2897:Core/Src/bno055.c ****     {
2898:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2899:Core/Src/bno055.c ****     }
2900:Core/Src/bno055.c **** 
2901:Core/Src/bno055.c ****     return com_rslt;
2902:Core/Src/bno055.c **** }
2903:Core/Src/bno055.c **** 
2904:Core/Src/bno055.c **** /*!
2905:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2906:Core/Src/bno055.c ****  *  to millig output as float
2907:Core/Src/bno055.c ****  *
2908:Core/Src/bno055.c ****  *  @param accel_x_f : The accel x millig data
2909:Core/Src/bno055.c ****  *
2910:Core/Src/bno055.c ****  *
2911:Core/Src/bno055.c ****  *
2912:Core/Src/bno055.c ****  *  @return results of bus communication function
2913:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2914:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2915:Core/Src/bno055.c ****  *
2916:Core/Src/bno055.c ****  *
2917:Core/Src/bno055.c ****  *
2918:Core/Src/bno055.c ****  */
2919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_x_mg(float *accel_x_f)
2920:Core/Src/bno055.c **** {
2921:Core/Src/bno055.c ****     /* Variable used to return value of
2922:Core/Src/bno055.c ****      * communication routine*/
2923:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2924:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
2925:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2926:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2927:Core/Src/bno055.c **** 
2928:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2929:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
ARM GAS  /tmp/ccO72alg.s 			page 147


2930:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2931:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
2932:Core/Src/bno055.c ****     {
2933:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
2934:Core/Src/bno055.c ****     }
2935:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2936:Core/Src/bno055.c ****     {
2937:Core/Src/bno055.c ****         /* Read the accel raw x data*/
2938:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
2939:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2940:Core/Src/bno055.c ****         {
2941:Core/Src/bno055.c ****             /* Convert the raw accel x to m/s2*/
2942:Core/Src/bno055.c ****             data_f = (float)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
2943:Core/Src/bno055.c ****             *accel_x_f = data_f;
2944:Core/Src/bno055.c ****         }
2945:Core/Src/bno055.c ****         else
2946:Core/Src/bno055.c ****         {
2947:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
2948:Core/Src/bno055.c ****         }
2949:Core/Src/bno055.c ****     }
2950:Core/Src/bno055.c ****     else
2951:Core/Src/bno055.c ****     {
2952:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
2953:Core/Src/bno055.c ****     }
2954:Core/Src/bno055.c **** 
2955:Core/Src/bno055.c ****     return com_rslt;
2956:Core/Src/bno055.c **** }
2957:Core/Src/bno055.c **** 
2958:Core/Src/bno055.c **** /*!
2959:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
2960:Core/Src/bno055.c ****  *  to meterpersecseq output as float
2961:Core/Src/bno055.c ****  *
2962:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y meterpersecseq data
2963:Core/Src/bno055.c ****  *
2964:Core/Src/bno055.c ****  *
2965:Core/Src/bno055.c ****  *
2966:Core/Src/bno055.c ****  *  @return results of bus communication function
2967:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
2968:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
2969:Core/Src/bno055.c ****  *
2970:Core/Src/bno055.c ****  *
2971:Core/Src/bno055.c ****  */
2972:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_msq(float *accel_y_f)
2973:Core/Src/bno055.c **** {
2974:Core/Src/bno055.c ****     /* Variable used to return value of
2975:Core/Src/bno055.c ****      * communication routine*/
2976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
2977:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
2978:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
2979:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
2980:Core/Src/bno055.c **** 
2981:Core/Src/bno055.c ****     /* Read the current accel unit and set the
2982:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
2983:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
2984:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
2985:Core/Src/bno055.c ****     {
2986:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
ARM GAS  /tmp/ccO72alg.s 			page 148


2987:Core/Src/bno055.c ****     }
2988:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
2989:Core/Src/bno055.c ****     {
2990:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
2991:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
2992:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
2993:Core/Src/bno055.c ****         {
2994:Core/Src/bno055.c ****             /* Convert the raw accel y to m/s2*/
2995:Core/Src/bno055.c ****             data_f = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
2996:Core/Src/bno055.c ****             *accel_y_f = data_f;
2997:Core/Src/bno055.c ****         }
2998:Core/Src/bno055.c ****         else
2999:Core/Src/bno055.c ****         {
3000:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3001:Core/Src/bno055.c ****         }
3002:Core/Src/bno055.c ****     }
3003:Core/Src/bno055.c ****     else
3004:Core/Src/bno055.c ****     {
3005:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3006:Core/Src/bno055.c ****     }
3007:Core/Src/bno055.c **** 
3008:Core/Src/bno055.c ****     return com_rslt;
3009:Core/Src/bno055.c **** }
3010:Core/Src/bno055.c **** 
3011:Core/Src/bno055.c **** /*!
3012:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
3013:Core/Src/bno055.c ****  *  to millig output as float
3014:Core/Src/bno055.c ****  *
3015:Core/Src/bno055.c ****  *  @param accel_y_f : The accel y millig data
3016:Core/Src/bno055.c ****  *
3017:Core/Src/bno055.c ****  *
3018:Core/Src/bno055.c ****  *
3019:Core/Src/bno055.c ****  *  @return results of bus communication function
3020:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3021:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3022:Core/Src/bno055.c ****  *
3023:Core/Src/bno055.c ****  */
3024:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_y_mg(float *accel_y_f)
3025:Core/Src/bno055.c **** {
3026:Core/Src/bno055.c ****     /* Variable used to return value of
3027:Core/Src/bno055.c ****      * communication routine*/
3028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3029:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
3030:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
3031:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3032:Core/Src/bno055.c **** 
3033:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3034:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3035:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3036:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3037:Core/Src/bno055.c ****     {
3038:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3039:Core/Src/bno055.c ****     }
3040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3041:Core/Src/bno055.c ****     {
3042:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3043:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
ARM GAS  /tmp/ccO72alg.s 			page 149


3044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3045:Core/Src/bno055.c ****         {
3046:Core/Src/bno055.c ****             /* Convert the raw accel z to mg*/
3047:Core/Src/bno055.c ****             data = (float)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
3048:Core/Src/bno055.c ****             *accel_y_f = data;
3049:Core/Src/bno055.c ****         }
3050:Core/Src/bno055.c ****         else
3051:Core/Src/bno055.c ****         {
3052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3053:Core/Src/bno055.c ****         }
3054:Core/Src/bno055.c ****     }
3055:Core/Src/bno055.c ****     else
3056:Core/Src/bno055.c ****     {
3057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3058:Core/Src/bno055.c ****     }
3059:Core/Src/bno055.c **** 
3060:Core/Src/bno055.c ****     return com_rslt;
3061:Core/Src/bno055.c **** }
3062:Core/Src/bno055.c **** 
3063:Core/Src/bno055.c **** /*!
3064:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3065:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3066:Core/Src/bno055.c ****  *
3067:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z meterpersecseq data
3068:Core/Src/bno055.c ****  *
3069:Core/Src/bno055.c ****  *
3070:Core/Src/bno055.c ****  *
3071:Core/Src/bno055.c ****  *  @return results of bus communication function
3072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3074:Core/Src/bno055.c ****  *
3075:Core/Src/bno055.c ****  *
3076:Core/Src/bno055.c ****  */
3077:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_msq(float *accel_z_f)
3078:Core/Src/bno055.c **** {
3079:Core/Src/bno055.c ****     /* Variable used to return value of
3080:Core/Src/bno055.c ****      * communication routine*/
3081:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3082:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3083:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3084:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3085:Core/Src/bno055.c **** 
3086:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3087:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3088:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3089:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3090:Core/Src/bno055.c ****     {
3091:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3092:Core/Src/bno055.c ****     }
3093:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3094:Core/Src/bno055.c ****     {
3095:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3096:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3097:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
3098:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3099:Core/Src/bno055.c ****         {
3100:Core/Src/bno055.c ****             /* Convert the raw accel z to m/s2*/
ARM GAS  /tmp/ccO72alg.s 			page 150


3101:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
3102:Core/Src/bno055.c ****             *accel_z_f = data_f;
3103:Core/Src/bno055.c ****         }
3104:Core/Src/bno055.c ****         else
3105:Core/Src/bno055.c ****         {
3106:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3107:Core/Src/bno055.c ****         }
3108:Core/Src/bno055.c ****     }
3109:Core/Src/bno055.c ****     else
3110:Core/Src/bno055.c ****     {
3111:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3112:Core/Src/bno055.c ****     }
3113:Core/Src/bno055.c **** 
3114:Core/Src/bno055.c ****     return com_rslt;
3115:Core/Src/bno055.c **** }
3116:Core/Src/bno055.c **** 
3117:Core/Src/bno055.c **** /*!
3118:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
3119:Core/Src/bno055.c ****  *  to millig output as float
3120:Core/Src/bno055.c ****  *
3121:Core/Src/bno055.c ****  *  @param accel_z_f : The accel z millig data
3122:Core/Src/bno055.c ****  *
3123:Core/Src/bno055.c ****  *
3124:Core/Src/bno055.c ****  *
3125:Core/Src/bno055.c ****  *  @return results of bus communication function
3126:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3127:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3128:Core/Src/bno055.c ****  *
3129:Core/Src/bno055.c ****  *
3130:Core/Src/bno055.c ****  */
3131:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_z_mg(float *accel_z_f)
3132:Core/Src/bno055.c **** {
3133:Core/Src/bno055.c ****     /* Variable used to return value of
3134:Core/Src/bno055.c ****      * communication routine*/
3135:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3136:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
3137:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3138:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3139:Core/Src/bno055.c **** 
3140:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3141:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2 */
3142:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3143:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3144:Core/Src/bno055.c ****     {
3145:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3146:Core/Src/bno055.c ****     }
3147:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3148:Core/Src/bno055.c ****     {
3149:Core/Src/bno055.c ****         /* Read the accel raw z data*/
3150:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
3151:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3152:Core/Src/bno055.c ****         {
3153:Core/Src/bno055.c ****             /* Convert the raw accel x to mg*/
3154:Core/Src/bno055.c ****             data_f = (float)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
3155:Core/Src/bno055.c ****             *accel_z_f = data_f;
3156:Core/Src/bno055.c ****         }
3157:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccO72alg.s 			page 151


3158:Core/Src/bno055.c ****         {
3159:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3160:Core/Src/bno055.c ****         }
3161:Core/Src/bno055.c ****     }
3162:Core/Src/bno055.c ****     else
3163:Core/Src/bno055.c ****     {
3164:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3165:Core/Src/bno055.c ****     }
3166:Core/Src/bno055.c **** 
3167:Core/Src/bno055.c ****     return com_rslt;
3168:Core/Src/bno055.c **** }
3169:Core/Src/bno055.c **** 
3170:Core/Src/bno055.c **** /*!
3171:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3172:Core/Src/bno055.c ****  *  to meterpersecseq output as float
3173:Core/Src/bno055.c ****  *
3174:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
3175:Core/Src/bno055.c ****  *
3176:Core/Src/bno055.c ****  *  Parameter |    result
3177:Core/Src/bno055.c ****  *  --------- | -----------------
3178:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
3179:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
3180:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
3181:Core/Src/bno055.c ****  *
3182:Core/Src/bno055.c ****  *  @return results of bus communication function
3183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3185:Core/Src/bno055.c ****  *
3186:Core/Src/bno055.c ****  *
3187:Core/Src/bno055.c ****  */
3188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_msq(struct bno055_accel_float_t *accel_x
3189:Core/Src/bno055.c **** {
3190:Core/Src/bno055.c ****     /* Variable used to return value of
3191:Core/Src/bno055.c ****      * communication routine*/
3192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3193:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3194:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3195:Core/Src/bno055.c **** 
3196:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3197:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
3198:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3199:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
3200:Core/Src/bno055.c ****     {
3201:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
3202:Core/Src/bno055.c ****     }
3203:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3204:Core/Src/bno055.c ****     {
3205:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
3206:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3207:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3208:Core/Src/bno055.c ****         {
3209:Core/Src/bno055.c ****             /* Convert the accel raw xyz to meterpersecseq*/
3210:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
3211:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
3212:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
3213:Core/Src/bno055.c ****         }
3214:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccO72alg.s 			page 152


3215:Core/Src/bno055.c ****         {
3216:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3217:Core/Src/bno055.c ****         }
3218:Core/Src/bno055.c ****     }
3219:Core/Src/bno055.c ****     else
3220:Core/Src/bno055.c ****     {
3221:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3222:Core/Src/bno055.c ****     }
3223:Core/Src/bno055.c **** 
3224:Core/Src/bno055.c ****     return com_rslt;
3225:Core/Src/bno055.c **** }
3226:Core/Src/bno055.c **** 
3227:Core/Src/bno055.c **** /*!
3228:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
3229:Core/Src/bno055.c ****  *  to millig output as float
3230:Core/Src/bno055.c ****  *
3231:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
3232:Core/Src/bno055.c ****  *
3233:Core/Src/bno055.c ****  *  Parameter |    result
3234:Core/Src/bno055.c ****  *  --------- | -----------------
3235:Core/Src/bno055.c ****  *   x        | millig data of accel
3236:Core/Src/bno055.c ****  *   y        | millig data of accel
3237:Core/Src/bno055.c ****  *   z        | millig data of accel
3238:Core/Src/bno055.c ****  *
3239:Core/Src/bno055.c ****  *
3240:Core/Src/bno055.c ****  *  @return results of bus communication function
3241:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3242:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3243:Core/Src/bno055.c ****  *
3244:Core/Src/bno055.c ****  *
3245:Core/Src/bno055.c ****  */
3246:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_accel_xyz_mg(struct bno055_accel_float_t *accel_xy
3247:Core/Src/bno055.c **** {
3248:Core/Src/bno055.c ****     /* Variable used to return value of
3249:Core/Src/bno055.c ****      * communication routine*/
3250:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3251:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
3252:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
3253:Core/Src/bno055.c **** 
3254:Core/Src/bno055.c ****     /* Read the current accel unit and set the
3255:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
3256:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
3257:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
3258:Core/Src/bno055.c ****     {
3259:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
3260:Core/Src/bno055.c ****     }
3261:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3262:Core/Src/bno055.c ****     {
3263:Core/Src/bno055.c ****         /* Read the accel raw y data*/
3264:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
3265:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3266:Core/Src/bno055.c ****         {
3267:Core/Src/bno055.c ****             /*Convert the accel raw xyz to millig */
3268:Core/Src/bno055.c ****             accel_xyz->x = (float)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
3269:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
3270:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
3271:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 153


3272:Core/Src/bno055.c ****         else
3273:Core/Src/bno055.c ****         {
3274:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3275:Core/Src/bno055.c ****         }
3276:Core/Src/bno055.c ****     }
3277:Core/Src/bno055.c ****     else
3278:Core/Src/bno055.c ****     {
3279:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3280:Core/Src/bno055.c ****     }
3281:Core/Src/bno055.c **** 
3282:Core/Src/bno055.c ****     return com_rslt;
3283:Core/Src/bno055.c **** }
3284:Core/Src/bno055.c **** 
3285:Core/Src/bno055.c **** /*!
3286:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
3287:Core/Src/bno055.c ****  *  to microTesla output as float
3288:Core/Src/bno055.c ****  *
3289:Core/Src/bno055.c ****  *  @param mag_x_f : The mag x microTesla data
3290:Core/Src/bno055.c ****  *
3291:Core/Src/bno055.c ****  *
3292:Core/Src/bno055.c ****  *
3293:Core/Src/bno055.c ****  *  @return results of bus communication function
3294:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3295:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3296:Core/Src/bno055.c ****  *
3297:Core/Src/bno055.c ****  *
3298:Core/Src/bno055.c ****  */
3299:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_x_uT(float *mag_x_f)
3300:Core/Src/bno055.c **** {
 5058              		.loc 1 3300 1 is_stmt 1 view -0
 5059              		.cfi_startproc
 5060              		@ args = 0, pretend = 0, frame = 8
 5061              		@ frame_needed = 0, uses_anonymous_args = 0
 5062              		.loc 1 3300 1 is_stmt 0 view .LVU1421
 5063 0000 30B5     		push	{r4, r5, lr}
 5064              	.LCFI157:
 5065              		.cfi_def_cfa_offset 12
 5066              		.cfi_offset 4, -12
 5067              		.cfi_offset 5, -8
 5068              		.cfi_offset 14, -4
 5069 0002 83B0     		sub	sp, sp, #12
 5070              	.LCFI158:
 5071              		.cfi_def_cfa_offset 24
 5072 0004 0446     		mov	r4, r0
3301:Core/Src/bno055.c ****     /* Variable used to return value of
3302:Core/Src/bno055.c ****      * communication routine*/
3303:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5073              		.loc 1 3303 5 is_stmt 1 view .LVU1422
 5074              	.LVL487:
3304:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 5075              		.loc 1 3304 5 view .LVU1423
 5076              		.loc 1 3304 9 is_stmt 0 view .LVU1424
 5077 0006 0023     		movs	r3, #0
 5078 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3305:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5079              		.loc 1 3305 5 is_stmt 1 view .LVU1425
 5080              	.LVL488:
ARM GAS  /tmp/ccO72alg.s 			page 154


3306:Core/Src/bno055.c **** 
3307:Core/Src/bno055.c ****     /* Read raw mag x data */
3308:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 5081              		.loc 1 3308 5 view .LVU1426
 5082              		.loc 1 3308 16 is_stmt 0 view .LVU1427
 5083 000c 0DF10600 		add	r0, sp, #6
 5084              	.LVL489:
 5085              		.loc 1 3308 16 view .LVU1428
 5086 0010 FFF7FEFF 		bl	bno055_read_mag_x
 5087              	.LVL490:
3309:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5088              		.loc 1 3309 5 is_stmt 1 view .LVU1429
 5089              		.loc 1 3309 8 is_stmt 0 view .LVU1430
 5090 0014 70B9     		cbnz	r0, .L393
 5091 0016 0546     		mov	r5, r0
3310:Core/Src/bno055.c ****     {
3311:Core/Src/bno055.c ****         /* Convert the raw mag x to microTesla*/
3312:Core/Src/bno055.c ****         data_f = (float)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 5092              		.loc 1 3312 9 is_stmt 1 view .LVU1431
 5093              		.loc 1 3312 40 is_stmt 0 view .LVU1432
 5094 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5095              	.LVL491:
 5096              		.loc 1 3312 40 view .LVU1433
 5097 001c FFF7FEFF 		bl	__aeabi_i2d
 5098              	.LVL492:
 5099 0020 0022     		movs	r2, #0
 5100 0022 064B     		ldr	r3, .L395
 5101 0024 FFF7FEFF 		bl	__aeabi_dmul
 5102              	.LVL493:
 5103              		.loc 1 3312 16 view .LVU1434
 5104 0028 FFF7FEFF 		bl	__aeabi_d2f
 5105              	.LVL494:
3313:Core/Src/bno055.c ****         *mag_x_f = data_f;
 5106              		.loc 1 3313 9 is_stmt 1 view .LVU1435
 5107              		.loc 1 3313 18 is_stmt 0 view .LVU1436
 5108 002c 2060     		str	r0, [r4]	@ float
 5109              	.LVL495:
 5110              	.L392:
3314:Core/Src/bno055.c ****     }
3315:Core/Src/bno055.c ****     else
3316:Core/Src/bno055.c ****     {
3317:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3318:Core/Src/bno055.c ****     }
3319:Core/Src/bno055.c **** 
3320:Core/Src/bno055.c ****     return com_rslt;
 5111              		.loc 1 3320 5 is_stmt 1 view .LVU1437
3321:Core/Src/bno055.c **** }
 5112              		.loc 1 3321 1 is_stmt 0 view .LVU1438
 5113 002e 2846     		mov	r0, r5
 5114 0030 03B0     		add	sp, sp, #12
 5115              	.LCFI159:
 5116              		.cfi_remember_state
 5117              		.cfi_def_cfa_offset 12
 5118              		@ sp needed
 5119 0032 30BD     		pop	{r4, r5, pc}
 5120              	.LVL496:
 5121              	.L393:
ARM GAS  /tmp/ccO72alg.s 			page 155


 5122              	.LCFI160:
 5123              		.cfi_restore_state
3317:Core/Src/bno055.c ****     }
 5124              		.loc 1 3317 18 view .LVU1439
 5125 0034 4FF0FF35 		mov	r5, #-1
 5126 0038 F9E7     		b	.L392
 5127              	.L396:
 5128 003a 00BF     		.align	2
 5129              	.L395:
 5130 003c 0000B03F 		.word	1068498944
 5131              		.cfi_endproc
 5132              	.LFE49:
 5134              		.section	.text.bno055_convert_float_mag_y_uT,"ax",%progbits
 5135              		.align	1
 5136              		.global	bno055_convert_float_mag_y_uT
 5137              		.syntax unified
 5138              		.thumb
 5139              		.thumb_func
 5141              	bno055_convert_float_mag_y_uT:
 5142              	.LVL497:
 5143              	.LFB50:
3322:Core/Src/bno055.c **** 
3323:Core/Src/bno055.c **** /*!
3324:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
3325:Core/Src/bno055.c ****  *  to microTesla output as float
3326:Core/Src/bno055.c ****  *
3327:Core/Src/bno055.c ****  *  @param mag_y_f : The mag y microTesla data
3328:Core/Src/bno055.c ****  *
3329:Core/Src/bno055.c ****  *
3330:Core/Src/bno055.c ****  *
3331:Core/Src/bno055.c ****  *  @return results of bus communication function
3332:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3333:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3334:Core/Src/bno055.c ****  *
3335:Core/Src/bno055.c ****  */
3336:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_y_uT(float *mag_y_f)
3337:Core/Src/bno055.c **** {
 5144              		.loc 1 3337 1 is_stmt 1 view -0
 5145              		.cfi_startproc
 5146              		@ args = 0, pretend = 0, frame = 8
 5147              		@ frame_needed = 0, uses_anonymous_args = 0
 5148              		.loc 1 3337 1 is_stmt 0 view .LVU1441
 5149 0000 30B5     		push	{r4, r5, lr}
 5150              	.LCFI161:
 5151              		.cfi_def_cfa_offset 12
 5152              		.cfi_offset 4, -12
 5153              		.cfi_offset 5, -8
 5154              		.cfi_offset 14, -4
 5155 0002 83B0     		sub	sp, sp, #12
 5156              	.LCFI162:
 5157              		.cfi_def_cfa_offset 24
 5158 0004 0446     		mov	r4, r0
3338:Core/Src/bno055.c ****     /* Variable used to return value of
3339:Core/Src/bno055.c ****      * communication routine*/
3340:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5159              		.loc 1 3340 5 is_stmt 1 view .LVU1442
 5160              	.LVL498:
ARM GAS  /tmp/ccO72alg.s 			page 156


3341:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 5161              		.loc 1 3341 5 view .LVU1443
 5162              		.loc 1 3341 9 is_stmt 0 view .LVU1444
 5163 0006 0023     		movs	r3, #0
 5164 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3342:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5165              		.loc 1 3342 5 is_stmt 1 view .LVU1445
 5166              	.LVL499:
3343:Core/Src/bno055.c **** 
3344:Core/Src/bno055.c ****     /* Read raw mag y data */
3345:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 5167              		.loc 1 3345 5 view .LVU1446
 5168              		.loc 1 3345 16 is_stmt 0 view .LVU1447
 5169 000c 0DF10600 		add	r0, sp, #6
 5170              	.LVL500:
 5171              		.loc 1 3345 16 view .LVU1448
 5172 0010 FFF7FEFF 		bl	bno055_read_mag_y
 5173              	.LVL501:
3346:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5174              		.loc 1 3346 5 is_stmt 1 view .LVU1449
 5175              		.loc 1 3346 8 is_stmt 0 view .LVU1450
 5176 0014 70B9     		cbnz	r0, .L399
 5177 0016 0546     		mov	r5, r0
3347:Core/Src/bno055.c ****     {
3348:Core/Src/bno055.c ****         /* Convert the raw mag y to microTesla*/
3349:Core/Src/bno055.c ****         data_f = (float)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 5178              		.loc 1 3349 9 is_stmt 1 view .LVU1451
 5179              		.loc 1 3349 40 is_stmt 0 view .LVU1452
 5180 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5181              	.LVL502:
 5182              		.loc 1 3349 40 view .LVU1453
 5183 001c FFF7FEFF 		bl	__aeabi_i2d
 5184              	.LVL503:
 5185 0020 0022     		movs	r2, #0
 5186 0022 064B     		ldr	r3, .L401
 5187 0024 FFF7FEFF 		bl	__aeabi_dmul
 5188              	.LVL504:
 5189              		.loc 1 3349 16 view .LVU1454
 5190 0028 FFF7FEFF 		bl	__aeabi_d2f
 5191              	.LVL505:
3350:Core/Src/bno055.c ****         *mag_y_f = data_f;
 5192              		.loc 1 3350 9 is_stmt 1 view .LVU1455
 5193              		.loc 1 3350 18 is_stmt 0 view .LVU1456
 5194 002c 2060     		str	r0, [r4]	@ float
 5195              	.LVL506:
 5196              	.L398:
3351:Core/Src/bno055.c ****     }
3352:Core/Src/bno055.c ****     else
3353:Core/Src/bno055.c ****     {
3354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3355:Core/Src/bno055.c ****     }
3356:Core/Src/bno055.c **** 
3357:Core/Src/bno055.c ****     return com_rslt;
 5197              		.loc 1 3357 5 is_stmt 1 view .LVU1457
3358:Core/Src/bno055.c **** }
 5198              		.loc 1 3358 1 is_stmt 0 view .LVU1458
 5199 002e 2846     		mov	r0, r5
ARM GAS  /tmp/ccO72alg.s 			page 157


 5200 0030 03B0     		add	sp, sp, #12
 5201              	.LCFI163:
 5202              		.cfi_remember_state
 5203              		.cfi_def_cfa_offset 12
 5204              		@ sp needed
 5205 0032 30BD     		pop	{r4, r5, pc}
 5206              	.LVL507:
 5207              	.L399:
 5208              	.LCFI164:
 5209              		.cfi_restore_state
3354:Core/Src/bno055.c ****     }
 5210              		.loc 1 3354 18 view .LVU1459
 5211 0034 4FF0FF35 		mov	r5, #-1
 5212 0038 F9E7     		b	.L398
 5213              	.L402:
 5214 003a 00BF     		.align	2
 5215              	.L401:
 5216 003c 0000B03F 		.word	1068498944
 5217              		.cfi_endproc
 5218              	.LFE50:
 5220              		.section	.text.bno055_convert_float_mag_z_uT,"ax",%progbits
 5221              		.align	1
 5222              		.global	bno055_convert_float_mag_z_uT
 5223              		.syntax unified
 5224              		.thumb
 5225              		.thumb_func
 5227              	bno055_convert_float_mag_z_uT:
 5228              	.LVL508:
 5229              	.LFB51:
3359:Core/Src/bno055.c **** 
3360:Core/Src/bno055.c **** /*!
3361:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
3362:Core/Src/bno055.c ****  *  to microTesla output as float
3363:Core/Src/bno055.c ****  *
3364:Core/Src/bno055.c ****  *  @param mag_z_f : The mag z microTesla data
3365:Core/Src/bno055.c ****  *
3366:Core/Src/bno055.c ****  *
3367:Core/Src/bno055.c ****  *
3368:Core/Src/bno055.c ****  *  @return results of bus communication function
3369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3371:Core/Src/bno055.c ****  *
3372:Core/Src/bno055.c ****  */
3373:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_z_uT(float *mag_z_f)
3374:Core/Src/bno055.c **** {
 5230              		.loc 1 3374 1 is_stmt 1 view -0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 8
 5233              		@ frame_needed = 0, uses_anonymous_args = 0
 5234              		.loc 1 3374 1 is_stmt 0 view .LVU1461
 5235 0000 30B5     		push	{r4, r5, lr}
 5236              	.LCFI165:
 5237              		.cfi_def_cfa_offset 12
 5238              		.cfi_offset 4, -12
 5239              		.cfi_offset 5, -8
 5240              		.cfi_offset 14, -4
 5241 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 158


 5242              	.LCFI166:
 5243              		.cfi_def_cfa_offset 24
 5244 0004 0446     		mov	r4, r0
3375:Core/Src/bno055.c ****     /* Variable used to return value of
3376:Core/Src/bno055.c ****      * communication routine*/
3377:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5245              		.loc 1 3377 5 is_stmt 1 view .LVU1462
 5246              	.LVL509:
3378:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 5247              		.loc 1 3378 5 view .LVU1463
 5248              		.loc 1 3378 9 is_stmt 0 view .LVU1464
 5249 0006 0023     		movs	r3, #0
 5250 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3379:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5251              		.loc 1 3379 5 is_stmt 1 view .LVU1465
 5252              	.LVL510:
3380:Core/Src/bno055.c **** 
3381:Core/Src/bno055.c ****     /* Read raw mag z data */
3382:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 5253              		.loc 1 3382 5 view .LVU1466
 5254              		.loc 1 3382 16 is_stmt 0 view .LVU1467
 5255 000c 0DF10600 		add	r0, sp, #6
 5256              	.LVL511:
 5257              		.loc 1 3382 16 view .LVU1468
 5258 0010 FFF7FEFF 		bl	bno055_read_mag_z
 5259              	.LVL512:
3383:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5260              		.loc 1 3383 5 is_stmt 1 view .LVU1469
 5261              		.loc 1 3383 8 is_stmt 0 view .LVU1470
 5262 0014 70B9     		cbnz	r0, .L405
 5263 0016 0546     		mov	r5, r0
3384:Core/Src/bno055.c ****     {
3385:Core/Src/bno055.c ****         /* Convert the raw mag z to microTesla*/
3386:Core/Src/bno055.c ****         data_f = (float)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 5264              		.loc 1 3386 9 is_stmt 1 view .LVU1471
 5265              		.loc 1 3386 40 is_stmt 0 view .LVU1472
 5266 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5267              	.LVL513:
 5268              		.loc 1 3386 40 view .LVU1473
 5269 001c FFF7FEFF 		bl	__aeabi_i2d
 5270              	.LVL514:
 5271 0020 0022     		movs	r2, #0
 5272 0022 064B     		ldr	r3, .L407
 5273 0024 FFF7FEFF 		bl	__aeabi_dmul
 5274              	.LVL515:
 5275              		.loc 1 3386 16 view .LVU1474
 5276 0028 FFF7FEFF 		bl	__aeabi_d2f
 5277              	.LVL516:
3387:Core/Src/bno055.c ****         *mag_z_f = data_f;
 5278              		.loc 1 3387 9 is_stmt 1 view .LVU1475
 5279              		.loc 1 3387 18 is_stmt 0 view .LVU1476
 5280 002c 2060     		str	r0, [r4]	@ float
 5281              	.LVL517:
 5282              	.L404:
3388:Core/Src/bno055.c ****     }
3389:Core/Src/bno055.c ****     else
3390:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 159


3391:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3392:Core/Src/bno055.c ****     }
3393:Core/Src/bno055.c **** 
3394:Core/Src/bno055.c ****     return com_rslt;
 5283              		.loc 1 3394 5 is_stmt 1 view .LVU1477
3395:Core/Src/bno055.c **** }
 5284              		.loc 1 3395 1 is_stmt 0 view .LVU1478
 5285 002e 2846     		mov	r0, r5
 5286 0030 03B0     		add	sp, sp, #12
 5287              	.LCFI167:
 5288              		.cfi_remember_state
 5289              		.cfi_def_cfa_offset 12
 5290              		@ sp needed
 5291 0032 30BD     		pop	{r4, r5, pc}
 5292              	.LVL518:
 5293              	.L405:
 5294              	.LCFI168:
 5295              		.cfi_restore_state
3391:Core/Src/bno055.c ****     }
 5296              		.loc 1 3391 18 view .LVU1479
 5297 0034 4FF0FF35 		mov	r5, #-1
 5298 0038 F9E7     		b	.L404
 5299              	.L408:
 5300 003a 00BF     		.align	2
 5301              	.L407:
 5302 003c 0000B03F 		.word	1068498944
 5303              		.cfi_endproc
 5304              	.LFE51:
 5306              		.section	.text.bno055_convert_float_mag_xyz_uT,"ax",%progbits
 5307              		.align	1
 5308              		.global	bno055_convert_float_mag_xyz_uT
 5309              		.syntax unified
 5310              		.thumb
 5311              		.thumb_func
 5313              	bno055_convert_float_mag_xyz_uT:
 5314              	.LVL519:
 5315              	.LFB52:
3396:Core/Src/bno055.c **** 
3397:Core/Src/bno055.c **** /*!
3398:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
3399:Core/Src/bno055.c ****  *  to microTesla output as float
3400:Core/Src/bno055.c ****  *
3401:Core/Src/bno055.c ****  *  @param mag_xyz_data : The microTesla data of mag xyz
3402:Core/Src/bno055.c ****  *
3403:Core/Src/bno055.c ****  *  Parameter |    result
3404:Core/Src/bno055.c ****  *  --------- | -----------------
3405:Core/Src/bno055.c ****  *    x       | microTesla data of mag
3406:Core/Src/bno055.c ****  *    y       | microTesla data of mag
3407:Core/Src/bno055.c ****  *    z       | microTesla data of mag
3408:Core/Src/bno055.c ****  *
3409:Core/Src/bno055.c ****  *
3410:Core/Src/bno055.c ****  *  @return results of bus communication function
3411:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3412:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3413:Core/Src/bno055.c ****  *
3414:Core/Src/bno055.c ****  */
3415:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_mag_xyz_uT(struct bno055_mag_float_t *mag_xyz_data
ARM GAS  /tmp/ccO72alg.s 			page 160


3416:Core/Src/bno055.c **** {
 5316              		.loc 1 3416 1 is_stmt 1 view -0
 5317              		.cfi_startproc
 5318              		@ args = 0, pretend = 0, frame = 8
 5319              		@ frame_needed = 0, uses_anonymous_args = 0
 5320              		.loc 1 3416 1 is_stmt 0 view .LVU1481
 5321 0000 30B5     		push	{r4, r5, lr}
 5322              	.LCFI169:
 5323              		.cfi_def_cfa_offset 12
 5324              		.cfi_offset 4, -12
 5325              		.cfi_offset 5, -8
 5326              		.cfi_offset 14, -4
 5327 0002 83B0     		sub	sp, sp, #12
 5328              	.LCFI170:
 5329              		.cfi_def_cfa_offset 24
 5330 0004 0446     		mov	r4, r0
3417:Core/Src/bno055.c ****     /* Variable used to return value of
3418:Core/Src/bno055.c ****      * communication routine*/
3419:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5331              		.loc 1 3419 5 is_stmt 1 view .LVU1482
 5332              	.LVL520:
3420:Core/Src/bno055.c ****     struct bno055_mag_t mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 5333              		.loc 1 3420 5 view .LVU1483
 5334              		.loc 1 3420 25 is_stmt 0 view .LVU1484
 5335 0006 0023     		movs	r3, #0
 5336 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5337 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5338 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
3421:Core/Src/bno055.c **** 
3422:Core/Src/bno055.c ****     /* Read raw mag x data */
3423:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&mag_xyz);
 5339              		.loc 1 3423 5 is_stmt 1 view .LVU1485
 5340              		.loc 1 3423 16 is_stmt 0 view .LVU1486
 5341 0014 6846     		mov	r0, sp
 5342              	.LVL521:
 5343              		.loc 1 3423 16 view .LVU1487
 5344 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 5345              	.LVL522:
3424:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5346              		.loc 1 3424 5 is_stmt 1 view .LVU1488
 5347              		.loc 1 3424 8 is_stmt 0 view .LVU1489
 5348 001a 20BB     		cbnz	r0, .L411
 5349 001c 0546     		mov	r5, r0
3425:Core/Src/bno055.c ****     {
3426:Core/Src/bno055.c ****         /* Convert mag raw xyz to microTesla*/
3427:Core/Src/bno055.c ****         mag_xyz_data->x = (float)(mag_xyz.x / BNO055_MAG_DIV_UT);
 5350              		.loc 1 3427 9 is_stmt 1 view .LVU1490
 5351              		.loc 1 3427 45 is_stmt 0 view .LVU1491
 5352 001e BDF90000 		ldrsh	r0, [sp]
 5353              	.LVL523:
 5354              		.loc 1 3427 45 view .LVU1492
 5355 0022 FFF7FEFF 		bl	__aeabi_i2d
 5356              	.LVL524:
 5357 0026 0022     		movs	r2, #0
 5358 0028 104B     		ldr	r3, .L413
 5359 002a FFF7FEFF 		bl	__aeabi_dmul
 5360              	.LVL525:
ARM GAS  /tmp/ccO72alg.s 			page 161


 5361              		.loc 1 3427 27 view .LVU1493
 5362 002e FFF7FEFF 		bl	__aeabi_d2f
 5363              	.LVL526:
 5364              		.loc 1 3427 25 view .LVU1494
 5365 0032 2060     		str	r0, [r4]	@ float
3428:Core/Src/bno055.c ****         mag_xyz_data->y = (float)(mag_xyz.y / BNO055_MAG_DIV_UT);
 5366              		.loc 1 3428 9 is_stmt 1 view .LVU1495
 5367              		.loc 1 3428 45 is_stmt 0 view .LVU1496
 5368 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5369 0038 FFF7FEFF 		bl	__aeabi_i2d
 5370              	.LVL527:
 5371 003c 0022     		movs	r2, #0
 5372 003e 0B4B     		ldr	r3, .L413
 5373 0040 FFF7FEFF 		bl	__aeabi_dmul
 5374              	.LVL528:
 5375              		.loc 1 3428 27 view .LVU1497
 5376 0044 FFF7FEFF 		bl	__aeabi_d2f
 5377              	.LVL529:
 5378              		.loc 1 3428 25 view .LVU1498
 5379 0048 6060     		str	r0, [r4, #4]	@ float
3429:Core/Src/bno055.c ****         mag_xyz_data->z = (float)(mag_xyz.z / BNO055_MAG_DIV_UT);
 5380              		.loc 1 3429 9 is_stmt 1 view .LVU1499
 5381              		.loc 1 3429 45 is_stmt 0 view .LVU1500
 5382 004a BDF90400 		ldrsh	r0, [sp, #4]
 5383 004e FFF7FEFF 		bl	__aeabi_i2d
 5384              	.LVL530:
 5385 0052 0022     		movs	r2, #0
 5386 0054 054B     		ldr	r3, .L413
 5387 0056 FFF7FEFF 		bl	__aeabi_dmul
 5388              	.LVL531:
 5389              		.loc 1 3429 27 view .LVU1501
 5390 005a FFF7FEFF 		bl	__aeabi_d2f
 5391              	.LVL532:
 5392              		.loc 1 3429 25 view .LVU1502
 5393 005e A060     		str	r0, [r4, #8]	@ float
 5394              	.L410:
 5395              	.LVL533:
3430:Core/Src/bno055.c ****     }
3431:Core/Src/bno055.c ****     else
3432:Core/Src/bno055.c ****     {
3433:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3434:Core/Src/bno055.c ****     }
3435:Core/Src/bno055.c **** 
3436:Core/Src/bno055.c ****     return com_rslt;
 5396              		.loc 1 3436 5 is_stmt 1 view .LVU1503
3437:Core/Src/bno055.c **** }
 5397              		.loc 1 3437 1 is_stmt 0 view .LVU1504
 5398 0060 2846     		mov	r0, r5
 5399 0062 03B0     		add	sp, sp, #12
 5400              	.LCFI171:
 5401              		.cfi_remember_state
 5402              		.cfi_def_cfa_offset 12
 5403              		@ sp needed
 5404 0064 30BD     		pop	{r4, r5, pc}
 5405              	.LVL534:
 5406              	.L411:
 5407              	.LCFI172:
ARM GAS  /tmp/ccO72alg.s 			page 162


 5408              		.cfi_restore_state
3433:Core/Src/bno055.c ****     }
 5409              		.loc 1 3433 18 view .LVU1505
 5410 0066 4FF0FF35 		mov	r5, #-1
 5411 006a F9E7     		b	.L410
 5412              	.L414:
 5413              		.align	2
 5414              	.L413:
 5415 006c 0000B03F 		.word	1068498944
 5416              		.cfi_endproc
 5417              	.LFE52:
 5419              		.global	__aeabi_ddiv
 5420              		.section	.text.bno055_convert_float_linear_accel_x_msq,"ax",%progbits
 5421              		.align	1
 5422              		.global	bno055_convert_float_linear_accel_x_msq
 5423              		.syntax unified
 5424              		.thumb
 5425              		.thumb_func
 5427              	bno055_convert_float_linear_accel_x_msq:
 5428              	.LVL535:
 5429              	.LFB69:
3438:Core/Src/bno055.c **** 
3439:Core/Src/bno055.c **** /*!
3440:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3441:Core/Src/bno055.c ****  *  to dps output as float
3442:Core/Src/bno055.c ****  *
3443:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3444:Core/Src/bno055.c ****  *
3445:Core/Src/bno055.c ****  *
3446:Core/Src/bno055.c ****  *
3447:Core/Src/bno055.c ****  *  @return results of bus communication function
3448:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3449:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3450:Core/Src/bno055.c ****  */
3451:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_dps(float *gyro_x_f)
3452:Core/Src/bno055.c **** {
3453:Core/Src/bno055.c ****     /* Variable used to return value of
3454:Core/Src/bno055.c ****      * communication routine*/
3455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3456:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3457:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3458:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3459:Core/Src/bno055.c **** 
3460:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3461:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3462:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3463:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3464:Core/Src/bno055.c ****     {
3465:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3466:Core/Src/bno055.c ****     }
3467:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3468:Core/Src/bno055.c ****     {
3469:Core/Src/bno055.c ****         /* Read gyro raw x data */
3470:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3471:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3472:Core/Src/bno055.c ****         {
3473:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
ARM GAS  /tmp/ccO72alg.s 			page 163


3474:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
3475:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3476:Core/Src/bno055.c ****         }
3477:Core/Src/bno055.c ****         else
3478:Core/Src/bno055.c ****         {
3479:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3480:Core/Src/bno055.c ****         }
3481:Core/Src/bno055.c ****     }
3482:Core/Src/bno055.c ****     else
3483:Core/Src/bno055.c ****     {
3484:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3485:Core/Src/bno055.c ****     }
3486:Core/Src/bno055.c **** 
3487:Core/Src/bno055.c ****     return com_rslt;
3488:Core/Src/bno055.c **** }
3489:Core/Src/bno055.c **** 
3490:Core/Src/bno055.c **** /*!
3491:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
3492:Core/Src/bno055.c ****  *  to rps output as float
3493:Core/Src/bno055.c ****  *
3494:Core/Src/bno055.c ****  *  @param gyro_x_f : The gyro x dps float data
3495:Core/Src/bno055.c ****  *
3496:Core/Src/bno055.c ****  *
3497:Core/Src/bno055.c ****  *
3498:Core/Src/bno055.c ****  *  @return results of bus communication function
3499:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3500:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3501:Core/Src/bno055.c ****  *
3502:Core/Src/bno055.c ****  */
3503:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_x_rps(float *gyro_x_f)
3504:Core/Src/bno055.c **** {
3505:Core/Src/bno055.c ****     /* Variable used to return value of
3506:Core/Src/bno055.c ****      * communication routine*/
3507:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3508:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
3509:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3510:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3511:Core/Src/bno055.c **** 
3512:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3513:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3514:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3515:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3516:Core/Src/bno055.c ****     {
3517:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3518:Core/Src/bno055.c ****     }
3519:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3520:Core/Src/bno055.c ****     {
3521:Core/Src/bno055.c ****         /* Read gyro raw x data */
3522:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
3523:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3524:Core/Src/bno055.c ****         {
3525:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3526:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
3527:Core/Src/bno055.c ****             *gyro_x_f = data_f;
3528:Core/Src/bno055.c ****         }
3529:Core/Src/bno055.c ****         else
3530:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 164


3531:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3532:Core/Src/bno055.c ****         }
3533:Core/Src/bno055.c ****     }
3534:Core/Src/bno055.c ****     else
3535:Core/Src/bno055.c ****     {
3536:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3537:Core/Src/bno055.c ****     }
3538:Core/Src/bno055.c **** 
3539:Core/Src/bno055.c ****     return com_rslt;
3540:Core/Src/bno055.c **** }
3541:Core/Src/bno055.c **** 
3542:Core/Src/bno055.c **** /*!
3543:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3544:Core/Src/bno055.c ****  *  to dps output as float
3545:Core/Src/bno055.c ****  *
3546:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3547:Core/Src/bno055.c ****  *
3548:Core/Src/bno055.c ****  *
3549:Core/Src/bno055.c ****  *
3550:Core/Src/bno055.c ****  *  @return results of bus communication function
3551:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3552:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3553:Core/Src/bno055.c ****  *
3554:Core/Src/bno055.c ****  */
3555:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_dps(float *gyro_y_f)
3556:Core/Src/bno055.c **** {
3557:Core/Src/bno055.c ****     /* Variable used to return value of
3558:Core/Src/bno055.c ****      * communication routine*/
3559:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3560:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3561:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3562:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3563:Core/Src/bno055.c **** 
3564:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3565:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3566:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3567:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3568:Core/Src/bno055.c ****     {
3569:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3570:Core/Src/bno055.c ****     }
3571:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3572:Core/Src/bno055.c ****     {
3573:Core/Src/bno055.c ****         /* Read gyro raw y data */
3574:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3575:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3576:Core/Src/bno055.c ****         {
3577:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3578:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
3579:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3580:Core/Src/bno055.c ****         }
3581:Core/Src/bno055.c ****         else
3582:Core/Src/bno055.c ****         {
3583:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3584:Core/Src/bno055.c ****         }
3585:Core/Src/bno055.c ****     }
3586:Core/Src/bno055.c ****     else
3587:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 165


3588:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3589:Core/Src/bno055.c ****     }
3590:Core/Src/bno055.c **** 
3591:Core/Src/bno055.c ****     return com_rslt;
3592:Core/Src/bno055.c **** }
3593:Core/Src/bno055.c **** 
3594:Core/Src/bno055.c **** /*!
3595:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
3596:Core/Src/bno055.c ****  *  to rps output as float
3597:Core/Src/bno055.c ****  *
3598:Core/Src/bno055.c ****  *  @param gyro_y_f : The gyro y dps float data
3599:Core/Src/bno055.c ****  *
3600:Core/Src/bno055.c ****  *
3601:Core/Src/bno055.c ****  *
3602:Core/Src/bno055.c ****  *  @return results of bus communication function
3603:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3604:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3605:Core/Src/bno055.c ****  *
3606:Core/Src/bno055.c ****  *
3607:Core/Src/bno055.c ****  */
3608:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_y_rps(float *gyro_y_f)
3609:Core/Src/bno055.c **** {
3610:Core/Src/bno055.c ****     /* Variable used to return value of
3611:Core/Src/bno055.c ****      * communication routine*/
3612:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3613:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
3614:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3615:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3616:Core/Src/bno055.c **** 
3617:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3618:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3619:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3620:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3621:Core/Src/bno055.c ****     {
3622:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3623:Core/Src/bno055.c ****     }
3624:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3625:Core/Src/bno055.c ****     {
3626:Core/Src/bno055.c ****         /* Read gyro raw y data */
3627:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
3628:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3629:Core/Src/bno055.c ****         {
3630:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3631:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
3632:Core/Src/bno055.c ****             *gyro_y_f = data_f;
3633:Core/Src/bno055.c ****         }
3634:Core/Src/bno055.c ****         else
3635:Core/Src/bno055.c ****         {
3636:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3637:Core/Src/bno055.c ****         }
3638:Core/Src/bno055.c ****     }
3639:Core/Src/bno055.c ****     else
3640:Core/Src/bno055.c ****     {
3641:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3642:Core/Src/bno055.c ****     }
3643:Core/Src/bno055.c **** 
3644:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccO72alg.s 			page 166


3645:Core/Src/bno055.c **** }
3646:Core/Src/bno055.c **** 
3647:Core/Src/bno055.c **** /*!
3648:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3649:Core/Src/bno055.c ****  *  to dps output as float
3650:Core/Src/bno055.c ****  *
3651:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z dps float data
3652:Core/Src/bno055.c ****  *
3653:Core/Src/bno055.c ****  *
3654:Core/Src/bno055.c ****  *
3655:Core/Src/bno055.c ****  *  @return results of bus communication function
3656:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3657:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3658:Core/Src/bno055.c ****  *
3659:Core/Src/bno055.c ****  */
3660:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_dps(float *gyro_z_f)
3661:Core/Src/bno055.c **** {
3662:Core/Src/bno055.c ****     /* Variable used to return value of
3663:Core/Src/bno055.c ****      * communication routine*/
3664:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3665:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3666:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3667:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3668:Core/Src/bno055.c **** 
3669:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3670:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3671:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3672:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3673:Core/Src/bno055.c ****     {
3674:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3675:Core/Src/bno055.c ****     }
3676:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3677:Core/Src/bno055.c ****     {
3678:Core/Src/bno055.c ****         /* Read gyro raw z data */
3679:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3680:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3681:Core/Src/bno055.c ****         {
3682:Core/Src/bno055.c ****             /* Convert the raw gyro x to dps*/
3683:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
3684:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3685:Core/Src/bno055.c ****         }
3686:Core/Src/bno055.c ****         else
3687:Core/Src/bno055.c ****         {
3688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3689:Core/Src/bno055.c ****         }
3690:Core/Src/bno055.c ****     }
3691:Core/Src/bno055.c ****     else
3692:Core/Src/bno055.c ****     {
3693:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3694:Core/Src/bno055.c ****     }
3695:Core/Src/bno055.c **** 
3696:Core/Src/bno055.c ****     return com_rslt;
3697:Core/Src/bno055.c **** }
3698:Core/Src/bno055.c **** 
3699:Core/Src/bno055.c **** /*!
3700:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
3701:Core/Src/bno055.c ****  *  to rps output as float
ARM GAS  /tmp/ccO72alg.s 			page 167


3702:Core/Src/bno055.c ****  *
3703:Core/Src/bno055.c ****  *  @param gyro_z_f : The gyro z rps float data
3704:Core/Src/bno055.c ****  *
3705:Core/Src/bno055.c ****  *
3706:Core/Src/bno055.c ****  *
3707:Core/Src/bno055.c ****  *  @return results of bus communication function
3708:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3709:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3710:Core/Src/bno055.c ****  *
3711:Core/Src/bno055.c ****  */
3712:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_z_rps(float *gyro_z_f)
3713:Core/Src/bno055.c **** {
3714:Core/Src/bno055.c ****     /* Variable used to return value of
3715:Core/Src/bno055.c ****      * communication routine*/
3716:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3717:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
3718:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3719:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3720:Core/Src/bno055.c **** 
3721:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3722:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3723:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3724:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3725:Core/Src/bno055.c ****     {
3726:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3727:Core/Src/bno055.c ****     }
3728:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3729:Core/Src/bno055.c ****     {
3730:Core/Src/bno055.c ****         /* Read gyro raw x data */
3731:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
3732:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3733:Core/Src/bno055.c ****         {
3734:Core/Src/bno055.c ****             /* Convert the raw gyro x to rps*/
3735:Core/Src/bno055.c ****             data_f = (float)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
3736:Core/Src/bno055.c ****             *gyro_z_f = data_f;
3737:Core/Src/bno055.c ****         }
3738:Core/Src/bno055.c ****         else
3739:Core/Src/bno055.c ****         {
3740:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3741:Core/Src/bno055.c ****         }
3742:Core/Src/bno055.c ****     }
3743:Core/Src/bno055.c ****     else
3744:Core/Src/bno055.c ****     {
3745:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3746:Core/Src/bno055.c ****     }
3747:Core/Src/bno055.c **** 
3748:Core/Src/bno055.c ****     return com_rslt;
3749:Core/Src/bno055.c **** }
3750:Core/Src/bno055.c **** 
3751:Core/Src/bno055.c **** /*!
3752:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3753:Core/Src/bno055.c ****  *  to dps output as float
3754:Core/Src/bno055.c ****  *
3755:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The dps data of gyro xyz
3756:Core/Src/bno055.c ****  *
3757:Core/Src/bno055.c ****  *  Parameter |    result
3758:Core/Src/bno055.c ****  *  --------- | -----------------
ARM GAS  /tmp/ccO72alg.s 			page 168


3759:Core/Src/bno055.c ****  *    x       | dps data of gyro
3760:Core/Src/bno055.c ****  *    y       | dps data of gyro
3761:Core/Src/bno055.c ****  *    z       | dps data of gyro
3762:Core/Src/bno055.c ****  *
3763:Core/Src/bno055.c ****  *
3764:Core/Src/bno055.c ****  *  @return results of bus communication function
3765:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3766:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3767:Core/Src/bno055.c ****  *
3768:Core/Src/bno055.c ****  *
3769:Core/Src/bno055.c ****  */
3770:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_dps(struct bno055_gyro_float_t *gyro_xyz_
3771:Core/Src/bno055.c **** {
3772:Core/Src/bno055.c ****     /* Variable used to return value of
3773:Core/Src/bno055.c ****      * communication routine*/
3774:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3775:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3776:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3777:Core/Src/bno055.c **** 
3778:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3779:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
3780:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3781:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
3782:Core/Src/bno055.c ****     {
3783:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
3784:Core/Src/bno055.c ****     }
3785:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3786:Core/Src/bno055.c ****     {
3787:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3788:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3789:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3790:Core/Src/bno055.c ****         {
3791:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
3792:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_DPS);
3793:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
3794:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
3795:Core/Src/bno055.c ****         }
3796:Core/Src/bno055.c ****         else
3797:Core/Src/bno055.c ****         {
3798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3799:Core/Src/bno055.c ****         }
3800:Core/Src/bno055.c ****     }
3801:Core/Src/bno055.c ****     else
3802:Core/Src/bno055.c ****     {
3803:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3804:Core/Src/bno055.c ****     }
3805:Core/Src/bno055.c **** 
3806:Core/Src/bno055.c ****     return com_rslt;
3807:Core/Src/bno055.c **** }
3808:Core/Src/bno055.c **** 
3809:Core/Src/bno055.c **** /*!
3810:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
3811:Core/Src/bno055.c ****  *  to rps output as float
3812:Core/Src/bno055.c ****  *
3813:Core/Src/bno055.c ****  *  @param gyro_xyz_data : The rps data of gyro xyz
3814:Core/Src/bno055.c ****  *
3815:Core/Src/bno055.c ****  *  Parameter |    result
ARM GAS  /tmp/ccO72alg.s 			page 169


3816:Core/Src/bno055.c ****  *  --------- | -----------------
3817:Core/Src/bno055.c ****  *    x       | rps data of gyro
3818:Core/Src/bno055.c ****  *    y       | rps data of gyro
3819:Core/Src/bno055.c ****  *    z       | rps data of gyro
3820:Core/Src/bno055.c ****  *
3821:Core/Src/bno055.c ****  *
3822:Core/Src/bno055.c ****  *  @return results of bus communication function
3823:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3824:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3825:Core/Src/bno055.c ****  *
3826:Core/Src/bno055.c ****  *
3827:Core/Src/bno055.c ****  */
3828:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gyro_xyz_rps(struct bno055_gyro_float_t *gyro_xyz_
3829:Core/Src/bno055.c **** {
3830:Core/Src/bno055.c ****     /* Variable used to return value of
3831:Core/Src/bno055.c ****      * communication routine*/
3832:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3833:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
3834:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
3835:Core/Src/bno055.c **** 
3836:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
3837:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
3838:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
3839:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
3840:Core/Src/bno055.c ****     {
3841:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
3842:Core/Src/bno055.c ****     }
3843:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3844:Core/Src/bno055.c ****     {
3845:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
3846:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&gyro_xyz);
3847:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3848:Core/Src/bno055.c ****         {
3849:Core/Src/bno055.c ****             /* Convert gyro raw xyz to rps*/
3850:Core/Src/bno055.c ****             gyro_xyz_data->x = (float)(gyro_xyz.x / BNO055_GYRO_DIV_RPS);
3851:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
3852:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
3853:Core/Src/bno055.c ****         }
3854:Core/Src/bno055.c ****         else
3855:Core/Src/bno055.c ****         {
3856:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3857:Core/Src/bno055.c ****         }
3858:Core/Src/bno055.c ****     }
3859:Core/Src/bno055.c ****     else
3860:Core/Src/bno055.c ****     {
3861:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3862:Core/Src/bno055.c ****     }
3863:Core/Src/bno055.c **** 
3864:Core/Src/bno055.c ****     return com_rslt;
3865:Core/Src/bno055.c **** }
3866:Core/Src/bno055.c **** 
3867:Core/Src/bno055.c **** /*!
3868:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3869:Core/Src/bno055.c ****  *  to degree output as float
3870:Core/Src/bno055.c ****  *
3871:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h degree
3872:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 170


3873:Core/Src/bno055.c ****  *  @return results of bus communication function
3874:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3875:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3876:Core/Src/bno055.c ****  *
3877:Core/Src/bno055.c ****  *
3878:Core/Src/bno055.c ****  */
3879:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_deg(float *euler_h_f)
3880:Core/Src/bno055.c **** {
3881:Core/Src/bno055.c ****     /* Variable used to return value of
3882:Core/Src/bno055.c ****      * communication routine*/
3883:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3884:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
3885:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3886:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3887:Core/Src/bno055.c **** 
3888:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3889:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
3890:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3891:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3892:Core/Src/bno055.c ****     {
3893:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3894:Core/Src/bno055.c ****     }
3895:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3896:Core/Src/bno055.c ****     {
3897:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3898:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3899:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3900:Core/Src/bno055.c ****         {
3901:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3902:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
3903:Core/Src/bno055.c ****             *euler_h_f = data_f;
3904:Core/Src/bno055.c ****         }
3905:Core/Src/bno055.c ****         else
3906:Core/Src/bno055.c ****         {
3907:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3908:Core/Src/bno055.c ****         }
3909:Core/Src/bno055.c ****     }
3910:Core/Src/bno055.c ****     else
3911:Core/Src/bno055.c ****     {
3912:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3913:Core/Src/bno055.c ****     }
3914:Core/Src/bno055.c **** 
3915:Core/Src/bno055.c ****     return com_rslt;
3916:Core/Src/bno055.c **** }
3917:Core/Src/bno055.c **** 
3918:Core/Src/bno055.c **** /*!
3919:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
3920:Core/Src/bno055.c ****  *  to radians output as float
3921:Core/Src/bno055.c ****  *
3922:Core/Src/bno055.c ****  *  @param euler_h_f : The float value of Euler h radians
3923:Core/Src/bno055.c ****  *
3924:Core/Src/bno055.c ****  *  @return results of bus communication function
3925:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3926:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3927:Core/Src/bno055.c ****  *
3928:Core/Src/bno055.c ****  *
3929:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccO72alg.s 			page 171


3930:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_h_rad(float *euler_h_f)
3931:Core/Src/bno055.c **** {
3932:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3933:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
3934:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3935:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3936:Core/Src/bno055.c **** 
3937:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3938:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
3939:Core/Src/bno055.c ****     {
3940:Core/Src/bno055.c ****         /* Read the current Euler unit and set the
3941:Core/Src/bno055.c ****          * unit as radians if the unit is in degree */
3942:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
3943:Core/Src/bno055.c ****     }
3944:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3945:Core/Src/bno055.c ****     {
3946:Core/Src/bno055.c ****         /* Read Euler raw h data*/
3947:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
3948:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3949:Core/Src/bno055.c ****         {
3950:Core/Src/bno055.c ****             /* Convert raw Euler h data to degree*/
3951:Core/Src/bno055.c ****             data_f = (float)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
3952:Core/Src/bno055.c ****             *euler_h_f = data_f;
3953:Core/Src/bno055.c ****         }
3954:Core/Src/bno055.c ****         else
3955:Core/Src/bno055.c ****         {
3956:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
3957:Core/Src/bno055.c ****         }
3958:Core/Src/bno055.c ****     }
3959:Core/Src/bno055.c ****     else
3960:Core/Src/bno055.c ****     {
3961:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
3962:Core/Src/bno055.c ****     }
3963:Core/Src/bno055.c **** 
3964:Core/Src/bno055.c ****     return com_rslt;
3965:Core/Src/bno055.c **** }
3966:Core/Src/bno055.c **** 
3967:Core/Src/bno055.c **** /*!
3968:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
3969:Core/Src/bno055.c ****  *  to degree output as float
3970:Core/Src/bno055.c ****  *
3971:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r degree
3972:Core/Src/bno055.c ****  *
3973:Core/Src/bno055.c ****  *  @return results of bus communication function
3974:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
3975:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
3976:Core/Src/bno055.c ****  *
3977:Core/Src/bno055.c ****  */
3978:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_deg(float *euler_r_f)
3979:Core/Src/bno055.c **** {
3980:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
3981:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
3982:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
3983:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
3984:Core/Src/bno055.c **** 
3985:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
3986:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
ARM GAS  /tmp/ccO72alg.s 			page 172


3987:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
3988:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
3989:Core/Src/bno055.c ****     {
3990:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
3991:Core/Src/bno055.c ****     }
3992:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
3993:Core/Src/bno055.c ****     {
3994:Core/Src/bno055.c ****         /* Read Euler raw r data*/
3995:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r);
3996:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
3997:Core/Src/bno055.c ****         {
3998:Core/Src/bno055.c ****             /* Convert raw Euler r data to degree*/
3999:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r / BNO055_EULER_DIV_DEG);
4000:Core/Src/bno055.c ****             *euler_r_f = data_f;
4001:Core/Src/bno055.c ****         }
4002:Core/Src/bno055.c ****         else
4003:Core/Src/bno055.c ****         {
4004:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4005:Core/Src/bno055.c ****         }
4006:Core/Src/bno055.c ****     }
4007:Core/Src/bno055.c ****     else
4008:Core/Src/bno055.c ****     {
4009:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4010:Core/Src/bno055.c ****     }
4011:Core/Src/bno055.c **** 
4012:Core/Src/bno055.c ****     return com_rslt;
4013:Core/Src/bno055.c **** }
4014:Core/Src/bno055.c **** 
4015:Core/Src/bno055.c **** /*!
4016:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
4017:Core/Src/bno055.c ****  *  to radians output as float
4018:Core/Src/bno055.c ****  *
4019:Core/Src/bno055.c ****  *  @param euler_r_f : The float value of Euler r radians
4020:Core/Src/bno055.c ****  *
4021:Core/Src/bno055.c ****  *  @return results of bus communication function
4022:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4023:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4024:Core/Src/bno055.c ****  *
4025:Core/Src/bno055.c ****  */
4026:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_r_rad(float *euler_r_f)
4027:Core/Src/bno055.c **** {
4028:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4029:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
4030:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4031:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4032:Core/Src/bno055.c **** 
4033:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4034:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4035:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4036:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4037:Core/Src/bno055.c ****     {
4038:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4039:Core/Src/bno055.c ****     }
4040:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4041:Core/Src/bno055.c ****     {
4042:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4043:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_f);
ARM GAS  /tmp/ccO72alg.s 			page 173


4044:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4045:Core/Src/bno055.c ****         {
4046:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4047:Core/Src/bno055.c ****             data_f = (float)(reg_euler_r_f / BNO055_EULER_DIV_RAD);
4048:Core/Src/bno055.c ****             *euler_r_f = data_f;
4049:Core/Src/bno055.c ****         }
4050:Core/Src/bno055.c ****         else
4051:Core/Src/bno055.c ****         {
4052:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4053:Core/Src/bno055.c ****         }
4054:Core/Src/bno055.c ****     }
4055:Core/Src/bno055.c ****     else
4056:Core/Src/bno055.c ****     {
4057:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4058:Core/Src/bno055.c ****     }
4059:Core/Src/bno055.c **** 
4060:Core/Src/bno055.c ****     return com_rslt;
4061:Core/Src/bno055.c **** }
4062:Core/Src/bno055.c **** 
4063:Core/Src/bno055.c **** /*!
4064:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4065:Core/Src/bno055.c ****  *  to degree output as float
4066:Core/Src/bno055.c ****  *
4067:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p degree
4068:Core/Src/bno055.c ****  *
4069:Core/Src/bno055.c ****  *  @return results of bus communication function
4070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4072:Core/Src/bno055.c ****  *
4073:Core/Src/bno055.c ****  */
4074:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_deg(float *euler_p_f)
4075:Core/Src/bno055.c **** {
4076:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4077:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4078:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4079:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4080:Core/Src/bno055.c **** 
4081:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4082:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4083:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4084:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4085:Core/Src/bno055.c ****     {
4086:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4087:Core/Src/bno055.c ****     }
4088:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4089:Core/Src/bno055.c ****     {
4090:Core/Src/bno055.c ****         /* Read Euler raw p data*/
4091:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4092:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4093:Core/Src/bno055.c ****         {
4094:Core/Src/bno055.c ****             /* Convert raw Euler p data to degree*/
4095:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_DEG);
4096:Core/Src/bno055.c ****             *euler_p_f = data_f;
4097:Core/Src/bno055.c ****         }
4098:Core/Src/bno055.c ****         else
4099:Core/Src/bno055.c ****         {
4100:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 174


4101:Core/Src/bno055.c ****         }
4102:Core/Src/bno055.c ****     }
4103:Core/Src/bno055.c ****     else
4104:Core/Src/bno055.c ****     {
4105:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4106:Core/Src/bno055.c ****     }
4107:Core/Src/bno055.c **** 
4108:Core/Src/bno055.c ****     return com_rslt;
4109:Core/Src/bno055.c **** }
4110:Core/Src/bno055.c **** 
4111:Core/Src/bno055.c **** /*!
4112:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
4113:Core/Src/bno055.c ****  *  to radians output as float
4114:Core/Src/bno055.c ****  *
4115:Core/Src/bno055.c ****  *  @param euler_p_f : The float value of Euler p radians
4116:Core/Src/bno055.c ****  *
4117:Core/Src/bno055.c ****  *  @return results of bus communication function
4118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4120:Core/Src/bno055.c ****  *
4121:Core/Src/bno055.c ****  *
4122:Core/Src/bno055.c ****  */
4123:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_p_rad(float *euler_p_f)
4124:Core/Src/bno055.c **** {
4125:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4126:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
4127:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4128:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4129:Core/Src/bno055.c **** 
4130:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4131:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4132:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4133:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4134:Core/Src/bno055.c ****     {
4135:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4136:Core/Src/bno055.c ****     }
4137:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4138:Core/Src/bno055.c ****     {
4139:Core/Src/bno055.c ****         /* Read Euler raw r data*/
4140:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_f);
4141:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4142:Core/Src/bno055.c ****         {
4143:Core/Src/bno055.c ****             /* Convert raw Euler r data to radians*/
4144:Core/Src/bno055.c ****             data_f = (float)(reg_euler_p_f / BNO055_EULER_DIV_RAD);
4145:Core/Src/bno055.c ****             *euler_p_f = data_f;
4146:Core/Src/bno055.c ****         }
4147:Core/Src/bno055.c ****         else
4148:Core/Src/bno055.c ****         {
4149:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4150:Core/Src/bno055.c ****         }
4151:Core/Src/bno055.c ****     }
4152:Core/Src/bno055.c ****     else
4153:Core/Src/bno055.c ****     {
4154:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4155:Core/Src/bno055.c ****     }
4156:Core/Src/bno055.c **** 
4157:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccO72alg.s 			page 175


4158:Core/Src/bno055.c **** }
4159:Core/Src/bno055.c **** 
4160:Core/Src/bno055.c **** /*!
4161:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hrp raw data
4162:Core/Src/bno055.c ****  *  to degree output as float
4163:Core/Src/bno055.c ****  *
4164:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hrp
4165:Core/Src/bno055.c ****  *
4166:Core/Src/bno055.c ****  *  Parameter |    result
4167:Core/Src/bno055.c ****  *  --------- | -----------------
4168:Core/Src/bno055.c ****  *    h       | degree data of Euler
4169:Core/Src/bno055.c ****  *    r       | degree data of Euler
4170:Core/Src/bno055.c ****  *    p       | degree data of Euler
4171:Core/Src/bno055.c ****  *
4172:Core/Src/bno055.c ****  *
4173:Core/Src/bno055.c ****  *  @return results of bus communication function
4174:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4175:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4176:Core/Src/bno055.c ****  *
4177:Core/Src/bno055.c ****  */
4178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_deg(struct bno055_euler_float_t *euler_h
4179:Core/Src/bno055.c **** {
4180:Core/Src/bno055.c ****     /* Variable used to return value of
4181:Core/Src/bno055.c ****      * communication routine*/
4182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4183:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4184:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4185:Core/Src/bno055.c **** 
4186:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4187:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
4188:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4189:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
4190:Core/Src/bno055.c ****     {
4191:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
4192:Core/Src/bno055.c ****     }
4193:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4194:Core/Src/bno055.c ****     {
4195:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4196:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4197:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4198:Core/Src/bno055.c ****         {
4199:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
4200:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_DEG);
4201:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
4202:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
4203:Core/Src/bno055.c ****         }
4204:Core/Src/bno055.c ****         else
4205:Core/Src/bno055.c ****         {
4206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4207:Core/Src/bno055.c ****         }
4208:Core/Src/bno055.c ****     }
4209:Core/Src/bno055.c ****     else
4210:Core/Src/bno055.c ****     {
4211:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4212:Core/Src/bno055.c ****     }
4213:Core/Src/bno055.c **** 
4214:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccO72alg.s 			page 176


4215:Core/Src/bno055.c **** }
4216:Core/Src/bno055.c **** 
4217:Core/Src/bno055.c **** /*!
4218:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler xyz raw data
4219:Core/Src/bno055.c ****  *  to radians output as float
4220:Core/Src/bno055.c ****  *
4221:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hrp
4222:Core/Src/bno055.c ****  *
4223:Core/Src/bno055.c ****  *  Parameter |    result
4224:Core/Src/bno055.c ****  *  --------- | -----------------
4225:Core/Src/bno055.c ****  *    h       | radians data of Euler
4226:Core/Src/bno055.c ****  *    r       | radians data of Euler
4227:Core/Src/bno055.c ****  *    p       | radians data of Euler
4228:Core/Src/bno055.c ****  *
4229:Core/Src/bno055.c ****  *
4230:Core/Src/bno055.c ****  *  @return results of bus communication function
4231:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4232:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4233:Core/Src/bno055.c ****  *
4234:Core/Src/bno055.c ****  */
4235:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_euler_hpr_rad(struct bno055_euler_float_t *euler_h
4236:Core/Src/bno055.c **** {
4237:Core/Src/bno055.c ****     /* Variable used to return value of
4238:Core/Src/bno055.c ****      * communication routine*/
4239:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4240:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
4241:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
4242:Core/Src/bno055.c **** 
4243:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
4244:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
4245:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
4246:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
4247:Core/Src/bno055.c ****     {
4248:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
4249:Core/Src/bno055.c ****     }
4250:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4251:Core/Src/bno055.c ****     {
4252:Core/Src/bno055.c ****         /* Read Euler raw hrp data*/
4253:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
4254:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4255:Core/Src/bno055.c ****         {
4256:Core/Src/bno055.c ****             /* Convert raw hrp to radians */
4257:Core/Src/bno055.c ****             euler_hpr->h = (float)(reg_euler.h / BNO055_EULER_DIV_RAD);
4258:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
4259:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
4260:Core/Src/bno055.c ****         }
4261:Core/Src/bno055.c ****         else
4262:Core/Src/bno055.c ****         {
4263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4264:Core/Src/bno055.c ****         }
4265:Core/Src/bno055.c ****     }
4266:Core/Src/bno055.c ****     else
4267:Core/Src/bno055.c ****     {
4268:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4269:Core/Src/bno055.c ****     }
4270:Core/Src/bno055.c **** 
4271:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccO72alg.s 			page 177


4272:Core/Src/bno055.c **** }
4273:Core/Src/bno055.c **** 
4274:Core/Src/bno055.c **** /*!
4275:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4276:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as float
4277:Core/Src/bno055.c ****  *
4278:Core/Src/bno055.c ****  *  @param linear_accel_x_f : The float value of linear accel x meterpersecseq
4279:Core/Src/bno055.c ****  *
4280:Core/Src/bno055.c ****  *  @return results of bus communication function
4281:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4282:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4283:Core/Src/bno055.c ****  */
4284:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_x_msq(float *linear_accel_x_f)
4285:Core/Src/bno055.c **** {
 5430              		.loc 1 4285 1 is_stmt 1 view -0
 5431              		.cfi_startproc
 5432              		@ args = 0, pretend = 0, frame = 8
 5433              		@ frame_needed = 0, uses_anonymous_args = 0
 5434              		.loc 1 4285 1 is_stmt 0 view .LVU1507
 5435 0000 30B5     		push	{r4, r5, lr}
 5436              	.LCFI173:
 5437              		.cfi_def_cfa_offset 12
 5438              		.cfi_offset 4, -12
 5439              		.cfi_offset 5, -8
 5440              		.cfi_offset 14, -4
 5441 0002 83B0     		sub	sp, sp, #12
 5442              	.LCFI174:
 5443              		.cfi_def_cfa_offset 24
 5444 0004 0446     		mov	r4, r0
4286:Core/Src/bno055.c ****     /* Variable used to return value of
4287:Core/Src/bno055.c ****      * communication routine*/
4288:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5445              		.loc 1 4288 5 is_stmt 1 view .LVU1508
 5446              	.LVL536:
4289:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 5447              		.loc 1 4289 5 view .LVU1509
 5448              		.loc 1 4289 9 is_stmt 0 view .LVU1510
 5449 0006 0023     		movs	r3, #0
 5450 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4290:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5451              		.loc 1 4290 5 is_stmt 1 view .LVU1511
 5452              	.LVL537:
4291:Core/Src/bno055.c **** 
4292:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4293:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 5453              		.loc 1 4293 5 view .LVU1512
 5454              		.loc 1 4293 16 is_stmt 0 view .LVU1513
 5455 000c 0DF10600 		add	r0, sp, #6
 5456              	.LVL538:
 5457              		.loc 1 4293 16 view .LVU1514
 5458 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 5459              	.LVL539:
4294:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5460              		.loc 1 4294 5 is_stmt 1 view .LVU1515
 5461              		.loc 1 4294 8 is_stmt 0 view .LVU1516
 5462 0014 70B9     		cbnz	r0, .L417
 5463 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccO72alg.s 			page 178


4295:Core/Src/bno055.c ****     {
4296:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4297:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5464              		.loc 1 4297 9 is_stmt 1 view .LVU1517
 5465              		.loc 1 4297 49 is_stmt 0 view .LVU1518
 5466 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5467              	.LVL540:
 5468              		.loc 1 4297 49 view .LVU1519
 5469 001c FFF7FEFF 		bl	__aeabi_i2d
 5470              	.LVL541:
 5471 0020 0022     		movs	r2, #0
 5472 0022 064B     		ldr	r3, .L419
 5473 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5474              	.LVL542:
 5475              		.loc 1 4297 16 view .LVU1520
 5476 0028 FFF7FEFF 		bl	__aeabi_d2f
 5477              	.LVL543:
4298:Core/Src/bno055.c ****         *linear_accel_x_f = data_f;
 5478              		.loc 1 4298 9 is_stmt 1 view .LVU1521
 5479              		.loc 1 4298 27 is_stmt 0 view .LVU1522
 5480 002c 2060     		str	r0, [r4]	@ float
 5481              	.LVL544:
 5482              	.L416:
4299:Core/Src/bno055.c ****     }
4300:Core/Src/bno055.c ****     else
4301:Core/Src/bno055.c ****     {
4302:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4303:Core/Src/bno055.c ****     }
4304:Core/Src/bno055.c **** 
4305:Core/Src/bno055.c ****     return com_rslt;
 5483              		.loc 1 4305 5 is_stmt 1 view .LVU1523
4306:Core/Src/bno055.c **** }
 5484              		.loc 1 4306 1 is_stmt 0 view .LVU1524
 5485 002e 2846     		mov	r0, r5
 5486 0030 03B0     		add	sp, sp, #12
 5487              	.LCFI175:
 5488              		.cfi_remember_state
 5489              		.cfi_def_cfa_offset 12
 5490              		@ sp needed
 5491 0032 30BD     		pop	{r4, r5, pc}
 5492              	.LVL545:
 5493              	.L417:
 5494              	.LCFI176:
 5495              		.cfi_restore_state
4302:Core/Src/bno055.c ****     }
 5496              		.loc 1 4302 18 view .LVU1525
 5497 0034 4FF0FF35 		mov	r5, #-1
 5498 0038 F9E7     		b	.L416
 5499              	.L420:
 5500 003a 00BF     		.align	2
 5501              	.L419:
 5502 003c 00005940 		.word	1079574528
 5503              		.cfi_endproc
 5504              	.LFE69:
 5506              		.section	.text.bno055_convert_float_linear_accel_y_msq,"ax",%progbits
 5507              		.align	1
 5508              		.global	bno055_convert_float_linear_accel_y_msq
ARM GAS  /tmp/ccO72alg.s 			page 179


 5509              		.syntax unified
 5510              		.thumb
 5511              		.thumb_func
 5513              	bno055_convert_float_linear_accel_y_msq:
 5514              	.LVL546:
 5515              	.LFB70:
4307:Core/Src/bno055.c **** 
4308:Core/Src/bno055.c **** /*!
4309:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4310:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as float
4311:Core/Src/bno055.c ****  *
4312:Core/Src/bno055.c ****  *  @param linear_accel_y_f : The float value of linear accel y meterpersecseq
4313:Core/Src/bno055.c ****  *
4314:Core/Src/bno055.c ****  *  @return results of bus communication function
4315:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4316:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4317:Core/Src/bno055.c ****  */
4318:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_y_msq(float *linear_accel_y_f)
4319:Core/Src/bno055.c **** {
 5516              		.loc 1 4319 1 is_stmt 1 view -0
 5517              		.cfi_startproc
 5518              		@ args = 0, pretend = 0, frame = 8
 5519              		@ frame_needed = 0, uses_anonymous_args = 0
 5520              		.loc 1 4319 1 is_stmt 0 view .LVU1527
 5521 0000 30B5     		push	{r4, r5, lr}
 5522              	.LCFI177:
 5523              		.cfi_def_cfa_offset 12
 5524              		.cfi_offset 4, -12
 5525              		.cfi_offset 5, -8
 5526              		.cfi_offset 14, -4
 5527 0002 83B0     		sub	sp, sp, #12
 5528              	.LCFI178:
 5529              		.cfi_def_cfa_offset 24
 5530 0004 0446     		mov	r4, r0
4320:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5531              		.loc 1 4320 5 is_stmt 1 view .LVU1528
 5532              	.LVL547:
4321:Core/Src/bno055.c ****     s16 reg_linear_accel_y = BNO055_INIT_VALUE;
 5533              		.loc 1 4321 5 view .LVU1529
 5534              		.loc 1 4321 9 is_stmt 0 view .LVU1530
 5535 0006 0023     		movs	r3, #0
 5536 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4322:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5537              		.loc 1 4322 5 is_stmt 1 view .LVU1531
 5538              	.LVL548:
4323:Core/Src/bno055.c **** 
4324:Core/Src/bno055.c ****     /* Read the raw y of linear accel */
4325:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y);
 5539              		.loc 1 4325 5 view .LVU1532
 5540              		.loc 1 4325 16 is_stmt 0 view .LVU1533
 5541 000c 0DF10600 		add	r0, sp, #6
 5542              	.LVL549:
 5543              		.loc 1 4325 16 view .LVU1534
 5544 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 5545              	.LVL550:
4326:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5546              		.loc 1 4326 5 is_stmt 1 view .LVU1535
ARM GAS  /tmp/ccO72alg.s 			page 180


 5547              		.loc 1 4326 8 is_stmt 0 view .LVU1536
 5548 0014 70B9     		cbnz	r0, .L423
 5549 0016 0546     		mov	r5, r0
4327:Core/Src/bno055.c ****     {
4328:Core/Src/bno055.c ****         /* Convert the raw linear accel x to m/s2*/
4329:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5550              		.loc 1 4329 9 is_stmt 1 view .LVU1537
 5551              		.loc 1 4329 45 is_stmt 0 view .LVU1538
 5552 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5553              	.LVL551:
 5554              		.loc 1 4329 45 view .LVU1539
 5555 001c FFF7FEFF 		bl	__aeabi_i2d
 5556              	.LVL552:
 5557 0020 0022     		movs	r2, #0
 5558 0022 064B     		ldr	r3, .L425
 5559 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5560              	.LVL553:
 5561              		.loc 1 4329 16 view .LVU1540
 5562 0028 FFF7FEFF 		bl	__aeabi_d2f
 5563              	.LVL554:
4330:Core/Src/bno055.c ****         *linear_accel_y_f = data_f;
 5564              		.loc 1 4330 9 is_stmt 1 view .LVU1541
 5565              		.loc 1 4330 27 is_stmt 0 view .LVU1542
 5566 002c 2060     		str	r0, [r4]	@ float
 5567              	.LVL555:
 5568              	.L422:
4331:Core/Src/bno055.c ****     }
4332:Core/Src/bno055.c ****     else
4333:Core/Src/bno055.c ****     {
4334:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4335:Core/Src/bno055.c ****     }
4336:Core/Src/bno055.c **** 
4337:Core/Src/bno055.c ****     return com_rslt;
 5569              		.loc 1 4337 5 is_stmt 1 view .LVU1543
4338:Core/Src/bno055.c **** }
 5570              		.loc 1 4338 1 is_stmt 0 view .LVU1544
 5571 002e 2846     		mov	r0, r5
 5572 0030 03B0     		add	sp, sp, #12
 5573              	.LCFI179:
 5574              		.cfi_remember_state
 5575              		.cfi_def_cfa_offset 12
 5576              		@ sp needed
 5577 0032 30BD     		pop	{r4, r5, pc}
 5578              	.LVL556:
 5579              	.L423:
 5580              	.LCFI180:
 5581              		.cfi_restore_state
4334:Core/Src/bno055.c ****     }
 5582              		.loc 1 4334 18 view .LVU1545
 5583 0034 4FF0FF35 		mov	r5, #-1
 5584 0038 F9E7     		b	.L422
 5585              	.L426:
 5586 003a 00BF     		.align	2
 5587              	.L425:
 5588 003c 00005940 		.word	1079574528
 5589              		.cfi_endproc
 5590              	.LFE70:
ARM GAS  /tmp/ccO72alg.s 			page 181


 5592              		.section	.text.bno055_convert_float_linear_accel_z_msq,"ax",%progbits
 5593              		.align	1
 5594              		.global	bno055_convert_float_linear_accel_z_msq
 5595              		.syntax unified
 5596              		.thumb
 5597              		.thumb_func
 5599              	bno055_convert_float_linear_accel_z_msq:
 5600              	.LVL557:
 5601              	.LFB71:
4339:Core/Src/bno055.c **** 
4340:Core/Src/bno055.c **** /*!
4341:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
4342:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as float
4343:Core/Src/bno055.c ****  *
4344:Core/Src/bno055.c ****  *  @param linear_accel_z_f : The float value of linear accel z meterpersecseq
4345:Core/Src/bno055.c ****  *
4346:Core/Src/bno055.c ****  *  @return results of bus communication function
4347:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4348:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4349:Core/Src/bno055.c ****  *
4350:Core/Src/bno055.c ****  */
4351:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_z_msq(float *linear_accel_z_f)
4352:Core/Src/bno055.c **** {
 5602              		.loc 1 4352 1 is_stmt 1 view -0
 5603              		.cfi_startproc
 5604              		@ args = 0, pretend = 0, frame = 8
 5605              		@ frame_needed = 0, uses_anonymous_args = 0
 5606              		.loc 1 4352 1 is_stmt 0 view .LVU1547
 5607 0000 30B5     		push	{r4, r5, lr}
 5608              	.LCFI181:
 5609              		.cfi_def_cfa_offset 12
 5610              		.cfi_offset 4, -12
 5611              		.cfi_offset 5, -8
 5612              		.cfi_offset 14, -4
 5613 0002 83B0     		sub	sp, sp, #12
 5614              	.LCFI182:
 5615              		.cfi_def_cfa_offset 24
 5616 0004 0446     		mov	r4, r0
4353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5617              		.loc 1 4353 5 is_stmt 1 view .LVU1548
 5618              	.LVL558:
4354:Core/Src/bno055.c ****     s16 reg_linear_accel_z = BNO055_INIT_VALUE;
 5619              		.loc 1 4354 5 view .LVU1549
 5620              		.loc 1 4354 9 is_stmt 0 view .LVU1550
 5621 0006 0023     		movs	r3, #0
 5622 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4355:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5623              		.loc 1 4355 5 is_stmt 1 view .LVU1551
 5624              	.LVL559:
4356:Core/Src/bno055.c **** 
4357:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4358:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z);
 5625              		.loc 1 4358 5 view .LVU1552
 5626              		.loc 1 4358 16 is_stmt 0 view .LVU1553
 5627 000c 0DF10600 		add	r0, sp, #6
 5628              	.LVL560:
 5629              		.loc 1 4358 16 view .LVU1554
ARM GAS  /tmp/ccO72alg.s 			page 182


 5630 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 5631              	.LVL561:
4359:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5632              		.loc 1 4359 5 is_stmt 1 view .LVU1555
 5633              		.loc 1 4359 8 is_stmt 0 view .LVU1556
 5634 0014 70B9     		cbnz	r0, .L429
 5635 0016 0546     		mov	r5, r0
4360:Core/Src/bno055.c ****     {
4361:Core/Src/bno055.c ****         /* Convert the raw linear accel z to m/s2*/
4362:Core/Src/bno055.c ****         data_f = (float)(reg_linear_accel_z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5636              		.loc 1 4362 9 is_stmt 1 view .LVU1557
 5637              		.loc 1 4362 45 is_stmt 0 view .LVU1558
 5638 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5639              	.LVL562:
 5640              		.loc 1 4362 45 view .LVU1559
 5641 001c FFF7FEFF 		bl	__aeabi_i2d
 5642              	.LVL563:
 5643 0020 0022     		movs	r2, #0
 5644 0022 064B     		ldr	r3, .L431
 5645 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5646              	.LVL564:
 5647              		.loc 1 4362 16 view .LVU1560
 5648 0028 FFF7FEFF 		bl	__aeabi_d2f
 5649              	.LVL565:
4363:Core/Src/bno055.c ****         *linear_accel_z_f = data_f;
 5650              		.loc 1 4363 9 is_stmt 1 view .LVU1561
 5651              		.loc 1 4363 27 is_stmt 0 view .LVU1562
 5652 002c 2060     		str	r0, [r4]	@ float
 5653              	.LVL566:
 5654              	.L428:
4364:Core/Src/bno055.c ****     }
4365:Core/Src/bno055.c ****     else
4366:Core/Src/bno055.c ****     {
4367:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4368:Core/Src/bno055.c ****     }
4369:Core/Src/bno055.c **** 
4370:Core/Src/bno055.c ****     return com_rslt;
 5655              		.loc 1 4370 5 is_stmt 1 view .LVU1563
4371:Core/Src/bno055.c **** }
 5656              		.loc 1 4371 1 is_stmt 0 view .LVU1564
 5657 002e 2846     		mov	r0, r5
 5658 0030 03B0     		add	sp, sp, #12
 5659              	.LCFI183:
 5660              		.cfi_remember_state
 5661              		.cfi_def_cfa_offset 12
 5662              		@ sp needed
 5663 0032 30BD     		pop	{r4, r5, pc}
 5664              	.LVL567:
 5665              	.L429:
 5666              	.LCFI184:
 5667              		.cfi_restore_state
4367:Core/Src/bno055.c ****     }
 5668              		.loc 1 4367 18 view .LVU1565
 5669 0034 4FF0FF35 		mov	r5, #-1
 5670 0038 F9E7     		b	.L428
 5671              	.L432:
 5672 003a 00BF     		.align	2
ARM GAS  /tmp/ccO72alg.s 			page 183


 5673              	.L431:
 5674 003c 00005940 		.word	1079574528
 5675              		.cfi_endproc
 5676              	.LFE71:
 5678              		.section	.text.bno055_convert_float_linear_accel_xyz_msq,"ax",%progbits
 5679              		.align	1
 5680              		.global	bno055_convert_float_linear_accel_xyz_msq
 5681              		.syntax unified
 5682              		.thumb
 5683              		.thumb_func
 5685              	bno055_convert_float_linear_accel_xyz_msq:
 5686              	.LVL568:
 5687              	.LFB72:
4372:Core/Src/bno055.c **** 
4373:Core/Src/bno055.c **** /*!
4374:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
4375:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4376:Core/Src/bno055.c ****  *
4377:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
4378:Core/Src/bno055.c ****  *
4379:Core/Src/bno055.c ****  *  Parameter |    result
4380:Core/Src/bno055.c ****  *  --------- | -----------------
4381:Core/Src/bno055.c ****  *    x       | meterpersecseq data of linear accel
4382:Core/Src/bno055.c ****  *    y       | meterpersecseq data of linear accel
4383:Core/Src/bno055.c ****  *    z       | meterpersecseq data of linear accel
4384:Core/Src/bno055.c ****  *
4385:Core/Src/bno055.c ****  *
4386:Core/Src/bno055.c ****  *  @return results of bus communication function
4387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4389:Core/Src/bno055.c ****  *
4390:Core/Src/bno055.c ****  *
4391:Core/Src/bno055.c ****  */
4392:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_linear_accel_xyz_msq(
4393:Core/Src/bno055.c ****     struct bno055_linear_accel_float_t *linear_accel_xyz)
4394:Core/Src/bno055.c **** {
 5688              		.loc 1 4394 1 is_stmt 1 view -0
 5689              		.cfi_startproc
 5690              		@ args = 0, pretend = 0, frame = 8
 5691              		@ frame_needed = 0, uses_anonymous_args = 0
 5692              		.loc 1 4394 1 is_stmt 0 view .LVU1567
 5693 0000 30B5     		push	{r4, r5, lr}
 5694              	.LCFI185:
 5695              		.cfi_def_cfa_offset 12
 5696              		.cfi_offset 4, -12
 5697              		.cfi_offset 5, -8
 5698              		.cfi_offset 14, -4
 5699 0002 83B0     		sub	sp, sp, #12
 5700              	.LCFI186:
 5701              		.cfi_def_cfa_offset 24
 5702 0004 0446     		mov	r4, r0
4395:Core/Src/bno055.c ****     /* Variable used to return value of
4396:Core/Src/bno055.c ****      * communication routine*/
4397:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5703              		.loc 1 4397 5 is_stmt 1 view .LVU1568
 5704              	.LVL569:
4398:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_
ARM GAS  /tmp/ccO72alg.s 			page 184


 5705              		.loc 1 4398 5 view .LVU1569
 5706              		.loc 1 4398 34 is_stmt 0 view .LVU1570
 5707 0006 0023     		movs	r3, #0
 5708 0008 ADF80030 		strh	r3, [sp]	@ movhi
 5709 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 5710 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4399:Core/Src/bno055.c **** 
4400:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
4401:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel);
 5711              		.loc 1 4401 5 is_stmt 1 view .LVU1571
 5712              		.loc 1 4401 16 is_stmt 0 view .LVU1572
 5713 0014 6846     		mov	r0, sp
 5714              	.LVL570:
 5715              		.loc 1 4401 16 view .LVU1573
 5716 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 5717              	.LVL571:
4402:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5718              		.loc 1 4402 5 is_stmt 1 view .LVU1574
 5719              		.loc 1 4402 8 is_stmt 0 view .LVU1575
 5720 001a 20BB     		cbnz	r0, .L435
 5721 001c 0546     		mov	r5, r0
4403:Core/Src/bno055.c ****     {
4404:Core/Src/bno055.c ****         linear_accel_xyz->x = (float)(reg_linear_accel.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5722              		.loc 1 4404 9 is_stmt 1 view .LVU1576
 5723              		.loc 1 4404 58 is_stmt 0 view .LVU1577
 5724 001e BDF90000 		ldrsh	r0, [sp]
 5725              	.LVL572:
 5726              		.loc 1 4404 58 view .LVU1578
 5727 0022 FFF7FEFF 		bl	__aeabi_i2d
 5728              	.LVL573:
 5729 0026 0022     		movs	r2, #0
 5730 0028 104B     		ldr	r3, .L437
 5731 002a FFF7FEFF 		bl	__aeabi_ddiv
 5732              	.LVL574:
 5733              		.loc 1 4404 31 view .LVU1579
 5734 002e FFF7FEFF 		bl	__aeabi_d2f
 5735              	.LVL575:
 5736              		.loc 1 4404 29 view .LVU1580
 5737 0032 2060     		str	r0, [r4]	@ float
4405:Core/Src/bno055.c ****         linear_accel_xyz->y = (float)(reg_linear_accel.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5738              		.loc 1 4405 9 is_stmt 1 view .LVU1581
 5739              		.loc 1 4405 58 is_stmt 0 view .LVU1582
 5740 0034 BDF90200 		ldrsh	r0, [sp, #2]
 5741 0038 FFF7FEFF 		bl	__aeabi_i2d
 5742              	.LVL576:
 5743 003c 0022     		movs	r2, #0
 5744 003e 0B4B     		ldr	r3, .L437
 5745 0040 FFF7FEFF 		bl	__aeabi_ddiv
 5746              	.LVL577:
 5747              		.loc 1 4405 31 view .LVU1583
 5748 0044 FFF7FEFF 		bl	__aeabi_d2f
 5749              	.LVL578:
 5750              		.loc 1 4405 29 view .LVU1584
 5751 0048 6060     		str	r0, [r4, #4]	@ float
4406:Core/Src/bno055.c ****         linear_accel_xyz->z = (float)(reg_linear_accel.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 5752              		.loc 1 4406 9 is_stmt 1 view .LVU1585
 5753              		.loc 1 4406 58 is_stmt 0 view .LVU1586
ARM GAS  /tmp/ccO72alg.s 			page 185


 5754 004a BDF90400 		ldrsh	r0, [sp, #4]
 5755 004e FFF7FEFF 		bl	__aeabi_i2d
 5756              	.LVL579:
 5757 0052 0022     		movs	r2, #0
 5758 0054 054B     		ldr	r3, .L437
 5759 0056 FFF7FEFF 		bl	__aeabi_ddiv
 5760              	.LVL580:
 5761              		.loc 1 4406 31 view .LVU1587
 5762 005a FFF7FEFF 		bl	__aeabi_d2f
 5763              	.LVL581:
 5764              		.loc 1 4406 29 view .LVU1588
 5765 005e A060     		str	r0, [r4, #8]	@ float
 5766              	.L434:
 5767              	.LVL582:
4407:Core/Src/bno055.c ****     }
4408:Core/Src/bno055.c ****     else
4409:Core/Src/bno055.c ****     {
4410:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4411:Core/Src/bno055.c ****     }
4412:Core/Src/bno055.c **** 
4413:Core/Src/bno055.c ****     return com_rslt;
 5768              		.loc 1 4413 5 is_stmt 1 view .LVU1589
4414:Core/Src/bno055.c **** }
 5769              		.loc 1 4414 1 is_stmt 0 view .LVU1590
 5770 0060 2846     		mov	r0, r5
 5771 0062 03B0     		add	sp, sp, #12
 5772              	.LCFI187:
 5773              		.cfi_remember_state
 5774              		.cfi_def_cfa_offset 12
 5775              		@ sp needed
 5776 0064 30BD     		pop	{r4, r5, pc}
 5777              	.LVL583:
 5778              	.L435:
 5779              	.LCFI188:
 5780              		.cfi_restore_state
4410:Core/Src/bno055.c ****     }
 5781              		.loc 1 4410 18 view .LVU1591
 5782 0066 4FF0FF35 		mov	r5, #-1
 5783 006a F9E7     		b	.L434
 5784              	.L438:
 5785              		.align	2
 5786              	.L437:
 5787 006c 00005940 		.word	1079574528
 5788              		.cfi_endproc
 5789              	.LFE72:
 5791              		.section	.text.bno055_convert_gravity_float_x_msq,"ax",%progbits
 5792              		.align	1
 5793              		.global	bno055_convert_gravity_float_x_msq
 5794              		.syntax unified
 5795              		.thumb
 5796              		.thumb_func
 5798              	bno055_convert_gravity_float_x_msq:
 5799              	.LVL584:
 5800              	.LFB73:
4415:Core/Src/bno055.c **** 
4416:Core/Src/bno055.c **** /*!
4417:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
ARM GAS  /tmp/ccO72alg.s 			page 186


4418:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as float
4419:Core/Src/bno055.c ****  *
4420:Core/Src/bno055.c ****  *  @param gravity_x_f : The float value of gravity x meterpersecseq
4421:Core/Src/bno055.c ****  *
4422:Core/Src/bno055.c ****  *  @return results of bus communication function
4423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4425:Core/Src/bno055.c ****  *
4426:Core/Src/bno055.c ****  *
4427:Core/Src/bno055.c ****  */
4428:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_x_msq(float *gravity_x_f)
4429:Core/Src/bno055.c **** {
 5801              		.loc 1 4429 1 is_stmt 1 view -0
 5802              		.cfi_startproc
 5803              		@ args = 0, pretend = 0, frame = 8
 5804              		@ frame_needed = 0, uses_anonymous_args = 0
 5805              		.loc 1 4429 1 is_stmt 0 view .LVU1593
 5806 0000 30B5     		push	{r4, r5, lr}
 5807              	.LCFI189:
 5808              		.cfi_def_cfa_offset 12
 5809              		.cfi_offset 4, -12
 5810              		.cfi_offset 5, -8
 5811              		.cfi_offset 14, -4
 5812 0002 83B0     		sub	sp, sp, #12
 5813              	.LCFI190:
 5814              		.cfi_def_cfa_offset 24
 5815 0004 0446     		mov	r4, r0
4430:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5816              		.loc 1 4430 5 is_stmt 1 view .LVU1594
 5817              	.LVL585:
4431:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 5818              		.loc 1 4431 5 view .LVU1595
 5819              		.loc 1 4431 9 is_stmt 0 view .LVU1596
 5820 0006 0023     		movs	r3, #0
 5821 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4432:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5822              		.loc 1 4432 5 is_stmt 1 view .LVU1597
 5823              	.LVL586:
4433:Core/Src/bno055.c **** 
4434:Core/Src/bno055.c ****     /* Read raw gravity of x*/
4435:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 5824              		.loc 1 4435 5 view .LVU1598
 5825              		.loc 1 4435 16 is_stmt 0 view .LVU1599
 5826 000c 0DF10600 		add	r0, sp, #6
 5827              	.LVL587:
 5828              		.loc 1 4435 16 view .LVU1600
 5829 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 5830              	.LVL588:
4436:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5831              		.loc 1 4436 5 is_stmt 1 view .LVU1601
 5832              		.loc 1 4436 8 is_stmt 0 view .LVU1602
 5833 0014 70B9     		cbnz	r0, .L441
 5834 0016 0546     		mov	r5, r0
4437:Core/Src/bno055.c ****     {
4438:Core/Src/bno055.c ****         /* Convert the raw gravity x to m/s2*/
4439:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 5835              		.loc 1 4439 9 is_stmt 1 view .LVU1603
ARM GAS  /tmp/ccO72alg.s 			page 187


 5836              		.loc 1 4439 44 is_stmt 0 view .LVU1604
 5837 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5838              	.LVL589:
 5839              		.loc 1 4439 44 view .LVU1605
 5840 001c FFF7FEFF 		bl	__aeabi_i2d
 5841              	.LVL590:
 5842 0020 0022     		movs	r2, #0
 5843 0022 064B     		ldr	r3, .L443
 5844 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5845              	.LVL591:
 5846              		.loc 1 4439 16 view .LVU1606
 5847 0028 FFF7FEFF 		bl	__aeabi_d2f
 5848              	.LVL592:
4440:Core/Src/bno055.c ****         *gravity_x_f = data_f;
 5849              		.loc 1 4440 9 is_stmt 1 view .LVU1607
 5850              		.loc 1 4440 22 is_stmt 0 view .LVU1608
 5851 002c 2060     		str	r0, [r4]	@ float
 5852              	.LVL593:
 5853              	.L440:
4441:Core/Src/bno055.c ****     }
4442:Core/Src/bno055.c ****     else
4443:Core/Src/bno055.c ****     {
4444:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4445:Core/Src/bno055.c ****     }
4446:Core/Src/bno055.c **** 
4447:Core/Src/bno055.c ****     return com_rslt;
 5854              		.loc 1 4447 5 is_stmt 1 view .LVU1609
4448:Core/Src/bno055.c **** }
 5855              		.loc 1 4448 1 is_stmt 0 view .LVU1610
 5856 002e 2846     		mov	r0, r5
 5857 0030 03B0     		add	sp, sp, #12
 5858              	.LCFI191:
 5859              		.cfi_remember_state
 5860              		.cfi_def_cfa_offset 12
 5861              		@ sp needed
 5862 0032 30BD     		pop	{r4, r5, pc}
 5863              	.LVL594:
 5864              	.L441:
 5865              	.LCFI192:
 5866              		.cfi_restore_state
4444:Core/Src/bno055.c ****     }
 5867              		.loc 1 4444 18 view .LVU1611
 5868 0034 4FF0FF35 		mov	r5, #-1
 5869 0038 F9E7     		b	.L440
 5870              	.L444:
 5871 003a 00BF     		.align	2
 5872              	.L443:
 5873 003c 00005940 		.word	1079574528
 5874              		.cfi_endproc
 5875              	.LFE73:
 5877              		.section	.text.bno055_convert_gravity_float_y_msq,"ax",%progbits
 5878              		.align	1
 5879              		.global	bno055_convert_gravity_float_y_msq
 5880              		.syntax unified
 5881              		.thumb
 5882              		.thumb_func
 5884              	bno055_convert_gravity_float_y_msq:
ARM GAS  /tmp/ccO72alg.s 			page 188


 5885              	.LVL595:
 5886              	.LFB74:
4449:Core/Src/bno055.c **** 
4450:Core/Src/bno055.c **** /*!
4451:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4452:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as float
4453:Core/Src/bno055.c ****  *
4454:Core/Src/bno055.c ****  *  @param gravity_y_f : The float value of gravity y meterpersecseq
4455:Core/Src/bno055.c ****  *
4456:Core/Src/bno055.c ****  *  @return results of bus communication function
4457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4459:Core/Src/bno055.c ****  *
4460:Core/Src/bno055.c ****  *
4461:Core/Src/bno055.c ****  */
4462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_y_msq(float *gravity_y_f)
4463:Core/Src/bno055.c **** {
 5887              		.loc 1 4463 1 is_stmt 1 view -0
 5888              		.cfi_startproc
 5889              		@ args = 0, pretend = 0, frame = 8
 5890              		@ frame_needed = 0, uses_anonymous_args = 0
 5891              		.loc 1 4463 1 is_stmt 0 view .LVU1613
 5892 0000 30B5     		push	{r4, r5, lr}
 5893              	.LCFI193:
 5894              		.cfi_def_cfa_offset 12
 5895              		.cfi_offset 4, -12
 5896              		.cfi_offset 5, -8
 5897              		.cfi_offset 14, -4
 5898 0002 83B0     		sub	sp, sp, #12
 5899              	.LCFI194:
 5900              		.cfi_def_cfa_offset 24
 5901 0004 0446     		mov	r4, r0
4464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5902              		.loc 1 4464 5 is_stmt 1 view .LVU1614
 5903              	.LVL596:
4465:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 5904              		.loc 1 4465 5 view .LVU1615
 5905              		.loc 1 4465 9 is_stmt 0 view .LVU1616
 5906 0006 0023     		movs	r3, #0
 5907 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4466:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5908              		.loc 1 4466 5 is_stmt 1 view .LVU1617
 5909              	.LVL597:
4467:Core/Src/bno055.c **** 
4468:Core/Src/bno055.c ****     /* Read raw gravity of y*/
4469:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 5910              		.loc 1 4469 5 view .LVU1618
 5911              		.loc 1 4469 16 is_stmt 0 view .LVU1619
 5912 000c 0DF10600 		add	r0, sp, #6
 5913              	.LVL598:
 5914              		.loc 1 4469 16 view .LVU1620
 5915 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 5916              	.LVL599:
4470:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 5917              		.loc 1 4470 5 is_stmt 1 view .LVU1621
 5918              		.loc 1 4470 8 is_stmt 0 view .LVU1622
 5919 0014 70B9     		cbnz	r0, .L447
ARM GAS  /tmp/ccO72alg.s 			page 189


 5920 0016 0546     		mov	r5, r0
4471:Core/Src/bno055.c ****     {
4472:Core/Src/bno055.c ****         /* Convert the raw gravity y to m/s2*/
4473:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 5921              		.loc 1 4473 9 is_stmt 1 view .LVU1623
 5922              		.loc 1 4473 44 is_stmt 0 view .LVU1624
 5923 0018 BDF90600 		ldrsh	r0, [sp, #6]
 5924              	.LVL600:
 5925              		.loc 1 4473 44 view .LVU1625
 5926 001c FFF7FEFF 		bl	__aeabi_i2d
 5927              	.LVL601:
 5928 0020 0022     		movs	r2, #0
 5929 0022 064B     		ldr	r3, .L449
 5930 0024 FFF7FEFF 		bl	__aeabi_ddiv
 5931              	.LVL602:
 5932              		.loc 1 4473 16 view .LVU1626
 5933 0028 FFF7FEFF 		bl	__aeabi_d2f
 5934              	.LVL603:
4474:Core/Src/bno055.c ****         *gravity_y_f = data_f;
 5935              		.loc 1 4474 9 is_stmt 1 view .LVU1627
 5936              		.loc 1 4474 22 is_stmt 0 view .LVU1628
 5937 002c 2060     		str	r0, [r4]	@ float
 5938              	.LVL604:
 5939              	.L446:
4475:Core/Src/bno055.c ****     }
4476:Core/Src/bno055.c ****     else
4477:Core/Src/bno055.c ****     {
4478:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4479:Core/Src/bno055.c ****     }
4480:Core/Src/bno055.c **** 
4481:Core/Src/bno055.c ****     return com_rslt;
 5940              		.loc 1 4481 5 is_stmt 1 view .LVU1629
4482:Core/Src/bno055.c **** }
 5941              		.loc 1 4482 1 is_stmt 0 view .LVU1630
 5942 002e 2846     		mov	r0, r5
 5943 0030 03B0     		add	sp, sp, #12
 5944              	.LCFI195:
 5945              		.cfi_remember_state
 5946              		.cfi_def_cfa_offset 12
 5947              		@ sp needed
 5948 0032 30BD     		pop	{r4, r5, pc}
 5949              	.LVL605:
 5950              	.L447:
 5951              	.LCFI196:
 5952              		.cfi_restore_state
4478:Core/Src/bno055.c ****     }
 5953              		.loc 1 4478 18 view .LVU1631
 5954 0034 4FF0FF35 		mov	r5, #-1
 5955 0038 F9E7     		b	.L446
 5956              	.L450:
 5957 003a 00BF     		.align	2
 5958              	.L449:
 5959 003c 00005940 		.word	1079574528
 5960              		.cfi_endproc
 5961              	.LFE74:
 5963              		.section	.text.bno055_convert_gravity_float_z_msq,"ax",%progbits
 5964              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 190


 5965              		.global	bno055_convert_gravity_float_z_msq
 5966              		.syntax unified
 5967              		.thumb
 5968              		.thumb_func
 5970              	bno055_convert_gravity_float_z_msq:
 5971              	.LVL606:
 5972              	.LFB75:
4483:Core/Src/bno055.c **** 
4484:Core/Src/bno055.c **** /*!
4485:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
4486:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as float
4487:Core/Src/bno055.c ****  *
4488:Core/Src/bno055.c ****  *  @param gravity_z_f : The float value of gravity z meterpersecseq
4489:Core/Src/bno055.c ****  *
4490:Core/Src/bno055.c ****  *  @return results of bus communication function
4491:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4492:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4493:Core/Src/bno055.c ****  *
4494:Core/Src/bno055.c ****  */
4495:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_float_z_msq(float *gravity_z_f)
4496:Core/Src/bno055.c **** {
 5973              		.loc 1 4496 1 is_stmt 1 view -0
 5974              		.cfi_startproc
 5975              		@ args = 0, pretend = 0, frame = 8
 5976              		@ frame_needed = 0, uses_anonymous_args = 0
 5977              		.loc 1 4496 1 is_stmt 0 view .LVU1633
 5978 0000 30B5     		push	{r4, r5, lr}
 5979              	.LCFI197:
 5980              		.cfi_def_cfa_offset 12
 5981              		.cfi_offset 4, -12
 5982              		.cfi_offset 5, -8
 5983              		.cfi_offset 14, -4
 5984 0002 83B0     		sub	sp, sp, #12
 5985              	.LCFI198:
 5986              		.cfi_def_cfa_offset 24
 5987 0004 0446     		mov	r4, r0
4497:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 5988              		.loc 1 4497 5 is_stmt 1 view .LVU1634
 5989              	.LVL607:
4498:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 5990              		.loc 1 4498 5 view .LVU1635
 5991              		.loc 1 4498 9 is_stmt 0 view .LVU1636
 5992 0006 0023     		movs	r3, #0
 5993 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4499:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 5994              		.loc 1 4499 5 is_stmt 1 view .LVU1637
 5995              	.LVL608:
4500:Core/Src/bno055.c **** 
4501:Core/Src/bno055.c ****     /* Read raw gravity of z */
4502:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 5996              		.loc 1 4502 5 view .LVU1638
 5997              		.loc 1 4502 16 is_stmt 0 view .LVU1639
 5998 000c 0DF10600 		add	r0, sp, #6
 5999              	.LVL609:
 6000              		.loc 1 4502 16 view .LVU1640
 6001 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 6002              	.LVL610:
ARM GAS  /tmp/ccO72alg.s 			page 191


4503:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6003              		.loc 1 4503 5 is_stmt 1 view .LVU1641
 6004              		.loc 1 4503 8 is_stmt 0 view .LVU1642
 6005 0014 70B9     		cbnz	r0, .L453
 6006 0016 0546     		mov	r5, r0
4504:Core/Src/bno055.c ****     {
4505:Core/Src/bno055.c ****         /* Convert the raw gravity z to m/s2*/
4506:Core/Src/bno055.c ****         data_f = (float)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 6007              		.loc 1 4506 9 is_stmt 1 view .LVU1643
 6008              		.loc 1 4506 44 is_stmt 0 view .LVU1644
 6009 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6010              	.LVL611:
 6011              		.loc 1 4506 44 view .LVU1645
 6012 001c FFF7FEFF 		bl	__aeabi_i2d
 6013              	.LVL612:
 6014 0020 0022     		movs	r2, #0
 6015 0022 064B     		ldr	r3, .L455
 6016 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6017              	.LVL613:
 6018              		.loc 1 4506 16 view .LVU1646
 6019 0028 FFF7FEFF 		bl	__aeabi_d2f
 6020              	.LVL614:
4507:Core/Src/bno055.c ****         *gravity_z_f = data_f;
 6021              		.loc 1 4507 9 is_stmt 1 view .LVU1647
 6022              		.loc 1 4507 22 is_stmt 0 view .LVU1648
 6023 002c 2060     		str	r0, [r4]	@ float
 6024              	.LVL615:
 6025              	.L452:
4508:Core/Src/bno055.c ****     }
4509:Core/Src/bno055.c ****     else
4510:Core/Src/bno055.c ****     {
4511:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4512:Core/Src/bno055.c ****     }
4513:Core/Src/bno055.c **** 
4514:Core/Src/bno055.c ****     return com_rslt;
 6026              		.loc 1 4514 5 is_stmt 1 view .LVU1649
4515:Core/Src/bno055.c **** }
 6027              		.loc 1 4515 1 is_stmt 0 view .LVU1650
 6028 002e 2846     		mov	r0, r5
 6029 0030 03B0     		add	sp, sp, #12
 6030              	.LCFI199:
 6031              		.cfi_remember_state
 6032              		.cfi_def_cfa_offset 12
 6033              		@ sp needed
 6034 0032 30BD     		pop	{r4, r5, pc}
 6035              	.LVL616:
 6036              	.L453:
 6037              	.LCFI200:
 6038              		.cfi_restore_state
4511:Core/Src/bno055.c ****     }
 6039              		.loc 1 4511 18 view .LVU1651
 6040 0034 4FF0FF35 		mov	r5, #-1
 6041 0038 F9E7     		b	.L452
 6042              	.L456:
 6043 003a 00BF     		.align	2
 6044              	.L455:
 6045 003c 00005940 		.word	1079574528
ARM GAS  /tmp/ccO72alg.s 			page 192


 6046              		.cfi_endproc
 6047              	.LFE75:
 6049              		.section	.text.bno055_convert_float_gravity_xyz_msq,"ax",%progbits
 6050              		.align	1
 6051              		.global	bno055_convert_float_gravity_xyz_msq
 6052              		.syntax unified
 6053              		.thumb
 6054              		.thumb_func
 6056              	bno055_convert_float_gravity_xyz_msq:
 6057              	.LVL617:
 6058              	.LFB76:
4516:Core/Src/bno055.c **** 
4517:Core/Src/bno055.c **** /*!
4518:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
4519:Core/Src/bno055.c ****  *  to meterpersecseq output as float
4520:Core/Src/bno055.c ****  *
4521:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
4522:Core/Src/bno055.c ****  *
4523:Core/Src/bno055.c ****  *  Parameter |    result
4524:Core/Src/bno055.c ****  *  --------- | -----------------
4525:Core/Src/bno055.c ****  *    x       | meterpersecseq data of gravity
4526:Core/Src/bno055.c ****  *    y       | meterpersecseq data of gravity
4527:Core/Src/bno055.c ****  *    z       | meterpersecseq data of gravity
4528:Core/Src/bno055.c ****  *
4529:Core/Src/bno055.c ****  *
4530:Core/Src/bno055.c ****  *  @return results of bus communication function
4531:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4532:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4533:Core/Src/bno055.c ****  *
4534:Core/Src/bno055.c ****  *
4535:Core/Src/bno055.c ****  */
4536:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_gravity_xyz_msq(struct bno055_gravity_float_t *gra
4537:Core/Src/bno055.c **** {
 6059              		.loc 1 4537 1 is_stmt 1 view -0
 6060              		.cfi_startproc
 6061              		@ args = 0, pretend = 0, frame = 8
 6062              		@ frame_needed = 0, uses_anonymous_args = 0
 6063              		.loc 1 4537 1 is_stmt 0 view .LVU1653
 6064 0000 30B5     		push	{r4, r5, lr}
 6065              	.LCFI201:
 6066              		.cfi_def_cfa_offset 12
 6067              		.cfi_offset 4, -12
 6068              		.cfi_offset 5, -8
 6069              		.cfi_offset 14, -4
 6070 0002 83B0     		sub	sp, sp, #12
 6071              	.LCFI202:
 6072              		.cfi_def_cfa_offset 24
 6073 0004 0446     		mov	r4, r0
4538:Core/Src/bno055.c ****     /* Variable used to return value of
4539:Core/Src/bno055.c ****      * communication routine*/
4540:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6074              		.loc 1 4540 5 is_stmt 1 view .LVU1654
 6075              	.LVL618:
4541:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 6076              		.loc 1 4541 5 view .LVU1655
 6077              		.loc 1 4541 29 is_stmt 0 view .LVU1656
 6078 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 193


 6079 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6080 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6081 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
4542:Core/Src/bno055.c **** 
4543:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
4544:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 6082              		.loc 1 4544 5 is_stmt 1 view .LVU1657
 6083              		.loc 1 4544 16 is_stmt 0 view .LVU1658
 6084 0014 6846     		mov	r0, sp
 6085              	.LVL619:
 6086              		.loc 1 4544 16 view .LVU1659
 6087 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 6088              	.LVL620:
4545:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6089              		.loc 1 4545 5 is_stmt 1 view .LVU1660
 6090              		.loc 1 4545 8 is_stmt 0 view .LVU1661
 6091 001a 20BB     		cbnz	r0, .L459
 6092 001c 0546     		mov	r5, r0
4546:Core/Src/bno055.c ****     {
4547:Core/Src/bno055.c ****         /* Convert raw gravity xyz to meterpersecseq */
4548:Core/Src/bno055.c ****         gravity_xyz->x = (float)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 6093              		.loc 1 4548 9 is_stmt 1 view .LVU1662
 6094              		.loc 1 4548 52 is_stmt 0 view .LVU1663
 6095 001e BDF90000 		ldrsh	r0, [sp]
 6096              	.LVL621:
 6097              		.loc 1 4548 52 view .LVU1664
 6098 0022 FFF7FEFF 		bl	__aeabi_i2d
 6099              	.LVL622:
 6100 0026 0022     		movs	r2, #0
 6101 0028 104B     		ldr	r3, .L461
 6102 002a FFF7FEFF 		bl	__aeabi_ddiv
 6103              	.LVL623:
 6104              		.loc 1 4548 26 view .LVU1665
 6105 002e FFF7FEFF 		bl	__aeabi_d2f
 6106              	.LVL624:
 6107              		.loc 1 4548 24 view .LVU1666
 6108 0032 2060     		str	r0, [r4]	@ float
4549:Core/Src/bno055.c ****         gravity_xyz->y = (float)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 6109              		.loc 1 4549 9 is_stmt 1 view .LVU1667
 6110              		.loc 1 4549 52 is_stmt 0 view .LVU1668
 6111 0034 BDF90200 		ldrsh	r0, [sp, #2]
 6112 0038 FFF7FEFF 		bl	__aeabi_i2d
 6113              	.LVL625:
 6114 003c 0022     		movs	r2, #0
 6115 003e 0B4B     		ldr	r3, .L461
 6116 0040 FFF7FEFF 		bl	__aeabi_ddiv
 6117              	.LVL626:
 6118              		.loc 1 4549 26 view .LVU1669
 6119 0044 FFF7FEFF 		bl	__aeabi_d2f
 6120              	.LVL627:
 6121              		.loc 1 4549 24 view .LVU1670
 6122 0048 6060     		str	r0, [r4, #4]	@ float
4550:Core/Src/bno055.c ****         gravity_xyz->z = (float)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 6123              		.loc 1 4550 9 is_stmt 1 view .LVU1671
 6124              		.loc 1 4550 52 is_stmt 0 view .LVU1672
 6125 004a BDF90400 		ldrsh	r0, [sp, #4]
 6126 004e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccO72alg.s 			page 194


 6127              	.LVL628:
 6128 0052 0022     		movs	r2, #0
 6129 0054 054B     		ldr	r3, .L461
 6130 0056 FFF7FEFF 		bl	__aeabi_ddiv
 6131              	.LVL629:
 6132              		.loc 1 4550 26 view .LVU1673
 6133 005a FFF7FEFF 		bl	__aeabi_d2f
 6134              	.LVL630:
 6135              		.loc 1 4550 24 view .LVU1674
 6136 005e A060     		str	r0, [r4, #8]	@ float
 6137              	.L458:
 6138              	.LVL631:
4551:Core/Src/bno055.c ****     }
4552:Core/Src/bno055.c ****     else
4553:Core/Src/bno055.c ****     {
4554:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4555:Core/Src/bno055.c ****     }
4556:Core/Src/bno055.c **** 
4557:Core/Src/bno055.c ****     return com_rslt;
 6139              		.loc 1 4557 5 is_stmt 1 view .LVU1675
4558:Core/Src/bno055.c **** }
 6140              		.loc 1 4558 1 is_stmt 0 view .LVU1676
 6141 0060 2846     		mov	r0, r5
 6142 0062 03B0     		add	sp, sp, #12
 6143              	.LCFI203:
 6144              		.cfi_remember_state
 6145              		.cfi_def_cfa_offset 12
 6146              		@ sp needed
 6147 0064 30BD     		pop	{r4, r5, pc}
 6148              	.LVL632:
 6149              	.L459:
 6150              	.LCFI204:
 6151              		.cfi_restore_state
4554:Core/Src/bno055.c ****     }
 6152              		.loc 1 4554 18 view .LVU1677
 6153 0066 4FF0FF35 		mov	r5, #-1
 6154 006a F9E7     		b	.L458
 6155              	.L462:
 6156              		.align	2
 6157              	.L461:
 6158 006c 00005940 		.word	1079574528
 6159              		.cfi_endproc
 6160              	.LFE76:
 6162              		.section	.text.bno055_convert_double_mag_x_uT,"ax",%progbits
 6163              		.align	1
 6164              		.global	bno055_convert_double_mag_x_uT
 6165              		.syntax unified
 6166              		.thumb
 6167              		.thumb_func
 6169              	bno055_convert_double_mag_x_uT:
 6170              	.LVL633:
 6171              	.LFB87:
4559:Core/Src/bno055.c **** 
4560:Core/Src/bno055.c **** /*!
4561:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4562:Core/Src/bno055.c ****  *  data to Fahrenheit output as float
4563:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 195


4564:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Fahrenheit
4565:Core/Src/bno055.c ****  *
4566:Core/Src/bno055.c ****  *  @return results of bus communication function
4567:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4568:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4569:Core/Src/bno055.c ****  *
4570:Core/Src/bno055.c ****  *
4571:Core/Src/bno055.c ****  */
4572:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_fahrenheit(float *temp_f)
4573:Core/Src/bno055.c **** {
4574:Core/Src/bno055.c ****     /* Variable used to return value of
4575:Core/Src/bno055.c ****      * communication routine*/
4576:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4577:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4578:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4579:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4580:Core/Src/bno055.c **** 
4581:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4582:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4583:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4584:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
4585:Core/Src/bno055.c ****     {
4586:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
4587:Core/Src/bno055.c ****     }
4588:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4589:Core/Src/bno055.c ****     {
4590:Core/Src/bno055.c ****         /* Read the raw temperature data */
4591:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4592:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4593:Core/Src/bno055.c ****         {
4594:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4595:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
4596:Core/Src/bno055.c ****             *temp_f = data_f;
4597:Core/Src/bno055.c ****         }
4598:Core/Src/bno055.c ****         else
4599:Core/Src/bno055.c ****         {
4600:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4601:Core/Src/bno055.c ****         }
4602:Core/Src/bno055.c ****     }
4603:Core/Src/bno055.c ****     else
4604:Core/Src/bno055.c ****     {
4605:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4606:Core/Src/bno055.c ****     }
4607:Core/Src/bno055.c **** 
4608:Core/Src/bno055.c ****     return com_rslt;
4609:Core/Src/bno055.c **** }
4610:Core/Src/bno055.c **** 
4611:Core/Src/bno055.c **** /*!
4612:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
4613:Core/Src/bno055.c ****  *  data to Celsius output as float
4614:Core/Src/bno055.c ****  *
4615:Core/Src/bno055.c ****  *  @param temp_f : The float value of temperature Celsius
4616:Core/Src/bno055.c ****  *
4617:Core/Src/bno055.c ****  *  @return results of bus communication function
4618:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4619:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4620:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 196


4621:Core/Src/bno055.c ****  *
4622:Core/Src/bno055.c ****  *
4623:Core/Src/bno055.c ****  */
4624:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_float_temp_celsius(float *temp_f)
4625:Core/Src/bno055.c **** {
4626:Core/Src/bno055.c ****     /* Variable used to return value of
4627:Core/Src/bno055.c ****      * communication routine*/
4628:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4629:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
4630:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
4631:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
4632:Core/Src/bno055.c **** 
4633:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
4634:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
4635:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
4636:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
4637:Core/Src/bno055.c ****     {
4638:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
4639:Core/Src/bno055.c ****     }
4640:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4641:Core/Src/bno055.c ****     {
4642:Core/Src/bno055.c ****         /* Read the raw temperature data */
4643:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
4644:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4645:Core/Src/bno055.c ****         {
4646:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
4647:Core/Src/bno055.c ****             data_f = (float)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
4648:Core/Src/bno055.c ****             *temp_f = data_f;
4649:Core/Src/bno055.c ****         }
4650:Core/Src/bno055.c ****         else
4651:Core/Src/bno055.c ****         {
4652:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4653:Core/Src/bno055.c ****         }
4654:Core/Src/bno055.c ****     }
4655:Core/Src/bno055.c ****     else
4656:Core/Src/bno055.c ****     {
4657:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4658:Core/Src/bno055.c ****     }
4659:Core/Src/bno055.c **** 
4660:Core/Src/bno055.c ****     return com_rslt;
4661:Core/Src/bno055.c **** }
4662:Core/Src/bno055.c **** #endif
4663:Core/Src/bno055.c **** #ifdef  BNO055_DOUBLE_ENABLE
4664:Core/Src/bno055.c **** 
4665:Core/Src/bno055.c **** /*!
4666:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4667:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4668:Core/Src/bno055.c ****  *
4669:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x meterpersecseq data
4670:Core/Src/bno055.c ****  *
4671:Core/Src/bno055.c ****  *
4672:Core/Src/bno055.c ****  *
4673:Core/Src/bno055.c ****  *  @return results of bus communication function
4674:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4675:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4676:Core/Src/bno055.c ****  *
4677:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 197


4678:Core/Src/bno055.c ****  */
4679:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_msq(double *accel_x_d)
4680:Core/Src/bno055.c **** {
4681:Core/Src/bno055.c ****     /* Variable used to return value of
4682:Core/Src/bno055.c ****      * communication routine*/
4683:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4684:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4685:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4686:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4687:Core/Src/bno055.c **** 
4688:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4689:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4690:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4691:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4692:Core/Src/bno055.c ****     {
4693:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4694:Core/Src/bno055.c ****     }
4695:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4696:Core/Src/bno055.c ****     {
4697:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4698:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4699:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4700:Core/Src/bno055.c ****         {
4701:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4702:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MSQ);
4703:Core/Src/bno055.c ****             *accel_x_d = data_f;
4704:Core/Src/bno055.c ****         }
4705:Core/Src/bno055.c ****         else
4706:Core/Src/bno055.c ****         {
4707:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4708:Core/Src/bno055.c ****         }
4709:Core/Src/bno055.c ****     }
4710:Core/Src/bno055.c ****     else
4711:Core/Src/bno055.c ****     {
4712:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4713:Core/Src/bno055.c ****     }
4714:Core/Src/bno055.c **** 
4715:Core/Src/bno055.c ****     return com_rslt;
4716:Core/Src/bno055.c **** }
4717:Core/Src/bno055.c **** 
4718:Core/Src/bno055.c **** /*!
4719:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel x raw data
4720:Core/Src/bno055.c ****  *  to millig output as double
4721:Core/Src/bno055.c ****  *
4722:Core/Src/bno055.c ****  *  @param accel_x_d : The accel x millig data
4723:Core/Src/bno055.c ****  *
4724:Core/Src/bno055.c ****  *
4725:Core/Src/bno055.c ****  *
4726:Core/Src/bno055.c ****  *  @return results of bus communication function
4727:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4728:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4729:Core/Src/bno055.c ****  *
4730:Core/Src/bno055.c ****  *
4731:Core/Src/bno055.c ****  *
4732:Core/Src/bno055.c ****  */
4733:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_x_mg(double *accel_x_d)
4734:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 198


4735:Core/Src/bno055.c ****     /* Variable used to return value of
4736:Core/Src/bno055.c ****      * communication routine*/
4737:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4738:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
4739:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4740:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4741:Core/Src/bno055.c **** 
4742:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4743:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4744:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4745:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4746:Core/Src/bno055.c ****     {
4747:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4748:Core/Src/bno055.c ****     }
4749:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4750:Core/Src/bno055.c ****     {
4751:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4752:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_x(&reg_accel_x_s16);
4753:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4754:Core/Src/bno055.c ****         {
4755:Core/Src/bno055.c ****             /* Convert the raw x to mg */
4756:Core/Src/bno055.c ****             data_f = (double)(reg_accel_x_s16 / BNO055_ACCEL_DIV_MG);
4757:Core/Src/bno055.c ****             *accel_x_d = data_f;
4758:Core/Src/bno055.c ****         }
4759:Core/Src/bno055.c ****         else
4760:Core/Src/bno055.c ****         {
4761:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4762:Core/Src/bno055.c ****         }
4763:Core/Src/bno055.c ****     }
4764:Core/Src/bno055.c ****     else
4765:Core/Src/bno055.c ****     {
4766:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4767:Core/Src/bno055.c ****     }
4768:Core/Src/bno055.c **** 
4769:Core/Src/bno055.c ****     return com_rslt;
4770:Core/Src/bno055.c **** }
4771:Core/Src/bno055.c **** 
4772:Core/Src/bno055.c **** /*!
4773:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4774:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4775:Core/Src/bno055.c ****  *
4776:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y meterpersecseq data
4777:Core/Src/bno055.c ****  *
4778:Core/Src/bno055.c ****  *
4779:Core/Src/bno055.c ****  *
4780:Core/Src/bno055.c ****  *  @return results of bus communication function
4781:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4782:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4783:Core/Src/bno055.c ****  *
4784:Core/Src/bno055.c ****  *
4785:Core/Src/bno055.c ****  *
4786:Core/Src/bno055.c ****  */
4787:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_msq(double *accel_y_d)
4788:Core/Src/bno055.c **** {
4789:Core/Src/bno055.c ****     /* Variable used to return value of
4790:Core/Src/bno055.c ****      * communication routine*/
4791:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 199


4792:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4793:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
4794:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4795:Core/Src/bno055.c **** 
4796:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4797:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4798:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4799:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4800:Core/Src/bno055.c ****     {
4801:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
4802:Core/Src/bno055.c ****     }
4803:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4804:Core/Src/bno055.c ****     {
4805:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4806:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4807:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4808:Core/Src/bno055.c ****         {
4809:Core/Src/bno055.c ****             /* Convert the raw x to m/s2 */
4810:Core/Src/bno055.c ****             data_f = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MSQ);
4811:Core/Src/bno055.c ****             *accel_y_d = data_f;
4812:Core/Src/bno055.c ****         }
4813:Core/Src/bno055.c ****         else
4814:Core/Src/bno055.c ****         {
4815:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4816:Core/Src/bno055.c ****         }
4817:Core/Src/bno055.c ****     }
4818:Core/Src/bno055.c ****     else
4819:Core/Src/bno055.c ****     {
4820:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4821:Core/Src/bno055.c ****     }
4822:Core/Src/bno055.c **** 
4823:Core/Src/bno055.c ****     return com_rslt;
4824:Core/Src/bno055.c **** }
4825:Core/Src/bno055.c **** 
4826:Core/Src/bno055.c **** /*!
4827:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel y raw data
4828:Core/Src/bno055.c ****  *  to millig output as double
4829:Core/Src/bno055.c ****  *
4830:Core/Src/bno055.c ****  *  @param accel_y_d : The accel y millig data
4831:Core/Src/bno055.c ****  *
4832:Core/Src/bno055.c ****  *
4833:Core/Src/bno055.c ****  *
4834:Core/Src/bno055.c ****  *  @return results of bus communication function
4835:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4836:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4837:Core/Src/bno055.c ****  *
4838:Core/Src/bno055.c ****  *
4839:Core/Src/bno055.c ****  */
4840:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_y_mg(double *accel_y_d)
4841:Core/Src/bno055.c **** {
4842:Core/Src/bno055.c ****     /* Variable used to return value of
4843:Core/Src/bno055.c ****      * communication routine*/
4844:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4845:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
4846:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4847:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4848:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 200


4849:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4850:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4851:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4852:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4853:Core/Src/bno055.c ****     {
4854:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4855:Core/Src/bno055.c ****     }
4856:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4857:Core/Src/bno055.c ****     {
4858:Core/Src/bno055.c ****         /* Read the accel raw y data*/
4859:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_y(&reg_accel_y_s16);
4860:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4861:Core/Src/bno055.c ****         {
4862:Core/Src/bno055.c ****             /* Convert the raw y to mg */
4863:Core/Src/bno055.c ****             data_d = (double)(reg_accel_y_s16 / BNO055_ACCEL_DIV_MG);
4864:Core/Src/bno055.c ****             *accel_y_d = data_d;
4865:Core/Src/bno055.c ****         }
4866:Core/Src/bno055.c ****         else
4867:Core/Src/bno055.c ****         {
4868:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4869:Core/Src/bno055.c ****         }
4870:Core/Src/bno055.c ****     }
4871:Core/Src/bno055.c ****     else
4872:Core/Src/bno055.c ****     {
4873:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4874:Core/Src/bno055.c ****     }
4875:Core/Src/bno055.c **** 
4876:Core/Src/bno055.c ****     return com_rslt;
4877:Core/Src/bno055.c **** }
4878:Core/Src/bno055.c **** 
4879:Core/Src/bno055.c **** /*!
4880:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4881:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4882:Core/Src/bno055.c ****  *
4883:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z meterpersecseq data
4884:Core/Src/bno055.c ****  *
4885:Core/Src/bno055.c ****  *
4886:Core/Src/bno055.c ****  *
4887:Core/Src/bno055.c ****  *  @return results of bus communication function
4888:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4889:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4890:Core/Src/bno055.c ****  */
4891:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_msq(double *accel_z_d)
4892:Core/Src/bno055.c **** {
4893:Core/Src/bno055.c ****     /* Variable used to return value of
4894:Core/Src/bno055.c ****      * communication routine*/
4895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4896:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4898:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4899:Core/Src/bno055.c **** 
4900:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4901:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
4902:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4903:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
4904:Core/Src/bno055.c ****     {
4905:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
ARM GAS  /tmp/ccO72alg.s 			page 201


4906:Core/Src/bno055.c ****     }
4907:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4908:Core/Src/bno055.c ****     {
4909:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4910:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
4911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4912:Core/Src/bno055.c ****         {
4913:Core/Src/bno055.c ****             /* Convert the raw z to m/s2 */
4914:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MSQ);
4915:Core/Src/bno055.c ****             *accel_z_d = data_d;
4916:Core/Src/bno055.c ****         }
4917:Core/Src/bno055.c ****         else
4918:Core/Src/bno055.c ****         {
4919:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4920:Core/Src/bno055.c ****         }
4921:Core/Src/bno055.c ****     }
4922:Core/Src/bno055.c ****     else
4923:Core/Src/bno055.c ****     {
4924:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4925:Core/Src/bno055.c ****     }
4926:Core/Src/bno055.c **** 
4927:Core/Src/bno055.c ****     return com_rslt;
4928:Core/Src/bno055.c **** }
4929:Core/Src/bno055.c **** 
4930:Core/Src/bno055.c **** /*!
4931:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel z raw data
4932:Core/Src/bno055.c ****  *  to millig output as double
4933:Core/Src/bno055.c ****  *
4934:Core/Src/bno055.c ****  *  @param accel_z_d : The accel z millig data
4935:Core/Src/bno055.c ****  *
4936:Core/Src/bno055.c ****  *
4937:Core/Src/bno055.c ****  *
4938:Core/Src/bno055.c ****  *  @return results of bus communication function
4939:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4940:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4941:Core/Src/bno055.c ****  *
4942:Core/Src/bno055.c ****  */
4943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_z_mg(double *accel_z_d)
4944:Core/Src/bno055.c **** {
4945:Core/Src/bno055.c ****     /* Variable used to return value of
4946:Core/Src/bno055.c ****      * communication routine*/
4947:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
4948:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
4949:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
4950:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
4951:Core/Src/bno055.c **** 
4952:Core/Src/bno055.c ****     /* Read the current accel unit and set the
4953:Core/Src/bno055.c ****      * unit as mg if the unit is in m/s2*/
4954:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
4955:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
4956:Core/Src/bno055.c ****     {
4957:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
4958:Core/Src/bno055.c ****     }
4959:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
4960:Core/Src/bno055.c ****     {
4961:Core/Src/bno055.c ****         /* Read the accel raw z data*/
4962:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_z(&reg_accel_z_s16);
ARM GAS  /tmp/ccO72alg.s 			page 202


4963:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
4964:Core/Src/bno055.c ****         {
4965:Core/Src/bno055.c ****             /* Convert the raw z to mg */
4966:Core/Src/bno055.c ****             data_d = (double)(reg_accel_z_s16 / BNO055_ACCEL_DIV_MG);
4967:Core/Src/bno055.c ****             *accel_z_d = data_d;
4968:Core/Src/bno055.c ****         }
4969:Core/Src/bno055.c ****         else
4970:Core/Src/bno055.c ****         {
4971:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
4972:Core/Src/bno055.c ****         }
4973:Core/Src/bno055.c ****     }
4974:Core/Src/bno055.c ****     else
4975:Core/Src/bno055.c ****     {
4976:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
4977:Core/Src/bno055.c ****     }
4978:Core/Src/bno055.c **** 
4979:Core/Src/bno055.c ****     return com_rslt;
4980:Core/Src/bno055.c **** }
4981:Core/Src/bno055.c **** 
4982:Core/Src/bno055.c **** /*!
4983:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
4984:Core/Src/bno055.c ****  *  to meterpersecseq output as double
4985:Core/Src/bno055.c ****  *
4986:Core/Src/bno055.c ****  *  @param accel_xyz : The meterpersecseq data of accel xyz
4987:Core/Src/bno055.c ****  *
4988:Core/Src/bno055.c ****  *  Parameter |    result
4989:Core/Src/bno055.c ****  *  --------- | -----------------
4990:Core/Src/bno055.c ****  *   x        | meterpersecseq data of accel
4991:Core/Src/bno055.c ****  *   y        | meterpersecseq data of accel
4992:Core/Src/bno055.c ****  *   z        | meterpersecseq data of accel
4993:Core/Src/bno055.c ****  *
4994:Core/Src/bno055.c ****  *
4995:Core/Src/bno055.c ****  *  @return results of bus communication function
4996:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
4997:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
4998:Core/Src/bno055.c ****  *
4999:Core/Src/bno055.c ****  *
5000:Core/Src/bno055.c ****  */
5001:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_msq(struct bno055_accel_double_t *accel
5002:Core/Src/bno055.c **** {
5003:Core/Src/bno055.c ****     /* Variable used to return value of
5004:Core/Src/bno055.c ****      * communication routine*/
5005:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5006:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5007:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5008:Core/Src/bno055.c **** 
5009:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5010:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5011:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5012:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
5013:Core/Src/bno055.c ****     {
5014:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MSQ);
5015:Core/Src/bno055.c ****     }
5016:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5017:Core/Src/bno055.c ****     {
5018:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5019:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
ARM GAS  /tmp/ccO72alg.s 			page 203


5020:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5021:Core/Src/bno055.c ****         {
5022:Core/Src/bno055.c ****             /* Convert raw xyz to m/s2*/
5023:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MSQ);
5024:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
5025:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
5026:Core/Src/bno055.c ****         }
5027:Core/Src/bno055.c ****         else
5028:Core/Src/bno055.c ****         {
5029:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5030:Core/Src/bno055.c ****         }
5031:Core/Src/bno055.c ****     }
5032:Core/Src/bno055.c ****     else
5033:Core/Src/bno055.c ****     {
5034:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5035:Core/Src/bno055.c ****     }
5036:Core/Src/bno055.c **** 
5037:Core/Src/bno055.c ****     return com_rslt;
5038:Core/Src/bno055.c **** }
5039:Core/Src/bno055.c **** 
5040:Core/Src/bno055.c **** /*!
5041:Core/Src/bno055.c ****  *  @brief This API is used to convert the accel xyz raw data
5042:Core/Src/bno055.c ****  *  to millig output as double
5043:Core/Src/bno055.c ****  *
5044:Core/Src/bno055.c ****  *  @param accel_xyz : The millig data of accel xyz
5045:Core/Src/bno055.c ****  *
5046:Core/Src/bno055.c ****  *  Parameter |    result
5047:Core/Src/bno055.c ****  *  --------- | -----------------
5048:Core/Src/bno055.c ****  *   x        | millig data of accel
5049:Core/Src/bno055.c ****  *   y        | millig data of accel
5050:Core/Src/bno055.c ****  *   z        | millig data of accel
5051:Core/Src/bno055.c ****  *
5052:Core/Src/bno055.c ****  *
5053:Core/Src/bno055.c ****  *  @return results of bus communication function
5054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5056:Core/Src/bno055.c ****  *
5057:Core/Src/bno055.c ****  */
5058:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_accel_xyz_mg(struct bno055_accel_double_t *accel_
5059:Core/Src/bno055.c **** {
5060:Core/Src/bno055.c ****     /* Variable used to return value of
5061:Core/Src/bno055.c ****      * communication routine*/
5062:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5063:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
5064:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
5065:Core/Src/bno055.c **** 
5066:Core/Src/bno055.c ****     /* Read the current accel unit and set the
5067:Core/Src/bno055.c ****      * unit as m/s2 if the unit is in mg*/
5068:Core/Src/bno055.c ****     com_rslt = bno055_get_accel_unit(&accel_unit_u8);
5069:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
5070:Core/Src/bno055.c ****     {
5071:Core/Src/bno055.c ****         com_rslt += bno055_set_accel_unit(BNO055_ACCEL_UNIT_MG);
5072:Core/Src/bno055.c ****     }
5073:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5074:Core/Src/bno055.c ****     {
5075:Core/Src/bno055.c ****         /* Read the accel raw xyz data*/
5076:Core/Src/bno055.c ****         com_rslt += bno055_read_accel_xyz(&reg_accel_xyz);
ARM GAS  /tmp/ccO72alg.s 			page 204


5077:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5078:Core/Src/bno055.c ****         {
5079:Core/Src/bno055.c ****             /* Convert raw xyz to mg*/
5080:Core/Src/bno055.c ****             accel_xyz->x = (double)(reg_accel_xyz.x / BNO055_ACCEL_DIV_MG);
5081:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
5082:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
5083:Core/Src/bno055.c ****         }
5084:Core/Src/bno055.c ****         else
5085:Core/Src/bno055.c ****         {
5086:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5087:Core/Src/bno055.c ****         }
5088:Core/Src/bno055.c ****     }
5089:Core/Src/bno055.c ****     else
5090:Core/Src/bno055.c ****     {
5091:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5092:Core/Src/bno055.c ****     }
5093:Core/Src/bno055.c **** 
5094:Core/Src/bno055.c ****     return com_rslt;
5095:Core/Src/bno055.c **** }
5096:Core/Src/bno055.c **** 
5097:Core/Src/bno055.c **** /*!
5098:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag x raw data
5099:Core/Src/bno055.c ****  *  to microTesla output as double
5100:Core/Src/bno055.c ****  *
5101:Core/Src/bno055.c ****  *  @param mag_x_d : The mag x microTesla data
5102:Core/Src/bno055.c ****  *
5103:Core/Src/bno055.c ****  *
5104:Core/Src/bno055.c ****  *
5105:Core/Src/bno055.c ****  *  @return results of bus communication function
5106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5108:Core/Src/bno055.c ****  *
5109:Core/Src/bno055.c ****  *
5110:Core/Src/bno055.c ****  *
5111:Core/Src/bno055.c ****  */
5112:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_x_uT(double *mag_x_d)
5113:Core/Src/bno055.c **** {
 6172              		.loc 1 5113 1 is_stmt 1 view -0
 6173              		.cfi_startproc
 6174              		@ args = 0, pretend = 0, frame = 8
 6175              		@ frame_needed = 0, uses_anonymous_args = 0
 6176              		.loc 1 5113 1 is_stmt 0 view .LVU1679
 6177 0000 30B5     		push	{r4, r5, lr}
 6178              	.LCFI205:
 6179              		.cfi_def_cfa_offset 12
 6180              		.cfi_offset 4, -12
 6181              		.cfi_offset 5, -8
 6182              		.cfi_offset 14, -4
 6183 0002 83B0     		sub	sp, sp, #12
 6184              	.LCFI206:
 6185              		.cfi_def_cfa_offset 24
 6186 0004 0446     		mov	r4, r0
5114:Core/Src/bno055.c ****     /* Variable used to return value of
5115:Core/Src/bno055.c ****      * communication routine*/
5116:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6187              		.loc 1 5116 5 is_stmt 1 view .LVU1680
 6188              	.LVL634:
ARM GAS  /tmp/ccO72alg.s 			page 205


5117:Core/Src/bno055.c ****     s16 reg_mag_x_s16 = BNO055_INIT_VALUE;
 6189              		.loc 1 5117 5 view .LVU1681
 6190              		.loc 1 5117 9 is_stmt 0 view .LVU1682
 6191 0006 0023     		movs	r3, #0
 6192 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5118:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6193              		.loc 1 5118 5 is_stmt 1 view .LVU1683
 6194              	.LVL635:
5119:Core/Src/bno055.c **** 
5120:Core/Src/bno055.c ****     /* Read raw mag x data */
5121:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_x(&reg_mag_x_s16);
 6195              		.loc 1 5121 5 view .LVU1684
 6196              		.loc 1 5121 16 is_stmt 0 view .LVU1685
 6197 000c 0DF10600 		add	r0, sp, #6
 6198              	.LVL636:
 6199              		.loc 1 5121 16 view .LVU1686
 6200 0010 FFF7FEFF 		bl	bno055_read_mag_x
 6201              	.LVL637:
5122:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6202              		.loc 1 5122 5 is_stmt 1 view .LVU1687
 6203              		.loc 1 5122 8 is_stmt 0 view .LVU1688
 6204 0014 68B9     		cbnz	r0, .L465
 6205 0016 0546     		mov	r5, r0
5123:Core/Src/bno055.c ****     {
5124:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5125:Core/Src/bno055.c ****         data_d = (double)(reg_mag_x_s16 / BNO055_MAG_DIV_UT);
 6206              		.loc 1 5125 9 is_stmt 1 view .LVU1689
 6207              		.loc 1 5125 18 is_stmt 0 view .LVU1690
 6208 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6209              	.LVL638:
 6210              		.loc 1 5125 18 view .LVU1691
 6211 001c FFF7FEFF 		bl	__aeabi_i2d
 6212              	.LVL639:
 6213              		.loc 1 5125 16 view .LVU1692
 6214 0020 0022     		movs	r2, #0
 6215 0022 054B     		ldr	r3, .L467
 6216 0024 FFF7FEFF 		bl	__aeabi_dmul
 6217              	.LVL640:
5126:Core/Src/bno055.c ****         *mag_x_d = data_d;
 6218              		.loc 1 5126 9 is_stmt 1 view .LVU1693
 6219              		.loc 1 5126 18 is_stmt 0 view .LVU1694
 6220 0028 C4E90001 		strd	r0, [r4]
 6221              	.LVL641:
 6222              	.L464:
5127:Core/Src/bno055.c ****     }
5128:Core/Src/bno055.c ****     else
5129:Core/Src/bno055.c ****     {
5130:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5131:Core/Src/bno055.c ****     }
5132:Core/Src/bno055.c **** 
5133:Core/Src/bno055.c ****     return com_rslt;
 6223              		.loc 1 5133 5 is_stmt 1 view .LVU1695
5134:Core/Src/bno055.c **** }
 6224              		.loc 1 5134 1 is_stmt 0 view .LVU1696
 6225 002c 2846     		mov	r0, r5
 6226 002e 03B0     		add	sp, sp, #12
 6227              	.LCFI207:
ARM GAS  /tmp/ccO72alg.s 			page 206


 6228              		.cfi_remember_state
 6229              		.cfi_def_cfa_offset 12
 6230              		@ sp needed
 6231 0030 30BD     		pop	{r4, r5, pc}
 6232              	.LVL642:
 6233              	.L465:
 6234              	.LCFI208:
 6235              		.cfi_restore_state
5130:Core/Src/bno055.c ****     }
 6236              		.loc 1 5130 18 view .LVU1697
 6237 0032 4FF0FF35 		mov	r5, #-1
 6238 0036 F9E7     		b	.L464
 6239              	.L468:
 6240              		.align	2
 6241              	.L467:
 6242 0038 0000B03F 		.word	1068498944
 6243              		.cfi_endproc
 6244              	.LFE87:
 6246              		.section	.text.bno055_convert_double_mag_y_uT,"ax",%progbits
 6247              		.align	1
 6248              		.global	bno055_convert_double_mag_y_uT
 6249              		.syntax unified
 6250              		.thumb
 6251              		.thumb_func
 6253              	bno055_convert_double_mag_y_uT:
 6254              	.LVL643:
 6255              	.LFB88:
5135:Core/Src/bno055.c **** 
5136:Core/Src/bno055.c **** /*!
5137:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag y raw data
5138:Core/Src/bno055.c ****  *  to microTesla output as double
5139:Core/Src/bno055.c ****  *
5140:Core/Src/bno055.c ****  *  @param mag_y_d : The mag y microTesla data
5141:Core/Src/bno055.c ****  *
5142:Core/Src/bno055.c ****  *
5143:Core/Src/bno055.c ****  *
5144:Core/Src/bno055.c ****  *  @return results of bus communication function
5145:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5146:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5147:Core/Src/bno055.c ****  *
5148:Core/Src/bno055.c ****  *
5149:Core/Src/bno055.c ****  */
5150:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_y_uT(double *mag_y_d)
5151:Core/Src/bno055.c **** {
 6256              		.loc 1 5151 1 is_stmt 1 view -0
 6257              		.cfi_startproc
 6258              		@ args = 0, pretend = 0, frame = 8
 6259              		@ frame_needed = 0, uses_anonymous_args = 0
 6260              		.loc 1 5151 1 is_stmt 0 view .LVU1699
 6261 0000 30B5     		push	{r4, r5, lr}
 6262              	.LCFI209:
 6263              		.cfi_def_cfa_offset 12
 6264              		.cfi_offset 4, -12
 6265              		.cfi_offset 5, -8
 6266              		.cfi_offset 14, -4
 6267 0002 83B0     		sub	sp, sp, #12
 6268              	.LCFI210:
ARM GAS  /tmp/ccO72alg.s 			page 207


 6269              		.cfi_def_cfa_offset 24
 6270 0004 0446     		mov	r4, r0
5152:Core/Src/bno055.c ****     /* Variable used to return value of
5153:Core/Src/bno055.c ****      * communication routine*/
5154:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6271              		.loc 1 5154 5 is_stmt 1 view .LVU1700
 6272              	.LVL644:
5155:Core/Src/bno055.c ****     s16 reg_mag_y_s16 = BNO055_INIT_VALUE;
 6273              		.loc 1 5155 5 view .LVU1701
 6274              		.loc 1 5155 9 is_stmt 0 view .LVU1702
 6275 0006 0023     		movs	r3, #0
 6276 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5156:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6277              		.loc 1 5156 5 is_stmt 1 view .LVU1703
 6278              	.LVL645:
5157:Core/Src/bno055.c **** 
5158:Core/Src/bno055.c ****     /* Read raw mag y data */
5159:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_y(&reg_mag_y_s16);
 6279              		.loc 1 5159 5 view .LVU1704
 6280              		.loc 1 5159 16 is_stmt 0 view .LVU1705
 6281 000c 0DF10600 		add	r0, sp, #6
 6282              	.LVL646:
 6283              		.loc 1 5159 16 view .LVU1706
 6284 0010 FFF7FEFF 		bl	bno055_read_mag_y
 6285              	.LVL647:
5160:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6286              		.loc 1 5160 5 is_stmt 1 view .LVU1707
 6287              		.loc 1 5160 8 is_stmt 0 view .LVU1708
 6288 0014 68B9     		cbnz	r0, .L471
 6289 0016 0546     		mov	r5, r0
5161:Core/Src/bno055.c ****     {
5162:Core/Src/bno055.c ****         /* Convert raw mag y to microTesla */
5163:Core/Src/bno055.c ****         data_d = (double)(reg_mag_y_s16 / BNO055_MAG_DIV_UT);
 6290              		.loc 1 5163 9 is_stmt 1 view .LVU1709
 6291              		.loc 1 5163 18 is_stmt 0 view .LVU1710
 6292 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6293              	.LVL648:
 6294              		.loc 1 5163 18 view .LVU1711
 6295 001c FFF7FEFF 		bl	__aeabi_i2d
 6296              	.LVL649:
 6297              		.loc 1 5163 16 view .LVU1712
 6298 0020 0022     		movs	r2, #0
 6299 0022 054B     		ldr	r3, .L473
 6300 0024 FFF7FEFF 		bl	__aeabi_dmul
 6301              	.LVL650:
5164:Core/Src/bno055.c ****         *mag_y_d = data_d;
 6302              		.loc 1 5164 9 is_stmt 1 view .LVU1713
 6303              		.loc 1 5164 18 is_stmt 0 view .LVU1714
 6304 0028 C4E90001 		strd	r0, [r4]
 6305              	.LVL651:
 6306              	.L470:
5165:Core/Src/bno055.c ****     }
5166:Core/Src/bno055.c ****     else
5167:Core/Src/bno055.c ****     {
5168:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5169:Core/Src/bno055.c ****     }
5170:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 208


5171:Core/Src/bno055.c ****     return com_rslt;
 6307              		.loc 1 5171 5 is_stmt 1 view .LVU1715
5172:Core/Src/bno055.c **** }
 6308              		.loc 1 5172 1 is_stmt 0 view .LVU1716
 6309 002c 2846     		mov	r0, r5
 6310 002e 03B0     		add	sp, sp, #12
 6311              	.LCFI211:
 6312              		.cfi_remember_state
 6313              		.cfi_def_cfa_offset 12
 6314              		@ sp needed
 6315 0030 30BD     		pop	{r4, r5, pc}
 6316              	.LVL652:
 6317              	.L471:
 6318              	.LCFI212:
 6319              		.cfi_restore_state
5168:Core/Src/bno055.c ****     }
 6320              		.loc 1 5168 18 view .LVU1717
 6321 0032 4FF0FF35 		mov	r5, #-1
 6322 0036 F9E7     		b	.L470
 6323              	.L474:
 6324              		.align	2
 6325              	.L473:
 6326 0038 0000B03F 		.word	1068498944
 6327              		.cfi_endproc
 6328              	.LFE88:
 6330              		.section	.text.bno055_convert_double_mag_z_uT,"ax",%progbits
 6331              		.align	1
 6332              		.global	bno055_convert_double_mag_z_uT
 6333              		.syntax unified
 6334              		.thumb
 6335              		.thumb_func
 6337              	bno055_convert_double_mag_z_uT:
 6338              	.LVL653:
 6339              	.LFB89:
5173:Core/Src/bno055.c **** 
5174:Core/Src/bno055.c **** /*!
5175:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag z raw data
5176:Core/Src/bno055.c ****  *  to microTesla output as double
5177:Core/Src/bno055.c ****  *
5178:Core/Src/bno055.c ****  *  @param mag_z_d : The mag z microTesla data
5179:Core/Src/bno055.c ****  *
5180:Core/Src/bno055.c ****  *
5181:Core/Src/bno055.c ****  *
5182:Core/Src/bno055.c ****  *  @return results of bus communication function
5183:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5184:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5185:Core/Src/bno055.c ****  *
5186:Core/Src/bno055.c ****  *
5187:Core/Src/bno055.c ****  */
5188:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_z_uT(double *mag_z_d)
5189:Core/Src/bno055.c **** {
 6340              		.loc 1 5189 1 is_stmt 1 view -0
 6341              		.cfi_startproc
 6342              		@ args = 0, pretend = 0, frame = 8
 6343              		@ frame_needed = 0, uses_anonymous_args = 0
 6344              		.loc 1 5189 1 is_stmt 0 view .LVU1719
 6345 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccO72alg.s 			page 209


 6346              	.LCFI213:
 6347              		.cfi_def_cfa_offset 12
 6348              		.cfi_offset 4, -12
 6349              		.cfi_offset 5, -8
 6350              		.cfi_offset 14, -4
 6351 0002 83B0     		sub	sp, sp, #12
 6352              	.LCFI214:
 6353              		.cfi_def_cfa_offset 24
 6354 0004 0446     		mov	r4, r0
5190:Core/Src/bno055.c ****     /* Variable used to return value of
5191:Core/Src/bno055.c ****      * communication routine*/
5192:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6355              		.loc 1 5192 5 is_stmt 1 view .LVU1720
 6356              	.LVL654:
5193:Core/Src/bno055.c ****     s16 reg_mag_z_s16 = BNO055_INIT_VALUE;
 6357              		.loc 1 5193 5 view .LVU1721
 6358              		.loc 1 5193 9 is_stmt 0 view .LVU1722
 6359 0006 0023     		movs	r3, #0
 6360 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5194:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6361              		.loc 1 5194 5 is_stmt 1 view .LVU1723
 6362              	.LVL655:
5195:Core/Src/bno055.c **** 
5196:Core/Src/bno055.c ****     /* Read raw mag x */
5197:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_z(&reg_mag_z_s16);
 6363              		.loc 1 5197 5 view .LVU1724
 6364              		.loc 1 5197 16 is_stmt 0 view .LVU1725
 6365 000c 0DF10600 		add	r0, sp, #6
 6366              	.LVL656:
 6367              		.loc 1 5197 16 view .LVU1726
 6368 0010 FFF7FEFF 		bl	bno055_read_mag_z
 6369              	.LVL657:
5198:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6370              		.loc 1 5198 5 is_stmt 1 view .LVU1727
 6371              		.loc 1 5198 8 is_stmt 0 view .LVU1728
 6372 0014 68B9     		cbnz	r0, .L477
 6373 0016 0546     		mov	r5, r0
5199:Core/Src/bno055.c ****     {
5200:Core/Src/bno055.c ****         /* Convert raw mag x to microTesla */
5201:Core/Src/bno055.c ****         data_d = (double)(reg_mag_z_s16 / BNO055_MAG_DIV_UT);
 6374              		.loc 1 5201 9 is_stmt 1 view .LVU1729
 6375              		.loc 1 5201 18 is_stmt 0 view .LVU1730
 6376 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6377              	.LVL658:
 6378              		.loc 1 5201 18 view .LVU1731
 6379 001c FFF7FEFF 		bl	__aeabi_i2d
 6380              	.LVL659:
 6381              		.loc 1 5201 16 view .LVU1732
 6382 0020 0022     		movs	r2, #0
 6383 0022 054B     		ldr	r3, .L479
 6384 0024 FFF7FEFF 		bl	__aeabi_dmul
 6385              	.LVL660:
5202:Core/Src/bno055.c ****         *mag_z_d = data_d;
 6386              		.loc 1 5202 9 is_stmt 1 view .LVU1733
 6387              		.loc 1 5202 18 is_stmt 0 view .LVU1734
 6388 0028 C4E90001 		strd	r0, [r4]
 6389              	.LVL661:
ARM GAS  /tmp/ccO72alg.s 			page 210


 6390              	.L476:
5203:Core/Src/bno055.c ****     }
5204:Core/Src/bno055.c ****     else
5205:Core/Src/bno055.c ****     {
5206:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5207:Core/Src/bno055.c ****     }
5208:Core/Src/bno055.c **** 
5209:Core/Src/bno055.c ****     return com_rslt;
 6391              		.loc 1 5209 5 is_stmt 1 view .LVU1735
5210:Core/Src/bno055.c **** }
 6392              		.loc 1 5210 1 is_stmt 0 view .LVU1736
 6393 002c 2846     		mov	r0, r5
 6394 002e 03B0     		add	sp, sp, #12
 6395              	.LCFI215:
 6396              		.cfi_remember_state
 6397              		.cfi_def_cfa_offset 12
 6398              		@ sp needed
 6399 0030 30BD     		pop	{r4, r5, pc}
 6400              	.LVL662:
 6401              	.L477:
 6402              	.LCFI216:
 6403              		.cfi_restore_state
5206:Core/Src/bno055.c ****     }
 6404              		.loc 1 5206 18 view .LVU1737
 6405 0032 4FF0FF35 		mov	r5, #-1
 6406 0036 F9E7     		b	.L476
 6407              	.L480:
 6408              		.align	2
 6409              	.L479:
 6410 0038 0000B03F 		.word	1068498944
 6411              		.cfi_endproc
 6412              	.LFE89:
 6414              		.section	.text.bno055_convert_double_mag_xyz_uT,"ax",%progbits
 6415              		.align	1
 6416              		.global	bno055_convert_double_mag_xyz_uT
 6417              		.syntax unified
 6418              		.thumb
 6419              		.thumb_func
 6421              	bno055_convert_double_mag_xyz_uT:
 6422              	.LVL663:
 6423              	.LFB90:
5211:Core/Src/bno055.c **** 
5212:Core/Src/bno055.c **** /*!
5213:Core/Src/bno055.c ****  *  @brief This API is used to convert the mag yz raw data
5214:Core/Src/bno055.c ****  *  to microTesla output as double
5215:Core/Src/bno055.c ****  *
5216:Core/Src/bno055.c ****  *  @param mag_xyz : The microTesla data of mag xyz
5217:Core/Src/bno055.c ****  *
5218:Core/Src/bno055.c ****  *  Parameter |    result
5219:Core/Src/bno055.c ****  *  --------- | -----------------
5220:Core/Src/bno055.c ****  *   x        | microTesla data of mag
5221:Core/Src/bno055.c ****  *   y        | microTesla data of mag
5222:Core/Src/bno055.c ****  *   z        | microTesla data of mag
5223:Core/Src/bno055.c ****  *
5224:Core/Src/bno055.c ****  *
5225:Core/Src/bno055.c ****  *  @return results of bus communication function
5226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccO72alg.s 			page 211


5227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5228:Core/Src/bno055.c ****  *
5229:Core/Src/bno055.c ****  */
5230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_mag_xyz_uT(struct bno055_mag_double_t *mag_xyz)
5231:Core/Src/bno055.c **** {
 6424              		.loc 1 5231 1 is_stmt 1 view -0
 6425              		.cfi_startproc
 6426              		@ args = 0, pretend = 0, frame = 8
 6427              		@ frame_needed = 0, uses_anonymous_args = 0
 6428              		.loc 1 5231 1 is_stmt 0 view .LVU1739
 6429 0000 30B5     		push	{r4, r5, lr}
 6430              	.LCFI217:
 6431              		.cfi_def_cfa_offset 12
 6432              		.cfi_offset 4, -12
 6433              		.cfi_offset 5, -8
 6434              		.cfi_offset 14, -4
 6435 0002 83B0     		sub	sp, sp, #12
 6436              	.LCFI218:
 6437              		.cfi_def_cfa_offset 24
 6438 0004 0446     		mov	r4, r0
5232:Core/Src/bno055.c ****     /* Variable used to return value of
5233:Core/Src/bno055.c ****      * communication routine*/
5234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6439              		.loc 1 5234 5 is_stmt 1 view .LVU1740
 6440              	.LVL664:
5235:Core/Src/bno055.c ****     struct bno055_mag_t reg_mag_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 6441              		.loc 1 5235 5 view .LVU1741
 6442              		.loc 1 5235 25 is_stmt 0 view .LVU1742
 6443 0006 0023     		movs	r3, #0
 6444 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6445 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6446 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
5236:Core/Src/bno055.c **** 
5237:Core/Src/bno055.c ****     /* Read raw mag xyz data */
5238:Core/Src/bno055.c ****     com_rslt = bno055_read_mag_xyz(&reg_mag_xyz);
 6447              		.loc 1 5238 5 is_stmt 1 view .LVU1743
 6448              		.loc 1 5238 16 is_stmt 0 view .LVU1744
 6449 0014 6846     		mov	r0, sp
 6450              	.LVL665:
 6451              		.loc 1 5238 16 view .LVU1745
 6452 0016 FFF7FEFF 		bl	bno055_read_mag_xyz
 6453              	.LVL666:
5239:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6454              		.loc 1 5239 5 is_stmt 1 view .LVU1746
 6455              		.loc 1 5239 8 is_stmt 0 view .LVU1747
 6456 001a 08BB     		cbnz	r0, .L483
 6457 001c 0546     		mov	r5, r0
5240:Core/Src/bno055.c ****     {
5241:Core/Src/bno055.c ****         /* Convert raw mag xyz to microTesla*/
5242:Core/Src/bno055.c ****         mag_xyz->x = (double)(reg_mag_xyz.x / BNO055_MAG_DIV_UT);
 6458              		.loc 1 5242 9 is_stmt 1 view .LVU1748
 6459              		.loc 1 5242 22 is_stmt 0 view .LVU1749
 6460 001e BDF90000 		ldrsh	r0, [sp]
 6461              	.LVL667:
 6462              		.loc 1 5242 22 view .LVU1750
 6463 0022 FFF7FEFF 		bl	__aeabi_i2d
 6464              	.LVL668:
ARM GAS  /tmp/ccO72alg.s 			page 212


 6465 0026 0022     		movs	r2, #0
 6466 0028 0F4B     		ldr	r3, .L485
 6467 002a FFF7FEFF 		bl	__aeabi_dmul
 6468              	.LVL669:
 6469              		.loc 1 5242 20 view .LVU1751
 6470 002e C4E90001 		strd	r0, [r4]
5243:Core/Src/bno055.c ****         mag_xyz->y = (double)(reg_mag_xyz.y / BNO055_MAG_DIV_UT);
 6471              		.loc 1 5243 9 is_stmt 1 view .LVU1752
 6472              		.loc 1 5243 22 is_stmt 0 view .LVU1753
 6473 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6474 0036 FFF7FEFF 		bl	__aeabi_i2d
 6475              	.LVL670:
 6476 003a 0022     		movs	r2, #0
 6477 003c 0A4B     		ldr	r3, .L485
 6478 003e FFF7FEFF 		bl	__aeabi_dmul
 6479              	.LVL671:
 6480              		.loc 1 5243 20 view .LVU1754
 6481 0042 C4E90201 		strd	r0, [r4, #8]
5244:Core/Src/bno055.c ****         mag_xyz->z = (double)(reg_mag_xyz.z / BNO055_MAG_DIV_UT);
 6482              		.loc 1 5244 9 is_stmt 1 view .LVU1755
 6483              		.loc 1 5244 22 is_stmt 0 view .LVU1756
 6484 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6485 004a FFF7FEFF 		bl	__aeabi_i2d
 6486              	.LVL672:
 6487 004e 0022     		movs	r2, #0
 6488 0050 054B     		ldr	r3, .L485
 6489 0052 FFF7FEFF 		bl	__aeabi_dmul
 6490              	.LVL673:
 6491              		.loc 1 5244 20 view .LVU1757
 6492 0056 C4E90401 		strd	r0, [r4, #16]
 6493              	.L482:
 6494              	.LVL674:
5245:Core/Src/bno055.c ****     }
5246:Core/Src/bno055.c ****     else
5247:Core/Src/bno055.c ****     {
5248:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5249:Core/Src/bno055.c ****     }
5250:Core/Src/bno055.c **** 
5251:Core/Src/bno055.c ****     return com_rslt;
 6495              		.loc 1 5251 5 is_stmt 1 view .LVU1758
5252:Core/Src/bno055.c **** }
 6496              		.loc 1 5252 1 is_stmt 0 view .LVU1759
 6497 005a 2846     		mov	r0, r5
 6498 005c 03B0     		add	sp, sp, #12
 6499              	.LCFI219:
 6500              		.cfi_remember_state
 6501              		.cfi_def_cfa_offset 12
 6502              		@ sp needed
 6503 005e 30BD     		pop	{r4, r5, pc}
 6504              	.LVL675:
 6505              	.L483:
 6506              	.LCFI220:
 6507              		.cfi_restore_state
5248:Core/Src/bno055.c ****     }
 6508              		.loc 1 5248 18 view .LVU1760
 6509 0060 4FF0FF35 		mov	r5, #-1
 6510 0064 F9E7     		b	.L482
ARM GAS  /tmp/ccO72alg.s 			page 213


 6511              	.L486:
 6512 0066 00BF     		.align	2
 6513              	.L485:
 6514 0068 0000B03F 		.word	1068498944
 6515              		.cfi_endproc
 6516              	.LFE90:
 6518              		.section	.text.bno055_convert_double_linear_accel_x_msq,"ax",%progbits
 6519              		.align	1
 6520              		.global	bno055_convert_double_linear_accel_x_msq
 6521              		.syntax unified
 6522              		.thumb
 6523              		.thumb_func
 6525              	bno055_convert_double_linear_accel_x_msq:
 6526              	.LVL676:
 6527              	.LFB107:
5253:Core/Src/bno055.c **** 
5254:Core/Src/bno055.c **** /*!
5255:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5256:Core/Src/bno055.c ****  *  to dps output as double
5257:Core/Src/bno055.c ****  *
5258:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5259:Core/Src/bno055.c ****  *
5260:Core/Src/bno055.c ****  *
5261:Core/Src/bno055.c ****  *
5262:Core/Src/bno055.c ****  *  @return results of bus communication function
5263:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5264:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5265:Core/Src/bno055.c ****  *
5266:Core/Src/bno055.c ****  *
5267:Core/Src/bno055.c ****  */
5268:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_dps(double *gyro_x_d)
5269:Core/Src/bno055.c **** {
5270:Core/Src/bno055.c ****     /* Variable used to return value of
5271:Core/Src/bno055.c ****      * communication routine*/
5272:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5273:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5274:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5275:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5276:Core/Src/bno055.c **** 
5277:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5278:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5279:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5280:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5281:Core/Src/bno055.c ****     {
5282:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5283:Core/Src/bno055.c ****     }
5284:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5285:Core/Src/bno055.c ****     {
5286:Core/Src/bno055.c ****         /* Read gyro raw x data */
5287:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5288:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5289:Core/Src/bno055.c ****         {
5290:Core/Src/bno055.c ****             /* Convert raw gyro x to dps */
5291:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_DPS);
5292:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5293:Core/Src/bno055.c ****         }
5294:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccO72alg.s 			page 214


5295:Core/Src/bno055.c ****         {
5296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5297:Core/Src/bno055.c ****         }
5298:Core/Src/bno055.c ****     }
5299:Core/Src/bno055.c ****     else
5300:Core/Src/bno055.c ****     {
5301:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5302:Core/Src/bno055.c ****     }
5303:Core/Src/bno055.c **** 
5304:Core/Src/bno055.c ****     return com_rslt;
5305:Core/Src/bno055.c **** }
5306:Core/Src/bno055.c **** 
5307:Core/Src/bno055.c **** /*!
5308:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro x raw data
5309:Core/Src/bno055.c ****  *  to rps output as double
5310:Core/Src/bno055.c ****  *
5311:Core/Src/bno055.c ****  *  @param gyro_x_d : The gyro x dps double data
5312:Core/Src/bno055.c ****  *
5313:Core/Src/bno055.c ****  *
5314:Core/Src/bno055.c ****  *
5315:Core/Src/bno055.c ****  *  @return results of bus communication function
5316:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5317:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5318:Core/Src/bno055.c ****  *
5319:Core/Src/bno055.c ****  *
5320:Core/Src/bno055.c ****  */
5321:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_x_rps(double *gyro_x_d)
5322:Core/Src/bno055.c **** {
5323:Core/Src/bno055.c ****     /* Variable used to return value of
5324:Core/Src/bno055.c ****      * communication routine*/
5325:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5326:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
5327:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5328:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5329:Core/Src/bno055.c **** 
5330:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5331:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5332:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5333:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5334:Core/Src/bno055.c ****     {
5335:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5336:Core/Src/bno055.c ****     }
5337:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5338:Core/Src/bno055.c ****     {
5339:Core/Src/bno055.c ****         /* Read gyro raw x data */
5340:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_x(&reg_gyro_x_s16);
5341:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5342:Core/Src/bno055.c ****         {
5343:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5344:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_x_s16 / BNO055_GYRO_DIV_RPS);
5345:Core/Src/bno055.c ****             *gyro_x_d = data_d;
5346:Core/Src/bno055.c ****         }
5347:Core/Src/bno055.c ****         else
5348:Core/Src/bno055.c ****         {
5349:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5350:Core/Src/bno055.c ****         }
5351:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 215


5352:Core/Src/bno055.c ****     else
5353:Core/Src/bno055.c ****     {
5354:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5355:Core/Src/bno055.c ****     }
5356:Core/Src/bno055.c **** 
5357:Core/Src/bno055.c ****     return com_rslt;
5358:Core/Src/bno055.c **** }
5359:Core/Src/bno055.c **** 
5360:Core/Src/bno055.c **** /*!
5361:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5362:Core/Src/bno055.c ****  *  to dps output as double
5363:Core/Src/bno055.c ****  *
5364:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5365:Core/Src/bno055.c ****  *
5366:Core/Src/bno055.c ****  *
5367:Core/Src/bno055.c ****  *
5368:Core/Src/bno055.c ****  *  @return results of bus communication function
5369:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5370:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5371:Core/Src/bno055.c ****  *
5372:Core/Src/bno055.c ****  *
5373:Core/Src/bno055.c ****  */
5374:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_dps(double *gyro_y_d)
5375:Core/Src/bno055.c **** {
5376:Core/Src/bno055.c ****     /* Variable used to return value of
5377:Core/Src/bno055.c ****      * communication routine*/
5378:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5379:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5380:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5381:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5382:Core/Src/bno055.c **** 
5383:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5384:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5385:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5386:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5387:Core/Src/bno055.c ****     {
5388:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5389:Core/Src/bno055.c ****     }
5390:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5391:Core/Src/bno055.c ****     {
5392:Core/Src/bno055.c ****         /* Read gyro raw y data */
5393:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5394:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5395:Core/Src/bno055.c ****         {
5396:Core/Src/bno055.c ****             /* Convert raw gyro y to dps */
5397:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_DPS);
5398:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5399:Core/Src/bno055.c ****         }
5400:Core/Src/bno055.c ****         else
5401:Core/Src/bno055.c ****         {
5402:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5403:Core/Src/bno055.c ****         }
5404:Core/Src/bno055.c ****     }
5405:Core/Src/bno055.c ****     else
5406:Core/Src/bno055.c ****     {
5407:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5408:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 216


5409:Core/Src/bno055.c **** 
5410:Core/Src/bno055.c ****     return com_rslt;
5411:Core/Src/bno055.c **** }
5412:Core/Src/bno055.c **** 
5413:Core/Src/bno055.c **** /*!
5414:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro y raw data
5415:Core/Src/bno055.c ****  *  to rps output as double
5416:Core/Src/bno055.c ****  *
5417:Core/Src/bno055.c ****  *  @param gyro_y_d : The gyro y dps double data
5418:Core/Src/bno055.c ****  *
5419:Core/Src/bno055.c ****  *
5420:Core/Src/bno055.c ****  *
5421:Core/Src/bno055.c ****  *  @return results of bus communication function
5422:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5423:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5424:Core/Src/bno055.c ****  *
5425:Core/Src/bno055.c ****  *
5426:Core/Src/bno055.c ****  */
5427:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_y_rps(double *gyro_y_d)
5428:Core/Src/bno055.c **** {
5429:Core/Src/bno055.c ****     /* Variable used to return value of
5430:Core/Src/bno055.c ****      * communication routine*/
5431:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5432:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
5433:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5434:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5435:Core/Src/bno055.c **** 
5436:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5437:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5438:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5439:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5440:Core/Src/bno055.c ****     {
5441:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5442:Core/Src/bno055.c ****     }
5443:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5444:Core/Src/bno055.c ****     {
5445:Core/Src/bno055.c ****         /* Read gyro raw y data */
5446:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_y(&reg_gyro_y_s16);
5447:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5448:Core/Src/bno055.c ****         {
5449:Core/Src/bno055.c ****             /* Convert raw gyro y to rps */
5450:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_y_s16 / BNO055_GYRO_DIV_RPS);
5451:Core/Src/bno055.c ****             *gyro_y_d = data_d;
5452:Core/Src/bno055.c ****         }
5453:Core/Src/bno055.c ****         else
5454:Core/Src/bno055.c ****         {
5455:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5456:Core/Src/bno055.c ****         }
5457:Core/Src/bno055.c ****     }
5458:Core/Src/bno055.c ****     else
5459:Core/Src/bno055.c ****     {
5460:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5461:Core/Src/bno055.c ****     }
5462:Core/Src/bno055.c **** 
5463:Core/Src/bno055.c ****     return com_rslt;
5464:Core/Src/bno055.c **** }
5465:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 217


5466:Core/Src/bno055.c **** /*!
5467:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5468:Core/Src/bno055.c ****  *  to dps output as double
5469:Core/Src/bno055.c ****  *
5470:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z dps double data
5471:Core/Src/bno055.c ****  *
5472:Core/Src/bno055.c ****  *
5473:Core/Src/bno055.c ****  *
5474:Core/Src/bno055.c ****  *  @return results of bus communication function
5475:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5476:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5477:Core/Src/bno055.c ****  *
5478:Core/Src/bno055.c ****  *
5479:Core/Src/bno055.c ****  */
5480:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_dps(double *gyro_z_d)
5481:Core/Src/bno055.c **** {
5482:Core/Src/bno055.c ****     /* Variable used to return value of
5483:Core/Src/bno055.c ****      * communication routine*/
5484:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5485:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5486:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5487:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5488:Core/Src/bno055.c **** 
5489:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5490:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5491:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5492:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5493:Core/Src/bno055.c ****     {
5494:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5495:Core/Src/bno055.c ****     }
5496:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5497:Core/Src/bno055.c ****     {
5498:Core/Src/bno055.c ****         /* Read gyro raw z data */
5499:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5500:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5501:Core/Src/bno055.c ****         {
5502:Core/Src/bno055.c ****             /* Convert raw gyro z to dps */
5503:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_DPS);
5504:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5505:Core/Src/bno055.c ****         }
5506:Core/Src/bno055.c ****         else
5507:Core/Src/bno055.c ****         {
5508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5509:Core/Src/bno055.c ****         }
5510:Core/Src/bno055.c ****     }
5511:Core/Src/bno055.c ****     else
5512:Core/Src/bno055.c ****     {
5513:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5514:Core/Src/bno055.c ****     }
5515:Core/Src/bno055.c **** 
5516:Core/Src/bno055.c ****     return com_rslt;
5517:Core/Src/bno055.c **** }
5518:Core/Src/bno055.c **** 
5519:Core/Src/bno055.c **** /*!
5520:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro z raw data
5521:Core/Src/bno055.c ****  *  to rps output as double
5522:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 218


5523:Core/Src/bno055.c ****  *  @param gyro_z_d : The gyro z rps double data
5524:Core/Src/bno055.c ****  *
5525:Core/Src/bno055.c ****  *
5526:Core/Src/bno055.c ****  *
5527:Core/Src/bno055.c ****  *  @return results of bus communication function
5528:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5529:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5530:Core/Src/bno055.c ****  *
5531:Core/Src/bno055.c ****  *
5532:Core/Src/bno055.c ****  */
5533:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_z_rps(double *gyro_z_d)
5534:Core/Src/bno055.c **** {
5535:Core/Src/bno055.c ****     /* Variable used to return value of
5536:Core/Src/bno055.c ****      * communication routine*/
5537:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5538:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
5539:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5540:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5541:Core/Src/bno055.c **** 
5542:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5543:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5544:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5545:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5546:Core/Src/bno055.c ****     {
5547:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5548:Core/Src/bno055.c ****     }
5549:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5550:Core/Src/bno055.c ****     {
5551:Core/Src/bno055.c ****         /* Read gyro raw x data */
5552:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_z(&reg_gyro_z_s16);
5553:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5554:Core/Src/bno055.c ****         {
5555:Core/Src/bno055.c ****             /* Convert raw gyro x to rps */
5556:Core/Src/bno055.c ****             data_d = (double)(reg_gyro_z_s16 / BNO055_GYRO_DIV_RPS);
5557:Core/Src/bno055.c ****             *gyro_z_d = data_d;
5558:Core/Src/bno055.c ****         }
5559:Core/Src/bno055.c ****         else
5560:Core/Src/bno055.c ****         {
5561:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5562:Core/Src/bno055.c ****         }
5563:Core/Src/bno055.c ****     }
5564:Core/Src/bno055.c ****     else
5565:Core/Src/bno055.c ****     {
5566:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5567:Core/Src/bno055.c ****     }
5568:Core/Src/bno055.c **** 
5569:Core/Src/bno055.c ****     return com_rslt;
5570:Core/Src/bno055.c **** }
5571:Core/Src/bno055.c **** 
5572:Core/Src/bno055.c **** /*!
5573:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5574:Core/Src/bno055.c ****  *  to dps output as double
5575:Core/Src/bno055.c ****  *
5576:Core/Src/bno055.c ****  *  @param gyro_xyz : The dps data of gyro xyz
5577:Core/Src/bno055.c ****  *
5578:Core/Src/bno055.c ****  *  Parameter |    result
5579:Core/Src/bno055.c ****  *  --------- | -----------------
ARM GAS  /tmp/ccO72alg.s 			page 219


5580:Core/Src/bno055.c ****  *   x        | dps data of gyro
5581:Core/Src/bno055.c ****  *   y        | dps data of gyro
5582:Core/Src/bno055.c ****  *   z        | dps data of gyro
5583:Core/Src/bno055.c ****  *
5584:Core/Src/bno055.c ****  *
5585:Core/Src/bno055.c ****  *  @return results of bus communication function
5586:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5587:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5588:Core/Src/bno055.c ****  *
5589:Core/Src/bno055.c ****  */
5590:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_dps(struct bno055_gyro_double_t *gyro_xy
5591:Core/Src/bno055.c **** {
5592:Core/Src/bno055.c ****     /* Variable used to return value of
5593:Core/Src/bno055.c ****      * communication routine*/
5594:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5595:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5596:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5597:Core/Src/bno055.c **** 
5598:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5599:Core/Src/bno055.c ****      * unit as dps if the unit is in rps */
5600:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5601:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
5602:Core/Src/bno055.c ****     {
5603:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_DPS);
5604:Core/Src/bno055.c ****     }
5605:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5606:Core/Src/bno055.c ****     {
5607:Core/Src/bno055.c ****         /* Read gyro raw xyz data */
5608:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5609:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5610:Core/Src/bno055.c ****         {
5611:Core/Src/bno055.c ****             /* Convert gyro raw xyz to dps*/
5612:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_DPS);
5613:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
5614:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
5615:Core/Src/bno055.c ****         }
5616:Core/Src/bno055.c ****         else
5617:Core/Src/bno055.c ****         {
5618:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5619:Core/Src/bno055.c ****         }
5620:Core/Src/bno055.c ****     }
5621:Core/Src/bno055.c ****     else
5622:Core/Src/bno055.c ****     {
5623:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5624:Core/Src/bno055.c ****     }
5625:Core/Src/bno055.c **** 
5626:Core/Src/bno055.c ****     return com_rslt;
5627:Core/Src/bno055.c **** }
5628:Core/Src/bno055.c **** 
5629:Core/Src/bno055.c **** /*!
5630:Core/Src/bno055.c ****  *  @brief This API is used to convert the gyro xyz raw data
5631:Core/Src/bno055.c ****  *  to rps output as double
5632:Core/Src/bno055.c ****  *
5633:Core/Src/bno055.c ****  *  @param gyro_xyz : The rps data of gyro xyz
5634:Core/Src/bno055.c ****  *
5635:Core/Src/bno055.c ****  *  Parameter |    result
5636:Core/Src/bno055.c ****  *  --------- | -----------------
ARM GAS  /tmp/ccO72alg.s 			page 220


5637:Core/Src/bno055.c ****  *   x        | rps data of gyro
5638:Core/Src/bno055.c ****  *   y        | rps data of gyro
5639:Core/Src/bno055.c ****  *   z        | rps data of gyro
5640:Core/Src/bno055.c ****  *
5641:Core/Src/bno055.c ****  *
5642:Core/Src/bno055.c ****  *  @return results of bus communication function
5643:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5644:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5645:Core/Src/bno055.c ****  *
5646:Core/Src/bno055.c ****  */
5647:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gyro_xyz_rps(struct bno055_gyro_double_t *gyro_xy
5648:Core/Src/bno055.c **** {
5649:Core/Src/bno055.c ****     /* Variable used to return value of
5650:Core/Src/bno055.c ****      * communication routine*/
5651:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5652:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
5653:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
5654:Core/Src/bno055.c **** 
5655:Core/Src/bno055.c ****     /* Read the current gyro unit and set the
5656:Core/Src/bno055.c ****      * unit as rps if the unit is in dps */
5657:Core/Src/bno055.c ****     com_rslt = bno055_get_gyro_unit(&gyro_unit_u8);
5658:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
5659:Core/Src/bno055.c ****     {
5660:Core/Src/bno055.c ****         com_rslt += bno055_set_gyro_unit(BNO055_GYRO_UNIT_RPS);
5661:Core/Src/bno055.c ****     }
5662:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5663:Core/Src/bno055.c ****     {
5664:Core/Src/bno055.c ****         /* Read gyro raw x data */
5665:Core/Src/bno055.c ****         com_rslt += bno055_read_gyro_xyz(&reg_gyro_xyz);
5666:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5667:Core/Src/bno055.c ****         {
5668:Core/Src/bno055.c ****             /* Convert the raw gyro xyz to rps*/
5669:Core/Src/bno055.c ****             gyro_xyz->x = (double)(reg_gyro_xyz.x / BNO055_GYRO_DIV_RPS);
5670:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
5671:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
5672:Core/Src/bno055.c ****         }
5673:Core/Src/bno055.c ****         else
5674:Core/Src/bno055.c ****         {
5675:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5676:Core/Src/bno055.c ****         }
5677:Core/Src/bno055.c ****     }
5678:Core/Src/bno055.c ****     else
5679:Core/Src/bno055.c ****     {
5680:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5681:Core/Src/bno055.c ****     }
5682:Core/Src/bno055.c **** 
5683:Core/Src/bno055.c ****     return com_rslt;
5684:Core/Src/bno055.c **** }
5685:Core/Src/bno055.c **** 
5686:Core/Src/bno055.c **** /*!
5687:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5688:Core/Src/bno055.c ****  *  to degree output as double
5689:Core/Src/bno055.c ****  *
5690:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h degree
5691:Core/Src/bno055.c ****  *
5692:Core/Src/bno055.c ****  *  @return results of bus communication function
5693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccO72alg.s 			page 221


5694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5695:Core/Src/bno055.c ****  *
5696:Core/Src/bno055.c ****  *
5697:Core/Src/bno055.c ****  */
5698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_deg(double *euler_h_d)
5699:Core/Src/bno055.c **** {
5700:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5701:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
5702:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5703:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5704:Core/Src/bno055.c **** 
5705:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5706:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5707:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5708:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5709:Core/Src/bno055.c ****     {
5710:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5711:Core/Src/bno055.c ****     }
5712:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5713:Core/Src/bno055.c ****     {
5714:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5715:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5716:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5717:Core/Src/bno055.c ****         {
5718:Core/Src/bno055.c ****             /* Convert raw Euler h to degree */
5719:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_DEG);
5720:Core/Src/bno055.c ****             *euler_h_d = data_d;
5721:Core/Src/bno055.c ****         }
5722:Core/Src/bno055.c ****         else
5723:Core/Src/bno055.c ****         {
5724:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5725:Core/Src/bno055.c ****         }
5726:Core/Src/bno055.c ****     }
5727:Core/Src/bno055.c ****     else
5728:Core/Src/bno055.c ****     {
5729:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5730:Core/Src/bno055.c ****     }
5731:Core/Src/bno055.c **** 
5732:Core/Src/bno055.c ****     return com_rslt;
5733:Core/Src/bno055.c **** }
5734:Core/Src/bno055.c **** 
5735:Core/Src/bno055.c **** /*!
5736:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler h raw data
5737:Core/Src/bno055.c ****  *  to radians output as double
5738:Core/Src/bno055.c ****  *
5739:Core/Src/bno055.c ****  *  @param euler_h_d : The double value of Euler h radians
5740:Core/Src/bno055.c ****  *
5741:Core/Src/bno055.c ****  *  @return results of bus communication function
5742:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5743:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5744:Core/Src/bno055.c ****  *
5745:Core/Src/bno055.c ****  *
5746:Core/Src/bno055.c ****  */
5747:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_h_rad(double *euler_h_d)
5748:Core/Src/bno055.c **** {
5749:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5750:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccO72alg.s 			page 222


5751:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5752:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5753:Core/Src/bno055.c **** 
5754:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5755:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5756:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5757:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5758:Core/Src/bno055.c ****     {
5759:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5760:Core/Src/bno055.c ****     }
5761:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5762:Core/Src/bno055.c ****     {
5763:Core/Src/bno055.c ****         /* Read Euler raw h data*/
5764:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_h(&reg_euler_h_s16);
5765:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5766:Core/Src/bno055.c ****         {
5767:Core/Src/bno055.c ****             /* Convert raw Euler h to radians */
5768:Core/Src/bno055.c ****             data_d = (double)(reg_euler_h_s16 / BNO055_EULER_DIV_RAD);
5769:Core/Src/bno055.c ****             *euler_h_d = data_d;
5770:Core/Src/bno055.c ****         }
5771:Core/Src/bno055.c ****         else
5772:Core/Src/bno055.c ****         {
5773:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5774:Core/Src/bno055.c ****         }
5775:Core/Src/bno055.c ****     }
5776:Core/Src/bno055.c ****     else
5777:Core/Src/bno055.c ****     {
5778:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5779:Core/Src/bno055.c ****     }
5780:Core/Src/bno055.c **** 
5781:Core/Src/bno055.c ****     return com_rslt;
5782:Core/Src/bno055.c **** }
5783:Core/Src/bno055.c **** 
5784:Core/Src/bno055.c **** /*!
5785:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5786:Core/Src/bno055.c ****  *  to degree output as double
5787:Core/Src/bno055.c ****  *
5788:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r degree
5789:Core/Src/bno055.c ****  *
5790:Core/Src/bno055.c ****  *  @return results of bus communication function
5791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5793:Core/Src/bno055.c ****  *
5794:Core/Src/bno055.c ****  *
5795:Core/Src/bno055.c ****  */
5796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_deg(double *euler_r_d)
5797:Core/Src/bno055.c **** {
5798:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5799:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5800:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5801:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5802:Core/Src/bno055.c **** 
5803:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5804:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5805:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5806:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5807:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 223


5808:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5809:Core/Src/bno055.c ****     }
5810:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5811:Core/Src/bno055.c ****     {
5812:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5813:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5814:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5815:Core/Src/bno055.c ****         {
5816:Core/Src/bno055.c ****             /* Convert raw Euler r to degree */
5817:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_DEG);
5818:Core/Src/bno055.c ****             *euler_r_d = data_d;
5819:Core/Src/bno055.c ****         }
5820:Core/Src/bno055.c ****         else
5821:Core/Src/bno055.c ****         {
5822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5823:Core/Src/bno055.c ****         }
5824:Core/Src/bno055.c ****     }
5825:Core/Src/bno055.c ****     else
5826:Core/Src/bno055.c ****     {
5827:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5828:Core/Src/bno055.c ****     }
5829:Core/Src/bno055.c **** 
5830:Core/Src/bno055.c ****     return com_rslt;
5831:Core/Src/bno055.c **** }
5832:Core/Src/bno055.c **** 
5833:Core/Src/bno055.c **** /*!
5834:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler r raw data
5835:Core/Src/bno055.c ****  *  to radians output as double
5836:Core/Src/bno055.c ****  *
5837:Core/Src/bno055.c ****  *  @param euler_r_d : The double value of Euler r radians
5838:Core/Src/bno055.c ****  *
5839:Core/Src/bno055.c ****  *  @return results of bus communication function
5840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5842:Core/Src/bno055.c ****  *
5843:Core/Src/bno055.c ****  *
5844:Core/Src/bno055.c ****  */
5845:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_r_rad(double *euler_r_d)
5846:Core/Src/bno055.c **** {
5847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5848:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
5849:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5850:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5851:Core/Src/bno055.c **** 
5852:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5853:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5854:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5855:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5856:Core/Src/bno055.c ****     {
5857:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5858:Core/Src/bno055.c ****     }
5859:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5860:Core/Src/bno055.c ****     {
5861:Core/Src/bno055.c ****         /* Read Euler raw r data*/
5862:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_r(&reg_euler_r_s16);
5863:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5864:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 224


5865:Core/Src/bno055.c ****             /* Convert raw Euler r to radians */
5866:Core/Src/bno055.c ****             data_d = (double)(reg_euler_r_s16 / BNO055_EULER_DIV_RAD);
5867:Core/Src/bno055.c ****             *euler_r_d = data_d;
5868:Core/Src/bno055.c ****         }
5869:Core/Src/bno055.c ****         else
5870:Core/Src/bno055.c ****         {
5871:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5872:Core/Src/bno055.c ****         }
5873:Core/Src/bno055.c ****     }
5874:Core/Src/bno055.c ****     else
5875:Core/Src/bno055.c ****     {
5876:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5877:Core/Src/bno055.c ****     }
5878:Core/Src/bno055.c **** 
5879:Core/Src/bno055.c ****     return com_rslt;
5880:Core/Src/bno055.c **** }
5881:Core/Src/bno055.c **** 
5882:Core/Src/bno055.c **** /*!
5883:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5884:Core/Src/bno055.c ****  *  to degree output as double
5885:Core/Src/bno055.c ****  *
5886:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p degree
5887:Core/Src/bno055.c ****  *
5888:Core/Src/bno055.c ****  *  @return results of bus communication function
5889:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5890:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5891:Core/Src/bno055.c ****  *
5892:Core/Src/bno055.c ****  *
5893:Core/Src/bno055.c ****  */
5894:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_deg(double *euler_p_d)
5895:Core/Src/bno055.c **** {
5896:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5897:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5898:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5899:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5900:Core/Src/bno055.c **** 
5901:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5902:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
5903:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5904:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
5905:Core/Src/bno055.c ****     {
5906:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
5907:Core/Src/bno055.c ****     }
5908:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5909:Core/Src/bno055.c ****     {
5910:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5911:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5912:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5913:Core/Src/bno055.c ****         {
5914:Core/Src/bno055.c ****             /* Convert raw Euler p to degree*/
5915:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_DEG);
5916:Core/Src/bno055.c ****             *euler_p_d = data_d;
5917:Core/Src/bno055.c ****         }
5918:Core/Src/bno055.c ****         else
5919:Core/Src/bno055.c ****         {
5920:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5921:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 225


5922:Core/Src/bno055.c ****     }
5923:Core/Src/bno055.c ****     else
5924:Core/Src/bno055.c ****     {
5925:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5926:Core/Src/bno055.c ****     }
5927:Core/Src/bno055.c **** 
5928:Core/Src/bno055.c ****     return com_rslt;
5929:Core/Src/bno055.c **** }
5930:Core/Src/bno055.c **** 
5931:Core/Src/bno055.c **** /*!
5932:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler p raw data
5933:Core/Src/bno055.c ****  *  to radians output as double
5934:Core/Src/bno055.c ****  *
5935:Core/Src/bno055.c ****  *  @param euler_p_d : The double value of Euler p radians
5936:Core/Src/bno055.c ****  *
5937:Core/Src/bno055.c ****  *  @return results of bus communication function
5938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5940:Core/Src/bno055.c ****  *
5941:Core/Src/bno055.c ****  *
5942:Core/Src/bno055.c ****  */
5943:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_p_rad(double *euler_p_d)
5944:Core/Src/bno055.c **** {
5945:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
5946:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
5947:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
5948:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
5949:Core/Src/bno055.c **** 
5950:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
5951:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
5952:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
5953:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
5954:Core/Src/bno055.c ****     {
5955:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
5956:Core/Src/bno055.c ****     }
5957:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
5958:Core/Src/bno055.c ****     {
5959:Core/Src/bno055.c ****         /* Read Euler raw p data*/
5960:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_p(&reg_euler_p_s16);
5961:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
5962:Core/Src/bno055.c ****         {
5963:Core/Src/bno055.c ****             /* Convert raw p to radians*/
5964:Core/Src/bno055.c ****             data_d = (double)(reg_euler_p_s16 / BNO055_EULER_DIV_RAD);
5965:Core/Src/bno055.c ****             *euler_p_d = data_d;
5966:Core/Src/bno055.c ****         }
5967:Core/Src/bno055.c ****         else
5968:Core/Src/bno055.c ****         {
5969:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
5970:Core/Src/bno055.c ****         }
5971:Core/Src/bno055.c ****     }
5972:Core/Src/bno055.c ****     else
5973:Core/Src/bno055.c ****     {
5974:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
5975:Core/Src/bno055.c ****     }
5976:Core/Src/bno055.c **** 
5977:Core/Src/bno055.c ****     return com_rslt;
5978:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 226


5979:Core/Src/bno055.c **** 
5980:Core/Src/bno055.c **** /*!
5981:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
5982:Core/Src/bno055.c ****  *  to degree output as double
5983:Core/Src/bno055.c ****  *
5984:Core/Src/bno055.c ****  *  @param euler_hpr : The degree data of Euler hpr
5985:Core/Src/bno055.c ****  *
5986:Core/Src/bno055.c ****  *  Parameter |    result
5987:Core/Src/bno055.c ****  *  --------- | -----------------
5988:Core/Src/bno055.c ****  *   h        | degree data of Euler
5989:Core/Src/bno055.c ****  *   r        | degree data of Euler
5990:Core/Src/bno055.c ****  *   p        | degree data of Euler
5991:Core/Src/bno055.c ****  *
5992:Core/Src/bno055.c ****  *
5993:Core/Src/bno055.c ****  *  @return results of bus communication function
5994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
5995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
5996:Core/Src/bno055.c ****  *
5997:Core/Src/bno055.c ****  */
5998:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_deg(struct bno055_euler_double_t *euler
5999:Core/Src/bno055.c **** {
6000:Core/Src/bno055.c ****     /* Variable used to return value of
6001:Core/Src/bno055.c ****      * communication routine*/
6002:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6003:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6004:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6005:Core/Src/bno055.c **** 
6006:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6007:Core/Src/bno055.c ****      * unit as degree if the unit is in radians */
6008:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6009:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
6010:Core/Src/bno055.c ****     {
6011:Core/Src/bno055.c ****         com_rslt += bno055_set_euler_unit(BNO055_EULER_UNIT_DEG);
6012:Core/Src/bno055.c ****     }
6013:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6014:Core/Src/bno055.c ****     {
6015:Core/Src/bno055.c ****         /* Read Euler raw h data*/
6016:Core/Src/bno055.c ****         com_rslt += bno055_read_euler_hrp(&reg_euler);
6017:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6018:Core/Src/bno055.c ****         {
6019:Core/Src/bno055.c ****             /* Convert raw Euler hrp to degree*/
6020:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_DEG);
6021:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
6022:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
6023:Core/Src/bno055.c ****         }
6024:Core/Src/bno055.c ****         else
6025:Core/Src/bno055.c ****         {
6026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6027:Core/Src/bno055.c ****         }
6028:Core/Src/bno055.c ****     }
6029:Core/Src/bno055.c ****     else
6030:Core/Src/bno055.c ****     {
6031:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6032:Core/Src/bno055.c ****     }
6033:Core/Src/bno055.c **** 
6034:Core/Src/bno055.c ****     return com_rslt;
6035:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 227


6036:Core/Src/bno055.c **** 
6037:Core/Src/bno055.c **** /*!
6038:Core/Src/bno055.c ****  *  @brief This API is used to convert the Euler hpr raw data
6039:Core/Src/bno055.c ****  *  to radians output as double
6040:Core/Src/bno055.c ****  *
6041:Core/Src/bno055.c ****  *  @param euler_hpr : The radians data of Euler hpr
6042:Core/Src/bno055.c ****  *
6043:Core/Src/bno055.c ****  *  Parameter |    result
6044:Core/Src/bno055.c ****  *  --------- | -----------------
6045:Core/Src/bno055.c ****  *   h        | radians data of Euler
6046:Core/Src/bno055.c ****  *   r        | radians data of Euler
6047:Core/Src/bno055.c ****  *   p        | radians data of Euler
6048:Core/Src/bno055.c ****  *
6049:Core/Src/bno055.c ****  *
6050:Core/Src/bno055.c ****  *  @return results of bus communication function
6051:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6052:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6053:Core/Src/bno055.c ****  *
6054:Core/Src/bno055.c ****  */
6055:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_euler_hpr_rad(struct bno055_euler_double_t *euler
6056:Core/Src/bno055.c **** {
6057:Core/Src/bno055.c ****     /* Variable used to return value of
6058:Core/Src/bno055.c ****      * communication routine*/
6059:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6060:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
6061:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
6062:Core/Src/bno055.c **** 
6063:Core/Src/bno055.c ****     /* Read the current Euler unit and set the
6064:Core/Src/bno055.c ****      * unit as radians if the unit is in degree */
6065:Core/Src/bno055.c ****     com_rslt = bno055_get_euler_unit(&euler_unit_u8);
6066:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
6067:Core/Src/bno055.c ****     {
6068:Core/Src/bno055.c ****         com_rslt = bno055_set_euler_unit(BNO055_EULER_UNIT_RAD);
6069:Core/Src/bno055.c ****     }
6070:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6071:Core/Src/bno055.c ****     {
6072:Core/Src/bno055.c ****         /* Read the raw hrp */
6073:Core/Src/bno055.c ****         com_rslt = bno055_read_euler_hrp(&reg_euler);
6074:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6075:Core/Src/bno055.c ****         {
6076:Core/Src/bno055.c ****             /* Convert raw Euler hrp to radians*/
6077:Core/Src/bno055.c ****             euler_hpr->h = (double)(reg_euler.h / BNO055_EULER_DIV_RAD);
6078:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
6079:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
6080:Core/Src/bno055.c ****         }
6081:Core/Src/bno055.c ****         else
6082:Core/Src/bno055.c ****         {
6083:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6084:Core/Src/bno055.c ****         }
6085:Core/Src/bno055.c ****     }
6086:Core/Src/bno055.c ****     else
6087:Core/Src/bno055.c ****     {
6088:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6089:Core/Src/bno055.c ****     }
6090:Core/Src/bno055.c **** 
6091:Core/Src/bno055.c ****     return com_rslt;
6092:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 228


6093:Core/Src/bno055.c **** 
6094:Core/Src/bno055.c **** /*!
6095:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6096:Core/Src/bno055.c ****  *  accel x raw data to meterpersecseq output as double
6097:Core/Src/bno055.c ****  *
6098:Core/Src/bno055.c ****  *  @param linear_accel_x_d : The double value of
6099:Core/Src/bno055.c ****  *  linear accel x meterpersecseq
6100:Core/Src/bno055.c ****  *
6101:Core/Src/bno055.c ****  *  @return results of bus communication function
6102:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6103:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6104:Core/Src/bno055.c ****  *
6105:Core/Src/bno055.c ****  *
6106:Core/Src/bno055.c ****  */
6107:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_x_msq(double *linear_accel_x_d)
6108:Core/Src/bno055.c **** {
 6528              		.loc 1 6108 1 is_stmt 1 view -0
 6529              		.cfi_startproc
 6530              		@ args = 0, pretend = 0, frame = 8
 6531              		@ frame_needed = 0, uses_anonymous_args = 0
 6532              		.loc 1 6108 1 is_stmt 0 view .LVU1762
 6533 0000 30B5     		push	{r4, r5, lr}
 6534              	.LCFI221:
 6535              		.cfi_def_cfa_offset 12
 6536              		.cfi_offset 4, -12
 6537              		.cfi_offset 5, -8
 6538              		.cfi_offset 14, -4
 6539 0002 83B0     		sub	sp, sp, #12
 6540              	.LCFI222:
 6541              		.cfi_def_cfa_offset 24
 6542 0004 0446     		mov	r4, r0
6109:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6543              		.loc 1 6109 5 is_stmt 1 view .LVU1763
 6544              	.LVL677:
6110:Core/Src/bno055.c ****     s16 reg_linear_accel_x_s16 = BNO055_INIT_VALUE;
 6545              		.loc 1 6110 5 view .LVU1764
 6546              		.loc 1 6110 9 is_stmt 0 view .LVU1765
 6547 0006 0023     		movs	r3, #0
 6548 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6111:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6549              		.loc 1 6111 5 is_stmt 1 view .LVU1766
 6550              	.LVL678:
6112:Core/Src/bno055.c **** 
6113:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6114:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_x(&reg_linear_accel_x_s16);
 6551              		.loc 1 6114 5 view .LVU1767
 6552              		.loc 1 6114 16 is_stmt 0 view .LVU1768
 6553 000c 0DF10600 		add	r0, sp, #6
 6554              	.LVL679:
 6555              		.loc 1 6114 16 view .LVU1769
 6556 0010 FFF7FEFF 		bl	bno055_read_linear_accel_x
 6557              	.LVL680:
6115:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6558              		.loc 1 6115 5 is_stmt 1 view .LVU1770
 6559              		.loc 1 6115 8 is_stmt 0 view .LVU1771
 6560 0014 68B9     		cbnz	r0, .L489
 6561 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccO72alg.s 			page 229


6116:Core/Src/bno055.c ****     {
6117:Core/Src/bno055.c ****         /* Convert the raw x to m/s2 */
6118:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_x_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6562              		.loc 1 6118 9 is_stmt 1 view .LVU1772
 6563              		.loc 1 6118 18 is_stmt 0 view .LVU1773
 6564 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6565              	.LVL681:
 6566              		.loc 1 6118 18 view .LVU1774
 6567 001c FFF7FEFF 		bl	__aeabi_i2d
 6568              	.LVL682:
 6569              		.loc 1 6118 16 view .LVU1775
 6570 0020 0022     		movs	r2, #0
 6571 0022 054B     		ldr	r3, .L491
 6572 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6573              	.LVL683:
6119:Core/Src/bno055.c ****         *linear_accel_x_d = data_d;
 6574              		.loc 1 6119 9 is_stmt 1 view .LVU1776
 6575              		.loc 1 6119 27 is_stmt 0 view .LVU1777
 6576 0028 C4E90001 		strd	r0, [r4]
 6577              	.LVL684:
 6578              	.L488:
6120:Core/Src/bno055.c ****     }
6121:Core/Src/bno055.c ****     else
6122:Core/Src/bno055.c ****     {
6123:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6124:Core/Src/bno055.c ****     }
6125:Core/Src/bno055.c **** 
6126:Core/Src/bno055.c ****     return com_rslt;
 6579              		.loc 1 6126 5 is_stmt 1 view .LVU1778
6127:Core/Src/bno055.c **** }
 6580              		.loc 1 6127 1 is_stmt 0 view .LVU1779
 6581 002c 2846     		mov	r0, r5
 6582 002e 03B0     		add	sp, sp, #12
 6583              	.LCFI223:
 6584              		.cfi_remember_state
 6585              		.cfi_def_cfa_offset 12
 6586              		@ sp needed
 6587 0030 30BD     		pop	{r4, r5, pc}
 6588              	.LVL685:
 6589              	.L489:
 6590              	.LCFI224:
 6591              		.cfi_restore_state
6123:Core/Src/bno055.c ****     }
 6592              		.loc 1 6123 18 view .LVU1780
 6593 0032 4FF0FF35 		mov	r5, #-1
 6594 0036 F9E7     		b	.L488
 6595              	.L492:
 6596              		.align	2
 6597              	.L491:
 6598 0038 00005940 		.word	1079574528
 6599              		.cfi_endproc
 6600              	.LFE107:
 6602              		.section	.text.bno055_convert_double_linear_accel_y_msq,"ax",%progbits
 6603              		.align	1
 6604              		.global	bno055_convert_double_linear_accel_y_msq
 6605              		.syntax unified
 6606              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 230


 6607              		.thumb_func
 6609              	bno055_convert_double_linear_accel_y_msq:
 6610              	.LVL686:
 6611              	.LFB108:
6128:Core/Src/bno055.c **** 
6129:Core/Src/bno055.c **** /*!
6130:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6131:Core/Src/bno055.c ****  *  accel y raw data to meterpersecseq output as double
6132:Core/Src/bno055.c ****  *
6133:Core/Src/bno055.c ****  *  @param linear_accel_y_d : The double value of
6134:Core/Src/bno055.c ****  *  linear accel y meterpersecseq
6135:Core/Src/bno055.c ****  *
6136:Core/Src/bno055.c ****  *  @return results of bus communication function
6137:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6138:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6139:Core/Src/bno055.c ****  *
6140:Core/Src/bno055.c ****  *
6141:Core/Src/bno055.c ****  */
6142:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_y_msq(double *linear_accel_y_d)
6143:Core/Src/bno055.c **** {
 6612              		.loc 1 6143 1 is_stmt 1 view -0
 6613              		.cfi_startproc
 6614              		@ args = 0, pretend = 0, frame = 8
 6615              		@ frame_needed = 0, uses_anonymous_args = 0
 6616              		.loc 1 6143 1 is_stmt 0 view .LVU1782
 6617 0000 30B5     		push	{r4, r5, lr}
 6618              	.LCFI225:
 6619              		.cfi_def_cfa_offset 12
 6620              		.cfi_offset 4, -12
 6621              		.cfi_offset 5, -8
 6622              		.cfi_offset 14, -4
 6623 0002 83B0     		sub	sp, sp, #12
 6624              	.LCFI226:
 6625              		.cfi_def_cfa_offset 24
 6626 0004 0446     		mov	r4, r0
6144:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6627              		.loc 1 6144 5 is_stmt 1 view .LVU1783
 6628              	.LVL687:
6145:Core/Src/bno055.c ****     s16 reg_linear_accel_y_s16 = BNO055_INIT_VALUE;
 6629              		.loc 1 6145 5 view .LVU1784
 6630              		.loc 1 6145 9 is_stmt 0 view .LVU1785
 6631 0006 0023     		movs	r3, #0
 6632 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6146:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6633              		.loc 1 6146 5 is_stmt 1 view .LVU1786
 6634              	.LVL688:
6147:Core/Src/bno055.c **** 
6148:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6149:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_y(&reg_linear_accel_y_s16);
 6635              		.loc 1 6149 5 view .LVU1787
 6636              		.loc 1 6149 16 is_stmt 0 view .LVU1788
 6637 000c 0DF10600 		add	r0, sp, #6
 6638              	.LVL689:
 6639              		.loc 1 6149 16 view .LVU1789
 6640 0010 FFF7FEFF 		bl	bno055_read_linear_accel_y
 6641              	.LVL690:
6150:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 231


 6642              		.loc 1 6150 5 is_stmt 1 view .LVU1790
 6643              		.loc 1 6150 8 is_stmt 0 view .LVU1791
 6644 0014 68B9     		cbnz	r0, .L495
 6645 0016 0546     		mov	r5, r0
6151:Core/Src/bno055.c ****     {
6152:Core/Src/bno055.c ****         /* Convert the raw y to m/s2 */
6153:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_y_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6646              		.loc 1 6153 9 is_stmt 1 view .LVU1792
 6647              		.loc 1 6153 18 is_stmt 0 view .LVU1793
 6648 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6649              	.LVL691:
 6650              		.loc 1 6153 18 view .LVU1794
 6651 001c FFF7FEFF 		bl	__aeabi_i2d
 6652              	.LVL692:
 6653              		.loc 1 6153 16 view .LVU1795
 6654 0020 0022     		movs	r2, #0
 6655 0022 054B     		ldr	r3, .L497
 6656 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6657              	.LVL693:
6154:Core/Src/bno055.c ****         *linear_accel_y_d = data_d;
 6658              		.loc 1 6154 9 is_stmt 1 view .LVU1796
 6659              		.loc 1 6154 27 is_stmt 0 view .LVU1797
 6660 0028 C4E90001 		strd	r0, [r4]
 6661              	.LVL694:
 6662              	.L494:
6155:Core/Src/bno055.c ****     }
6156:Core/Src/bno055.c ****     else
6157:Core/Src/bno055.c ****     {
6158:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6159:Core/Src/bno055.c ****     }
6160:Core/Src/bno055.c **** 
6161:Core/Src/bno055.c ****     return com_rslt;
 6663              		.loc 1 6161 5 is_stmt 1 view .LVU1798
6162:Core/Src/bno055.c **** }
 6664              		.loc 1 6162 1 is_stmt 0 view .LVU1799
 6665 002c 2846     		mov	r0, r5
 6666 002e 03B0     		add	sp, sp, #12
 6667              	.LCFI227:
 6668              		.cfi_remember_state
 6669              		.cfi_def_cfa_offset 12
 6670              		@ sp needed
 6671 0030 30BD     		pop	{r4, r5, pc}
 6672              	.LVL695:
 6673              	.L495:
 6674              	.LCFI228:
 6675              		.cfi_restore_state
6158:Core/Src/bno055.c ****     }
 6676              		.loc 1 6158 18 view .LVU1800
 6677 0032 4FF0FF35 		mov	r5, #-1
 6678 0036 F9E7     		b	.L494
 6679              	.L498:
 6680              		.align	2
 6681              	.L497:
 6682 0038 00005940 		.word	1079574528
 6683              		.cfi_endproc
 6684              	.LFE108:
 6686              		.section	.text.bno055_convert_double_linear_accel_z_msq,"ax",%progbits
ARM GAS  /tmp/ccO72alg.s 			page 232


 6687              		.align	1
 6688              		.global	bno055_convert_double_linear_accel_z_msq
 6689              		.syntax unified
 6690              		.thumb
 6691              		.thumb_func
 6693              	bno055_convert_double_linear_accel_z_msq:
 6694              	.LVL696:
 6695              	.LFB109:
6163:Core/Src/bno055.c **** 
6164:Core/Src/bno055.c **** /*!
6165:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear
6166:Core/Src/bno055.c ****  *  accel z raw data to meterpersecseq output as double
6167:Core/Src/bno055.c ****  *
6168:Core/Src/bno055.c ****  *  @param linear_accel_z_d : The double value of
6169:Core/Src/bno055.c ****  *  linear accel z meterpersecseq
6170:Core/Src/bno055.c ****  *
6171:Core/Src/bno055.c ****  *  @return results of bus communication function
6172:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6173:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6174:Core/Src/bno055.c ****  *
6175:Core/Src/bno055.c ****  *
6176:Core/Src/bno055.c ****  */
6177:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_z_msq(double *linear_accel_z_d)
6178:Core/Src/bno055.c **** {
 6696              		.loc 1 6178 1 is_stmt 1 view -0
 6697              		.cfi_startproc
 6698              		@ args = 0, pretend = 0, frame = 8
 6699              		@ frame_needed = 0, uses_anonymous_args = 0
 6700              		.loc 1 6178 1 is_stmt 0 view .LVU1802
 6701 0000 30B5     		push	{r4, r5, lr}
 6702              	.LCFI229:
 6703              		.cfi_def_cfa_offset 12
 6704              		.cfi_offset 4, -12
 6705              		.cfi_offset 5, -8
 6706              		.cfi_offset 14, -4
 6707 0002 83B0     		sub	sp, sp, #12
 6708              	.LCFI230:
 6709              		.cfi_def_cfa_offset 24
 6710 0004 0446     		mov	r4, r0
6179:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6711              		.loc 1 6179 5 is_stmt 1 view .LVU1803
 6712              	.LVL697:
6180:Core/Src/bno055.c ****     s16 reg_linear_accel_z_s16 = BNO055_INIT_VALUE;
 6713              		.loc 1 6180 5 view .LVU1804
 6714              		.loc 1 6180 9 is_stmt 0 view .LVU1805
 6715 0006 0023     		movs	r3, #0
 6716 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6181:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6717              		.loc 1 6181 5 is_stmt 1 view .LVU1806
 6718              	.LVL698:
6182:Core/Src/bno055.c **** 
6183:Core/Src/bno055.c ****     /* Read the raw x of linear accel */
6184:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_z(&reg_linear_accel_z_s16);
 6719              		.loc 1 6184 5 view .LVU1807
 6720              		.loc 1 6184 16 is_stmt 0 view .LVU1808
 6721 000c 0DF10600 		add	r0, sp, #6
 6722              	.LVL699:
ARM GAS  /tmp/ccO72alg.s 			page 233


 6723              		.loc 1 6184 16 view .LVU1809
 6724 0010 FFF7FEFF 		bl	bno055_read_linear_accel_z
 6725              	.LVL700:
6185:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6726              		.loc 1 6185 5 is_stmt 1 view .LVU1810
 6727              		.loc 1 6185 8 is_stmt 0 view .LVU1811
 6728 0014 68B9     		cbnz	r0, .L501
 6729 0016 0546     		mov	r5, r0
6186:Core/Src/bno055.c ****     {
6187:Core/Src/bno055.c ****         /* Convert the raw z to m/s2 */
6188:Core/Src/bno055.c ****         data_d = (double)(reg_linear_accel_z_s16 / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6730              		.loc 1 6188 9 is_stmt 1 view .LVU1812
 6731              		.loc 1 6188 18 is_stmt 0 view .LVU1813
 6732 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6733              	.LVL701:
 6734              		.loc 1 6188 18 view .LVU1814
 6735 001c FFF7FEFF 		bl	__aeabi_i2d
 6736              	.LVL702:
 6737              		.loc 1 6188 16 view .LVU1815
 6738 0020 0022     		movs	r2, #0
 6739 0022 054B     		ldr	r3, .L503
 6740 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6741              	.LVL703:
6189:Core/Src/bno055.c ****         *linear_accel_z_d = data_d;
 6742              		.loc 1 6189 9 is_stmt 1 view .LVU1816
 6743              		.loc 1 6189 27 is_stmt 0 view .LVU1817
 6744 0028 C4E90001 		strd	r0, [r4]
 6745              	.LVL704:
 6746              	.L500:
6190:Core/Src/bno055.c ****     }
6191:Core/Src/bno055.c ****     else
6192:Core/Src/bno055.c ****     {
6193:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6194:Core/Src/bno055.c ****     }
6195:Core/Src/bno055.c **** 
6196:Core/Src/bno055.c ****     return com_rslt;
 6747              		.loc 1 6196 5 is_stmt 1 view .LVU1818
6197:Core/Src/bno055.c **** }
 6748              		.loc 1 6197 1 is_stmt 0 view .LVU1819
 6749 002c 2846     		mov	r0, r5
 6750 002e 03B0     		add	sp, sp, #12
 6751              	.LCFI231:
 6752              		.cfi_remember_state
 6753              		.cfi_def_cfa_offset 12
 6754              		@ sp needed
 6755 0030 30BD     		pop	{r4, r5, pc}
 6756              	.LVL705:
 6757              	.L501:
 6758              	.LCFI232:
 6759              		.cfi_restore_state
6193:Core/Src/bno055.c ****     }
 6760              		.loc 1 6193 18 view .LVU1820
 6761 0032 4FF0FF35 		mov	r5, #-1
 6762 0036 F9E7     		b	.L500
 6763              	.L504:
 6764              		.align	2
 6765              	.L503:
ARM GAS  /tmp/ccO72alg.s 			page 234


 6766 0038 00005940 		.word	1079574528
 6767              		.cfi_endproc
 6768              	.LFE109:
 6770              		.section	.text.bno055_convert_double_linear_accel_xyz_msq,"ax",%progbits
 6771              		.align	1
 6772              		.global	bno055_convert_double_linear_accel_xyz_msq
 6773              		.syntax unified
 6774              		.thumb
 6775              		.thumb_func
 6777              	bno055_convert_double_linear_accel_xyz_msq:
 6778              	.LVL706:
 6779              	.LFB110:
6198:Core/Src/bno055.c **** 
6199:Core/Src/bno055.c **** /*!
6200:Core/Src/bno055.c ****  *  @brief This API is used to convert the linear accel xyz raw data
6201:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6202:Core/Src/bno055.c ****  *
6203:Core/Src/bno055.c ****  *  @param linear_accel_xyz : The meterpersecseq data of linear accel xyz
6204:Core/Src/bno055.c ****  *
6205:Core/Src/bno055.c ****  *  Parameter |    result
6206:Core/Src/bno055.c ****  *  --------- | -----------------
6207:Core/Src/bno055.c ****  *   x        | meterpersecseq data of linear accel
6208:Core/Src/bno055.c ****  *   y        | meterpersecseq data of linear accel
6209:Core/Src/bno055.c ****  *   z        | meterpersecseq data of linear accel
6210:Core/Src/bno055.c ****  *
6211:Core/Src/bno055.c ****  *
6212:Core/Src/bno055.c ****  *  @return results of bus communication function
6213:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6214:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6215:Core/Src/bno055.c ****  *
6216:Core/Src/bno055.c ****  */
6217:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_linear_accel_xyz_msq(
6218:Core/Src/bno055.c ****     struct bno055_linear_accel_double_t *linear_accel_xyz)
6219:Core/Src/bno055.c **** {
 6780              		.loc 1 6219 1 is_stmt 1 view -0
 6781              		.cfi_startproc
 6782              		@ args = 0, pretend = 0, frame = 8
 6783              		@ frame_needed = 0, uses_anonymous_args = 0
 6784              		.loc 1 6219 1 is_stmt 0 view .LVU1822
 6785 0000 30B5     		push	{r4, r5, lr}
 6786              	.LCFI233:
 6787              		.cfi_def_cfa_offset 12
 6788              		.cfi_offset 4, -12
 6789              		.cfi_offset 5, -8
 6790              		.cfi_offset 14, -4
 6791 0002 83B0     		sub	sp, sp, #12
 6792              	.LCFI234:
 6793              		.cfi_def_cfa_offset 24
 6794 0004 0446     		mov	r4, r0
6220:Core/Src/bno055.c ****     /* Variable used to return value of
6221:Core/Src/bno055.c ****      * communication routine*/
6222:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6795              		.loc 1 6222 5 is_stmt 1 view .LVU1823
 6796              	.LVL707:
6223:Core/Src/bno055.c ****     struct bno055_linear_accel_t reg_linear_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO
 6797              		.loc 1 6223 5 view .LVU1824
 6798              		.loc 1 6223 34 is_stmt 0 view .LVU1825
ARM GAS  /tmp/ccO72alg.s 			page 235


 6799 0006 0023     		movs	r3, #0
 6800 0008 ADF80030 		strh	r3, [sp]	@ movhi
 6801 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 6802 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6224:Core/Src/bno055.c **** 
6225:Core/Src/bno055.c ****     /* Read the raw xyz of linear accel */
6226:Core/Src/bno055.c ****     com_rslt = bno055_read_linear_accel_xyz(&reg_linear_accel_xyz);
 6803              		.loc 1 6226 5 is_stmt 1 view .LVU1826
 6804              		.loc 1 6226 16 is_stmt 0 view .LVU1827
 6805 0014 6846     		mov	r0, sp
 6806              	.LVL708:
 6807              		.loc 1 6226 16 view .LVU1828
 6808 0016 FFF7FEFF 		bl	bno055_read_linear_accel_xyz
 6809              	.LVL709:
6227:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6810              		.loc 1 6227 5 is_stmt 1 view .LVU1829
 6811              		.loc 1 6227 8 is_stmt 0 view .LVU1830
 6812 001a 08BB     		cbnz	r0, .L507
 6813 001c 0546     		mov	r5, r0
6228:Core/Src/bno055.c ****     {
6229:Core/Src/bno055.c ****         /* Convert the raw xyz of linear accel to m/s2 */
6230:Core/Src/bno055.c ****         linear_accel_xyz->x = (double)(reg_linear_accel_xyz.x / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6814              		.loc 1 6230 9 is_stmt 1 view .LVU1831
 6815              		.loc 1 6230 31 is_stmt 0 view .LVU1832
 6816 001e BDF90000 		ldrsh	r0, [sp]
 6817              	.LVL710:
 6818              		.loc 1 6230 31 view .LVU1833
 6819 0022 FFF7FEFF 		bl	__aeabi_i2d
 6820              	.LVL711:
 6821 0026 0022     		movs	r2, #0
 6822 0028 0F4B     		ldr	r3, .L509
 6823 002a FFF7FEFF 		bl	__aeabi_ddiv
 6824              	.LVL712:
 6825              		.loc 1 6230 29 view .LVU1834
 6826 002e C4E90001 		strd	r0, [r4]
6231:Core/Src/bno055.c ****         linear_accel_xyz->y = (double)(reg_linear_accel_xyz.y / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6827              		.loc 1 6231 9 is_stmt 1 view .LVU1835
 6828              		.loc 1 6231 31 is_stmt 0 view .LVU1836
 6829 0032 BDF90200 		ldrsh	r0, [sp, #2]
 6830 0036 FFF7FEFF 		bl	__aeabi_i2d
 6831              	.LVL713:
 6832 003a 0022     		movs	r2, #0
 6833 003c 0A4B     		ldr	r3, .L509
 6834 003e FFF7FEFF 		bl	__aeabi_ddiv
 6835              	.LVL714:
 6836              		.loc 1 6231 29 view .LVU1837
 6837 0042 C4E90201 		strd	r0, [r4, #8]
6232:Core/Src/bno055.c ****         linear_accel_xyz->z = (double)(reg_linear_accel_xyz.z / BNO055_LINEAR_ACCEL_DIV_MSQ);
 6838              		.loc 1 6232 9 is_stmt 1 view .LVU1838
 6839              		.loc 1 6232 31 is_stmt 0 view .LVU1839
 6840 0046 BDF90400 		ldrsh	r0, [sp, #4]
 6841 004a FFF7FEFF 		bl	__aeabi_i2d
 6842              	.LVL715:
 6843 004e 0022     		movs	r2, #0
 6844 0050 054B     		ldr	r3, .L509
 6845 0052 FFF7FEFF 		bl	__aeabi_ddiv
 6846              	.LVL716:
ARM GAS  /tmp/ccO72alg.s 			page 236


 6847              		.loc 1 6232 29 view .LVU1840
 6848 0056 C4E90401 		strd	r0, [r4, #16]
 6849              	.L506:
 6850              	.LVL717:
6233:Core/Src/bno055.c ****     }
6234:Core/Src/bno055.c ****     else
6235:Core/Src/bno055.c ****     {
6236:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6237:Core/Src/bno055.c ****     }
6238:Core/Src/bno055.c **** 
6239:Core/Src/bno055.c ****     return com_rslt;
 6851              		.loc 1 6239 5 is_stmt 1 view .LVU1841
6240:Core/Src/bno055.c **** }
 6852              		.loc 1 6240 1 is_stmt 0 view .LVU1842
 6853 005a 2846     		mov	r0, r5
 6854 005c 03B0     		add	sp, sp, #12
 6855              	.LCFI235:
 6856              		.cfi_remember_state
 6857              		.cfi_def_cfa_offset 12
 6858              		@ sp needed
 6859 005e 30BD     		pop	{r4, r5, pc}
 6860              	.LVL718:
 6861              	.L507:
 6862              	.LCFI236:
 6863              		.cfi_restore_state
6236:Core/Src/bno055.c ****     }
 6864              		.loc 1 6236 18 view .LVU1843
 6865 0060 4FF0FF35 		mov	r5, #-1
 6866 0064 F9E7     		b	.L506
 6867              	.L510:
 6868 0066 00BF     		.align	2
 6869              	.L509:
 6870 0068 00005940 		.word	1079574528
 6871              		.cfi_endproc
 6872              	.LFE110:
 6874              		.section	.text.bno055_convert_gravity_double_x_msq,"ax",%progbits
 6875              		.align	1
 6876              		.global	bno055_convert_gravity_double_x_msq
 6877              		.syntax unified
 6878              		.thumb
 6879              		.thumb_func
 6881              	bno055_convert_gravity_double_x_msq:
 6882              	.LVL719:
 6883              	.LFB111:
6241:Core/Src/bno055.c **** 
6242:Core/Src/bno055.c **** /*!
6243:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6244:Core/Src/bno055.c ****  *  x raw data to meterpersecseq output as double
6245:Core/Src/bno055.c ****  *
6246:Core/Src/bno055.c ****  *  @param gravity_x_d : The double value of gravity x meterpersecseq
6247:Core/Src/bno055.c ****  *
6248:Core/Src/bno055.c ****  *  @return results of bus communication function
6249:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6250:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6251:Core/Src/bno055.c ****  *
6252:Core/Src/bno055.c ****  *
6253:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccO72alg.s 			page 237


6254:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_x_msq(double *gravity_x_d)
6255:Core/Src/bno055.c **** {
 6884              		.loc 1 6255 1 is_stmt 1 view -0
 6885              		.cfi_startproc
 6886              		@ args = 0, pretend = 0, frame = 8
 6887              		@ frame_needed = 0, uses_anonymous_args = 0
 6888              		.loc 1 6255 1 is_stmt 0 view .LVU1845
 6889 0000 30B5     		push	{r4, r5, lr}
 6890              	.LCFI237:
 6891              		.cfi_def_cfa_offset 12
 6892              		.cfi_offset 4, -12
 6893              		.cfi_offset 5, -8
 6894              		.cfi_offset 14, -4
 6895 0002 83B0     		sub	sp, sp, #12
 6896              	.LCFI238:
 6897              		.cfi_def_cfa_offset 24
 6898 0004 0446     		mov	r4, r0
6256:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6899              		.loc 1 6256 5 is_stmt 1 view .LVU1846
 6900              	.LVL720:
6257:Core/Src/bno055.c ****     s16 reg_gravity_x_s16 = BNO055_INIT_VALUE;
 6901              		.loc 1 6257 5 view .LVU1847
 6902              		.loc 1 6257 9 is_stmt 0 view .LVU1848
 6903 0006 0023     		movs	r3, #0
 6904 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6258:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6905              		.loc 1 6258 5 is_stmt 1 view .LVU1849
 6906              	.LVL721:
6259:Core/Src/bno055.c **** 
6260:Core/Src/bno055.c ****     /* Read raw gravity of x*/
6261:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_x(&reg_gravity_x_s16);
 6907              		.loc 1 6261 5 view .LVU1850
 6908              		.loc 1 6261 16 is_stmt 0 view .LVU1851
 6909 000c 0DF10600 		add	r0, sp, #6
 6910              	.LVL722:
 6911              		.loc 1 6261 16 view .LVU1852
 6912 0010 FFF7FEFF 		bl	bno055_read_gravity_x
 6913              	.LVL723:
6262:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6914              		.loc 1 6262 5 is_stmt 1 view .LVU1853
 6915              		.loc 1 6262 8 is_stmt 0 view .LVU1854
 6916 0014 68B9     		cbnz	r0, .L513
 6917 0016 0546     		mov	r5, r0
6263:Core/Src/bno055.c ****     {
6264:Core/Src/bno055.c ****         /* Convert raw gravity of x to m/s2 */
6265:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_x_s16 / BNO055_GRAVITY_DIV_MSQ);
 6918              		.loc 1 6265 9 is_stmt 1 view .LVU1855
 6919              		.loc 1 6265 18 is_stmt 0 view .LVU1856
 6920 0018 BDF90600 		ldrsh	r0, [sp, #6]
 6921              	.LVL724:
 6922              		.loc 1 6265 18 view .LVU1857
 6923 001c FFF7FEFF 		bl	__aeabi_i2d
 6924              	.LVL725:
 6925              		.loc 1 6265 16 view .LVU1858
 6926 0020 0022     		movs	r2, #0
 6927 0022 054B     		ldr	r3, .L515
 6928 0024 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  /tmp/ccO72alg.s 			page 238


 6929              	.LVL726:
6266:Core/Src/bno055.c ****         *gravity_x_d = data_d;
 6930              		.loc 1 6266 9 is_stmt 1 view .LVU1859
 6931              		.loc 1 6266 22 is_stmt 0 view .LVU1860
 6932 0028 C4E90001 		strd	r0, [r4]
 6933              	.LVL727:
 6934              	.L512:
6267:Core/Src/bno055.c ****     }
6268:Core/Src/bno055.c ****     else
6269:Core/Src/bno055.c ****     {
6270:Core/Src/bno055.c ****         com_rslt = BNO055_ERROR;
6271:Core/Src/bno055.c ****     }
6272:Core/Src/bno055.c **** 
6273:Core/Src/bno055.c ****     return com_rslt;
 6935              		.loc 1 6273 5 is_stmt 1 view .LVU1861
6274:Core/Src/bno055.c **** }
 6936              		.loc 1 6274 1 is_stmt 0 view .LVU1862
 6937 002c 2846     		mov	r0, r5
 6938 002e 03B0     		add	sp, sp, #12
 6939              	.LCFI239:
 6940              		.cfi_remember_state
 6941              		.cfi_def_cfa_offset 12
 6942              		@ sp needed
 6943 0030 30BD     		pop	{r4, r5, pc}
 6944              	.LVL728:
 6945              	.L513:
 6946              	.LCFI240:
 6947              		.cfi_restore_state
6270:Core/Src/bno055.c ****     }
 6948              		.loc 1 6270 18 view .LVU1863
 6949 0032 4FF0FF35 		mov	r5, #-1
 6950 0036 F9E7     		b	.L512
 6951              	.L516:
 6952              		.align	2
 6953              	.L515:
 6954 0038 00005940 		.word	1079574528
 6955              		.cfi_endproc
 6956              	.LFE111:
 6958              		.section	.text.bno055_convert_gravity_double_y_msq,"ax",%progbits
 6959              		.align	1
 6960              		.global	bno055_convert_gravity_double_y_msq
 6961              		.syntax unified
 6962              		.thumb
 6963              		.thumb_func
 6965              	bno055_convert_gravity_double_y_msq:
 6966              	.LVL729:
 6967              	.LFB112:
6275:Core/Src/bno055.c **** 
6276:Core/Src/bno055.c **** /*!
6277:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6278:Core/Src/bno055.c ****  *  y raw data to meterpersecseq output as double
6279:Core/Src/bno055.c ****  *
6280:Core/Src/bno055.c ****  *  @param gravity_y_d : The double value of gravity y meterpersecseq
6281:Core/Src/bno055.c ****  *
6282:Core/Src/bno055.c ****  *  @return results of bus communication function
6283:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6284:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccO72alg.s 			page 239


6285:Core/Src/bno055.c ****  *
6286:Core/Src/bno055.c ****  *
6287:Core/Src/bno055.c ****  */
6288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_y_msq(double *gravity_y_d)
6289:Core/Src/bno055.c **** {
 6968              		.loc 1 6289 1 is_stmt 1 view -0
 6969              		.cfi_startproc
 6970              		@ args = 0, pretend = 0, frame = 8
 6971              		@ frame_needed = 0, uses_anonymous_args = 0
 6972              		.loc 1 6289 1 is_stmt 0 view .LVU1865
 6973 0000 30B5     		push	{r4, r5, lr}
 6974              	.LCFI241:
 6975              		.cfi_def_cfa_offset 12
 6976              		.cfi_offset 4, -12
 6977              		.cfi_offset 5, -8
 6978              		.cfi_offset 14, -4
 6979 0002 83B0     		sub	sp, sp, #12
 6980              	.LCFI242:
 6981              		.cfi_def_cfa_offset 24
 6982 0004 0546     		mov	r5, r0
6290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 6983              		.loc 1 6290 5 is_stmt 1 view .LVU1866
 6984              	.LVL730:
6291:Core/Src/bno055.c ****     s16 reg_gravity_y_s16 = BNO055_INIT_VALUE;
 6985              		.loc 1 6291 5 view .LVU1867
 6986              		.loc 1 6291 9 is_stmt 0 view .LVU1868
 6987 0006 0023     		movs	r3, #0
 6988 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6292:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 6989              		.loc 1 6292 5 is_stmt 1 view .LVU1869
 6990              	.LVL731:
6293:Core/Src/bno055.c **** 
6294:Core/Src/bno055.c ****     /* Read raw gravity of y */
6295:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_y(&reg_gravity_y_s16);
 6991              		.loc 1 6295 5 view .LVU1870
 6992              		.loc 1 6295 16 is_stmt 0 view .LVU1871
 6993 000c 0DF10600 		add	r0, sp, #6
 6994              	.LVL732:
 6995              		.loc 1 6295 16 view .LVU1872
 6996 0010 FFF7FEFF 		bl	bno055_read_gravity_y
 6997              	.LVL733:
6296:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 6998              		.loc 1 6296 5 is_stmt 1 view .LVU1873
 6999              		.loc 1 6296 8 is_stmt 0 view .LVU1874
 7000 0014 0446     		mov	r4, r0
 7001 0016 60B9     		cbnz	r0, .L518
6297:Core/Src/bno055.c ****     {
6298:Core/Src/bno055.c ****         /* convert raw gravity of y to m/s2 */
6299:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_y_s16 / BNO055_GRAVITY_DIV_MSQ);
 7002              		.loc 1 6299 9 is_stmt 1 view .LVU1875
 7003              		.loc 1 6299 18 is_stmt 0 view .LVU1876
 7004 0018 BDF90600 		ldrsh	r0, [sp, #6]
 7005              	.LVL734:
 7006              		.loc 1 6299 18 view .LVU1877
 7007 001c FFF7FEFF 		bl	__aeabi_i2d
 7008              	.LVL735:
 7009              		.loc 1 6299 16 view .LVU1878
ARM GAS  /tmp/ccO72alg.s 			page 240


 7010 0020 0022     		movs	r2, #0
 7011 0022 054B     		ldr	r3, .L521
 7012 0024 FFF7FEFF 		bl	__aeabi_ddiv
 7013              	.LVL736:
6300:Core/Src/bno055.c ****         *gravity_y_d = data_d;
 7014              		.loc 1 6300 9 is_stmt 1 view .LVU1879
 7015              		.loc 1 6300 22 is_stmt 0 view .LVU1880
 7016 0028 C5E90001 		strd	r0, [r5]
 7017              	.LVL737:
 7018              	.L519:
6301:Core/Src/bno055.c ****     }
6302:Core/Src/bno055.c ****     else
6303:Core/Src/bno055.c ****     {
6304:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6305:Core/Src/bno055.c ****     }
6306:Core/Src/bno055.c **** 
6307:Core/Src/bno055.c ****     return com_rslt;
 7019              		.loc 1 6307 5 is_stmt 1 view .LVU1881
6308:Core/Src/bno055.c **** }
 7020              		.loc 1 6308 1 is_stmt 0 view .LVU1882
 7021 002c 2046     		mov	r0, r4
 7022 002e 03B0     		add	sp, sp, #12
 7023              	.LCFI243:
 7024              		.cfi_remember_state
 7025              		.cfi_def_cfa_offset 12
 7026              		@ sp needed
 7027 0030 30BD     		pop	{r4, r5, pc}
 7028              	.LVL738:
 7029              	.L518:
 7030              	.LCFI244:
 7031              		.cfi_restore_state
6304:Core/Src/bno055.c ****     }
 7032              		.loc 1 6304 9 is_stmt 1 view .LVU1883
6304:Core/Src/bno055.c ****     }
 7033              		.loc 1 6304 18 is_stmt 0 view .LVU1884
 7034 0032 441E     		subs	r4, r0, #1
 7035 0034 64B2     		sxtb	r4, r4
 7036              	.LVL739:
6304:Core/Src/bno055.c ****     }
 7037              		.loc 1 6304 18 view .LVU1885
 7038 0036 F9E7     		b	.L519
 7039              	.L522:
 7040              		.align	2
 7041              	.L521:
 7042 0038 00005940 		.word	1079574528
 7043              		.cfi_endproc
 7044              	.LFE112:
 7046              		.section	.text.bno055_convert_gravity_double_z_msq,"ax",%progbits
 7047              		.align	1
 7048              		.global	bno055_convert_gravity_double_z_msq
 7049              		.syntax unified
 7050              		.thumb
 7051              		.thumb_func
 7053              	bno055_convert_gravity_double_z_msq:
 7054              	.LVL740:
 7055              	.LFB113:
6309:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 241


6310:Core/Src/bno055.c **** /*!
6311:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity
6312:Core/Src/bno055.c ****  *  z raw data to meterpersecseq output as double
6313:Core/Src/bno055.c ****  *
6314:Core/Src/bno055.c ****  *  @param gravity_z_d : The double value of gravity z meterpersecseq
6315:Core/Src/bno055.c ****  *
6316:Core/Src/bno055.c ****  *  @return results of bus communication function
6317:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6318:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6319:Core/Src/bno055.c ****  *
6320:Core/Src/bno055.c ****  *
6321:Core/Src/bno055.c ****  */
6322:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_gravity_double_z_msq(double *gravity_z_d)
6323:Core/Src/bno055.c **** {
 7056              		.loc 1 6323 1 is_stmt 1 view -0
 7057              		.cfi_startproc
 7058              		@ args = 0, pretend = 0, frame = 8
 7059              		@ frame_needed = 0, uses_anonymous_args = 0
 7060              		.loc 1 6323 1 is_stmt 0 view .LVU1887
 7061 0000 30B5     		push	{r4, r5, lr}
 7062              	.LCFI245:
 7063              		.cfi_def_cfa_offset 12
 7064              		.cfi_offset 4, -12
 7065              		.cfi_offset 5, -8
 7066              		.cfi_offset 14, -4
 7067 0002 83B0     		sub	sp, sp, #12
 7068              	.LCFI246:
 7069              		.cfi_def_cfa_offset 24
 7070 0004 0546     		mov	r5, r0
6324:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7071              		.loc 1 6324 5 is_stmt 1 view .LVU1888
 7072              	.LVL741:
6325:Core/Src/bno055.c ****     s16 reg_gravity_z_s16 = BNO055_INIT_VALUE;
 7073              		.loc 1 6325 5 view .LVU1889
 7074              		.loc 1 6325 9 is_stmt 0 view .LVU1890
 7075 0006 0023     		movs	r3, #0
 7076 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
6326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 7077              		.loc 1 6326 5 is_stmt 1 view .LVU1891
 7078              	.LVL742:
6327:Core/Src/bno055.c **** 
6328:Core/Src/bno055.c ****     /* Read raw gravity of z */
6329:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_z(&reg_gravity_z_s16);
 7079              		.loc 1 6329 5 view .LVU1892
 7080              		.loc 1 6329 16 is_stmt 0 view .LVU1893
 7081 000c 0DF10600 		add	r0, sp, #6
 7082              	.LVL743:
 7083              		.loc 1 6329 16 view .LVU1894
 7084 0010 FFF7FEFF 		bl	bno055_read_gravity_z
 7085              	.LVL744:
6330:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 7086              		.loc 1 6330 5 is_stmt 1 view .LVU1895
 7087              		.loc 1 6330 8 is_stmt 0 view .LVU1896
 7088 0014 0446     		mov	r4, r0
 7089 0016 60B9     		cbnz	r0, .L524
6331:Core/Src/bno055.c ****     {
6332:Core/Src/bno055.c ****         /* Convert raw gravity of z to m/s2 */
ARM GAS  /tmp/ccO72alg.s 			page 242


6333:Core/Src/bno055.c ****         data_d = (double)(reg_gravity_z_s16 / BNO055_GRAVITY_DIV_MSQ);
 7090              		.loc 1 6333 9 is_stmt 1 view .LVU1897
 7091              		.loc 1 6333 18 is_stmt 0 view .LVU1898
 7092 0018 BDF90600 		ldrsh	r0, [sp, #6]
 7093              	.LVL745:
 7094              		.loc 1 6333 18 view .LVU1899
 7095 001c FFF7FEFF 		bl	__aeabi_i2d
 7096              	.LVL746:
 7097              		.loc 1 6333 16 view .LVU1900
 7098 0020 0022     		movs	r2, #0
 7099 0022 054B     		ldr	r3, .L527
 7100 0024 FFF7FEFF 		bl	__aeabi_ddiv
 7101              	.LVL747:
6334:Core/Src/bno055.c ****         *gravity_z_d = data_d;
 7102              		.loc 1 6334 9 is_stmt 1 view .LVU1901
 7103              		.loc 1 6334 22 is_stmt 0 view .LVU1902
 7104 0028 C5E90001 		strd	r0, [r5]
 7105              	.LVL748:
 7106              	.L525:
6335:Core/Src/bno055.c ****     }
6336:Core/Src/bno055.c ****     else
6337:Core/Src/bno055.c ****     {
6338:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6339:Core/Src/bno055.c ****     }
6340:Core/Src/bno055.c **** 
6341:Core/Src/bno055.c ****     return com_rslt;
 7107              		.loc 1 6341 5 is_stmt 1 view .LVU1903
6342:Core/Src/bno055.c **** }
 7108              		.loc 1 6342 1 is_stmt 0 view .LVU1904
 7109 002c 2046     		mov	r0, r4
 7110 002e 03B0     		add	sp, sp, #12
 7111              	.LCFI247:
 7112              		.cfi_remember_state
 7113              		.cfi_def_cfa_offset 12
 7114              		@ sp needed
 7115 0030 30BD     		pop	{r4, r5, pc}
 7116              	.LVL749:
 7117              	.L524:
 7118              	.LCFI248:
 7119              		.cfi_restore_state
6338:Core/Src/bno055.c ****     }
 7120              		.loc 1 6338 9 is_stmt 1 view .LVU1905
6338:Core/Src/bno055.c ****     }
 7121              		.loc 1 6338 18 is_stmt 0 view .LVU1906
 7122 0032 441E     		subs	r4, r0, #1
 7123 0034 64B2     		sxtb	r4, r4
 7124              	.LVL750:
6338:Core/Src/bno055.c ****     }
 7125              		.loc 1 6338 18 view .LVU1907
 7126 0036 F9E7     		b	.L525
 7127              	.L528:
 7128              		.align	2
 7129              	.L527:
 7130 0038 00005940 		.word	1079574528
 7131              		.cfi_endproc
 7132              	.LFE113:
 7134              		.section	.text.bno055_convert_double_gravity_xyz_msq,"ax",%progbits
ARM GAS  /tmp/ccO72alg.s 			page 243


 7135              		.align	1
 7136              		.global	bno055_convert_double_gravity_xyz_msq
 7137              		.syntax unified
 7138              		.thumb
 7139              		.thumb_func
 7141              	bno055_convert_double_gravity_xyz_msq:
 7142              	.LVL751:
 7143              	.LFB114:
6343:Core/Src/bno055.c **** 
6344:Core/Src/bno055.c **** /*!
6345:Core/Src/bno055.c ****  *  @brief This API is used to convert the gravity xyz raw data
6346:Core/Src/bno055.c ****  *  to meterpersecseq output as double
6347:Core/Src/bno055.c ****  *
6348:Core/Src/bno055.c ****  *  @param gravity_xyz : The meterpersecseq data of gravity xyz
6349:Core/Src/bno055.c ****  *
6350:Core/Src/bno055.c ****  *  Parameter |    result
6351:Core/Src/bno055.c ****  *  --------- | -----------------
6352:Core/Src/bno055.c ****  *   x        | meterpersecseq data of gravity
6353:Core/Src/bno055.c ****  *   y        | meterpersecseq data of gravity
6354:Core/Src/bno055.c ****  *   z        | meterpersecseq data of gravity
6355:Core/Src/bno055.c ****  *
6356:Core/Src/bno055.c ****  *
6357:Core/Src/bno055.c ****  *  @return results of bus communication function
6358:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6359:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6360:Core/Src/bno055.c ****  *
6361:Core/Src/bno055.c ****  */
6362:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_gravity_xyz_msq(struct bno055_gravity_double_t *g
6363:Core/Src/bno055.c **** {
 7144              		.loc 1 6363 1 is_stmt 1 view -0
 7145              		.cfi_startproc
 7146              		@ args = 0, pretend = 0, frame = 8
 7147              		@ frame_needed = 0, uses_anonymous_args = 0
 7148              		.loc 1 6363 1 is_stmt 0 view .LVU1909
 7149 0000 30B5     		push	{r4, r5, lr}
 7150              	.LCFI249:
 7151              		.cfi_def_cfa_offset 12
 7152              		.cfi_offset 4, -12
 7153              		.cfi_offset 5, -8
 7154              		.cfi_offset 14, -4
 7155 0002 83B0     		sub	sp, sp, #12
 7156              	.LCFI250:
 7157              		.cfi_def_cfa_offset 24
 7158 0004 0446     		mov	r4, r0
6364:Core/Src/bno055.c ****     /* Variable used to return value of
6365:Core/Src/bno055.c ****      * communication routine*/
6366:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7159              		.loc 1 6366 5 is_stmt 1 view .LVU1910
 7160              	.LVL752:
6367:Core/Src/bno055.c ****     struct bno055_gravity_t reg_gravity_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_V
 7161              		.loc 1 6367 5 view .LVU1911
 7162              		.loc 1 6367 29 is_stmt 0 view .LVU1912
 7163 0006 0023     		movs	r3, #0
 7164 0008 ADF80030 		strh	r3, [sp]	@ movhi
 7165 000c ADF80230 		strh	r3, [sp, #2]	@ movhi
 7166 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
6368:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 244


6369:Core/Src/bno055.c ****     /* Read raw gravity of xyz */
6370:Core/Src/bno055.c ****     com_rslt = bno055_read_gravity_xyz(&reg_gravity_xyz);
 7167              		.loc 1 6370 5 is_stmt 1 view .LVU1913
 7168              		.loc 1 6370 16 is_stmt 0 view .LVU1914
 7169 0014 6846     		mov	r0, sp
 7170              	.LVL753:
 7171              		.loc 1 6370 16 view .LVU1915
 7172 0016 FFF7FEFF 		bl	bno055_read_gravity_xyz
 7173              	.LVL754:
6371:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
 7174              		.loc 1 6371 5 is_stmt 1 view .LVU1916
 7175              		.loc 1 6371 8 is_stmt 0 view .LVU1917
 7176 001a 0546     		mov	r5, r0
 7177 001c 00BB     		cbnz	r0, .L530
6372:Core/Src/bno055.c ****     {
6373:Core/Src/bno055.c ****         /* Convert raw gravity of xyz to m/s2 */
6374:Core/Src/bno055.c ****         gravity_xyz->x = (double)(reg_gravity_xyz.x / BNO055_GRAVITY_DIV_MSQ);
 7178              		.loc 1 6374 9 is_stmt 1 view .LVU1918
 7179              		.loc 1 6374 26 is_stmt 0 view .LVU1919
 7180 001e BDF90000 		ldrsh	r0, [sp]
 7181              	.LVL755:
 7182              		.loc 1 6374 26 view .LVU1920
 7183 0022 FFF7FEFF 		bl	__aeabi_i2d
 7184              	.LVL756:
 7185 0026 0022     		movs	r2, #0
 7186 0028 0F4B     		ldr	r3, .L533
 7187 002a FFF7FEFF 		bl	__aeabi_ddiv
 7188              	.LVL757:
 7189              		.loc 1 6374 24 view .LVU1921
 7190 002e C4E90001 		strd	r0, [r4]
6375:Core/Src/bno055.c ****         gravity_xyz->y = (double)(reg_gravity_xyz.y / BNO055_GRAVITY_DIV_MSQ);
 7191              		.loc 1 6375 9 is_stmt 1 view .LVU1922
 7192              		.loc 1 6375 26 is_stmt 0 view .LVU1923
 7193 0032 BDF90200 		ldrsh	r0, [sp, #2]
 7194 0036 FFF7FEFF 		bl	__aeabi_i2d
 7195              	.LVL758:
 7196 003a 0022     		movs	r2, #0
 7197 003c 0A4B     		ldr	r3, .L533
 7198 003e FFF7FEFF 		bl	__aeabi_ddiv
 7199              	.LVL759:
 7200              		.loc 1 6375 24 view .LVU1924
 7201 0042 C4E90201 		strd	r0, [r4, #8]
6376:Core/Src/bno055.c ****         gravity_xyz->z = (double)(reg_gravity_xyz.z / BNO055_GRAVITY_DIV_MSQ);
 7202              		.loc 1 6376 9 is_stmt 1 view .LVU1925
 7203              		.loc 1 6376 26 is_stmt 0 view .LVU1926
 7204 0046 BDF90400 		ldrsh	r0, [sp, #4]
 7205 004a FFF7FEFF 		bl	__aeabi_i2d
 7206              	.LVL760:
 7207 004e 0022     		movs	r2, #0
 7208 0050 054B     		ldr	r3, .L533
 7209 0052 FFF7FEFF 		bl	__aeabi_ddiv
 7210              	.LVL761:
 7211              		.loc 1 6376 24 view .LVU1927
 7212 0056 C4E90401 		strd	r0, [r4, #16]
 7213              	.L531:
 7214              	.LVL762:
6377:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 245


6378:Core/Src/bno055.c ****     else
6379:Core/Src/bno055.c ****     {
6380:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6381:Core/Src/bno055.c ****     }
6382:Core/Src/bno055.c **** 
6383:Core/Src/bno055.c ****     return com_rslt;
 7215              		.loc 1 6383 5 is_stmt 1 view .LVU1928
6384:Core/Src/bno055.c **** }
 7216              		.loc 1 6384 1 is_stmt 0 view .LVU1929
 7217 005a 2846     		mov	r0, r5
 7218 005c 03B0     		add	sp, sp, #12
 7219              	.LCFI251:
 7220              		.cfi_remember_state
 7221              		.cfi_def_cfa_offset 12
 7222              		@ sp needed
 7223 005e 30BD     		pop	{r4, r5, pc}
 7224              	.LVL763:
 7225              	.L530:
 7226              	.LCFI252:
 7227              		.cfi_restore_state
6380:Core/Src/bno055.c ****     }
 7228              		.loc 1 6380 9 is_stmt 1 view .LVU1930
6380:Core/Src/bno055.c ****     }
 7229              		.loc 1 6380 18 is_stmt 0 view .LVU1931
 7230 0060 451E     		subs	r5, r0, #1
 7231 0062 6DB2     		sxtb	r5, r5
 7232              	.LVL764:
6380:Core/Src/bno055.c ****     }
 7233              		.loc 1 6380 18 view .LVU1932
 7234 0064 F9E7     		b	.L531
 7235              	.L534:
 7236 0066 00BF     		.align	2
 7237              	.L533:
 7238 0068 00005940 		.word	1079574528
 7239              		.cfi_endproc
 7240              	.LFE114:
 7242              		.section	.text.bno055_get_mag_calib_stat,"ax",%progbits
 7243              		.align	1
 7244              		.global	bno055_get_mag_calib_stat
 7245              		.syntax unified
 7246              		.thumb
 7247              		.thumb_func
 7249              	bno055_get_mag_calib_stat:
 7250              	.LVL765:
 7251              	.LFB117:
6385:Core/Src/bno055.c **** 
6386:Core/Src/bno055.c **** /*!
6387:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6388:Core/Src/bno055.c ****  *  data to Fahrenheit output as double
6389:Core/Src/bno055.c ****  *
6390:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Fahrenheit
6391:Core/Src/bno055.c ****  *
6392:Core/Src/bno055.c ****  *  @return results of bus communication function
6393:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6394:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6395:Core/Src/bno055.c ****  *
6396:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 246


6397:Core/Src/bno055.c ****  */
6398:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_fahrenheit(double *temp_d)
6399:Core/Src/bno055.c **** {
6400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6401:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6402:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6403:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6404:Core/Src/bno055.c **** 
6405:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6406:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6407:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6408:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
6409:Core/Src/bno055.c ****     {
6410:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_FAHRENHEIT);
6411:Core/Src/bno055.c ****     }
6412:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6413:Core/Src/bno055.c ****     {
6414:Core/Src/bno055.c ****         /* Read the raw temperature data */
6415:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6416:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6417:Core/Src/bno055.c ****         {
6418:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6419:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_FAHRENHEIT);
6420:Core/Src/bno055.c ****             *temp_d = data_d;
6421:Core/Src/bno055.c ****         }
6422:Core/Src/bno055.c ****         else
6423:Core/Src/bno055.c ****         {
6424:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6425:Core/Src/bno055.c ****         }
6426:Core/Src/bno055.c ****     }
6427:Core/Src/bno055.c ****     else
6428:Core/Src/bno055.c ****     {
6429:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6430:Core/Src/bno055.c ****     }
6431:Core/Src/bno055.c **** 
6432:Core/Src/bno055.c ****     return com_rslt;
6433:Core/Src/bno055.c **** }
6434:Core/Src/bno055.c **** 
6435:Core/Src/bno055.c **** /*!
6436:Core/Src/bno055.c ****  *  @brief This API is used to convert the temperature
6437:Core/Src/bno055.c ****  *  data to Celsius output as double
6438:Core/Src/bno055.c ****  *
6439:Core/Src/bno055.c ****  *  @param temp_d : The double value of temperature Celsius
6440:Core/Src/bno055.c ****  *
6441:Core/Src/bno055.c ****  *  @return results of bus communication function
6442:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6443:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6444:Core/Src/bno055.c ****  *
6445:Core/Src/bno055.c ****  *
6446:Core/Src/bno055.c ****  */
6447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_convert_double_temp_celsius(double *temp_d)
6448:Core/Src/bno055.c **** {
6449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
6450:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
6451:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
6452:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
6453:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 247


6454:Core/Src/bno055.c ****     /* Read the current temperature unit and set the
6455:Core/Src/bno055.c ****      * unit as Fahrenheit if the unit is in Celsius */
6456:Core/Src/bno055.c ****     com_rslt = bno055_get_temp_unit(&temp_unit_u8);
6457:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
6458:Core/Src/bno055.c ****     {
6459:Core/Src/bno055.c ****         com_rslt += bno055_set_temp_unit(BNO055_TEMP_UNIT_CELSIUS);
6460:Core/Src/bno055.c ****     }
6461:Core/Src/bno055.c ****     if (com_rslt == BNO055_SUCCESS)
6462:Core/Src/bno055.c ****     {
6463:Core/Src/bno055.c ****         /* Read the raw temperature data */
6464:Core/Src/bno055.c ****         com_rslt += bno055_read_temp_data(&reg_temp_s8);
6465:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
6466:Core/Src/bno055.c ****         {
6467:Core/Src/bno055.c ****             /* Convert raw temperature data to Fahrenheit*/
6468:Core/Src/bno055.c ****             data_d = (double)(reg_temp_s8 / BNO055_TEMP_DIV_CELSIUS);
6469:Core/Src/bno055.c ****             *temp_d = data_d;
6470:Core/Src/bno055.c ****         }
6471:Core/Src/bno055.c ****         else
6472:Core/Src/bno055.c ****         {
6473:Core/Src/bno055.c ****             com_rslt += BNO055_ERROR;
6474:Core/Src/bno055.c ****         }
6475:Core/Src/bno055.c ****     }
6476:Core/Src/bno055.c ****     else
6477:Core/Src/bno055.c ****     {
6478:Core/Src/bno055.c ****         com_rslt += BNO055_ERROR;
6479:Core/Src/bno055.c ****     }
6480:Core/Src/bno055.c **** 
6481:Core/Src/bno055.c ****     return com_rslt;
6482:Core/Src/bno055.c **** }
6483:Core/Src/bno055.c **** #endif
6484:Core/Src/bno055.c **** 
6485:Core/Src/bno055.c **** /*!
6486:Core/Src/bno055.c ****  *  @brief This API used to read
6487:Core/Src/bno055.c ****  *  mag calibration status from register from 0x35 bit 0 and 1
6488:Core/Src/bno055.c ****  *
6489:Core/Src/bno055.c ****  *  @param mag_calib_u8 : The value of mag calib status
6490:Core/Src/bno055.c ****  *
6491:Core/Src/bno055.c ****  *
6492:Core/Src/bno055.c ****  *  @return results of bus communication function
6493:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6494:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6495:Core/Src/bno055.c ****  *
6496:Core/Src/bno055.c ****  */
6497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_calib_stat(u8 *mag_calib_u8)
6498:Core/Src/bno055.c **** {
 7252              		.loc 1 6498 1 is_stmt 1 view -0
 7253              		.cfi_startproc
 7254              		@ args = 0, pretend = 0, frame = 8
 7255              		@ frame_needed = 0, uses_anonymous_args = 0
 7256              		.loc 1 6498 1 is_stmt 0 view .LVU1934
 7257 0000 30B5     		push	{r4, r5, lr}
 7258              	.LCFI253:
 7259              		.cfi_def_cfa_offset 12
 7260              		.cfi_offset 4, -12
 7261              		.cfi_offset 5, -8
 7262              		.cfi_offset 14, -4
 7263 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 248


 7264              	.LCFI254:
 7265              		.cfi_def_cfa_offset 24
6499:Core/Src/bno055.c ****     /* Variable used to return value of
6500:Core/Src/bno055.c ****      * communication routine*/
6501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7266              		.loc 1 6501 5 is_stmt 1 view .LVU1935
 7267              	.LVL766:
6502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7268              		.loc 1 6502 5 view .LVU1936
 7269              		.loc 1 6502 8 is_stmt 0 view .LVU1937
 7270 0004 0023     		movs	r3, #0
 7271 0006 8DF80730 		strb	r3, [sp, #7]
6503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7272              		.loc 1 6503 5 is_stmt 1 view .LVU1938
 7273              	.LVL767:
6504:Core/Src/bno055.c **** 
6505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7274              		.loc 1 6506 5 view .LVU1939
 7275              		.loc 1 6506 18 is_stmt 0 view .LVU1940
 7276 000a 134B     		ldr	r3, .L543
 7277 000c 1B68     		ldr	r3, [r3]
 7278              		.loc 1 6506 8 view .LVU1941
 7279 000e E3B1     		cbz	r3, .L539
 7280 0010 0446     		mov	r4, r0
6507:Core/Src/bno055.c ****     {
6508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6509:Core/Src/bno055.c ****     }
6510:Core/Src/bno055.c ****     else
6511:Core/Src/bno055.c ****     {
6512:Core/Src/bno055.c ****         /*condition check for page, mag calib
6513:Core/Src/bno055.c ****          * available in the page zero*/
6514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7281              		.loc 1 6514 9 is_stmt 1 view .LVU1942
 7282              		.loc 1 6514 21 is_stmt 0 view .LVU1943
 7283 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7284              		.loc 1 6514 12 view .LVU1944
 7285 0014 9BB9     		cbnz	r3, .L542
 7286              	.LVL768:
 7287              	.L537:
6515:Core/Src/bno055.c ****         {
6516:Core/Src/bno055.c ****             /* Write the page zero*/
6517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6518:Core/Src/bno055.c ****         }
6519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7288              		.loc 1 6519 53 discriminator 1 view .LVU1945
 7289 0016 104B     		ldr	r3, .L543
 7290 0018 1B68     		ldr	r3, [r3]
 7291 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7292              		.loc 1 6519 41 discriminator 1 view .LVU1946
 7293 001c C3B9     		cbnz	r3, .L540
 7294              	.L538:
6520:Core/Src/bno055.c ****         {
6521:Core/Src/bno055.c ****             /* Read the mag calib stat_s8 */
6522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7295              		.loc 1 6522 13 is_stmt 1 view .LVU1947
 7296              		.loc 1 6522 32 is_stmt 0 view .LVU1948
ARM GAS  /tmp/ccO72alg.s 			page 249


 7297 001e 0E4B     		ldr	r3, .L543
 7298 0020 1868     		ldr	r0, [r3]
 7299 0022 0569     		ldr	r5, [r0, #16]
 7300              		.loc 1 6522 24 view .LVU1949
 7301 0024 0123     		movs	r3, #1
 7302 0026 0DF10702 		add	r2, sp, #7
 7303 002a 3521     		movs	r1, #53
 7304 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7305 002e A847     		blx	r5
 7306              	.LVL769:
6523:Core/Src/bno055.c ****                                                       BNO055_MAG_CALIB_STAT_REG,
6524:Core/Src/bno055.c ****                                                       &data_u8r,
6525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6526:Core/Src/bno055.c ****             *mag_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_CALIB_STAT);
 7307              		.loc 1 6526 13 is_stmt 1 view .LVU1950
 7308              		.loc 1 6526 29 is_stmt 0 view .LVU1951
 7309 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7310 0034 03F00303 		and	r3, r3, #3
 7311              		.loc 1 6526 27 view .LVU1952
 7312 0038 2370     		strb	r3, [r4]
 7313              	.LVL770:
 7314              	.L536:
6527:Core/Src/bno055.c ****         }
6528:Core/Src/bno055.c ****         else
6529:Core/Src/bno055.c ****         {
6530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6531:Core/Src/bno055.c ****         }
6532:Core/Src/bno055.c ****     }
6533:Core/Src/bno055.c **** 
6534:Core/Src/bno055.c ****     return com_rslt;
6535:Core/Src/bno055.c **** }
 7315              		.loc 1 6535 1 view .LVU1953
 7316 003a 03B0     		add	sp, sp, #12
 7317              	.LCFI255:
 7318              		.cfi_remember_state
 7319              		.cfi_def_cfa_offset 12
 7320              		@ sp needed
 7321 003c 30BD     		pop	{r4, r5, pc}
 7322              	.LVL771:
 7323              	.L542:
 7324              	.LCFI256:
 7325              		.cfi_restore_state
6517:Core/Src/bno055.c ****         }
 7326              		.loc 1 6517 13 is_stmt 1 view .LVU1954
6517:Core/Src/bno055.c ****         }
 7327              		.loc 1 6517 23 is_stmt 0 view .LVU1955
 7328 003e 0020     		movs	r0, #0
 7329              	.LVL772:
6517:Core/Src/bno055.c ****         }
 7330              		.loc 1 6517 23 view .LVU1956
 7331 0040 FFF7FEFF 		bl	bno055_write_page_id
 7332              	.LVL773:
6519:Core/Src/bno055.c ****         {
 7333              		.loc 1 6519 9 is_stmt 1 view .LVU1957
6519:Core/Src/bno055.c ****         {
 7334              		.loc 1 6519 12 is_stmt 0 view .LVU1958
 7335 0044 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 250


 7336 0046 EAD0     		beq	.L538
 7337 0048 E5E7     		b	.L537
 7338              	.LVL774:
 7339              	.L539:
6508:Core/Src/bno055.c ****     }
 7340              		.loc 1 6508 16 view .LVU1959
 7341 004a 6FF07E00 		mvn	r0, #126
 7342              	.LVL775:
6508:Core/Src/bno055.c ****     }
 7343              		.loc 1 6508 16 view .LVU1960
 7344 004e F4E7     		b	.L536
 7345              	.LVL776:
 7346              	.L540:
6530:Core/Src/bno055.c ****         }
 7347              		.loc 1 6530 22 view .LVU1961
 7348 0050 4FF0FF30 		mov	r0, #-1
 7349 0054 F1E7     		b	.L536
 7350              	.L544:
 7351 0056 00BF     		.align	2
 7352              	.L543:
 7353 0058 00000000 		.word	.LANCHOR0
 7354              		.cfi_endproc
 7355              	.LFE117:
 7357              		.section	.text.bno055_get_accel_calib_stat,"ax",%progbits
 7358              		.align	1
 7359              		.global	bno055_get_accel_calib_stat
 7360              		.syntax unified
 7361              		.thumb
 7362              		.thumb_func
 7364              	bno055_get_accel_calib_stat:
 7365              	.LVL777:
 7366              	.LFB118:
6536:Core/Src/bno055.c **** 
6537:Core/Src/bno055.c **** /*!
6538:Core/Src/bno055.c ****  *  @brief This API used to read
6539:Core/Src/bno055.c ****  *  accel calibration status from register from 0x35 bit 2 and 3
6540:Core/Src/bno055.c ****  *
6541:Core/Src/bno055.c ****  *  @param accel_calib_u8 : The value of accel calib status
6542:Core/Src/bno055.c ****  *
6543:Core/Src/bno055.c ****  *
6544:Core/Src/bno055.c ****  *  @return results of bus communication function
6545:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6546:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6547:Core/Src/bno055.c ****  *
6548:Core/Src/bno055.c ****  */
6549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_calib_stat(u8 *accel_calib_u8)
6550:Core/Src/bno055.c **** {
 7367              		.loc 1 6550 1 is_stmt 1 view -0
 7368              		.cfi_startproc
 7369              		@ args = 0, pretend = 0, frame = 8
 7370              		@ frame_needed = 0, uses_anonymous_args = 0
 7371              		.loc 1 6550 1 is_stmt 0 view .LVU1963
 7372 0000 30B5     		push	{r4, r5, lr}
 7373              	.LCFI257:
 7374              		.cfi_def_cfa_offset 12
 7375              		.cfi_offset 4, -12
 7376              		.cfi_offset 5, -8
ARM GAS  /tmp/ccO72alg.s 			page 251


 7377              		.cfi_offset 14, -4
 7378 0002 83B0     		sub	sp, sp, #12
 7379              	.LCFI258:
 7380              		.cfi_def_cfa_offset 24
6551:Core/Src/bno055.c ****     /* Variable used to return value of
6552:Core/Src/bno055.c ****      * communication routine*/
6553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7381              		.loc 1 6553 5 is_stmt 1 view .LVU1964
 7382              	.LVL778:
6554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7383              		.loc 1 6554 5 view .LVU1965
 7384              		.loc 1 6554 8 is_stmt 0 view .LVU1966
 7385 0004 0023     		movs	r3, #0
 7386 0006 8DF80730 		strb	r3, [sp, #7]
6555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7387              		.loc 1 6555 5 is_stmt 1 view .LVU1967
 7388              	.LVL779:
6556:Core/Src/bno055.c **** 
6557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7389              		.loc 1 6558 5 view .LVU1968
 7390              		.loc 1 6558 18 is_stmt 0 view .LVU1969
 7391 000a 134B     		ldr	r3, .L553
 7392 000c 1B68     		ldr	r3, [r3]
 7393              		.loc 1 6558 8 view .LVU1970
 7394 000e E3B1     		cbz	r3, .L549
 7395 0010 0446     		mov	r4, r0
6559:Core/Src/bno055.c ****     {
6560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6561:Core/Src/bno055.c ****     }
6562:Core/Src/bno055.c ****     else
6563:Core/Src/bno055.c ****     {
6564:Core/Src/bno055.c ****         /*condition check for page, accel calib
6565:Core/Src/bno055.c ****          * available in the page zero*/
6566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7396              		.loc 1 6566 9 is_stmt 1 view .LVU1971
 7397              		.loc 1 6566 21 is_stmt 0 view .LVU1972
 7398 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7399              		.loc 1 6566 12 view .LVU1973
 7400 0014 9BB9     		cbnz	r3, .L552
 7401              	.LVL780:
 7402              	.L547:
6567:Core/Src/bno055.c ****         {
6568:Core/Src/bno055.c ****             /* Write the page zero*/
6569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6570:Core/Src/bno055.c ****         }
6571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7403              		.loc 1 6571 53 discriminator 1 view .LVU1974
 7404 0016 104B     		ldr	r3, .L553
 7405 0018 1B68     		ldr	r3, [r3]
 7406 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7407              		.loc 1 6571 41 discriminator 1 view .LVU1975
 7408 001c C3B9     		cbnz	r3, .L550
 7409              	.L548:
6572:Core/Src/bno055.c ****         {
6573:Core/Src/bno055.c ****             /* Read the accel calib stat_s8 */
6574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 252


 7410              		.loc 1 6574 13 is_stmt 1 view .LVU1976
 7411              		.loc 1 6574 32 is_stmt 0 view .LVU1977
 7412 001e 0E4B     		ldr	r3, .L553
 7413 0020 1868     		ldr	r0, [r3]
 7414 0022 0569     		ldr	r5, [r0, #16]
 7415              		.loc 1 6574 24 view .LVU1978
 7416 0024 0123     		movs	r3, #1
 7417 0026 0DF10702 		add	r2, sp, #7
 7418 002a 3521     		movs	r1, #53
 7419 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7420 002e A847     		blx	r5
 7421              	.LVL781:
6575:Core/Src/bno055.c ****                                                       BNO055_ACCEL_CALIB_STAT_REG,
6576:Core/Src/bno055.c ****                                                       &data_u8r,
6577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6578:Core/Src/bno055.c ****             *accel_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_CALIB_STAT);
 7422              		.loc 1 6578 13 is_stmt 1 view .LVU1979
 7423              		.loc 1 6578 31 is_stmt 0 view .LVU1980
 7424 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7425 0034 C3F38103 		ubfx	r3, r3, #2, #2
 7426              		.loc 1 6578 29 view .LVU1981
 7427 0038 2370     		strb	r3, [r4]
 7428              	.LVL782:
 7429              	.L546:
6579:Core/Src/bno055.c ****         }
6580:Core/Src/bno055.c ****         else
6581:Core/Src/bno055.c ****         {
6582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6583:Core/Src/bno055.c ****         }
6584:Core/Src/bno055.c ****     }
6585:Core/Src/bno055.c **** 
6586:Core/Src/bno055.c ****     return com_rslt;
6587:Core/Src/bno055.c **** }
 7430              		.loc 1 6587 1 view .LVU1982
 7431 003a 03B0     		add	sp, sp, #12
 7432              	.LCFI259:
 7433              		.cfi_remember_state
 7434              		.cfi_def_cfa_offset 12
 7435              		@ sp needed
 7436 003c 30BD     		pop	{r4, r5, pc}
 7437              	.LVL783:
 7438              	.L552:
 7439              	.LCFI260:
 7440              		.cfi_restore_state
6569:Core/Src/bno055.c ****         }
 7441              		.loc 1 6569 13 is_stmt 1 view .LVU1983
6569:Core/Src/bno055.c ****         }
 7442              		.loc 1 6569 23 is_stmt 0 view .LVU1984
 7443 003e 0020     		movs	r0, #0
 7444              	.LVL784:
6569:Core/Src/bno055.c ****         }
 7445              		.loc 1 6569 23 view .LVU1985
 7446 0040 FFF7FEFF 		bl	bno055_write_page_id
 7447              	.LVL785:
6571:Core/Src/bno055.c ****         {
 7448              		.loc 1 6571 9 is_stmt 1 view .LVU1986
6571:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 253


 7449              		.loc 1 6571 12 is_stmt 0 view .LVU1987
 7450 0044 0028     		cmp	r0, #0
 7451 0046 EAD0     		beq	.L548
 7452 0048 E5E7     		b	.L547
 7453              	.LVL786:
 7454              	.L549:
6560:Core/Src/bno055.c ****     }
 7455              		.loc 1 6560 16 view .LVU1988
 7456 004a 6FF07E00 		mvn	r0, #126
 7457              	.LVL787:
6560:Core/Src/bno055.c ****     }
 7458              		.loc 1 6560 16 view .LVU1989
 7459 004e F4E7     		b	.L546
 7460              	.LVL788:
 7461              	.L550:
6582:Core/Src/bno055.c ****         }
 7462              		.loc 1 6582 22 view .LVU1990
 7463 0050 4FF0FF30 		mov	r0, #-1
 7464 0054 F1E7     		b	.L546
 7465              	.L554:
 7466 0056 00BF     		.align	2
 7467              	.L553:
 7468 0058 00000000 		.word	.LANCHOR0
 7469              		.cfi_endproc
 7470              	.LFE118:
 7472              		.section	.text.bno055_get_gyro_calib_stat,"ax",%progbits
 7473              		.align	1
 7474              		.global	bno055_get_gyro_calib_stat
 7475              		.syntax unified
 7476              		.thumb
 7477              		.thumb_func
 7479              	bno055_get_gyro_calib_stat:
 7480              	.LVL789:
 7481              	.LFB119:
6588:Core/Src/bno055.c **** 
6589:Core/Src/bno055.c **** /*!
6590:Core/Src/bno055.c ****  *  @brief This API used to read
6591:Core/Src/bno055.c ****  *  gyro calibration status from register from 0x35 bit 4 and 5
6592:Core/Src/bno055.c ****  *
6593:Core/Src/bno055.c ****  *  @param gyro_calib_u8 : The value of gyro calib status
6594:Core/Src/bno055.c ****  *
6595:Core/Src/bno055.c ****  *
6596:Core/Src/bno055.c ****  *  @return results of bus communication function
6597:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6598:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6599:Core/Src/bno055.c ****  *
6600:Core/Src/bno055.c ****  */
6601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_calib_stat(u8 *gyro_calib_u8)
6602:Core/Src/bno055.c **** {
 7482              		.loc 1 6602 1 is_stmt 1 view -0
 7483              		.cfi_startproc
 7484              		@ args = 0, pretend = 0, frame = 8
 7485              		@ frame_needed = 0, uses_anonymous_args = 0
 7486              		.loc 1 6602 1 is_stmt 0 view .LVU1992
 7487 0000 30B5     		push	{r4, r5, lr}
 7488              	.LCFI261:
 7489              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 254


 7490              		.cfi_offset 4, -12
 7491              		.cfi_offset 5, -8
 7492              		.cfi_offset 14, -4
 7493 0002 83B0     		sub	sp, sp, #12
 7494              	.LCFI262:
 7495              		.cfi_def_cfa_offset 24
6603:Core/Src/bno055.c ****     /* Variable used to return value of
6604:Core/Src/bno055.c ****      * communication routine*/
6605:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7496              		.loc 1 6605 5 is_stmt 1 view .LVU1993
 7497              	.LVL790:
6606:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7498              		.loc 1 6606 5 view .LVU1994
 7499              		.loc 1 6606 8 is_stmt 0 view .LVU1995
 7500 0004 0023     		movs	r3, #0
 7501 0006 8DF80730 		strb	r3, [sp, #7]
6607:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7502              		.loc 1 6607 5 is_stmt 1 view .LVU1996
 7503              	.LVL791:
6608:Core/Src/bno055.c **** 
6609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7504              		.loc 1 6610 5 view .LVU1997
 7505              		.loc 1 6610 18 is_stmt 0 view .LVU1998
 7506 000a 134B     		ldr	r3, .L563
 7507 000c 1B68     		ldr	r3, [r3]
 7508              		.loc 1 6610 8 view .LVU1999
 7509 000e E3B1     		cbz	r3, .L559
 7510 0010 0446     		mov	r4, r0
6611:Core/Src/bno055.c ****     {
6612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6613:Core/Src/bno055.c ****     }
6614:Core/Src/bno055.c ****     else
6615:Core/Src/bno055.c ****     {
6616:Core/Src/bno055.c ****         /*condition check for page, gyro calib
6617:Core/Src/bno055.c ****          * available in the page zero*/
6618:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7511              		.loc 1 6618 9 is_stmt 1 view .LVU2000
 7512              		.loc 1 6618 21 is_stmt 0 view .LVU2001
 7513 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7514              		.loc 1 6618 12 view .LVU2002
 7515 0014 9BB9     		cbnz	r3, .L562
 7516              	.LVL792:
 7517              	.L557:
6619:Core/Src/bno055.c ****         {
6620:Core/Src/bno055.c ****             /* Write the page zero*/
6621:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6622:Core/Src/bno055.c ****         }
6623:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7518              		.loc 1 6623 53 discriminator 1 view .LVU2003
 7519 0016 104B     		ldr	r3, .L563
 7520 0018 1B68     		ldr	r3, [r3]
 7521 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7522              		.loc 1 6623 41 discriminator 1 view .LVU2004
 7523 001c C3B9     		cbnz	r3, .L560
 7524              	.L558:
6624:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 255


6625:Core/Src/bno055.c ****             /* Read the gyro calib status */
6626:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7525              		.loc 1 6626 13 is_stmt 1 view .LVU2005
 7526              		.loc 1 6626 32 is_stmt 0 view .LVU2006
 7527 001e 0E4B     		ldr	r3, .L563
 7528 0020 1868     		ldr	r0, [r3]
 7529 0022 0569     		ldr	r5, [r0, #16]
 7530              		.loc 1 6626 24 view .LVU2007
 7531 0024 0123     		movs	r3, #1
 7532 0026 0DF10702 		add	r2, sp, #7
 7533 002a 3521     		movs	r1, #53
 7534 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7535 002e A847     		blx	r5
 7536              	.LVL793:
6627:Core/Src/bno055.c ****                                                       BNO055_GYRO_CALIB_STAT_REG,
6628:Core/Src/bno055.c ****                                                       &data_u8r,
6629:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6630:Core/Src/bno055.c ****             *gyro_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_CALIB_STAT);
 7537              		.loc 1 6630 13 is_stmt 1 view .LVU2008
 7538              		.loc 1 6630 30 is_stmt 0 view .LVU2009
 7539 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7540 0034 C3F30113 		ubfx	r3, r3, #4, #2
 7541              		.loc 1 6630 28 view .LVU2010
 7542 0038 2370     		strb	r3, [r4]
 7543              	.LVL794:
 7544              	.L556:
6631:Core/Src/bno055.c ****         }
6632:Core/Src/bno055.c ****         else
6633:Core/Src/bno055.c ****         {
6634:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6635:Core/Src/bno055.c ****         }
6636:Core/Src/bno055.c ****     }
6637:Core/Src/bno055.c **** 
6638:Core/Src/bno055.c ****     return com_rslt;
6639:Core/Src/bno055.c **** }
 7545              		.loc 1 6639 1 view .LVU2011
 7546 003a 03B0     		add	sp, sp, #12
 7547              	.LCFI263:
 7548              		.cfi_remember_state
 7549              		.cfi_def_cfa_offset 12
 7550              		@ sp needed
 7551 003c 30BD     		pop	{r4, r5, pc}
 7552              	.LVL795:
 7553              	.L562:
 7554              	.LCFI264:
 7555              		.cfi_restore_state
6621:Core/Src/bno055.c ****         }
 7556              		.loc 1 6621 13 is_stmt 1 view .LVU2012
6621:Core/Src/bno055.c ****         }
 7557              		.loc 1 6621 23 is_stmt 0 view .LVU2013
 7558 003e 0020     		movs	r0, #0
 7559              	.LVL796:
6621:Core/Src/bno055.c ****         }
 7560              		.loc 1 6621 23 view .LVU2014
 7561 0040 FFF7FEFF 		bl	bno055_write_page_id
 7562              	.LVL797:
6623:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 256


 7563              		.loc 1 6623 9 is_stmt 1 view .LVU2015
6623:Core/Src/bno055.c ****         {
 7564              		.loc 1 6623 12 is_stmt 0 view .LVU2016
 7565 0044 0028     		cmp	r0, #0
 7566 0046 EAD0     		beq	.L558
 7567 0048 E5E7     		b	.L557
 7568              	.LVL798:
 7569              	.L559:
6612:Core/Src/bno055.c ****     }
 7570              		.loc 1 6612 16 view .LVU2017
 7571 004a 6FF07E00 		mvn	r0, #126
 7572              	.LVL799:
6612:Core/Src/bno055.c ****     }
 7573              		.loc 1 6612 16 view .LVU2018
 7574 004e F4E7     		b	.L556
 7575              	.LVL800:
 7576              	.L560:
6634:Core/Src/bno055.c ****         }
 7577              		.loc 1 6634 22 view .LVU2019
 7578 0050 4FF0FF30 		mov	r0, #-1
 7579 0054 F1E7     		b	.L556
 7580              	.L564:
 7581 0056 00BF     		.align	2
 7582              	.L563:
 7583 0058 00000000 		.word	.LANCHOR0
 7584              		.cfi_endproc
 7585              	.LFE119:
 7587              		.section	.text.bno055_get_sys_calib_stat,"ax",%progbits
 7588              		.align	1
 7589              		.global	bno055_get_sys_calib_stat
 7590              		.syntax unified
 7591              		.thumb
 7592              		.thumb_func
 7594              	bno055_get_sys_calib_stat:
 7595              	.LVL801:
 7596              	.LFB120:
6640:Core/Src/bno055.c **** 
6641:Core/Src/bno055.c **** /*!
6642:Core/Src/bno055.c ****  *  @brief This API used to read
6643:Core/Src/bno055.c ****  *  system calibration status from register from 0x35 bit 6 and 7
6644:Core/Src/bno055.c ****  *
6645:Core/Src/bno055.c ****  *  @param sys_calib_u8 : The value of system calib status
6646:Core/Src/bno055.c ****  *
6647:Core/Src/bno055.c ****  *
6648:Core/Src/bno055.c ****  *  @return results of bus communication function
6649:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6650:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6651:Core/Src/bno055.c ****  *
6652:Core/Src/bno055.c ****  */
6653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_calib_stat(u8 *sys_calib_u8)
6654:Core/Src/bno055.c **** {
 7597              		.loc 1 6654 1 is_stmt 1 view -0
 7598              		.cfi_startproc
 7599              		@ args = 0, pretend = 0, frame = 8
 7600              		@ frame_needed = 0, uses_anonymous_args = 0
 7601              		.loc 1 6654 1 is_stmt 0 view .LVU2021
 7602 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccO72alg.s 			page 257


 7603              	.LCFI265:
 7604              		.cfi_def_cfa_offset 12
 7605              		.cfi_offset 4, -12
 7606              		.cfi_offset 5, -8
 7607              		.cfi_offset 14, -4
 7608 0002 83B0     		sub	sp, sp, #12
 7609              	.LCFI266:
 7610              		.cfi_def_cfa_offset 24
6655:Core/Src/bno055.c ****     /* Variable used to return value of
6656:Core/Src/bno055.c ****      * communication routine*/
6657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7611              		.loc 1 6657 5 is_stmt 1 view .LVU2022
 7612              	.LVL802:
6658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7613              		.loc 1 6658 5 view .LVU2023
 7614              		.loc 1 6658 8 is_stmt 0 view .LVU2024
 7615 0004 0023     		movs	r3, #0
 7616 0006 8DF80730 		strb	r3, [sp, #7]
6659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7617              		.loc 1 6659 5 is_stmt 1 view .LVU2025
 7618              	.LVL803:
6660:Core/Src/bno055.c **** 
6661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty*/
6662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7619              		.loc 1 6662 5 view .LVU2026
 7620              		.loc 1 6662 18 is_stmt 0 view .LVU2027
 7621 000a 124B     		ldr	r3, .L573
 7622 000c 1B68     		ldr	r3, [r3]
 7623              		.loc 1 6662 8 view .LVU2028
 7624 000e DBB1     		cbz	r3, .L569
 7625 0010 0446     		mov	r4, r0
6663:Core/Src/bno055.c ****     {
6664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6665:Core/Src/bno055.c ****     }
6666:Core/Src/bno055.c ****     else
6667:Core/Src/bno055.c ****     {
6668:Core/Src/bno055.c ****         /*condition check for page,system calib
6669:Core/Src/bno055.c ****          * available in the page zero*/
6670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7626              		.loc 1 6670 9 is_stmt 1 view .LVU2029
 7627              		.loc 1 6670 21 is_stmt 0 view .LVU2030
 7628 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7629              		.loc 1 6670 12 view .LVU2031
 7630 0014 93B9     		cbnz	r3, .L572
 7631              	.LVL804:
 7632              	.L567:
6671:Core/Src/bno055.c ****         {
6672:Core/Src/bno055.c ****             /* Write the page zero*/
6673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6674:Core/Src/bno055.c ****         }
6675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7633              		.loc 1 6675 53 discriminator 1 view .LVU2032
 7634 0016 0F4B     		ldr	r3, .L573
 7635 0018 1B68     		ldr	r3, [r3]
 7636 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7637              		.loc 1 6675 41 discriminator 1 view .LVU2033
 7638 001c BBB9     		cbnz	r3, .L570
ARM GAS  /tmp/ccO72alg.s 			page 258


 7639              	.L568:
6676:Core/Src/bno055.c ****         {
6677:Core/Src/bno055.c ****             /* Read the system calib */
6678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7640              		.loc 1 6678 13 is_stmt 1 view .LVU2034
 7641              		.loc 1 6678 32 is_stmt 0 view .LVU2035
 7642 001e 0D4B     		ldr	r3, .L573
 7643 0020 1868     		ldr	r0, [r3]
 7644 0022 0569     		ldr	r5, [r0, #16]
 7645              		.loc 1 6678 24 view .LVU2036
 7646 0024 0123     		movs	r3, #1
 7647 0026 0DF10702 		add	r2, sp, #7
 7648 002a 3521     		movs	r1, #53
 7649 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7650 002e A847     		blx	r5
 7651              	.LVL805:
6679:Core/Src/bno055.c ****                                                       BNO055_SYS_CALIB_STAT_REG,
6680:Core/Src/bno055.c ****                                                       &data_u8r,
6681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6682:Core/Src/bno055.c ****             *sys_calib_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_CALIB_STAT);
 7652              		.loc 1 6682 13 is_stmt 1 view .LVU2037
 7653              		.loc 1 6682 29 is_stmt 0 view .LVU2038
 7654 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7655 0034 9B09     		lsrs	r3, r3, #6
 7656              		.loc 1 6682 27 view .LVU2039
 7657 0036 2370     		strb	r3, [r4]
 7658              	.LVL806:
 7659              	.L566:
6683:Core/Src/bno055.c ****         }
6684:Core/Src/bno055.c ****         else
6685:Core/Src/bno055.c ****         {
6686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6687:Core/Src/bno055.c ****         }
6688:Core/Src/bno055.c ****     }
6689:Core/Src/bno055.c **** 
6690:Core/Src/bno055.c ****     return com_rslt;
6691:Core/Src/bno055.c **** }
 7660              		.loc 1 6691 1 view .LVU2040
 7661 0038 03B0     		add	sp, sp, #12
 7662              	.LCFI267:
 7663              		.cfi_remember_state
 7664              		.cfi_def_cfa_offset 12
 7665              		@ sp needed
 7666 003a 30BD     		pop	{r4, r5, pc}
 7667              	.LVL807:
 7668              	.L572:
 7669              	.LCFI268:
 7670              		.cfi_restore_state
6673:Core/Src/bno055.c ****         }
 7671              		.loc 1 6673 13 is_stmt 1 view .LVU2041
6673:Core/Src/bno055.c ****         }
 7672              		.loc 1 6673 23 is_stmt 0 view .LVU2042
 7673 003c 0020     		movs	r0, #0
 7674              	.LVL808:
6673:Core/Src/bno055.c ****         }
 7675              		.loc 1 6673 23 view .LVU2043
 7676 003e FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccO72alg.s 			page 259


 7677              	.LVL809:
6675:Core/Src/bno055.c ****         {
 7678              		.loc 1 6675 9 is_stmt 1 view .LVU2044
6675:Core/Src/bno055.c ****         {
 7679              		.loc 1 6675 12 is_stmt 0 view .LVU2045
 7680 0042 0028     		cmp	r0, #0
 7681 0044 EBD0     		beq	.L568
 7682 0046 E6E7     		b	.L567
 7683              	.LVL810:
 7684              	.L569:
6664:Core/Src/bno055.c ****     }
 7685              		.loc 1 6664 16 view .LVU2046
 7686 0048 6FF07E00 		mvn	r0, #126
 7687              	.LVL811:
6664:Core/Src/bno055.c ****     }
 7688              		.loc 1 6664 16 view .LVU2047
 7689 004c F4E7     		b	.L566
 7690              	.LVL812:
 7691              	.L570:
6686:Core/Src/bno055.c ****         }
 7692              		.loc 1 6686 22 view .LVU2048
 7693 004e 4FF0FF30 		mov	r0, #-1
 7694 0052 F1E7     		b	.L566
 7695              	.L574:
 7696              		.align	2
 7697              	.L573:
 7698 0054 00000000 		.word	.LANCHOR0
 7699              		.cfi_endproc
 7700              	.LFE120:
 7702              		.section	.text.bno055_get_selftest_accel,"ax",%progbits
 7703              		.align	1
 7704              		.global	bno055_get_selftest_accel
 7705              		.syntax unified
 7706              		.thumb
 7707              		.thumb_func
 7709              	bno055_get_selftest_accel:
 7710              	.LVL813:
 7711              	.LFB121:
6692:Core/Src/bno055.c **** 
6693:Core/Src/bno055.c **** /*!
6694:Core/Src/bno055.c ****  *  @brief This API used to read
6695:Core/Src/bno055.c ****  *  self test of accel from register from 0x36 bit 0
6696:Core/Src/bno055.c ****  *
6697:Core/Src/bno055.c ****  *  @param selftest_accel_u8 : The value of self test of accel
6698:Core/Src/bno055.c ****  *
6699:Core/Src/bno055.c ****  *    selftest_accel_u8 |  result
6700:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6701:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6702:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6703:Core/Src/bno055.c ****  *
6704:Core/Src/bno055.c ****  *  @return results of bus communication function
6705:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6706:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6707:Core/Src/bno055.c ****  *
6708:Core/Src/bno055.c ****  */
6709:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_accel(u8 *selftest_accel_u8)
6710:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 260


 7712              		.loc 1 6710 1 is_stmt 1 view -0
 7713              		.cfi_startproc
 7714              		@ args = 0, pretend = 0, frame = 8
 7715              		@ frame_needed = 0, uses_anonymous_args = 0
 7716              		.loc 1 6710 1 is_stmt 0 view .LVU2050
 7717 0000 30B5     		push	{r4, r5, lr}
 7718              	.LCFI269:
 7719              		.cfi_def_cfa_offset 12
 7720              		.cfi_offset 4, -12
 7721              		.cfi_offset 5, -8
 7722              		.cfi_offset 14, -4
 7723 0002 83B0     		sub	sp, sp, #12
 7724              	.LCFI270:
 7725              		.cfi_def_cfa_offset 24
6711:Core/Src/bno055.c ****     /* Variable used to return value of
6712:Core/Src/bno055.c ****      * communication routine*/
6713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7726              		.loc 1 6713 5 is_stmt 1 view .LVU2051
 7727              	.LVL814:
6714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7728              		.loc 1 6714 5 view .LVU2052
 7729              		.loc 1 6714 8 is_stmt 0 view .LVU2053
 7730 0004 0023     		movs	r3, #0
 7731 0006 8DF80730 		strb	r3, [sp, #7]
6715:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7732              		.loc 1 6715 5 is_stmt 1 view .LVU2054
 7733              	.LVL815:
6716:Core/Src/bno055.c **** 
6717:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6718:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7734              		.loc 1 6718 5 view .LVU2055
 7735              		.loc 1 6718 18 is_stmt 0 view .LVU2056
 7736 000a 134B     		ldr	r3, .L583
 7737 000c 1B68     		ldr	r3, [r3]
 7738              		.loc 1 6718 8 view .LVU2057
 7739 000e E3B1     		cbz	r3, .L579
 7740 0010 0446     		mov	r4, r0
6719:Core/Src/bno055.c ****     {
6720:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6721:Core/Src/bno055.c ****     }
6722:Core/Src/bno055.c ****     else
6723:Core/Src/bno055.c ****     {
6724:Core/Src/bno055.c ****         /*condition check for page, accel self test is
6725:Core/Src/bno055.c ****          * available in the page zero*/
6726:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7741              		.loc 1 6726 9 is_stmt 1 view .LVU2058
 7742              		.loc 1 6726 21 is_stmt 0 view .LVU2059
 7743 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7744              		.loc 1 6726 12 view .LVU2060
 7745 0014 9BB9     		cbnz	r3, .L582
 7746              	.LVL816:
 7747              	.L577:
6727:Core/Src/bno055.c ****         {
6728:Core/Src/bno055.c ****             /* Write the page zero*/
6729:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6730:Core/Src/bno055.c ****         }
6731:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
ARM GAS  /tmp/ccO72alg.s 			page 261


 7748              		.loc 1 6731 53 discriminator 1 view .LVU2061
 7749 0016 104B     		ldr	r3, .L583
 7750 0018 1B68     		ldr	r3, [r3]
 7751 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7752              		.loc 1 6731 41 discriminator 1 view .LVU2062
 7753 001c C3B9     		cbnz	r3, .L580
 7754              	.L578:
6732:Core/Src/bno055.c ****         {
6733:Core/Src/bno055.c ****             /* Read the accel self test */
6734:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7755              		.loc 1 6734 13 is_stmt 1 view .LVU2063
 7756              		.loc 1 6734 32 is_stmt 0 view .LVU2064
 7757 001e 0E4B     		ldr	r3, .L583
 7758 0020 1868     		ldr	r0, [r3]
 7759 0022 0569     		ldr	r5, [r0, #16]
 7760              		.loc 1 6734 24 view .LVU2065
 7761 0024 0123     		movs	r3, #1
 7762 0026 0DF10702 		add	r2, sp, #7
 7763 002a 3621     		movs	r1, #54
 7764 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7765 002e A847     		blx	r5
 7766              	.LVL817:
6735:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_ACCEL_REG,
6736:Core/Src/bno055.c ****                                                       &data_u8r,
6737:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6738:Core/Src/bno055.c ****             *selftest_accel_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_ACCEL);
 7767              		.loc 1 6738 13 is_stmt 1 view .LVU2066
 7768              		.loc 1 6738 34 is_stmt 0 view .LVU2067
 7769 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7770 0034 03F00103 		and	r3, r3, #1
 7771              		.loc 1 6738 32 view .LVU2068
 7772 0038 2370     		strb	r3, [r4]
 7773              	.LVL818:
 7774              	.L576:
6739:Core/Src/bno055.c ****         }
6740:Core/Src/bno055.c ****         else
6741:Core/Src/bno055.c ****         {
6742:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6743:Core/Src/bno055.c ****         }
6744:Core/Src/bno055.c ****     }
6745:Core/Src/bno055.c **** 
6746:Core/Src/bno055.c ****     return com_rslt;
6747:Core/Src/bno055.c **** }
 7775              		.loc 1 6747 1 view .LVU2069
 7776 003a 03B0     		add	sp, sp, #12
 7777              	.LCFI271:
 7778              		.cfi_remember_state
 7779              		.cfi_def_cfa_offset 12
 7780              		@ sp needed
 7781 003c 30BD     		pop	{r4, r5, pc}
 7782              	.LVL819:
 7783              	.L582:
 7784              	.LCFI272:
 7785              		.cfi_restore_state
6729:Core/Src/bno055.c ****         }
 7786              		.loc 1 6729 13 is_stmt 1 view .LVU2070
6729:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 262


 7787              		.loc 1 6729 23 is_stmt 0 view .LVU2071
 7788 003e 0020     		movs	r0, #0
 7789              	.LVL820:
6729:Core/Src/bno055.c ****         }
 7790              		.loc 1 6729 23 view .LVU2072
 7791 0040 FFF7FEFF 		bl	bno055_write_page_id
 7792              	.LVL821:
6731:Core/Src/bno055.c ****         {
 7793              		.loc 1 6731 9 is_stmt 1 view .LVU2073
6731:Core/Src/bno055.c ****         {
 7794              		.loc 1 6731 12 is_stmt 0 view .LVU2074
 7795 0044 0028     		cmp	r0, #0
 7796 0046 EAD0     		beq	.L578
 7797 0048 E5E7     		b	.L577
 7798              	.LVL822:
 7799              	.L579:
6720:Core/Src/bno055.c ****     }
 7800              		.loc 1 6720 16 view .LVU2075
 7801 004a 6FF07E00 		mvn	r0, #126
 7802              	.LVL823:
6720:Core/Src/bno055.c ****     }
 7803              		.loc 1 6720 16 view .LVU2076
 7804 004e F4E7     		b	.L576
 7805              	.LVL824:
 7806              	.L580:
6742:Core/Src/bno055.c ****         }
 7807              		.loc 1 6742 22 view .LVU2077
 7808 0050 4FF0FF30 		mov	r0, #-1
 7809 0054 F1E7     		b	.L576
 7810              	.L584:
 7811 0056 00BF     		.align	2
 7812              	.L583:
 7813 0058 00000000 		.word	.LANCHOR0
 7814              		.cfi_endproc
 7815              	.LFE121:
 7817              		.section	.text.bno055_get_selftest_mag,"ax",%progbits
 7818              		.align	1
 7819              		.global	bno055_get_selftest_mag
 7820              		.syntax unified
 7821              		.thumb
 7822              		.thumb_func
 7824              	bno055_get_selftest_mag:
 7825              	.LVL825:
 7826              	.LFB122:
6748:Core/Src/bno055.c **** 
6749:Core/Src/bno055.c **** /*!
6750:Core/Src/bno055.c ****  *  @brief This API used to read
6751:Core/Src/bno055.c ****  *  self test of mag from register from 0x36 bit 1
6752:Core/Src/bno055.c ****  *
6753:Core/Src/bno055.c ****  *  @param selftest_mag_u8 : The value of self test of mag
6754:Core/Src/bno055.c ****  *
6755:Core/Src/bno055.c ****  *     selftest_mag_u8  |  result
6756:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6757:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6758:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6759:Core/Src/bno055.c ****  *
6760:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccO72alg.s 			page 263


6761:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6762:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6763:Core/Src/bno055.c ****  *
6764:Core/Src/bno055.c ****  */
6765:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mag(u8 *selftest_mag_u8)
6766:Core/Src/bno055.c **** {
 7827              		.loc 1 6766 1 is_stmt 1 view -0
 7828              		.cfi_startproc
 7829              		@ args = 0, pretend = 0, frame = 8
 7830              		@ frame_needed = 0, uses_anonymous_args = 0
 7831              		.loc 1 6766 1 is_stmt 0 view .LVU2079
 7832 0000 30B5     		push	{r4, r5, lr}
 7833              	.LCFI273:
 7834              		.cfi_def_cfa_offset 12
 7835              		.cfi_offset 4, -12
 7836              		.cfi_offset 5, -8
 7837              		.cfi_offset 14, -4
 7838 0002 83B0     		sub	sp, sp, #12
 7839              	.LCFI274:
 7840              		.cfi_def_cfa_offset 24
6767:Core/Src/bno055.c ****     /* Variable used to return value of
6768:Core/Src/bno055.c ****      * communication routine*/
6769:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7841              		.loc 1 6769 5 is_stmt 1 view .LVU2080
 7842              	.LVL826:
6770:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7843              		.loc 1 6770 5 view .LVU2081
 7844              		.loc 1 6770 8 is_stmt 0 view .LVU2082
 7845 0004 0023     		movs	r3, #0
 7846 0006 8DF80730 		strb	r3, [sp, #7]
6771:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7847              		.loc 1 6771 5 is_stmt 1 view .LVU2083
 7848              	.LVL827:
6772:Core/Src/bno055.c **** 
6773:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6774:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7849              		.loc 1 6774 5 view .LVU2084
 7850              		.loc 1 6774 18 is_stmt 0 view .LVU2085
 7851 000a 134B     		ldr	r3, .L593
 7852 000c 1B68     		ldr	r3, [r3]
 7853              		.loc 1 6774 8 view .LVU2086
 7854 000e E3B1     		cbz	r3, .L589
 7855 0010 0446     		mov	r4, r0
6775:Core/Src/bno055.c ****     {
6776:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6777:Core/Src/bno055.c ****     }
6778:Core/Src/bno055.c ****     else
6779:Core/Src/bno055.c ****     {
6780:Core/Src/bno055.c ****         /*condition check for page, self test of mag is
6781:Core/Src/bno055.c ****          * available in the page zero*/
6782:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 7856              		.loc 1 6782 9 is_stmt 1 view .LVU2087
 7857              		.loc 1 6782 21 is_stmt 0 view .LVU2088
 7858 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7859              		.loc 1 6782 12 view .LVU2089
 7860 0014 9BB9     		cbnz	r3, .L592
 7861              	.LVL828:
ARM GAS  /tmp/ccO72alg.s 			page 264


 7862              	.L587:
6783:Core/Src/bno055.c ****         {
6784:Core/Src/bno055.c ****             /* Write the page zero*/
6785:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6786:Core/Src/bno055.c ****         }
6787:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7863              		.loc 1 6787 53 discriminator 1 view .LVU2090
 7864 0016 104B     		ldr	r3, .L593
 7865 0018 1B68     		ldr	r3, [r3]
 7866 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7867              		.loc 1 6787 41 discriminator 1 view .LVU2091
 7868 001c C3B9     		cbnz	r3, .L590
 7869              	.L588:
6788:Core/Src/bno055.c ****         {
6789:Core/Src/bno055.c ****             /* Read the mag self test */
6790:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7870              		.loc 1 6790 13 is_stmt 1 view .LVU2092
 7871              		.loc 1 6790 32 is_stmt 0 view .LVU2093
 7872 001e 0E4B     		ldr	r3, .L593
 7873 0020 1868     		ldr	r0, [r3]
 7874 0022 0569     		ldr	r5, [r0, #16]
 7875              		.loc 1 6790 24 view .LVU2094
 7876 0024 0123     		movs	r3, #1
 7877 0026 0DF10702 		add	r2, sp, #7
 7878 002a 3621     		movs	r1, #54
 7879 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7880 002e A847     		blx	r5
 7881              	.LVL829:
6791:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MAG_REG,
6792:Core/Src/bno055.c ****                                                       &data_u8r,
6793:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6794:Core/Src/bno055.c ****             *selftest_mag_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MAG);
 7882              		.loc 1 6794 13 is_stmt 1 view .LVU2095
 7883              		.loc 1 6794 32 is_stmt 0 view .LVU2096
 7884 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 7885 0034 C3F34003 		ubfx	r3, r3, #1, #1
 7886              		.loc 1 6794 30 view .LVU2097
 7887 0038 2370     		strb	r3, [r4]
 7888              	.LVL830:
 7889              	.L586:
6795:Core/Src/bno055.c ****         }
6796:Core/Src/bno055.c ****         else
6797:Core/Src/bno055.c ****         {
6798:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6799:Core/Src/bno055.c ****         }
6800:Core/Src/bno055.c ****     }
6801:Core/Src/bno055.c **** 
6802:Core/Src/bno055.c ****     return com_rslt;
6803:Core/Src/bno055.c **** }
 7890              		.loc 1 6803 1 view .LVU2098
 7891 003a 03B0     		add	sp, sp, #12
 7892              	.LCFI275:
 7893              		.cfi_remember_state
 7894              		.cfi_def_cfa_offset 12
 7895              		@ sp needed
 7896 003c 30BD     		pop	{r4, r5, pc}
 7897              	.LVL831:
ARM GAS  /tmp/ccO72alg.s 			page 265


 7898              	.L592:
 7899              	.LCFI276:
 7900              		.cfi_restore_state
6785:Core/Src/bno055.c ****         }
 7901              		.loc 1 6785 13 is_stmt 1 view .LVU2099
6785:Core/Src/bno055.c ****         }
 7902              		.loc 1 6785 23 is_stmt 0 view .LVU2100
 7903 003e 0020     		movs	r0, #0
 7904              	.LVL832:
6785:Core/Src/bno055.c ****         }
 7905              		.loc 1 6785 23 view .LVU2101
 7906 0040 FFF7FEFF 		bl	bno055_write_page_id
 7907              	.LVL833:
6787:Core/Src/bno055.c ****         {
 7908              		.loc 1 6787 9 is_stmt 1 view .LVU2102
6787:Core/Src/bno055.c ****         {
 7909              		.loc 1 6787 12 is_stmt 0 view .LVU2103
 7910 0044 0028     		cmp	r0, #0
 7911 0046 EAD0     		beq	.L588
 7912 0048 E5E7     		b	.L587
 7913              	.LVL834:
 7914              	.L589:
6776:Core/Src/bno055.c ****     }
 7915              		.loc 1 6776 16 view .LVU2104
 7916 004a 6FF07E00 		mvn	r0, #126
 7917              	.LVL835:
6776:Core/Src/bno055.c ****     }
 7918              		.loc 1 6776 16 view .LVU2105
 7919 004e F4E7     		b	.L586
 7920              	.LVL836:
 7921              	.L590:
6798:Core/Src/bno055.c ****         }
 7922              		.loc 1 6798 22 view .LVU2106
 7923 0050 4FF0FF30 		mov	r0, #-1
 7924 0054 F1E7     		b	.L586
 7925              	.L594:
 7926 0056 00BF     		.align	2
 7927              	.L593:
 7928 0058 00000000 		.word	.LANCHOR0
 7929              		.cfi_endproc
 7930              	.LFE122:
 7932              		.section	.text.bno055_get_selftest_gyro,"ax",%progbits
 7933              		.align	1
 7934              		.global	bno055_get_selftest_gyro
 7935              		.syntax unified
 7936              		.thumb
 7937              		.thumb_func
 7939              	bno055_get_selftest_gyro:
 7940              	.LVL837:
 7941              	.LFB123:
6804:Core/Src/bno055.c **** 
6805:Core/Src/bno055.c **** /*!
6806:Core/Src/bno055.c ****  *  @brief This API used to read
6807:Core/Src/bno055.c ****  *  self test of gyro from register from 0x36 bit 2
6808:Core/Src/bno055.c ****  *
6809:Core/Src/bno055.c ****  *  @param selftest_gyro_u8 : The value of self test of gyro
6810:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 266


6811:Core/Src/bno055.c ****  *     selftest_gyro_u8 |  result
6812:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6813:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6814:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6815:Core/Src/bno055.c ****  *
6816:Core/Src/bno055.c ****  *  @return results of bus communication function
6817:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6818:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6819:Core/Src/bno055.c ****  *
6820:Core/Src/bno055.c ****  */
6821:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_gyro(u8 *selftest_gyro_u8)
6822:Core/Src/bno055.c **** {
 7942              		.loc 1 6822 1 is_stmt 1 view -0
 7943              		.cfi_startproc
 7944              		@ args = 0, pretend = 0, frame = 8
 7945              		@ frame_needed = 0, uses_anonymous_args = 0
 7946              		.loc 1 6822 1 is_stmt 0 view .LVU2108
 7947 0000 30B5     		push	{r4, r5, lr}
 7948              	.LCFI277:
 7949              		.cfi_def_cfa_offset 12
 7950              		.cfi_offset 4, -12
 7951              		.cfi_offset 5, -8
 7952              		.cfi_offset 14, -4
 7953 0002 83B0     		sub	sp, sp, #12
 7954              	.LCFI278:
 7955              		.cfi_def_cfa_offset 24
6823:Core/Src/bno055.c ****     /* Variable used to return value of
6824:Core/Src/bno055.c ****      * communication routine*/
6825:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 7956              		.loc 1 6825 5 is_stmt 1 view .LVU2109
 7957              	.LVL838:
6826:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 7958              		.loc 1 6826 5 view .LVU2110
 7959              		.loc 1 6826 8 is_stmt 0 view .LVU2111
 7960 0004 0023     		movs	r3, #0
 7961 0006 8DF80730 		strb	r3, [sp, #7]
6827:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 7962              		.loc 1 6827 5 is_stmt 1 view .LVU2112
 7963              	.LVL839:
6828:Core/Src/bno055.c **** 
6829:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6830:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 7964              		.loc 1 6830 5 view .LVU2113
 7965              		.loc 1 6830 18 is_stmt 0 view .LVU2114
 7966 000a 134B     		ldr	r3, .L603
 7967 000c 1B68     		ldr	r3, [r3]
 7968              		.loc 1 6830 8 view .LVU2115
 7969 000e E3B1     		cbz	r3, .L599
 7970 0010 0446     		mov	r4, r0
6831:Core/Src/bno055.c ****     {
6832:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6833:Core/Src/bno055.c ****     }
6834:Core/Src/bno055.c ****     else
6835:Core/Src/bno055.c ****     {
6836:Core/Src/bno055.c ****         /*condition check for page self test of gyro is
6837:Core/Src/bno055.c ****          * available in the page zero*/
6838:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccO72alg.s 			page 267


 7971              		.loc 1 6838 9 is_stmt 1 view .LVU2116
 7972              		.loc 1 6838 21 is_stmt 0 view .LVU2117
 7973 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7974              		.loc 1 6838 12 view .LVU2118
 7975 0014 9BB9     		cbnz	r3, .L602
 7976              	.LVL840:
 7977              	.L597:
6839:Core/Src/bno055.c ****         {
6840:Core/Src/bno055.c ****             /* Write the page zero*/
6841:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6842:Core/Src/bno055.c ****         }
6843:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 7978              		.loc 1 6843 53 discriminator 1 view .LVU2119
 7979 0016 104B     		ldr	r3, .L603
 7980 0018 1B68     		ldr	r3, [r3]
 7981 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 7982              		.loc 1 6843 41 discriminator 1 view .LVU2120
 7983 001c C3B9     		cbnz	r3, .L600
 7984              	.L598:
6844:Core/Src/bno055.c ****         {
6845:Core/Src/bno055.c ****             /* Read the gyro self test */
6846:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 7985              		.loc 1 6846 13 is_stmt 1 view .LVU2121
 7986              		.loc 1 6846 32 is_stmt 0 view .LVU2122
 7987 001e 0E4B     		ldr	r3, .L603
 7988 0020 1868     		ldr	r0, [r3]
 7989 0022 0569     		ldr	r5, [r0, #16]
 7990              		.loc 1 6846 24 view .LVU2123
 7991 0024 0123     		movs	r3, #1
 7992 0026 0DF10702 		add	r2, sp, #7
 7993 002a 3621     		movs	r1, #54
 7994 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 7995 002e A847     		blx	r5
 7996              	.LVL841:
6847:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_GYRO_REG,
6848:Core/Src/bno055.c ****                                                       &data_u8r,
6849:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6850:Core/Src/bno055.c ****             *selftest_gyro_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_GYRO);
 7997              		.loc 1 6850 13 is_stmt 1 view .LVU2124
 7998              		.loc 1 6850 33 is_stmt 0 view .LVU2125
 7999 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8000 0034 C3F38003 		ubfx	r3, r3, #2, #1
 8001              		.loc 1 6850 31 view .LVU2126
 8002 0038 2370     		strb	r3, [r4]
 8003              	.LVL842:
 8004              	.L596:
6851:Core/Src/bno055.c ****         }
6852:Core/Src/bno055.c ****         else
6853:Core/Src/bno055.c ****         {
6854:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6855:Core/Src/bno055.c ****         }
6856:Core/Src/bno055.c ****     }
6857:Core/Src/bno055.c **** 
6858:Core/Src/bno055.c ****     return com_rslt;
6859:Core/Src/bno055.c **** }
 8005              		.loc 1 6859 1 view .LVU2127
 8006 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 268


 8007              	.LCFI279:
 8008              		.cfi_remember_state
 8009              		.cfi_def_cfa_offset 12
 8010              		@ sp needed
 8011 003c 30BD     		pop	{r4, r5, pc}
 8012              	.LVL843:
 8013              	.L602:
 8014              	.LCFI280:
 8015              		.cfi_restore_state
6841:Core/Src/bno055.c ****         }
 8016              		.loc 1 6841 13 is_stmt 1 view .LVU2128
6841:Core/Src/bno055.c ****         }
 8017              		.loc 1 6841 23 is_stmt 0 view .LVU2129
 8018 003e 0020     		movs	r0, #0
 8019              	.LVL844:
6841:Core/Src/bno055.c ****         }
 8020              		.loc 1 6841 23 view .LVU2130
 8021 0040 FFF7FEFF 		bl	bno055_write_page_id
 8022              	.LVL845:
6843:Core/Src/bno055.c ****         {
 8023              		.loc 1 6843 9 is_stmt 1 view .LVU2131
6843:Core/Src/bno055.c ****         {
 8024              		.loc 1 6843 12 is_stmt 0 view .LVU2132
 8025 0044 0028     		cmp	r0, #0
 8026 0046 EAD0     		beq	.L598
 8027 0048 E5E7     		b	.L597
 8028              	.LVL846:
 8029              	.L599:
6832:Core/Src/bno055.c ****     }
 8030              		.loc 1 6832 16 view .LVU2133
 8031 004a 6FF07E00 		mvn	r0, #126
 8032              	.LVL847:
6832:Core/Src/bno055.c ****     }
 8033              		.loc 1 6832 16 view .LVU2134
 8034 004e F4E7     		b	.L596
 8035              	.LVL848:
 8036              	.L600:
6854:Core/Src/bno055.c ****         }
 8037              		.loc 1 6854 22 view .LVU2135
 8038 0050 4FF0FF30 		mov	r0, #-1
 8039 0054 F1E7     		b	.L596
 8040              	.L604:
 8041 0056 00BF     		.align	2
 8042              	.L603:
 8043 0058 00000000 		.word	.LANCHOR0
 8044              		.cfi_endproc
 8045              	.LFE123:
 8047              		.section	.text.bno055_get_selftest_mcu,"ax",%progbits
 8048              		.align	1
 8049              		.global	bno055_get_selftest_mcu
 8050              		.syntax unified
 8051              		.thumb
 8052              		.thumb_func
 8054              	bno055_get_selftest_mcu:
 8055              	.LVL849:
 8056              	.LFB124:
6860:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 269


6861:Core/Src/bno055.c **** /*!
6862:Core/Src/bno055.c ****  *  @brief This API used to read
6863:Core/Src/bno055.c ****  *  self test of micro controller from register from 0x36 bit 3
6864:Core/Src/bno055.c ****  *
6865:Core/Src/bno055.c ****  *  @param selftest_mcu_u8 : The value of self test of micro controller
6866:Core/Src/bno055.c ****  *
6867:Core/Src/bno055.c ****  *     selftest_mcu_u8  |  result
6868:Core/Src/bno055.c ****  *   -------------------- | ---------------------
6869:Core/Src/bno055.c ****  *     0x00               | indicates test failed
6870:Core/Src/bno055.c ****  *     0x01               | indicated test passed
6871:Core/Src/bno055.c ****  *
6872:Core/Src/bno055.c ****  *  @return results of bus communication function
6873:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6874:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6875:Core/Src/bno055.c ****  *
6876:Core/Src/bno055.c ****  */
6877:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest_mcu(u8 *selftest_mcu_u8)
6878:Core/Src/bno055.c **** {
 8057              		.loc 1 6878 1 is_stmt 1 view -0
 8058              		.cfi_startproc
 8059              		@ args = 0, pretend = 0, frame = 8
 8060              		@ frame_needed = 0, uses_anonymous_args = 0
 8061              		.loc 1 6878 1 is_stmt 0 view .LVU2137
 8062 0000 30B5     		push	{r4, r5, lr}
 8063              	.LCFI281:
 8064              		.cfi_def_cfa_offset 12
 8065              		.cfi_offset 4, -12
 8066              		.cfi_offset 5, -8
 8067              		.cfi_offset 14, -4
 8068 0002 83B0     		sub	sp, sp, #12
 8069              	.LCFI282:
 8070              		.cfi_def_cfa_offset 24
6879:Core/Src/bno055.c ****     /* Variable used to return value of
6880:Core/Src/bno055.c ****      * communication routine*/
6881:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8071              		.loc 1 6881 5 is_stmt 1 view .LVU2138
 8072              	.LVL850:
6882:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8073              		.loc 1 6882 5 view .LVU2139
 8074              		.loc 1 6882 8 is_stmt 0 view .LVU2140
 8075 0004 0023     		movs	r3, #0
 8076 0006 8DF80730 		strb	r3, [sp, #7]
6883:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8077              		.loc 1 6883 5 is_stmt 1 view .LVU2141
 8078              	.LVL851:
6884:Core/Src/bno055.c **** 
6885:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6886:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8079              		.loc 1 6886 5 view .LVU2142
 8080              		.loc 1 6886 18 is_stmt 0 view .LVU2143
 8081 000a 134B     		ldr	r3, .L613
 8082 000c 1B68     		ldr	r3, [r3]
 8083              		.loc 1 6886 8 view .LVU2144
 8084 000e E3B1     		cbz	r3, .L609
 8085 0010 0446     		mov	r4, r0
6887:Core/Src/bno055.c ****     {
6888:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccO72alg.s 			page 270


6889:Core/Src/bno055.c ****     }
6890:Core/Src/bno055.c ****     else
6891:Core/Src/bno055.c ****     {
6892:Core/Src/bno055.c ****         /*condition check for page self test of micro controller
6893:Core/Src/bno055.c ****          * is available in the page zero*/
6894:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8086              		.loc 1 6894 9 is_stmt 1 view .LVU2145
 8087              		.loc 1 6894 21 is_stmt 0 view .LVU2146
 8088 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8089              		.loc 1 6894 12 view .LVU2147
 8090 0014 9BB9     		cbnz	r3, .L612
 8091              	.LVL852:
 8092              	.L607:
6895:Core/Src/bno055.c ****         {
6896:Core/Src/bno055.c ****             /* Write the page zero*/
6897:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6898:Core/Src/bno055.c ****         }
6899:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8093              		.loc 1 6899 53 discriminator 1 view .LVU2148
 8094 0016 104B     		ldr	r3, .L613
 8095 0018 1B68     		ldr	r3, [r3]
 8096 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8097              		.loc 1 6899 41 discriminator 1 view .LVU2149
 8098 001c C3B9     		cbnz	r3, .L610
 8099              	.L608:
6900:Core/Src/bno055.c ****         {
6901:Core/Src/bno055.c ****             /* Read the self test of micro controller*/
6902:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8100              		.loc 1 6902 13 is_stmt 1 view .LVU2150
 8101              		.loc 1 6902 32 is_stmt 0 view .LVU2151
 8102 001e 0E4B     		ldr	r3, .L613
 8103 0020 1868     		ldr	r0, [r3]
 8104 0022 0569     		ldr	r5, [r0, #16]
 8105              		.loc 1 6902 24 view .LVU2152
 8106 0024 0123     		movs	r3, #1
 8107 0026 0DF10702 		add	r2, sp, #7
 8108 002a 3621     		movs	r1, #54
 8109 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8110 002e A847     		blx	r5
 8111              	.LVL853:
6903:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_MCU_REG,
6904:Core/Src/bno055.c ****                                                       &data_u8r,
6905:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6906:Core/Src/bno055.c ****             *selftest_mcu_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST_MCU);
 8112              		.loc 1 6906 13 is_stmt 1 view .LVU2153
 8113              		.loc 1 6906 32 is_stmt 0 view .LVU2154
 8114 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8115 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8116              		.loc 1 6906 30 view .LVU2155
 8117 0038 2370     		strb	r3, [r4]
 8118              	.LVL854:
 8119              	.L606:
6907:Core/Src/bno055.c ****         }
6908:Core/Src/bno055.c ****         else
6909:Core/Src/bno055.c ****         {
6910:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6911:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 271


6912:Core/Src/bno055.c ****     }
6913:Core/Src/bno055.c **** 
6914:Core/Src/bno055.c ****     return com_rslt;
6915:Core/Src/bno055.c **** }
 8120              		.loc 1 6915 1 view .LVU2156
 8121 003a 03B0     		add	sp, sp, #12
 8122              	.LCFI283:
 8123              		.cfi_remember_state
 8124              		.cfi_def_cfa_offset 12
 8125              		@ sp needed
 8126 003c 30BD     		pop	{r4, r5, pc}
 8127              	.LVL855:
 8128              	.L612:
 8129              	.LCFI284:
 8130              		.cfi_restore_state
6897:Core/Src/bno055.c ****         }
 8131              		.loc 1 6897 13 is_stmt 1 view .LVU2157
6897:Core/Src/bno055.c ****         }
 8132              		.loc 1 6897 23 is_stmt 0 view .LVU2158
 8133 003e 0020     		movs	r0, #0
 8134              	.LVL856:
6897:Core/Src/bno055.c ****         }
 8135              		.loc 1 6897 23 view .LVU2159
 8136 0040 FFF7FEFF 		bl	bno055_write_page_id
 8137              	.LVL857:
6899:Core/Src/bno055.c ****         {
 8138              		.loc 1 6899 9 is_stmt 1 view .LVU2160
6899:Core/Src/bno055.c ****         {
 8139              		.loc 1 6899 12 is_stmt 0 view .LVU2161
 8140 0044 0028     		cmp	r0, #0
 8141 0046 EAD0     		beq	.L608
 8142 0048 E5E7     		b	.L607
 8143              	.LVL858:
 8144              	.L609:
6888:Core/Src/bno055.c ****     }
 8145              		.loc 1 6888 16 view .LVU2162
 8146 004a 6FF07E00 		mvn	r0, #126
 8147              	.LVL859:
6888:Core/Src/bno055.c ****     }
 8148              		.loc 1 6888 16 view .LVU2163
 8149 004e F4E7     		b	.L606
 8150              	.LVL860:
 8151              	.L610:
6910:Core/Src/bno055.c ****         }
 8152              		.loc 1 6910 22 view .LVU2164
 8153 0050 4FF0FF30 		mov	r0, #-1
 8154 0054 F1E7     		b	.L606
 8155              	.L614:
 8156 0056 00BF     		.align	2
 8157              	.L613:
 8158 0058 00000000 		.word	.LANCHOR0
 8159              		.cfi_endproc
 8160              	.LFE124:
 8162              		.section	.text.bno055_get_intr_stat_gyro_any_motion,"ax",%progbits
 8163              		.align	1
 8164              		.global	bno055_get_intr_stat_gyro_any_motion
 8165              		.syntax unified
ARM GAS  /tmp/ccO72alg.s 			page 272


 8166              		.thumb
 8167              		.thumb_func
 8169              	bno055_get_intr_stat_gyro_any_motion:
 8170              	.LVL861:
 8171              	.LFB125:
6916:Core/Src/bno055.c **** 
6917:Core/Src/bno055.c **** /*!
6918:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6919:Core/Src/bno055.c ****  *  gyro anymotion interrupt from register from 0x37 bit 2
6920:Core/Src/bno055.c ****  *
6921:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
6922:Core/Src/bno055.c ****  *
6923:Core/Src/bno055.c ****  *     gyro_any_motion_u8  |  result
6924:Core/Src/bno055.c ****  *    --------------------   | ---------------------
6925:Core/Src/bno055.c ****  *     0x00                  | indicates no interrupt triggered
6926:Core/Src/bno055.c ****  *     0x01                  | indicates interrupt triggered
6927:Core/Src/bno055.c ****  *
6928:Core/Src/bno055.c ****  *  @return results of bus communication function
6929:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6930:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6931:Core/Src/bno055.c ****  *
6932:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt can be BNO055_BIT_ENABLE
6933:Core/Src/bno055.c ****  *  by the following APIs
6934:Core/Src/bno055.c ****  *
6935:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_any_motion()
6936:Core/Src/bno055.c ****  *
6937:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_any_motion()
6938:Core/Src/bno055.c ****  *
6939:Core/Src/bno055.c ****  */
6940:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_any_motion(u8 *gyro_any_motion_u8)
6941:Core/Src/bno055.c **** {
 8172              		.loc 1 6941 1 is_stmt 1 view -0
 8173              		.cfi_startproc
 8174              		@ args = 0, pretend = 0, frame = 8
 8175              		@ frame_needed = 0, uses_anonymous_args = 0
 8176              		.loc 1 6941 1 is_stmt 0 view .LVU2166
 8177 0000 30B5     		push	{r4, r5, lr}
 8178              	.LCFI285:
 8179              		.cfi_def_cfa_offset 12
 8180              		.cfi_offset 4, -12
 8181              		.cfi_offset 5, -8
 8182              		.cfi_offset 14, -4
 8183 0002 83B0     		sub	sp, sp, #12
 8184              	.LCFI286:
 8185              		.cfi_def_cfa_offset 24
6942:Core/Src/bno055.c ****     /* Variable used to return value of
6943:Core/Src/bno055.c ****      * communication routine*/
6944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8186              		.loc 1 6944 5 is_stmt 1 view .LVU2167
 8187              	.LVL862:
6945:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8188              		.loc 1 6945 5 view .LVU2168
 8189              		.loc 1 6945 8 is_stmt 0 view .LVU2169
 8190 0004 0023     		movs	r3, #0
 8191 0006 8DF80730 		strb	r3, [sp, #7]
6946:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8192              		.loc 1 6946 5 is_stmt 1 view .LVU2170
ARM GAS  /tmp/ccO72alg.s 			page 273


 8193              	.LVL863:
6947:Core/Src/bno055.c **** 
6948:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
6949:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8194              		.loc 1 6949 5 view .LVU2171
 8195              		.loc 1 6949 18 is_stmt 0 view .LVU2172
 8196 000a 134B     		ldr	r3, .L623
 8197 000c 1B68     		ldr	r3, [r3]
 8198              		.loc 1 6949 8 view .LVU2173
 8199 000e E3B1     		cbz	r3, .L619
 8200 0010 0446     		mov	r4, r0
6950:Core/Src/bno055.c ****     {
6951:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
6952:Core/Src/bno055.c ****     }
6953:Core/Src/bno055.c ****     else
6954:Core/Src/bno055.c ****     {
6955:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt
6956:Core/Src/bno055.c ****          * status is available in the page zero*/
6957:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8201              		.loc 1 6957 9 is_stmt 1 view .LVU2174
 8202              		.loc 1 6957 21 is_stmt 0 view .LVU2175
 8203 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8204              		.loc 1 6957 12 view .LVU2176
 8205 0014 9BB9     		cbnz	r3, .L622
 8206              	.LVL864:
 8207              	.L617:
6958:Core/Src/bno055.c ****         {
6959:Core/Src/bno055.c ****             /* Write the page zero*/
6960:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
6961:Core/Src/bno055.c ****         }
6962:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8208              		.loc 1 6962 53 discriminator 1 view .LVU2177
 8209 0016 104B     		ldr	r3, .L623
 8210 0018 1B68     		ldr	r3, [r3]
 8211 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8212              		.loc 1 6962 41 discriminator 1 view .LVU2178
 8213 001c C3B9     		cbnz	r3, .L620
 8214              	.L618:
6963:Core/Src/bno055.c ****         {
6964:Core/Src/bno055.c ****             /* Read the gyro anymotion interrupt stat_s8*/
6965:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8215              		.loc 1 6965 13 is_stmt 1 view .LVU2179
 8216              		.loc 1 6965 32 is_stmt 0 view .LVU2180
 8217 001e 0E4B     		ldr	r3, .L623
 8218 0020 1868     		ldr	r0, [r3]
 8219 0022 0569     		ldr	r5, [r0, #16]
 8220              		.loc 1 6965 24 view .LVU2181
 8221 0024 0123     		movs	r3, #1
 8222 0026 0DF10702 		add	r2, sp, #7
 8223 002a 3721     		movs	r1, #55
 8224 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8225 002e A847     		blx	r5
 8226              	.LVL865:
6966:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_ANY_MOTION_REG,
6967:Core/Src/bno055.c ****                                                       &data_u8r,
6968:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
6969:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_ANY_MOTION);
ARM GAS  /tmp/ccO72alg.s 			page 274


 8227              		.loc 1 6969 13 is_stmt 1 view .LVU2182
 8228              		.loc 1 6969 35 is_stmt 0 view .LVU2183
 8229 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8230 0034 C3F38003 		ubfx	r3, r3, #2, #1
 8231              		.loc 1 6969 33 view .LVU2184
 8232 0038 2370     		strb	r3, [r4]
 8233              	.LVL866:
 8234              	.L616:
6970:Core/Src/bno055.c ****         }
6971:Core/Src/bno055.c ****         else
6972:Core/Src/bno055.c ****         {
6973:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
6974:Core/Src/bno055.c ****         }
6975:Core/Src/bno055.c ****     }
6976:Core/Src/bno055.c **** 
6977:Core/Src/bno055.c ****     return com_rslt;
6978:Core/Src/bno055.c **** }
 8235              		.loc 1 6978 1 view .LVU2185
 8236 003a 03B0     		add	sp, sp, #12
 8237              	.LCFI287:
 8238              		.cfi_remember_state
 8239              		.cfi_def_cfa_offset 12
 8240              		@ sp needed
 8241 003c 30BD     		pop	{r4, r5, pc}
 8242              	.LVL867:
 8243              	.L622:
 8244              	.LCFI288:
 8245              		.cfi_restore_state
6960:Core/Src/bno055.c ****         }
 8246              		.loc 1 6960 13 is_stmt 1 view .LVU2186
6960:Core/Src/bno055.c ****         }
 8247              		.loc 1 6960 23 is_stmt 0 view .LVU2187
 8248 003e 0020     		movs	r0, #0
 8249              	.LVL868:
6960:Core/Src/bno055.c ****         }
 8250              		.loc 1 6960 23 view .LVU2188
 8251 0040 FFF7FEFF 		bl	bno055_write_page_id
 8252              	.LVL869:
6962:Core/Src/bno055.c ****         {
 8253              		.loc 1 6962 9 is_stmt 1 view .LVU2189
6962:Core/Src/bno055.c ****         {
 8254              		.loc 1 6962 12 is_stmt 0 view .LVU2190
 8255 0044 0028     		cmp	r0, #0
 8256 0046 EAD0     		beq	.L618
 8257 0048 E5E7     		b	.L617
 8258              	.LVL870:
 8259              	.L619:
6951:Core/Src/bno055.c ****     }
 8260              		.loc 1 6951 16 view .LVU2191
 8261 004a 6FF07E00 		mvn	r0, #126
 8262              	.LVL871:
6951:Core/Src/bno055.c ****     }
 8263              		.loc 1 6951 16 view .LVU2192
 8264 004e F4E7     		b	.L616
 8265              	.LVL872:
 8266              	.L620:
6973:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 275


 8267              		.loc 1 6973 22 view .LVU2193
 8268 0050 4FF0FF30 		mov	r0, #-1
 8269 0054 F1E7     		b	.L616
 8270              	.L624:
 8271 0056 00BF     		.align	2
 8272              	.L623:
 8273 0058 00000000 		.word	.LANCHOR0
 8274              		.cfi_endproc
 8275              	.LFE125:
 8277              		.section	.text.bno055_get_intr_stat_gyro_highrate,"ax",%progbits
 8278              		.align	1
 8279              		.global	bno055_get_intr_stat_gyro_highrate
 8280              		.syntax unified
 8281              		.thumb
 8282              		.thumb_func
 8284              	bno055_get_intr_stat_gyro_highrate:
 8285              	.LVL873:
 8286              	.LFB126:
6979:Core/Src/bno055.c **** 
6980:Core/Src/bno055.c **** /*!
6981:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
6982:Core/Src/bno055.c ****  *  gyro highrate interrupt from register from 0x37 bit 3
6983:Core/Src/bno055.c ****  *
6984:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
6985:Core/Src/bno055.c ****  *
6986:Core/Src/bno055.c ****  *     gyro_highrate_u8   |  result
6987:Core/Src/bno055.c ****  *    -------------------   | ---------------------
6988:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
6989:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
6990:Core/Src/bno055.c ****  *
6991:Core/Src/bno055.c ****  *  @return results of bus communication function
6992:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
6993:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
6994:Core/Src/bno055.c ****  *
6995:Core/Src/bno055.c ****  *  @note Gyro highrate interrupt can be configured
6996:Core/Src/bno055.c ****  *          by the following APIs
6997:Core/Src/bno055.c ****  *
6998:Core/Src/bno055.c ****  *  bno055_set_intr_mask_gyro_highrate()
6999:Core/Src/bno055.c ****  *
7000:Core/Src/bno055.c ****  *  bno055_set_intr_gyro_highrate()
7001:Core/Src/bno055.c ****  */
7002:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_gyro_highrate(u8 *gyro_highrate_u8)
7003:Core/Src/bno055.c **** {
 8287              		.loc 1 7003 1 is_stmt 1 view -0
 8288              		.cfi_startproc
 8289              		@ args = 0, pretend = 0, frame = 8
 8290              		@ frame_needed = 0, uses_anonymous_args = 0
 8291              		.loc 1 7003 1 is_stmt 0 view .LVU2195
 8292 0000 30B5     		push	{r4, r5, lr}
 8293              	.LCFI289:
 8294              		.cfi_def_cfa_offset 12
 8295              		.cfi_offset 4, -12
 8296              		.cfi_offset 5, -8
 8297              		.cfi_offset 14, -4
 8298 0002 83B0     		sub	sp, sp, #12
 8299              	.LCFI290:
 8300              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccO72alg.s 			page 276


7004:Core/Src/bno055.c ****     /* Variable used to return value of
7005:Core/Src/bno055.c ****      * communication routine*/
7006:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8301              		.loc 1 7006 5 is_stmt 1 view .LVU2196
 8302              	.LVL874:
7007:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8303              		.loc 1 7007 5 view .LVU2197
 8304              		.loc 1 7007 8 is_stmt 0 view .LVU2198
 8305 0004 0023     		movs	r3, #0
 8306 0006 8DF80730 		strb	r3, [sp, #7]
7008:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8307              		.loc 1 7008 5 is_stmt 1 view .LVU2199
 8308              	.LVL875:
7009:Core/Src/bno055.c **** 
7010:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7011:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8309              		.loc 1 7011 5 view .LVU2200
 8310              		.loc 1 7011 18 is_stmt 0 view .LVU2201
 8311 000a 134B     		ldr	r3, .L633
 8312 000c 1B68     		ldr	r3, [r3]
 8313              		.loc 1 7011 8 view .LVU2202
 8314 000e E3B1     		cbz	r3, .L629
 8315 0010 0446     		mov	r4, r0
7012:Core/Src/bno055.c ****     {
7013:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7014:Core/Src/bno055.c ****     }
7015:Core/Src/bno055.c ****     else
7016:Core/Src/bno055.c ****     {
7017:Core/Src/bno055.c ****         /*condition check for page, gyro highrate is
7018:Core/Src/bno055.c ****          * available in the page zero*/
7019:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8316              		.loc 1 7019 9 is_stmt 1 view .LVU2203
 8317              		.loc 1 7019 21 is_stmt 0 view .LVU2204
 8318 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8319              		.loc 1 7019 12 view .LVU2205
 8320 0014 9BB9     		cbnz	r3, .L632
 8321              	.LVL876:
 8322              	.L627:
7020:Core/Src/bno055.c ****         {
7021:Core/Src/bno055.c ****             /* Write the page zero*/
7022:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7023:Core/Src/bno055.c ****         }
7024:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8323              		.loc 1 7024 53 discriminator 1 view .LVU2206
 8324 0016 104B     		ldr	r3, .L633
 8325 0018 1B68     		ldr	r3, [r3]
 8326 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8327              		.loc 1 7024 41 discriminator 1 view .LVU2207
 8328 001c C3B9     		cbnz	r3, .L630
 8329              	.L628:
7025:Core/Src/bno055.c ****         {
7026:Core/Src/bno055.c ****             /* Read the gyro highrate interrupt stat_s8*/
7027:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8330              		.loc 1 7027 13 is_stmt 1 view .LVU2208
 8331              		.loc 1 7027 32 is_stmt 0 view .LVU2209
 8332 001e 0E4B     		ldr	r3, .L633
 8333 0020 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 277


 8334 0022 0569     		ldr	r5, [r0, #16]
 8335              		.loc 1 7027 24 view .LVU2210
 8336 0024 0123     		movs	r3, #1
 8337 0026 0DF10702 		add	r2, sp, #7
 8338 002a 3721     		movs	r1, #55
 8339 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8340 002e A847     		blx	r5
 8341              	.LVL877:
7028:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_GYRO_HIGHRATE_REG,
7029:Core/Src/bno055.c ****                                                       &data_u8r,
7030:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7031:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_GYRO_HIGHRATE);
 8342              		.loc 1 7031 13 is_stmt 1 view .LVU2211
 8343              		.loc 1 7031 33 is_stmt 0 view .LVU2212
 8344 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8345 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 8346              		.loc 1 7031 31 view .LVU2213
 8347 0038 2370     		strb	r3, [r4]
 8348              	.LVL878:
 8349              	.L626:
7032:Core/Src/bno055.c ****         }
7033:Core/Src/bno055.c ****         else
7034:Core/Src/bno055.c ****         {
7035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7036:Core/Src/bno055.c ****         }
7037:Core/Src/bno055.c ****     }
7038:Core/Src/bno055.c **** 
7039:Core/Src/bno055.c ****     return com_rslt;
7040:Core/Src/bno055.c **** }
 8350              		.loc 1 7040 1 view .LVU2214
 8351 003a 03B0     		add	sp, sp, #12
 8352              	.LCFI291:
 8353              		.cfi_remember_state
 8354              		.cfi_def_cfa_offset 12
 8355              		@ sp needed
 8356 003c 30BD     		pop	{r4, r5, pc}
 8357              	.LVL879:
 8358              	.L632:
 8359              	.LCFI292:
 8360              		.cfi_restore_state
7022:Core/Src/bno055.c ****         }
 8361              		.loc 1 7022 13 is_stmt 1 view .LVU2215
7022:Core/Src/bno055.c ****         }
 8362              		.loc 1 7022 23 is_stmt 0 view .LVU2216
 8363 003e 0020     		movs	r0, #0
 8364              	.LVL880:
7022:Core/Src/bno055.c ****         }
 8365              		.loc 1 7022 23 view .LVU2217
 8366 0040 FFF7FEFF 		bl	bno055_write_page_id
 8367              	.LVL881:
7024:Core/Src/bno055.c ****         {
 8368              		.loc 1 7024 9 is_stmt 1 view .LVU2218
7024:Core/Src/bno055.c ****         {
 8369              		.loc 1 7024 12 is_stmt 0 view .LVU2219
 8370 0044 0028     		cmp	r0, #0
 8371 0046 EAD0     		beq	.L628
 8372 0048 E5E7     		b	.L627
ARM GAS  /tmp/ccO72alg.s 			page 278


 8373              	.LVL882:
 8374              	.L629:
7013:Core/Src/bno055.c ****     }
 8375              		.loc 1 7013 16 view .LVU2220
 8376 004a 6FF07E00 		mvn	r0, #126
 8377              	.LVL883:
7013:Core/Src/bno055.c ****     }
 8378              		.loc 1 7013 16 view .LVU2221
 8379 004e F4E7     		b	.L626
 8380              	.LVL884:
 8381              	.L630:
7035:Core/Src/bno055.c ****         }
 8382              		.loc 1 7035 22 view .LVU2222
 8383 0050 4FF0FF30 		mov	r0, #-1
 8384 0054 F1E7     		b	.L626
 8385              	.L634:
 8386 0056 00BF     		.align	2
 8387              	.L633:
 8388 0058 00000000 		.word	.LANCHOR0
 8389              		.cfi_endproc
 8390              	.LFE126:
 8392              		.section	.text.bno055_get_intr_stat_accel_high_g,"ax",%progbits
 8393              		.align	1
 8394              		.global	bno055_get_intr_stat_accel_high_g
 8395              		.syntax unified
 8396              		.thumb
 8397              		.thumb_func
 8399              	bno055_get_intr_stat_accel_high_g:
 8400              	.LVL885:
 8401              	.LFB127:
7041:Core/Src/bno055.c **** 
7042:Core/Src/bno055.c **** /*!
7043:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7044:Core/Src/bno055.c ****  *  accel highg interrupt from register from 0x37 bit 5
7045:Core/Src/bno055.c ****  *
7046:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
7047:Core/Src/bno055.c ****  *
7048:Core/Src/bno055.c ****  *     accel_high_g_u8    |  result
7049:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7050:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7051:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7052:Core/Src/bno055.c ****  *
7053:Core/Src/bno055.c ****  *  @return results of bus communication function
7054:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7055:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7056:Core/Src/bno055.c ****  *
7057:Core/Src/bno055.c ****  *  @note Accel highg interrupt can be configured
7058:Core/Src/bno055.c ****  *          by the following APIs
7059:Core/Src/bno055.c ****  *
7060:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_high_g()
7061:Core/Src/bno055.c ****  *
7062:Core/Src/bno055.c ****  *  bno055_set_intr_accel_high_g()
7063:Core/Src/bno055.c ****  *
7064:Core/Src/bno055.c ****  */
7065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_high_g(u8 *accel_high_g_u8)
7066:Core/Src/bno055.c **** {
 8402              		.loc 1 7066 1 is_stmt 1 view -0
ARM GAS  /tmp/ccO72alg.s 			page 279


 8403              		.cfi_startproc
 8404              		@ args = 0, pretend = 0, frame = 8
 8405              		@ frame_needed = 0, uses_anonymous_args = 0
 8406              		.loc 1 7066 1 is_stmt 0 view .LVU2224
 8407 0000 30B5     		push	{r4, r5, lr}
 8408              	.LCFI293:
 8409              		.cfi_def_cfa_offset 12
 8410              		.cfi_offset 4, -12
 8411              		.cfi_offset 5, -8
 8412              		.cfi_offset 14, -4
 8413 0002 83B0     		sub	sp, sp, #12
 8414              	.LCFI294:
 8415              		.cfi_def_cfa_offset 24
7067:Core/Src/bno055.c ****     /* Variable used to return value of
7068:Core/Src/bno055.c ****      * communication routine*/
7069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8416              		.loc 1 7069 5 is_stmt 1 view .LVU2225
 8417              	.LVL886:
7070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8418              		.loc 1 7070 5 view .LVU2226
 8419              		.loc 1 7070 8 is_stmt 0 view .LVU2227
 8420 0004 0023     		movs	r3, #0
 8421 0006 8DF80730 		strb	r3, [sp, #7]
7071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8422              		.loc 1 7071 5 is_stmt 1 view .LVU2228
 8423              	.LVL887:
7072:Core/Src/bno055.c **** 
7073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8424              		.loc 1 7074 5 view .LVU2229
 8425              		.loc 1 7074 18 is_stmt 0 view .LVU2230
 8426 000a 134B     		ldr	r3, .L643
 8427 000c 1B68     		ldr	r3, [r3]
 8428              		.loc 1 7074 8 view .LVU2231
 8429 000e E3B1     		cbz	r3, .L639
 8430 0010 0446     		mov	r4, r0
7075:Core/Src/bno055.c ****     {
7076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7077:Core/Src/bno055.c ****     }
7078:Core/Src/bno055.c ****     else
7079:Core/Src/bno055.c ****     {
7080:Core/Src/bno055.c ****         /*condition check for page, accel highg is
7081:Core/Src/bno055.c ****          * available in the page zero*/
7082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8431              		.loc 1 7082 9 is_stmt 1 view .LVU2232
 8432              		.loc 1 7082 21 is_stmt 0 view .LVU2233
 8433 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8434              		.loc 1 7082 12 view .LVU2234
 8435 0014 9BB9     		cbnz	r3, .L642
 8436              	.LVL888:
 8437              	.L637:
7083:Core/Src/bno055.c ****         {
7084:Core/Src/bno055.c ****             /* Write the page zero*/
7085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7086:Core/Src/bno055.c ****         }
7087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8438              		.loc 1 7087 53 discriminator 1 view .LVU2235
ARM GAS  /tmp/ccO72alg.s 			page 280


 8439 0016 104B     		ldr	r3, .L643
 8440 0018 1B68     		ldr	r3, [r3]
 8441 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8442              		.loc 1 7087 41 discriminator 1 view .LVU2236
 8443 001c C3B9     		cbnz	r3, .L640
 8444              	.L638:
7088:Core/Src/bno055.c ****         {
7089:Core/Src/bno055.c ****             /* Read the accel highg interrupt stat_s8 */
7090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8445              		.loc 1 7090 13 is_stmt 1 view .LVU2237
 8446              		.loc 1 7090 32 is_stmt 0 view .LVU2238
 8447 001e 0E4B     		ldr	r3, .L643
 8448 0020 1868     		ldr	r0, [r3]
 8449 0022 0569     		ldr	r5, [r0, #16]
 8450              		.loc 1 7090 24 view .LVU2239
 8451 0024 0123     		movs	r3, #1
 8452 0026 0DF10702 		add	r2, sp, #7
 8453 002a 3721     		movs	r1, #55
 8454 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8455 002e A847     		blx	r5
 8456              	.LVL889:
7091:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_HIGH_G_REG,
7092:Core/Src/bno055.c ****                                                       &data_u8r,
7093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7094:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_HIGH_G);
 8457              		.loc 1 7094 13 is_stmt 1 view .LVU2240
 8458              		.loc 1 7094 32 is_stmt 0 view .LVU2241
 8459 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8460 0034 C3F34013 		ubfx	r3, r3, #5, #1
 8461              		.loc 1 7094 30 view .LVU2242
 8462 0038 2370     		strb	r3, [r4]
 8463              	.LVL890:
 8464              	.L636:
7095:Core/Src/bno055.c ****         }
7096:Core/Src/bno055.c ****         else
7097:Core/Src/bno055.c ****         {
7098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7099:Core/Src/bno055.c ****         }
7100:Core/Src/bno055.c ****     }
7101:Core/Src/bno055.c **** 
7102:Core/Src/bno055.c ****     return com_rslt;
7103:Core/Src/bno055.c **** }
 8465              		.loc 1 7103 1 view .LVU2243
 8466 003a 03B0     		add	sp, sp, #12
 8467              	.LCFI295:
 8468              		.cfi_remember_state
 8469              		.cfi_def_cfa_offset 12
 8470              		@ sp needed
 8471 003c 30BD     		pop	{r4, r5, pc}
 8472              	.LVL891:
 8473              	.L642:
 8474              	.LCFI296:
 8475              		.cfi_restore_state
7085:Core/Src/bno055.c ****         }
 8476              		.loc 1 7085 13 is_stmt 1 view .LVU2244
7085:Core/Src/bno055.c ****         }
 8477              		.loc 1 7085 23 is_stmt 0 view .LVU2245
ARM GAS  /tmp/ccO72alg.s 			page 281


 8478 003e 0020     		movs	r0, #0
 8479              	.LVL892:
7085:Core/Src/bno055.c ****         }
 8480              		.loc 1 7085 23 view .LVU2246
 8481 0040 FFF7FEFF 		bl	bno055_write_page_id
 8482              	.LVL893:
7087:Core/Src/bno055.c ****         {
 8483              		.loc 1 7087 9 is_stmt 1 view .LVU2247
7087:Core/Src/bno055.c ****         {
 8484              		.loc 1 7087 12 is_stmt 0 view .LVU2248
 8485 0044 0028     		cmp	r0, #0
 8486 0046 EAD0     		beq	.L638
 8487 0048 E5E7     		b	.L637
 8488              	.LVL894:
 8489              	.L639:
7076:Core/Src/bno055.c ****     }
 8490              		.loc 1 7076 16 view .LVU2249
 8491 004a 6FF07E00 		mvn	r0, #126
 8492              	.LVL895:
7076:Core/Src/bno055.c ****     }
 8493              		.loc 1 7076 16 view .LVU2250
 8494 004e F4E7     		b	.L636
 8495              	.LVL896:
 8496              	.L640:
7098:Core/Src/bno055.c ****         }
 8497              		.loc 1 7098 22 view .LVU2251
 8498 0050 4FF0FF30 		mov	r0, #-1
 8499 0054 F1E7     		b	.L636
 8500              	.L644:
 8501 0056 00BF     		.align	2
 8502              	.L643:
 8503 0058 00000000 		.word	.LANCHOR0
 8504              		.cfi_endproc
 8505              	.LFE127:
 8507              		.section	.text.bno055_get_intr_stat_accel_any_motion,"ax",%progbits
 8508              		.align	1
 8509              		.global	bno055_get_intr_stat_accel_any_motion
 8510              		.syntax unified
 8511              		.thumb
 8512              		.thumb_func
 8514              	bno055_get_intr_stat_accel_any_motion:
 8515              	.LVL897:
 8516              	.LFB128:
7104:Core/Src/bno055.c **** 
7105:Core/Src/bno055.c **** /*!
7106:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7107:Core/Src/bno055.c ****  *  accel anymotion interrupt from register from 0x37 bit 6
7108:Core/Src/bno055.c ****  *
7109:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
7110:Core/Src/bno055.c ****  *
7111:Core/Src/bno055.c ****  *     accel_any_motion_u8 |  result
7112:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7113:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7114:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7115:Core/Src/bno055.c ****  *
7116:Core/Src/bno055.c ****  *  @return results of bus communication function
7117:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccO72alg.s 			page 282


7118:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7119:Core/Src/bno055.c ****  *
7120:Core/Src/bno055.c ****  *  @note Accel anymotion interrupt can be configured
7121:Core/Src/bno055.c ****  *          by the following APIs
7122:Core/Src/bno055.c ****  *
7123:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_any_motion()
7124:Core/Src/bno055.c ****  *
7125:Core/Src/bno055.c ****  *  bno055_set_intr_accel_any_motion()
7126:Core/Src/bno055.c ****  */
7127:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_any_motion(u8 *accel_any_motion_u8)
7128:Core/Src/bno055.c **** {
 8517              		.loc 1 7128 1 is_stmt 1 view -0
 8518              		.cfi_startproc
 8519              		@ args = 0, pretend = 0, frame = 8
 8520              		@ frame_needed = 0, uses_anonymous_args = 0
 8521              		.loc 1 7128 1 is_stmt 0 view .LVU2253
 8522 0000 30B5     		push	{r4, r5, lr}
 8523              	.LCFI297:
 8524              		.cfi_def_cfa_offset 12
 8525              		.cfi_offset 4, -12
 8526              		.cfi_offset 5, -8
 8527              		.cfi_offset 14, -4
 8528 0002 83B0     		sub	sp, sp, #12
 8529              	.LCFI298:
 8530              		.cfi_def_cfa_offset 24
7129:Core/Src/bno055.c ****     /* Variable used to return value of
7130:Core/Src/bno055.c ****      * communication routine*/
7131:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8531              		.loc 1 7131 5 is_stmt 1 view .LVU2254
 8532              	.LVL898:
7132:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8533              		.loc 1 7132 5 view .LVU2255
 8534              		.loc 1 7132 8 is_stmt 0 view .LVU2256
 8535 0004 0023     		movs	r3, #0
 8536 0006 8DF80730 		strb	r3, [sp, #7]
7133:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8537              		.loc 1 7133 5 is_stmt 1 view .LVU2257
 8538              	.LVL899:
7134:Core/Src/bno055.c **** 
7135:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7136:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8539              		.loc 1 7136 5 view .LVU2258
 8540              		.loc 1 7136 18 is_stmt 0 view .LVU2259
 8541 000a 134B     		ldr	r3, .L653
 8542 000c 1B68     		ldr	r3, [r3]
 8543              		.loc 1 7136 8 view .LVU2260
 8544 000e E3B1     		cbz	r3, .L649
 8545 0010 0446     		mov	r4, r0
7137:Core/Src/bno055.c ****     {
7138:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7139:Core/Src/bno055.c ****     }
7140:Core/Src/bno055.c ****     else
7141:Core/Src/bno055.c ****     {
7142:Core/Src/bno055.c ****         /*condition check for page, accel anymotion is
7143:Core/Src/bno055.c ****          * available in the page zero*/
7144:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8546              		.loc 1 7144 9 is_stmt 1 view .LVU2261
ARM GAS  /tmp/ccO72alg.s 			page 283


 8547              		.loc 1 7144 21 is_stmt 0 view .LVU2262
 8548 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8549              		.loc 1 7144 12 view .LVU2263
 8550 0014 9BB9     		cbnz	r3, .L652
 8551              	.LVL900:
 8552              	.L647:
7145:Core/Src/bno055.c ****         {
7146:Core/Src/bno055.c ****             /* Write the page zero*/
7147:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7148:Core/Src/bno055.c ****         }
7149:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8553              		.loc 1 7149 53 discriminator 1 view .LVU2264
 8554 0016 104B     		ldr	r3, .L653
 8555 0018 1B68     		ldr	r3, [r3]
 8556 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8557              		.loc 1 7149 41 discriminator 1 view .LVU2265
 8558 001c C3B9     		cbnz	r3, .L650
 8559              	.L648:
7150:Core/Src/bno055.c ****         {
7151:Core/Src/bno055.c ****             /* Read the accel anymotion interrupt stat_s8 */
7152:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8560              		.loc 1 7152 13 is_stmt 1 view .LVU2266
 8561              		.loc 1 7152 32 is_stmt 0 view .LVU2267
 8562 001e 0E4B     		ldr	r3, .L653
 8563 0020 1868     		ldr	r0, [r3]
 8564 0022 0569     		ldr	r5, [r0, #16]
 8565              		.loc 1 7152 24 view .LVU2268
 8566 0024 0123     		movs	r3, #1
 8567 0026 0DF10702 		add	r2, sp, #7
 8568 002a 3721     		movs	r1, #55
 8569 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8570 002e A847     		blx	r5
 8571              	.LVL901:
7153:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_ANY_MOTION_REG,
7154:Core/Src/bno055.c ****                                                       &data_u8r,
7155:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7156:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_ANY_MOTION)
 8572              		.loc 1 7156 13 is_stmt 1 view .LVU2269
 8573              		.loc 1 7156 36 is_stmt 0 view .LVU2270
 8574 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8575 0034 C3F38013 		ubfx	r3, r3, #6, #1
 8576              		.loc 1 7156 34 view .LVU2271
 8577 0038 2370     		strb	r3, [r4]
 8578              	.LVL902:
 8579              	.L646:
7157:Core/Src/bno055.c ****         }
7158:Core/Src/bno055.c ****         else
7159:Core/Src/bno055.c ****         {
7160:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7161:Core/Src/bno055.c ****         }
7162:Core/Src/bno055.c ****     }
7163:Core/Src/bno055.c **** 
7164:Core/Src/bno055.c ****     return com_rslt;
7165:Core/Src/bno055.c **** }
 8580              		.loc 1 7165 1 view .LVU2272
 8581 003a 03B0     		add	sp, sp, #12
 8582              	.LCFI299:
ARM GAS  /tmp/ccO72alg.s 			page 284


 8583              		.cfi_remember_state
 8584              		.cfi_def_cfa_offset 12
 8585              		@ sp needed
 8586 003c 30BD     		pop	{r4, r5, pc}
 8587              	.LVL903:
 8588              	.L652:
 8589              	.LCFI300:
 8590              		.cfi_restore_state
7147:Core/Src/bno055.c ****         }
 8591              		.loc 1 7147 13 is_stmt 1 view .LVU2273
7147:Core/Src/bno055.c ****         }
 8592              		.loc 1 7147 23 is_stmt 0 view .LVU2274
 8593 003e 0020     		movs	r0, #0
 8594              	.LVL904:
7147:Core/Src/bno055.c ****         }
 8595              		.loc 1 7147 23 view .LVU2275
 8596 0040 FFF7FEFF 		bl	bno055_write_page_id
 8597              	.LVL905:
7149:Core/Src/bno055.c ****         {
 8598              		.loc 1 7149 9 is_stmt 1 view .LVU2276
7149:Core/Src/bno055.c ****         {
 8599              		.loc 1 7149 12 is_stmt 0 view .LVU2277
 8600 0044 0028     		cmp	r0, #0
 8601 0046 EAD0     		beq	.L648
 8602 0048 E5E7     		b	.L647
 8603              	.LVL906:
 8604              	.L649:
7138:Core/Src/bno055.c ****     }
 8605              		.loc 1 7138 16 view .LVU2278
 8606 004a 6FF07E00 		mvn	r0, #126
 8607              	.LVL907:
7138:Core/Src/bno055.c ****     }
 8608              		.loc 1 7138 16 view .LVU2279
 8609 004e F4E7     		b	.L646
 8610              	.LVL908:
 8611              	.L650:
7160:Core/Src/bno055.c ****         }
 8612              		.loc 1 7160 22 view .LVU2280
 8613 0050 4FF0FF30 		mov	r0, #-1
 8614 0054 F1E7     		b	.L646
 8615              	.L654:
 8616 0056 00BF     		.align	2
 8617              	.L653:
 8618 0058 00000000 		.word	.LANCHOR0
 8619              		.cfi_endproc
 8620              	.LFE128:
 8622              		.section	.text.bno055_get_intr_stat_accel_no_motion,"ax",%progbits
 8623              		.align	1
 8624              		.global	bno055_get_intr_stat_accel_no_motion
 8625              		.syntax unified
 8626              		.thumb
 8627              		.thumb_func
 8629              	bno055_get_intr_stat_accel_no_motion:
 8630              	.LVL909:
 8631              	.LFB129:
7166:Core/Src/bno055.c **** 
7167:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/ccO72alg.s 			page 285


7168:Core/Src/bno055.c ****  *  @brief This API used to read the stat_s8 of
7169:Core/Src/bno055.c ****  *  accel nomotion/slowmotion interrupt from register from 0x37 bit 6
7170:Core/Src/bno055.c ****  *
7171:Core/Src/bno055.c ****  *  @param accel_no_motion_u8 : The value of accel
7172:Core/Src/bno055.c ****  *  nomotion/slowmotion interrupt
7173:Core/Src/bno055.c ****  *
7174:Core/Src/bno055.c ****  *     accel_no_motion_u8 |  result
7175:Core/Src/bno055.c ****  *    -------------------   | ---------------------
7176:Core/Src/bno055.c ****  *     0x00                 | indicates no interrupt triggered
7177:Core/Src/bno055.c ****  *     0x01                 | indicates interrupt triggered
7178:Core/Src/bno055.c ****  *
7179:Core/Src/bno055.c ****  *  @return results of bus communication function
7180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7182:Core/Src/bno055.c ****  *
7183:Core/Src/bno055.c ****  *  @note Accel nomotion/slowmotion interrupt can be configured
7184:Core/Src/bno055.c ****  *          by the following APIs
7185:Core/Src/bno055.c ****  *
7186:Core/Src/bno055.c ****  *  bno055_set_intr_mask_accel_nomotion()
7187:Core/Src/bno055.c ****  *
7188:Core/Src/bno055.c ****  *  bno055_set_intr_accel_nomotion()
7189:Core/Src/bno055.c ****  */
7190:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_stat_accel_no_motion(u8 *accel_no_motion_u8)
7191:Core/Src/bno055.c **** {
 8632              		.loc 1 7191 1 is_stmt 1 view -0
 8633              		.cfi_startproc
 8634              		@ args = 0, pretend = 0, frame = 8
 8635              		@ frame_needed = 0, uses_anonymous_args = 0
 8636              		.loc 1 7191 1 is_stmt 0 view .LVU2282
 8637 0000 30B5     		push	{r4, r5, lr}
 8638              	.LCFI301:
 8639              		.cfi_def_cfa_offset 12
 8640              		.cfi_offset 4, -12
 8641              		.cfi_offset 5, -8
 8642              		.cfi_offset 14, -4
 8643 0002 83B0     		sub	sp, sp, #12
 8644              	.LCFI302:
 8645              		.cfi_def_cfa_offset 24
7192:Core/Src/bno055.c ****     /* Variable used to return value of
7193:Core/Src/bno055.c ****      * communication routine*/
7194:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8646              		.loc 1 7194 5 is_stmt 1 view .LVU2283
 8647              	.LVL910:
7195:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8648              		.loc 1 7195 5 view .LVU2284
 8649              		.loc 1 7195 8 is_stmt 0 view .LVU2285
 8650 0004 0023     		movs	r3, #0
 8651 0006 8DF80730 		strb	r3, [sp, #7]
7196:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8652              		.loc 1 7196 5 is_stmt 1 view .LVU2286
 8653              	.LVL911:
7197:Core/Src/bno055.c **** 
7198:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7199:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8654              		.loc 1 7199 5 view .LVU2287
 8655              		.loc 1 7199 18 is_stmt 0 view .LVU2288
 8656 000a 124B     		ldr	r3, .L663
ARM GAS  /tmp/ccO72alg.s 			page 286


 8657 000c 1B68     		ldr	r3, [r3]
 8658              		.loc 1 7199 8 view .LVU2289
 8659 000e DBB1     		cbz	r3, .L659
 8660 0010 0446     		mov	r4, r0
7200:Core/Src/bno055.c ****     {
7201:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7202:Core/Src/bno055.c ****     }
7203:Core/Src/bno055.c ****     else
7204:Core/Src/bno055.c ****     {
7205:Core/Src/bno055.c ****         /*condition check for page, accel
7206:Core/Src/bno055.c ****         * nomotion/slowmotion interrupt
7207:Core/Src/bno055.c ****         * is available in the page zero*/
7208:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8661              		.loc 1 7208 9 is_stmt 1 view .LVU2290
 8662              		.loc 1 7208 21 is_stmt 0 view .LVU2291
 8663 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8664              		.loc 1 7208 12 view .LVU2292
 8665 0014 93B9     		cbnz	r3, .L662
 8666              	.LVL912:
 8667              	.L657:
7209:Core/Src/bno055.c ****         {
7210:Core/Src/bno055.c ****             /* Write the page zero*/
7211:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7212:Core/Src/bno055.c ****         }
7213:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8668              		.loc 1 7213 53 discriminator 1 view .LVU2293
 8669 0016 0F4B     		ldr	r3, .L663
 8670 0018 1B68     		ldr	r3, [r3]
 8671 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8672              		.loc 1 7213 41 discriminator 1 view .LVU2294
 8673 001c BBB9     		cbnz	r3, .L660
 8674              	.L658:
7214:Core/Src/bno055.c ****         {
7215:Core/Src/bno055.c ****             /* Read the stat_s8 of accel
7216:Core/Src/bno055.c ****              * nomotion/slowmotion interrupt*/
7217:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8675              		.loc 1 7217 13 is_stmt 1 view .LVU2295
 8676              		.loc 1 7217 32 is_stmt 0 view .LVU2296
 8677 001e 0D4B     		ldr	r3, .L663
 8678 0020 1868     		ldr	r0, [r3]
 8679 0022 0569     		ldr	r5, [r0, #16]
 8680              		.loc 1 7217 24 view .LVU2297
 8681 0024 0123     		movs	r3, #1
 8682 0026 0DF10702 		add	r2, sp, #7
 8683 002a 3721     		movs	r1, #55
 8684 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8685 002e A847     		blx	r5
 8686              	.LVL913:
7218:Core/Src/bno055.c ****                                                       BNO055_INTR_STAT_ACCEL_NO_MOTION_REG,
7219:Core/Src/bno055.c ****                                                       &data_u8r,
7220:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7221:Core/Src/bno055.c ****             *accel_no_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_STAT_ACCEL_NO_MOTION);
 8687              		.loc 1 7221 13 is_stmt 1 view .LVU2298
 8688              		.loc 1 7221 35 is_stmt 0 view .LVU2299
 8689 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8690 0034 DB09     		lsrs	r3, r3, #7
 8691              		.loc 1 7221 33 view .LVU2300
ARM GAS  /tmp/ccO72alg.s 			page 287


 8692 0036 2370     		strb	r3, [r4]
 8693              	.LVL914:
 8694              	.L656:
7222:Core/Src/bno055.c ****         }
7223:Core/Src/bno055.c ****         else
7224:Core/Src/bno055.c ****         {
7225:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7226:Core/Src/bno055.c ****         }
7227:Core/Src/bno055.c ****     }
7228:Core/Src/bno055.c **** 
7229:Core/Src/bno055.c ****     return com_rslt;
7230:Core/Src/bno055.c **** }
 8695              		.loc 1 7230 1 view .LVU2301
 8696 0038 03B0     		add	sp, sp, #12
 8697              	.LCFI303:
 8698              		.cfi_remember_state
 8699              		.cfi_def_cfa_offset 12
 8700              		@ sp needed
 8701 003a 30BD     		pop	{r4, r5, pc}
 8702              	.LVL915:
 8703              	.L662:
 8704              	.LCFI304:
 8705              		.cfi_restore_state
7211:Core/Src/bno055.c ****         }
 8706              		.loc 1 7211 13 is_stmt 1 view .LVU2302
7211:Core/Src/bno055.c ****         }
 8707              		.loc 1 7211 23 is_stmt 0 view .LVU2303
 8708 003c 0020     		movs	r0, #0
 8709              	.LVL916:
7211:Core/Src/bno055.c ****         }
 8710              		.loc 1 7211 23 view .LVU2304
 8711 003e FFF7FEFF 		bl	bno055_write_page_id
 8712              	.LVL917:
7213:Core/Src/bno055.c ****         {
 8713              		.loc 1 7213 9 is_stmt 1 view .LVU2305
7213:Core/Src/bno055.c ****         {
 8714              		.loc 1 7213 12 is_stmt 0 view .LVU2306
 8715 0042 0028     		cmp	r0, #0
 8716 0044 EBD0     		beq	.L658
 8717 0046 E6E7     		b	.L657
 8718              	.LVL918:
 8719              	.L659:
7201:Core/Src/bno055.c ****     }
 8720              		.loc 1 7201 16 view .LVU2307
 8721 0048 6FF07E00 		mvn	r0, #126
 8722              	.LVL919:
7201:Core/Src/bno055.c ****     }
 8723              		.loc 1 7201 16 view .LVU2308
 8724 004c F4E7     		b	.L656
 8725              	.LVL920:
 8726              	.L660:
7225:Core/Src/bno055.c ****         }
 8727              		.loc 1 7225 22 view .LVU2309
 8728 004e 4FF0FF30 		mov	r0, #-1
 8729 0052 F1E7     		b	.L656
 8730              	.L664:
 8731              		.align	2
ARM GAS  /tmp/ccO72alg.s 			page 288


 8732              	.L663:
 8733 0054 00000000 		.word	.LANCHOR0
 8734              		.cfi_endproc
 8735              	.LFE129:
 8737              		.section	.text.bno055_get_stat_main_clk,"ax",%progbits
 8738              		.align	1
 8739              		.global	bno055_get_stat_main_clk
 8740              		.syntax unified
 8741              		.thumb
 8742              		.thumb_func
 8744              	bno055_get_stat_main_clk:
 8745              	.LVL921:
 8746              	.LFB130:
7231:Core/Src/bno055.c **** 
7232:Core/Src/bno055.c **** /*!
7233:Core/Src/bno055.c ****  *  @brief This API is used to read status of main clock
7234:Core/Src/bno055.c ****  *  from the register 0x38 bit 0
7235:Core/Src/bno055.c ****  *
7236:Core/Src/bno055.c ****  *  @param stat_main_clk_u8 : the status of main clock
7237:Core/Src/bno055.c ****  *
7238:Core/Src/bno055.c ****  *
7239:Core/Src/bno055.c ****  *  @return results of bus communication function
7240:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7241:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7242:Core/Src/bno055.c ****  *
7243:Core/Src/bno055.c ****  */
7244:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_stat_main_clk(u8 *stat_main_clk_u8)
7245:Core/Src/bno055.c **** {
 8747              		.loc 1 7245 1 is_stmt 1 view -0
 8748              		.cfi_startproc
 8749              		@ args = 0, pretend = 0, frame = 8
 8750              		@ frame_needed = 0, uses_anonymous_args = 0
 8751              		.loc 1 7245 1 is_stmt 0 view .LVU2311
 8752 0000 30B5     		push	{r4, r5, lr}
 8753              	.LCFI305:
 8754              		.cfi_def_cfa_offset 12
 8755              		.cfi_offset 4, -12
 8756              		.cfi_offset 5, -8
 8757              		.cfi_offset 14, -4
 8758 0002 83B0     		sub	sp, sp, #12
 8759              	.LCFI306:
 8760              		.cfi_def_cfa_offset 24
7246:Core/Src/bno055.c ****     /* Variable used to return value of
7247:Core/Src/bno055.c ****      * communication routine*/
7248:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8761              		.loc 1 7248 5 is_stmt 1 view .LVU2312
 8762              	.LVL922:
7249:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8763              		.loc 1 7249 5 view .LVU2313
 8764              		.loc 1 7249 8 is_stmt 0 view .LVU2314
 8765 0004 0023     		movs	r3, #0
 8766 0006 8DF80730 		strb	r3, [sp, #7]
7250:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8767              		.loc 1 7250 5 is_stmt 1 view .LVU2315
 8768              	.LVL923:
7251:Core/Src/bno055.c **** 
7252:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccO72alg.s 			page 289


7253:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8769              		.loc 1 7253 5 view .LVU2316
 8770              		.loc 1 7253 18 is_stmt 0 view .LVU2317
 8771 000a 134B     		ldr	r3, .L673
 8772 000c 1B68     		ldr	r3, [r3]
 8773              		.loc 1 7253 8 view .LVU2318
 8774 000e E3B1     		cbz	r3, .L669
 8775 0010 0446     		mov	r4, r0
7254:Core/Src/bno055.c ****     {
7255:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7256:Core/Src/bno055.c ****     }
7257:Core/Src/bno055.c ****     else
7258:Core/Src/bno055.c ****     {
7259:Core/Src/bno055.c ****         /*condition check for page, status of main clk is
7260:Core/Src/bno055.c ****          * available in the page zero*/
7261:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8776              		.loc 1 7261 9 is_stmt 1 view .LVU2319
 8777              		.loc 1 7261 21 is_stmt 0 view .LVU2320
 8778 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8779              		.loc 1 7261 12 view .LVU2321
 8780 0014 9BB9     		cbnz	r3, .L672
 8781              	.LVL924:
 8782              	.L667:
7262:Core/Src/bno055.c ****         {
7263:Core/Src/bno055.c ****             /* Write the page zero*/
7264:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7265:Core/Src/bno055.c ****         }
7266:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8783              		.loc 1 7266 53 discriminator 1 view .LVU2322
 8784 0016 104B     		ldr	r3, .L673
 8785 0018 1B68     		ldr	r3, [r3]
 8786 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8787              		.loc 1 7266 41 discriminator 1 view .LVU2323
 8788 001c C3B9     		cbnz	r3, .L670
 8789              	.L668:
7267:Core/Src/bno055.c ****         {
7268:Core/Src/bno055.c ****             /* Read the status of main clk */
7269:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8790              		.loc 1 7269 13 is_stmt 1 view .LVU2324
 8791              		.loc 1 7269 32 is_stmt 0 view .LVU2325
 8792 001e 0E4B     		ldr	r3, .L673
 8793 0020 1868     		ldr	r0, [r3]
 8794 0022 0569     		ldr	r5, [r0, #16]
 8795              		.loc 1 7269 24 view .LVU2326
 8796 0024 0123     		movs	r3, #1
 8797 0026 0DF10702 		add	r2, sp, #7
 8798 002a 3821     		movs	r1, #56
 8799 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 8800 002e A847     		blx	r5
 8801              	.LVL925:
7270:Core/Src/bno055.c ****                                                       BNO055_SYS_MAIN_CLK_REG,
7271:Core/Src/bno055.c ****                                                       &data_u8r,
7272:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7273:Core/Src/bno055.c ****             *stat_main_clk_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_MAIN_CLK);
 8802              		.loc 1 7273 13 is_stmt 1 view .LVU2327
 8803              		.loc 1 7273 33 is_stmt 0 view .LVU2328
 8804 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 290


 8805 0034 03F01003 		and	r3, r3, #16
 8806              		.loc 1 7273 31 view .LVU2329
 8807 0038 2370     		strb	r3, [r4]
 8808              	.LVL926:
 8809              	.L666:
7274:Core/Src/bno055.c ****         }
7275:Core/Src/bno055.c ****         else
7276:Core/Src/bno055.c ****         {
7277:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7278:Core/Src/bno055.c ****         }
7279:Core/Src/bno055.c ****     }
7280:Core/Src/bno055.c **** 
7281:Core/Src/bno055.c ****     return com_rslt;
7282:Core/Src/bno055.c **** }
 8810              		.loc 1 7282 1 view .LVU2330
 8811 003a 03B0     		add	sp, sp, #12
 8812              	.LCFI307:
 8813              		.cfi_remember_state
 8814              		.cfi_def_cfa_offset 12
 8815              		@ sp needed
 8816 003c 30BD     		pop	{r4, r5, pc}
 8817              	.LVL927:
 8818              	.L672:
 8819              	.LCFI308:
 8820              		.cfi_restore_state
7264:Core/Src/bno055.c ****         }
 8821              		.loc 1 7264 13 is_stmt 1 view .LVU2331
7264:Core/Src/bno055.c ****         }
 8822              		.loc 1 7264 23 is_stmt 0 view .LVU2332
 8823 003e 0020     		movs	r0, #0
 8824              	.LVL928:
7264:Core/Src/bno055.c ****         }
 8825              		.loc 1 7264 23 view .LVU2333
 8826 0040 FFF7FEFF 		bl	bno055_write_page_id
 8827              	.LVL929:
7266:Core/Src/bno055.c ****         {
 8828              		.loc 1 7266 9 is_stmt 1 view .LVU2334
7266:Core/Src/bno055.c ****         {
 8829              		.loc 1 7266 12 is_stmt 0 view .LVU2335
 8830 0044 0028     		cmp	r0, #0
 8831 0046 EAD0     		beq	.L668
 8832 0048 E5E7     		b	.L667
 8833              	.LVL930:
 8834              	.L669:
7255:Core/Src/bno055.c ****     }
 8835              		.loc 1 7255 16 view .LVU2336
 8836 004a 6FF07E00 		mvn	r0, #126
 8837              	.LVL931:
7255:Core/Src/bno055.c ****     }
 8838              		.loc 1 7255 16 view .LVU2337
 8839 004e F4E7     		b	.L666
 8840              	.LVL932:
 8841              	.L670:
7277:Core/Src/bno055.c ****         }
 8842              		.loc 1 7277 22 view .LVU2338
 8843 0050 4FF0FF30 		mov	r0, #-1
 8844 0054 F1E7     		b	.L666
ARM GAS  /tmp/ccO72alg.s 			page 291


 8845              	.L674:
 8846 0056 00BF     		.align	2
 8847              	.L673:
 8848 0058 00000000 		.word	.LANCHOR0
 8849              		.cfi_endproc
 8850              	.LFE130:
 8852              		.section	.text.bno055_get_sys_stat_code,"ax",%progbits
 8853              		.align	1
 8854              		.global	bno055_get_sys_stat_code
 8855              		.syntax unified
 8856              		.thumb
 8857              		.thumb_func
 8859              	bno055_get_sys_stat_code:
 8860              	.LVL933:
 8861              	.LFB131:
7283:Core/Src/bno055.c **** 
7284:Core/Src/bno055.c **** /*!
7285:Core/Src/bno055.c ****  *  @brief This API is used to read system status
7286:Core/Src/bno055.c ****  *  code from the register 0x39 it is a byte of data
7287:Core/Src/bno055.c ****  *
7288:Core/Src/bno055.c ****  *  @param sys_stat_u8 : the status of system
7289:Core/Src/bno055.c ****  *
7290:Core/Src/bno055.c ****  *
7291:Core/Src/bno055.c ****  *  @return results of bus communication function
7292:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7293:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7294:Core/Src/bno055.c ****  *
7295:Core/Src/bno055.c ****  */
7296:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_stat_code(u8 *sys_stat_u8)
7297:Core/Src/bno055.c **** {
 8862              		.loc 1 7297 1 is_stmt 1 view -0
 8863              		.cfi_startproc
 8864              		@ args = 0, pretend = 0, frame = 8
 8865              		@ frame_needed = 0, uses_anonymous_args = 0
 8866              		.loc 1 7297 1 is_stmt 0 view .LVU2340
 8867 0000 70B5     		push	{r4, r5, r6, lr}
 8868              	.LCFI309:
 8869              		.cfi_def_cfa_offset 16
 8870              		.cfi_offset 4, -16
 8871              		.cfi_offset 5, -12
 8872              		.cfi_offset 6, -8
 8873              		.cfi_offset 14, -4
 8874 0002 82B0     		sub	sp, sp, #8
 8875              	.LCFI310:
 8876              		.cfi_def_cfa_offset 24
7298:Core/Src/bno055.c ****     /* Variable used to return value of
7299:Core/Src/bno055.c ****      * communication routine*/
7300:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8877              		.loc 1 7300 5 is_stmt 1 view .LVU2341
 8878              	.LVL934:
7301:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8879              		.loc 1 7301 5 view .LVU2342
 8880              		.loc 1 7301 8 is_stmt 0 view .LVU2343
 8881 0004 0023     		movs	r3, #0
 8882 0006 8DF80730 		strb	r3, [sp, #7]
7302:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8883              		.loc 1 7302 5 is_stmt 1 view .LVU2344
ARM GAS  /tmp/ccO72alg.s 			page 292


 8884              	.LVL935:
7303:Core/Src/bno055.c **** 
7304:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7305:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8885              		.loc 1 7305 5 view .LVU2345
 8886              		.loc 1 7305 18 is_stmt 0 view .LVU2346
 8887 000a 124B     		ldr	r3, .L683
 8888 000c 1B68     		ldr	r3, [r3]
 8889              		.loc 1 7305 8 view .LVU2347
 8890 000e D3B1     		cbz	r3, .L679
 8891 0010 0546     		mov	r5, r0
7306:Core/Src/bno055.c ****     {
7307:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7308:Core/Src/bno055.c ****     }
7309:Core/Src/bno055.c ****     else
7310:Core/Src/bno055.c ****     {
7311:Core/Src/bno055.c ****         /*condition check for page, the status of system is
7312:Core/Src/bno055.c ****          * available in the page zero*/
7313:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 8892              		.loc 1 7313 9 is_stmt 1 view .LVU2348
 8893              		.loc 1 7313 21 is_stmt 0 view .LVU2349
 8894 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8895              		.loc 1 7313 12 view .LVU2350
 8896 0014 8BB9     		cbnz	r3, .L682
 8897              	.LVL936:
 8898              	.L677:
7314:Core/Src/bno055.c ****         {
7315:Core/Src/bno055.c ****             /* Write the page zero*/
7316:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7317:Core/Src/bno055.c ****         }
7318:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 8899              		.loc 1 7318 53 discriminator 1 view .LVU2351
 8900 0016 0F4B     		ldr	r3, .L683
 8901 0018 1B68     		ldr	r3, [r3]
 8902 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8903              		.loc 1 7318 41 discriminator 1 view .LVU2352
 8904 001c B3B9     		cbnz	r3, .L680
 8905              	.L678:
7319:Core/Src/bno055.c ****         {
7320:Core/Src/bno055.c ****             /* Read the the status of system*/
7321:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 8906              		.loc 1 7321 13 is_stmt 1 view .LVU2353
 8907              		.loc 1 7321 32 is_stmt 0 view .LVU2354
 8908 001e 0D4B     		ldr	r3, .L683
 8909 0020 1C68     		ldr	r4, [r3]
 8910 0022 2669     		ldr	r6, [r4, #16]
 8911              		.loc 1 7321 24 view .LVU2355
 8912 0024 0123     		movs	r3, #1
 8913 0026 0DF10702 		add	r2, sp, #7
 8914 002a 3921     		movs	r1, #57
 8915 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 8916 002e B047     		blx	r6
 8917              	.LVL937:
7322:Core/Src/bno055.c ****                                                       BNO055_SYS_STAT_CODE_REG,
7323:Core/Src/bno055.c ****                                                       &data_u8r,
7324:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7325:Core/Src/bno055.c ****             *sys_stat_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_STAT_CODE);
ARM GAS  /tmp/ccO72alg.s 			page 293


 8918              		.loc 1 7325 13 is_stmt 1 view .LVU2356
 8919              		.loc 1 7325 26 is_stmt 0 view .LVU2357
 8920 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 8921 0034 2B70     		strb	r3, [r5]
 8922              	.LVL938:
 8923              	.L676:
7326:Core/Src/bno055.c ****         }
7327:Core/Src/bno055.c ****         else
7328:Core/Src/bno055.c ****         {
7329:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7330:Core/Src/bno055.c ****         }
7331:Core/Src/bno055.c ****     }
7332:Core/Src/bno055.c **** 
7333:Core/Src/bno055.c ****     return com_rslt;
7334:Core/Src/bno055.c **** }
 8924              		.loc 1 7334 1 view .LVU2358
 8925 0036 02B0     		add	sp, sp, #8
 8926              	.LCFI311:
 8927              		.cfi_remember_state
 8928              		.cfi_def_cfa_offset 16
 8929              		@ sp needed
 8930 0038 70BD     		pop	{r4, r5, r6, pc}
 8931              	.LVL939:
 8932              	.L682:
 8933              	.LCFI312:
 8934              		.cfi_restore_state
7316:Core/Src/bno055.c ****         }
 8935              		.loc 1 7316 13 is_stmt 1 view .LVU2359
7316:Core/Src/bno055.c ****         }
 8936              		.loc 1 7316 23 is_stmt 0 view .LVU2360
 8937 003a 0020     		movs	r0, #0
 8938              	.LVL940:
7316:Core/Src/bno055.c ****         }
 8939              		.loc 1 7316 23 view .LVU2361
 8940 003c FFF7FEFF 		bl	bno055_write_page_id
 8941              	.LVL941:
7318:Core/Src/bno055.c ****         {
 8942              		.loc 1 7318 9 is_stmt 1 view .LVU2362
7318:Core/Src/bno055.c ****         {
 8943              		.loc 1 7318 12 is_stmt 0 view .LVU2363
 8944 0040 0028     		cmp	r0, #0
 8945 0042 ECD0     		beq	.L678
 8946 0044 E7E7     		b	.L677
 8947              	.LVL942:
 8948              	.L679:
7307:Core/Src/bno055.c ****     }
 8949              		.loc 1 7307 16 view .LVU2364
 8950 0046 6FF07E00 		mvn	r0, #126
 8951              	.LVL943:
7307:Core/Src/bno055.c ****     }
 8952              		.loc 1 7307 16 view .LVU2365
 8953 004a F4E7     		b	.L676
 8954              	.LVL944:
 8955              	.L680:
7329:Core/Src/bno055.c ****         }
 8956              		.loc 1 7329 22 view .LVU2366
 8957 004c 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccO72alg.s 			page 294


 8958 0050 F1E7     		b	.L676
 8959              	.L684:
 8960 0052 00BF     		.align	2
 8961              	.L683:
 8962 0054 00000000 		.word	.LANCHOR0
 8963              		.cfi_endproc
 8964              	.LFE131:
 8966              		.section	.text.bno055_get_sys_error_code,"ax",%progbits
 8967              		.align	1
 8968              		.global	bno055_get_sys_error_code
 8969              		.syntax unified
 8970              		.thumb
 8971              		.thumb_func
 8973              	bno055_get_sys_error_code:
 8974              	.LVL945:
 8975              	.LFB132:
7335:Core/Src/bno055.c **** 
7336:Core/Src/bno055.c **** /*!
7337:Core/Src/bno055.c ****  *  @brief This API is used to read system BNO055_ERROR
7338:Core/Src/bno055.c ****  *  code from the register 0x3A it is a byte of data
7339:Core/Src/bno055.c ****  *
7340:Core/Src/bno055.c ****  *  @param sys_error_u8 : The value of system BNO055_ERROR code
7341:Core/Src/bno055.c ****  *
7342:Core/Src/bno055.c ****  *
7343:Core/Src/bno055.c ****  *  @return results of bus communication function
7344:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7345:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7346:Core/Src/bno055.c ****  *
7347:Core/Src/bno055.c ****  *
7348:Core/Src/bno055.c ****  */
7349:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_error_code(u8 *sys_error_u8)
7350:Core/Src/bno055.c **** {
 8976              		.loc 1 7350 1 is_stmt 1 view -0
 8977              		.cfi_startproc
 8978              		@ args = 0, pretend = 0, frame = 8
 8979              		@ frame_needed = 0, uses_anonymous_args = 0
 8980              		.loc 1 7350 1 is_stmt 0 view .LVU2368
 8981 0000 70B5     		push	{r4, r5, r6, lr}
 8982              	.LCFI313:
 8983              		.cfi_def_cfa_offset 16
 8984              		.cfi_offset 4, -16
 8985              		.cfi_offset 5, -12
 8986              		.cfi_offset 6, -8
 8987              		.cfi_offset 14, -4
 8988 0002 82B0     		sub	sp, sp, #8
 8989              	.LCFI314:
 8990              		.cfi_def_cfa_offset 24
7351:Core/Src/bno055.c ****     /* Variable used to return value of
7352:Core/Src/bno055.c ****      * communication routine*/
7353:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 8991              		.loc 1 7353 5 is_stmt 1 view .LVU2369
 8992              	.LVL946:
7354:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 8993              		.loc 1 7354 5 view .LVU2370
 8994              		.loc 1 7354 8 is_stmt 0 view .LVU2371
 8995 0004 0023     		movs	r3, #0
 8996 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccO72alg.s 			page 295


7355:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 8997              		.loc 1 7355 5 is_stmt 1 view .LVU2372
 8998              	.LVL947:
7356:Core/Src/bno055.c **** 
7357:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7358:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 8999              		.loc 1 7358 5 view .LVU2373
 9000              		.loc 1 7358 18 is_stmt 0 view .LVU2374
 9001 000a 124B     		ldr	r3, .L693
 9002 000c 1B68     		ldr	r3, [r3]
 9003              		.loc 1 7358 8 view .LVU2375
 9004 000e D3B1     		cbz	r3, .L689
 9005 0010 0546     		mov	r5, r0
7359:Core/Src/bno055.c ****     {
7360:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7361:Core/Src/bno055.c ****     }
7362:Core/Src/bno055.c ****     else
7363:Core/Src/bno055.c ****     {
7364:Core/Src/bno055.c ****         /*condition check for page, system BNO055_ERROR code is
7365:Core/Src/bno055.c ****          * available in the page zero*/
7366:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9006              		.loc 1 7366 9 is_stmt 1 view .LVU2376
 9007              		.loc 1 7366 21 is_stmt 0 view .LVU2377
 9008 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9009              		.loc 1 7366 12 view .LVU2378
 9010 0014 8BB9     		cbnz	r3, .L692
 9011              	.LVL948:
 9012              	.L687:
7367:Core/Src/bno055.c ****         {
7368:Core/Src/bno055.c ****             /* Write the page zero*/
7369:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7370:Core/Src/bno055.c ****         }
7371:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9013              		.loc 1 7371 53 discriminator 1 view .LVU2379
 9014 0016 0F4B     		ldr	r3, .L693
 9015 0018 1B68     		ldr	r3, [r3]
 9016 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9017              		.loc 1 7371 41 discriminator 1 view .LVU2380
 9018 001c B3B9     		cbnz	r3, .L690
 9019              	.L688:
7372:Core/Src/bno055.c ****         {
7373:Core/Src/bno055.c ****             /* Read the system BNO055_ERROR code*/
7374:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9020              		.loc 1 7374 13 is_stmt 1 view .LVU2381
 9021              		.loc 1 7374 32 is_stmt 0 view .LVU2382
 9022 001e 0D4B     		ldr	r3, .L693
 9023 0020 1C68     		ldr	r4, [r3]
 9024 0022 2669     		ldr	r6, [r4, #16]
 9025              		.loc 1 7374 24 view .LVU2383
 9026 0024 0123     		movs	r3, #1
 9027 0026 0DF10702 		add	r2, sp, #7
 9028 002a 3A21     		movs	r1, #58
 9029 002c 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 9030 002e B047     		blx	r6
 9031              	.LVL949:
7375:Core/Src/bno055.c ****                                                       BNO055_SYS_ERROR_CODE_REG,
7376:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 296


7377:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7378:Core/Src/bno055.c ****             *sys_error_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_ERROR_CODE);
 9032              		.loc 1 7378 13 is_stmt 1 view .LVU2384
 9033              		.loc 1 7378 27 is_stmt 0 view .LVU2385
 9034 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9035 0034 2B70     		strb	r3, [r5]
 9036              	.LVL950:
 9037              	.L686:
7379:Core/Src/bno055.c ****         }
7380:Core/Src/bno055.c ****         else
7381:Core/Src/bno055.c ****         {
7382:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7383:Core/Src/bno055.c ****         }
7384:Core/Src/bno055.c ****     }
7385:Core/Src/bno055.c **** 
7386:Core/Src/bno055.c ****     return com_rslt;
7387:Core/Src/bno055.c **** }
 9038              		.loc 1 7387 1 view .LVU2386
 9039 0036 02B0     		add	sp, sp, #8
 9040              	.LCFI315:
 9041              		.cfi_remember_state
 9042              		.cfi_def_cfa_offset 16
 9043              		@ sp needed
 9044 0038 70BD     		pop	{r4, r5, r6, pc}
 9045              	.LVL951:
 9046              	.L692:
 9047              	.LCFI316:
 9048              		.cfi_restore_state
7369:Core/Src/bno055.c ****         }
 9049              		.loc 1 7369 13 is_stmt 1 view .LVU2387
7369:Core/Src/bno055.c ****         }
 9050              		.loc 1 7369 23 is_stmt 0 view .LVU2388
 9051 003a 0020     		movs	r0, #0
 9052              	.LVL952:
7369:Core/Src/bno055.c ****         }
 9053              		.loc 1 7369 23 view .LVU2389
 9054 003c FFF7FEFF 		bl	bno055_write_page_id
 9055              	.LVL953:
7371:Core/Src/bno055.c ****         {
 9056              		.loc 1 7371 9 is_stmt 1 view .LVU2390
7371:Core/Src/bno055.c ****         {
 9057              		.loc 1 7371 12 is_stmt 0 view .LVU2391
 9058 0040 0028     		cmp	r0, #0
 9059 0042 ECD0     		beq	.L688
 9060 0044 E7E7     		b	.L687
 9061              	.LVL954:
 9062              	.L689:
7360:Core/Src/bno055.c ****     }
 9063              		.loc 1 7360 16 view .LVU2392
 9064 0046 6FF07E00 		mvn	r0, #126
 9065              	.LVL955:
7360:Core/Src/bno055.c ****     }
 9066              		.loc 1 7360 16 view .LVU2393
 9067 004a F4E7     		b	.L686
 9068              	.LVL956:
 9069              	.L690:
7382:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 297


 9070              		.loc 1 7382 22 view .LVU2394
 9071 004c 4FF0FF30 		mov	r0, #-1
 9072 0050 F1E7     		b	.L686
 9073              	.L694:
 9074 0052 00BF     		.align	2
 9075              	.L693:
 9076 0054 00000000 		.word	.LANCHOR0
 9077              		.cfi_endproc
 9078              	.LFE132:
 9080              		.section	.text.bno055_get_accel_unit,"ax",%progbits
 9081              		.align	1
 9082              		.global	bno055_get_accel_unit
 9083              		.syntax unified
 9084              		.thumb
 9085              		.thumb_func
 9087              	bno055_get_accel_unit:
 9088              	.LVL957:
 9089              	.LFB133:
7388:Core/Src/bno055.c **** 
7389:Core/Src/bno055.c **** /*!
7390:Core/Src/bno055.c ****  *  @brief This API used to read the accel unit
7391:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7392:Core/Src/bno055.c ****  *
7393:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7394:Core/Src/bno055.c ****  *
7395:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7396:Core/Src/bno055.c ****  *   -------------    | ---------------
7397:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7398:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7399:Core/Src/bno055.c ****  *
7400:Core/Src/bno055.c ****  *  @return results of bus communication function
7401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7403:Core/Src/bno055.c ****  *
7404:Core/Src/bno055.c ****  */
7405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_unit(u8 *accel_unit_u8)
7406:Core/Src/bno055.c **** {
 9090              		.loc 1 7406 1 is_stmt 1 view -0
 9091              		.cfi_startproc
 9092              		@ args = 0, pretend = 0, frame = 8
 9093              		@ frame_needed = 0, uses_anonymous_args = 0
 9094              		.loc 1 7406 1 is_stmt 0 view .LVU2396
 9095 0000 30B5     		push	{r4, r5, lr}
 9096              	.LCFI317:
 9097              		.cfi_def_cfa_offset 12
 9098              		.cfi_offset 4, -12
 9099              		.cfi_offset 5, -8
 9100              		.cfi_offset 14, -4
 9101 0002 83B0     		sub	sp, sp, #12
 9102              	.LCFI318:
 9103              		.cfi_def_cfa_offset 24
7407:Core/Src/bno055.c ****     /* Variable used to return value of
7408:Core/Src/bno055.c ****      * communication routine*/
7409:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9104              		.loc 1 7409 5 is_stmt 1 view .LVU2397
 9105              	.LVL958:
7410:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccO72alg.s 			page 298


 9106              		.loc 1 7410 5 view .LVU2398
 9107              		.loc 1 7410 8 is_stmt 0 view .LVU2399
 9108 0004 0023     		movs	r3, #0
 9109 0006 8DF80730 		strb	r3, [sp, #7]
7411:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9110              		.loc 1 7411 5 is_stmt 1 view .LVU2400
 9111              	.LVL959:
7412:Core/Src/bno055.c **** 
7413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9112              		.loc 1 7414 5 view .LVU2401
 9113              		.loc 1 7414 18 is_stmt 0 view .LVU2402
 9114 000a 134B     		ldr	r3, .L703
 9115 000c 1B68     		ldr	r3, [r3]
 9116              		.loc 1 7414 8 view .LVU2403
 9117 000e E3B1     		cbz	r3, .L699
 9118 0010 0446     		mov	r4, r0
7415:Core/Src/bno055.c ****     {
7416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7417:Core/Src/bno055.c ****     }
7418:Core/Src/bno055.c ****     else
7419:Core/Src/bno055.c ****     {
7420:Core/Src/bno055.c ****         /*condition check for page, accel unit is
7421:Core/Src/bno055.c ****          * available in the page zero*/
7422:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9119              		.loc 1 7422 9 is_stmt 1 view .LVU2404
 9120              		.loc 1 7422 21 is_stmt 0 view .LVU2405
 9121 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9122              		.loc 1 7422 12 view .LVU2406
 9123 0014 9BB9     		cbnz	r3, .L702
 9124              	.LVL960:
 9125              	.L697:
7423:Core/Src/bno055.c ****         {
7424:Core/Src/bno055.c ****             /* Write the page zero*/
7425:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7426:Core/Src/bno055.c ****         }
7427:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9126              		.loc 1 7427 53 discriminator 1 view .LVU2407
 9127 0016 104B     		ldr	r3, .L703
 9128 0018 1B68     		ldr	r3, [r3]
 9129 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9130              		.loc 1 7427 41 discriminator 1 view .LVU2408
 9131 001c C3B9     		cbnz	r3, .L700
 9132              	.L698:
7428:Core/Src/bno055.c ****         {
7429:Core/Src/bno055.c ****             /* Read the accel unit */
7430:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9133              		.loc 1 7430 13 is_stmt 1 view .LVU2409
 9134              		.loc 1 7430 32 is_stmt 0 view .LVU2410
 9135 001e 0E4B     		ldr	r3, .L703
 9136 0020 1868     		ldr	r0, [r3]
 9137 0022 0569     		ldr	r5, [r0, #16]
 9138              		.loc 1 7430 24 view .LVU2411
 9139 0024 0123     		movs	r3, #1
 9140 0026 0DF10702 		add	r2, sp, #7
 9141 002a 3B21     		movs	r1, #59
 9142 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 299


 9143 002e A847     		blx	r5
 9144              	.LVL961:
7431:Core/Src/bno055.c ****                                                       BNO055_ACCEL_UNIT_REG,
7432:Core/Src/bno055.c ****                                                       &data_u8r,
7433:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7434:Core/Src/bno055.c ****             *accel_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT);
 9145              		.loc 1 7434 13 is_stmt 1 view .LVU2412
 9146              		.loc 1 7434 30 is_stmt 0 view .LVU2413
 9147 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9148 0034 03F00103 		and	r3, r3, #1
 9149              		.loc 1 7434 28 view .LVU2414
 9150 0038 2370     		strb	r3, [r4]
 9151              	.LVL962:
 9152              	.L696:
7435:Core/Src/bno055.c ****         }
7436:Core/Src/bno055.c ****         else
7437:Core/Src/bno055.c ****         {
7438:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7439:Core/Src/bno055.c ****         }
7440:Core/Src/bno055.c ****     }
7441:Core/Src/bno055.c **** 
7442:Core/Src/bno055.c ****     return com_rslt;
7443:Core/Src/bno055.c **** }
 9153              		.loc 1 7443 1 view .LVU2415
 9154 003a 03B0     		add	sp, sp, #12
 9155              	.LCFI319:
 9156              		.cfi_remember_state
 9157              		.cfi_def_cfa_offset 12
 9158              		@ sp needed
 9159 003c 30BD     		pop	{r4, r5, pc}
 9160              	.LVL963:
 9161              	.L702:
 9162              	.LCFI320:
 9163              		.cfi_restore_state
7425:Core/Src/bno055.c ****         }
 9164              		.loc 1 7425 13 is_stmt 1 view .LVU2416
7425:Core/Src/bno055.c ****         }
 9165              		.loc 1 7425 23 is_stmt 0 view .LVU2417
 9166 003e 0020     		movs	r0, #0
 9167              	.LVL964:
7425:Core/Src/bno055.c ****         }
 9168              		.loc 1 7425 23 view .LVU2418
 9169 0040 FFF7FEFF 		bl	bno055_write_page_id
 9170              	.LVL965:
7427:Core/Src/bno055.c ****         {
 9171              		.loc 1 7427 9 is_stmt 1 view .LVU2419
7427:Core/Src/bno055.c ****         {
 9172              		.loc 1 7427 12 is_stmt 0 view .LVU2420
 9173 0044 0028     		cmp	r0, #0
 9174 0046 EAD0     		beq	.L698
 9175 0048 E5E7     		b	.L697
 9176              	.LVL966:
 9177              	.L699:
7416:Core/Src/bno055.c ****     }
 9178              		.loc 1 7416 16 view .LVU2421
 9179 004a 6FF07E00 		mvn	r0, #126
 9180              	.LVL967:
ARM GAS  /tmp/ccO72alg.s 			page 300


7416:Core/Src/bno055.c ****     }
 9181              		.loc 1 7416 16 view .LVU2422
 9182 004e F4E7     		b	.L696
 9183              	.LVL968:
 9184              	.L700:
7438:Core/Src/bno055.c ****         }
 9185              		.loc 1 7438 22 view .LVU2423
 9186 0050 4FF0FF30 		mov	r0, #-1
 9187 0054 F1E7     		b	.L696
 9188              	.L704:
 9189 0056 00BF     		.align	2
 9190              	.L703:
 9191 0058 00000000 		.word	.LANCHOR0
 9192              		.cfi_endproc
 9193              	.LFE133:
 9195              		.section	.text.bno055_get_gyro_unit,"ax",%progbits
 9196              		.align	1
 9197              		.global	bno055_get_gyro_unit
 9198              		.syntax unified
 9199              		.thumb
 9200              		.thumb_func
 9202              	bno055_get_gyro_unit:
 9203              	.LVL969:
 9204              	.LFB135:
7444:Core/Src/bno055.c **** 
7445:Core/Src/bno055.c **** /*!
7446:Core/Src/bno055.c ****  *  @brief This API used to write the accel unit
7447:Core/Src/bno055.c ****  *  from register from 0x3B bit 0
7448:Core/Src/bno055.c ****  *
7449:Core/Src/bno055.c ****  *  @param accel_unit_u8 : The value of accel unit
7450:Core/Src/bno055.c ****  *
7451:Core/Src/bno055.c ****  *    accel_unit_u8 |   result
7452:Core/Src/bno055.c ****  *   -------------    | ---------------
7453:Core/Src/bno055.c ****  *        0x00        | BNO055_ACCEL_UNIT_MSQ
7454:Core/Src/bno055.c ****  *        0x01        | BNO055_ACCEL_UNIT_MG
7455:Core/Src/bno055.c ****  *
7456:Core/Src/bno055.c ****  *  @return results of bus communication function
7457:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7458:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7459:Core/Src/bno055.c ****  *
7460:Core/Src/bno055.c ****  *
7461:Core/Src/bno055.c ****  */
7462:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_unit(u8 accel_unit_u8)
7463:Core/Src/bno055.c **** {
7464:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7465:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7466:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7467:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7468:Core/Src/bno055.c **** 
7469:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7470:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7471:Core/Src/bno055.c ****     {
7472:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7473:Core/Src/bno055.c ****     }
7474:Core/Src/bno055.c ****     else
7475:Core/Src/bno055.c ****     {
7476:Core/Src/bno055.c ****         /* The write operation effective only if the operation
ARM GAS  /tmp/ccO72alg.s 			page 301


7477:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7478:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7479:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7480:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7481:Core/Src/bno055.c ****         {
7482:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7483:Core/Src/bno055.c ****             {
7484:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7485:Core/Src/bno055.c ****             }
7486:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7487:Core/Src/bno055.c ****             {
7488:Core/Src/bno055.c ****                 /* Write the accel unit */
7489:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7490:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
7491:Core/Src/bno055.c ****                                                           &data_u8r,
7492:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7493:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7494:Core/Src/bno055.c ****                 {
7495:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_UNIT, accel_unit_u8);
7496:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7497:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
7498:Core/Src/bno055.c ****                                                                 &data_u8r,
7499:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7500:Core/Src/bno055.c ****                 }
7501:Core/Src/bno055.c ****             }
7502:Core/Src/bno055.c ****             else
7503:Core/Src/bno055.c ****             {
7504:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7505:Core/Src/bno055.c ****             }
7506:Core/Src/bno055.c ****         }
7507:Core/Src/bno055.c ****         else
7508:Core/Src/bno055.c ****         {
7509:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7510:Core/Src/bno055.c ****         }
7511:Core/Src/bno055.c ****     }
7512:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7513:Core/Src/bno055.c ****     {
7514:Core/Src/bno055.c ****         /* set the operation mode
7515:Core/Src/bno055.c ****          * of previous operation mode*/
7516:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7517:Core/Src/bno055.c ****     }
7518:Core/Src/bno055.c **** 
7519:Core/Src/bno055.c ****     return com_rslt;
7520:Core/Src/bno055.c **** }
7521:Core/Src/bno055.c **** 
7522:Core/Src/bno055.c **** /*!
7523:Core/Src/bno055.c ****  *  @brief This API used to read the gyro unit
7524:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7525:Core/Src/bno055.c ****  *
7526:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
7527:Core/Src/bno055.c ****  *
7528:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7529:Core/Src/bno055.c ****  *  -------------   | -----------
7530:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7531:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7532:Core/Src/bno055.c ****  *
7533:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccO72alg.s 			page 302


7534:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7535:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7536:Core/Src/bno055.c ****  *
7537:Core/Src/bno055.c ****  *
7538:Core/Src/bno055.c ****  */
7539:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_unit(u8 *gyro_unit_u8)
7540:Core/Src/bno055.c **** {
 9205              		.loc 1 7540 1 is_stmt 1 view -0
 9206              		.cfi_startproc
 9207              		@ args = 0, pretend = 0, frame = 8
 9208              		@ frame_needed = 0, uses_anonymous_args = 0
 9209              		.loc 1 7540 1 is_stmt 0 view .LVU2425
 9210 0000 30B5     		push	{r4, r5, lr}
 9211              	.LCFI321:
 9212              		.cfi_def_cfa_offset 12
 9213              		.cfi_offset 4, -12
 9214              		.cfi_offset 5, -8
 9215              		.cfi_offset 14, -4
 9216 0002 83B0     		sub	sp, sp, #12
 9217              	.LCFI322:
 9218              		.cfi_def_cfa_offset 24
7541:Core/Src/bno055.c ****     /* Variable used to return value of
7542:Core/Src/bno055.c ****      * communication routine*/
7543:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9219              		.loc 1 7543 5 is_stmt 1 view .LVU2426
 9220              	.LVL970:
7544:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9221              		.loc 1 7544 5 view .LVU2427
 9222              		.loc 1 7544 8 is_stmt 0 view .LVU2428
 9223 0004 0023     		movs	r3, #0
 9224 0006 8DF80730 		strb	r3, [sp, #7]
7545:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9225              		.loc 1 7545 5 is_stmt 1 view .LVU2429
 9226              	.LVL971:
7546:Core/Src/bno055.c **** 
7547:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7548:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9227              		.loc 1 7548 5 view .LVU2430
 9228              		.loc 1 7548 18 is_stmt 0 view .LVU2431
 9229 000a 134B     		ldr	r3, .L713
 9230 000c 1B68     		ldr	r3, [r3]
 9231              		.loc 1 7548 8 view .LVU2432
 9232 000e E3B1     		cbz	r3, .L709
 9233 0010 0446     		mov	r4, r0
7549:Core/Src/bno055.c ****     {
7550:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7551:Core/Src/bno055.c ****     }
7552:Core/Src/bno055.c ****     else
7553:Core/Src/bno055.c ****     {
7554:Core/Src/bno055.c ****         /*condition check for page, gyro unit is
7555:Core/Src/bno055.c ****          * available in the page zero*/
7556:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9234              		.loc 1 7556 9 is_stmt 1 view .LVU2433
 9235              		.loc 1 7556 21 is_stmt 0 view .LVU2434
 9236 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9237              		.loc 1 7556 12 view .LVU2435
 9238 0014 9BB9     		cbnz	r3, .L712
ARM GAS  /tmp/ccO72alg.s 			page 303


 9239              	.LVL972:
 9240              	.L707:
7557:Core/Src/bno055.c ****         {
7558:Core/Src/bno055.c ****             /* Write the page zero*/
7559:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7560:Core/Src/bno055.c ****         }
7561:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9241              		.loc 1 7561 53 discriminator 1 view .LVU2436
 9242 0016 104B     		ldr	r3, .L713
 9243 0018 1B68     		ldr	r3, [r3]
 9244 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9245              		.loc 1 7561 41 discriminator 1 view .LVU2437
 9246 001c C3B9     		cbnz	r3, .L710
 9247              	.L708:
7562:Core/Src/bno055.c ****         {
7563:Core/Src/bno055.c ****             /* Read the gyro unit */
7564:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9248              		.loc 1 7564 13 is_stmt 1 view .LVU2438
 9249              		.loc 1 7564 32 is_stmt 0 view .LVU2439
 9250 001e 0E4B     		ldr	r3, .L713
 9251 0020 1868     		ldr	r0, [r3]
 9252 0022 0569     		ldr	r5, [r0, #16]
 9253              		.loc 1 7564 24 view .LVU2440
 9254 0024 0123     		movs	r3, #1
 9255 0026 0DF10702 		add	r2, sp, #7
 9256 002a 3B21     		movs	r1, #59
 9257 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9258 002e A847     		blx	r5
 9259              	.LVL973:
7565:Core/Src/bno055.c ****                                                       BNO055_GYRO_UNIT_REG,
7566:Core/Src/bno055.c ****                                                       &data_u8r,
7567:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7568:Core/Src/bno055.c ****             *gyro_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_UNIT);
 9260              		.loc 1 7568 13 is_stmt 1 view .LVU2441
 9261              		.loc 1 7568 29 is_stmt 0 view .LVU2442
 9262 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9263 0034 C3F34003 		ubfx	r3, r3, #1, #1
 9264              		.loc 1 7568 27 view .LVU2443
 9265 0038 2370     		strb	r3, [r4]
 9266              	.LVL974:
 9267              	.L706:
7569:Core/Src/bno055.c ****         }
7570:Core/Src/bno055.c ****         else
7571:Core/Src/bno055.c ****         {
7572:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7573:Core/Src/bno055.c ****         }
7574:Core/Src/bno055.c ****     }
7575:Core/Src/bno055.c **** 
7576:Core/Src/bno055.c ****     return com_rslt;
7577:Core/Src/bno055.c **** }
 9268              		.loc 1 7577 1 view .LVU2444
 9269 003a 03B0     		add	sp, sp, #12
 9270              	.LCFI323:
 9271              		.cfi_remember_state
 9272              		.cfi_def_cfa_offset 12
 9273              		@ sp needed
 9274 003c 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 304


 9275              	.LVL975:
 9276              	.L712:
 9277              	.LCFI324:
 9278              		.cfi_restore_state
7559:Core/Src/bno055.c ****         }
 9279              		.loc 1 7559 13 is_stmt 1 view .LVU2445
7559:Core/Src/bno055.c ****         }
 9280              		.loc 1 7559 23 is_stmt 0 view .LVU2446
 9281 003e 0020     		movs	r0, #0
 9282              	.LVL976:
7559:Core/Src/bno055.c ****         }
 9283              		.loc 1 7559 23 view .LVU2447
 9284 0040 FFF7FEFF 		bl	bno055_write_page_id
 9285              	.LVL977:
7561:Core/Src/bno055.c ****         {
 9286              		.loc 1 7561 9 is_stmt 1 view .LVU2448
7561:Core/Src/bno055.c ****         {
 9287              		.loc 1 7561 12 is_stmt 0 view .LVU2449
 9288 0044 0028     		cmp	r0, #0
 9289 0046 EAD0     		beq	.L708
 9290 0048 E5E7     		b	.L707
 9291              	.LVL978:
 9292              	.L709:
7550:Core/Src/bno055.c ****     }
 9293              		.loc 1 7550 16 view .LVU2450
 9294 004a 6FF07E00 		mvn	r0, #126
 9295              	.LVL979:
7550:Core/Src/bno055.c ****     }
 9296              		.loc 1 7550 16 view .LVU2451
 9297 004e F4E7     		b	.L706
 9298              	.LVL980:
 9299              	.L710:
7572:Core/Src/bno055.c ****         }
 9300              		.loc 1 7572 22 view .LVU2452
 9301 0050 4FF0FF30 		mov	r0, #-1
 9302 0054 F1E7     		b	.L706
 9303              	.L714:
 9304 0056 00BF     		.align	2
 9305              	.L713:
 9306 0058 00000000 		.word	.LANCHOR0
 9307              		.cfi_endproc
 9308              	.LFE135:
 9310              		.section	.text.bno055_get_euler_unit,"ax",%progbits
 9311              		.align	1
 9312              		.global	bno055_get_euler_unit
 9313              		.syntax unified
 9314              		.thumb
 9315              		.thumb_func
 9317              	bno055_get_euler_unit:
 9318              	.LVL981:
 9319              	.LFB137:
7578:Core/Src/bno055.c **** 
7579:Core/Src/bno055.c **** /*!
7580:Core/Src/bno055.c ****  *  @brief This API used to write the gyro unit
7581:Core/Src/bno055.c ****  *  from register from 0x3B bit 1
7582:Core/Src/bno055.c ****  *
7583:Core/Src/bno055.c ****  *  @param gyro_unit_u8 : The value of accel unit
ARM GAS  /tmp/ccO72alg.s 			page 305


7584:Core/Src/bno055.c ****  *
7585:Core/Src/bno055.c ****  *  gyro_unit_u8  |  result
7586:Core/Src/bno055.c ****  *  -------------   | -----------
7587:Core/Src/bno055.c ****  *    0x00          | BNO055_GYRO_UNIT_DPS
7588:Core/Src/bno055.c ****  *    0x01          | BNO055_GYRO_UNIT_RPS
7589:Core/Src/bno055.c ****  *
7590:Core/Src/bno055.c ****  *  @return results of bus communication function
7591:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7592:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7593:Core/Src/bno055.c ****  *
7594:Core/Src/bno055.c ****  *
7595:Core/Src/bno055.c ****  */
7596:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_unit(u8 gyro_unit_u8)
7597:Core/Src/bno055.c **** {
7598:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7599:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7600:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7601:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7602:Core/Src/bno055.c **** 
7603:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7604:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7605:Core/Src/bno055.c ****     {
7606:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7607:Core/Src/bno055.c ****     }
7608:Core/Src/bno055.c ****     else
7609:Core/Src/bno055.c ****     {
7610:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7611:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7612:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7613:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7614:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7615:Core/Src/bno055.c ****         {
7616:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7617:Core/Src/bno055.c ****             {
7618:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7619:Core/Src/bno055.c ****             }
7620:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7621:Core/Src/bno055.c ****             {
7622:Core/Src/bno055.c ****                 /* Write the gyro unit */
7623:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7624:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
7625:Core/Src/bno055.c ****                                                           &data_u8r,
7626:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7627:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7628:Core/Src/bno055.c ****                 {
7629:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_UNIT, gyro_unit_u8);
7630:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7631:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
7632:Core/Src/bno055.c ****                                                                 &data_u8r,
7633:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7634:Core/Src/bno055.c ****                 }
7635:Core/Src/bno055.c ****             }
7636:Core/Src/bno055.c ****             else
7637:Core/Src/bno055.c ****             {
7638:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7639:Core/Src/bno055.c ****             }
7640:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 306


7641:Core/Src/bno055.c ****         else
7642:Core/Src/bno055.c ****         {
7643:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7644:Core/Src/bno055.c ****         }
7645:Core/Src/bno055.c ****     }
7646:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7647:Core/Src/bno055.c ****     {
7648:Core/Src/bno055.c ****         /* set the operation mode
7649:Core/Src/bno055.c ****          * of previous operation mode*/
7650:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7651:Core/Src/bno055.c ****     }
7652:Core/Src/bno055.c **** 
7653:Core/Src/bno055.c ****     return com_rslt;
7654:Core/Src/bno055.c **** }
7655:Core/Src/bno055.c **** 
7656:Core/Src/bno055.c **** /*!
7657:Core/Src/bno055.c ****  *  @brief This API used to read the Euler unit
7658:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7659:Core/Src/bno055.c ****  *
7660:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of accel unit
7661:Core/Src/bno055.c ****  *
7662:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7663:Core/Src/bno055.c ****  *   --------------   | -----------
7664:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7665:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7666:Core/Src/bno055.c ****  *
7667:Core/Src/bno055.c ****  *  @return results of bus communication function
7668:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7669:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7670:Core/Src/bno055.c ****  *
7671:Core/Src/bno055.c ****  *
7672:Core/Src/bno055.c ****  */
7673:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_euler_unit(u8 *euler_unit_u8)
7674:Core/Src/bno055.c **** {
 9320              		.loc 1 7674 1 is_stmt 1 view -0
 9321              		.cfi_startproc
 9322              		@ args = 0, pretend = 0, frame = 8
 9323              		@ frame_needed = 0, uses_anonymous_args = 0
 9324              		.loc 1 7674 1 is_stmt 0 view .LVU2454
 9325 0000 30B5     		push	{r4, r5, lr}
 9326              	.LCFI325:
 9327              		.cfi_def_cfa_offset 12
 9328              		.cfi_offset 4, -12
 9329              		.cfi_offset 5, -8
 9330              		.cfi_offset 14, -4
 9331 0002 83B0     		sub	sp, sp, #12
 9332              	.LCFI326:
 9333              		.cfi_def_cfa_offset 24
7675:Core/Src/bno055.c ****     /* Variable used to return value of
7676:Core/Src/bno055.c ****      * communication routine*/
7677:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9334              		.loc 1 7677 5 is_stmt 1 view .LVU2455
 9335              	.LVL982:
7678:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9336              		.loc 1 7678 5 view .LVU2456
 9337              		.loc 1 7678 8 is_stmt 0 view .LVU2457
 9338 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 307


 9339 0006 8DF80730 		strb	r3, [sp, #7]
7679:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9340              		.loc 1 7679 5 is_stmt 1 view .LVU2458
 9341              	.LVL983:
7680:Core/Src/bno055.c **** 
7681:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7682:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9342              		.loc 1 7682 5 view .LVU2459
 9343              		.loc 1 7682 18 is_stmt 0 view .LVU2460
 9344 000a 134B     		ldr	r3, .L723
 9345 000c 1B68     		ldr	r3, [r3]
 9346              		.loc 1 7682 8 view .LVU2461
 9347 000e E3B1     		cbz	r3, .L719
 9348 0010 0446     		mov	r4, r0
7683:Core/Src/bno055.c ****     {
7684:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7685:Core/Src/bno055.c ****     }
7686:Core/Src/bno055.c ****     else
7687:Core/Src/bno055.c ****     {
7688:Core/Src/bno055.c ****         /*condition check for page, Euler unit is
7689:Core/Src/bno055.c ****          * available in the page zero*/
7690:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9349              		.loc 1 7690 9 is_stmt 1 view .LVU2462
 9350              		.loc 1 7690 21 is_stmt 0 view .LVU2463
 9351 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9352              		.loc 1 7690 12 view .LVU2464
 9353 0014 9BB9     		cbnz	r3, .L722
 9354              	.LVL984:
 9355              	.L717:
7691:Core/Src/bno055.c ****         {
7692:Core/Src/bno055.c ****             /* Write the page zero*/
7693:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7694:Core/Src/bno055.c ****         }
7695:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9356              		.loc 1 7695 53 discriminator 1 view .LVU2465
 9357 0016 104B     		ldr	r3, .L723
 9358 0018 1B68     		ldr	r3, [r3]
 9359 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9360              		.loc 1 7695 41 discriminator 1 view .LVU2466
 9361 001c C3B9     		cbnz	r3, .L720
 9362              	.L718:
7696:Core/Src/bno055.c ****         {
7697:Core/Src/bno055.c ****             /* Read the Euler unit */
7698:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9363              		.loc 1 7698 13 is_stmt 1 view .LVU2467
 9364              		.loc 1 7698 32 is_stmt 0 view .LVU2468
 9365 001e 0E4B     		ldr	r3, .L723
 9366 0020 1868     		ldr	r0, [r3]
 9367 0022 0569     		ldr	r5, [r0, #16]
 9368              		.loc 1 7698 24 view .LVU2469
 9369 0024 0123     		movs	r3, #1
 9370 0026 0DF10702 		add	r2, sp, #7
 9371 002a 3B21     		movs	r1, #59
 9372 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9373 002e A847     		blx	r5
 9374              	.LVL985:
7699:Core/Src/bno055.c ****                                                       BNO055_EULER_UNIT_REG,
ARM GAS  /tmp/ccO72alg.s 			page 308


7700:Core/Src/bno055.c ****                                                       &data_u8r,
7701:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7702:Core/Src/bno055.c ****             *euler_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_EULER_UNIT);
 9375              		.loc 1 7702 13 is_stmt 1 view .LVU2470
 9376              		.loc 1 7702 30 is_stmt 0 view .LVU2471
 9377 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9378 0034 C3F38003 		ubfx	r3, r3, #2, #1
 9379              		.loc 1 7702 28 view .LVU2472
 9380 0038 2370     		strb	r3, [r4]
 9381              	.LVL986:
 9382              	.L716:
7703:Core/Src/bno055.c ****         }
7704:Core/Src/bno055.c ****         else
7705:Core/Src/bno055.c ****         {
7706:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7707:Core/Src/bno055.c ****         }
7708:Core/Src/bno055.c ****     }
7709:Core/Src/bno055.c **** 
7710:Core/Src/bno055.c ****     return com_rslt;
7711:Core/Src/bno055.c **** }
 9383              		.loc 1 7711 1 view .LVU2473
 9384 003a 03B0     		add	sp, sp, #12
 9385              	.LCFI327:
 9386              		.cfi_remember_state
 9387              		.cfi_def_cfa_offset 12
 9388              		@ sp needed
 9389 003c 30BD     		pop	{r4, r5, pc}
 9390              	.LVL987:
 9391              	.L722:
 9392              	.LCFI328:
 9393              		.cfi_restore_state
7693:Core/Src/bno055.c ****         }
 9394              		.loc 1 7693 13 is_stmt 1 view .LVU2474
7693:Core/Src/bno055.c ****         }
 9395              		.loc 1 7693 23 is_stmt 0 view .LVU2475
 9396 003e 0020     		movs	r0, #0
 9397              	.LVL988:
7693:Core/Src/bno055.c ****         }
 9398              		.loc 1 7693 23 view .LVU2476
 9399 0040 FFF7FEFF 		bl	bno055_write_page_id
 9400              	.LVL989:
7695:Core/Src/bno055.c ****         {
 9401              		.loc 1 7695 9 is_stmt 1 view .LVU2477
7695:Core/Src/bno055.c ****         {
 9402              		.loc 1 7695 12 is_stmt 0 view .LVU2478
 9403 0044 0028     		cmp	r0, #0
 9404 0046 EAD0     		beq	.L718
 9405 0048 E5E7     		b	.L717
 9406              	.LVL990:
 9407              	.L719:
7684:Core/Src/bno055.c ****     }
 9408              		.loc 1 7684 16 view .LVU2479
 9409 004a 6FF07E00 		mvn	r0, #126
 9410              	.LVL991:
7684:Core/Src/bno055.c ****     }
 9411              		.loc 1 7684 16 view .LVU2480
 9412 004e F4E7     		b	.L716
ARM GAS  /tmp/ccO72alg.s 			page 309


 9413              	.LVL992:
 9414              	.L720:
7706:Core/Src/bno055.c ****         }
 9415              		.loc 1 7706 22 view .LVU2481
 9416 0050 4FF0FF30 		mov	r0, #-1
 9417 0054 F1E7     		b	.L716
 9418              	.L724:
 9419 0056 00BF     		.align	2
 9420              	.L723:
 9421 0058 00000000 		.word	.LANCHOR0
 9422              		.cfi_endproc
 9423              	.LFE137:
 9425              		.section	.text.bno055_get_tilt_unit,"ax",%progbits
 9426              		.align	1
 9427              		.global	bno055_get_tilt_unit
 9428              		.syntax unified
 9429              		.thumb
 9430              		.thumb_func
 9432              	bno055_get_tilt_unit:
 9433              	.LVL993:
 9434              	.LFB139:
7712:Core/Src/bno055.c **** 
7713:Core/Src/bno055.c **** /*!
7714:Core/Src/bno055.c ****  *  @brief This API used to write the Euler unit
7715:Core/Src/bno055.c ****  *  from register from 0x3B bit 2
7716:Core/Src/bno055.c ****  *
7717:Core/Src/bno055.c ****  *  @param euler_unit_u8 : The value of Euler unit
7718:Core/Src/bno055.c ****  *
7719:Core/Src/bno055.c ****  *    euler_unit_u8 | result
7720:Core/Src/bno055.c ****  *   --------------   | -----------
7721:Core/Src/bno055.c ****  *      0x00          | BNO055_EULER_UNIT_DEG
7722:Core/Src/bno055.c ****  *      0x01          | BNO055_EULER_UNIT_RAD
7723:Core/Src/bno055.c ****  *
7724:Core/Src/bno055.c ****  *  @return results of bus communication function
7725:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7726:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7727:Core/Src/bno055.c ****  *
7728:Core/Src/bno055.c ****  *
7729:Core/Src/bno055.c ****  */
7730:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_euler_unit(u8 euler_unit_u8)
7731:Core/Src/bno055.c **** {
7732:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7733:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7734:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7735:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7736:Core/Src/bno055.c **** 
7737:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7738:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7739:Core/Src/bno055.c ****     {
7740:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7741:Core/Src/bno055.c ****     }
7742:Core/Src/bno055.c ****     else
7743:Core/Src/bno055.c ****     {
7744:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7745:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7746:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7747:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
ARM GAS  /tmp/ccO72alg.s 			page 310


7748:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7749:Core/Src/bno055.c ****         {
7750:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7751:Core/Src/bno055.c ****             {
7752:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7753:Core/Src/bno055.c ****             }
7754:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7755:Core/Src/bno055.c ****             {
7756:Core/Src/bno055.c ****                 /* Write the Euler unit*/
7757:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7758:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
7759:Core/Src/bno055.c ****                                                           &data_u8r,
7760:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7761:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7762:Core/Src/bno055.c ****                 {
7763:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_EULER_UNIT, euler_unit_u8);
7764:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7765:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
7766:Core/Src/bno055.c ****                                                                 &data_u8r,
7767:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7768:Core/Src/bno055.c ****                 }
7769:Core/Src/bno055.c ****             }
7770:Core/Src/bno055.c ****             else
7771:Core/Src/bno055.c ****             {
7772:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7773:Core/Src/bno055.c ****             }
7774:Core/Src/bno055.c ****         }
7775:Core/Src/bno055.c ****         else
7776:Core/Src/bno055.c ****         {
7777:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7778:Core/Src/bno055.c ****         }
7779:Core/Src/bno055.c ****     }
7780:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7781:Core/Src/bno055.c ****     {
7782:Core/Src/bno055.c ****         /* set the operation mode
7783:Core/Src/bno055.c ****          * of previous operation mode*/
7784:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7785:Core/Src/bno055.c ****     }
7786:Core/Src/bno055.c **** 
7787:Core/Src/bno055.c ****     return com_rslt;
7788:Core/Src/bno055.c **** }
7789:Core/Src/bno055.c **** 
7790:Core/Src/bno055.c **** /*!
7791:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7792:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7793:Core/Src/bno055.c ****  *
7794:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7795:Core/Src/bno055.c ****  *
7796:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7797:Core/Src/bno055.c ****  *   ---------------  | ---------
7798:Core/Src/bno055.c ****  *     0x00           | degrees
7799:Core/Src/bno055.c ****  *     0x01           | radians
7800:Core/Src/bno055.c ****  *
7801:Core/Src/bno055.c ****  *  @return results of bus communication function
7802:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7803:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7804:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 311


7805:Core/Src/bno055.c ****  *
7806:Core/Src/bno055.c ****  */
7807:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_tilt_unit(u8 *tilt_unit_u8)
7808:Core/Src/bno055.c **** {
 9435              		.loc 1 7808 1 is_stmt 1 view -0
 9436              		.cfi_startproc
 9437              		@ args = 0, pretend = 0, frame = 8
 9438              		@ frame_needed = 0, uses_anonymous_args = 0
 9439              		.loc 1 7808 1 is_stmt 0 view .LVU2483
 9440 0000 30B5     		push	{r4, r5, lr}
 9441              	.LCFI329:
 9442              		.cfi_def_cfa_offset 12
 9443              		.cfi_offset 4, -12
 9444              		.cfi_offset 5, -8
 9445              		.cfi_offset 14, -4
 9446 0002 83B0     		sub	sp, sp, #12
 9447              	.LCFI330:
 9448              		.cfi_def_cfa_offset 24
7809:Core/Src/bno055.c ****     /* Variable used to return value of
7810:Core/Src/bno055.c ****      * communication routine*/
7811:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9449              		.loc 1 7811 5 is_stmt 1 view .LVU2484
 9450              	.LVL994:
7812:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9451              		.loc 1 7812 5 view .LVU2485
 9452              		.loc 1 7812 8 is_stmt 0 view .LVU2486
 9453 0004 0023     		movs	r3, #0
 9454 0006 8DF80730 		strb	r3, [sp, #7]
7813:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9455              		.loc 1 7813 5 is_stmt 1 view .LVU2487
 9456              	.LVL995:
7814:Core/Src/bno055.c **** 
7815:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7816:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9457              		.loc 1 7816 5 view .LVU2488
 9458              		.loc 1 7816 18 is_stmt 0 view .LVU2489
 9459 000a 134B     		ldr	r3, .L733
 9460 000c 1B68     		ldr	r3, [r3]
 9461              		.loc 1 7816 8 view .LVU2490
 9462 000e E3B1     		cbz	r3, .L729
 9463 0010 0446     		mov	r4, r0
7817:Core/Src/bno055.c ****     {
7818:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7819:Core/Src/bno055.c ****     }
7820:Core/Src/bno055.c ****     else
7821:Core/Src/bno055.c ****     {
7822:Core/Src/bno055.c ****         /*condition check for page, chip id is
7823:Core/Src/bno055.c ****          * available in the page zero*/
7824:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9464              		.loc 1 7824 9 is_stmt 1 view .LVU2491
 9465              		.loc 1 7824 21 is_stmt 0 view .LVU2492
 9466 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9467              		.loc 1 7824 12 view .LVU2493
 9468 0014 9BB9     		cbnz	r3, .L732
 9469              	.LVL996:
 9470              	.L727:
7825:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 312


7826:Core/Src/bno055.c ****             /* Write the page zero*/
7827:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7828:Core/Src/bno055.c ****         }
7829:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9471              		.loc 1 7829 53 discriminator 1 view .LVU2494
 9472 0016 104B     		ldr	r3, .L733
 9473 0018 1B68     		ldr	r3, [r3]
 9474 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9475              		.loc 1 7829 41 discriminator 1 view .LVU2495
 9476 001c C3B9     		cbnz	r3, .L730
 9477              	.L728:
7830:Core/Src/bno055.c ****         {
7831:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9478              		.loc 1 7831 13 is_stmt 1 view .LVU2496
 9479              		.loc 1 7831 32 is_stmt 0 view .LVU2497
 9480 001e 0E4B     		ldr	r3, .L733
 9481 0020 1868     		ldr	r0, [r3]
 9482 0022 0569     		ldr	r5, [r0, #16]
 9483              		.loc 1 7831 24 view .LVU2498
 9484 0024 0123     		movs	r3, #1
 9485 0026 0DF10702 		add	r2, sp, #7
 9486 002a 3B21     		movs	r1, #59
 9487 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9488 002e A847     		blx	r5
 9489              	.LVL997:
7832:Core/Src/bno055.c ****                                                       BNO055_TILT_UNIT_REG,
7833:Core/Src/bno055.c ****                                                       &data_u8r,
7834:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
7835:Core/Src/bno055.c ****             *tilt_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TILT_UNIT);
 9490              		.loc 1 7835 13 is_stmt 1 view .LVU2499
 9491              		.loc 1 7835 29 is_stmt 0 view .LVU2500
 9492 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9493 0034 C3F3C003 		ubfx	r3, r3, #3, #1
 9494              		.loc 1 7835 27 view .LVU2501
 9495 0038 2370     		strb	r3, [r4]
 9496              	.LVL998:
 9497              	.L726:
7836:Core/Src/bno055.c ****         }
7837:Core/Src/bno055.c ****         else
7838:Core/Src/bno055.c ****         {
7839:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7840:Core/Src/bno055.c ****         }
7841:Core/Src/bno055.c ****     }
7842:Core/Src/bno055.c **** 
7843:Core/Src/bno055.c ****     return com_rslt;
7844:Core/Src/bno055.c **** }
 9498              		.loc 1 7844 1 view .LVU2502
 9499 003a 03B0     		add	sp, sp, #12
 9500              	.LCFI331:
 9501              		.cfi_remember_state
 9502              		.cfi_def_cfa_offset 12
 9503              		@ sp needed
 9504 003c 30BD     		pop	{r4, r5, pc}
 9505              	.LVL999:
 9506              	.L732:
 9507              	.LCFI332:
 9508              		.cfi_restore_state
ARM GAS  /tmp/ccO72alg.s 			page 313


7827:Core/Src/bno055.c ****         }
 9509              		.loc 1 7827 13 is_stmt 1 view .LVU2503
7827:Core/Src/bno055.c ****         }
 9510              		.loc 1 7827 23 is_stmt 0 view .LVU2504
 9511 003e 0020     		movs	r0, #0
 9512              	.LVL1000:
7827:Core/Src/bno055.c ****         }
 9513              		.loc 1 7827 23 view .LVU2505
 9514 0040 FFF7FEFF 		bl	bno055_write_page_id
 9515              	.LVL1001:
7829:Core/Src/bno055.c ****         {
 9516              		.loc 1 7829 9 is_stmt 1 view .LVU2506
7829:Core/Src/bno055.c ****         {
 9517              		.loc 1 7829 12 is_stmt 0 view .LVU2507
 9518 0044 0028     		cmp	r0, #0
 9519 0046 EAD0     		beq	.L728
 9520 0048 E5E7     		b	.L727
 9521              	.LVL1002:
 9522              	.L729:
7818:Core/Src/bno055.c ****     }
 9523              		.loc 1 7818 16 view .LVU2508
 9524 004a 6FF07E00 		mvn	r0, #126
 9525              	.LVL1003:
7818:Core/Src/bno055.c ****     }
 9526              		.loc 1 7818 16 view .LVU2509
 9527 004e F4E7     		b	.L726
 9528              	.LVL1004:
 9529              	.L730:
7839:Core/Src/bno055.c ****         }
 9530              		.loc 1 7839 22 view .LVU2510
 9531 0050 4FF0FF30 		mov	r0, #-1
 9532 0054 F1E7     		b	.L726
 9533              	.L734:
 9534 0056 00BF     		.align	2
 9535              	.L733:
 9536 0058 00000000 		.word	.LANCHOR0
 9537              		.cfi_endproc
 9538              	.LFE139:
 9540              		.section	.text.bno055_get_temp_unit,"ax",%progbits
 9541              		.align	1
 9542              		.global	bno055_get_temp_unit
 9543              		.syntax unified
 9544              		.thumb
 9545              		.thumb_func
 9547              	bno055_get_temp_unit:
 9548              	.LVL1005:
 9549              	.LFB141:
7845:Core/Src/bno055.c **** 
7846:Core/Src/bno055.c **** /*!
7847:Core/Src/bno055.c ****  *  @brief This API used to write the tilt unit
7848:Core/Src/bno055.c ****  *  from register from 0x3B bit 3
7849:Core/Src/bno055.c ****  *
7850:Core/Src/bno055.c ****  *  @param tilt_unit_u8 : The value of tilt unit
7851:Core/Src/bno055.c ****  *
7852:Core/Src/bno055.c ****  *    tilt_unit_u8  | result
7853:Core/Src/bno055.c ****  *   ---------------  | ---------
7854:Core/Src/bno055.c ****  *     0x00           | degrees
ARM GAS  /tmp/ccO72alg.s 			page 314


7855:Core/Src/bno055.c ****  *     0x01           | radians
7856:Core/Src/bno055.c ****  *
7857:Core/Src/bno055.c ****  *  @return results of bus communication function
7858:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7859:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7860:Core/Src/bno055.c ****  *
7861:Core/Src/bno055.c ****  *
7862:Core/Src/bno055.c ****  *
7863:Core/Src/bno055.c ****  *  \return Communication results
7864:Core/Src/bno055.c ****  *
7865:Core/Src/bno055.c ****  *
7866:Core/Src/bno055.c ****  */
7867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_tilt_unit(u8 tilt_unit_u8)
7868:Core/Src/bno055.c **** {
7869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
7870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
7871:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
7872:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
7873:Core/Src/bno055.c **** 
7874:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7875:Core/Src/bno055.c ****     if (p_bno055 == NULL)
7876:Core/Src/bno055.c ****     {
7877:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7878:Core/Src/bno055.c ****     }
7879:Core/Src/bno055.c ****     else
7880:Core/Src/bno055.c ****     {
7881:Core/Src/bno055.c ****         /* The write operation effective only if the operation
7882:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
7883:Core/Src/bno055.c ****          * current operation mode and set the config mode */
7884:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
7885:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
7886:Core/Src/bno055.c ****         {
7887:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7888:Core/Src/bno055.c ****             {
7889:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
7890:Core/Src/bno055.c ****             }
7891:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
7892:Core/Src/bno055.c ****             {
7893:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
7894:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
7895:Core/Src/bno055.c ****                                                           &data_u8r,
7896:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
7897:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
7898:Core/Src/bno055.c ****                 {
7899:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TILT_UNIT, tilt_unit_u8);
7900:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
7901:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
7902:Core/Src/bno055.c ****                                                                 &data_u8r,
7903:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
7904:Core/Src/bno055.c ****                 }
7905:Core/Src/bno055.c ****             }
7906:Core/Src/bno055.c ****             else
7907:Core/Src/bno055.c ****             {
7908:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
7909:Core/Src/bno055.c ****             }
7910:Core/Src/bno055.c ****         }
7911:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccO72alg.s 			page 315


7912:Core/Src/bno055.c ****         {
7913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7914:Core/Src/bno055.c ****         }
7915:Core/Src/bno055.c ****     }
7916:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
7917:Core/Src/bno055.c ****     {
7918:Core/Src/bno055.c ****         /* set the operation mode
7919:Core/Src/bno055.c ****          * of previous operation mode*/
7920:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
7921:Core/Src/bno055.c ****     }
7922:Core/Src/bno055.c **** 
7923:Core/Src/bno055.c ****     return com_rslt;
7924:Core/Src/bno055.c **** }
7925:Core/Src/bno055.c **** 
7926:Core/Src/bno055.c **** /*!
7927:Core/Src/bno055.c ****  *  @brief This API used to read the temperature unit
7928:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7929:Core/Src/bno055.c ****  *
7930:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7931:Core/Src/bno055.c ****  *
7932:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7933:Core/Src/bno055.c ****  *   -----------      | --------------
7934:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7935:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7936:Core/Src/bno055.c ****  *
7937:Core/Src/bno055.c ****  *  @return results of bus communication function
7938:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7939:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7940:Core/Src/bno055.c ****  *
7941:Core/Src/bno055.c ****  */
7942:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_unit(u8 *temp_unit_u8)
7943:Core/Src/bno055.c **** {
 9550              		.loc 1 7943 1 is_stmt 1 view -0
 9551              		.cfi_startproc
 9552              		@ args = 0, pretend = 0, frame = 8
 9553              		@ frame_needed = 0, uses_anonymous_args = 0
 9554              		.loc 1 7943 1 is_stmt 0 view .LVU2512
 9555 0000 30B5     		push	{r4, r5, lr}
 9556              	.LCFI333:
 9557              		.cfi_def_cfa_offset 12
 9558              		.cfi_offset 4, -12
 9559              		.cfi_offset 5, -8
 9560              		.cfi_offset 14, -4
 9561 0002 83B0     		sub	sp, sp, #12
 9562              	.LCFI334:
 9563              		.cfi_def_cfa_offset 24
7944:Core/Src/bno055.c ****     /* Variable used to return value of
7945:Core/Src/bno055.c ****      * communication routine*/
7946:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9564              		.loc 1 7946 5 is_stmt 1 view .LVU2513
 9565              	.LVL1006:
7947:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9566              		.loc 1 7947 5 view .LVU2514
 9567              		.loc 1 7947 8 is_stmt 0 view .LVU2515
 9568 0004 0023     		movs	r3, #0
 9569 0006 8DF80730 		strb	r3, [sp, #7]
7948:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 316


 9570              		.loc 1 7948 5 is_stmt 1 view .LVU2516
 9571              	.LVL1007:
7949:Core/Src/bno055.c **** 
7950:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
7951:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9572              		.loc 1 7951 5 view .LVU2517
 9573              		.loc 1 7951 18 is_stmt 0 view .LVU2518
 9574 000a 134B     		ldr	r3, .L743
 9575 000c 1B68     		ldr	r3, [r3]
 9576              		.loc 1 7951 8 view .LVU2519
 9577 000e E3B1     		cbz	r3, .L739
 9578 0010 0446     		mov	r4, r0
7952:Core/Src/bno055.c ****     {
7953:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
7954:Core/Src/bno055.c ****     }
7955:Core/Src/bno055.c ****     else
7956:Core/Src/bno055.c ****     {
7957:Core/Src/bno055.c ****         /*condition check for page, temperature unit is
7958:Core/Src/bno055.c ****          * available in the page zero*/
7959:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9579              		.loc 1 7959 9 is_stmt 1 view .LVU2520
 9580              		.loc 1 7959 21 is_stmt 0 view .LVU2521
 9581 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9582              		.loc 1 7959 12 view .LVU2522
 9583 0014 9BB9     		cbnz	r3, .L742
 9584              	.LVL1008:
 9585              	.L737:
7960:Core/Src/bno055.c ****         {
7961:Core/Src/bno055.c ****             /* Write the page zero*/
7962:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
7963:Core/Src/bno055.c ****         }
7964:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9586              		.loc 1 7964 53 discriminator 1 view .LVU2523
 9587 0016 104B     		ldr	r3, .L743
 9588 0018 1B68     		ldr	r3, [r3]
 9589 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9590              		.loc 1 7964 41 discriminator 1 view .LVU2524
 9591 001c C3B9     		cbnz	r3, .L740
 9592              	.L738:
7965:Core/Src/bno055.c ****         {
7966:Core/Src/bno055.c ****             /* Read the temperature unit */
7967:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9593              		.loc 1 7967 13 is_stmt 1 view .LVU2525
 9594              		.loc 1 7967 32 is_stmt 0 view .LVU2526
 9595 001e 0E4B     		ldr	r3, .L743
 9596 0020 1868     		ldr	r0, [r3]
 9597 0022 0569     		ldr	r5, [r0, #16]
 9598              		.loc 1 7967 24 view .LVU2527
 9599 0024 0123     		movs	r3, #1
 9600 0026 0DF10702 		add	r2, sp, #7
 9601 002a 3B21     		movs	r1, #59
 9602 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9603 002e A847     		blx	r5
 9604              	.LVL1009:
7968:Core/Src/bno055.c ****                                                       BNO055_TEMP_UNIT_REG,
7969:Core/Src/bno055.c ****                                                       &data_u8r,
7970:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 317


7971:Core/Src/bno055.c ****             *temp_unit_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_UNIT);
 9605              		.loc 1 7971 13 is_stmt 1 view .LVU2528
 9606              		.loc 1 7971 29 is_stmt 0 view .LVU2529
 9607 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9608 0034 C3F30013 		ubfx	r3, r3, #4, #1
 9609              		.loc 1 7971 27 view .LVU2530
 9610 0038 2370     		strb	r3, [r4]
 9611              	.LVL1010:
 9612              	.L736:
7972:Core/Src/bno055.c ****         }
7973:Core/Src/bno055.c ****         else
7974:Core/Src/bno055.c ****         {
7975:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
7976:Core/Src/bno055.c ****         }
7977:Core/Src/bno055.c ****     }
7978:Core/Src/bno055.c **** 
7979:Core/Src/bno055.c ****     return com_rslt;
7980:Core/Src/bno055.c **** }
 9613              		.loc 1 7980 1 view .LVU2531
 9614 003a 03B0     		add	sp, sp, #12
 9615              	.LCFI335:
 9616              		.cfi_remember_state
 9617              		.cfi_def_cfa_offset 12
 9618              		@ sp needed
 9619 003c 30BD     		pop	{r4, r5, pc}
 9620              	.LVL1011:
 9621              	.L742:
 9622              	.LCFI336:
 9623              		.cfi_restore_state
7962:Core/Src/bno055.c ****         }
 9624              		.loc 1 7962 13 is_stmt 1 view .LVU2532
7962:Core/Src/bno055.c ****         }
 9625              		.loc 1 7962 23 is_stmt 0 view .LVU2533
 9626 003e 0020     		movs	r0, #0
 9627              	.LVL1012:
7962:Core/Src/bno055.c ****         }
 9628              		.loc 1 7962 23 view .LVU2534
 9629 0040 FFF7FEFF 		bl	bno055_write_page_id
 9630              	.LVL1013:
7964:Core/Src/bno055.c ****         {
 9631              		.loc 1 7964 9 is_stmt 1 view .LVU2535
7964:Core/Src/bno055.c ****         {
 9632              		.loc 1 7964 12 is_stmt 0 view .LVU2536
 9633 0044 0028     		cmp	r0, #0
 9634 0046 EAD0     		beq	.L738
 9635 0048 E5E7     		b	.L737
 9636              	.LVL1014:
 9637              	.L739:
7953:Core/Src/bno055.c ****     }
 9638              		.loc 1 7953 16 view .LVU2537
 9639 004a 6FF07E00 		mvn	r0, #126
 9640              	.LVL1015:
7953:Core/Src/bno055.c ****     }
 9641              		.loc 1 7953 16 view .LVU2538
 9642 004e F4E7     		b	.L736
 9643              	.LVL1016:
 9644              	.L740:
ARM GAS  /tmp/ccO72alg.s 			page 318


7975:Core/Src/bno055.c ****         }
 9645              		.loc 1 7975 22 view .LVU2539
 9646 0050 4FF0FF30 		mov	r0, #-1
 9647 0054 F1E7     		b	.L736
 9648              	.L744:
 9649 0056 00BF     		.align	2
 9650              	.L743:
 9651 0058 00000000 		.word	.LANCHOR0
 9652              		.cfi_endproc
 9653              	.LFE141:
 9655              		.section	.text.bno055_get_data_output_format,"ax",%progbits
 9656              		.align	1
 9657              		.global	bno055_get_data_output_format
 9658              		.syntax unified
 9659              		.thumb
 9660              		.thumb_func
 9662              	bno055_get_data_output_format:
 9663              	.LVL1017:
 9664              	.LFB143:
7981:Core/Src/bno055.c **** 
7982:Core/Src/bno055.c **** /*!
7983:Core/Src/bno055.c ****  *  @brief This API used to write the temperature unit
7984:Core/Src/bno055.c ****  *  from register from 0x3B bit 4
7985:Core/Src/bno055.c ****  *
7986:Core/Src/bno055.c ****  *  @param temp_unit_u8 : The value of temperature unit
7987:Core/Src/bno055.c ****  *
7988:Core/Src/bno055.c ****  *    temp_unit_u8  |  result
7989:Core/Src/bno055.c ****  *   -----------      | --------------
7990:Core/Src/bno055.c ****  *      0x00          | BNO055_TEMP_UNIT_CELSIUS
7991:Core/Src/bno055.c ****  *      0x01          | BNO055_TEMP_UNIT_FAHRENHEIT
7992:Core/Src/bno055.c ****  *
7993:Core/Src/bno055.c ****  *  @return results of bus communication function
7994:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
7995:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
7996:Core/Src/bno055.c ****  *
7997:Core/Src/bno055.c ****  *
7998:Core/Src/bno055.c ****  */
7999:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_unit(u8 temp_unit_u8)
8000:Core/Src/bno055.c **** {
8001:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8002:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8003:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8004:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8005:Core/Src/bno055.c **** 
8006:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8007:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8008:Core/Src/bno055.c ****     {
8009:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8010:Core/Src/bno055.c ****     }
8011:Core/Src/bno055.c ****     else
8012:Core/Src/bno055.c ****     {
8013:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8014:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8015:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8016:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8017:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8018:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 319


8019:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8020:Core/Src/bno055.c ****             {
8021:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8022:Core/Src/bno055.c ****             }
8023:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8024:Core/Src/bno055.c ****             {
8025:Core/Src/bno055.c ****                 /* Write the temperature unit */
8026:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8027:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
8028:Core/Src/bno055.c ****                                                           &data_u8r,
8029:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8030:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8031:Core/Src/bno055.c ****                 {
8032:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_UNIT, temp_unit_u8);
8033:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8034:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
8035:Core/Src/bno055.c ****                                                                 &data_u8r,
8036:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8037:Core/Src/bno055.c ****                 }
8038:Core/Src/bno055.c ****             }
8039:Core/Src/bno055.c ****             else
8040:Core/Src/bno055.c ****             {
8041:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8042:Core/Src/bno055.c ****             }
8043:Core/Src/bno055.c ****         }
8044:Core/Src/bno055.c ****         else
8045:Core/Src/bno055.c ****         {
8046:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8047:Core/Src/bno055.c ****         }
8048:Core/Src/bno055.c ****     }
8049:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8050:Core/Src/bno055.c ****     {
8051:Core/Src/bno055.c ****         /* set the operation mode
8052:Core/Src/bno055.c ****          * of previous operation mode*/
8053:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8054:Core/Src/bno055.c ****     }
8055:Core/Src/bno055.c **** 
8056:Core/Src/bno055.c ****     return com_rslt;
8057:Core/Src/bno055.c **** }
8058:Core/Src/bno055.c **** 
8059:Core/Src/bno055.c **** /*!
8060:Core/Src/bno055.c ****  *  @brief This API used to read the current selected orientation mode
8061:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8062:Core/Src/bno055.c ****  *
8063:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8064:Core/Src/bno055.c ****  *
8065:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8066:Core/Src/bno055.c ****  *   --------------------      | --------
8067:Core/Src/bno055.c ****  *    0x00                     | Windows
8068:Core/Src/bno055.c ****  *    0x01                     | Android
8069:Core/Src/bno055.c ****  *
8070:Core/Src/bno055.c ****  *  @return results of bus communication function
8071:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8072:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8073:Core/Src/bno055.c ****  *
8074:Core/Src/bno055.c ****  */
8075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_data_output_format(u8 *data_output_format_u8)
ARM GAS  /tmp/ccO72alg.s 			page 320


8076:Core/Src/bno055.c **** {
 9665              		.loc 1 8076 1 is_stmt 1 view -0
 9666              		.cfi_startproc
 9667              		@ args = 0, pretend = 0, frame = 8
 9668              		@ frame_needed = 0, uses_anonymous_args = 0
 9669              		.loc 1 8076 1 is_stmt 0 view .LVU2541
 9670 0000 30B5     		push	{r4, r5, lr}
 9671              	.LCFI337:
 9672              		.cfi_def_cfa_offset 12
 9673              		.cfi_offset 4, -12
 9674              		.cfi_offset 5, -8
 9675              		.cfi_offset 14, -4
 9676 0002 83B0     		sub	sp, sp, #12
 9677              	.LCFI338:
 9678              		.cfi_def_cfa_offset 24
8077:Core/Src/bno055.c ****     /* Variable used to return value of
8078:Core/Src/bno055.c ****      * communication routine*/
8079:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9679              		.loc 1 8079 5 is_stmt 1 view .LVU2542
 9680              	.LVL1018:
8080:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9681              		.loc 1 8080 5 view .LVU2543
 9682              		.loc 1 8080 8 is_stmt 0 view .LVU2544
 9683 0004 0023     		movs	r3, #0
 9684 0006 8DF80730 		strb	r3, [sp, #7]
8081:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9685              		.loc 1 8081 5 is_stmt 1 view .LVU2545
 9686              	.LVL1019:
8082:Core/Src/bno055.c **** 
8083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9687              		.loc 1 8084 5 view .LVU2546
 9688              		.loc 1 8084 18 is_stmt 0 view .LVU2547
 9689 000a 124B     		ldr	r3, .L753
 9690 000c 1B68     		ldr	r3, [r3]
 9691              		.loc 1 8084 8 view .LVU2548
 9692 000e DBB1     		cbz	r3, .L749
 9693 0010 0446     		mov	r4, r0
8085:Core/Src/bno055.c ****     {
8086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8087:Core/Src/bno055.c ****     }
8088:Core/Src/bno055.c ****     else
8089:Core/Src/bno055.c ****     {
8090:Core/Src/bno055.c ****         /*condition check for page, data output format is
8091:Core/Src/bno055.c ****          * available in the page zero*/
8092:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9694              		.loc 1 8092 9 is_stmt 1 view .LVU2549
 9695              		.loc 1 8092 21 is_stmt 0 view .LVU2550
 9696 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9697              		.loc 1 8092 12 view .LVU2551
 9698 0014 93B9     		cbnz	r3, .L752
 9699              	.LVL1020:
 9700              	.L747:
8093:Core/Src/bno055.c ****         {
8094:Core/Src/bno055.c ****             /* Write the page zero*/
8095:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8096:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 321


8097:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9701              		.loc 1 8097 53 discriminator 1 view .LVU2552
 9702 0016 0F4B     		ldr	r3, .L753
 9703 0018 1B68     		ldr	r3, [r3]
 9704 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9705              		.loc 1 8097 41 discriminator 1 view .LVU2553
 9706 001c BBB9     		cbnz	r3, .L750
 9707              	.L748:
8098:Core/Src/bno055.c ****         {
8099:Core/Src/bno055.c ****             /* Read the data output format */
8100:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9708              		.loc 1 8100 13 is_stmt 1 view .LVU2554
 9709              		.loc 1 8100 32 is_stmt 0 view .LVU2555
 9710 001e 0D4B     		ldr	r3, .L753
 9711 0020 1868     		ldr	r0, [r3]
 9712 0022 0569     		ldr	r5, [r0, #16]
 9713              		.loc 1 8100 24 view .LVU2556
 9714 0024 0123     		movs	r3, #1
 9715 0026 0DF10702 		add	r2, sp, #7
 9716 002a 3B21     		movs	r1, #59
 9717 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9718 002e A847     		blx	r5
 9719              	.LVL1021:
8101:Core/Src/bno055.c ****                                                       BNO055_DATA_OUTPUT_FORMAT_REG,
8102:Core/Src/bno055.c ****                                                       &data_u8r,
8103:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8104:Core/Src/bno055.c ****             *data_output_format_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT);
 9720              		.loc 1 8104 13 is_stmt 1 view .LVU2557
 9721              		.loc 1 8104 38 is_stmt 0 view .LVU2558
 9722 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9723 0034 DB09     		lsrs	r3, r3, #7
 9724              		.loc 1 8104 36 view .LVU2559
 9725 0036 2370     		strb	r3, [r4]
 9726              	.LVL1022:
 9727              	.L746:
8105:Core/Src/bno055.c ****         }
8106:Core/Src/bno055.c ****         else
8107:Core/Src/bno055.c ****         {
8108:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8109:Core/Src/bno055.c ****         }
8110:Core/Src/bno055.c ****     }
8111:Core/Src/bno055.c **** 
8112:Core/Src/bno055.c ****     return com_rslt;
8113:Core/Src/bno055.c **** }
 9728              		.loc 1 8113 1 view .LVU2560
 9729 0038 03B0     		add	sp, sp, #12
 9730              	.LCFI339:
 9731              		.cfi_remember_state
 9732              		.cfi_def_cfa_offset 12
 9733              		@ sp needed
 9734 003a 30BD     		pop	{r4, r5, pc}
 9735              	.LVL1023:
 9736              	.L752:
 9737              	.LCFI340:
 9738              		.cfi_restore_state
8095:Core/Src/bno055.c ****         }
 9739              		.loc 1 8095 13 is_stmt 1 view .LVU2561
ARM GAS  /tmp/ccO72alg.s 			page 322


8095:Core/Src/bno055.c ****         }
 9740              		.loc 1 8095 23 is_stmt 0 view .LVU2562
 9741 003c 0020     		movs	r0, #0
 9742              	.LVL1024:
8095:Core/Src/bno055.c ****         }
 9743              		.loc 1 8095 23 view .LVU2563
 9744 003e FFF7FEFF 		bl	bno055_write_page_id
 9745              	.LVL1025:
8097:Core/Src/bno055.c ****         {
 9746              		.loc 1 8097 9 is_stmt 1 view .LVU2564
8097:Core/Src/bno055.c ****         {
 9747              		.loc 1 8097 12 is_stmt 0 view .LVU2565
 9748 0042 0028     		cmp	r0, #0
 9749 0044 EBD0     		beq	.L748
 9750 0046 E6E7     		b	.L747
 9751              	.LVL1026:
 9752              	.L749:
8086:Core/Src/bno055.c ****     }
 9753              		.loc 1 8086 16 view .LVU2566
 9754 0048 6FF07E00 		mvn	r0, #126
 9755              	.LVL1027:
8086:Core/Src/bno055.c ****     }
 9756              		.loc 1 8086 16 view .LVU2567
 9757 004c F4E7     		b	.L746
 9758              	.LVL1028:
 9759              	.L750:
8108:Core/Src/bno055.c ****         }
 9760              		.loc 1 8108 22 view .LVU2568
 9761 004e 4FF0FF30 		mov	r0, #-1
 9762 0052 F1E7     		b	.L746
 9763              	.L754:
 9764              		.align	2
 9765              	.L753:
 9766 0054 00000000 		.word	.LANCHOR0
 9767              		.cfi_endproc
 9768              	.LFE143:
 9770              		.section	.text.bno055_get_operation_mode,"ax",%progbits
 9771              		.align	1
 9772              		.global	bno055_get_operation_mode
 9773              		.syntax unified
 9774              		.thumb
 9775              		.thumb_func
 9777              	bno055_get_operation_mode:
 9778              	.LVL1029:
 9779              	.LFB145:
8114:Core/Src/bno055.c **** 
8115:Core/Src/bno055.c **** /*!
8116:Core/Src/bno055.c ****  *  @brief This API used to write the current selected orientation mode
8117:Core/Src/bno055.c ****  *  from register from 0x3B bit 7
8118:Core/Src/bno055.c ****  *
8119:Core/Src/bno055.c ****  *  @param data_output_format_u8 : The value of data output format
8120:Core/Src/bno055.c ****  *
8121:Core/Src/bno055.c ****  *    data_output_format_u8  | result
8122:Core/Src/bno055.c ****  *   --------------------      | --------
8123:Core/Src/bno055.c ****  *    0x00                     | Windows
8124:Core/Src/bno055.c ****  *    0x01                     | Android
8125:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 323


8126:Core/Src/bno055.c ****  *  @return results of bus communication function
8127:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8128:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8129:Core/Src/bno055.c ****  *
8130:Core/Src/bno055.c ****  *
8131:Core/Src/bno055.c ****  */
8132:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_data_output_format(u8 data_output_format_u8)
8133:Core/Src/bno055.c **** {
8134:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
8135:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
8136:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
8137:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
8138:Core/Src/bno055.c **** 
8139:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8140:Core/Src/bno055.c ****     if (p_bno055 == NULL)
8141:Core/Src/bno055.c ****     {
8142:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8143:Core/Src/bno055.c ****     }
8144:Core/Src/bno055.c ****     else
8145:Core/Src/bno055.c ****     {
8146:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8147:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8148:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8149:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
8150:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
8151:Core/Src/bno055.c ****         {
8152:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
8153:Core/Src/bno055.c ****             {
8154:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8155:Core/Src/bno055.c ****             }
8156:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
8157:Core/Src/bno055.c ****             {
8158:Core/Src/bno055.c ****                 /* Write the data output format */
8159:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8160:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
8161:Core/Src/bno055.c ****                                                           &data_u8r,
8162:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8163:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8164:Core/Src/bno055.c ****                 {
8165:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_DATA_OUTPUT_FORMAT, data_output
8166:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8167:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
8168:Core/Src/bno055.c ****                                                                 &data_u8r,
8169:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8170:Core/Src/bno055.c ****                 }
8171:Core/Src/bno055.c ****             }
8172:Core/Src/bno055.c ****             else
8173:Core/Src/bno055.c ****             {
8174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8175:Core/Src/bno055.c ****             }
8176:Core/Src/bno055.c ****         }
8177:Core/Src/bno055.c ****         else
8178:Core/Src/bno055.c ****         {
8179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8180:Core/Src/bno055.c ****         }
8181:Core/Src/bno055.c ****     }
8182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccO72alg.s 			page 324


8183:Core/Src/bno055.c ****     {
8184:Core/Src/bno055.c ****         /* set the operation mode
8185:Core/Src/bno055.c ****          * of previous operation mode*/
8186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8187:Core/Src/bno055.c ****     }
8188:Core/Src/bno055.c **** 
8189:Core/Src/bno055.c ****     return com_rslt;
8190:Core/Src/bno055.c **** }
8191:Core/Src/bno055.c **** 
8192:Core/Src/bno055.c **** /*! @brief This API used to read the operation mode
8193:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8194:Core/Src/bno055.c ****  *
8195:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8196:Core/Src/bno055.c ****  *
8197:Core/Src/bno055.c ****  * operation_mode_u8 |      result      | comments
8198:Core/Src/bno055.c ****  * ----------|----------------------------|----------------------------
8199:Core/Src/bno055.c ****  *  0x00     | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8200:Core/Src/bno055.c ****  *  0x01     | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8201:Core/Src/bno055.c ****  *  0x02     | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8202:Core/Src/bno055.c ****  *  0x03     | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8203:Core/Src/bno055.c ****  *  0x04     | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8204:Core/Src/bno055.c ****  *  0x05     | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8205:Core/Src/bno055.c ****  *  0x06     | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8206:Core/Src/bno055.c ****  *  0x07     | OPERATION_MODE_ANY_MOTION  | Reads accel mag and gyro data
8207:Core/Src/bno055.c ****  *  0x08     | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8208:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,gyro and fusion data
8209:Core/Src/bno055.c ****  *  0x09     | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
8210:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8211:Core/Src/bno055.c ****  *  0x0A     | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8212:Core/Src/bno055.c ****  *    -      |       -                    | and fusion data
8213:Core/Src/bno055.c ****  *  0x0B     | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8214:Core/Src/bno055.c ****  *   -       |       -                    | fast magnetic calibration
8215:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8216:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8217:Core/Src/bno055.c ****  *  0x0C     | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8218:Core/Src/bno055.c ****  *   -       |       -                    | Reads accel,mag, gyro
8219:Core/Src/bno055.c ****  *   -       |       -                    | and fusion data
8220:Core/Src/bno055.c ****  *
8221:Core/Src/bno055.c ****  *  @return results of bus communication function
8222:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8223:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8224:Core/Src/bno055.c ****  *
8225:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8226:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8227:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8228:Core/Src/bno055.c ****  *
8229:Core/Src/bno055.c ****  */
8230:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_operation_mode(u8 *operation_mode_u8)
8231:Core/Src/bno055.c **** {
 9780              		.loc 1 8231 1 is_stmt 1 view -0
 9781              		.cfi_startproc
 9782              		@ args = 0, pretend = 0, frame = 8
 9783              		@ frame_needed = 0, uses_anonymous_args = 0
 9784              		.loc 1 8231 1 is_stmt 0 view .LVU2570
 9785 0000 30B5     		push	{r4, r5, lr}
 9786              	.LCFI341:
 9787              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 325


 9788              		.cfi_offset 4, -12
 9789              		.cfi_offset 5, -8
 9790              		.cfi_offset 14, -4
 9791 0002 83B0     		sub	sp, sp, #12
 9792              	.LCFI342:
 9793              		.cfi_def_cfa_offset 24
8232:Core/Src/bno055.c ****     /* Variable used to return value of
8233:Core/Src/bno055.c ****      * communication routine*/
8234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9794              		.loc 1 8234 5 is_stmt 1 view .LVU2571
 9795              	.LVL1030:
8235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9796              		.loc 1 8235 5 view .LVU2572
 9797              		.loc 1 8235 8 is_stmt 0 view .LVU2573
 9798 0004 0023     		movs	r3, #0
 9799 0006 8DF80730 		strb	r3, [sp, #7]
8236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9800              		.loc 1 8236 5 is_stmt 1 view .LVU2574
 9801              	.LVL1031:
8237:Core/Src/bno055.c **** 
8238:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8239:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9802              		.loc 1 8239 5 view .LVU2575
 9803              		.loc 1 8239 18 is_stmt 0 view .LVU2576
 9804 000a 134B     		ldr	r3, .L763
 9805 000c 1B68     		ldr	r3, [r3]
 9806              		.loc 1 8239 8 view .LVU2577
 9807 000e E3B1     		cbz	r3, .L759
 9808 0010 0446     		mov	r4, r0
8240:Core/Src/bno055.c ****     {
8241:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8242:Core/Src/bno055.c ****     }
8243:Core/Src/bno055.c ****     else
8244:Core/Src/bno055.c ****     {
8245:Core/Src/bno055.c ****         /*condition check for page, operation mode is
8246:Core/Src/bno055.c ****          * available in the page zero*/
8247:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 9809              		.loc 1 8247 9 is_stmt 1 view .LVU2578
 9810              		.loc 1 8247 21 is_stmt 0 view .LVU2579
 9811 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9812              		.loc 1 8247 12 view .LVU2580
 9813 0014 9BB9     		cbnz	r3, .L762
 9814              	.LVL1032:
 9815              	.L757:
8248:Core/Src/bno055.c ****         {
8249:Core/Src/bno055.c ****             /* Write the page zero*/
8250:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8251:Core/Src/bno055.c ****         }
8252:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 9816              		.loc 1 8252 53 discriminator 1 view .LVU2581
 9817 0016 104B     		ldr	r3, .L763
 9818 0018 1B68     		ldr	r3, [r3]
 9819 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9820              		.loc 1 8252 41 discriminator 1 view .LVU2582
 9821 001c C3B9     		cbnz	r3, .L760
 9822              	.L758:
8253:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 326


8254:Core/Src/bno055.c ****             /* Read the value of operation mode*/
8255:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9823              		.loc 1 8255 13 is_stmt 1 view .LVU2583
 9824              		.loc 1 8255 32 is_stmt 0 view .LVU2584
 9825 001e 0E4B     		ldr	r3, .L763
 9826 0020 1868     		ldr	r0, [r3]
 9827 0022 0569     		ldr	r5, [r0, #16]
 9828              		.loc 1 8255 24 view .LVU2585
 9829 0024 0123     		movs	r3, #1
 9830 0026 0DF10702 		add	r2, sp, #7
 9831 002a 3D21     		movs	r1, #61
 9832 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9833 002e A847     		blx	r5
 9834              	.LVL1033:
8256:Core/Src/bno055.c ****                                                       BNO055_OPERATION_MODE_REG,
8257:Core/Src/bno055.c ****                                                       &data_u8r,
8258:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8259:Core/Src/bno055.c ****             *operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_OPERATION_MODE);
 9835              		.loc 1 8259 13 is_stmt 1 view .LVU2586
 9836              		.loc 1 8259 34 is_stmt 0 view .LVU2587
 9837 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 9838 0034 03F00F03 		and	r3, r3, #15
 9839              		.loc 1 8259 32 view .LVU2588
 9840 0038 2370     		strb	r3, [r4]
 9841              	.LVL1034:
 9842              	.L756:
8260:Core/Src/bno055.c ****         }
8261:Core/Src/bno055.c ****         else
8262:Core/Src/bno055.c ****         {
8263:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8264:Core/Src/bno055.c ****         }
8265:Core/Src/bno055.c ****     }
8266:Core/Src/bno055.c **** 
8267:Core/Src/bno055.c ****     return com_rslt;
8268:Core/Src/bno055.c **** }
 9843              		.loc 1 8268 1 view .LVU2589
 9844 003a 03B0     		add	sp, sp, #12
 9845              	.LCFI343:
 9846              		.cfi_remember_state
 9847              		.cfi_def_cfa_offset 12
 9848              		@ sp needed
 9849 003c 30BD     		pop	{r4, r5, pc}
 9850              	.LVL1035:
 9851              	.L762:
 9852              	.LCFI344:
 9853              		.cfi_restore_state
8250:Core/Src/bno055.c ****         }
 9854              		.loc 1 8250 13 is_stmt 1 view .LVU2590
8250:Core/Src/bno055.c ****         }
 9855              		.loc 1 8250 23 is_stmt 0 view .LVU2591
 9856 003e 0020     		movs	r0, #0
 9857              	.LVL1036:
8250:Core/Src/bno055.c ****         }
 9858              		.loc 1 8250 23 view .LVU2592
 9859 0040 FFF7FEFF 		bl	bno055_write_page_id
 9860              	.LVL1037:
8252:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 327


 9861              		.loc 1 8252 9 is_stmt 1 view .LVU2593
8252:Core/Src/bno055.c ****         {
 9862              		.loc 1 8252 12 is_stmt 0 view .LVU2594
 9863 0044 0028     		cmp	r0, #0
 9864 0046 EAD0     		beq	.L758
 9865 0048 E5E7     		b	.L757
 9866              	.LVL1038:
 9867              	.L759:
8241:Core/Src/bno055.c ****     }
 9868              		.loc 1 8241 16 view .LVU2595
 9869 004a 6FF07E00 		mvn	r0, #126
 9870              	.LVL1039:
8241:Core/Src/bno055.c ****     }
 9871              		.loc 1 8241 16 view .LVU2596
 9872 004e F4E7     		b	.L756
 9873              	.LVL1040:
 9874              	.L760:
8263:Core/Src/bno055.c ****         }
 9875              		.loc 1 8263 22 view .LVU2597
 9876 0050 4FF0FF30 		mov	r0, #-1
 9877 0054 F1E7     		b	.L756
 9878              	.L764:
 9879 0056 00BF     		.align	2
 9880              	.L763:
 9881 0058 00000000 		.word	.LANCHOR0
 9882              		.cfi_endproc
 9883              	.LFE145:
 9885              		.section	.text.bno055_set_operation_mode,"ax",%progbits
 9886              		.align	1
 9887              		.global	bno055_set_operation_mode
 9888              		.syntax unified
 9889              		.thumb
 9890              		.thumb_func
 9892              	bno055_set_operation_mode:
 9893              	.LVL1041:
 9894              	.LFB146:
8269:Core/Src/bno055.c **** 
8270:Core/Src/bno055.c **** /*! @brief This API used to write the operation mode
8271:Core/Src/bno055.c ****  *  from register from 0x3D bit 0 to 3
8272:Core/Src/bno055.c ****  *
8273:Core/Src/bno055.c ****  *  @param operation_mode_u8 : The value of operation mode
8274:Core/Src/bno055.c ****  *
8275:Core/Src/bno055.c ****  *  operation_mode_u8  |      result            | comments
8276:Core/Src/bno055.c ****  * ---------|-----------------------------------|--------------------------
8277:Core/Src/bno055.c ****  *  0x00    | BNO055_OPERATION_MODE_CONFIG      | Configuration mode
8278:Core/Src/bno055.c ****  *  0x01    | BNO055_OPERATION_MODE_ACCONLY     | Reads accel data alone
8279:Core/Src/bno055.c ****  *  0x02    | BNO055_OPERATION_MODE_MAGONLY     | Reads mag data alone
8280:Core/Src/bno055.c ****  *  0x03    | BNO055_OPERATION_MODE_GYRONLY     | Reads gyro data alone
8281:Core/Src/bno055.c ****  *  0x04    | BNO055_OPERATION_MODE_ACCMAG      | Reads accel and mag data
8282:Core/Src/bno055.c ****  *  0x05    | BNO055_OPERATION_MODE_ACCGYRO     | Reads accel and gyro data
8283:Core/Src/bno055.c ****  *  0x06    | BNO055_OPERATION_MODE_MAGGYRO     | Reads accel and mag data
8284:Core/Src/bno055.c ****  *  0x07    | OPERATION_MODE_ANY_MOTION         | Reads accel mag and
8285:Core/Src/bno055.c ****  *          |       -                           | gyro data
8286:Core/Src/bno055.c ****  *  0x08    | BNO055_OPERATION_MODE_IMUPLUS     | Inertial measurement unit
8287:Core/Src/bno055.c ****  *   -      |                                   | Reads accel,gyro and
8288:Core/Src/bno055.c ****  *          |       -                           | fusion data
8289:Core/Src/bno055.c ****  *  0x09    | BNO055_OPERATION_MODE_COMPASS     | Reads accel, mag data
ARM GAS  /tmp/ccO72alg.s 			page 328


8290:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8291:Core/Src/bno055.c ****  *  0x0A    | BNO055_OPERATION_MODE_M4G         | Reads accel, mag data
8292:Core/Src/bno055.c ****  *    -     |       -                           | and fusion data
8293:Core/Src/bno055.c ****  *  0x0B    | BNO055_OPERATION_MODE_NDOF_FMC_OFF| Nine degrees of freedom with
8294:Core/Src/bno055.c ****  *   -      |       -                           | fast magnetic calibration
8295:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8296:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8297:Core/Src/bno055.c ****  *  0x0C    | BNO055_OPERATION_MODE_NDOF        | Nine degrees of freedom
8298:Core/Src/bno055.c ****  *   -      |       -                           | Reads accel,mag, gyro
8299:Core/Src/bno055.c ****  *   -      |       -                           | and fusion data
8300:Core/Src/bno055.c ****  *
8301:Core/Src/bno055.c ****  *  @return results of bus communication function
8302:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8303:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8304:Core/Src/bno055.c ****  *
8305:Core/Src/bno055.c ****  *  @note In the config mode, all sensor and fusion data
8306:Core/Src/bno055.c ****  *  becomes zero and it is mainly derived
8307:Core/Src/bno055.c ****  *  to configure the various settings of the BNO
8308:Core/Src/bno055.c ****  *
8309:Core/Src/bno055.c ****  */
8310:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_operation_mode(u8 operation_mode_u8)
8311:Core/Src/bno055.c **** {
 9895              		.loc 1 8311 1 is_stmt 1 view -0
 9896              		.cfi_startproc
 9897              		@ args = 0, pretend = 0, frame = 8
 9898              		@ frame_needed = 0, uses_anonymous_args = 0
 9899              		.loc 1 8311 1 is_stmt 0 view .LVU2599
 9900 0000 70B5     		push	{r4, r5, r6, lr}
 9901              	.LCFI345:
 9902              		.cfi_def_cfa_offset 16
 9903              		.cfi_offset 4, -16
 9904              		.cfi_offset 5, -12
 9905              		.cfi_offset 6, -8
 9906              		.cfi_offset 14, -4
 9907 0002 82B0     		sub	sp, sp, #8
 9908              	.LCFI346:
 9909              		.cfi_def_cfa_offset 24
8312:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 9910              		.loc 1 8312 5 is_stmt 1 view .LVU2600
 9911              	.LVL1042:
8313:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 9912              		.loc 1 8313 5 view .LVU2601
 9913              		.loc 1 8313 8 is_stmt 0 view .LVU2602
 9914 0004 0023     		movs	r3, #0
 9915 0006 8DF80730 		strb	r3, [sp, #7]
8314:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 9916              		.loc 1 8314 5 is_stmt 1 view .LVU2603
 9917              		.loc 1 8314 8 is_stmt 0 view .LVU2604
 9918 000a 8DF80630 		strb	r3, [sp, #6]
8315:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 9919              		.loc 1 8315 5 is_stmt 1 view .LVU2605
 9920              	.LVL1043:
8316:Core/Src/bno055.c **** 
8317:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8318:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 9921              		.loc 1 8318 5 view .LVU2606
 9922              		.loc 1 8318 18 is_stmt 0 view .LVU2607
ARM GAS  /tmp/ccO72alg.s 			page 329


 9923 000e 434B     		ldr	r3, .L773
 9924 0010 1B68     		ldr	r3, [r3]
 9925              		.loc 1 8318 8 view .LVU2608
 9926 0012 002B     		cmp	r3, #0
 9927 0014 7CD0     		beq	.L769
 9928 0016 0546     		mov	r5, r0
8319:Core/Src/bno055.c ****     {
8320:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8321:Core/Src/bno055.c ****     }
8322:Core/Src/bno055.c ****     else
8323:Core/Src/bno055.c ****     {
8324:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8325:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8326:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8327:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 9929              		.loc 1 8327 9 is_stmt 1 view .LVU2609
 9930              		.loc 1 8327 19 is_stmt 0 view .LVU2610
 9931 0018 0DF10600 		add	r0, sp, #6
 9932              	.LVL1044:
 9933              		.loc 1 8327 19 view .LVU2611
 9934 001c FFF7FEFF 		bl	bno055_get_operation_mode
 9935              	.LVL1045:
8328:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 9936              		.loc 1 8328 9 is_stmt 1 view .LVU2612
 9937              		.loc 1 8328 12 is_stmt 0 view .LVU2613
 9938 0020 0028     		cmp	r0, #0
 9939 0022 78D1     		bne	.L770
8329:Core/Src/bno055.c ****         {
8330:Core/Src/bno055.c ****             /* If the previous operation mode is config it is
8331:Core/Src/bno055.c ****              * directly write the operation mode */
8332:Core/Src/bno055.c ****             if (prev_opmode_u8 == BNO055_OPERATION_MODE_CONFIG)
 9940              		.loc 1 8332 13 is_stmt 1 view .LVU2614
 9941              		.loc 1 8332 32 is_stmt 0 view .LVU2615
 9942 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 9943              		.loc 1 8332 16 view .LVU2616
 9944 0028 43BB     		cbnz	r3, .L767
8333:Core/Src/bno055.c ****             {
8334:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 9945              		.loc 1 8334 17 is_stmt 1 view .LVU2617
 9946              		.loc 1 8334 36 is_stmt 0 view .LVU2618
 9947 002a 3C4B     		ldr	r3, .L773
 9948 002c 1868     		ldr	r0, [r3]
 9949              	.LVL1046:
 9950              		.loc 1 8334 36 view .LVU2619
 9951 002e 0469     		ldr	r4, [r0, #16]
 9952              		.loc 1 8334 28 view .LVU2620
 9953 0030 0123     		movs	r3, #1
 9954 0032 0DF10702 		add	r2, sp, #7
 9955 0036 3D21     		movs	r1, #61
 9956 0038 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9957 003a A047     		blx	r4
 9958              	.LVL1047:
8335:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8336:Core/Src/bno055.c ****                                                           &data_u8r,
8337:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8338:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 9959              		.loc 1 8338 17 is_stmt 1 view .LVU2621
ARM GAS  /tmp/ccO72alg.s 			page 330


 9960              		.loc 1 8338 20 is_stmt 0 view .LVU2622
 9961 003c 0446     		mov	r4, r0
 9962 003e D0B9     		cbnz	r0, .L766
8339:Core/Src/bno055.c ****                 {
8340:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_mode_
 9963              		.loc 1 8340 21 is_stmt 1 view .LVU2623
 9964              		.loc 1 8340 32 is_stmt 0 view .LVU2624
 9965 0040 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 9966              	.LVL1048:
 9967              		.loc 1 8340 32 view .LVU2625
 9968 0044 20F00F00 		bic	r0, r0, #15
 9969 0048 43B2     		sxtb	r3, r0
 9970 004a 05F00F00 		and	r0, r5, #15
 9971 004e 1843     		orrs	r0, r0, r3
 9972              		.loc 1 8340 30 view .LVU2626
 9973 0050 8DF80700 		strb	r0, [sp, #7]
8341:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 9974              		.loc 1 8341 21 is_stmt 1 view .LVU2627
 9975              		.loc 1 8341 41 is_stmt 0 view .LVU2628
 9976 0054 314D     		ldr	r5, .L773
 9977 0056 2868     		ldr	r0, [r5]
 9978 0058 C668     		ldr	r6, [r0, #12]
 9979              		.loc 1 8341 33 view .LVU2629
 9980 005a 0123     		movs	r3, #1
 9981 005c 0DF10702 		add	r2, sp, #7
 9982 0060 3D21     		movs	r1, #61
 9983 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 9984 0064 B047     		blx	r6
 9985              	.LVL1049:
 9986              		.loc 1 8341 30 view .LVU2630
 9987 0066 54FA80F4 		uxtab	r4, r4, r0
 9988 006a 64B2     		sxtb	r4, r4
 9989              	.LVL1050:
8342:Core/Src/bno055.c ****                                                                 BNO055_OPERATION_MODE_REG,
8343:Core/Src/bno055.c ****                                                                 &data_u8r,
8344:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8345:Core/Src/bno055.c **** 
8346:Core/Src/bno055.c ****                     /* Config mode to other
8347:Core/Src/bno055.c ****                      * operation mode switching
8348:Core/Src/bno055.c ****                      * required delay of 600ms*/
8349:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
 9990              		.loc 1 8349 21 is_stmt 1 view .LVU2631
 9991              		.loc 1 8349 29 is_stmt 0 view .LVU2632
 9992 006c 2B68     		ldr	r3, [r5]
 9993 006e 5B69     		ldr	r3, [r3, #20]
 9994              		.loc 1 8349 21 view .LVU2633
 9995 0070 4FF41670 		mov	r0, #600
 9996 0074 9847     		blx	r3
 9997              	.LVL1051:
 9998              	.L766:
8350:Core/Src/bno055.c ****                 }
8351:Core/Src/bno055.c ****             }
8352:Core/Src/bno055.c ****             else
8353:Core/Src/bno055.c ****             {
8354:Core/Src/bno055.c ****                 /* If the previous operation
8355:Core/Src/bno055.c ****                  * mode is not config it is
8356:Core/Src/bno055.c ****                  * write the config mode */
ARM GAS  /tmp/ccO72alg.s 			page 331


8357:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8358:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
8359:Core/Src/bno055.c ****                                                           &data_u8r,
8360:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8361:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
8362:Core/Src/bno055.c ****                 {
8363:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, BNO055_OPERATIO
8364:Core/Src/bno055.c ****                     com_rslt +=
8365:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
8366:Core/Src/bno055.c **** 
8367:Core/Src/bno055.c ****                     /* other mode to config mode switching
8368:Core/Src/bno055.c ****                      * required delay of 20ms*/
8369:Core/Src/bno055.c ****                     p_bno055->delay_msec(BNO055_CONFIG_MODE_SWITCHING_DELAY);
8370:Core/Src/bno055.c ****                 }
8371:Core/Src/bno055.c **** 
8372:Core/Src/bno055.c ****                 /* Write the operation mode */
8373:Core/Src/bno055.c ****                 if (operation_mode_u8 != BNO055_OPERATION_MODE_CONFIG)
8374:Core/Src/bno055.c ****                 {
8375:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
8376:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
8377:Core/Src/bno055.c ****                                                               &data_u8r,
8378:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
8379:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
8380:Core/Src/bno055.c ****                     {
8381:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_OPERATION_MODE, operation_m
8382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
8383:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
8384:Core/Src/bno055.c ****                                                                     &data_u8r,
8385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
8386:Core/Src/bno055.c **** 
8387:Core/Src/bno055.c ****                         /* Config mode to other
8388:Core/Src/bno055.c ****                          * operation mode switching
8389:Core/Src/bno055.c ****                          * required delay of 600ms*/
8390:Core/Src/bno055.c ****                         p_bno055->delay_msec(BNO055_MODE_SWITCHING_DELAY);
8391:Core/Src/bno055.c ****                     }
8392:Core/Src/bno055.c ****                 }
8393:Core/Src/bno055.c ****             }
8394:Core/Src/bno055.c ****         }
8395:Core/Src/bno055.c ****         else
8396:Core/Src/bno055.c ****         {
8397:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8398:Core/Src/bno055.c ****         }
8399:Core/Src/bno055.c ****     }
8400:Core/Src/bno055.c **** 
8401:Core/Src/bno055.c ****     return com_rslt;
8402:Core/Src/bno055.c **** }
 9999              		.loc 1 8402 1 view .LVU2634
 10000 0076 2046     		mov	r0, r4
 10001 0078 02B0     		add	sp, sp, #8
 10002              	.LCFI347:
 10003              		.cfi_remember_state
 10004              		.cfi_def_cfa_offset 16
 10005              		@ sp needed
 10006 007a 70BD     		pop	{r4, r5, r6, pc}
 10007              	.LVL1052:
 10008              	.L767:
 10009              	.LCFI348:
ARM GAS  /tmp/ccO72alg.s 			page 332


 10010              		.cfi_restore_state
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10011              		.loc 1 8357 17 is_stmt 1 view .LVU2635
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10012              		.loc 1 8357 36 is_stmt 0 view .LVU2636
 10013 007c 274B     		ldr	r3, .L773
 10014 007e 1868     		ldr	r0, [r3]
 10015              	.LVL1053:
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10016              		.loc 1 8357 36 view .LVU2637
 10017 0080 0469     		ldr	r4, [r0, #16]
8357:Core/Src/bno055.c ****                                                           BNO055_OPERATION_MODE_REG,
 10018              		.loc 1 8357 28 view .LVU2638
 10019 0082 0123     		movs	r3, #1
 10020 0084 0DF10702 		add	r2, sp, #7
 10021 0088 3D21     		movs	r1, #61
 10022 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10023 008c A047     		blx	r4
 10024              	.LVL1054:
8361:Core/Src/bno055.c ****                 {
 10025              		.loc 1 8361 17 is_stmt 1 view .LVU2639
8361:Core/Src/bno055.c ****                 {
 10026              		.loc 1 8361 20 is_stmt 0 view .LVU2640
 10027 008e 0446     		mov	r4, r0
 10028 0090 48B3     		cbz	r0, .L772
 10029              	.LVL1055:
 10030              	.L768:
8373:Core/Src/bno055.c ****                 {
 10031              		.loc 1 8373 17 is_stmt 1 view .LVU2641
8373:Core/Src/bno055.c ****                 {
 10032              		.loc 1 8373 20 is_stmt 0 view .LVU2642
 10033 0092 002D     		cmp	r5, #0
 10034 0094 EFD0     		beq	.L766
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10035              		.loc 1 8375 21 is_stmt 1 view .LVU2643
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10036              		.loc 1 8375 40 is_stmt 0 view .LVU2644
 10037 0096 214B     		ldr	r3, .L773
 10038 0098 1868     		ldr	r0, [r3]
 10039 009a 0469     		ldr	r4, [r0, #16]
 10040              	.LVL1056:
8375:Core/Src/bno055.c ****                                                               BNO055_OPERATION_MODE_REG,
 10041              		.loc 1 8375 32 view .LVU2645
 10042 009c 0123     		movs	r3, #1
 10043 009e 0DF10702 		add	r2, sp, #7
 10044 00a2 3D21     		movs	r1, #61
 10045 00a4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10046 00a6 A047     		blx	r4
 10047              	.LVL1057:
8379:Core/Src/bno055.c ****                     {
 10048              		.loc 1 8379 21 is_stmt 1 view .LVU2646
8379:Core/Src/bno055.c ****                     {
 10049              		.loc 1 8379 24 is_stmt 0 view .LVU2647
 10050 00a8 0446     		mov	r4, r0
 10051 00aa 0028     		cmp	r0, #0
 10052 00ac E3D1     		bne	.L766
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 333


 10053              		.loc 1 8381 25 is_stmt 1 view .LVU2648
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10054              		.loc 1 8381 36 is_stmt 0 view .LVU2649
 10055 00ae 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 10056              	.LVL1058:
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10057              		.loc 1 8381 36 view .LVU2650
 10058 00b2 20F00F00 		bic	r0, r0, #15
 10059 00b6 43B2     		sxtb	r3, r0
 10060 00b8 05F00F00 		and	r0, r5, #15
 10061 00bc 1843     		orrs	r0, r0, r3
8381:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10062              		.loc 1 8381 34 view .LVU2651
 10063 00be 8DF80700 		strb	r0, [sp, #7]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10064              		.loc 1 8382 25 is_stmt 1 view .LVU2652
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10065              		.loc 1 8382 45 is_stmt 0 view .LVU2653
 10066 00c2 164D     		ldr	r5, .L773
 10067 00c4 2868     		ldr	r0, [r5]
 10068 00c6 C668     		ldr	r6, [r0, #12]
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10069              		.loc 1 8382 37 view .LVU2654
 10070 00c8 0123     		movs	r3, #1
 10071 00ca 0DF10702 		add	r2, sp, #7
 10072 00ce 3D21     		movs	r1, #61
 10073 00d0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10074 00d2 B047     		blx	r6
 10075              	.LVL1059:
8382:Core/Src/bno055.c ****                                                                     BNO055_OPERATION_MODE_REG,
 10076              		.loc 1 8382 34 view .LVU2655
 10077 00d4 54FA80F4 		uxtab	r4, r4, r0
 10078 00d8 64B2     		sxtb	r4, r4
 10079              	.LVL1060:
8390:Core/Src/bno055.c ****                     }
 10080              		.loc 1 8390 25 is_stmt 1 view .LVU2656
8390:Core/Src/bno055.c ****                     }
 10081              		.loc 1 8390 33 is_stmt 0 view .LVU2657
 10082 00da 2B68     		ldr	r3, [r5]
 10083 00dc 5B69     		ldr	r3, [r3, #20]
8390:Core/Src/bno055.c ****                     }
 10084              		.loc 1 8390 25 view .LVU2658
 10085 00de 4FF41670 		mov	r0, #600
 10086 00e2 9847     		blx	r3
 10087              	.LVL1061:
 10088 00e4 C7E7     		b	.L766
 10089              	.LVL1062:
 10090              	.L772:
8363:Core/Src/bno055.c ****                     com_rslt +=
 10091              		.loc 1 8363 21 is_stmt 1 view .LVU2659
8363:Core/Src/bno055.c ****                     com_rslt +=
 10092              		.loc 1 8363 32 is_stmt 0 view .LVU2660
 10093 00e6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 10094 00ea 03F0F003 		and	r3, r3, #240
8363:Core/Src/bno055.c ****                     com_rslt +=
 10095              		.loc 1 8363 30 view .LVU2661
 10096 00ee 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccO72alg.s 			page 334


8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 10097              		.loc 1 8364 21 is_stmt 1 view .LVU2662
8365:Core/Src/bno055.c **** 
 10098              		.loc 1 8365 25 is_stmt 0 view .LVU2663
 10099 00f2 0122     		movs	r2, #1
 10100 00f4 0DF10701 		add	r1, sp, #7
 10101 00f8 3D20     		movs	r0, #61
 10102              	.LVL1063:
8365:Core/Src/bno055.c **** 
 10103              		.loc 1 8365 25 view .LVU2664
 10104 00fa FFF7FEFF 		bl	bno055_write_register
 10105              	.LVL1064:
8364:Core/Src/bno055.c ****                         bno055_write_register(BNO055_OPERATION_MODE_REG, &data_u8r, BNO055_GEN_READ
 10106              		.loc 1 8364 30 view .LVU2665
 10107 00fe 54FA80F4 		uxtab	r4, r4, r0
 10108 0102 64B2     		sxtb	r4, r4
 10109              	.LVL1065:
8369:Core/Src/bno055.c ****                 }
 10110              		.loc 1 8369 21 is_stmt 1 view .LVU2666
8369:Core/Src/bno055.c ****                 }
 10111              		.loc 1 8369 29 is_stmt 0 view .LVU2667
 10112 0104 054B     		ldr	r3, .L773
 10113 0106 1B68     		ldr	r3, [r3]
 10114 0108 5B69     		ldr	r3, [r3, #20]
8369:Core/Src/bno055.c ****                 }
 10115              		.loc 1 8369 21 view .LVU2668
 10116 010a 1420     		movs	r0, #20
 10117 010c 9847     		blx	r3
 10118              	.LVL1066:
 10119 010e C0E7     		b	.L768
 10120              	.LVL1067:
 10121              	.L769:
8320:Core/Src/bno055.c ****     }
 10122              		.loc 1 8320 16 view .LVU2669
 10123 0110 6FF07E04 		mvn	r4, #126
 10124 0114 AFE7     		b	.L766
 10125              	.LVL1068:
 10126              	.L770:
8397:Core/Src/bno055.c ****         }
 10127              		.loc 1 8397 22 view .LVU2670
 10128 0116 4FF0FF34 		mov	r4, #-1
 10129 011a ACE7     		b	.L766
 10130              	.L774:
 10131              		.align	2
 10132              	.L773:
 10133 011c 00000000 		.word	.LANCHOR0
 10134              		.cfi_endproc
 10135              	.LFE146:
 10137              		.section	.text.bno055_set_accel_unit,"ax",%progbits
 10138              		.align	1
 10139              		.global	bno055_set_accel_unit
 10140              		.syntax unified
 10141              		.thumb
 10142              		.thumb_func
 10144              	bno055_set_accel_unit:
 10145              	.LVL1069:
 10146              	.LFB134:
ARM GAS  /tmp/ccO72alg.s 			page 335


7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 10147              		.loc 1 7463 1 is_stmt 1 view -0
 10148              		.cfi_startproc
 10149              		@ args = 0, pretend = 0, frame = 8
 10150              		@ frame_needed = 0, uses_anonymous_args = 0
7463:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 10151              		.loc 1 7463 1 is_stmt 0 view .LVU2672
 10152 0000 30B5     		push	{r4, r5, lr}
 10153              	.LCFI349:
 10154              		.cfi_def_cfa_offset 12
 10155              		.cfi_offset 4, -12
 10156              		.cfi_offset 5, -8
 10157              		.cfi_offset 14, -4
 10158 0002 83B0     		sub	sp, sp, #12
 10159              	.LCFI350:
 10160              		.cfi_def_cfa_offset 24
7464:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 10161              		.loc 1 7464 5 is_stmt 1 view .LVU2673
 10162              	.LVL1070:
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10163              		.loc 1 7465 5 view .LVU2674
7465:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 10164              		.loc 1 7465 8 is_stmt 0 view .LVU2675
 10165 0004 0023     		movs	r3, #0
 10166 0006 8DF80730 		strb	r3, [sp, #7]
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10167              		.loc 1 7466 5 is_stmt 1 view .LVU2676
7466:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 10168              		.loc 1 7466 8 is_stmt 0 view .LVU2677
 10169 000a 8DF80630 		strb	r3, [sp, #6]
7467:Core/Src/bno055.c **** 
 10170              		.loc 1 7467 5 is_stmt 1 view .LVU2678
 10171              	.LVL1071:
7470:Core/Src/bno055.c ****     {
 10172              		.loc 1 7470 5 view .LVU2679
7470:Core/Src/bno055.c ****     {
 10173              		.loc 1 7470 18 is_stmt 0 view .LVU2680
 10174 000e 254B     		ldr	r3, .L785
 10175 0010 1B68     		ldr	r3, [r3]
7470:Core/Src/bno055.c ****     {
 10176              		.loc 1 7470 8 view .LVU2681
 10177 0012 002B     		cmp	r3, #0
 10178 0014 43D0     		beq	.L779
 10179 0016 0546     		mov	r5, r0
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10180              		.loc 1 7479 9 is_stmt 1 view .LVU2682
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10181              		.loc 1 7479 19 is_stmt 0 view .LVU2683
 10182 0018 0DF10600 		add	r0, sp, #6
 10183              	.LVL1072:
7479:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 10184              		.loc 1 7479 19 view .LVU2684
 10185 001c FFF7FEFF 		bl	bno055_get_operation_mode
 10186              	.LVL1073:
7480:Core/Src/bno055.c ****         {
 10187              		.loc 1 7480 9 is_stmt 1 view .LVU2685
7480:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 336


 10188              		.loc 1 7480 12 is_stmt 0 view .LVU2686
 10189 0020 0446     		mov	r4, r0
 10190 0022 58BB     		cbnz	r0, .L780
7482:Core/Src/bno055.c ****             {
 10191              		.loc 1 7482 13 is_stmt 1 view .LVU2687
7482:Core/Src/bno055.c ****             {
 10192              		.loc 1 7482 32 is_stmt 0 view .LVU2688
 10193 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7482:Core/Src/bno055.c ****             {
 10194              		.loc 1 7482 16 view .LVU2689
 10195 0028 13BB     		cbnz	r3, .L783
 10196              	.LVL1074:
 10197              	.L778:
7486:Core/Src/bno055.c ****             {
 10198              		.loc 1 7486 13 is_stmt 1 view .LVU2690
7486:Core/Src/bno055.c ****             {
 10199              		.loc 1 7486 16 is_stmt 0 view .LVU2691
 10200 002a 7CBB     		cbnz	r4, .L781
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10201              		.loc 1 7489 17 is_stmt 1 view .LVU2692
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10202              		.loc 1 7489 36 is_stmt 0 view .LVU2693
 10203 002c 1D4B     		ldr	r3, .L785
 10204 002e 1868     		ldr	r0, [r3]
 10205 0030 0469     		ldr	r4, [r0, #16]
 10206              	.LVL1075:
7489:Core/Src/bno055.c ****                                                           BNO055_ACCEL_UNIT_REG,
 10207              		.loc 1 7489 28 view .LVU2694
 10208 0032 0123     		movs	r3, #1
 10209 0034 0DF10702 		add	r2, sp, #7
 10210 0038 3B21     		movs	r1, #59
 10211 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10212 003c A047     		blx	r4
 10213              	.LVL1076:
7493:Core/Src/bno055.c ****                 {
 10214              		.loc 1 7493 17 is_stmt 1 view .LVU2695
7493:Core/Src/bno055.c ****                 {
 10215              		.loc 1 7493 20 is_stmt 0 view .LVU2696
 10216 003e 0446     		mov	r4, r0
 10217 0040 F0B9     		cbnz	r0, .L777
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10218              		.loc 1 7495 21 is_stmt 1 view .LVU2697
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10219              		.loc 1 7495 32 is_stmt 0 view .LVU2698
 10220 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 10221              	.LVL1077:
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10222              		.loc 1 7495 32 view .LVU2699
 10223 0046 20F00100 		bic	r0, r0, #1
 10224 004a 43B2     		sxtb	r3, r0
 10225 004c 05F00100 		and	r0, r5, #1
 10226 0050 1843     		orrs	r0, r0, r3
7495:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 10227              		.loc 1 7495 30 view .LVU2700
 10228 0052 8DF80700 		strb	r0, [sp, #7]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10229              		.loc 1 7496 21 is_stmt 1 view .LVU2701
ARM GAS  /tmp/ccO72alg.s 			page 337


7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10230              		.loc 1 7496 41 is_stmt 0 view .LVU2702
 10231 0056 134B     		ldr	r3, .L785
 10232 0058 1868     		ldr	r0, [r3]
 10233 005a C568     		ldr	r5, [r0, #12]
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10234              		.loc 1 7496 33 view .LVU2703
 10235 005c 0123     		movs	r3, #1
 10236 005e 0DF10702 		add	r2, sp, #7
 10237 0062 3B21     		movs	r1, #59
 10238 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 10239 0066 A847     		blx	r5
 10240              	.LVL1078:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10241              		.loc 1 7496 30 view .LVU2704
 10242 0068 54FA80F4 		uxtab	r4, r4, r0
 10243 006c 64B2     		sxtb	r4, r4
 10244              	.LVL1079:
7496:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_UNIT_REG,
 10245              		.loc 1 7496 30 view .LVU2705
 10246 006e 07E0     		b	.L777
 10247              	.LVL1080:
 10248              	.L783:
7484:Core/Src/bno055.c ****             }
 10249              		.loc 1 7484 17 is_stmt 1 view .LVU2706
7484:Core/Src/bno055.c ****             }
 10250              		.loc 1 7484 28 is_stmt 0 view .LVU2707
 10251 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 10252              	.LVL1081:
7484:Core/Src/bno055.c ****             }
 10253              		.loc 1 7484 25 view .LVU2708
 10254 0074 54FA80F4 		uxtab	r4, r4, r0
 10255 0078 64B2     		sxtb	r4, r4
 10256              	.LVL1082:
7484:Core/Src/bno055.c ****             }
 10257              		.loc 1 7484 25 view .LVU2709
 10258 007a D6E7     		b	.L778
 10259              	.LVL1083:
 10260              	.L780:
7509:Core/Src/bno055.c ****         }
 10261              		.loc 1 7509 22 view .LVU2710
 10262 007c 4FF0FF34 		mov	r4, #-1
 10263              	.LVL1084:
 10264              	.L777:
7512:Core/Src/bno055.c ****     {
 10265              		.loc 1 7512 5 is_stmt 1 view .LVU2711
7512:Core/Src/bno055.c ****     {
 10266              		.loc 1 7512 24 is_stmt 0 view .LVU2712
 10267 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7512:Core/Src/bno055.c ****     {
 10268              		.loc 1 7512 8 view .LVU2713
 10269 0084 28B9     		cbnz	r0, .L784
 10270              	.LVL1085:
 10271              	.L776:
7520:Core/Src/bno055.c **** 
 10272              		.loc 1 7520 1 view .LVU2714
 10273 0086 2046     		mov	r0, r4
ARM GAS  /tmp/ccO72alg.s 			page 338


 10274 0088 03B0     		add	sp, sp, #12
 10275              	.LCFI351:
 10276              		.cfi_remember_state
 10277              		.cfi_def_cfa_offset 12
 10278              		@ sp needed
 10279 008a 30BD     		pop	{r4, r5, pc}
 10280              	.LVL1086:
 10281              	.L781:
 10282              	.LCFI352:
 10283              		.cfi_restore_state
7504:Core/Src/bno055.c ****             }
 10284              		.loc 1 7504 26 view .LVU2715
 10285 008c 4FF0FF34 		mov	r4, #-1
 10286              	.LVL1087:
7504:Core/Src/bno055.c ****             }
 10287              		.loc 1 7504 26 view .LVU2716
 10288 0090 F6E7     		b	.L777
 10289              	.LVL1088:
 10290              	.L784:
7516:Core/Src/bno055.c ****     }
 10291              		.loc 1 7516 9 is_stmt 1 view .LVU2717
7516:Core/Src/bno055.c ****     }
 10292              		.loc 1 7516 21 is_stmt 0 view .LVU2718
 10293 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 10294              	.LVL1089:
7516:Core/Src/bno055.c ****     }
 10295              		.loc 1 7516 18 view .LVU2719
 10296 0096 54FA80F4 		uxtab	r4, r4, r0
 10297              	.LVL1090:
7516:Core/Src/bno055.c ****     }
 10298              		.loc 1 7516 18 view .LVU2720
 10299 009a 64B2     		sxtb	r4, r4
 10300              	.LVL1091:
7516:Core/Src/bno055.c ****     }
 10301              		.loc 1 7516 18 view .LVU2721
 10302 009c F3E7     		b	.L776
 10303              	.LVL1092:
 10304              	.L779:
7472:Core/Src/bno055.c ****     }
 10305              		.loc 1 7472 16 view .LVU2722
 10306 009e 6FF07E04 		mvn	r4, #126
 10307 00a2 F0E7     		b	.L776
 10308              	.L786:
 10309              		.align	2
 10310              	.L785:
 10311 00a4 00000000 		.word	.LANCHOR0
 10312              		.cfi_endproc
 10313              	.LFE134:
 10315              		.section	.text.bno055_convert_float_accel_x_msq,"ax",%progbits
 10316              		.align	1
 10317              		.global	bno055_convert_float_accel_x_msq
 10318              		.syntax unified
 10319              		.thumb
 10320              		.thumb_func
 10322              	bno055_convert_float_accel_x_msq:
 10323              	.LVL1093:
 10324              	.LFB41:
ARM GAS  /tmp/ccO72alg.s 			page 339


2865:Core/Src/bno055.c ****     /* Variable used to return value of
 10325              		.loc 1 2865 1 is_stmt 1 view -0
 10326              		.cfi_startproc
 10327              		@ args = 0, pretend = 0, frame = 8
 10328              		@ frame_needed = 0, uses_anonymous_args = 0
2865:Core/Src/bno055.c ****     /* Variable used to return value of
 10329              		.loc 1 2865 1 is_stmt 0 view .LVU2724
 10330 0000 30B5     		push	{r4, r5, lr}
 10331              	.LCFI353:
 10332              		.cfi_def_cfa_offset 12
 10333              		.cfi_offset 4, -12
 10334              		.cfi_offset 5, -8
 10335              		.cfi_offset 14, -4
 10336 0002 83B0     		sub	sp, sp, #12
 10337              	.LCFI354:
 10338              		.cfi_def_cfa_offset 24
 10339 0004 0546     		mov	r5, r0
2868:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10340              		.loc 1 2868 5 is_stmt 1 view .LVU2725
 10341              	.LVL1094:
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10342              		.loc 1 2869 5 view .LVU2726
2869:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10343              		.loc 1 2869 9 is_stmt 0 view .LVU2727
 10344 0006 0023     		movs	r3, #0
 10345 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2870:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10346              		.loc 1 2870 5 is_stmt 1 view .LVU2728
 10347              	.LVL1095:
2871:Core/Src/bno055.c **** 
 10348              		.loc 1 2871 5 view .LVU2729
2871:Core/Src/bno055.c **** 
 10349              		.loc 1 2871 8 is_stmt 0 view .LVU2730
 10350 000c 8DF80530 		strb	r3, [sp, #5]
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10351              		.loc 1 2875 5 is_stmt 1 view .LVU2731
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10352              		.loc 1 2875 16 is_stmt 0 view .LVU2732
 10353 0010 0DF10500 		add	r0, sp, #5
 10354              	.LVL1096:
2875:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10355              		.loc 1 2875 16 view .LVU2733
 10356 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10357              	.LVL1097:
 10358 0018 0446     		mov	r4, r0
 10359              	.LVL1098:
2876:Core/Src/bno055.c ****     {
 10360              		.loc 1 2876 5 is_stmt 1 view .LVU2734
2876:Core/Src/bno055.c ****     {
 10361              		.loc 1 2876 23 is_stmt 0 view .LVU2735
 10362 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2876:Core/Src/bno055.c ****     {
 10363              		.loc 1 2876 8 view .LVU2736
 10364 001e DBB9     		cbnz	r3, .L793
 10365              	.L788:
2880:Core/Src/bno055.c ****     {
 10366              		.loc 1 2880 5 is_stmt 1 view .LVU2737
ARM GAS  /tmp/ccO72alg.s 			page 340


2880:Core/Src/bno055.c ****     {
 10367              		.loc 1 2880 8 is_stmt 0 view .LVU2738
 10368 0020 0CBB     		cbnz	r4, .L790
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10369              		.loc 1 2883 9 is_stmt 1 view .LVU2739
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10370              		.loc 1 2883 21 is_stmt 0 view .LVU2740
 10371 0022 0DF10600 		add	r0, sp, #6
 10372 0026 FFF7FEFF 		bl	bno055_read_accel_x
 10373              	.LVL1099:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10374              		.loc 1 2883 18 view .LVU2741
 10375 002a 54FA80F4 		uxtab	r4, r4, r0
 10376              	.LVL1100:
2883:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10377              		.loc 1 2883 18 view .LVU2742
 10378 002e 64B2     		sxtb	r4, r4
 10379              	.LVL1101:
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10380              		.loc 1 2884 9 is_stmt 1 view .LVU2743
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10381              		.loc 1 2884 17 is_stmt 0 view .LVU2744
 10382 0030 104B     		ldr	r3, .L794
 10383 0032 1B68     		ldr	r3, [r3]
 10384 0034 5B69     		ldr	r3, [r3, #20]
2884:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10385              		.loc 1 2884 9 view .LVU2745
 10386 0036 0120     		movs	r0, #1
 10387 0038 9847     		blx	r3
 10388              	.LVL1102:
2885:Core/Src/bno055.c ****         {
 10389              		.loc 1 2885 9 is_stmt 1 view .LVU2746
2885:Core/Src/bno055.c ****         {
 10390              		.loc 1 2885 12 is_stmt 0 view .LVU2747
 10391 003a BCB9     		cbnz	r4, .L791
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10392              		.loc 1 2888 13 is_stmt 1 view .LVU2748
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10393              		.loc 1 2888 46 is_stmt 0 view .LVU2749
 10394 003c BDF90600 		ldrsh	r0, [sp, #6]
 10395 0040 FFF7FEFF 		bl	__aeabi_i2d
 10396              	.LVL1103:
 10397 0044 0022     		movs	r2, #0
 10398 0046 0C4B     		ldr	r3, .L794+4
 10399 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10400              	.LVL1104:
2888:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10401              		.loc 1 2888 20 view .LVU2750
 10402 004c FFF7FEFF 		bl	__aeabi_d2f
 10403              	.LVL1105:
2889:Core/Src/bno055.c ****         }
 10404              		.loc 1 2889 13 is_stmt 1 view .LVU2751
2889:Core/Src/bno055.c ****         }
 10405              		.loc 1 2889 24 is_stmt 0 view .LVU2752
 10406 0050 2860     		str	r0, [r5]	@ float
 10407              	.LVL1106:
 10408              	.L789:
ARM GAS  /tmp/ccO72alg.s 			page 341


2901:Core/Src/bno055.c **** }
 10409              		.loc 1 2901 5 is_stmt 1 view .LVU2753
2902:Core/Src/bno055.c **** 
 10410              		.loc 1 2902 1 is_stmt 0 view .LVU2754
 10411 0052 2046     		mov	r0, r4
 10412 0054 03B0     		add	sp, sp, #12
 10413              	.LCFI355:
 10414              		.cfi_remember_state
 10415              		.cfi_def_cfa_offset 12
 10416              		@ sp needed
 10417 0056 30BD     		pop	{r4, r5, pc}
 10418              	.LVL1107:
 10419              	.L793:
 10420              	.LCFI356:
 10421              		.cfi_restore_state
2878:Core/Src/bno055.c ****     }
 10422              		.loc 1 2878 9 is_stmt 1 view .LVU2755
2878:Core/Src/bno055.c ****     }
 10423              		.loc 1 2878 21 is_stmt 0 view .LVU2756
 10424 0058 0020     		movs	r0, #0
 10425 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10426              	.LVL1108:
2878:Core/Src/bno055.c ****     }
 10427              		.loc 1 2878 18 view .LVU2757
 10428 005e 54FA80F4 		uxtab	r4, r4, r0
 10429              	.LVL1109:
2878:Core/Src/bno055.c ****     }
 10430              		.loc 1 2878 18 view .LVU2758
 10431 0062 64B2     		sxtb	r4, r4
 10432              	.LVL1110:
2878:Core/Src/bno055.c ****     }
 10433              		.loc 1 2878 18 view .LVU2759
 10434 0064 DCE7     		b	.L788
 10435              	.L790:
2898:Core/Src/bno055.c ****     }
 10436              		.loc 1 2898 18 view .LVU2760
 10437 0066 4FF0FF34 		mov	r4, #-1
 10438              	.LVL1111:
2898:Core/Src/bno055.c ****     }
 10439              		.loc 1 2898 18 view .LVU2761
 10440 006a F2E7     		b	.L789
 10441              	.LVL1112:
 10442              	.L791:
2893:Core/Src/bno055.c ****         }
 10443              		.loc 1 2893 22 view .LVU2762
 10444 006c 4FF0FF34 		mov	r4, #-1
 10445              	.LVL1113:
2893:Core/Src/bno055.c ****         }
 10446              		.loc 1 2893 22 view .LVU2763
 10447 0070 EFE7     		b	.L789
 10448              	.L795:
 10449 0072 00BF     		.align	2
 10450              	.L794:
 10451 0074 00000000 		.word	.LANCHOR0
 10452 0078 00005940 		.word	1079574528
 10453              		.cfi_endproc
 10454              	.LFE41:
ARM GAS  /tmp/ccO72alg.s 			page 342


 10456              		.section	.text.bno055_convert_float_accel_x_mg,"ax",%progbits
 10457              		.align	1
 10458              		.global	bno055_convert_float_accel_x_mg
 10459              		.syntax unified
 10460              		.thumb
 10461              		.thumb_func
 10463              	bno055_convert_float_accel_x_mg:
 10464              	.LVL1114:
 10465              	.LFB42:
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10466              		.loc 1 2920 1 is_stmt 1 view -0
 10467              		.cfi_startproc
 10468              		@ args = 0, pretend = 0, frame = 8
 10469              		@ frame_needed = 0, uses_anonymous_args = 0
2920:Core/Src/bno055.c ****     /* Variable used to return value of
 10470              		.loc 1 2920 1 is_stmt 0 view .LVU2765
 10471 0000 30B5     		push	{r4, r5, lr}
 10472              	.LCFI357:
 10473              		.cfi_def_cfa_offset 12
 10474              		.cfi_offset 4, -12
 10475              		.cfi_offset 5, -8
 10476              		.cfi_offset 14, -4
 10477 0002 83B0     		sub	sp, sp, #12
 10478              	.LCFI358:
 10479              		.cfi_def_cfa_offset 24
 10480 0004 0546     		mov	r5, r0
2923:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 10481              		.loc 1 2923 5 is_stmt 1 view .LVU2766
 10482              	.LVL1115:
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10483              		.loc 1 2924 5 view .LVU2767
2924:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10484              		.loc 1 2924 9 is_stmt 0 view .LVU2768
 10485 0006 0023     		movs	r3, #0
 10486 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2925:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10487              		.loc 1 2925 5 is_stmt 1 view .LVU2769
 10488              	.LVL1116:
2926:Core/Src/bno055.c **** 
 10489              		.loc 1 2926 5 view .LVU2770
2926:Core/Src/bno055.c **** 
 10490              		.loc 1 2926 8 is_stmt 0 view .LVU2771
 10491 000c 8DF80530 		strb	r3, [sp, #5]
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10492              		.loc 1 2930 5 is_stmt 1 view .LVU2772
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10493              		.loc 1 2930 16 is_stmt 0 view .LVU2773
 10494 0010 0DF10500 		add	r0, sp, #5
 10495              	.LVL1117:
2930:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10496              		.loc 1 2930 16 view .LVU2774
 10497 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10498              	.LVL1118:
 10499 0018 0446     		mov	r4, r0
 10500              	.LVL1119:
2931:Core/Src/bno055.c ****     {
 10501              		.loc 1 2931 5 is_stmt 1 view .LVU2775
ARM GAS  /tmp/ccO72alg.s 			page 343


2931:Core/Src/bno055.c ****     {
 10502              		.loc 1 2931 23 is_stmt 0 view .LVU2776
 10503 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2931:Core/Src/bno055.c ****     {
 10504              		.loc 1 2931 8 view .LVU2777
 10505 001e 012B     		cmp	r3, #1
 10506 0020 12D1     		bne	.L802
 10507              	.L797:
2935:Core/Src/bno055.c ****     {
 10508              		.loc 1 2935 5 is_stmt 1 view .LVU2778
2935:Core/Src/bno055.c ****     {
 10509              		.loc 1 2935 8 is_stmt 0 view .LVU2779
 10510 0022 C4B9     		cbnz	r4, .L799
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10511              		.loc 1 2938 9 is_stmt 1 view .LVU2780
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10512              		.loc 1 2938 21 is_stmt 0 view .LVU2781
 10513 0024 0DF10600 		add	r0, sp, #6
 10514 0028 FFF7FEFF 		bl	bno055_read_accel_x
 10515              	.LVL1120:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10516              		.loc 1 2938 18 view .LVU2782
 10517 002c 54FA80F4 		uxtab	r4, r4, r0
 10518              	.LVL1121:
2938:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10519              		.loc 1 2938 18 view .LVU2783
 10520 0030 64B2     		sxtb	r4, r4
 10521              	.LVL1122:
2939:Core/Src/bno055.c ****         {
 10522              		.loc 1 2939 9 is_stmt 1 view .LVU2784
2939:Core/Src/bno055.c ****         {
 10523              		.loc 1 2939 12 is_stmt 0 view .LVU2785
 10524 0032 9CB9     		cbnz	r4, .L800
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10525              		.loc 1 2942 13 is_stmt 1 view .LVU2786
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10526              		.loc 1 2942 46 is_stmt 0 view .LVU2787
 10527 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10528 0038 FFF7FEFF 		bl	__aeabi_i2d
 10529              	.LVL1123:
2942:Core/Src/bno055.c ****             *accel_x_f = data_f;
 10530              		.loc 1 2942 20 view .LVU2788
 10531 003c FFF7FEFF 		bl	__aeabi_d2f
 10532              	.LVL1124:
2943:Core/Src/bno055.c ****         }
 10533              		.loc 1 2943 13 is_stmt 1 view .LVU2789
2943:Core/Src/bno055.c ****         }
 10534              		.loc 1 2943 24 is_stmt 0 view .LVU2790
 10535 0040 2860     		str	r0, [r5]	@ float
 10536              	.LVL1125:
 10537              	.L798:
2955:Core/Src/bno055.c **** }
 10538              		.loc 1 2955 5 is_stmt 1 view .LVU2791
2956:Core/Src/bno055.c **** 
 10539              		.loc 1 2956 1 is_stmt 0 view .LVU2792
 10540 0042 2046     		mov	r0, r4
 10541 0044 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 344


 10542              	.LCFI359:
 10543              		.cfi_remember_state
 10544              		.cfi_def_cfa_offset 12
 10545              		@ sp needed
 10546 0046 30BD     		pop	{r4, r5, pc}
 10547              	.LVL1126:
 10548              	.L802:
 10549              	.LCFI360:
 10550              		.cfi_restore_state
2933:Core/Src/bno055.c ****     }
 10551              		.loc 1 2933 9 is_stmt 1 view .LVU2793
2933:Core/Src/bno055.c ****     }
 10552              		.loc 1 2933 21 is_stmt 0 view .LVU2794
 10553 0048 0120     		movs	r0, #1
 10554 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10555              	.LVL1127:
2933:Core/Src/bno055.c ****     }
 10556              		.loc 1 2933 18 view .LVU2795
 10557 004e 54FA80F4 		uxtab	r4, r4, r0
 10558              	.LVL1128:
2933:Core/Src/bno055.c ****     }
 10559              		.loc 1 2933 18 view .LVU2796
 10560 0052 64B2     		sxtb	r4, r4
 10561              	.LVL1129:
2933:Core/Src/bno055.c ****     }
 10562              		.loc 1 2933 18 view .LVU2797
 10563 0054 E5E7     		b	.L797
 10564              	.L799:
2952:Core/Src/bno055.c ****     }
 10565              		.loc 1 2952 18 view .LVU2798
 10566 0056 4FF0FF34 		mov	r4, #-1
 10567              	.LVL1130:
2952:Core/Src/bno055.c ****     }
 10568              		.loc 1 2952 18 view .LVU2799
 10569 005a F2E7     		b	.L798
 10570              	.LVL1131:
 10571              	.L800:
2947:Core/Src/bno055.c ****         }
 10572              		.loc 1 2947 22 view .LVU2800
 10573 005c 4FF0FF34 		mov	r4, #-1
 10574              	.LVL1132:
2947:Core/Src/bno055.c ****         }
 10575              		.loc 1 2947 22 view .LVU2801
 10576 0060 EFE7     		b	.L798
 10577              		.cfi_endproc
 10578              	.LFE42:
 10580              		.section	.text.bno055_convert_float_accel_y_msq,"ax",%progbits
 10581              		.align	1
 10582              		.global	bno055_convert_float_accel_y_msq
 10583              		.syntax unified
 10584              		.thumb
 10585              		.thumb_func
 10587              	bno055_convert_float_accel_y_msq:
 10588              	.LVL1133:
 10589              	.LFB43:
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10590              		.loc 1 2973 1 is_stmt 1 view -0
ARM GAS  /tmp/ccO72alg.s 			page 345


 10591              		.cfi_startproc
 10592              		@ args = 0, pretend = 0, frame = 8
 10593              		@ frame_needed = 0, uses_anonymous_args = 0
2973:Core/Src/bno055.c ****     /* Variable used to return value of
 10594              		.loc 1 2973 1 is_stmt 0 view .LVU2803
 10595 0000 30B5     		push	{r4, r5, lr}
 10596              	.LCFI361:
 10597              		.cfi_def_cfa_offset 12
 10598              		.cfi_offset 4, -12
 10599              		.cfi_offset 5, -8
 10600              		.cfi_offset 14, -4
 10601 0002 83B0     		sub	sp, sp, #12
 10602              	.LCFI362:
 10603              		.cfi_def_cfa_offset 24
 10604 0004 0546     		mov	r5, r0
2976:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10605              		.loc 1 2976 5 is_stmt 1 view .LVU2804
 10606              	.LVL1134:
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10607              		.loc 1 2977 5 view .LVU2805
2977:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10608              		.loc 1 2977 9 is_stmt 0 view .LVU2806
 10609 0006 0023     		movs	r3, #0
 10610 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
2978:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10611              		.loc 1 2978 5 is_stmt 1 view .LVU2807
 10612              	.LVL1135:
2979:Core/Src/bno055.c **** 
 10613              		.loc 1 2979 5 view .LVU2808
2979:Core/Src/bno055.c **** 
 10614              		.loc 1 2979 8 is_stmt 0 view .LVU2809
 10615 000c 8DF80530 		strb	r3, [sp, #5]
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10616              		.loc 1 2983 5 is_stmt 1 view .LVU2810
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10617              		.loc 1 2983 16 is_stmt 0 view .LVU2811
 10618 0010 0DF10500 		add	r0, sp, #5
 10619              	.LVL1136:
2983:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10620              		.loc 1 2983 16 view .LVU2812
 10621 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10622              	.LVL1137:
 10623 0018 0446     		mov	r4, r0
 10624              	.LVL1138:
2984:Core/Src/bno055.c ****     {
 10625              		.loc 1 2984 5 is_stmt 1 view .LVU2813
2984:Core/Src/bno055.c ****     {
 10626              		.loc 1 2984 23 is_stmt 0 view .LVU2814
 10627 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
2984:Core/Src/bno055.c ****     {
 10628              		.loc 1 2984 8 view .LVU2815
 10629 001e DBB9     		cbnz	r3, .L809
 10630              	.L804:
2988:Core/Src/bno055.c ****     {
 10631              		.loc 1 2988 5 is_stmt 1 view .LVU2816
2988:Core/Src/bno055.c ****     {
 10632              		.loc 1 2988 8 is_stmt 0 view .LVU2817
ARM GAS  /tmp/ccO72alg.s 			page 346


 10633 0020 0CBB     		cbnz	r4, .L806
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10634              		.loc 1 2990 9 is_stmt 1 view .LVU2818
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10635              		.loc 1 2990 21 is_stmt 0 view .LVU2819
 10636 0022 0DF10600 		add	r0, sp, #6
 10637 0026 FFF7FEFF 		bl	bno055_read_accel_y
 10638              	.LVL1139:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10639              		.loc 1 2990 18 view .LVU2820
 10640 002a 54FA80F4 		uxtab	r4, r4, r0
 10641              	.LVL1140:
2990:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10642              		.loc 1 2990 18 view .LVU2821
 10643 002e 64B2     		sxtb	r4, r4
 10644              	.LVL1141:
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10645              		.loc 1 2991 9 is_stmt 1 view .LVU2822
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10646              		.loc 1 2991 17 is_stmt 0 view .LVU2823
 10647 0030 104B     		ldr	r3, .L810
 10648 0032 1B68     		ldr	r3, [r3]
 10649 0034 5B69     		ldr	r3, [r3, #20]
2991:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10650              		.loc 1 2991 9 view .LVU2824
 10651 0036 0120     		movs	r0, #1
 10652 0038 9847     		blx	r3
 10653              	.LVL1142:
2992:Core/Src/bno055.c ****         {
 10654              		.loc 1 2992 9 is_stmt 1 view .LVU2825
2992:Core/Src/bno055.c ****         {
 10655              		.loc 1 2992 12 is_stmt 0 view .LVU2826
 10656 003a BCB9     		cbnz	r4, .L807
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10657              		.loc 1 2995 13 is_stmt 1 view .LVU2827
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10658              		.loc 1 2995 46 is_stmt 0 view .LVU2828
 10659 003c BDF90600 		ldrsh	r0, [sp, #6]
 10660 0040 FFF7FEFF 		bl	__aeabi_i2d
 10661              	.LVL1143:
 10662 0044 0022     		movs	r2, #0
 10663 0046 0C4B     		ldr	r3, .L810+4
 10664 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10665              	.LVL1144:
2995:Core/Src/bno055.c ****             *accel_y_f = data_f;
 10666              		.loc 1 2995 20 view .LVU2829
 10667 004c FFF7FEFF 		bl	__aeabi_d2f
 10668              	.LVL1145:
2996:Core/Src/bno055.c ****         }
 10669              		.loc 1 2996 13 is_stmt 1 view .LVU2830
2996:Core/Src/bno055.c ****         }
 10670              		.loc 1 2996 24 is_stmt 0 view .LVU2831
 10671 0050 2860     		str	r0, [r5]	@ float
 10672              	.LVL1146:
 10673              	.L805:
3008:Core/Src/bno055.c **** }
 10674              		.loc 1 3008 5 is_stmt 1 view .LVU2832
ARM GAS  /tmp/ccO72alg.s 			page 347


3009:Core/Src/bno055.c **** 
 10675              		.loc 1 3009 1 is_stmt 0 view .LVU2833
 10676 0052 2046     		mov	r0, r4
 10677 0054 03B0     		add	sp, sp, #12
 10678              	.LCFI363:
 10679              		.cfi_remember_state
 10680              		.cfi_def_cfa_offset 12
 10681              		@ sp needed
 10682 0056 30BD     		pop	{r4, r5, pc}
 10683              	.LVL1147:
 10684              	.L809:
 10685              	.LCFI364:
 10686              		.cfi_restore_state
2986:Core/Src/bno055.c ****     }
 10687              		.loc 1 2986 9 is_stmt 1 view .LVU2834
2986:Core/Src/bno055.c ****     }
 10688              		.loc 1 2986 21 is_stmt 0 view .LVU2835
 10689 0058 0020     		movs	r0, #0
 10690 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10691              	.LVL1148:
2986:Core/Src/bno055.c ****     }
 10692              		.loc 1 2986 18 view .LVU2836
 10693 005e 54FA80F4 		uxtab	r4, r4, r0
 10694              	.LVL1149:
2986:Core/Src/bno055.c ****     }
 10695              		.loc 1 2986 18 view .LVU2837
 10696 0062 64B2     		sxtb	r4, r4
 10697              	.LVL1150:
2986:Core/Src/bno055.c ****     }
 10698              		.loc 1 2986 18 view .LVU2838
 10699 0064 DCE7     		b	.L804
 10700              	.L806:
3005:Core/Src/bno055.c ****     }
 10701              		.loc 1 3005 18 view .LVU2839
 10702 0066 4FF0FF34 		mov	r4, #-1
 10703              	.LVL1151:
3005:Core/Src/bno055.c ****     }
 10704              		.loc 1 3005 18 view .LVU2840
 10705 006a F2E7     		b	.L805
 10706              	.LVL1152:
 10707              	.L807:
3000:Core/Src/bno055.c ****         }
 10708              		.loc 1 3000 22 view .LVU2841
 10709 006c 4FF0FF34 		mov	r4, #-1
 10710              	.LVL1153:
3000:Core/Src/bno055.c ****         }
 10711              		.loc 1 3000 22 view .LVU2842
 10712 0070 EFE7     		b	.L805
 10713              	.L811:
 10714 0072 00BF     		.align	2
 10715              	.L810:
 10716 0074 00000000 		.word	.LANCHOR0
 10717 0078 00005940 		.word	1079574528
 10718              		.cfi_endproc
 10719              	.LFE43:
 10721              		.section	.text.bno055_convert_float_accel_y_mg,"ax",%progbits
 10722              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 348


 10723              		.global	bno055_convert_float_accel_y_mg
 10724              		.syntax unified
 10725              		.thumb
 10726              		.thumb_func
 10728              	bno055_convert_float_accel_y_mg:
 10729              	.LVL1154:
 10730              	.LFB44:
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10731              		.loc 1 3025 1 is_stmt 1 view -0
 10732              		.cfi_startproc
 10733              		@ args = 0, pretend = 0, frame = 8
 10734              		@ frame_needed = 0, uses_anonymous_args = 0
3025:Core/Src/bno055.c ****     /* Variable used to return value of
 10735              		.loc 1 3025 1 is_stmt 0 view .LVU2844
 10736 0000 30B5     		push	{r4, r5, lr}
 10737              	.LCFI365:
 10738              		.cfi_def_cfa_offset 12
 10739              		.cfi_offset 4, -12
 10740              		.cfi_offset 5, -8
 10741              		.cfi_offset 14, -4
 10742 0002 83B0     		sub	sp, sp, #12
 10743              	.LCFI366:
 10744              		.cfi_def_cfa_offset 24
 10745 0004 0546     		mov	r5, r0
3028:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 10746              		.loc 1 3028 5 is_stmt 1 view .LVU2845
 10747              	.LVL1155:
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10748              		.loc 1 3029 5 view .LVU2846
3029:Core/Src/bno055.c ****     float data = BNO055_INIT_VALUE;
 10749              		.loc 1 3029 9 is_stmt 0 view .LVU2847
 10750 0006 0023     		movs	r3, #0
 10751 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3030:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10752              		.loc 1 3030 5 is_stmt 1 view .LVU2848
 10753              	.LVL1156:
3031:Core/Src/bno055.c **** 
 10754              		.loc 1 3031 5 view .LVU2849
3031:Core/Src/bno055.c **** 
 10755              		.loc 1 3031 8 is_stmt 0 view .LVU2850
 10756 000c 8DF80530 		strb	r3, [sp, #5]
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10757              		.loc 1 3035 5 is_stmt 1 view .LVU2851
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10758              		.loc 1 3035 16 is_stmt 0 view .LVU2852
 10759 0010 0DF10500 		add	r0, sp, #5
 10760              	.LVL1157:
3035:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 10761              		.loc 1 3035 16 view .LVU2853
 10762 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10763              	.LVL1158:
 10764 0018 0446     		mov	r4, r0
 10765              	.LVL1159:
3036:Core/Src/bno055.c ****     {
 10766              		.loc 1 3036 5 is_stmt 1 view .LVU2854
3036:Core/Src/bno055.c ****     {
 10767              		.loc 1 3036 23 is_stmt 0 view .LVU2855
ARM GAS  /tmp/ccO72alg.s 			page 349


 10768 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3036:Core/Src/bno055.c ****     {
 10769              		.loc 1 3036 8 view .LVU2856
 10770 001e 012B     		cmp	r3, #1
 10771 0020 12D1     		bne	.L818
 10772              	.L813:
3040:Core/Src/bno055.c ****     {
 10773              		.loc 1 3040 5 is_stmt 1 view .LVU2857
3040:Core/Src/bno055.c ****     {
 10774              		.loc 1 3040 8 is_stmt 0 view .LVU2858
 10775 0022 C4B9     		cbnz	r4, .L815
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10776              		.loc 1 3043 9 is_stmt 1 view .LVU2859
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10777              		.loc 1 3043 21 is_stmt 0 view .LVU2860
 10778 0024 0DF10600 		add	r0, sp, #6
 10779 0028 FFF7FEFF 		bl	bno055_read_accel_y
 10780              	.LVL1160:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10781              		.loc 1 3043 18 view .LVU2861
 10782 002c 54FA80F4 		uxtab	r4, r4, r0
 10783              	.LVL1161:
3043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10784              		.loc 1 3043 18 view .LVU2862
 10785 0030 64B2     		sxtb	r4, r4
 10786              	.LVL1162:
3044:Core/Src/bno055.c ****         {
 10787              		.loc 1 3044 9 is_stmt 1 view .LVU2863
3044:Core/Src/bno055.c ****         {
 10788              		.loc 1 3044 12 is_stmt 0 view .LVU2864
 10789 0032 9CB9     		cbnz	r4, .L816
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10790              		.loc 1 3047 13 is_stmt 1 view .LVU2865
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10791              		.loc 1 3047 44 is_stmt 0 view .LVU2866
 10792 0034 BDF90600 		ldrsh	r0, [sp, #6]
 10793 0038 FFF7FEFF 		bl	__aeabi_i2d
 10794              	.LVL1163:
3047:Core/Src/bno055.c ****             *accel_y_f = data;
 10795              		.loc 1 3047 18 view .LVU2867
 10796 003c FFF7FEFF 		bl	__aeabi_d2f
 10797              	.LVL1164:
3048:Core/Src/bno055.c ****         }
 10798              		.loc 1 3048 13 is_stmt 1 view .LVU2868
3048:Core/Src/bno055.c ****         }
 10799              		.loc 1 3048 24 is_stmt 0 view .LVU2869
 10800 0040 2860     		str	r0, [r5]	@ float
 10801              	.LVL1165:
 10802              	.L814:
3060:Core/Src/bno055.c **** }
 10803              		.loc 1 3060 5 is_stmt 1 view .LVU2870
3061:Core/Src/bno055.c **** 
 10804              		.loc 1 3061 1 is_stmt 0 view .LVU2871
 10805 0042 2046     		mov	r0, r4
 10806 0044 03B0     		add	sp, sp, #12
 10807              	.LCFI367:
 10808              		.cfi_remember_state
ARM GAS  /tmp/ccO72alg.s 			page 350


 10809              		.cfi_def_cfa_offset 12
 10810              		@ sp needed
 10811 0046 30BD     		pop	{r4, r5, pc}
 10812              	.LVL1166:
 10813              	.L818:
 10814              	.LCFI368:
 10815              		.cfi_restore_state
3038:Core/Src/bno055.c ****     }
 10816              		.loc 1 3038 9 is_stmt 1 view .LVU2872
3038:Core/Src/bno055.c ****     }
 10817              		.loc 1 3038 21 is_stmt 0 view .LVU2873
 10818 0048 0120     		movs	r0, #1
 10819 004a FFF7FEFF 		bl	bno055_set_accel_unit
 10820              	.LVL1167:
3038:Core/Src/bno055.c ****     }
 10821              		.loc 1 3038 18 view .LVU2874
 10822 004e 54FA80F4 		uxtab	r4, r4, r0
 10823              	.LVL1168:
3038:Core/Src/bno055.c ****     }
 10824              		.loc 1 3038 18 view .LVU2875
 10825 0052 64B2     		sxtb	r4, r4
 10826              	.LVL1169:
3038:Core/Src/bno055.c ****     }
 10827              		.loc 1 3038 18 view .LVU2876
 10828 0054 E5E7     		b	.L813
 10829              	.L815:
3057:Core/Src/bno055.c ****     }
 10830              		.loc 1 3057 18 view .LVU2877
 10831 0056 4FF0FF34 		mov	r4, #-1
 10832              	.LVL1170:
3057:Core/Src/bno055.c ****     }
 10833              		.loc 1 3057 18 view .LVU2878
 10834 005a F2E7     		b	.L814
 10835              	.LVL1171:
 10836              	.L816:
3052:Core/Src/bno055.c ****         }
 10837              		.loc 1 3052 22 view .LVU2879
 10838 005c 4FF0FF34 		mov	r4, #-1
 10839              	.LVL1172:
3052:Core/Src/bno055.c ****         }
 10840              		.loc 1 3052 22 view .LVU2880
 10841 0060 EFE7     		b	.L814
 10842              		.cfi_endproc
 10843              	.LFE44:
 10845              		.section	.text.bno055_convert_float_accel_z_msq,"ax",%progbits
 10846              		.align	1
 10847              		.global	bno055_convert_float_accel_z_msq
 10848              		.syntax unified
 10849              		.thumb
 10850              		.thumb_func
 10852              	bno055_convert_float_accel_z_msq:
 10853              	.LVL1173:
 10854              	.LFB45:
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10855              		.loc 1 3078 1 is_stmt 1 view -0
 10856              		.cfi_startproc
 10857              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccO72alg.s 			page 351


 10858              		@ frame_needed = 0, uses_anonymous_args = 0
3078:Core/Src/bno055.c ****     /* Variable used to return value of
 10859              		.loc 1 3078 1 is_stmt 0 view .LVU2882
 10860 0000 30B5     		push	{r4, r5, lr}
 10861              	.LCFI369:
 10862              		.cfi_def_cfa_offset 12
 10863              		.cfi_offset 4, -12
 10864              		.cfi_offset 5, -8
 10865              		.cfi_offset 14, -4
 10866 0002 83B0     		sub	sp, sp, #12
 10867              	.LCFI370:
 10868              		.cfi_def_cfa_offset 24
 10869 0004 0546     		mov	r5, r0
3081:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 10870              		.loc 1 3081 5 is_stmt 1 view .LVU2883
 10871              	.LVL1174:
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10872              		.loc 1 3082 5 view .LVU2884
3082:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 10873              		.loc 1 3082 9 is_stmt 0 view .LVU2885
 10874 0006 0023     		movs	r3, #0
 10875 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3083:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 10876              		.loc 1 3083 5 is_stmt 1 view .LVU2886
 10877              	.LVL1175:
3084:Core/Src/bno055.c **** 
 10878              		.loc 1 3084 5 view .LVU2887
3084:Core/Src/bno055.c **** 
 10879              		.loc 1 3084 8 is_stmt 0 view .LVU2888
 10880 000c 8DF80530 		strb	r3, [sp, #5]
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10881              		.loc 1 3088 5 is_stmt 1 view .LVU2889
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10882              		.loc 1 3088 16 is_stmt 0 view .LVU2890
 10883 0010 0DF10500 		add	r0, sp, #5
 10884              	.LVL1176:
3088:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 10885              		.loc 1 3088 16 view .LVU2891
 10886 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 10887              	.LVL1177:
 10888 0018 0446     		mov	r4, r0
 10889              	.LVL1178:
3089:Core/Src/bno055.c ****     {
 10890              		.loc 1 3089 5 is_stmt 1 view .LVU2892
3089:Core/Src/bno055.c ****     {
 10891              		.loc 1 3089 23 is_stmt 0 view .LVU2893
 10892 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3089:Core/Src/bno055.c ****     {
 10893              		.loc 1 3089 8 view .LVU2894
 10894 001e DBB9     		cbnz	r3, .L825
 10895              	.L820:
3093:Core/Src/bno055.c ****     {
 10896              		.loc 1 3093 5 is_stmt 1 view .LVU2895
3093:Core/Src/bno055.c ****     {
 10897              		.loc 1 3093 8 is_stmt 0 view .LVU2896
 10898 0020 0CBB     		cbnz	r4, .L822
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 352


 10899              		.loc 1 3096 9 is_stmt 1 view .LVU2897
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10900              		.loc 1 3096 21 is_stmt 0 view .LVU2898
 10901 0022 0DF10600 		add	r0, sp, #6
 10902 0026 FFF7FEFF 		bl	bno055_read_accel_z
 10903              	.LVL1179:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10904              		.loc 1 3096 18 view .LVU2899
 10905 002a 54FA80F4 		uxtab	r4, r4, r0
 10906              	.LVL1180:
3096:Core/Src/bno055.c ****         p_bno055->delay_msec(BNO055_GEN_READ_WRITE_LENGTH);
 10907              		.loc 1 3096 18 view .LVU2900
 10908 002e 64B2     		sxtb	r4, r4
 10909              	.LVL1181:
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10910              		.loc 1 3097 9 is_stmt 1 view .LVU2901
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10911              		.loc 1 3097 17 is_stmt 0 view .LVU2902
 10912 0030 104B     		ldr	r3, .L826
 10913 0032 1B68     		ldr	r3, [r3]
 10914 0034 5B69     		ldr	r3, [r3, #20]
3097:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 10915              		.loc 1 3097 9 view .LVU2903
 10916 0036 0120     		movs	r0, #1
 10917 0038 9847     		blx	r3
 10918              	.LVL1182:
3098:Core/Src/bno055.c ****         {
 10919              		.loc 1 3098 9 is_stmt 1 view .LVU2904
3098:Core/Src/bno055.c ****         {
 10920              		.loc 1 3098 12 is_stmt 0 view .LVU2905
 10921 003a BCB9     		cbnz	r4, .L823
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10922              		.loc 1 3101 13 is_stmt 1 view .LVU2906
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10923              		.loc 1 3101 46 is_stmt 0 view .LVU2907
 10924 003c BDF90600 		ldrsh	r0, [sp, #6]
 10925 0040 FFF7FEFF 		bl	__aeabi_i2d
 10926              	.LVL1183:
 10927 0044 0022     		movs	r2, #0
 10928 0046 0C4B     		ldr	r3, .L826+4
 10929 0048 FFF7FEFF 		bl	__aeabi_ddiv
 10930              	.LVL1184:
3101:Core/Src/bno055.c ****             *accel_z_f = data_f;
 10931              		.loc 1 3101 20 view .LVU2908
 10932 004c FFF7FEFF 		bl	__aeabi_d2f
 10933              	.LVL1185:
3102:Core/Src/bno055.c ****         }
 10934              		.loc 1 3102 13 is_stmt 1 view .LVU2909
3102:Core/Src/bno055.c ****         }
 10935              		.loc 1 3102 24 is_stmt 0 view .LVU2910
 10936 0050 2860     		str	r0, [r5]	@ float
 10937              	.LVL1186:
 10938              	.L821:
3114:Core/Src/bno055.c **** }
 10939              		.loc 1 3114 5 is_stmt 1 view .LVU2911
3115:Core/Src/bno055.c **** 
 10940              		.loc 1 3115 1 is_stmt 0 view .LVU2912
ARM GAS  /tmp/ccO72alg.s 			page 353


 10941 0052 2046     		mov	r0, r4
 10942 0054 03B0     		add	sp, sp, #12
 10943              	.LCFI371:
 10944              		.cfi_remember_state
 10945              		.cfi_def_cfa_offset 12
 10946              		@ sp needed
 10947 0056 30BD     		pop	{r4, r5, pc}
 10948              	.LVL1187:
 10949              	.L825:
 10950              	.LCFI372:
 10951              		.cfi_restore_state
3091:Core/Src/bno055.c ****     }
 10952              		.loc 1 3091 9 is_stmt 1 view .LVU2913
3091:Core/Src/bno055.c ****     }
 10953              		.loc 1 3091 21 is_stmt 0 view .LVU2914
 10954 0058 0020     		movs	r0, #0
 10955 005a FFF7FEFF 		bl	bno055_set_accel_unit
 10956              	.LVL1188:
3091:Core/Src/bno055.c ****     }
 10957              		.loc 1 3091 18 view .LVU2915
 10958 005e 54FA80F4 		uxtab	r4, r4, r0
 10959              	.LVL1189:
3091:Core/Src/bno055.c ****     }
 10960              		.loc 1 3091 18 view .LVU2916
 10961 0062 64B2     		sxtb	r4, r4
 10962              	.LVL1190:
3091:Core/Src/bno055.c ****     }
 10963              		.loc 1 3091 18 view .LVU2917
 10964 0064 DCE7     		b	.L820
 10965              	.L822:
3111:Core/Src/bno055.c ****     }
 10966              		.loc 1 3111 18 view .LVU2918
 10967 0066 4FF0FF34 		mov	r4, #-1
 10968              	.LVL1191:
3111:Core/Src/bno055.c ****     }
 10969              		.loc 1 3111 18 view .LVU2919
 10970 006a F2E7     		b	.L821
 10971              	.LVL1192:
 10972              	.L823:
3106:Core/Src/bno055.c ****         }
 10973              		.loc 1 3106 22 view .LVU2920
 10974 006c 4FF0FF34 		mov	r4, #-1
 10975              	.LVL1193:
3106:Core/Src/bno055.c ****         }
 10976              		.loc 1 3106 22 view .LVU2921
 10977 0070 EFE7     		b	.L821
 10978              	.L827:
 10979 0072 00BF     		.align	2
 10980              	.L826:
 10981 0074 00000000 		.word	.LANCHOR0
 10982 0078 00005940 		.word	1079574528
 10983              		.cfi_endproc
 10984              	.LFE45:
 10986              		.section	.text.bno055_convert_float_accel_z_mg,"ax",%progbits
 10987              		.align	1
 10988              		.global	bno055_convert_float_accel_z_mg
 10989              		.syntax unified
ARM GAS  /tmp/ccO72alg.s 			page 354


 10990              		.thumb
 10991              		.thumb_func
 10993              	bno055_convert_float_accel_z_mg:
 10994              	.LVL1194:
 10995              	.LFB46:
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 10996              		.loc 1 3132 1 is_stmt 1 view -0
 10997              		.cfi_startproc
 10998              		@ args = 0, pretend = 0, frame = 8
 10999              		@ frame_needed = 0, uses_anonymous_args = 0
3132:Core/Src/bno055.c ****     /* Variable used to return value of
 11000              		.loc 1 3132 1 is_stmt 0 view .LVU2923
 11001 0000 30B5     		push	{r4, r5, lr}
 11002              	.LCFI373:
 11003              		.cfi_def_cfa_offset 12
 11004              		.cfi_offset 4, -12
 11005              		.cfi_offset 5, -8
 11006              		.cfi_offset 14, -4
 11007 0002 83B0     		sub	sp, sp, #12
 11008              	.LCFI374:
 11009              		.cfi_def_cfa_offset 24
 11010 0004 0546     		mov	r5, r0
3135:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 11011              		.loc 1 3135 5 is_stmt 1 view .LVU2924
 11012              	.LVL1195:
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 11013              		.loc 1 3136 5 view .LVU2925
3136:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 11014              		.loc 1 3136 9 is_stmt 0 view .LVU2926
 11015 0006 0023     		movs	r3, #0
 11016 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3137:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11017              		.loc 1 3137 5 is_stmt 1 view .LVU2927
 11018              	.LVL1196:
3138:Core/Src/bno055.c **** 
 11019              		.loc 1 3138 5 view .LVU2928
3138:Core/Src/bno055.c **** 
 11020              		.loc 1 3138 8 is_stmt 0 view .LVU2929
 11021 000c 8DF80530 		strb	r3, [sp, #5]
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11022              		.loc 1 3142 5 is_stmt 1 view .LVU2930
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11023              		.loc 1 3142 16 is_stmt 0 view .LVU2931
 11024 0010 0DF10500 		add	r0, sp, #5
 11025              	.LVL1197:
3142:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11026              		.loc 1 3142 16 view .LVU2932
 11027 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11028              	.LVL1198:
 11029 0018 0446     		mov	r4, r0
 11030              	.LVL1199:
3143:Core/Src/bno055.c ****     {
 11031              		.loc 1 3143 5 is_stmt 1 view .LVU2933
3143:Core/Src/bno055.c ****     {
 11032              		.loc 1 3143 23 is_stmt 0 view .LVU2934
 11033 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3143:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 355


 11034              		.loc 1 3143 8 view .LVU2935
 11035 001e 012B     		cmp	r3, #1
 11036 0020 12D1     		bne	.L834
 11037              	.L829:
3147:Core/Src/bno055.c ****     {
 11038              		.loc 1 3147 5 is_stmt 1 view .LVU2936
3147:Core/Src/bno055.c ****     {
 11039              		.loc 1 3147 8 is_stmt 0 view .LVU2937
 11040 0022 C4B9     		cbnz	r4, .L831
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11041              		.loc 1 3150 9 is_stmt 1 view .LVU2938
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11042              		.loc 1 3150 21 is_stmt 0 view .LVU2939
 11043 0024 0DF10600 		add	r0, sp, #6
 11044 0028 FFF7FEFF 		bl	bno055_read_accel_z
 11045              	.LVL1200:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11046              		.loc 1 3150 18 view .LVU2940
 11047 002c 54FA80F4 		uxtab	r4, r4, r0
 11048              	.LVL1201:
3150:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11049              		.loc 1 3150 18 view .LVU2941
 11050 0030 64B2     		sxtb	r4, r4
 11051              	.LVL1202:
3151:Core/Src/bno055.c ****         {
 11052              		.loc 1 3151 9 is_stmt 1 view .LVU2942
3151:Core/Src/bno055.c ****         {
 11053              		.loc 1 3151 12 is_stmt 0 view .LVU2943
 11054 0032 9CB9     		cbnz	r4, .L832
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11055              		.loc 1 3154 13 is_stmt 1 view .LVU2944
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11056              		.loc 1 3154 46 is_stmt 0 view .LVU2945
 11057 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11058 0038 FFF7FEFF 		bl	__aeabi_i2d
 11059              	.LVL1203:
3154:Core/Src/bno055.c ****             *accel_z_f = data_f;
 11060              		.loc 1 3154 20 view .LVU2946
 11061 003c FFF7FEFF 		bl	__aeabi_d2f
 11062              	.LVL1204:
3155:Core/Src/bno055.c ****         }
 11063              		.loc 1 3155 13 is_stmt 1 view .LVU2947
3155:Core/Src/bno055.c ****         }
 11064              		.loc 1 3155 24 is_stmt 0 view .LVU2948
 11065 0040 2860     		str	r0, [r5]	@ float
 11066              	.LVL1205:
 11067              	.L830:
3167:Core/Src/bno055.c **** }
 11068              		.loc 1 3167 5 is_stmt 1 view .LVU2949
3168:Core/Src/bno055.c **** 
 11069              		.loc 1 3168 1 is_stmt 0 view .LVU2950
 11070 0042 2046     		mov	r0, r4
 11071 0044 03B0     		add	sp, sp, #12
 11072              	.LCFI375:
 11073              		.cfi_remember_state
 11074              		.cfi_def_cfa_offset 12
 11075              		@ sp needed
ARM GAS  /tmp/ccO72alg.s 			page 356


 11076 0046 30BD     		pop	{r4, r5, pc}
 11077              	.LVL1206:
 11078              	.L834:
 11079              	.LCFI376:
 11080              		.cfi_restore_state
3145:Core/Src/bno055.c ****     }
 11081              		.loc 1 3145 9 is_stmt 1 view .LVU2951
3145:Core/Src/bno055.c ****     }
 11082              		.loc 1 3145 21 is_stmt 0 view .LVU2952
 11083 0048 0120     		movs	r0, #1
 11084 004a FFF7FEFF 		bl	bno055_set_accel_unit
 11085              	.LVL1207:
3145:Core/Src/bno055.c ****     }
 11086              		.loc 1 3145 18 view .LVU2953
 11087 004e 54FA80F4 		uxtab	r4, r4, r0
 11088              	.LVL1208:
3145:Core/Src/bno055.c ****     }
 11089              		.loc 1 3145 18 view .LVU2954
 11090 0052 64B2     		sxtb	r4, r4
 11091              	.LVL1209:
3145:Core/Src/bno055.c ****     }
 11092              		.loc 1 3145 18 view .LVU2955
 11093 0054 E5E7     		b	.L829
 11094              	.L831:
3164:Core/Src/bno055.c ****     }
 11095              		.loc 1 3164 18 view .LVU2956
 11096 0056 4FF0FF34 		mov	r4, #-1
 11097              	.LVL1210:
3164:Core/Src/bno055.c ****     }
 11098              		.loc 1 3164 18 view .LVU2957
 11099 005a F2E7     		b	.L830
 11100              	.LVL1211:
 11101              	.L832:
3159:Core/Src/bno055.c ****         }
 11102              		.loc 1 3159 22 view .LVU2958
 11103 005c 4FF0FF34 		mov	r4, #-1
 11104              	.LVL1212:
3159:Core/Src/bno055.c ****         }
 11105              		.loc 1 3159 22 view .LVU2959
 11106 0060 EFE7     		b	.L830
 11107              		.cfi_endproc
 11108              	.LFE46:
 11110              		.section	.text.bno055_convert_float_accel_xyz_msq,"ax",%progbits
 11111              		.align	1
 11112              		.global	bno055_convert_float_accel_xyz_msq
 11113              		.syntax unified
 11114              		.thumb
 11115              		.thumb_func
 11117              	bno055_convert_float_accel_xyz_msq:
 11118              	.LVL1213:
 11119              	.LFB47:
3189:Core/Src/bno055.c ****     /* Variable used to return value of
 11120              		.loc 1 3189 1 is_stmt 1 view -0
 11121              		.cfi_startproc
 11122              		@ args = 0, pretend = 0, frame = 16
 11123              		@ frame_needed = 0, uses_anonymous_args = 0
3189:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccO72alg.s 			page 357


 11124              		.loc 1 3189 1 is_stmt 0 view .LVU2961
 11125 0000 30B5     		push	{r4, r5, lr}
 11126              	.LCFI377:
 11127              		.cfi_def_cfa_offset 12
 11128              		.cfi_offset 4, -12
 11129              		.cfi_offset 5, -8
 11130              		.cfi_offset 14, -4
 11131 0002 85B0     		sub	sp, sp, #20
 11132              	.LCFI378:
 11133              		.cfi_def_cfa_offset 32
 11134 0004 0546     		mov	r5, r0
3192:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11135              		.loc 1 3192 5 is_stmt 1 view .LVU2962
 11136              	.LVL1214:
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11137              		.loc 1 3193 5 view .LVU2963
3193:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11138              		.loc 1 3193 27 is_stmt 0 view .LVU2964
 11139 0006 0023     		movs	r3, #0
 11140 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11141 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11142 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3194:Core/Src/bno055.c **** 
 11143              		.loc 1 3194 5 is_stmt 1 view .LVU2965
3194:Core/Src/bno055.c **** 
 11144              		.loc 1 3194 8 is_stmt 0 view .LVU2966
 11145 0014 8DF80730 		strb	r3, [sp, #7]
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11146              		.loc 1 3198 5 is_stmt 1 view .LVU2967
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11147              		.loc 1 3198 16 is_stmt 0 view .LVU2968
 11148 0018 0DF10700 		add	r0, sp, #7
 11149              	.LVL1215:
3198:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11150              		.loc 1 3198 16 view .LVU2969
 11151 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11152              	.LVL1216:
 11153 0020 0446     		mov	r4, r0
 11154              	.LVL1217:
3199:Core/Src/bno055.c ****     {
 11155              		.loc 1 3199 5 is_stmt 1 view .LVU2970
3199:Core/Src/bno055.c ****     {
 11156              		.loc 1 3199 23 is_stmt 0 view .LVU2971
 11157 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3199:Core/Src/bno055.c ****     {
 11158              		.loc 1 3199 8 view .LVU2972
 11159 0026 5BBB     		cbnz	r3, .L841
 11160              	.L836:
3203:Core/Src/bno055.c ****     {
 11161              		.loc 1 3203 5 is_stmt 1 view .LVU2973
3203:Core/Src/bno055.c ****     {
 11162              		.loc 1 3203 8 is_stmt 0 view .LVU2974
 11163 0028 8CBB     		cbnz	r4, .L838
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11164              		.loc 1 3206 9 is_stmt 1 view .LVU2975
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11165              		.loc 1 3206 21 is_stmt 0 view .LVU2976
ARM GAS  /tmp/ccO72alg.s 			page 358


 11166 002a 02A8     		add	r0, sp, #8
 11167 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 11168              	.LVL1218:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11169              		.loc 1 3206 18 view .LVU2977
 11170 0030 54FA80F4 		uxtab	r4, r4, r0
 11171              	.LVL1219:
3206:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11172              		.loc 1 3206 18 view .LVU2978
 11173 0034 64B2     		sxtb	r4, r4
 11174              	.LVL1220:
3207:Core/Src/bno055.c ****         {
 11175              		.loc 1 3207 9 is_stmt 1 view .LVU2979
3207:Core/Src/bno055.c ****         {
 11176              		.loc 1 3207 12 is_stmt 0 view .LVU2980
 11177 0036 6CBB     		cbnz	r4, .L839
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11178              		.loc 1 3210 13 is_stmt 1 view .LVU2981
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11179              		.loc 1 3210 52 is_stmt 0 view .LVU2982
 11180 0038 BDF90800 		ldrsh	r0, [sp, #8]
 11181 003c FFF7FEFF 		bl	__aeabi_i2d
 11182              	.LVL1221:
 11183 0040 0022     		movs	r2, #0
 11184 0042 164B     		ldr	r3, .L842
 11185 0044 FFF7FEFF 		bl	__aeabi_ddiv
 11186              	.LVL1222:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11187              		.loc 1 3210 28 view .LVU2983
 11188 0048 FFF7FEFF 		bl	__aeabi_d2f
 11189              	.LVL1223:
3210:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 11190              		.loc 1 3210 26 view .LVU2984
 11191 004c 2860     		str	r0, [r5]	@ float
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11192              		.loc 1 3211 13 is_stmt 1 view .LVU2985
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11193              		.loc 1 3211 52 is_stmt 0 view .LVU2986
 11194 004e BDF90A00 		ldrsh	r0, [sp, #10]
 11195 0052 FFF7FEFF 		bl	__aeabi_i2d
 11196              	.LVL1224:
 11197 0056 0022     		movs	r2, #0
 11198 0058 104B     		ldr	r3, .L842
 11199 005a FFF7FEFF 		bl	__aeabi_ddiv
 11200              	.LVL1225:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11201              		.loc 1 3211 28 view .LVU2987
 11202 005e FFF7FEFF 		bl	__aeabi_d2f
 11203              	.LVL1226:
3211:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 11204              		.loc 1 3211 26 view .LVU2988
 11205 0062 6860     		str	r0, [r5, #4]	@ float
3212:Core/Src/bno055.c ****         }
 11206              		.loc 1 3212 13 is_stmt 1 view .LVU2989
3212:Core/Src/bno055.c ****         }
 11207              		.loc 1 3212 52 is_stmt 0 view .LVU2990
 11208 0064 BDF90C00 		ldrsh	r0, [sp, #12]
ARM GAS  /tmp/ccO72alg.s 			page 359


 11209 0068 FFF7FEFF 		bl	__aeabi_i2d
 11210              	.LVL1227:
 11211 006c 0022     		movs	r2, #0
 11212 006e 0B4B     		ldr	r3, .L842
 11213 0070 FFF7FEFF 		bl	__aeabi_ddiv
 11214              	.LVL1228:
3212:Core/Src/bno055.c ****         }
 11215              		.loc 1 3212 28 view .LVU2991
 11216 0074 FFF7FEFF 		bl	__aeabi_d2f
 11217              	.LVL1229:
3212:Core/Src/bno055.c ****         }
 11218              		.loc 1 3212 26 view .LVU2992
 11219 0078 A860     		str	r0, [r5, #8]	@ float
 11220              	.LVL1230:
 11221              	.L837:
3224:Core/Src/bno055.c **** }
 11222              		.loc 1 3224 5 is_stmt 1 view .LVU2993
3225:Core/Src/bno055.c **** 
 11223              		.loc 1 3225 1 is_stmt 0 view .LVU2994
 11224 007a 2046     		mov	r0, r4
 11225 007c 05B0     		add	sp, sp, #20
 11226              	.LCFI379:
 11227              		.cfi_remember_state
 11228              		.cfi_def_cfa_offset 12
 11229              		@ sp needed
 11230 007e 30BD     		pop	{r4, r5, pc}
 11231              	.LVL1231:
 11232              	.L841:
 11233              	.LCFI380:
 11234              		.cfi_restore_state
3201:Core/Src/bno055.c ****     }
 11235              		.loc 1 3201 9 is_stmt 1 view .LVU2995
3201:Core/Src/bno055.c ****     }
 11236              		.loc 1 3201 21 is_stmt 0 view .LVU2996
 11237 0080 0020     		movs	r0, #0
 11238 0082 FFF7FEFF 		bl	bno055_set_accel_unit
 11239              	.LVL1232:
3201:Core/Src/bno055.c ****     }
 11240              		.loc 1 3201 18 view .LVU2997
 11241 0086 54FA80F4 		uxtab	r4, r4, r0
 11242              	.LVL1233:
3201:Core/Src/bno055.c ****     }
 11243              		.loc 1 3201 18 view .LVU2998
 11244 008a 64B2     		sxtb	r4, r4
 11245              	.LVL1234:
3201:Core/Src/bno055.c ****     }
 11246              		.loc 1 3201 18 view .LVU2999
 11247 008c CCE7     		b	.L836
 11248              	.L838:
3221:Core/Src/bno055.c ****     }
 11249              		.loc 1 3221 18 view .LVU3000
 11250 008e 4FF0FF34 		mov	r4, #-1
 11251              	.LVL1235:
3221:Core/Src/bno055.c ****     }
 11252              		.loc 1 3221 18 view .LVU3001
 11253 0092 F2E7     		b	.L837
 11254              	.LVL1236:
ARM GAS  /tmp/ccO72alg.s 			page 360


 11255              	.L839:
3216:Core/Src/bno055.c ****         }
 11256              		.loc 1 3216 22 view .LVU3002
 11257 0094 4FF0FF34 		mov	r4, #-1
 11258              	.LVL1237:
3216:Core/Src/bno055.c ****         }
 11259              		.loc 1 3216 22 view .LVU3003
 11260 0098 EFE7     		b	.L837
 11261              	.L843:
 11262 009a 00BF     		.align	2
 11263              	.L842:
 11264 009c 00005940 		.word	1079574528
 11265              		.cfi_endproc
 11266              	.LFE47:
 11268              		.section	.text.bno055_convert_float_accel_xyz_mg,"ax",%progbits
 11269              		.align	1
 11270              		.global	bno055_convert_float_accel_xyz_mg
 11271              		.syntax unified
 11272              		.thumb
 11273              		.thumb_func
 11275              	bno055_convert_float_accel_xyz_mg:
 11276              	.LVL1238:
 11277              	.LFB48:
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 11278              		.loc 1 3247 1 is_stmt 1 view -0
 11279              		.cfi_startproc
 11280              		@ args = 0, pretend = 0, frame = 16
 11281              		@ frame_needed = 0, uses_anonymous_args = 0
3247:Core/Src/bno055.c ****     /* Variable used to return value of
 11282              		.loc 1 3247 1 is_stmt 0 view .LVU3005
 11283 0000 30B5     		push	{r4, r5, lr}
 11284              	.LCFI381:
 11285              		.cfi_def_cfa_offset 12
 11286              		.cfi_offset 4, -12
 11287              		.cfi_offset 5, -8
 11288              		.cfi_offset 14, -4
 11289 0002 85B0     		sub	sp, sp, #20
 11290              	.LCFI382:
 11291              		.cfi_def_cfa_offset 32
 11292 0004 0546     		mov	r5, r0
3250:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 11293              		.loc 1 3250 5 is_stmt 1 view .LVU3006
 11294              	.LVL1239:
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11295              		.loc 1 3251 5 view .LVU3007
3251:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11296              		.loc 1 3251 27 is_stmt 0 view .LVU3008
 11297 0006 0023     		movs	r3, #0
 11298 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 11299 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 11300 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3252:Core/Src/bno055.c **** 
 11301              		.loc 1 3252 5 is_stmt 1 view .LVU3009
3252:Core/Src/bno055.c **** 
 11302              		.loc 1 3252 8 is_stmt 0 view .LVU3010
 11303 0014 8DF80730 		strb	r3, [sp, #7]
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
ARM GAS  /tmp/ccO72alg.s 			page 361


 11304              		.loc 1 3256 5 is_stmt 1 view .LVU3011
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11305              		.loc 1 3256 16 is_stmt 0 view .LVU3012
 11306 0018 0DF10700 		add	r0, sp, #7
 11307              	.LVL1240:
3256:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11308              		.loc 1 3256 16 view .LVU3013
 11309 001c FFF7FEFF 		bl	bno055_get_accel_unit
 11310              	.LVL1241:
 11311 0020 0446     		mov	r4, r0
 11312              	.LVL1242:
3257:Core/Src/bno055.c ****     {
 11313              		.loc 1 3257 5 is_stmt 1 view .LVU3014
3257:Core/Src/bno055.c ****     {
 11314              		.loc 1 3257 23 is_stmt 0 view .LVU3015
 11315 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3257:Core/Src/bno055.c ****     {
 11316              		.loc 1 3257 8 view .LVU3016
 11317 0026 012B     		cmp	r3, #1
 11318 0028 1FD1     		bne	.L850
 11319              	.L845:
3261:Core/Src/bno055.c ****     {
 11320              		.loc 1 3261 5 is_stmt 1 view .LVU3017
3261:Core/Src/bno055.c ****     {
 11321              		.loc 1 3261 8 is_stmt 0 view .LVU3018
 11322 002a 2CBB     		cbnz	r4, .L847
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11323              		.loc 1 3264 9 is_stmt 1 view .LVU3019
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11324              		.loc 1 3264 21 is_stmt 0 view .LVU3020
 11325 002c 02A8     		add	r0, sp, #8
 11326 002e FFF7FEFF 		bl	bno055_read_accel_xyz
 11327              	.LVL1243:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11328              		.loc 1 3264 18 view .LVU3021
 11329 0032 54FA80F4 		uxtab	r4, r4, r0
 11330              	.LVL1244:
3264:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11331              		.loc 1 3264 18 view .LVU3022
 11332 0036 64B2     		sxtb	r4, r4
 11333              	.LVL1245:
3265:Core/Src/bno055.c ****         {
 11334              		.loc 1 3265 9 is_stmt 1 view .LVU3023
3265:Core/Src/bno055.c ****         {
 11335              		.loc 1 3265 12 is_stmt 0 view .LVU3024
 11336 0038 0CBB     		cbnz	r4, .L848
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11337              		.loc 1 3268 13 is_stmt 1 view .LVU3025
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11338              		.loc 1 3268 52 is_stmt 0 view .LVU3026
 11339 003a BDF90800 		ldrsh	r0, [sp, #8]
 11340 003e FFF7FEFF 		bl	__aeabi_i2d
 11341              	.LVL1246:
3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11342              		.loc 1 3268 28 view .LVU3027
 11343 0042 FFF7FEFF 		bl	__aeabi_d2f
 11344              	.LVL1247:
ARM GAS  /tmp/ccO72alg.s 			page 362


3268:Core/Src/bno055.c ****             accel_xyz->y = (float)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 11345              		.loc 1 3268 26 view .LVU3028
 11346 0046 2860     		str	r0, [r5]	@ float
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11347              		.loc 1 3269 13 is_stmt 1 view .LVU3029
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11348              		.loc 1 3269 52 is_stmt 0 view .LVU3030
 11349 0048 BDF90A00 		ldrsh	r0, [sp, #10]
 11350 004c FFF7FEFF 		bl	__aeabi_i2d
 11351              	.LVL1248:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11352              		.loc 1 3269 28 view .LVU3031
 11353 0050 FFF7FEFF 		bl	__aeabi_d2f
 11354              	.LVL1249:
3269:Core/Src/bno055.c ****             accel_xyz->z = (float)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 11355              		.loc 1 3269 26 view .LVU3032
 11356 0054 6860     		str	r0, [r5, #4]	@ float
3270:Core/Src/bno055.c ****         }
 11357              		.loc 1 3270 13 is_stmt 1 view .LVU3033
3270:Core/Src/bno055.c ****         }
 11358              		.loc 1 3270 52 is_stmt 0 view .LVU3034
 11359 0056 BDF90C00 		ldrsh	r0, [sp, #12]
 11360 005a FFF7FEFF 		bl	__aeabi_i2d
 11361              	.LVL1250:
3270:Core/Src/bno055.c ****         }
 11362              		.loc 1 3270 28 view .LVU3035
 11363 005e FFF7FEFF 		bl	__aeabi_d2f
 11364              	.LVL1251:
3270:Core/Src/bno055.c ****         }
 11365              		.loc 1 3270 26 view .LVU3036
 11366 0062 A860     		str	r0, [r5, #8]	@ float
 11367              	.LVL1252:
 11368              	.L846:
3282:Core/Src/bno055.c **** }
 11369              		.loc 1 3282 5 is_stmt 1 view .LVU3037
3283:Core/Src/bno055.c **** 
 11370              		.loc 1 3283 1 is_stmt 0 view .LVU3038
 11371 0064 2046     		mov	r0, r4
 11372 0066 05B0     		add	sp, sp, #20
 11373              	.LCFI383:
 11374              		.cfi_remember_state
 11375              		.cfi_def_cfa_offset 12
 11376              		@ sp needed
 11377 0068 30BD     		pop	{r4, r5, pc}
 11378              	.LVL1253:
 11379              	.L850:
 11380              	.LCFI384:
 11381              		.cfi_restore_state
3259:Core/Src/bno055.c ****     }
 11382              		.loc 1 3259 9 is_stmt 1 view .LVU3039
3259:Core/Src/bno055.c ****     }
 11383              		.loc 1 3259 21 is_stmt 0 view .LVU3040
 11384 006a 0120     		movs	r0, #1
 11385 006c FFF7FEFF 		bl	bno055_set_accel_unit
 11386              	.LVL1254:
3259:Core/Src/bno055.c ****     }
 11387              		.loc 1 3259 18 view .LVU3041
ARM GAS  /tmp/ccO72alg.s 			page 363


 11388 0070 54FA80F4 		uxtab	r4, r4, r0
 11389              	.LVL1255:
3259:Core/Src/bno055.c ****     }
 11390              		.loc 1 3259 18 view .LVU3042
 11391 0074 64B2     		sxtb	r4, r4
 11392              	.LVL1256:
3259:Core/Src/bno055.c ****     }
 11393              		.loc 1 3259 18 view .LVU3043
 11394 0076 D8E7     		b	.L845
 11395              	.L847:
3279:Core/Src/bno055.c ****     }
 11396              		.loc 1 3279 18 view .LVU3044
 11397 0078 4FF0FF34 		mov	r4, #-1
 11398              	.LVL1257:
3279:Core/Src/bno055.c ****     }
 11399              		.loc 1 3279 18 view .LVU3045
 11400 007c F2E7     		b	.L846
 11401              	.LVL1258:
 11402              	.L848:
3274:Core/Src/bno055.c ****         }
 11403              		.loc 1 3274 22 view .LVU3046
 11404 007e 4FF0FF34 		mov	r4, #-1
 11405              	.LVL1259:
3274:Core/Src/bno055.c ****         }
 11406              		.loc 1 3274 22 view .LVU3047
 11407 0082 EFE7     		b	.L846
 11408              		.cfi_endproc
 11409              	.LFE48:
 11411              		.section	.text.bno055_convert_double_accel_x_msq,"ax",%progbits
 11412              		.align	1
 11413              		.global	bno055_convert_double_accel_x_msq
 11414              		.syntax unified
 11415              		.thumb
 11416              		.thumb_func
 11418              	bno055_convert_double_accel_x_msq:
 11419              	.LVL1260:
 11420              	.LFB79:
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11421              		.loc 1 4680 1 is_stmt 1 view -0
 11422              		.cfi_startproc
 11423              		@ args = 0, pretend = 0, frame = 8
 11424              		@ frame_needed = 0, uses_anonymous_args = 0
4680:Core/Src/bno055.c ****     /* Variable used to return value of
 11425              		.loc 1 4680 1 is_stmt 0 view .LVU3049
 11426 0000 30B5     		push	{r4, r5, lr}
 11427              	.LCFI385:
 11428              		.cfi_def_cfa_offset 12
 11429              		.cfi_offset 4, -12
 11430              		.cfi_offset 5, -8
 11431              		.cfi_offset 14, -4
 11432 0002 83B0     		sub	sp, sp, #12
 11433              	.LCFI386:
 11434              		.cfi_def_cfa_offset 24
 11435 0004 0546     		mov	r5, r0
4683:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11436              		.loc 1 4683 5 is_stmt 1 view .LVU3050
 11437              	.LVL1261:
ARM GAS  /tmp/ccO72alg.s 			page 364


4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11438              		.loc 1 4684 5 view .LVU3051
4684:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11439              		.loc 1 4684 9 is_stmt 0 view .LVU3052
 11440 0006 0023     		movs	r3, #0
 11441 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4685:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11442              		.loc 1 4685 5 is_stmt 1 view .LVU3053
 11443              	.LVL1262:
4686:Core/Src/bno055.c **** 
 11444              		.loc 1 4686 5 view .LVU3054
4686:Core/Src/bno055.c **** 
 11445              		.loc 1 4686 8 is_stmt 0 view .LVU3055
 11446 000c 8DF80530 		strb	r3, [sp, #5]
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11447              		.loc 1 4690 5 is_stmt 1 view .LVU3056
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11448              		.loc 1 4690 16 is_stmt 0 view .LVU3057
 11449 0010 0DF10500 		add	r0, sp, #5
 11450              	.LVL1263:
4690:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11451              		.loc 1 4690 16 view .LVU3058
 11452 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11453              	.LVL1264:
 11454 0018 0446     		mov	r4, r0
 11455              	.LVL1265:
4691:Core/Src/bno055.c ****     {
 11456              		.loc 1 4691 5 is_stmt 1 view .LVU3059
4691:Core/Src/bno055.c ****     {
 11457              		.loc 1 4691 23 is_stmt 0 view .LVU3060
 11458 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4691:Core/Src/bno055.c ****     {
 11459              		.loc 1 4691 8 view .LVU3061
 11460 001e ABB9     		cbnz	r3, .L857
 11461              	.L852:
4695:Core/Src/bno055.c ****     {
 11462              		.loc 1 4695 5 is_stmt 1 view .LVU3062
4695:Core/Src/bno055.c ****     {
 11463              		.loc 1 4695 8 is_stmt 0 view .LVU3063
 11464 0020 DCB9     		cbnz	r4, .L854
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11465              		.loc 1 4698 9 is_stmt 1 view .LVU3064
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11466              		.loc 1 4698 21 is_stmt 0 view .LVU3065
 11467 0022 0DF10600 		add	r0, sp, #6
 11468 0026 FFF7FEFF 		bl	bno055_read_accel_x
 11469              	.LVL1266:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11470              		.loc 1 4698 18 view .LVU3066
 11471 002a 54FA80F4 		uxtab	r4, r4, r0
 11472              	.LVL1267:
4698:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11473              		.loc 1 4698 18 view .LVU3067
 11474 002e 64B2     		sxtb	r4, r4
 11475              	.LVL1268:
4699:Core/Src/bno055.c ****         {
 11476              		.loc 1 4699 9 is_stmt 1 view .LVU3068
ARM GAS  /tmp/ccO72alg.s 			page 365


4699:Core/Src/bno055.c ****         {
 11477              		.loc 1 4699 12 is_stmt 0 view .LVU3069
 11478 0030 B4B9     		cbnz	r4, .L855
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11479              		.loc 1 4702 13 is_stmt 1 view .LVU3070
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11480              		.loc 1 4702 22 is_stmt 0 view .LVU3071
 11481 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11482 0036 FFF7FEFF 		bl	__aeabi_i2d
 11483              	.LVL1269:
4702:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11484              		.loc 1 4702 20 view .LVU3072
 11485 003a 0022     		movs	r2, #0
 11486 003c 0A4B     		ldr	r3, .L858
 11487 003e FFF7FEFF 		bl	__aeabi_ddiv
 11488              	.LVL1270:
4703:Core/Src/bno055.c ****         }
 11489              		.loc 1 4703 13 is_stmt 1 view .LVU3073
4703:Core/Src/bno055.c ****         }
 11490              		.loc 1 4703 24 is_stmt 0 view .LVU3074
 11491 0042 C5E90001 		strd	r0, [r5]
 11492              	.LVL1271:
 11493              	.L853:
4715:Core/Src/bno055.c **** }
 11494              		.loc 1 4715 5 is_stmt 1 view .LVU3075
4716:Core/Src/bno055.c **** 
 11495              		.loc 1 4716 1 is_stmt 0 view .LVU3076
 11496 0046 2046     		mov	r0, r4
 11497 0048 03B0     		add	sp, sp, #12
 11498              	.LCFI387:
 11499              		.cfi_remember_state
 11500              		.cfi_def_cfa_offset 12
 11501              		@ sp needed
 11502 004a 30BD     		pop	{r4, r5, pc}
 11503              	.LVL1272:
 11504              	.L857:
 11505              	.LCFI388:
 11506              		.cfi_restore_state
4693:Core/Src/bno055.c ****     }
 11507              		.loc 1 4693 9 is_stmt 1 view .LVU3077
4693:Core/Src/bno055.c ****     }
 11508              		.loc 1 4693 21 is_stmt 0 view .LVU3078
 11509 004c 0020     		movs	r0, #0
 11510 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11511              	.LVL1273:
4693:Core/Src/bno055.c ****     }
 11512              		.loc 1 4693 18 view .LVU3079
 11513 0052 54FA80F4 		uxtab	r4, r4, r0
 11514              	.LVL1274:
4693:Core/Src/bno055.c ****     }
 11515              		.loc 1 4693 18 view .LVU3080
 11516 0056 64B2     		sxtb	r4, r4
 11517              	.LVL1275:
4693:Core/Src/bno055.c ****     }
 11518              		.loc 1 4693 18 view .LVU3081
 11519 0058 E2E7     		b	.L852
 11520              	.L854:
ARM GAS  /tmp/ccO72alg.s 			page 366


4712:Core/Src/bno055.c ****     }
 11521              		.loc 1 4712 18 view .LVU3082
 11522 005a 4FF0FF34 		mov	r4, #-1
 11523              	.LVL1276:
4712:Core/Src/bno055.c ****     }
 11524              		.loc 1 4712 18 view .LVU3083
 11525 005e F2E7     		b	.L853
 11526              	.LVL1277:
 11527              	.L855:
4707:Core/Src/bno055.c ****         }
 11528              		.loc 1 4707 22 view .LVU3084
 11529 0060 4FF0FF34 		mov	r4, #-1
 11530              	.LVL1278:
4707:Core/Src/bno055.c ****         }
 11531              		.loc 1 4707 22 view .LVU3085
 11532 0064 EFE7     		b	.L853
 11533              	.L859:
 11534 0066 00BF     		.align	2
 11535              	.L858:
 11536 0068 00005940 		.word	1079574528
 11537              		.cfi_endproc
 11538              	.LFE79:
 11540              		.section	.text.bno055_convert_double_accel_x_mg,"ax",%progbits
 11541              		.align	1
 11542              		.global	bno055_convert_double_accel_x_mg
 11543              		.syntax unified
 11544              		.thumb
 11545              		.thumb_func
 11547              	bno055_convert_double_accel_x_mg:
 11548              	.LVL1279:
 11549              	.LFB80:
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11550              		.loc 1 4734 1 is_stmt 1 view -0
 11551              		.cfi_startproc
 11552              		@ args = 0, pretend = 0, frame = 8
 11553              		@ frame_needed = 0, uses_anonymous_args = 0
4734:Core/Src/bno055.c ****     /* Variable used to return value of
 11554              		.loc 1 4734 1 is_stmt 0 view .LVU3087
 11555 0000 30B5     		push	{r4, r5, lr}
 11556              	.LCFI389:
 11557              		.cfi_def_cfa_offset 12
 11558              		.cfi_offset 4, -12
 11559              		.cfi_offset 5, -8
 11560              		.cfi_offset 14, -4
 11561 0002 83B0     		sub	sp, sp, #12
 11562              	.LCFI390:
 11563              		.cfi_def_cfa_offset 24
 11564 0004 0546     		mov	r5, r0
4737:Core/Src/bno055.c ****     s16 reg_accel_x_s16 = BNO055_INIT_VALUE;
 11565              		.loc 1 4737 5 is_stmt 1 view .LVU3088
 11566              	.LVL1280:
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11567              		.loc 1 4738 5 view .LVU3089
4738:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11568              		.loc 1 4738 9 is_stmt 0 view .LVU3090
 11569 0006 0023     		movs	r3, #0
 11570 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
ARM GAS  /tmp/ccO72alg.s 			page 367


4739:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11571              		.loc 1 4739 5 is_stmt 1 view .LVU3091
 11572              	.LVL1281:
4740:Core/Src/bno055.c **** 
 11573              		.loc 1 4740 5 view .LVU3092
4740:Core/Src/bno055.c **** 
 11574              		.loc 1 4740 8 is_stmt 0 view .LVU3093
 11575 000c 8DF80530 		strb	r3, [sp, #5]
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11576              		.loc 1 4744 5 is_stmt 1 view .LVU3094
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11577              		.loc 1 4744 16 is_stmt 0 view .LVU3095
 11578 0010 0DF10500 		add	r0, sp, #5
 11579              	.LVL1282:
4744:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11580              		.loc 1 4744 16 view .LVU3096
 11581 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11582              	.LVL1283:
 11583 0018 0446     		mov	r4, r0
 11584              	.LVL1284:
4745:Core/Src/bno055.c ****     {
 11585              		.loc 1 4745 5 is_stmt 1 view .LVU3097
4745:Core/Src/bno055.c ****     {
 11586              		.loc 1 4745 23 is_stmt 0 view .LVU3098
 11587 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4745:Core/Src/bno055.c ****     {
 11588              		.loc 1 4745 8 view .LVU3099
 11589 001e 012B     		cmp	r3, #1
 11590 0020 11D1     		bne	.L866
 11591              	.L861:
4749:Core/Src/bno055.c ****     {
 11592              		.loc 1 4749 5 is_stmt 1 view .LVU3100
4749:Core/Src/bno055.c ****     {
 11593              		.loc 1 4749 8 is_stmt 0 view .LVU3101
 11594 0022 BCB9     		cbnz	r4, .L863
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11595              		.loc 1 4752 9 is_stmt 1 view .LVU3102
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11596              		.loc 1 4752 21 is_stmt 0 view .LVU3103
 11597 0024 0DF10600 		add	r0, sp, #6
 11598 0028 FFF7FEFF 		bl	bno055_read_accel_x
 11599              	.LVL1285:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11600              		.loc 1 4752 18 view .LVU3104
 11601 002c 54FA80F4 		uxtab	r4, r4, r0
 11602              	.LVL1286:
4752:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11603              		.loc 1 4752 18 view .LVU3105
 11604 0030 64B2     		sxtb	r4, r4
 11605              	.LVL1287:
4753:Core/Src/bno055.c ****         {
 11606              		.loc 1 4753 9 is_stmt 1 view .LVU3106
4753:Core/Src/bno055.c ****         {
 11607              		.loc 1 4753 12 is_stmt 0 view .LVU3107
 11608 0032 94B9     		cbnz	r4, .L864
4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11609              		.loc 1 4756 13 is_stmt 1 view .LVU3108
ARM GAS  /tmp/ccO72alg.s 			page 368


4756:Core/Src/bno055.c ****             *accel_x_d = data_f;
 11610              		.loc 1 4756 20 is_stmt 0 view .LVU3109
 11611 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11612 0038 FFF7FEFF 		bl	__aeabi_i2d
 11613              	.LVL1288:
4757:Core/Src/bno055.c ****         }
 11614              		.loc 1 4757 13 is_stmt 1 view .LVU3110
4757:Core/Src/bno055.c ****         }
 11615              		.loc 1 4757 24 is_stmt 0 view .LVU3111
 11616 003c C5E90001 		strd	r0, [r5]
 11617              	.LVL1289:
 11618              	.L862:
4769:Core/Src/bno055.c **** }
 11619              		.loc 1 4769 5 is_stmt 1 view .LVU3112
4770:Core/Src/bno055.c **** 
 11620              		.loc 1 4770 1 is_stmt 0 view .LVU3113
 11621 0040 2046     		mov	r0, r4
 11622 0042 03B0     		add	sp, sp, #12
 11623              	.LCFI391:
 11624              		.cfi_remember_state
 11625              		.cfi_def_cfa_offset 12
 11626              		@ sp needed
 11627 0044 30BD     		pop	{r4, r5, pc}
 11628              	.LVL1290:
 11629              	.L866:
 11630              	.LCFI392:
 11631              		.cfi_restore_state
4747:Core/Src/bno055.c ****     }
 11632              		.loc 1 4747 9 is_stmt 1 view .LVU3114
4747:Core/Src/bno055.c ****     }
 11633              		.loc 1 4747 21 is_stmt 0 view .LVU3115
 11634 0046 0120     		movs	r0, #1
 11635 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11636              	.LVL1291:
4747:Core/Src/bno055.c ****     }
 11637              		.loc 1 4747 18 view .LVU3116
 11638 004c 54FA80F4 		uxtab	r4, r4, r0
 11639              	.LVL1292:
4747:Core/Src/bno055.c ****     }
 11640              		.loc 1 4747 18 view .LVU3117
 11641 0050 64B2     		sxtb	r4, r4
 11642              	.LVL1293:
4747:Core/Src/bno055.c ****     }
 11643              		.loc 1 4747 18 view .LVU3118
 11644 0052 E6E7     		b	.L861
 11645              	.L863:
4766:Core/Src/bno055.c ****     }
 11646              		.loc 1 4766 18 view .LVU3119
 11647 0054 4FF0FF34 		mov	r4, #-1
 11648              	.LVL1294:
4766:Core/Src/bno055.c ****     }
 11649              		.loc 1 4766 18 view .LVU3120
 11650 0058 F2E7     		b	.L862
 11651              	.LVL1295:
 11652              	.L864:
4761:Core/Src/bno055.c ****         }
 11653              		.loc 1 4761 22 view .LVU3121
ARM GAS  /tmp/ccO72alg.s 			page 369


 11654 005a 4FF0FF34 		mov	r4, #-1
 11655              	.LVL1296:
4761:Core/Src/bno055.c ****         }
 11656              		.loc 1 4761 22 view .LVU3122
 11657 005e EFE7     		b	.L862
 11658              		.cfi_endproc
 11659              	.LFE80:
 11661              		.section	.text.bno055_convert_double_accel_y_msq,"ax",%progbits
 11662              		.align	1
 11663              		.global	bno055_convert_double_accel_y_msq
 11664              		.syntax unified
 11665              		.thumb
 11666              		.thumb_func
 11668              	bno055_convert_double_accel_y_msq:
 11669              	.LVL1297:
 11670              	.LFB81:
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11671              		.loc 1 4788 1 is_stmt 1 view -0
 11672              		.cfi_startproc
 11673              		@ args = 0, pretend = 0, frame = 8
 11674              		@ frame_needed = 0, uses_anonymous_args = 0
4788:Core/Src/bno055.c ****     /* Variable used to return value of
 11675              		.loc 1 4788 1 is_stmt 0 view .LVU3124
 11676 0000 30B5     		push	{r4, r5, lr}
 11677              	.LCFI393:
 11678              		.cfi_def_cfa_offset 12
 11679              		.cfi_offset 4, -12
 11680              		.cfi_offset 5, -8
 11681              		.cfi_offset 14, -4
 11682 0002 83B0     		sub	sp, sp, #12
 11683              	.LCFI394:
 11684              		.cfi_def_cfa_offset 24
 11685 0004 0546     		mov	r5, r0
4791:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11686              		.loc 1 4791 5 is_stmt 1 view .LVU3125
 11687              	.LVL1298:
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11688              		.loc 1 4792 5 view .LVU3126
4792:Core/Src/bno055.c ****     double data_f = BNO055_INIT_VALUE;
 11689              		.loc 1 4792 9 is_stmt 0 view .LVU3127
 11690 0006 0023     		movs	r3, #0
 11691 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4793:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11692              		.loc 1 4793 5 is_stmt 1 view .LVU3128
 11693              	.LVL1299:
4794:Core/Src/bno055.c **** 
 11694              		.loc 1 4794 5 view .LVU3129
4794:Core/Src/bno055.c **** 
 11695              		.loc 1 4794 8 is_stmt 0 view .LVU3130
 11696 000c 8DF80530 		strb	r3, [sp, #5]
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11697              		.loc 1 4798 5 is_stmt 1 view .LVU3131
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11698              		.loc 1 4798 16 is_stmt 0 view .LVU3132
 11699 0010 0DF10500 		add	r0, sp, #5
 11700              	.LVL1300:
4798:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
ARM GAS  /tmp/ccO72alg.s 			page 370


 11701              		.loc 1 4798 16 view .LVU3133
 11702 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11703              	.LVL1301:
 11704 0018 0446     		mov	r4, r0
 11705              	.LVL1302:
4799:Core/Src/bno055.c ****     {
 11706              		.loc 1 4799 5 is_stmt 1 view .LVU3134
4799:Core/Src/bno055.c ****     {
 11707              		.loc 1 4799 23 is_stmt 0 view .LVU3135
 11708 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4799:Core/Src/bno055.c ****     {
 11709              		.loc 1 4799 8 view .LVU3136
 11710 001e ABB9     		cbnz	r3, .L873
 11711              	.L868:
4803:Core/Src/bno055.c ****     {
 11712              		.loc 1 4803 5 is_stmt 1 view .LVU3137
4803:Core/Src/bno055.c ****     {
 11713              		.loc 1 4803 8 is_stmt 0 view .LVU3138
 11714 0020 DCB9     		cbnz	r4, .L870
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11715              		.loc 1 4806 9 is_stmt 1 view .LVU3139
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11716              		.loc 1 4806 21 is_stmt 0 view .LVU3140
 11717 0022 0DF10600 		add	r0, sp, #6
 11718 0026 FFF7FEFF 		bl	bno055_read_accel_y
 11719              	.LVL1303:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11720              		.loc 1 4806 18 view .LVU3141
 11721 002a 54FA80F4 		uxtab	r4, r4, r0
 11722              	.LVL1304:
4806:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11723              		.loc 1 4806 18 view .LVU3142
 11724 002e 64B2     		sxtb	r4, r4
 11725              	.LVL1305:
4807:Core/Src/bno055.c ****         {
 11726              		.loc 1 4807 9 is_stmt 1 view .LVU3143
4807:Core/Src/bno055.c ****         {
 11727              		.loc 1 4807 12 is_stmt 0 view .LVU3144
 11728 0030 B4B9     		cbnz	r4, .L871
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11729              		.loc 1 4810 13 is_stmt 1 view .LVU3145
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11730              		.loc 1 4810 22 is_stmt 0 view .LVU3146
 11731 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11732 0036 FFF7FEFF 		bl	__aeabi_i2d
 11733              	.LVL1306:
4810:Core/Src/bno055.c ****             *accel_y_d = data_f;
 11734              		.loc 1 4810 20 view .LVU3147
 11735 003a 0022     		movs	r2, #0
 11736 003c 0A4B     		ldr	r3, .L874
 11737 003e FFF7FEFF 		bl	__aeabi_ddiv
 11738              	.LVL1307:
4811:Core/Src/bno055.c ****         }
 11739              		.loc 1 4811 13 is_stmt 1 view .LVU3148
4811:Core/Src/bno055.c ****         }
 11740              		.loc 1 4811 24 is_stmt 0 view .LVU3149
 11741 0042 C5E90001 		strd	r0, [r5]
ARM GAS  /tmp/ccO72alg.s 			page 371


 11742              	.LVL1308:
 11743              	.L869:
4823:Core/Src/bno055.c **** }
 11744              		.loc 1 4823 5 is_stmt 1 view .LVU3150
4824:Core/Src/bno055.c **** 
 11745              		.loc 1 4824 1 is_stmt 0 view .LVU3151
 11746 0046 2046     		mov	r0, r4
 11747 0048 03B0     		add	sp, sp, #12
 11748              	.LCFI395:
 11749              		.cfi_remember_state
 11750              		.cfi_def_cfa_offset 12
 11751              		@ sp needed
 11752 004a 30BD     		pop	{r4, r5, pc}
 11753              	.LVL1309:
 11754              	.L873:
 11755              	.LCFI396:
 11756              		.cfi_restore_state
4801:Core/Src/bno055.c ****     }
 11757              		.loc 1 4801 9 is_stmt 1 view .LVU3152
4801:Core/Src/bno055.c ****     }
 11758              		.loc 1 4801 21 is_stmt 0 view .LVU3153
 11759 004c 0020     		movs	r0, #0
 11760 004e FFF7FEFF 		bl	bno055_set_accel_unit
 11761              	.LVL1310:
4801:Core/Src/bno055.c ****     }
 11762              		.loc 1 4801 18 view .LVU3154
 11763 0052 54FA80F4 		uxtab	r4, r4, r0
 11764              	.LVL1311:
4801:Core/Src/bno055.c ****     }
 11765              		.loc 1 4801 18 view .LVU3155
 11766 0056 64B2     		sxtb	r4, r4
 11767              	.LVL1312:
4801:Core/Src/bno055.c ****     }
 11768              		.loc 1 4801 18 view .LVU3156
 11769 0058 E2E7     		b	.L868
 11770              	.L870:
4820:Core/Src/bno055.c ****     }
 11771              		.loc 1 4820 18 view .LVU3157
 11772 005a 4FF0FF34 		mov	r4, #-1
 11773              	.LVL1313:
4820:Core/Src/bno055.c ****     }
 11774              		.loc 1 4820 18 view .LVU3158
 11775 005e F2E7     		b	.L869
 11776              	.LVL1314:
 11777              	.L871:
4815:Core/Src/bno055.c ****         }
 11778              		.loc 1 4815 22 view .LVU3159
 11779 0060 4FF0FF34 		mov	r4, #-1
 11780              	.LVL1315:
4815:Core/Src/bno055.c ****         }
 11781              		.loc 1 4815 22 view .LVU3160
 11782 0064 EFE7     		b	.L869
 11783              	.L875:
 11784 0066 00BF     		.align	2
 11785              	.L874:
 11786 0068 00005940 		.word	1079574528
 11787              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 372


 11788              	.LFE81:
 11790              		.section	.text.bno055_convert_double_accel_y_mg,"ax",%progbits
 11791              		.align	1
 11792              		.global	bno055_convert_double_accel_y_mg
 11793              		.syntax unified
 11794              		.thumb
 11795              		.thumb_func
 11797              	bno055_convert_double_accel_y_mg:
 11798              	.LVL1316:
 11799              	.LFB82:
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11800              		.loc 1 4841 1 is_stmt 1 view -0
 11801              		.cfi_startproc
 11802              		@ args = 0, pretend = 0, frame = 8
 11803              		@ frame_needed = 0, uses_anonymous_args = 0
4841:Core/Src/bno055.c ****     /* Variable used to return value of
 11804              		.loc 1 4841 1 is_stmt 0 view .LVU3162
 11805 0000 30B5     		push	{r4, r5, lr}
 11806              	.LCFI397:
 11807              		.cfi_def_cfa_offset 12
 11808              		.cfi_offset 4, -12
 11809              		.cfi_offset 5, -8
 11810              		.cfi_offset 14, -4
 11811 0002 83B0     		sub	sp, sp, #12
 11812              	.LCFI398:
 11813              		.cfi_def_cfa_offset 24
 11814 0004 0546     		mov	r5, r0
4844:Core/Src/bno055.c ****     s16 reg_accel_y_s16 = BNO055_INIT_VALUE;
 11815              		.loc 1 4844 5 is_stmt 1 view .LVU3163
 11816              	.LVL1317:
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11817              		.loc 1 4845 5 view .LVU3164
4845:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11818              		.loc 1 4845 9 is_stmt 0 view .LVU3165
 11819 0006 0023     		movs	r3, #0
 11820 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4846:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11821              		.loc 1 4846 5 is_stmt 1 view .LVU3166
 11822              	.LVL1318:
4847:Core/Src/bno055.c **** 
 11823              		.loc 1 4847 5 view .LVU3167
4847:Core/Src/bno055.c **** 
 11824              		.loc 1 4847 8 is_stmt 0 view .LVU3168
 11825 000c 8DF80530 		strb	r3, [sp, #5]
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11826              		.loc 1 4851 5 is_stmt 1 view .LVU3169
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11827              		.loc 1 4851 16 is_stmt 0 view .LVU3170
 11828 0010 0DF10500 		add	r0, sp, #5
 11829              	.LVL1319:
4851:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 11830              		.loc 1 4851 16 view .LVU3171
 11831 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11832              	.LVL1320:
 11833 0018 0446     		mov	r4, r0
 11834              	.LVL1321:
4852:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 373


 11835              		.loc 1 4852 5 is_stmt 1 view .LVU3172
4852:Core/Src/bno055.c ****     {
 11836              		.loc 1 4852 23 is_stmt 0 view .LVU3173
 11837 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4852:Core/Src/bno055.c ****     {
 11838              		.loc 1 4852 8 view .LVU3174
 11839 001e 012B     		cmp	r3, #1
 11840 0020 11D1     		bne	.L882
 11841              	.L877:
4856:Core/Src/bno055.c ****     {
 11842              		.loc 1 4856 5 is_stmt 1 view .LVU3175
4856:Core/Src/bno055.c ****     {
 11843              		.loc 1 4856 8 is_stmt 0 view .LVU3176
 11844 0022 BCB9     		cbnz	r4, .L879
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11845              		.loc 1 4859 9 is_stmt 1 view .LVU3177
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11846              		.loc 1 4859 21 is_stmt 0 view .LVU3178
 11847 0024 0DF10600 		add	r0, sp, #6
 11848 0028 FFF7FEFF 		bl	bno055_read_accel_y
 11849              	.LVL1322:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11850              		.loc 1 4859 18 view .LVU3179
 11851 002c 54FA80F4 		uxtab	r4, r4, r0
 11852              	.LVL1323:
4859:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11853              		.loc 1 4859 18 view .LVU3180
 11854 0030 64B2     		sxtb	r4, r4
 11855              	.LVL1324:
4860:Core/Src/bno055.c ****         {
 11856              		.loc 1 4860 9 is_stmt 1 view .LVU3181
4860:Core/Src/bno055.c ****         {
 11857              		.loc 1 4860 12 is_stmt 0 view .LVU3182
 11858 0032 94B9     		cbnz	r4, .L880
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11859              		.loc 1 4863 13 is_stmt 1 view .LVU3183
4863:Core/Src/bno055.c ****             *accel_y_d = data_d;
 11860              		.loc 1 4863 20 is_stmt 0 view .LVU3184
 11861 0034 BDF90600 		ldrsh	r0, [sp, #6]
 11862 0038 FFF7FEFF 		bl	__aeabi_i2d
 11863              	.LVL1325:
4864:Core/Src/bno055.c ****         }
 11864              		.loc 1 4864 13 is_stmt 1 view .LVU3185
4864:Core/Src/bno055.c ****         }
 11865              		.loc 1 4864 24 is_stmt 0 view .LVU3186
 11866 003c C5E90001 		strd	r0, [r5]
 11867              	.LVL1326:
 11868              	.L878:
4876:Core/Src/bno055.c **** }
 11869              		.loc 1 4876 5 is_stmt 1 view .LVU3187
4877:Core/Src/bno055.c **** 
 11870              		.loc 1 4877 1 is_stmt 0 view .LVU3188
 11871 0040 2046     		mov	r0, r4
 11872 0042 03B0     		add	sp, sp, #12
 11873              	.LCFI399:
 11874              		.cfi_remember_state
 11875              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 374


 11876              		@ sp needed
 11877 0044 30BD     		pop	{r4, r5, pc}
 11878              	.LVL1327:
 11879              	.L882:
 11880              	.LCFI400:
 11881              		.cfi_restore_state
4854:Core/Src/bno055.c ****     }
 11882              		.loc 1 4854 9 is_stmt 1 view .LVU3189
4854:Core/Src/bno055.c ****     }
 11883              		.loc 1 4854 21 is_stmt 0 view .LVU3190
 11884 0046 0120     		movs	r0, #1
 11885 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 11886              	.LVL1328:
4854:Core/Src/bno055.c ****     }
 11887              		.loc 1 4854 18 view .LVU3191
 11888 004c 54FA80F4 		uxtab	r4, r4, r0
 11889              	.LVL1329:
4854:Core/Src/bno055.c ****     }
 11890              		.loc 1 4854 18 view .LVU3192
 11891 0050 64B2     		sxtb	r4, r4
 11892              	.LVL1330:
4854:Core/Src/bno055.c ****     }
 11893              		.loc 1 4854 18 view .LVU3193
 11894 0052 E6E7     		b	.L877
 11895              	.L879:
4873:Core/Src/bno055.c ****     }
 11896              		.loc 1 4873 18 view .LVU3194
 11897 0054 4FF0FF34 		mov	r4, #-1
 11898              	.LVL1331:
4873:Core/Src/bno055.c ****     }
 11899              		.loc 1 4873 18 view .LVU3195
 11900 0058 F2E7     		b	.L878
 11901              	.LVL1332:
 11902              	.L880:
4868:Core/Src/bno055.c ****         }
 11903              		.loc 1 4868 22 view .LVU3196
 11904 005a 4FF0FF34 		mov	r4, #-1
 11905              	.LVL1333:
4868:Core/Src/bno055.c ****         }
 11906              		.loc 1 4868 22 view .LVU3197
 11907 005e EFE7     		b	.L878
 11908              		.cfi_endproc
 11909              	.LFE82:
 11911              		.section	.text.bno055_convert_double_accel_z_msq,"ax",%progbits
 11912              		.align	1
 11913              		.global	bno055_convert_double_accel_z_msq
 11914              		.syntax unified
 11915              		.thumb
 11916              		.thumb_func
 11918              	bno055_convert_double_accel_z_msq:
 11919              	.LVL1334:
 11920              	.LFB83:
4892:Core/Src/bno055.c ****     /* Variable used to return value of
 11921              		.loc 1 4892 1 is_stmt 1 view -0
 11922              		.cfi_startproc
 11923              		@ args = 0, pretend = 0, frame = 8
 11924              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccO72alg.s 			page 375


4892:Core/Src/bno055.c ****     /* Variable used to return value of
 11925              		.loc 1 4892 1 is_stmt 0 view .LVU3199
 11926 0000 30B5     		push	{r4, r5, lr}
 11927              	.LCFI401:
 11928              		.cfi_def_cfa_offset 12
 11929              		.cfi_offset 4, -12
 11930              		.cfi_offset 5, -8
 11931              		.cfi_offset 14, -4
 11932 0002 83B0     		sub	sp, sp, #12
 11933              	.LCFI402:
 11934              		.cfi_def_cfa_offset 24
 11935 0004 0546     		mov	r5, r0
4895:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 11936              		.loc 1 4895 5 is_stmt 1 view .LVU3200
 11937              	.LVL1335:
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11938              		.loc 1 4896 5 view .LVU3201
4896:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 11939              		.loc 1 4896 9 is_stmt 0 view .LVU3202
 11940 0006 0023     		movs	r3, #0
 11941 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4897:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 11942              		.loc 1 4897 5 is_stmt 1 view .LVU3203
 11943              	.LVL1336:
4898:Core/Src/bno055.c **** 
 11944              		.loc 1 4898 5 view .LVU3204
4898:Core/Src/bno055.c **** 
 11945              		.loc 1 4898 8 is_stmt 0 view .LVU3205
 11946 000c 8DF80530 		strb	r3, [sp, #5]
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11947              		.loc 1 4902 5 is_stmt 1 view .LVU3206
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11948              		.loc 1 4902 16 is_stmt 0 view .LVU3207
 11949 0010 0DF10500 		add	r0, sp, #5
 11950              	.LVL1337:
4902:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 11951              		.loc 1 4902 16 view .LVU3208
 11952 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 11953              	.LVL1338:
 11954 0018 0446     		mov	r4, r0
 11955              	.LVL1339:
4903:Core/Src/bno055.c ****     {
 11956              		.loc 1 4903 5 is_stmt 1 view .LVU3209
4903:Core/Src/bno055.c ****     {
 11957              		.loc 1 4903 23 is_stmt 0 view .LVU3210
 11958 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4903:Core/Src/bno055.c ****     {
 11959              		.loc 1 4903 8 view .LVU3211
 11960 001e ABB9     		cbnz	r3, .L889
 11961              	.L884:
4907:Core/Src/bno055.c ****     {
 11962              		.loc 1 4907 5 is_stmt 1 view .LVU3212
4907:Core/Src/bno055.c ****     {
 11963              		.loc 1 4907 8 is_stmt 0 view .LVU3213
 11964 0020 DCB9     		cbnz	r4, .L886
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11965              		.loc 1 4910 9 is_stmt 1 view .LVU3214
ARM GAS  /tmp/ccO72alg.s 			page 376


4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11966              		.loc 1 4910 21 is_stmt 0 view .LVU3215
 11967 0022 0DF10600 		add	r0, sp, #6
 11968 0026 FFF7FEFF 		bl	bno055_read_accel_z
 11969              	.LVL1340:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11970              		.loc 1 4910 18 view .LVU3216
 11971 002a 54FA80F4 		uxtab	r4, r4, r0
 11972              	.LVL1341:
4910:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 11973              		.loc 1 4910 18 view .LVU3217
 11974 002e 64B2     		sxtb	r4, r4
 11975              	.LVL1342:
4911:Core/Src/bno055.c ****         {
 11976              		.loc 1 4911 9 is_stmt 1 view .LVU3218
4911:Core/Src/bno055.c ****         {
 11977              		.loc 1 4911 12 is_stmt 0 view .LVU3219
 11978 0030 B4B9     		cbnz	r4, .L887
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11979              		.loc 1 4914 13 is_stmt 1 view .LVU3220
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11980              		.loc 1 4914 22 is_stmt 0 view .LVU3221
 11981 0032 BDF90600 		ldrsh	r0, [sp, #6]
 11982 0036 FFF7FEFF 		bl	__aeabi_i2d
 11983              	.LVL1343:
4914:Core/Src/bno055.c ****             *accel_z_d = data_d;
 11984              		.loc 1 4914 20 view .LVU3222
 11985 003a 0022     		movs	r2, #0
 11986 003c 0A4B     		ldr	r3, .L890
 11987 003e FFF7FEFF 		bl	__aeabi_ddiv
 11988              	.LVL1344:
4915:Core/Src/bno055.c ****         }
 11989              		.loc 1 4915 13 is_stmt 1 view .LVU3223
4915:Core/Src/bno055.c ****         }
 11990              		.loc 1 4915 24 is_stmt 0 view .LVU3224
 11991 0042 C5E90001 		strd	r0, [r5]
 11992              	.LVL1345:
 11993              	.L885:
4927:Core/Src/bno055.c **** }
 11994              		.loc 1 4927 5 is_stmt 1 view .LVU3225
4928:Core/Src/bno055.c **** 
 11995              		.loc 1 4928 1 is_stmt 0 view .LVU3226
 11996 0046 2046     		mov	r0, r4
 11997 0048 03B0     		add	sp, sp, #12
 11998              	.LCFI403:
 11999              		.cfi_remember_state
 12000              		.cfi_def_cfa_offset 12
 12001              		@ sp needed
 12002 004a 30BD     		pop	{r4, r5, pc}
 12003              	.LVL1346:
 12004              	.L889:
 12005              	.LCFI404:
 12006              		.cfi_restore_state
4905:Core/Src/bno055.c ****     }
 12007              		.loc 1 4905 9 is_stmt 1 view .LVU3227
4905:Core/Src/bno055.c ****     }
 12008              		.loc 1 4905 21 is_stmt 0 view .LVU3228
ARM GAS  /tmp/ccO72alg.s 			page 377


 12009 004c 0020     		movs	r0, #0
 12010 004e FFF7FEFF 		bl	bno055_set_accel_unit
 12011              	.LVL1347:
4905:Core/Src/bno055.c ****     }
 12012              		.loc 1 4905 18 view .LVU3229
 12013 0052 54FA80F4 		uxtab	r4, r4, r0
 12014              	.LVL1348:
4905:Core/Src/bno055.c ****     }
 12015              		.loc 1 4905 18 view .LVU3230
 12016 0056 64B2     		sxtb	r4, r4
 12017              	.LVL1349:
4905:Core/Src/bno055.c ****     }
 12018              		.loc 1 4905 18 view .LVU3231
 12019 0058 E2E7     		b	.L884
 12020              	.L886:
4924:Core/Src/bno055.c ****     }
 12021              		.loc 1 4924 18 view .LVU3232
 12022 005a 4FF0FF34 		mov	r4, #-1
 12023              	.LVL1350:
4924:Core/Src/bno055.c ****     }
 12024              		.loc 1 4924 18 view .LVU3233
 12025 005e F2E7     		b	.L885
 12026              	.LVL1351:
 12027              	.L887:
4919:Core/Src/bno055.c ****         }
 12028              		.loc 1 4919 22 view .LVU3234
 12029 0060 4FF0FF34 		mov	r4, #-1
 12030              	.LVL1352:
4919:Core/Src/bno055.c ****         }
 12031              		.loc 1 4919 22 view .LVU3235
 12032 0064 EFE7     		b	.L885
 12033              	.L891:
 12034 0066 00BF     		.align	2
 12035              	.L890:
 12036 0068 00005940 		.word	1079574528
 12037              		.cfi_endproc
 12038              	.LFE83:
 12040              		.section	.text.bno055_convert_double_accel_z_mg,"ax",%progbits
 12041              		.align	1
 12042              		.global	bno055_convert_double_accel_z_mg
 12043              		.syntax unified
 12044              		.thumb
 12045              		.thumb_func
 12047              	bno055_convert_double_accel_z_mg:
 12048              	.LVL1353:
 12049              	.LFB84:
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 12050              		.loc 1 4944 1 is_stmt 1 view -0
 12051              		.cfi_startproc
 12052              		@ args = 0, pretend = 0, frame = 8
 12053              		@ frame_needed = 0, uses_anonymous_args = 0
4944:Core/Src/bno055.c ****     /* Variable used to return value of
 12054              		.loc 1 4944 1 is_stmt 0 view .LVU3237
 12055 0000 30B5     		push	{r4, r5, lr}
 12056              	.LCFI405:
 12057              		.cfi_def_cfa_offset 12
 12058              		.cfi_offset 4, -12
ARM GAS  /tmp/ccO72alg.s 			page 378


 12059              		.cfi_offset 5, -8
 12060              		.cfi_offset 14, -4
 12061 0002 83B0     		sub	sp, sp, #12
 12062              	.LCFI406:
 12063              		.cfi_def_cfa_offset 24
 12064 0004 0546     		mov	r5, r0
4947:Core/Src/bno055.c ****     s16 reg_accel_z_s16 = BNO055_INIT_VALUE;
 12065              		.loc 1 4947 5 is_stmt 1 view .LVU3238
 12066              	.LVL1354:
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12067              		.loc 1 4948 5 view .LVU3239
4948:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 12068              		.loc 1 4948 9 is_stmt 0 view .LVU3240
 12069 0006 0023     		movs	r3, #0
 12070 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4949:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12071              		.loc 1 4949 5 is_stmt 1 view .LVU3241
 12072              	.LVL1355:
4950:Core/Src/bno055.c **** 
 12073              		.loc 1 4950 5 view .LVU3242
4950:Core/Src/bno055.c **** 
 12074              		.loc 1 4950 8 is_stmt 0 view .LVU3243
 12075 000c 8DF80530 		strb	r3, [sp, #5]
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12076              		.loc 1 4954 5 is_stmt 1 view .LVU3244
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12077              		.loc 1 4954 16 is_stmt 0 view .LVU3245
 12078 0010 0DF10500 		add	r0, sp, #5
 12079              	.LVL1356:
4954:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12080              		.loc 1 4954 16 view .LVU3246
 12081 0014 FFF7FEFF 		bl	bno055_get_accel_unit
 12082              	.LVL1357:
 12083 0018 0446     		mov	r4, r0
 12084              	.LVL1358:
4955:Core/Src/bno055.c ****     {
 12085              		.loc 1 4955 5 is_stmt 1 view .LVU3247
4955:Core/Src/bno055.c ****     {
 12086              		.loc 1 4955 23 is_stmt 0 view .LVU3248
 12087 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4955:Core/Src/bno055.c ****     {
 12088              		.loc 1 4955 8 view .LVU3249
 12089 001e 012B     		cmp	r3, #1
 12090 0020 11D1     		bne	.L898
 12091              	.L893:
4959:Core/Src/bno055.c ****     {
 12092              		.loc 1 4959 5 is_stmt 1 view .LVU3250
4959:Core/Src/bno055.c ****     {
 12093              		.loc 1 4959 8 is_stmt 0 view .LVU3251
 12094 0022 BCB9     		cbnz	r4, .L895
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12095              		.loc 1 4962 9 is_stmt 1 view .LVU3252
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12096              		.loc 1 4962 21 is_stmt 0 view .LVU3253
 12097 0024 0DF10600 		add	r0, sp, #6
 12098 0028 FFF7FEFF 		bl	bno055_read_accel_z
 12099              	.LVL1359:
ARM GAS  /tmp/ccO72alg.s 			page 379


4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12100              		.loc 1 4962 18 view .LVU3254
 12101 002c 54FA80F4 		uxtab	r4, r4, r0
 12102              	.LVL1360:
4962:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12103              		.loc 1 4962 18 view .LVU3255
 12104 0030 64B2     		sxtb	r4, r4
 12105              	.LVL1361:
4963:Core/Src/bno055.c ****         {
 12106              		.loc 1 4963 9 is_stmt 1 view .LVU3256
4963:Core/Src/bno055.c ****         {
 12107              		.loc 1 4963 12 is_stmt 0 view .LVU3257
 12108 0032 94B9     		cbnz	r4, .L896
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12109              		.loc 1 4966 13 is_stmt 1 view .LVU3258
4966:Core/Src/bno055.c ****             *accel_z_d = data_d;
 12110              		.loc 1 4966 20 is_stmt 0 view .LVU3259
 12111 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12112 0038 FFF7FEFF 		bl	__aeabi_i2d
 12113              	.LVL1362:
4967:Core/Src/bno055.c ****         }
 12114              		.loc 1 4967 13 is_stmt 1 view .LVU3260
4967:Core/Src/bno055.c ****         }
 12115              		.loc 1 4967 24 is_stmt 0 view .LVU3261
 12116 003c C5E90001 		strd	r0, [r5]
 12117              	.LVL1363:
 12118              	.L894:
4979:Core/Src/bno055.c **** }
 12119              		.loc 1 4979 5 is_stmt 1 view .LVU3262
4980:Core/Src/bno055.c **** 
 12120              		.loc 1 4980 1 is_stmt 0 view .LVU3263
 12121 0040 2046     		mov	r0, r4
 12122 0042 03B0     		add	sp, sp, #12
 12123              	.LCFI407:
 12124              		.cfi_remember_state
 12125              		.cfi_def_cfa_offset 12
 12126              		@ sp needed
 12127 0044 30BD     		pop	{r4, r5, pc}
 12128              	.LVL1364:
 12129              	.L898:
 12130              	.LCFI408:
 12131              		.cfi_restore_state
4957:Core/Src/bno055.c ****     }
 12132              		.loc 1 4957 9 is_stmt 1 view .LVU3264
4957:Core/Src/bno055.c ****     }
 12133              		.loc 1 4957 21 is_stmt 0 view .LVU3265
 12134 0046 0120     		movs	r0, #1
 12135 0048 FFF7FEFF 		bl	bno055_set_accel_unit
 12136              	.LVL1365:
4957:Core/Src/bno055.c ****     }
 12137              		.loc 1 4957 18 view .LVU3266
 12138 004c 54FA80F4 		uxtab	r4, r4, r0
 12139              	.LVL1366:
4957:Core/Src/bno055.c ****     }
 12140              		.loc 1 4957 18 view .LVU3267
 12141 0050 64B2     		sxtb	r4, r4
 12142              	.LVL1367:
ARM GAS  /tmp/ccO72alg.s 			page 380


4957:Core/Src/bno055.c ****     }
 12143              		.loc 1 4957 18 view .LVU3268
 12144 0052 E6E7     		b	.L893
 12145              	.L895:
4976:Core/Src/bno055.c ****     }
 12146              		.loc 1 4976 18 view .LVU3269
 12147 0054 4FF0FF34 		mov	r4, #-1
 12148              	.LVL1368:
4976:Core/Src/bno055.c ****     }
 12149              		.loc 1 4976 18 view .LVU3270
 12150 0058 F2E7     		b	.L894
 12151              	.LVL1369:
 12152              	.L896:
4971:Core/Src/bno055.c ****         }
 12153              		.loc 1 4971 22 view .LVU3271
 12154 005a 4FF0FF34 		mov	r4, #-1
 12155              	.LVL1370:
4971:Core/Src/bno055.c ****         }
 12156              		.loc 1 4971 22 view .LVU3272
 12157 005e EFE7     		b	.L894
 12158              		.cfi_endproc
 12159              	.LFE84:
 12161              		.section	.text.bno055_convert_double_accel_xyz_msq,"ax",%progbits
 12162              		.align	1
 12163              		.global	bno055_convert_double_accel_xyz_msq
 12164              		.syntax unified
 12165              		.thumb
 12166              		.thumb_func
 12168              	bno055_convert_double_accel_xyz_msq:
 12169              	.LVL1371:
 12170              	.LFB85:
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 12171              		.loc 1 5002 1 is_stmt 1 view -0
 12172              		.cfi_startproc
 12173              		@ args = 0, pretend = 0, frame = 16
 12174              		@ frame_needed = 0, uses_anonymous_args = 0
5002:Core/Src/bno055.c ****     /* Variable used to return value of
 12175              		.loc 1 5002 1 is_stmt 0 view .LVU3274
 12176 0000 30B5     		push	{r4, r5, lr}
 12177              	.LCFI409:
 12178              		.cfi_def_cfa_offset 12
 12179              		.cfi_offset 4, -12
 12180              		.cfi_offset 5, -8
 12181              		.cfi_offset 14, -4
 12182 0002 85B0     		sub	sp, sp, #20
 12183              	.LCFI410:
 12184              		.cfi_def_cfa_offset 32
 12185 0004 0546     		mov	r5, r0
5005:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 12186              		.loc 1 5005 5 is_stmt 1 view .LVU3275
 12187              	.LVL1372:
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12188              		.loc 1 5006 5 view .LVU3276
5006:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12189              		.loc 1 5006 27 is_stmt 0 view .LVU3277
 12190 0006 0023     		movs	r3, #0
 12191 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
ARM GAS  /tmp/ccO72alg.s 			page 381


 12192 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12193 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5007:Core/Src/bno055.c **** 
 12194              		.loc 1 5007 5 is_stmt 1 view .LVU3278
5007:Core/Src/bno055.c **** 
 12195              		.loc 1 5007 8 is_stmt 0 view .LVU3279
 12196 0014 8DF80730 		strb	r3, [sp, #7]
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12197              		.loc 1 5011 5 is_stmt 1 view .LVU3280
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12198              		.loc 1 5011 16 is_stmt 0 view .LVU3281
 12199 0018 0DF10700 		add	r0, sp, #7
 12200              	.LVL1373:
5011:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MSQ)
 12201              		.loc 1 5011 16 view .LVU3282
 12202 001c FFF7FEFF 		bl	bno055_get_accel_unit
 12203              	.LVL1374:
 12204 0020 0446     		mov	r4, r0
 12205              	.LVL1375:
5012:Core/Src/bno055.c ****     {
 12206              		.loc 1 5012 5 is_stmt 1 view .LVU3283
5012:Core/Src/bno055.c ****     {
 12207              		.loc 1 5012 23 is_stmt 0 view .LVU3284
 12208 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5012:Core/Src/bno055.c ****     {
 12209              		.loc 1 5012 8 view .LVU3285
 12210 0026 43BB     		cbnz	r3, .L905
 12211              	.L900:
5016:Core/Src/bno055.c ****     {
 12212              		.loc 1 5016 5 is_stmt 1 view .LVU3286
5016:Core/Src/bno055.c ****     {
 12213              		.loc 1 5016 8 is_stmt 0 view .LVU3287
 12214 0028 74BB     		cbnz	r4, .L902
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12215              		.loc 1 5019 9 is_stmt 1 view .LVU3288
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12216              		.loc 1 5019 21 is_stmt 0 view .LVU3289
 12217 002a 02A8     		add	r0, sp, #8
 12218 002c FFF7FEFF 		bl	bno055_read_accel_xyz
 12219              	.LVL1376:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12220              		.loc 1 5019 18 view .LVU3290
 12221 0030 54FA80F4 		uxtab	r4, r4, r0
 12222              	.LVL1377:
5019:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12223              		.loc 1 5019 18 view .LVU3291
 12224 0034 64B2     		sxtb	r4, r4
 12225              	.LVL1378:
5020:Core/Src/bno055.c ****         {
 12226              		.loc 1 5020 9 is_stmt 1 view .LVU3292
5020:Core/Src/bno055.c ****         {
 12227              		.loc 1 5020 12 is_stmt 0 view .LVU3293
 12228 0036 54BB     		cbnz	r4, .L903
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12229              		.loc 1 5023 13 is_stmt 1 view .LVU3294
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12230              		.loc 1 5023 28 is_stmt 0 view .LVU3295
ARM GAS  /tmp/ccO72alg.s 			page 382


 12231 0038 BDF90800 		ldrsh	r0, [sp, #8]
 12232 003c FFF7FEFF 		bl	__aeabi_i2d
 12233              	.LVL1379:
 12234 0040 0022     		movs	r2, #0
 12235 0042 144B     		ldr	r3, .L906
 12236 0044 FFF7FEFF 		bl	__aeabi_ddiv
 12237              	.LVL1380:
5023:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MSQ);
 12238              		.loc 1 5023 26 view .LVU3296
 12239 0048 C5E90001 		strd	r0, [r5]
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12240              		.loc 1 5024 13 is_stmt 1 view .LVU3297
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12241              		.loc 1 5024 28 is_stmt 0 view .LVU3298
 12242 004c BDF90A00 		ldrsh	r0, [sp, #10]
 12243 0050 FFF7FEFF 		bl	__aeabi_i2d
 12244              	.LVL1381:
 12245 0054 0022     		movs	r2, #0
 12246 0056 0F4B     		ldr	r3, .L906
 12247 0058 FFF7FEFF 		bl	__aeabi_ddiv
 12248              	.LVL1382:
5024:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MSQ);
 12249              		.loc 1 5024 26 view .LVU3299
 12250 005c C5E90201 		strd	r0, [r5, #8]
5025:Core/Src/bno055.c ****         }
 12251              		.loc 1 5025 13 is_stmt 1 view .LVU3300
5025:Core/Src/bno055.c ****         }
 12252              		.loc 1 5025 28 is_stmt 0 view .LVU3301
 12253 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 12254 0064 FFF7FEFF 		bl	__aeabi_i2d
 12255              	.LVL1383:
 12256 0068 0022     		movs	r2, #0
 12257 006a 0A4B     		ldr	r3, .L906
 12258 006c FFF7FEFF 		bl	__aeabi_ddiv
 12259              	.LVL1384:
5025:Core/Src/bno055.c ****         }
 12260              		.loc 1 5025 26 view .LVU3302
 12261 0070 C5E90401 		strd	r0, [r5, #16]
 12262              	.LVL1385:
 12263              	.L901:
5037:Core/Src/bno055.c **** }
 12264              		.loc 1 5037 5 is_stmt 1 view .LVU3303
5038:Core/Src/bno055.c **** 
 12265              		.loc 1 5038 1 is_stmt 0 view .LVU3304
 12266 0074 2046     		mov	r0, r4
 12267 0076 05B0     		add	sp, sp, #20
 12268              	.LCFI411:
 12269              		.cfi_remember_state
 12270              		.cfi_def_cfa_offset 12
 12271              		@ sp needed
 12272 0078 30BD     		pop	{r4, r5, pc}
 12273              	.LVL1386:
 12274              	.L905:
 12275              	.LCFI412:
 12276              		.cfi_restore_state
5014:Core/Src/bno055.c ****     }
 12277              		.loc 1 5014 9 is_stmt 1 view .LVU3305
ARM GAS  /tmp/ccO72alg.s 			page 383


5014:Core/Src/bno055.c ****     }
 12278              		.loc 1 5014 21 is_stmt 0 view .LVU3306
 12279 007a 0020     		movs	r0, #0
 12280 007c FFF7FEFF 		bl	bno055_set_accel_unit
 12281              	.LVL1387:
5014:Core/Src/bno055.c ****     }
 12282              		.loc 1 5014 18 view .LVU3307
 12283 0080 54FA80F4 		uxtab	r4, r4, r0
 12284              	.LVL1388:
5014:Core/Src/bno055.c ****     }
 12285              		.loc 1 5014 18 view .LVU3308
 12286 0084 64B2     		sxtb	r4, r4
 12287              	.LVL1389:
5014:Core/Src/bno055.c ****     }
 12288              		.loc 1 5014 18 view .LVU3309
 12289 0086 CFE7     		b	.L900
 12290              	.L902:
5034:Core/Src/bno055.c ****     }
 12291              		.loc 1 5034 18 view .LVU3310
 12292 0088 4FF0FF34 		mov	r4, #-1
 12293              	.LVL1390:
5034:Core/Src/bno055.c ****     }
 12294              		.loc 1 5034 18 view .LVU3311
 12295 008c F2E7     		b	.L901
 12296              	.LVL1391:
 12297              	.L903:
5029:Core/Src/bno055.c ****         }
 12298              		.loc 1 5029 22 view .LVU3312
 12299 008e 4FF0FF34 		mov	r4, #-1
 12300              	.LVL1392:
5029:Core/Src/bno055.c ****         }
 12301              		.loc 1 5029 22 view .LVU3313
 12302 0092 EFE7     		b	.L901
 12303              	.L907:
 12304              		.align	2
 12305              	.L906:
 12306 0094 00005940 		.word	1079574528
 12307              		.cfi_endproc
 12308              	.LFE85:
 12310              		.section	.text.bno055_convert_double_accel_xyz_mg,"ax",%progbits
 12311              		.align	1
 12312              		.global	bno055_convert_double_accel_xyz_mg
 12313              		.syntax unified
 12314              		.thumb
 12315              		.thumb_func
 12317              	bno055_convert_double_accel_xyz_mg:
 12318              	.LVL1393:
 12319              	.LFB86:
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 12320              		.loc 1 5059 1 is_stmt 1 view -0
 12321              		.cfi_startproc
 12322              		@ args = 0, pretend = 0, frame = 16
 12323              		@ frame_needed = 0, uses_anonymous_args = 0
5059:Core/Src/bno055.c ****     /* Variable used to return value of
 12324              		.loc 1 5059 1 is_stmt 0 view .LVU3315
 12325 0000 30B5     		push	{r4, r5, lr}
 12326              	.LCFI413:
ARM GAS  /tmp/ccO72alg.s 			page 384


 12327              		.cfi_def_cfa_offset 12
 12328              		.cfi_offset 4, -12
 12329              		.cfi_offset 5, -8
 12330              		.cfi_offset 14, -4
 12331 0002 85B0     		sub	sp, sp, #20
 12332              	.LCFI414:
 12333              		.cfi_def_cfa_offset 32
 12334 0004 0546     		mov	r5, r0
5062:Core/Src/bno055.c ****     struct bno055_accel_t reg_accel_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
 12335              		.loc 1 5062 5 is_stmt 1 view .LVU3316
 12336              	.LVL1394:
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12337              		.loc 1 5063 5 view .LVU3317
5063:Core/Src/bno055.c ****     u8 accel_unit_u8 = BNO055_INIT_VALUE;
 12338              		.loc 1 5063 27 is_stmt 0 view .LVU3318
 12339 0006 0023     		movs	r3, #0
 12340 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 12341 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 12342 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5064:Core/Src/bno055.c **** 
 12343              		.loc 1 5064 5 is_stmt 1 view .LVU3319
5064:Core/Src/bno055.c **** 
 12344              		.loc 1 5064 8 is_stmt 0 view .LVU3320
 12345 0014 8DF80730 		strb	r3, [sp, #7]
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12346              		.loc 1 5068 5 is_stmt 1 view .LVU3321
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12347              		.loc 1 5068 16 is_stmt 0 view .LVU3322
 12348 0018 0DF10700 		add	r0, sp, #7
 12349              	.LVL1395:
5068:Core/Src/bno055.c ****     if (accel_unit_u8 != BNO055_ACCEL_UNIT_MG)
 12350              		.loc 1 5068 16 view .LVU3323
 12351 001c FFF7FEFF 		bl	bno055_get_accel_unit
 12352              	.LVL1396:
 12353 0020 0446     		mov	r4, r0
 12354              	.LVL1397:
5069:Core/Src/bno055.c ****     {
 12355              		.loc 1 5069 5 is_stmt 1 view .LVU3324
5069:Core/Src/bno055.c ****     {
 12356              		.loc 1 5069 23 is_stmt 0 view .LVU3325
 12357 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5069:Core/Src/bno055.c ****     {
 12358              		.loc 1 5069 8 view .LVU3326
 12359 0026 012B     		cmp	r3, #1
 12360 0028 1CD1     		bne	.L914
 12361              	.L909:
5073:Core/Src/bno055.c ****     {
 12362              		.loc 1 5073 5 is_stmt 1 view .LVU3327
5073:Core/Src/bno055.c ****     {
 12363              		.loc 1 5073 8 is_stmt 0 view .LVU3328
 12364 002a 14BB     		cbnz	r4, .L911
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12365              		.loc 1 5076 9 is_stmt 1 view .LVU3329
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12366              		.loc 1 5076 21 is_stmt 0 view .LVU3330
 12367 002c 02A8     		add	r0, sp, #8
 12368 002e FFF7FEFF 		bl	bno055_read_accel_xyz
ARM GAS  /tmp/ccO72alg.s 			page 385


 12369              	.LVL1398:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12370              		.loc 1 5076 18 view .LVU3331
 12371 0032 54FA80F4 		uxtab	r4, r4, r0
 12372              	.LVL1399:
5076:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12373              		.loc 1 5076 18 view .LVU3332
 12374 0036 64B2     		sxtb	r4, r4
 12375              	.LVL1400:
5077:Core/Src/bno055.c ****         {
 12376              		.loc 1 5077 9 is_stmt 1 view .LVU3333
5077:Core/Src/bno055.c ****         {
 12377              		.loc 1 5077 12 is_stmt 0 view .LVU3334
 12378 0038 F4B9     		cbnz	r4, .L912
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12379              		.loc 1 5080 13 is_stmt 1 view .LVU3335
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12380              		.loc 1 5080 28 is_stmt 0 view .LVU3336
 12381 003a BDF90800 		ldrsh	r0, [sp, #8]
 12382 003e FFF7FEFF 		bl	__aeabi_i2d
 12383              	.LVL1401:
5080:Core/Src/bno055.c ****             accel_xyz->y = (double)(reg_accel_xyz.y / BNO055_ACCEL_DIV_MG);
 12384              		.loc 1 5080 26 view .LVU3337
 12385 0042 C5E90001 		strd	r0, [r5]
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12386              		.loc 1 5081 13 is_stmt 1 view .LVU3338
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12387              		.loc 1 5081 28 is_stmt 0 view .LVU3339
 12388 0046 BDF90A00 		ldrsh	r0, [sp, #10]
 12389 004a FFF7FEFF 		bl	__aeabi_i2d
 12390              	.LVL1402:
5081:Core/Src/bno055.c ****             accel_xyz->z = (double)(reg_accel_xyz.z / BNO055_ACCEL_DIV_MG);
 12391              		.loc 1 5081 26 view .LVU3340
 12392 004e C5E90201 		strd	r0, [r5, #8]
5082:Core/Src/bno055.c ****         }
 12393              		.loc 1 5082 13 is_stmt 1 view .LVU3341
5082:Core/Src/bno055.c ****         }
 12394              		.loc 1 5082 28 is_stmt 0 view .LVU3342
 12395 0052 BDF90C00 		ldrsh	r0, [sp, #12]
 12396 0056 FFF7FEFF 		bl	__aeabi_i2d
 12397              	.LVL1403:
5082:Core/Src/bno055.c ****         }
 12398              		.loc 1 5082 26 view .LVU3343
 12399 005a C5E90401 		strd	r0, [r5, #16]
 12400              	.LVL1404:
 12401              	.L910:
5094:Core/Src/bno055.c **** }
 12402              		.loc 1 5094 5 is_stmt 1 view .LVU3344
5095:Core/Src/bno055.c **** 
 12403              		.loc 1 5095 1 is_stmt 0 view .LVU3345
 12404 005e 2046     		mov	r0, r4
 12405 0060 05B0     		add	sp, sp, #20
 12406              	.LCFI415:
 12407              		.cfi_remember_state
 12408              		.cfi_def_cfa_offset 12
 12409              		@ sp needed
 12410 0062 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 386


 12411              	.LVL1405:
 12412              	.L914:
 12413              	.LCFI416:
 12414              		.cfi_restore_state
5071:Core/Src/bno055.c ****     }
 12415              		.loc 1 5071 9 is_stmt 1 view .LVU3346
5071:Core/Src/bno055.c ****     }
 12416              		.loc 1 5071 21 is_stmt 0 view .LVU3347
 12417 0064 0120     		movs	r0, #1
 12418 0066 FFF7FEFF 		bl	bno055_set_accel_unit
 12419              	.LVL1406:
5071:Core/Src/bno055.c ****     }
 12420              		.loc 1 5071 18 view .LVU3348
 12421 006a 54FA80F4 		uxtab	r4, r4, r0
 12422              	.LVL1407:
5071:Core/Src/bno055.c ****     }
 12423              		.loc 1 5071 18 view .LVU3349
 12424 006e 64B2     		sxtb	r4, r4
 12425              	.LVL1408:
5071:Core/Src/bno055.c ****     }
 12426              		.loc 1 5071 18 view .LVU3350
 12427 0070 DBE7     		b	.L909
 12428              	.L911:
5091:Core/Src/bno055.c ****     }
 12429              		.loc 1 5091 18 view .LVU3351
 12430 0072 4FF0FF34 		mov	r4, #-1
 12431              	.LVL1409:
5091:Core/Src/bno055.c ****     }
 12432              		.loc 1 5091 18 view .LVU3352
 12433 0076 F2E7     		b	.L910
 12434              	.LVL1410:
 12435              	.L912:
5086:Core/Src/bno055.c ****         }
 12436              		.loc 1 5086 22 view .LVU3353
 12437 0078 4FF0FF34 		mov	r4, #-1
 12438              	.LVL1411:
5086:Core/Src/bno055.c ****         }
 12439              		.loc 1 5086 22 view .LVU3354
 12440 007c EFE7     		b	.L910
 12441              		.cfi_endproc
 12442              	.LFE86:
 12444              		.section	.text.bno055_set_gyro_unit,"ax",%progbits
 12445              		.align	1
 12446              		.global	bno055_set_gyro_unit
 12447              		.syntax unified
 12448              		.thumb
 12449              		.thumb_func
 12451              	bno055_set_gyro_unit:
 12452              	.LVL1412:
 12453              	.LFB136:
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12454              		.loc 1 7597 1 is_stmt 1 view -0
 12455              		.cfi_startproc
 12456              		@ args = 0, pretend = 0, frame = 8
 12457              		@ frame_needed = 0, uses_anonymous_args = 0
7597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 12458              		.loc 1 7597 1 is_stmt 0 view .LVU3356
ARM GAS  /tmp/ccO72alg.s 			page 387


 12459 0000 30B5     		push	{r4, r5, lr}
 12460              	.LCFI417:
 12461              		.cfi_def_cfa_offset 12
 12462              		.cfi_offset 4, -12
 12463              		.cfi_offset 5, -8
 12464              		.cfi_offset 14, -4
 12465 0002 83B0     		sub	sp, sp, #12
 12466              	.LCFI418:
 12467              		.cfi_def_cfa_offset 24
7598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 12468              		.loc 1 7598 5 is_stmt 1 view .LVU3357
 12469              	.LVL1413:
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12470              		.loc 1 7599 5 view .LVU3358
7599:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 12471              		.loc 1 7599 8 is_stmt 0 view .LVU3359
 12472 0004 0023     		movs	r3, #0
 12473 0006 8DF80730 		strb	r3, [sp, #7]
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12474              		.loc 1 7600 5 is_stmt 1 view .LVU3360
7600:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 12475              		.loc 1 7600 8 is_stmt 0 view .LVU3361
 12476 000a 8DF80630 		strb	r3, [sp, #6]
7601:Core/Src/bno055.c **** 
 12477              		.loc 1 7601 5 is_stmt 1 view .LVU3362
 12478              	.LVL1414:
7604:Core/Src/bno055.c ****     {
 12479              		.loc 1 7604 5 view .LVU3363
7604:Core/Src/bno055.c ****     {
 12480              		.loc 1 7604 18 is_stmt 0 view .LVU3364
 12481 000e 264B     		ldr	r3, .L925
 12482 0010 1B68     		ldr	r3, [r3]
7604:Core/Src/bno055.c ****     {
 12483              		.loc 1 7604 8 view .LVU3365
 12484 0012 002B     		cmp	r3, #0
 12485 0014 44D0     		beq	.L919
 12486 0016 0546     		mov	r5, r0
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12487              		.loc 1 7613 9 is_stmt 1 view .LVU3366
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12488              		.loc 1 7613 19 is_stmt 0 view .LVU3367
 12489 0018 0DF10600 		add	r0, sp, #6
 12490              	.LVL1415:
7613:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 12491              		.loc 1 7613 19 view .LVU3368
 12492 001c FFF7FEFF 		bl	bno055_get_operation_mode
 12493              	.LVL1416:
7614:Core/Src/bno055.c ****         {
 12494              		.loc 1 7614 9 is_stmt 1 view .LVU3369
7614:Core/Src/bno055.c ****         {
 12495              		.loc 1 7614 12 is_stmt 0 view .LVU3370
 12496 0020 0446     		mov	r4, r0
 12497 0022 60BB     		cbnz	r0, .L920
7616:Core/Src/bno055.c ****             {
 12498              		.loc 1 7616 13 is_stmt 1 view .LVU3371
7616:Core/Src/bno055.c ****             {
 12499              		.loc 1 7616 32 is_stmt 0 view .LVU3372
ARM GAS  /tmp/ccO72alg.s 			page 388


 12500 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7616:Core/Src/bno055.c ****             {
 12501              		.loc 1 7616 16 view .LVU3373
 12502 0028 1BBB     		cbnz	r3, .L923
 12503              	.LVL1417:
 12504              	.L918:
7620:Core/Src/bno055.c ****             {
 12505              		.loc 1 7620 13 is_stmt 1 view .LVU3374
7620:Core/Src/bno055.c ****             {
 12506              		.loc 1 7620 16 is_stmt 0 view .LVU3375
 12507 002a 84BB     		cbnz	r4, .L921
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12508              		.loc 1 7623 17 is_stmt 1 view .LVU3376
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12509              		.loc 1 7623 36 is_stmt 0 view .LVU3377
 12510 002c 1E4B     		ldr	r3, .L925
 12511 002e 1868     		ldr	r0, [r3]
 12512 0030 0469     		ldr	r4, [r0, #16]
 12513              	.LVL1418:
7623:Core/Src/bno055.c ****                                                           BNO055_GYRO_UNIT_REG,
 12514              		.loc 1 7623 28 view .LVU3378
 12515 0032 0123     		movs	r3, #1
 12516 0034 0DF10702 		add	r2, sp, #7
 12517 0038 3B21     		movs	r1, #59
 12518 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12519 003c A047     		blx	r4
 12520              	.LVL1419:
7627:Core/Src/bno055.c ****                 {
 12521              		.loc 1 7627 17 is_stmt 1 view .LVU3379
7627:Core/Src/bno055.c ****                 {
 12522              		.loc 1 7627 20 is_stmt 0 view .LVU3380
 12523 003e 0446     		mov	r4, r0
 12524 0040 F8B9     		cbnz	r0, .L917
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12525              		.loc 1 7629 21 is_stmt 1 view .LVU3381
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12526              		.loc 1 7629 32 is_stmt 0 view .LVU3382
 12527 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 12528              	.LVL1420:
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12529              		.loc 1 7629 32 view .LVU3383
 12530 0046 20F00200 		bic	r0, r0, #2
 12531 004a 43B2     		sxtb	r3, r0
 12532 004c 6800     		lsls	r0, r5, #1
 12533 004e 00F00200 		and	r0, r0, #2
 12534 0052 1843     		orrs	r0, r0, r3
7629:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 12535              		.loc 1 7629 30 view .LVU3384
 12536 0054 8DF80700 		strb	r0, [sp, #7]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12537              		.loc 1 7630 21 is_stmt 1 view .LVU3385
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12538              		.loc 1 7630 41 is_stmt 0 view .LVU3386
 12539 0058 134B     		ldr	r3, .L925
 12540 005a 1868     		ldr	r0, [r3]
 12541 005c C568     		ldr	r5, [r0, #12]
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
ARM GAS  /tmp/ccO72alg.s 			page 389


 12542              		.loc 1 7630 33 view .LVU3387
 12543 005e 0123     		movs	r3, #1
 12544 0060 0DF10702 		add	r2, sp, #7
 12545 0064 3B21     		movs	r1, #59
 12546 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 12547 0068 A847     		blx	r5
 12548              	.LVL1421:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12549              		.loc 1 7630 30 view .LVU3388
 12550 006a 54FA80F4 		uxtab	r4, r4, r0
 12551 006e 64B2     		sxtb	r4, r4
 12552              	.LVL1422:
7630:Core/Src/bno055.c ****                                                                 BNO055_GYRO_UNIT_REG,
 12553              		.loc 1 7630 30 view .LVU3389
 12554 0070 07E0     		b	.L917
 12555              	.LVL1423:
 12556              	.L923:
7618:Core/Src/bno055.c ****             }
 12557              		.loc 1 7618 17 is_stmt 1 view .LVU3390
7618:Core/Src/bno055.c ****             }
 12558              		.loc 1 7618 28 is_stmt 0 view .LVU3391
 12559 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 12560              	.LVL1424:
7618:Core/Src/bno055.c ****             }
 12561              		.loc 1 7618 25 view .LVU3392
 12562 0076 54FA80F4 		uxtab	r4, r4, r0
 12563 007a 64B2     		sxtb	r4, r4
 12564              	.LVL1425:
7618:Core/Src/bno055.c ****             }
 12565              		.loc 1 7618 25 view .LVU3393
 12566 007c D5E7     		b	.L918
 12567              	.LVL1426:
 12568              	.L920:
7643:Core/Src/bno055.c ****         }
 12569              		.loc 1 7643 22 view .LVU3394
 12570 007e 4FF0FF34 		mov	r4, #-1
 12571              	.LVL1427:
 12572              	.L917:
7646:Core/Src/bno055.c ****     {
 12573              		.loc 1 7646 5 is_stmt 1 view .LVU3395
7646:Core/Src/bno055.c ****     {
 12574              		.loc 1 7646 24 is_stmt 0 view .LVU3396
 12575 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7646:Core/Src/bno055.c ****     {
 12576              		.loc 1 7646 8 view .LVU3397
 12577 0086 28B9     		cbnz	r0, .L924
 12578              	.LVL1428:
 12579              	.L916:
7654:Core/Src/bno055.c **** 
 12580              		.loc 1 7654 1 view .LVU3398
 12581 0088 2046     		mov	r0, r4
 12582 008a 03B0     		add	sp, sp, #12
 12583              	.LCFI419:
 12584              		.cfi_remember_state
 12585              		.cfi_def_cfa_offset 12
 12586              		@ sp needed
 12587 008c 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 390


 12588              	.LVL1429:
 12589              	.L921:
 12590              	.LCFI420:
 12591              		.cfi_restore_state
7638:Core/Src/bno055.c ****             }
 12592              		.loc 1 7638 26 view .LVU3399
 12593 008e 4FF0FF34 		mov	r4, #-1
 12594              	.LVL1430:
7638:Core/Src/bno055.c ****             }
 12595              		.loc 1 7638 26 view .LVU3400
 12596 0092 F6E7     		b	.L917
 12597              	.LVL1431:
 12598              	.L924:
7650:Core/Src/bno055.c ****     }
 12599              		.loc 1 7650 9 is_stmt 1 view .LVU3401
7650:Core/Src/bno055.c ****     }
 12600              		.loc 1 7650 21 is_stmt 0 view .LVU3402
 12601 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 12602              	.LVL1432:
7650:Core/Src/bno055.c ****     }
 12603              		.loc 1 7650 18 view .LVU3403
 12604 0098 54FA80F4 		uxtab	r4, r4, r0
 12605              	.LVL1433:
7650:Core/Src/bno055.c ****     }
 12606              		.loc 1 7650 18 view .LVU3404
 12607 009c 64B2     		sxtb	r4, r4
 12608              	.LVL1434:
7650:Core/Src/bno055.c ****     }
 12609              		.loc 1 7650 18 view .LVU3405
 12610 009e F3E7     		b	.L916
 12611              	.LVL1435:
 12612              	.L919:
7606:Core/Src/bno055.c ****     }
 12613              		.loc 1 7606 16 view .LVU3406
 12614 00a0 6FF07E04 		mvn	r4, #126
 12615 00a4 F0E7     		b	.L916
 12616              	.L926:
 12617 00a6 00BF     		.align	2
 12618              	.L925:
 12619 00a8 00000000 		.word	.LANCHOR0
 12620              		.cfi_endproc
 12621              	.LFE136:
 12623              		.section	.text.bno055_convert_float_gyro_x_dps,"ax",%progbits
 12624              		.align	1
 12625              		.global	bno055_convert_float_gyro_x_dps
 12626              		.syntax unified
 12627              		.thumb
 12628              		.thumb_func
 12630              	bno055_convert_float_gyro_x_dps:
 12631              	.LVL1436:
 12632              	.LFB53:
3452:Core/Src/bno055.c ****     /* Variable used to return value of
 12633              		.loc 1 3452 1 is_stmt 1 view -0
 12634              		.cfi_startproc
 12635              		@ args = 0, pretend = 0, frame = 8
 12636              		@ frame_needed = 0, uses_anonymous_args = 0
3452:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccO72alg.s 			page 391


 12637              		.loc 1 3452 1 is_stmt 0 view .LVU3408
 12638 0000 30B5     		push	{r4, r5, lr}
 12639              	.LCFI421:
 12640              		.cfi_def_cfa_offset 12
 12641              		.cfi_offset 4, -12
 12642              		.cfi_offset 5, -8
 12643              		.cfi_offset 14, -4
 12644 0002 83B0     		sub	sp, sp, #12
 12645              	.LCFI422:
 12646              		.cfi_def_cfa_offset 24
 12647 0004 0546     		mov	r5, r0
3455:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12648              		.loc 1 3455 5 is_stmt 1 view .LVU3409
 12649              	.LVL1437:
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12650              		.loc 1 3456 5 view .LVU3410
3456:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12651              		.loc 1 3456 9 is_stmt 0 view .LVU3411
 12652 0006 0023     		movs	r3, #0
 12653 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3457:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12654              		.loc 1 3457 5 is_stmt 1 view .LVU3412
 12655              	.LVL1438:
3458:Core/Src/bno055.c **** 
 12656              		.loc 1 3458 5 view .LVU3413
3458:Core/Src/bno055.c **** 
 12657              		.loc 1 3458 8 is_stmt 0 view .LVU3414
 12658 000c 8DF80530 		strb	r3, [sp, #5]
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12659              		.loc 1 3462 5 is_stmt 1 view .LVU3415
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12660              		.loc 1 3462 16 is_stmt 0 view .LVU3416
 12661 0010 0DF10500 		add	r0, sp, #5
 12662              	.LVL1439:
3462:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12663              		.loc 1 3462 16 view .LVU3417
 12664 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12665              	.LVL1440:
 12666 0018 0446     		mov	r4, r0
 12667              	.LVL1441:
3463:Core/Src/bno055.c ****     {
 12668              		.loc 1 3463 5 is_stmt 1 view .LVU3418
3463:Core/Src/bno055.c ****     {
 12669              		.loc 1 3463 22 is_stmt 0 view .LVU3419
 12670 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3463:Core/Src/bno055.c ****     {
 12671              		.loc 1 3463 8 view .LVU3420
 12672 001e B3B9     		cbnz	r3, .L933
 12673              	.L928:
3467:Core/Src/bno055.c ****     {
 12674              		.loc 1 3467 5 is_stmt 1 view .LVU3421
3467:Core/Src/bno055.c ****     {
 12675              		.loc 1 3467 8 is_stmt 0 view .LVU3422
 12676 0020 E4B9     		cbnz	r4, .L930
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12677              		.loc 1 3470 9 is_stmt 1 view .LVU3423
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 392


 12678              		.loc 1 3470 21 is_stmt 0 view .LVU3424
 12679 0022 0DF10600 		add	r0, sp, #6
 12680 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 12681              	.LVL1442:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12682              		.loc 1 3470 18 view .LVU3425
 12683 002a 54FA80F4 		uxtab	r4, r4, r0
 12684              	.LVL1443:
3470:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12685              		.loc 1 3470 18 view .LVU3426
 12686 002e 64B2     		sxtb	r4, r4
 12687              	.LVL1444:
3471:Core/Src/bno055.c ****         {
 12688              		.loc 1 3471 9 is_stmt 1 view .LVU3427
3471:Core/Src/bno055.c ****         {
 12689              		.loc 1 3471 12 is_stmt 0 view .LVU3428
 12690 0030 BCB9     		cbnz	r4, .L931
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12691              		.loc 1 3474 13 is_stmt 1 view .LVU3429
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12692              		.loc 1 3474 45 is_stmt 0 view .LVU3430
 12693 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12694 0036 FFF7FEFF 		bl	__aeabi_i2d
 12695              	.LVL1445:
 12696 003a 0022     		movs	r2, #0
 12697 003c 0A4B     		ldr	r3, .L934
 12698 003e FFF7FEFF 		bl	__aeabi_dmul
 12699              	.LVL1446:
3474:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12700              		.loc 1 3474 20 view .LVU3431
 12701 0042 FFF7FEFF 		bl	__aeabi_d2f
 12702              	.LVL1447:
3475:Core/Src/bno055.c ****         }
 12703              		.loc 1 3475 13 is_stmt 1 view .LVU3432
3475:Core/Src/bno055.c ****         }
 12704              		.loc 1 3475 23 is_stmt 0 view .LVU3433
 12705 0046 2860     		str	r0, [r5]	@ float
 12706              	.LVL1448:
 12707              	.L929:
3487:Core/Src/bno055.c **** }
 12708              		.loc 1 3487 5 is_stmt 1 view .LVU3434
3488:Core/Src/bno055.c **** 
 12709              		.loc 1 3488 1 is_stmt 0 view .LVU3435
 12710 0048 2046     		mov	r0, r4
 12711 004a 03B0     		add	sp, sp, #12
 12712              	.LCFI423:
 12713              		.cfi_remember_state
 12714              		.cfi_def_cfa_offset 12
 12715              		@ sp needed
 12716 004c 30BD     		pop	{r4, r5, pc}
 12717              	.LVL1449:
 12718              	.L933:
 12719              	.LCFI424:
 12720              		.cfi_restore_state
3465:Core/Src/bno055.c ****     }
 12721              		.loc 1 3465 9 is_stmt 1 view .LVU3436
3465:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 393


 12722              		.loc 1 3465 21 is_stmt 0 view .LVU3437
 12723 004e 0020     		movs	r0, #0
 12724 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12725              	.LVL1450:
3465:Core/Src/bno055.c ****     }
 12726              		.loc 1 3465 18 view .LVU3438
 12727 0054 54FA80F4 		uxtab	r4, r4, r0
 12728              	.LVL1451:
3465:Core/Src/bno055.c ****     }
 12729              		.loc 1 3465 18 view .LVU3439
 12730 0058 64B2     		sxtb	r4, r4
 12731              	.LVL1452:
3465:Core/Src/bno055.c ****     }
 12732              		.loc 1 3465 18 view .LVU3440
 12733 005a E1E7     		b	.L928
 12734              	.L930:
3484:Core/Src/bno055.c ****     }
 12735              		.loc 1 3484 18 view .LVU3441
 12736 005c 4FF0FF34 		mov	r4, #-1
 12737              	.LVL1453:
3484:Core/Src/bno055.c ****     }
 12738              		.loc 1 3484 18 view .LVU3442
 12739 0060 F2E7     		b	.L929
 12740              	.LVL1454:
 12741              	.L931:
3479:Core/Src/bno055.c ****         }
 12742              		.loc 1 3479 22 view .LVU3443
 12743 0062 4FF0FF34 		mov	r4, #-1
 12744              	.LVL1455:
3479:Core/Src/bno055.c ****         }
 12745              		.loc 1 3479 22 view .LVU3444
 12746 0066 EFE7     		b	.L929
 12747              	.L935:
 12748              		.align	2
 12749              	.L934:
 12750 0068 0000B03F 		.word	1068498944
 12751              		.cfi_endproc
 12752              	.LFE53:
 12754              		.section	.text.bno055_convert_float_gyro_x_rps,"ax",%progbits
 12755              		.align	1
 12756              		.global	bno055_convert_float_gyro_x_rps
 12757              		.syntax unified
 12758              		.thumb
 12759              		.thumb_func
 12761              	bno055_convert_float_gyro_x_rps:
 12762              	.LVL1456:
 12763              	.LFB54:
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12764              		.loc 1 3504 1 is_stmt 1 view -0
 12765              		.cfi_startproc
 12766              		@ args = 0, pretend = 0, frame = 8
 12767              		@ frame_needed = 0, uses_anonymous_args = 0
3504:Core/Src/bno055.c ****     /* Variable used to return value of
 12768              		.loc 1 3504 1 is_stmt 0 view .LVU3446
 12769 0000 30B5     		push	{r4, r5, lr}
 12770              	.LCFI425:
 12771              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 394


 12772              		.cfi_offset 4, -12
 12773              		.cfi_offset 5, -8
 12774              		.cfi_offset 14, -4
 12775 0002 83B0     		sub	sp, sp, #12
 12776              	.LCFI426:
 12777              		.cfi_def_cfa_offset 24
 12778 0004 0546     		mov	r5, r0
3507:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 12779              		.loc 1 3507 5 is_stmt 1 view .LVU3447
 12780              	.LVL1457:
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12781              		.loc 1 3508 5 view .LVU3448
3508:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12782              		.loc 1 3508 9 is_stmt 0 view .LVU3449
 12783 0006 0023     		movs	r3, #0
 12784 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3509:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12785              		.loc 1 3509 5 is_stmt 1 view .LVU3450
 12786              	.LVL1458:
3510:Core/Src/bno055.c **** 
 12787              		.loc 1 3510 5 view .LVU3451
3510:Core/Src/bno055.c **** 
 12788              		.loc 1 3510 8 is_stmt 0 view .LVU3452
 12789 000c 8DF80530 		strb	r3, [sp, #5]
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12790              		.loc 1 3514 5 is_stmt 1 view .LVU3453
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12791              		.loc 1 3514 16 is_stmt 0 view .LVU3454
 12792 0010 0DF10500 		add	r0, sp, #5
 12793              	.LVL1459:
3514:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 12794              		.loc 1 3514 16 view .LVU3455
 12795 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12796              	.LVL1460:
 12797 0018 0446     		mov	r4, r0
 12798              	.LVL1461:
3515:Core/Src/bno055.c ****     {
 12799              		.loc 1 3515 5 is_stmt 1 view .LVU3456
3515:Core/Src/bno055.c ****     {
 12800              		.loc 1 3515 22 is_stmt 0 view .LVU3457
 12801 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3515:Core/Src/bno055.c ****     {
 12802              		.loc 1 3515 8 view .LVU3458
 12803 001e 012B     		cmp	r3, #1
 12804 0020 16D1     		bne	.L942
 12805              	.L937:
3519:Core/Src/bno055.c ****     {
 12806              		.loc 1 3519 5 is_stmt 1 view .LVU3459
3519:Core/Src/bno055.c ****     {
 12807              		.loc 1 3519 8 is_stmt 0 view .LVU3460
 12808 0022 E4B9     		cbnz	r4, .L939
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12809              		.loc 1 3522 9 is_stmt 1 view .LVU3461
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12810              		.loc 1 3522 21 is_stmt 0 view .LVU3462
 12811 0024 0DF10600 		add	r0, sp, #6
 12812 0028 FFF7FEFF 		bl	bno055_read_gyro_x
ARM GAS  /tmp/ccO72alg.s 			page 395


 12813              	.LVL1462:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12814              		.loc 1 3522 18 view .LVU3463
 12815 002c 54FA80F4 		uxtab	r4, r4, r0
 12816              	.LVL1463:
3522:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12817              		.loc 1 3522 18 view .LVU3464
 12818 0030 64B2     		sxtb	r4, r4
 12819              	.LVL1464:
3523:Core/Src/bno055.c ****         {
 12820              		.loc 1 3523 9 is_stmt 1 view .LVU3465
3523:Core/Src/bno055.c ****         {
 12821              		.loc 1 3523 12 is_stmt 0 view .LVU3466
 12822 0032 BCB9     		cbnz	r4, .L940
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12823              		.loc 1 3526 13 is_stmt 1 view .LVU3467
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12824              		.loc 1 3526 45 is_stmt 0 view .LVU3468
 12825 0034 BDF90600 		ldrsh	r0, [sp, #6]
 12826 0038 FFF7FEFF 		bl	__aeabi_i2d
 12827              	.LVL1465:
 12828 003c 0022     		movs	r2, #0
 12829 003e 0B4B     		ldr	r3, .L943
 12830 0040 FFF7FEFF 		bl	__aeabi_ddiv
 12831              	.LVL1466:
3526:Core/Src/bno055.c ****             *gyro_x_f = data_f;
 12832              		.loc 1 3526 20 view .LVU3469
 12833 0044 FFF7FEFF 		bl	__aeabi_d2f
 12834              	.LVL1467:
3527:Core/Src/bno055.c ****         }
 12835              		.loc 1 3527 13 is_stmt 1 view .LVU3470
3527:Core/Src/bno055.c ****         }
 12836              		.loc 1 3527 23 is_stmt 0 view .LVU3471
 12837 0048 2860     		str	r0, [r5]	@ float
 12838              	.LVL1468:
 12839              	.L938:
3539:Core/Src/bno055.c **** }
 12840              		.loc 1 3539 5 is_stmt 1 view .LVU3472
3540:Core/Src/bno055.c **** 
 12841              		.loc 1 3540 1 is_stmt 0 view .LVU3473
 12842 004a 2046     		mov	r0, r4
 12843 004c 03B0     		add	sp, sp, #12
 12844              	.LCFI427:
 12845              		.cfi_remember_state
 12846              		.cfi_def_cfa_offset 12
 12847              		@ sp needed
 12848 004e 30BD     		pop	{r4, r5, pc}
 12849              	.LVL1469:
 12850              	.L942:
 12851              	.LCFI428:
 12852              		.cfi_restore_state
3517:Core/Src/bno055.c ****     }
 12853              		.loc 1 3517 9 is_stmt 1 view .LVU3474
3517:Core/Src/bno055.c ****     }
 12854              		.loc 1 3517 21 is_stmt 0 view .LVU3475
 12855 0050 0120     		movs	r0, #1
 12856 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
ARM GAS  /tmp/ccO72alg.s 			page 396


 12857              	.LVL1470:
3517:Core/Src/bno055.c ****     }
 12858              		.loc 1 3517 18 view .LVU3476
 12859 0056 54FA80F4 		uxtab	r4, r4, r0
 12860              	.LVL1471:
3517:Core/Src/bno055.c ****     }
 12861              		.loc 1 3517 18 view .LVU3477
 12862 005a 64B2     		sxtb	r4, r4
 12863              	.LVL1472:
3517:Core/Src/bno055.c ****     }
 12864              		.loc 1 3517 18 view .LVU3478
 12865 005c E1E7     		b	.L937
 12866              	.L939:
3536:Core/Src/bno055.c ****     }
 12867              		.loc 1 3536 18 view .LVU3479
 12868 005e 4FF0FF34 		mov	r4, #-1
 12869              	.LVL1473:
3536:Core/Src/bno055.c ****     }
 12870              		.loc 1 3536 18 view .LVU3480
 12871 0062 F2E7     		b	.L938
 12872              	.LVL1474:
 12873              	.L940:
3531:Core/Src/bno055.c ****         }
 12874              		.loc 1 3531 22 view .LVU3481
 12875 0064 4FF0FF34 		mov	r4, #-1
 12876              	.LVL1475:
3531:Core/Src/bno055.c ****         }
 12877              		.loc 1 3531 22 view .LVU3482
 12878 0068 EFE7     		b	.L938
 12879              	.L944:
 12880 006a 00BF     		.align	2
 12881              	.L943:
 12882 006c 00208C40 		.word	1082925056
 12883              		.cfi_endproc
 12884              	.LFE54:
 12886              		.section	.text.bno055_convert_float_gyro_y_dps,"ax",%progbits
 12887              		.align	1
 12888              		.global	bno055_convert_float_gyro_y_dps
 12889              		.syntax unified
 12890              		.thumb
 12891              		.thumb_func
 12893              	bno055_convert_float_gyro_y_dps:
 12894              	.LVL1476:
 12895              	.LFB55:
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 12896              		.loc 1 3556 1 is_stmt 1 view -0
 12897              		.cfi_startproc
 12898              		@ args = 0, pretend = 0, frame = 8
 12899              		@ frame_needed = 0, uses_anonymous_args = 0
3556:Core/Src/bno055.c ****     /* Variable used to return value of
 12900              		.loc 1 3556 1 is_stmt 0 view .LVU3484
 12901 0000 30B5     		push	{r4, r5, lr}
 12902              	.LCFI429:
 12903              		.cfi_def_cfa_offset 12
 12904              		.cfi_offset 4, -12
 12905              		.cfi_offset 5, -8
 12906              		.cfi_offset 14, -4
ARM GAS  /tmp/ccO72alg.s 			page 397


 12907 0002 83B0     		sub	sp, sp, #12
 12908              	.LCFI430:
 12909              		.cfi_def_cfa_offset 24
 12910 0004 0546     		mov	r5, r0
3559:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 12911              		.loc 1 3559 5 is_stmt 1 view .LVU3485
 12912              	.LVL1477:
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12913              		.loc 1 3560 5 view .LVU3486
3560:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 12914              		.loc 1 3560 9 is_stmt 0 view .LVU3487
 12915 0006 0023     		movs	r3, #0
 12916 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3561:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 12917              		.loc 1 3561 5 is_stmt 1 view .LVU3488
 12918              	.LVL1478:
3562:Core/Src/bno055.c **** 
 12919              		.loc 1 3562 5 view .LVU3489
3562:Core/Src/bno055.c **** 
 12920              		.loc 1 3562 8 is_stmt 0 view .LVU3490
 12921 000c 8DF80530 		strb	r3, [sp, #5]
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12922              		.loc 1 3566 5 is_stmt 1 view .LVU3491
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12923              		.loc 1 3566 16 is_stmt 0 view .LVU3492
 12924 0010 0DF10500 		add	r0, sp, #5
 12925              	.LVL1479:
3566:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 12926              		.loc 1 3566 16 view .LVU3493
 12927 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 12928              	.LVL1480:
 12929 0018 0446     		mov	r4, r0
 12930              	.LVL1481:
3567:Core/Src/bno055.c ****     {
 12931              		.loc 1 3567 5 is_stmt 1 view .LVU3494
3567:Core/Src/bno055.c ****     {
 12932              		.loc 1 3567 22 is_stmt 0 view .LVU3495
 12933 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3567:Core/Src/bno055.c ****     {
 12934              		.loc 1 3567 8 view .LVU3496
 12935 001e B3B9     		cbnz	r3, .L951
 12936              	.L946:
3571:Core/Src/bno055.c ****     {
 12937              		.loc 1 3571 5 is_stmt 1 view .LVU3497
3571:Core/Src/bno055.c ****     {
 12938              		.loc 1 3571 8 is_stmt 0 view .LVU3498
 12939 0020 E4B9     		cbnz	r4, .L948
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12940              		.loc 1 3574 9 is_stmt 1 view .LVU3499
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12941              		.loc 1 3574 21 is_stmt 0 view .LVU3500
 12942 0022 0DF10600 		add	r0, sp, #6
 12943 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 12944              	.LVL1482:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12945              		.loc 1 3574 18 view .LVU3501
 12946 002a 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 398


 12947              	.LVL1483:
3574:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 12948              		.loc 1 3574 18 view .LVU3502
 12949 002e 64B2     		sxtb	r4, r4
 12950              	.LVL1484:
3575:Core/Src/bno055.c ****         {
 12951              		.loc 1 3575 9 is_stmt 1 view .LVU3503
3575:Core/Src/bno055.c ****         {
 12952              		.loc 1 3575 12 is_stmt 0 view .LVU3504
 12953 0030 BCB9     		cbnz	r4, .L949
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12954              		.loc 1 3578 13 is_stmt 1 view .LVU3505
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12955              		.loc 1 3578 45 is_stmt 0 view .LVU3506
 12956 0032 BDF90600 		ldrsh	r0, [sp, #6]
 12957 0036 FFF7FEFF 		bl	__aeabi_i2d
 12958              	.LVL1485:
 12959 003a 0022     		movs	r2, #0
 12960 003c 0A4B     		ldr	r3, .L952
 12961 003e FFF7FEFF 		bl	__aeabi_dmul
 12962              	.LVL1486:
3578:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 12963              		.loc 1 3578 20 view .LVU3507
 12964 0042 FFF7FEFF 		bl	__aeabi_d2f
 12965              	.LVL1487:
3579:Core/Src/bno055.c ****         }
 12966              		.loc 1 3579 13 is_stmt 1 view .LVU3508
3579:Core/Src/bno055.c ****         }
 12967              		.loc 1 3579 23 is_stmt 0 view .LVU3509
 12968 0046 2860     		str	r0, [r5]	@ float
 12969              	.LVL1488:
 12970              	.L947:
3591:Core/Src/bno055.c **** }
 12971              		.loc 1 3591 5 is_stmt 1 view .LVU3510
3592:Core/Src/bno055.c **** 
 12972              		.loc 1 3592 1 is_stmt 0 view .LVU3511
 12973 0048 2046     		mov	r0, r4
 12974 004a 03B0     		add	sp, sp, #12
 12975              	.LCFI431:
 12976              		.cfi_remember_state
 12977              		.cfi_def_cfa_offset 12
 12978              		@ sp needed
 12979 004c 30BD     		pop	{r4, r5, pc}
 12980              	.LVL1489:
 12981              	.L951:
 12982              	.LCFI432:
 12983              		.cfi_restore_state
3569:Core/Src/bno055.c ****     }
 12984              		.loc 1 3569 9 is_stmt 1 view .LVU3512
3569:Core/Src/bno055.c ****     }
 12985              		.loc 1 3569 21 is_stmt 0 view .LVU3513
 12986 004e 0020     		movs	r0, #0
 12987 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 12988              	.LVL1490:
3569:Core/Src/bno055.c ****     }
 12989              		.loc 1 3569 18 view .LVU3514
 12990 0054 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 399


 12991              	.LVL1491:
3569:Core/Src/bno055.c ****     }
 12992              		.loc 1 3569 18 view .LVU3515
 12993 0058 64B2     		sxtb	r4, r4
 12994              	.LVL1492:
3569:Core/Src/bno055.c ****     }
 12995              		.loc 1 3569 18 view .LVU3516
 12996 005a E1E7     		b	.L946
 12997              	.L948:
3588:Core/Src/bno055.c ****     }
 12998              		.loc 1 3588 18 view .LVU3517
 12999 005c 4FF0FF34 		mov	r4, #-1
 13000              	.LVL1493:
3588:Core/Src/bno055.c ****     }
 13001              		.loc 1 3588 18 view .LVU3518
 13002 0060 F2E7     		b	.L947
 13003              	.LVL1494:
 13004              	.L949:
3583:Core/Src/bno055.c ****         }
 13005              		.loc 1 3583 22 view .LVU3519
 13006 0062 4FF0FF34 		mov	r4, #-1
 13007              	.LVL1495:
3583:Core/Src/bno055.c ****         }
 13008              		.loc 1 3583 22 view .LVU3520
 13009 0066 EFE7     		b	.L947
 13010              	.L953:
 13011              		.align	2
 13012              	.L952:
 13013 0068 0000B03F 		.word	1068498944
 13014              		.cfi_endproc
 13015              	.LFE55:
 13017              		.section	.text.bno055_convert_float_gyro_y_rps,"ax",%progbits
 13018              		.align	1
 13019              		.global	bno055_convert_float_gyro_y_rps
 13020              		.syntax unified
 13021              		.thumb
 13022              		.thumb_func
 13024              	bno055_convert_float_gyro_y_rps:
 13025              	.LVL1496:
 13026              	.LFB56:
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 13027              		.loc 1 3609 1 is_stmt 1 view -0
 13028              		.cfi_startproc
 13029              		@ args = 0, pretend = 0, frame = 8
 13030              		@ frame_needed = 0, uses_anonymous_args = 0
3609:Core/Src/bno055.c ****     /* Variable used to return value of
 13031              		.loc 1 3609 1 is_stmt 0 view .LVU3522
 13032 0000 30B5     		push	{r4, r5, lr}
 13033              	.LCFI433:
 13034              		.cfi_def_cfa_offset 12
 13035              		.cfi_offset 4, -12
 13036              		.cfi_offset 5, -8
 13037              		.cfi_offset 14, -4
 13038 0002 83B0     		sub	sp, sp, #12
 13039              	.LCFI434:
 13040              		.cfi_def_cfa_offset 24
 13041 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccO72alg.s 			page 400


3612:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 13042              		.loc 1 3612 5 is_stmt 1 view .LVU3523
 13043              	.LVL1497:
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13044              		.loc 1 3613 5 view .LVU3524
3613:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13045              		.loc 1 3613 9 is_stmt 0 view .LVU3525
 13046 0006 0023     		movs	r3, #0
 13047 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3614:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13048              		.loc 1 3614 5 is_stmt 1 view .LVU3526
 13049              	.LVL1498:
3615:Core/Src/bno055.c **** 
 13050              		.loc 1 3615 5 view .LVU3527
3615:Core/Src/bno055.c **** 
 13051              		.loc 1 3615 8 is_stmt 0 view .LVU3528
 13052 000c 8DF80530 		strb	r3, [sp, #5]
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13053              		.loc 1 3619 5 is_stmt 1 view .LVU3529
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13054              		.loc 1 3619 16 is_stmt 0 view .LVU3530
 13055 0010 0DF10500 		add	r0, sp, #5
 13056              	.LVL1499:
3619:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13057              		.loc 1 3619 16 view .LVU3531
 13058 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13059              	.LVL1500:
 13060 0018 0446     		mov	r4, r0
 13061              	.LVL1501:
3620:Core/Src/bno055.c ****     {
 13062              		.loc 1 3620 5 is_stmt 1 view .LVU3532
3620:Core/Src/bno055.c ****     {
 13063              		.loc 1 3620 22 is_stmt 0 view .LVU3533
 13064 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3620:Core/Src/bno055.c ****     {
 13065              		.loc 1 3620 8 view .LVU3534
 13066 001e 012B     		cmp	r3, #1
 13067 0020 16D1     		bne	.L960
 13068              	.L955:
3624:Core/Src/bno055.c ****     {
 13069              		.loc 1 3624 5 is_stmt 1 view .LVU3535
3624:Core/Src/bno055.c ****     {
 13070              		.loc 1 3624 8 is_stmt 0 view .LVU3536
 13071 0022 E4B9     		cbnz	r4, .L957
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13072              		.loc 1 3627 9 is_stmt 1 view .LVU3537
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13073              		.loc 1 3627 21 is_stmt 0 view .LVU3538
 13074 0024 0DF10600 		add	r0, sp, #6
 13075 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 13076              	.LVL1502:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13077              		.loc 1 3627 18 view .LVU3539
 13078 002c 54FA80F4 		uxtab	r4, r4, r0
 13079              	.LVL1503:
3627:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13080              		.loc 1 3627 18 view .LVU3540
ARM GAS  /tmp/ccO72alg.s 			page 401


 13081 0030 64B2     		sxtb	r4, r4
 13082              	.LVL1504:
3628:Core/Src/bno055.c ****         {
 13083              		.loc 1 3628 9 is_stmt 1 view .LVU3541
3628:Core/Src/bno055.c ****         {
 13084              		.loc 1 3628 12 is_stmt 0 view .LVU3542
 13085 0032 BCB9     		cbnz	r4, .L958
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13086              		.loc 1 3631 13 is_stmt 1 view .LVU3543
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13087              		.loc 1 3631 45 is_stmt 0 view .LVU3544
 13088 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13089 0038 FFF7FEFF 		bl	__aeabi_i2d
 13090              	.LVL1505:
 13091 003c 0022     		movs	r2, #0
 13092 003e 0B4B     		ldr	r3, .L961
 13093 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13094              	.LVL1506:
3631:Core/Src/bno055.c ****             *gyro_y_f = data_f;
 13095              		.loc 1 3631 20 view .LVU3545
 13096 0044 FFF7FEFF 		bl	__aeabi_d2f
 13097              	.LVL1507:
3632:Core/Src/bno055.c ****         }
 13098              		.loc 1 3632 13 is_stmt 1 view .LVU3546
3632:Core/Src/bno055.c ****         }
 13099              		.loc 1 3632 23 is_stmt 0 view .LVU3547
 13100 0048 2860     		str	r0, [r5]	@ float
 13101              	.LVL1508:
 13102              	.L956:
3644:Core/Src/bno055.c **** }
 13103              		.loc 1 3644 5 is_stmt 1 view .LVU3548
3645:Core/Src/bno055.c **** 
 13104              		.loc 1 3645 1 is_stmt 0 view .LVU3549
 13105 004a 2046     		mov	r0, r4
 13106 004c 03B0     		add	sp, sp, #12
 13107              	.LCFI435:
 13108              		.cfi_remember_state
 13109              		.cfi_def_cfa_offset 12
 13110              		@ sp needed
 13111 004e 30BD     		pop	{r4, r5, pc}
 13112              	.LVL1509:
 13113              	.L960:
 13114              	.LCFI436:
 13115              		.cfi_restore_state
3622:Core/Src/bno055.c ****     }
 13116              		.loc 1 3622 9 is_stmt 1 view .LVU3550
3622:Core/Src/bno055.c ****     }
 13117              		.loc 1 3622 21 is_stmt 0 view .LVU3551
 13118 0050 0120     		movs	r0, #1
 13119 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 13120              	.LVL1510:
3622:Core/Src/bno055.c ****     }
 13121              		.loc 1 3622 18 view .LVU3552
 13122 0056 54FA80F4 		uxtab	r4, r4, r0
 13123              	.LVL1511:
3622:Core/Src/bno055.c ****     }
 13124              		.loc 1 3622 18 view .LVU3553
ARM GAS  /tmp/ccO72alg.s 			page 402


 13125 005a 64B2     		sxtb	r4, r4
 13126              	.LVL1512:
3622:Core/Src/bno055.c ****     }
 13127              		.loc 1 3622 18 view .LVU3554
 13128 005c E1E7     		b	.L955
 13129              	.L957:
3641:Core/Src/bno055.c ****     }
 13130              		.loc 1 3641 18 view .LVU3555
 13131 005e 4FF0FF34 		mov	r4, #-1
 13132              	.LVL1513:
3641:Core/Src/bno055.c ****     }
 13133              		.loc 1 3641 18 view .LVU3556
 13134 0062 F2E7     		b	.L956
 13135              	.LVL1514:
 13136              	.L958:
3636:Core/Src/bno055.c ****         }
 13137              		.loc 1 3636 22 view .LVU3557
 13138 0064 4FF0FF34 		mov	r4, #-1
 13139              	.LVL1515:
3636:Core/Src/bno055.c ****         }
 13140              		.loc 1 3636 22 view .LVU3558
 13141 0068 EFE7     		b	.L956
 13142              	.L962:
 13143 006a 00BF     		.align	2
 13144              	.L961:
 13145 006c 00208C40 		.word	1082925056
 13146              		.cfi_endproc
 13147              	.LFE56:
 13149              		.section	.text.bno055_convert_float_gyro_z_dps,"ax",%progbits
 13150              		.align	1
 13151              		.global	bno055_convert_float_gyro_z_dps
 13152              		.syntax unified
 13153              		.thumb
 13154              		.thumb_func
 13156              	bno055_convert_float_gyro_z_dps:
 13157              	.LVL1516:
 13158              	.LFB57:
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 13159              		.loc 1 3661 1 is_stmt 1 view -0
 13160              		.cfi_startproc
 13161              		@ args = 0, pretend = 0, frame = 8
 13162              		@ frame_needed = 0, uses_anonymous_args = 0
3661:Core/Src/bno055.c ****     /* Variable used to return value of
 13163              		.loc 1 3661 1 is_stmt 0 view .LVU3560
 13164 0000 30B5     		push	{r4, r5, lr}
 13165              	.LCFI437:
 13166              		.cfi_def_cfa_offset 12
 13167              		.cfi_offset 4, -12
 13168              		.cfi_offset 5, -8
 13169              		.cfi_offset 14, -4
 13170 0002 83B0     		sub	sp, sp, #12
 13171              	.LCFI438:
 13172              		.cfi_def_cfa_offset 24
 13173 0004 0546     		mov	r5, r0
3664:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13174              		.loc 1 3664 5 is_stmt 1 view .LVU3561
 13175              	.LVL1517:
ARM GAS  /tmp/ccO72alg.s 			page 403


3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13176              		.loc 1 3665 5 view .LVU3562
3665:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13177              		.loc 1 3665 9 is_stmt 0 view .LVU3563
 13178 0006 0023     		movs	r3, #0
 13179 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3666:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13180              		.loc 1 3666 5 is_stmt 1 view .LVU3564
 13181              	.LVL1518:
3667:Core/Src/bno055.c **** 
 13182              		.loc 1 3667 5 view .LVU3565
3667:Core/Src/bno055.c **** 
 13183              		.loc 1 3667 8 is_stmt 0 view .LVU3566
 13184 000c 8DF80530 		strb	r3, [sp, #5]
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13185              		.loc 1 3671 5 is_stmt 1 view .LVU3567
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13186              		.loc 1 3671 16 is_stmt 0 view .LVU3568
 13187 0010 0DF10500 		add	r0, sp, #5
 13188              	.LVL1519:
3671:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13189              		.loc 1 3671 16 view .LVU3569
 13190 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13191              	.LVL1520:
 13192 0018 0446     		mov	r4, r0
 13193              	.LVL1521:
3672:Core/Src/bno055.c ****     {
 13194              		.loc 1 3672 5 is_stmt 1 view .LVU3570
3672:Core/Src/bno055.c ****     {
 13195              		.loc 1 3672 22 is_stmt 0 view .LVU3571
 13196 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3672:Core/Src/bno055.c ****     {
 13197              		.loc 1 3672 8 view .LVU3572
 13198 001e B3B9     		cbnz	r3, .L969
 13199              	.L964:
3676:Core/Src/bno055.c ****     {
 13200              		.loc 1 3676 5 is_stmt 1 view .LVU3573
3676:Core/Src/bno055.c ****     {
 13201              		.loc 1 3676 8 is_stmt 0 view .LVU3574
 13202 0020 E4B9     		cbnz	r4, .L966
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13203              		.loc 1 3679 9 is_stmt 1 view .LVU3575
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13204              		.loc 1 3679 21 is_stmt 0 view .LVU3576
 13205 0022 0DF10600 		add	r0, sp, #6
 13206 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 13207              	.LVL1522:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13208              		.loc 1 3679 18 view .LVU3577
 13209 002a 54FA80F4 		uxtab	r4, r4, r0
 13210              	.LVL1523:
3679:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13211              		.loc 1 3679 18 view .LVU3578
 13212 002e 64B2     		sxtb	r4, r4
 13213              	.LVL1524:
3680:Core/Src/bno055.c ****         {
 13214              		.loc 1 3680 9 is_stmt 1 view .LVU3579
ARM GAS  /tmp/ccO72alg.s 			page 404


3680:Core/Src/bno055.c ****         {
 13215              		.loc 1 3680 12 is_stmt 0 view .LVU3580
 13216 0030 BCB9     		cbnz	r4, .L967
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13217              		.loc 1 3683 13 is_stmt 1 view .LVU3581
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13218              		.loc 1 3683 45 is_stmt 0 view .LVU3582
 13219 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13220 0036 FFF7FEFF 		bl	__aeabi_i2d
 13221              	.LVL1525:
 13222 003a 0022     		movs	r2, #0
 13223 003c 0A4B     		ldr	r3, .L970
 13224 003e FFF7FEFF 		bl	__aeabi_dmul
 13225              	.LVL1526:
3683:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13226              		.loc 1 3683 20 view .LVU3583
 13227 0042 FFF7FEFF 		bl	__aeabi_d2f
 13228              	.LVL1527:
3684:Core/Src/bno055.c ****         }
 13229              		.loc 1 3684 13 is_stmt 1 view .LVU3584
3684:Core/Src/bno055.c ****         }
 13230              		.loc 1 3684 23 is_stmt 0 view .LVU3585
 13231 0046 2860     		str	r0, [r5]	@ float
 13232              	.LVL1528:
 13233              	.L965:
3696:Core/Src/bno055.c **** }
 13234              		.loc 1 3696 5 is_stmt 1 view .LVU3586
3697:Core/Src/bno055.c **** 
 13235              		.loc 1 3697 1 is_stmt 0 view .LVU3587
 13236 0048 2046     		mov	r0, r4
 13237 004a 03B0     		add	sp, sp, #12
 13238              	.LCFI439:
 13239              		.cfi_remember_state
 13240              		.cfi_def_cfa_offset 12
 13241              		@ sp needed
 13242 004c 30BD     		pop	{r4, r5, pc}
 13243              	.LVL1529:
 13244              	.L969:
 13245              	.LCFI440:
 13246              		.cfi_restore_state
3674:Core/Src/bno055.c ****     }
 13247              		.loc 1 3674 9 is_stmt 1 view .LVU3588
3674:Core/Src/bno055.c ****     }
 13248              		.loc 1 3674 21 is_stmt 0 view .LVU3589
 13249 004e 0020     		movs	r0, #0
 13250 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13251              	.LVL1530:
3674:Core/Src/bno055.c ****     }
 13252              		.loc 1 3674 18 view .LVU3590
 13253 0054 54FA80F4 		uxtab	r4, r4, r0
 13254              	.LVL1531:
3674:Core/Src/bno055.c ****     }
 13255              		.loc 1 3674 18 view .LVU3591
 13256 0058 64B2     		sxtb	r4, r4
 13257              	.LVL1532:
3674:Core/Src/bno055.c ****     }
 13258              		.loc 1 3674 18 view .LVU3592
ARM GAS  /tmp/ccO72alg.s 			page 405


 13259 005a E1E7     		b	.L964
 13260              	.L966:
3693:Core/Src/bno055.c ****     }
 13261              		.loc 1 3693 18 view .LVU3593
 13262 005c 4FF0FF34 		mov	r4, #-1
 13263              	.LVL1533:
3693:Core/Src/bno055.c ****     }
 13264              		.loc 1 3693 18 view .LVU3594
 13265 0060 F2E7     		b	.L965
 13266              	.LVL1534:
 13267              	.L967:
3688:Core/Src/bno055.c ****         }
 13268              		.loc 1 3688 22 view .LVU3595
 13269 0062 4FF0FF34 		mov	r4, #-1
 13270              	.LVL1535:
3688:Core/Src/bno055.c ****         }
 13271              		.loc 1 3688 22 view .LVU3596
 13272 0066 EFE7     		b	.L965
 13273              	.L971:
 13274              		.align	2
 13275              	.L970:
 13276 0068 0000B03F 		.word	1068498944
 13277              		.cfi_endproc
 13278              	.LFE57:
 13280              		.section	.text.bno055_convert_float_gyro_z_rps,"ax",%progbits
 13281              		.align	1
 13282              		.global	bno055_convert_float_gyro_z_rps
 13283              		.syntax unified
 13284              		.thumb
 13285              		.thumb_func
 13287              	bno055_convert_float_gyro_z_rps:
 13288              	.LVL1536:
 13289              	.LFB58:
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 13290              		.loc 1 3713 1 is_stmt 1 view -0
 13291              		.cfi_startproc
 13292              		@ args = 0, pretend = 0, frame = 8
 13293              		@ frame_needed = 0, uses_anonymous_args = 0
3713:Core/Src/bno055.c ****     /* Variable used to return value of
 13294              		.loc 1 3713 1 is_stmt 0 view .LVU3598
 13295 0000 30B5     		push	{r4, r5, lr}
 13296              	.LCFI441:
 13297              		.cfi_def_cfa_offset 12
 13298              		.cfi_offset 4, -12
 13299              		.cfi_offset 5, -8
 13300              		.cfi_offset 14, -4
 13301 0002 83B0     		sub	sp, sp, #12
 13302              	.LCFI442:
 13303              		.cfi_def_cfa_offset 24
 13304 0004 0546     		mov	r5, r0
3716:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 13305              		.loc 1 3716 5 is_stmt 1 view .LVU3599
 13306              	.LVL1537:
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13307              		.loc 1 3717 5 view .LVU3600
3717:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 13308              		.loc 1 3717 9 is_stmt 0 view .LVU3601
ARM GAS  /tmp/ccO72alg.s 			page 406


 13309 0006 0023     		movs	r3, #0
 13310 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3718:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13311              		.loc 1 3718 5 is_stmt 1 view .LVU3602
 13312              	.LVL1538:
3719:Core/Src/bno055.c **** 
 13313              		.loc 1 3719 5 view .LVU3603
3719:Core/Src/bno055.c **** 
 13314              		.loc 1 3719 8 is_stmt 0 view .LVU3604
 13315 000c 8DF80530 		strb	r3, [sp, #5]
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13316              		.loc 1 3723 5 is_stmt 1 view .LVU3605
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13317              		.loc 1 3723 16 is_stmt 0 view .LVU3606
 13318 0010 0DF10500 		add	r0, sp, #5
 13319              	.LVL1539:
3723:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13320              		.loc 1 3723 16 view .LVU3607
 13321 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13322              	.LVL1540:
 13323 0018 0446     		mov	r4, r0
 13324              	.LVL1541:
3724:Core/Src/bno055.c ****     {
 13325              		.loc 1 3724 5 is_stmt 1 view .LVU3608
3724:Core/Src/bno055.c ****     {
 13326              		.loc 1 3724 22 is_stmt 0 view .LVU3609
 13327 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3724:Core/Src/bno055.c ****     {
 13328              		.loc 1 3724 8 view .LVU3610
 13329 001e 012B     		cmp	r3, #1
 13330 0020 16D1     		bne	.L978
 13331              	.L973:
3728:Core/Src/bno055.c ****     {
 13332              		.loc 1 3728 5 is_stmt 1 view .LVU3611
3728:Core/Src/bno055.c ****     {
 13333              		.loc 1 3728 8 is_stmt 0 view .LVU3612
 13334 0022 E4B9     		cbnz	r4, .L975
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13335              		.loc 1 3731 9 is_stmt 1 view .LVU3613
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13336              		.loc 1 3731 21 is_stmt 0 view .LVU3614
 13337 0024 0DF10600 		add	r0, sp, #6
 13338 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 13339              	.LVL1542:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13340              		.loc 1 3731 18 view .LVU3615
 13341 002c 54FA80F4 		uxtab	r4, r4, r0
 13342              	.LVL1543:
3731:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13343              		.loc 1 3731 18 view .LVU3616
 13344 0030 64B2     		sxtb	r4, r4
 13345              	.LVL1544:
3732:Core/Src/bno055.c ****         {
 13346              		.loc 1 3732 9 is_stmt 1 view .LVU3617
3732:Core/Src/bno055.c ****         {
 13347              		.loc 1 3732 12 is_stmt 0 view .LVU3618
 13348 0032 BCB9     		cbnz	r4, .L976
ARM GAS  /tmp/ccO72alg.s 			page 407


3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13349              		.loc 1 3735 13 is_stmt 1 view .LVU3619
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13350              		.loc 1 3735 45 is_stmt 0 view .LVU3620
 13351 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13352 0038 FFF7FEFF 		bl	__aeabi_i2d
 13353              	.LVL1545:
 13354 003c 0022     		movs	r2, #0
 13355 003e 0B4B     		ldr	r3, .L979
 13356 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13357              	.LVL1546:
3735:Core/Src/bno055.c ****             *gyro_z_f = data_f;
 13358              		.loc 1 3735 20 view .LVU3621
 13359 0044 FFF7FEFF 		bl	__aeabi_d2f
 13360              	.LVL1547:
3736:Core/Src/bno055.c ****         }
 13361              		.loc 1 3736 13 is_stmt 1 view .LVU3622
3736:Core/Src/bno055.c ****         }
 13362              		.loc 1 3736 23 is_stmt 0 view .LVU3623
 13363 0048 2860     		str	r0, [r5]	@ float
 13364              	.LVL1548:
 13365              	.L974:
3748:Core/Src/bno055.c **** }
 13366              		.loc 1 3748 5 is_stmt 1 view .LVU3624
3749:Core/Src/bno055.c **** 
 13367              		.loc 1 3749 1 is_stmt 0 view .LVU3625
 13368 004a 2046     		mov	r0, r4
 13369 004c 03B0     		add	sp, sp, #12
 13370              	.LCFI443:
 13371              		.cfi_remember_state
 13372              		.cfi_def_cfa_offset 12
 13373              		@ sp needed
 13374 004e 30BD     		pop	{r4, r5, pc}
 13375              	.LVL1549:
 13376              	.L978:
 13377              	.LCFI444:
 13378              		.cfi_restore_state
3726:Core/Src/bno055.c ****     }
 13379              		.loc 1 3726 9 is_stmt 1 view .LVU3626
3726:Core/Src/bno055.c ****     }
 13380              		.loc 1 3726 21 is_stmt 0 view .LVU3627
 13381 0050 0120     		movs	r0, #1
 13382 0052 FFF7FEFF 		bl	bno055_set_gyro_unit
 13383              	.LVL1550:
3726:Core/Src/bno055.c ****     }
 13384              		.loc 1 3726 18 view .LVU3628
 13385 0056 54FA80F4 		uxtab	r4, r4, r0
 13386              	.LVL1551:
3726:Core/Src/bno055.c ****     }
 13387              		.loc 1 3726 18 view .LVU3629
 13388 005a 64B2     		sxtb	r4, r4
 13389              	.LVL1552:
3726:Core/Src/bno055.c ****     }
 13390              		.loc 1 3726 18 view .LVU3630
 13391 005c E1E7     		b	.L973
 13392              	.L975:
3745:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 408


 13393              		.loc 1 3745 18 view .LVU3631
 13394 005e 4FF0FF34 		mov	r4, #-1
 13395              	.LVL1553:
3745:Core/Src/bno055.c ****     }
 13396              		.loc 1 3745 18 view .LVU3632
 13397 0062 F2E7     		b	.L974
 13398              	.LVL1554:
 13399              	.L976:
3740:Core/Src/bno055.c ****         }
 13400              		.loc 1 3740 22 view .LVU3633
 13401 0064 4FF0FF34 		mov	r4, #-1
 13402              	.LVL1555:
3740:Core/Src/bno055.c ****         }
 13403              		.loc 1 3740 22 view .LVU3634
 13404 0068 EFE7     		b	.L974
 13405              	.L980:
 13406 006a 00BF     		.align	2
 13407              	.L979:
 13408 006c 00208C40 		.word	1082925056
 13409              		.cfi_endproc
 13410              	.LFE58:
 13412              		.section	.text.bno055_convert_float_gyro_xyz_dps,"ax",%progbits
 13413              		.align	1
 13414              		.global	bno055_convert_float_gyro_xyz_dps
 13415              		.syntax unified
 13416              		.thumb
 13417              		.thumb_func
 13419              	bno055_convert_float_gyro_xyz_dps:
 13420              	.LVL1556:
 13421              	.LFB59:
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 13422              		.loc 1 3771 1 is_stmt 1 view -0
 13423              		.cfi_startproc
 13424              		@ args = 0, pretend = 0, frame = 16
 13425              		@ frame_needed = 0, uses_anonymous_args = 0
3771:Core/Src/bno055.c ****     /* Variable used to return value of
 13426              		.loc 1 3771 1 is_stmt 0 view .LVU3636
 13427 0000 30B5     		push	{r4, r5, lr}
 13428              	.LCFI445:
 13429              		.cfi_def_cfa_offset 12
 13430              		.cfi_offset 4, -12
 13431              		.cfi_offset 5, -8
 13432              		.cfi_offset 14, -4
 13433 0002 85B0     		sub	sp, sp, #20
 13434              	.LCFI446:
 13435              		.cfi_def_cfa_offset 32
 13436 0004 0546     		mov	r5, r0
3774:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13437              		.loc 1 3774 5 is_stmt 1 view .LVU3637
 13438              	.LVL1557:
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13439              		.loc 1 3775 5 view .LVU3638
3775:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13440              		.loc 1 3775 26 is_stmt 0 view .LVU3639
 13441 0006 0023     		movs	r3, #0
 13442 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13443 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
ARM GAS  /tmp/ccO72alg.s 			page 409


 13444 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3776:Core/Src/bno055.c **** 
 13445              		.loc 1 3776 5 is_stmt 1 view .LVU3640
3776:Core/Src/bno055.c **** 
 13446              		.loc 1 3776 8 is_stmt 0 view .LVU3641
 13447 0014 8DF80730 		strb	r3, [sp, #7]
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13448              		.loc 1 3780 5 is_stmt 1 view .LVU3642
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13449              		.loc 1 3780 16 is_stmt 0 view .LVU3643
 13450 0018 0DF10700 		add	r0, sp, #7
 13451              	.LVL1558:
3780:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13452              		.loc 1 3780 16 view .LVU3644
 13453 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13454              	.LVL1559:
 13455 0020 0446     		mov	r4, r0
 13456              	.LVL1560:
3781:Core/Src/bno055.c ****     {
 13457              		.loc 1 3781 5 is_stmt 1 view .LVU3645
3781:Core/Src/bno055.c ****     {
 13458              		.loc 1 3781 22 is_stmt 0 view .LVU3646
 13459 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3781:Core/Src/bno055.c ****     {
 13460              		.loc 1 3781 8 view .LVU3647
 13461 0026 5BBB     		cbnz	r3, .L987
 13462              	.L982:
3785:Core/Src/bno055.c ****     {
 13463              		.loc 1 3785 5 is_stmt 1 view .LVU3648
3785:Core/Src/bno055.c ****     {
 13464              		.loc 1 3785 8 is_stmt 0 view .LVU3649
 13465 0028 8CBB     		cbnz	r4, .L984
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13466              		.loc 1 3788 9 is_stmt 1 view .LVU3650
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13467              		.loc 1 3788 21 is_stmt 0 view .LVU3651
 13468 002a 02A8     		add	r0, sp, #8
 13469 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 13470              	.LVL1561:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13471              		.loc 1 3788 18 view .LVU3652
 13472 0030 54FA80F4 		uxtab	r4, r4, r0
 13473              	.LVL1562:
3788:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13474              		.loc 1 3788 18 view .LVU3653
 13475 0034 64B2     		sxtb	r4, r4
 13476              	.LVL1563:
3789:Core/Src/bno055.c ****         {
 13477              		.loc 1 3789 9 is_stmt 1 view .LVU3654
3789:Core/Src/bno055.c ****         {
 13478              		.loc 1 3789 12 is_stmt 0 view .LVU3655
 13479 0036 6CBB     		cbnz	r4, .L985
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13480              		.loc 1 3792 13 is_stmt 1 view .LVU3656
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13481              		.loc 1 3792 51 is_stmt 0 view .LVU3657
 13482 0038 BDF90800 		ldrsh	r0, [sp, #8]
ARM GAS  /tmp/ccO72alg.s 			page 410


 13483 003c FFF7FEFF 		bl	__aeabi_i2d
 13484              	.LVL1564:
 13485 0040 0022     		movs	r2, #0
 13486 0042 164B     		ldr	r3, .L988
 13487 0044 FFF7FEFF 		bl	__aeabi_dmul
 13488              	.LVL1565:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13489              		.loc 1 3792 32 view .LVU3658
 13490 0048 FFF7FEFF 		bl	__aeabi_d2f
 13491              	.LVL1566:
3792:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 13492              		.loc 1 3792 30 view .LVU3659
 13493 004c 2860     		str	r0, [r5]	@ float
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13494              		.loc 1 3793 13 is_stmt 1 view .LVU3660
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13495              		.loc 1 3793 51 is_stmt 0 view .LVU3661
 13496 004e BDF90A00 		ldrsh	r0, [sp, #10]
 13497 0052 FFF7FEFF 		bl	__aeabi_i2d
 13498              	.LVL1567:
 13499 0056 0022     		movs	r2, #0
 13500 0058 104B     		ldr	r3, .L988
 13501 005a FFF7FEFF 		bl	__aeabi_dmul
 13502              	.LVL1568:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13503              		.loc 1 3793 32 view .LVU3662
 13504 005e FFF7FEFF 		bl	__aeabi_d2f
 13505              	.LVL1569:
3793:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 13506              		.loc 1 3793 30 view .LVU3663
 13507 0062 6860     		str	r0, [r5, #4]	@ float
3794:Core/Src/bno055.c ****         }
 13508              		.loc 1 3794 13 is_stmt 1 view .LVU3664
3794:Core/Src/bno055.c ****         }
 13509              		.loc 1 3794 51 is_stmt 0 view .LVU3665
 13510 0064 BDF90C00 		ldrsh	r0, [sp, #12]
 13511 0068 FFF7FEFF 		bl	__aeabi_i2d
 13512              	.LVL1570:
 13513 006c 0022     		movs	r2, #0
 13514 006e 0B4B     		ldr	r3, .L988
 13515 0070 FFF7FEFF 		bl	__aeabi_dmul
 13516              	.LVL1571:
3794:Core/Src/bno055.c ****         }
 13517              		.loc 1 3794 32 view .LVU3666
 13518 0074 FFF7FEFF 		bl	__aeabi_d2f
 13519              	.LVL1572:
3794:Core/Src/bno055.c ****         }
 13520              		.loc 1 3794 30 view .LVU3667
 13521 0078 A860     		str	r0, [r5, #8]	@ float
 13522              	.LVL1573:
 13523              	.L983:
3806:Core/Src/bno055.c **** }
 13524              		.loc 1 3806 5 is_stmt 1 view .LVU3668
3807:Core/Src/bno055.c **** 
 13525              		.loc 1 3807 1 is_stmt 0 view .LVU3669
 13526 007a 2046     		mov	r0, r4
 13527 007c 05B0     		add	sp, sp, #20
ARM GAS  /tmp/ccO72alg.s 			page 411


 13528              	.LCFI447:
 13529              		.cfi_remember_state
 13530              		.cfi_def_cfa_offset 12
 13531              		@ sp needed
 13532 007e 30BD     		pop	{r4, r5, pc}
 13533              	.LVL1574:
 13534              	.L987:
 13535              	.LCFI448:
 13536              		.cfi_restore_state
3783:Core/Src/bno055.c ****     }
 13537              		.loc 1 3783 9 is_stmt 1 view .LVU3670
3783:Core/Src/bno055.c ****     }
 13538              		.loc 1 3783 21 is_stmt 0 view .LVU3671
 13539 0080 0020     		movs	r0, #0
 13540 0082 FFF7FEFF 		bl	bno055_set_gyro_unit
 13541              	.LVL1575:
3783:Core/Src/bno055.c ****     }
 13542              		.loc 1 3783 18 view .LVU3672
 13543 0086 54FA80F4 		uxtab	r4, r4, r0
 13544              	.LVL1576:
3783:Core/Src/bno055.c ****     }
 13545              		.loc 1 3783 18 view .LVU3673
 13546 008a 64B2     		sxtb	r4, r4
 13547              	.LVL1577:
3783:Core/Src/bno055.c ****     }
 13548              		.loc 1 3783 18 view .LVU3674
 13549 008c CCE7     		b	.L982
 13550              	.L984:
3803:Core/Src/bno055.c ****     }
 13551              		.loc 1 3803 18 view .LVU3675
 13552 008e 4FF0FF34 		mov	r4, #-1
 13553              	.LVL1578:
3803:Core/Src/bno055.c ****     }
 13554              		.loc 1 3803 18 view .LVU3676
 13555 0092 F2E7     		b	.L983
 13556              	.LVL1579:
 13557              	.L985:
3798:Core/Src/bno055.c ****         }
 13558              		.loc 1 3798 22 view .LVU3677
 13559 0094 4FF0FF34 		mov	r4, #-1
 13560              	.LVL1580:
3798:Core/Src/bno055.c ****         }
 13561              		.loc 1 3798 22 view .LVU3678
 13562 0098 EFE7     		b	.L983
 13563              	.L989:
 13564 009a 00BF     		.align	2
 13565              	.L988:
 13566 009c 0000B03F 		.word	1068498944
 13567              		.cfi_endproc
 13568              	.LFE59:
 13570              		.section	.text.bno055_convert_float_gyro_xyz_rps,"ax",%progbits
 13571              		.align	1
 13572              		.global	bno055_convert_float_gyro_xyz_rps
 13573              		.syntax unified
 13574              		.thumb
 13575              		.thumb_func
 13577              	bno055_convert_float_gyro_xyz_rps:
ARM GAS  /tmp/ccO72alg.s 			page 412


 13578              	.LVL1581:
 13579              	.LFB60:
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13580              		.loc 1 3829 1 is_stmt 1 view -0
 13581              		.cfi_startproc
 13582              		@ args = 0, pretend = 0, frame = 16
 13583              		@ frame_needed = 0, uses_anonymous_args = 0
3829:Core/Src/bno055.c ****     /* Variable used to return value of
 13584              		.loc 1 3829 1 is_stmt 0 view .LVU3680
 13585 0000 30B5     		push	{r4, r5, lr}
 13586              	.LCFI449:
 13587              		.cfi_def_cfa_offset 12
 13588              		.cfi_offset 4, -12
 13589              		.cfi_offset 5, -8
 13590              		.cfi_offset 14, -4
 13591 0002 85B0     		sub	sp, sp, #20
 13592              	.LCFI450:
 13593              		.cfi_def_cfa_offset 32
 13594 0004 0546     		mov	r5, r0
3832:Core/Src/bno055.c ****     struct bno055_gyro_t gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 13595              		.loc 1 3832 5 is_stmt 1 view .LVU3681
 13596              	.LVL1582:
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13597              		.loc 1 3833 5 view .LVU3682
3833:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13598              		.loc 1 3833 26 is_stmt 0 view .LVU3683
 13599 0006 0023     		movs	r3, #0
 13600 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 13601 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 13602 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
3834:Core/Src/bno055.c **** 
 13603              		.loc 1 3834 5 is_stmt 1 view .LVU3684
3834:Core/Src/bno055.c **** 
 13604              		.loc 1 3834 8 is_stmt 0 view .LVU3685
 13605 0014 8DF80730 		strb	r3, [sp, #7]
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13606              		.loc 1 3838 5 is_stmt 1 view .LVU3686
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13607              		.loc 1 3838 16 is_stmt 0 view .LVU3687
 13608 0018 0DF10700 		add	r0, sp, #7
 13609              	.LVL1583:
3838:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13610              		.loc 1 3838 16 view .LVU3688
 13611 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 13612              	.LVL1584:
 13613 0020 0446     		mov	r4, r0
 13614              	.LVL1585:
3839:Core/Src/bno055.c ****     {
 13615              		.loc 1 3839 5 is_stmt 1 view .LVU3689
3839:Core/Src/bno055.c ****     {
 13616              		.loc 1 3839 22 is_stmt 0 view .LVU3690
 13617 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
3839:Core/Src/bno055.c ****     {
 13618              		.loc 1 3839 8 view .LVU3691
 13619 0026 012B     		cmp	r3, #1
 13620 0028 2BD1     		bne	.L996
 13621              	.L991:
ARM GAS  /tmp/ccO72alg.s 			page 413


3843:Core/Src/bno055.c ****     {
 13622              		.loc 1 3843 5 is_stmt 1 view .LVU3692
3843:Core/Src/bno055.c ****     {
 13623              		.loc 1 3843 8 is_stmt 0 view .LVU3693
 13624 002a 8CBB     		cbnz	r4, .L993
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13625              		.loc 1 3846 9 is_stmt 1 view .LVU3694
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13626              		.loc 1 3846 21 is_stmt 0 view .LVU3695
 13627 002c 02A8     		add	r0, sp, #8
 13628 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 13629              	.LVL1586:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13630              		.loc 1 3846 18 view .LVU3696
 13631 0032 54FA80F4 		uxtab	r4, r4, r0
 13632              	.LVL1587:
3846:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13633              		.loc 1 3846 18 view .LVU3697
 13634 0036 64B2     		sxtb	r4, r4
 13635              	.LVL1588:
3847:Core/Src/bno055.c ****         {
 13636              		.loc 1 3847 9 is_stmt 1 view .LVU3698
3847:Core/Src/bno055.c ****         {
 13637              		.loc 1 3847 12 is_stmt 0 view .LVU3699
 13638 0038 6CBB     		cbnz	r4, .L994
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13639              		.loc 1 3850 13 is_stmt 1 view .LVU3700
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13640              		.loc 1 3850 51 is_stmt 0 view .LVU3701
 13641 003a BDF90800 		ldrsh	r0, [sp, #8]
 13642 003e FFF7FEFF 		bl	__aeabi_i2d
 13643              	.LVL1589:
 13644 0042 0022     		movs	r2, #0
 13645 0044 154B     		ldr	r3, .L997
 13646 0046 FFF7FEFF 		bl	__aeabi_ddiv
 13647              	.LVL1590:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13648              		.loc 1 3850 32 view .LVU3702
 13649 004a FFF7FEFF 		bl	__aeabi_d2f
 13650              	.LVL1591:
3850:Core/Src/bno055.c ****             gyro_xyz_data->y = (float)(gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 13651              		.loc 1 3850 30 view .LVU3703
 13652 004e 2860     		str	r0, [r5]	@ float
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13653              		.loc 1 3851 13 is_stmt 1 view .LVU3704
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13654              		.loc 1 3851 51 is_stmt 0 view .LVU3705
 13655 0050 BDF90A00 		ldrsh	r0, [sp, #10]
 13656 0054 FFF7FEFF 		bl	__aeabi_i2d
 13657              	.LVL1592:
 13658 0058 0022     		movs	r2, #0
 13659 005a 104B     		ldr	r3, .L997
 13660 005c FFF7FEFF 		bl	__aeabi_ddiv
 13661              	.LVL1593:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13662              		.loc 1 3851 32 view .LVU3706
 13663 0060 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccO72alg.s 			page 414


 13664              	.LVL1594:
3851:Core/Src/bno055.c ****             gyro_xyz_data->z = (float)(gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 13665              		.loc 1 3851 30 view .LVU3707
 13666 0064 6860     		str	r0, [r5, #4]	@ float
3852:Core/Src/bno055.c ****         }
 13667              		.loc 1 3852 13 is_stmt 1 view .LVU3708
3852:Core/Src/bno055.c ****         }
 13668              		.loc 1 3852 51 is_stmt 0 view .LVU3709
 13669 0066 BDF90C00 		ldrsh	r0, [sp, #12]
 13670 006a FFF7FEFF 		bl	__aeabi_i2d
 13671              	.LVL1595:
 13672 006e 0022     		movs	r2, #0
 13673 0070 0A4B     		ldr	r3, .L997
 13674 0072 FFF7FEFF 		bl	__aeabi_ddiv
 13675              	.LVL1596:
3852:Core/Src/bno055.c ****         }
 13676              		.loc 1 3852 32 view .LVU3710
 13677 0076 FFF7FEFF 		bl	__aeabi_d2f
 13678              	.LVL1597:
3852:Core/Src/bno055.c ****         }
 13679              		.loc 1 3852 30 view .LVU3711
 13680 007a A860     		str	r0, [r5, #8]	@ float
 13681              	.LVL1598:
 13682              	.L992:
3864:Core/Src/bno055.c **** }
 13683              		.loc 1 3864 5 is_stmt 1 view .LVU3712
3865:Core/Src/bno055.c **** 
 13684              		.loc 1 3865 1 is_stmt 0 view .LVU3713
 13685 007c 2046     		mov	r0, r4
 13686 007e 05B0     		add	sp, sp, #20
 13687              	.LCFI451:
 13688              		.cfi_remember_state
 13689              		.cfi_def_cfa_offset 12
 13690              		@ sp needed
 13691 0080 30BD     		pop	{r4, r5, pc}
 13692              	.LVL1599:
 13693              	.L996:
 13694              	.LCFI452:
 13695              		.cfi_restore_state
3841:Core/Src/bno055.c ****     }
 13696              		.loc 1 3841 9 is_stmt 1 view .LVU3714
3841:Core/Src/bno055.c ****     }
 13697              		.loc 1 3841 21 is_stmt 0 view .LVU3715
 13698 0082 0120     		movs	r0, #1
 13699 0084 FFF7FEFF 		bl	bno055_set_gyro_unit
 13700              	.LVL1600:
3841:Core/Src/bno055.c ****     }
 13701              		.loc 1 3841 18 view .LVU3716
 13702 0088 54FA80F4 		uxtab	r4, r4, r0
 13703              	.LVL1601:
3841:Core/Src/bno055.c ****     }
 13704              		.loc 1 3841 18 view .LVU3717
 13705 008c 64B2     		sxtb	r4, r4
 13706              	.LVL1602:
3841:Core/Src/bno055.c ****     }
 13707              		.loc 1 3841 18 view .LVU3718
 13708 008e CCE7     		b	.L991
ARM GAS  /tmp/ccO72alg.s 			page 415


 13709              	.L993:
3861:Core/Src/bno055.c ****     }
 13710              		.loc 1 3861 18 view .LVU3719
 13711 0090 4FF0FF34 		mov	r4, #-1
 13712              	.LVL1603:
3861:Core/Src/bno055.c ****     }
 13713              		.loc 1 3861 18 view .LVU3720
 13714 0094 F2E7     		b	.L992
 13715              	.LVL1604:
 13716              	.L994:
3856:Core/Src/bno055.c ****         }
 13717              		.loc 1 3856 22 view .LVU3721
 13718 0096 4FF0FF34 		mov	r4, #-1
 13719              	.LVL1605:
3856:Core/Src/bno055.c ****         }
 13720              		.loc 1 3856 22 view .LVU3722
 13721 009a EFE7     		b	.L992
 13722              	.L998:
 13723              		.align	2
 13724              	.L997:
 13725 009c 00208C40 		.word	1082925056
 13726              		.cfi_endproc
 13727              	.LFE60:
 13729              		.section	.text.bno055_convert_double_gyro_x_dps,"ax",%progbits
 13730              		.align	1
 13731              		.global	bno055_convert_double_gyro_x_dps
 13732              		.syntax unified
 13733              		.thumb
 13734              		.thumb_func
 13736              	bno055_convert_double_gyro_x_dps:
 13737              	.LVL1606:
 13738              	.LFB91:
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13739              		.loc 1 5269 1 is_stmt 1 view -0
 13740              		.cfi_startproc
 13741              		@ args = 0, pretend = 0, frame = 8
 13742              		@ frame_needed = 0, uses_anonymous_args = 0
5269:Core/Src/bno055.c ****     /* Variable used to return value of
 13743              		.loc 1 5269 1 is_stmt 0 view .LVU3724
 13744 0000 30B5     		push	{r4, r5, lr}
 13745              	.LCFI453:
 13746              		.cfi_def_cfa_offset 12
 13747              		.cfi_offset 4, -12
 13748              		.cfi_offset 5, -8
 13749              		.cfi_offset 14, -4
 13750 0002 83B0     		sub	sp, sp, #12
 13751              	.LCFI454:
 13752              		.cfi_def_cfa_offset 24
 13753 0004 0546     		mov	r5, r0
5272:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13754              		.loc 1 5272 5 is_stmt 1 view .LVU3725
 13755              	.LVL1607:
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13756              		.loc 1 5273 5 view .LVU3726
5273:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13757              		.loc 1 5273 9 is_stmt 0 view .LVU3727
 13758 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 416


 13759 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5274:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13760              		.loc 1 5274 5 is_stmt 1 view .LVU3728
 13761              	.LVL1608:
5275:Core/Src/bno055.c **** 
 13762              		.loc 1 5275 5 view .LVU3729
5275:Core/Src/bno055.c **** 
 13763              		.loc 1 5275 8 is_stmt 0 view .LVU3730
 13764 000c 8DF80530 		strb	r3, [sp, #5]
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13765              		.loc 1 5279 5 is_stmt 1 view .LVU3731
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13766              		.loc 1 5279 16 is_stmt 0 view .LVU3732
 13767 0010 0DF10500 		add	r0, sp, #5
 13768              	.LVL1609:
5279:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 13769              		.loc 1 5279 16 view .LVU3733
 13770 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13771              	.LVL1610:
 13772 0018 0446     		mov	r4, r0
 13773              	.LVL1611:
5280:Core/Src/bno055.c ****     {
 13774              		.loc 1 5280 5 is_stmt 1 view .LVU3734
5280:Core/Src/bno055.c ****     {
 13775              		.loc 1 5280 22 is_stmt 0 view .LVU3735
 13776 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5280:Core/Src/bno055.c ****     {
 13777              		.loc 1 5280 8 view .LVU3736
 13778 001e ABB9     		cbnz	r3, .L1005
 13779              	.L1000:
5284:Core/Src/bno055.c ****     {
 13780              		.loc 1 5284 5 is_stmt 1 view .LVU3737
5284:Core/Src/bno055.c ****     {
 13781              		.loc 1 5284 8 is_stmt 0 view .LVU3738
 13782 0020 DCB9     		cbnz	r4, .L1002
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13783              		.loc 1 5287 9 is_stmt 1 view .LVU3739
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13784              		.loc 1 5287 21 is_stmt 0 view .LVU3740
 13785 0022 0DF10600 		add	r0, sp, #6
 13786 0026 FFF7FEFF 		bl	bno055_read_gyro_x
 13787              	.LVL1612:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13788              		.loc 1 5287 18 view .LVU3741
 13789 002a 54FA80F4 		uxtab	r4, r4, r0
 13790              	.LVL1613:
5287:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13791              		.loc 1 5287 18 view .LVU3742
 13792 002e 64B2     		sxtb	r4, r4
 13793              	.LVL1614:
5288:Core/Src/bno055.c ****         {
 13794              		.loc 1 5288 9 is_stmt 1 view .LVU3743
5288:Core/Src/bno055.c ****         {
 13795              		.loc 1 5288 12 is_stmt 0 view .LVU3744
 13796 0030 B4B9     		cbnz	r4, .L1003
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13797              		.loc 1 5291 13 is_stmt 1 view .LVU3745
ARM GAS  /tmp/ccO72alg.s 			page 417


5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13798              		.loc 1 5291 22 is_stmt 0 view .LVU3746
 13799 0032 BDF90600 		ldrsh	r0, [sp, #6]
 13800 0036 FFF7FEFF 		bl	__aeabi_i2d
 13801              	.LVL1615:
5291:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13802              		.loc 1 5291 20 view .LVU3747
 13803 003a 0022     		movs	r2, #0
 13804 003c 0A4B     		ldr	r3, .L1006
 13805 003e FFF7FEFF 		bl	__aeabi_dmul
 13806              	.LVL1616:
5292:Core/Src/bno055.c ****         }
 13807              		.loc 1 5292 13 is_stmt 1 view .LVU3748
5292:Core/Src/bno055.c ****         }
 13808              		.loc 1 5292 23 is_stmt 0 view .LVU3749
 13809 0042 C5E90001 		strd	r0, [r5]
 13810              	.LVL1617:
 13811              	.L1001:
5304:Core/Src/bno055.c **** }
 13812              		.loc 1 5304 5 is_stmt 1 view .LVU3750
5305:Core/Src/bno055.c **** 
 13813              		.loc 1 5305 1 is_stmt 0 view .LVU3751
 13814 0046 2046     		mov	r0, r4
 13815 0048 03B0     		add	sp, sp, #12
 13816              	.LCFI455:
 13817              		.cfi_remember_state
 13818              		.cfi_def_cfa_offset 12
 13819              		@ sp needed
 13820 004a 30BD     		pop	{r4, r5, pc}
 13821              	.LVL1618:
 13822              	.L1005:
 13823              	.LCFI456:
 13824              		.cfi_restore_state
5282:Core/Src/bno055.c ****     }
 13825              		.loc 1 5282 9 is_stmt 1 view .LVU3752
5282:Core/Src/bno055.c ****     }
 13826              		.loc 1 5282 21 is_stmt 0 view .LVU3753
 13827 004c 0020     		movs	r0, #0
 13828 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 13829              	.LVL1619:
5282:Core/Src/bno055.c ****     }
 13830              		.loc 1 5282 18 view .LVU3754
 13831 0052 54FA80F4 		uxtab	r4, r4, r0
 13832              	.LVL1620:
5282:Core/Src/bno055.c ****     }
 13833              		.loc 1 5282 18 view .LVU3755
 13834 0056 64B2     		sxtb	r4, r4
 13835              	.LVL1621:
5282:Core/Src/bno055.c ****     }
 13836              		.loc 1 5282 18 view .LVU3756
 13837 0058 E2E7     		b	.L1000
 13838              	.L1002:
5301:Core/Src/bno055.c ****     }
 13839              		.loc 1 5301 18 view .LVU3757
 13840 005a 4FF0FF34 		mov	r4, #-1
 13841              	.LVL1622:
5301:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 418


 13842              		.loc 1 5301 18 view .LVU3758
 13843 005e F2E7     		b	.L1001
 13844              	.LVL1623:
 13845              	.L1003:
5296:Core/Src/bno055.c ****         }
 13846              		.loc 1 5296 22 view .LVU3759
 13847 0060 4FF0FF34 		mov	r4, #-1
 13848              	.LVL1624:
5296:Core/Src/bno055.c ****         }
 13849              		.loc 1 5296 22 view .LVU3760
 13850 0064 EFE7     		b	.L1001
 13851              	.L1007:
 13852 0066 00BF     		.align	2
 13853              	.L1006:
 13854 0068 0000B03F 		.word	1068498944
 13855              		.cfi_endproc
 13856              	.LFE91:
 13858              		.section	.text.bno055_convert_double_gyro_x_rps,"ax",%progbits
 13859              		.align	1
 13860              		.global	bno055_convert_double_gyro_x_rps
 13861              		.syntax unified
 13862              		.thumb
 13863              		.thumb_func
 13865              	bno055_convert_double_gyro_x_rps:
 13866              	.LVL1625:
 13867              	.LFB92:
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13868              		.loc 1 5322 1 is_stmt 1 view -0
 13869              		.cfi_startproc
 13870              		@ args = 0, pretend = 0, frame = 8
 13871              		@ frame_needed = 0, uses_anonymous_args = 0
5322:Core/Src/bno055.c ****     /* Variable used to return value of
 13872              		.loc 1 5322 1 is_stmt 0 view .LVU3762
 13873 0000 30B5     		push	{r4, r5, lr}
 13874              	.LCFI457:
 13875              		.cfi_def_cfa_offset 12
 13876              		.cfi_offset 4, -12
 13877              		.cfi_offset 5, -8
 13878              		.cfi_offset 14, -4
 13879 0002 83B0     		sub	sp, sp, #12
 13880              	.LCFI458:
 13881              		.cfi_def_cfa_offset 24
 13882 0004 0546     		mov	r5, r0
5325:Core/Src/bno055.c ****     s16 reg_gyro_x_s16 = BNO055_INIT_VALUE;
 13883              		.loc 1 5325 5 is_stmt 1 view .LVU3763
 13884              	.LVL1626:
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13885              		.loc 1 5326 5 view .LVU3764
5326:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 13886              		.loc 1 5326 9 is_stmt 0 view .LVU3765
 13887 0006 0023     		movs	r3, #0
 13888 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5327:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 13889              		.loc 1 5327 5 is_stmt 1 view .LVU3766
 13890              	.LVL1627:
5328:Core/Src/bno055.c **** 
 13891              		.loc 1 5328 5 view .LVU3767
ARM GAS  /tmp/ccO72alg.s 			page 419


5328:Core/Src/bno055.c **** 
 13892              		.loc 1 5328 8 is_stmt 0 view .LVU3768
 13893 000c 8DF80530 		strb	r3, [sp, #5]
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13894              		.loc 1 5332 5 is_stmt 1 view .LVU3769
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13895              		.loc 1 5332 16 is_stmt 0 view .LVU3770
 13896 0010 0DF10500 		add	r0, sp, #5
 13897              	.LVL1628:
5332:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 13898              		.loc 1 5332 16 view .LVU3771
 13899 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 13900              	.LVL1629:
 13901 0018 0446     		mov	r4, r0
 13902              	.LVL1630:
5333:Core/Src/bno055.c ****     {
 13903              		.loc 1 5333 5 is_stmt 1 view .LVU3772
5333:Core/Src/bno055.c ****     {
 13904              		.loc 1 5333 22 is_stmt 0 view .LVU3773
 13905 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5333:Core/Src/bno055.c ****     {
 13906              		.loc 1 5333 8 view .LVU3774
 13907 001e 012B     		cmp	r3, #1
 13908 0020 15D1     		bne	.L1014
 13909              	.L1009:
5337:Core/Src/bno055.c ****     {
 13910              		.loc 1 5337 5 is_stmt 1 view .LVU3775
5337:Core/Src/bno055.c ****     {
 13911              		.loc 1 5337 8 is_stmt 0 view .LVU3776
 13912 0022 DCB9     		cbnz	r4, .L1011
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13913              		.loc 1 5340 9 is_stmt 1 view .LVU3777
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13914              		.loc 1 5340 21 is_stmt 0 view .LVU3778
 13915 0024 0DF10600 		add	r0, sp, #6
 13916 0028 FFF7FEFF 		bl	bno055_read_gyro_x
 13917              	.LVL1631:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13918              		.loc 1 5340 18 view .LVU3779
 13919 002c 54FA80F4 		uxtab	r4, r4, r0
 13920              	.LVL1632:
5340:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 13921              		.loc 1 5340 18 view .LVU3780
 13922 0030 64B2     		sxtb	r4, r4
 13923              	.LVL1633:
5341:Core/Src/bno055.c ****         {
 13924              		.loc 1 5341 9 is_stmt 1 view .LVU3781
5341:Core/Src/bno055.c ****         {
 13925              		.loc 1 5341 12 is_stmt 0 view .LVU3782
 13926 0032 B4B9     		cbnz	r4, .L1012
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13927              		.loc 1 5344 13 is_stmt 1 view .LVU3783
5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13928              		.loc 1 5344 22 is_stmt 0 view .LVU3784
 13929 0034 BDF90600 		ldrsh	r0, [sp, #6]
 13930 0038 FFF7FEFF 		bl	__aeabi_i2d
 13931              	.LVL1634:
ARM GAS  /tmp/ccO72alg.s 			page 420


5344:Core/Src/bno055.c ****             *gyro_x_d = data_d;
 13932              		.loc 1 5344 20 view .LVU3785
 13933 003c 0022     		movs	r2, #0
 13934 003e 0A4B     		ldr	r3, .L1015
 13935 0040 FFF7FEFF 		bl	__aeabi_ddiv
 13936              	.LVL1635:
5345:Core/Src/bno055.c ****         }
 13937              		.loc 1 5345 13 is_stmt 1 view .LVU3786
5345:Core/Src/bno055.c ****         }
 13938              		.loc 1 5345 23 is_stmt 0 view .LVU3787
 13939 0044 C5E90001 		strd	r0, [r5]
 13940              	.LVL1636:
 13941              	.L1010:
5357:Core/Src/bno055.c **** }
 13942              		.loc 1 5357 5 is_stmt 1 view .LVU3788
5358:Core/Src/bno055.c **** 
 13943              		.loc 1 5358 1 is_stmt 0 view .LVU3789
 13944 0048 2046     		mov	r0, r4
 13945 004a 03B0     		add	sp, sp, #12
 13946              	.LCFI459:
 13947              		.cfi_remember_state
 13948              		.cfi_def_cfa_offset 12
 13949              		@ sp needed
 13950 004c 30BD     		pop	{r4, r5, pc}
 13951              	.LVL1637:
 13952              	.L1014:
 13953              	.LCFI460:
 13954              		.cfi_restore_state
5335:Core/Src/bno055.c ****     }
 13955              		.loc 1 5335 9 is_stmt 1 view .LVU3790
5335:Core/Src/bno055.c ****     }
 13956              		.loc 1 5335 21 is_stmt 0 view .LVU3791
 13957 004e 0120     		movs	r0, #1
 13958 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 13959              	.LVL1638:
5335:Core/Src/bno055.c ****     }
 13960              		.loc 1 5335 18 view .LVU3792
 13961 0054 54FA80F4 		uxtab	r4, r4, r0
 13962              	.LVL1639:
5335:Core/Src/bno055.c ****     }
 13963              		.loc 1 5335 18 view .LVU3793
 13964 0058 64B2     		sxtb	r4, r4
 13965              	.LVL1640:
5335:Core/Src/bno055.c ****     }
 13966              		.loc 1 5335 18 view .LVU3794
 13967 005a E2E7     		b	.L1009
 13968              	.L1011:
5354:Core/Src/bno055.c ****     }
 13969              		.loc 1 5354 18 view .LVU3795
 13970 005c 4FF0FF34 		mov	r4, #-1
 13971              	.LVL1641:
5354:Core/Src/bno055.c ****     }
 13972              		.loc 1 5354 18 view .LVU3796
 13973 0060 F2E7     		b	.L1010
 13974              	.LVL1642:
 13975              	.L1012:
5349:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 421


 13976              		.loc 1 5349 22 view .LVU3797
 13977 0062 4FF0FF34 		mov	r4, #-1
 13978              	.LVL1643:
5349:Core/Src/bno055.c ****         }
 13979              		.loc 1 5349 22 view .LVU3798
 13980 0066 EFE7     		b	.L1010
 13981              	.L1016:
 13982              		.align	2
 13983              	.L1015:
 13984 0068 00208C40 		.word	1082925056
 13985              		.cfi_endproc
 13986              	.LFE92:
 13988              		.section	.text.bno055_convert_double_gyro_y_dps,"ax",%progbits
 13989              		.align	1
 13990              		.global	bno055_convert_double_gyro_y_dps
 13991              		.syntax unified
 13992              		.thumb
 13993              		.thumb_func
 13995              	bno055_convert_double_gyro_y_dps:
 13996              	.LVL1644:
 13997              	.LFB93:
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 13998              		.loc 1 5375 1 is_stmt 1 view -0
 13999              		.cfi_startproc
 14000              		@ args = 0, pretend = 0, frame = 8
 14001              		@ frame_needed = 0, uses_anonymous_args = 0
5375:Core/Src/bno055.c ****     /* Variable used to return value of
 14002              		.loc 1 5375 1 is_stmt 0 view .LVU3800
 14003 0000 30B5     		push	{r4, r5, lr}
 14004              	.LCFI461:
 14005              		.cfi_def_cfa_offset 12
 14006              		.cfi_offset 4, -12
 14007              		.cfi_offset 5, -8
 14008              		.cfi_offset 14, -4
 14009 0002 83B0     		sub	sp, sp, #12
 14010              	.LCFI462:
 14011              		.cfi_def_cfa_offset 24
 14012 0004 0546     		mov	r5, r0
5378:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 14013              		.loc 1 5378 5 is_stmt 1 view .LVU3801
 14014              	.LVL1645:
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14015              		.loc 1 5379 5 view .LVU3802
5379:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14016              		.loc 1 5379 9 is_stmt 0 view .LVU3803
 14017 0006 0023     		movs	r3, #0
 14018 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5380:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14019              		.loc 1 5380 5 is_stmt 1 view .LVU3804
 14020              	.LVL1646:
5381:Core/Src/bno055.c **** 
 14021              		.loc 1 5381 5 view .LVU3805
5381:Core/Src/bno055.c **** 
 14022              		.loc 1 5381 8 is_stmt 0 view .LVU3806
 14023 000c 8DF80530 		strb	r3, [sp, #5]
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14024              		.loc 1 5385 5 is_stmt 1 view .LVU3807
ARM GAS  /tmp/ccO72alg.s 			page 422


5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14025              		.loc 1 5385 16 is_stmt 0 view .LVU3808
 14026 0010 0DF10500 		add	r0, sp, #5
 14027              	.LVL1647:
5385:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14028              		.loc 1 5385 16 view .LVU3809
 14029 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14030              	.LVL1648:
 14031 0018 0446     		mov	r4, r0
 14032              	.LVL1649:
5386:Core/Src/bno055.c ****     {
 14033              		.loc 1 5386 5 is_stmt 1 view .LVU3810
5386:Core/Src/bno055.c ****     {
 14034              		.loc 1 5386 22 is_stmt 0 view .LVU3811
 14035 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5386:Core/Src/bno055.c ****     {
 14036              		.loc 1 5386 8 view .LVU3812
 14037 001e ABB9     		cbnz	r3, .L1023
 14038              	.L1018:
5390:Core/Src/bno055.c ****     {
 14039              		.loc 1 5390 5 is_stmt 1 view .LVU3813
5390:Core/Src/bno055.c ****     {
 14040              		.loc 1 5390 8 is_stmt 0 view .LVU3814
 14041 0020 DCB9     		cbnz	r4, .L1020
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14042              		.loc 1 5393 9 is_stmt 1 view .LVU3815
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14043              		.loc 1 5393 21 is_stmt 0 view .LVU3816
 14044 0022 0DF10600 		add	r0, sp, #6
 14045 0026 FFF7FEFF 		bl	bno055_read_gyro_y
 14046              	.LVL1650:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14047              		.loc 1 5393 18 view .LVU3817
 14048 002a 54FA80F4 		uxtab	r4, r4, r0
 14049              	.LVL1651:
5393:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14050              		.loc 1 5393 18 view .LVU3818
 14051 002e 64B2     		sxtb	r4, r4
 14052              	.LVL1652:
5394:Core/Src/bno055.c ****         {
 14053              		.loc 1 5394 9 is_stmt 1 view .LVU3819
5394:Core/Src/bno055.c ****         {
 14054              		.loc 1 5394 12 is_stmt 0 view .LVU3820
 14055 0030 B4B9     		cbnz	r4, .L1021
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14056              		.loc 1 5397 13 is_stmt 1 view .LVU3821
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14057              		.loc 1 5397 22 is_stmt 0 view .LVU3822
 14058 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14059 0036 FFF7FEFF 		bl	__aeabi_i2d
 14060              	.LVL1653:
5397:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14061              		.loc 1 5397 20 view .LVU3823
 14062 003a 0022     		movs	r2, #0
 14063 003c 0A4B     		ldr	r3, .L1024
 14064 003e FFF7FEFF 		bl	__aeabi_dmul
 14065              	.LVL1654:
ARM GAS  /tmp/ccO72alg.s 			page 423


5398:Core/Src/bno055.c ****         }
 14066              		.loc 1 5398 13 is_stmt 1 view .LVU3824
5398:Core/Src/bno055.c ****         }
 14067              		.loc 1 5398 23 is_stmt 0 view .LVU3825
 14068 0042 C5E90001 		strd	r0, [r5]
 14069              	.LVL1655:
 14070              	.L1019:
5410:Core/Src/bno055.c **** }
 14071              		.loc 1 5410 5 is_stmt 1 view .LVU3826
5411:Core/Src/bno055.c **** 
 14072              		.loc 1 5411 1 is_stmt 0 view .LVU3827
 14073 0046 2046     		mov	r0, r4
 14074 0048 03B0     		add	sp, sp, #12
 14075              	.LCFI463:
 14076              		.cfi_remember_state
 14077              		.cfi_def_cfa_offset 12
 14078              		@ sp needed
 14079 004a 30BD     		pop	{r4, r5, pc}
 14080              	.LVL1656:
 14081              	.L1023:
 14082              	.LCFI464:
 14083              		.cfi_restore_state
5388:Core/Src/bno055.c ****     }
 14084              		.loc 1 5388 9 is_stmt 1 view .LVU3828
5388:Core/Src/bno055.c ****     }
 14085              		.loc 1 5388 21 is_stmt 0 view .LVU3829
 14086 004c 0020     		movs	r0, #0
 14087 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 14088              	.LVL1657:
5388:Core/Src/bno055.c ****     }
 14089              		.loc 1 5388 18 view .LVU3830
 14090 0052 54FA80F4 		uxtab	r4, r4, r0
 14091              	.LVL1658:
5388:Core/Src/bno055.c ****     }
 14092              		.loc 1 5388 18 view .LVU3831
 14093 0056 64B2     		sxtb	r4, r4
 14094              	.LVL1659:
5388:Core/Src/bno055.c ****     }
 14095              		.loc 1 5388 18 view .LVU3832
 14096 0058 E2E7     		b	.L1018
 14097              	.L1020:
5407:Core/Src/bno055.c ****     }
 14098              		.loc 1 5407 18 view .LVU3833
 14099 005a 4FF0FF34 		mov	r4, #-1
 14100              	.LVL1660:
5407:Core/Src/bno055.c ****     }
 14101              		.loc 1 5407 18 view .LVU3834
 14102 005e F2E7     		b	.L1019
 14103              	.LVL1661:
 14104              	.L1021:
5402:Core/Src/bno055.c ****         }
 14105              		.loc 1 5402 22 view .LVU3835
 14106 0060 4FF0FF34 		mov	r4, #-1
 14107              	.LVL1662:
5402:Core/Src/bno055.c ****         }
 14108              		.loc 1 5402 22 view .LVU3836
 14109 0064 EFE7     		b	.L1019
ARM GAS  /tmp/ccO72alg.s 			page 424


 14110              	.L1025:
 14111 0066 00BF     		.align	2
 14112              	.L1024:
 14113 0068 0000B03F 		.word	1068498944
 14114              		.cfi_endproc
 14115              	.LFE93:
 14117              		.section	.text.bno055_convert_double_gyro_y_rps,"ax",%progbits
 14118              		.align	1
 14119              		.global	bno055_convert_double_gyro_y_rps
 14120              		.syntax unified
 14121              		.thumb
 14122              		.thumb_func
 14124              	bno055_convert_double_gyro_y_rps:
 14125              	.LVL1663:
 14126              	.LFB94:
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 14127              		.loc 1 5428 1 is_stmt 1 view -0
 14128              		.cfi_startproc
 14129              		@ args = 0, pretend = 0, frame = 8
 14130              		@ frame_needed = 0, uses_anonymous_args = 0
5428:Core/Src/bno055.c ****     /* Variable used to return value of
 14131              		.loc 1 5428 1 is_stmt 0 view .LVU3838
 14132 0000 30B5     		push	{r4, r5, lr}
 14133              	.LCFI465:
 14134              		.cfi_def_cfa_offset 12
 14135              		.cfi_offset 4, -12
 14136              		.cfi_offset 5, -8
 14137              		.cfi_offset 14, -4
 14138 0002 83B0     		sub	sp, sp, #12
 14139              	.LCFI466:
 14140              		.cfi_def_cfa_offset 24
 14141 0004 0546     		mov	r5, r0
5431:Core/Src/bno055.c ****     s16 reg_gyro_y_s16 = BNO055_INIT_VALUE;
 14142              		.loc 1 5431 5 is_stmt 1 view .LVU3839
 14143              	.LVL1664:
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14144              		.loc 1 5432 5 view .LVU3840
5432:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14145              		.loc 1 5432 9 is_stmt 0 view .LVU3841
 14146 0006 0023     		movs	r3, #0
 14147 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5433:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14148              		.loc 1 5433 5 is_stmt 1 view .LVU3842
 14149              	.LVL1665:
5434:Core/Src/bno055.c **** 
 14150              		.loc 1 5434 5 view .LVU3843
5434:Core/Src/bno055.c **** 
 14151              		.loc 1 5434 8 is_stmt 0 view .LVU3844
 14152 000c 8DF80530 		strb	r3, [sp, #5]
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14153              		.loc 1 5438 5 is_stmt 1 view .LVU3845
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14154              		.loc 1 5438 16 is_stmt 0 view .LVU3846
 14155 0010 0DF10500 		add	r0, sp, #5
 14156              	.LVL1666:
5438:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14157              		.loc 1 5438 16 view .LVU3847
ARM GAS  /tmp/ccO72alg.s 			page 425


 14158 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14159              	.LVL1667:
 14160 0018 0446     		mov	r4, r0
 14161              	.LVL1668:
5439:Core/Src/bno055.c ****     {
 14162              		.loc 1 5439 5 is_stmt 1 view .LVU3848
5439:Core/Src/bno055.c ****     {
 14163              		.loc 1 5439 22 is_stmt 0 view .LVU3849
 14164 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5439:Core/Src/bno055.c ****     {
 14165              		.loc 1 5439 8 view .LVU3850
 14166 001e 012B     		cmp	r3, #1
 14167 0020 15D1     		bne	.L1032
 14168              	.L1027:
5443:Core/Src/bno055.c ****     {
 14169              		.loc 1 5443 5 is_stmt 1 view .LVU3851
5443:Core/Src/bno055.c ****     {
 14170              		.loc 1 5443 8 is_stmt 0 view .LVU3852
 14171 0022 DCB9     		cbnz	r4, .L1029
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14172              		.loc 1 5446 9 is_stmt 1 view .LVU3853
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14173              		.loc 1 5446 21 is_stmt 0 view .LVU3854
 14174 0024 0DF10600 		add	r0, sp, #6
 14175 0028 FFF7FEFF 		bl	bno055_read_gyro_y
 14176              	.LVL1669:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14177              		.loc 1 5446 18 view .LVU3855
 14178 002c 54FA80F4 		uxtab	r4, r4, r0
 14179              	.LVL1670:
5446:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14180              		.loc 1 5446 18 view .LVU3856
 14181 0030 64B2     		sxtb	r4, r4
 14182              	.LVL1671:
5447:Core/Src/bno055.c ****         {
 14183              		.loc 1 5447 9 is_stmt 1 view .LVU3857
5447:Core/Src/bno055.c ****         {
 14184              		.loc 1 5447 12 is_stmt 0 view .LVU3858
 14185 0032 B4B9     		cbnz	r4, .L1030
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14186              		.loc 1 5450 13 is_stmt 1 view .LVU3859
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14187              		.loc 1 5450 22 is_stmt 0 view .LVU3860
 14188 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14189 0038 FFF7FEFF 		bl	__aeabi_i2d
 14190              	.LVL1672:
5450:Core/Src/bno055.c ****             *gyro_y_d = data_d;
 14191              		.loc 1 5450 20 view .LVU3861
 14192 003c 0022     		movs	r2, #0
 14193 003e 0A4B     		ldr	r3, .L1033
 14194 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14195              	.LVL1673:
5451:Core/Src/bno055.c ****         }
 14196              		.loc 1 5451 13 is_stmt 1 view .LVU3862
5451:Core/Src/bno055.c ****         }
 14197              		.loc 1 5451 23 is_stmt 0 view .LVU3863
 14198 0044 C5E90001 		strd	r0, [r5]
ARM GAS  /tmp/ccO72alg.s 			page 426


 14199              	.LVL1674:
 14200              	.L1028:
5463:Core/Src/bno055.c **** }
 14201              		.loc 1 5463 5 is_stmt 1 view .LVU3864
5464:Core/Src/bno055.c **** 
 14202              		.loc 1 5464 1 is_stmt 0 view .LVU3865
 14203 0048 2046     		mov	r0, r4
 14204 004a 03B0     		add	sp, sp, #12
 14205              	.LCFI467:
 14206              		.cfi_remember_state
 14207              		.cfi_def_cfa_offset 12
 14208              		@ sp needed
 14209 004c 30BD     		pop	{r4, r5, pc}
 14210              	.LVL1675:
 14211              	.L1032:
 14212              	.LCFI468:
 14213              		.cfi_restore_state
5441:Core/Src/bno055.c ****     }
 14214              		.loc 1 5441 9 is_stmt 1 view .LVU3866
5441:Core/Src/bno055.c ****     }
 14215              		.loc 1 5441 21 is_stmt 0 view .LVU3867
 14216 004e 0120     		movs	r0, #1
 14217 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14218              	.LVL1676:
5441:Core/Src/bno055.c ****     }
 14219              		.loc 1 5441 18 view .LVU3868
 14220 0054 54FA80F4 		uxtab	r4, r4, r0
 14221              	.LVL1677:
5441:Core/Src/bno055.c ****     }
 14222              		.loc 1 5441 18 view .LVU3869
 14223 0058 64B2     		sxtb	r4, r4
 14224              	.LVL1678:
5441:Core/Src/bno055.c ****     }
 14225              		.loc 1 5441 18 view .LVU3870
 14226 005a E2E7     		b	.L1027
 14227              	.L1029:
5460:Core/Src/bno055.c ****     }
 14228              		.loc 1 5460 18 view .LVU3871
 14229 005c 4FF0FF34 		mov	r4, #-1
 14230              	.LVL1679:
5460:Core/Src/bno055.c ****     }
 14231              		.loc 1 5460 18 view .LVU3872
 14232 0060 F2E7     		b	.L1028
 14233              	.LVL1680:
 14234              	.L1030:
5455:Core/Src/bno055.c ****         }
 14235              		.loc 1 5455 22 view .LVU3873
 14236 0062 4FF0FF34 		mov	r4, #-1
 14237              	.LVL1681:
5455:Core/Src/bno055.c ****         }
 14238              		.loc 1 5455 22 view .LVU3874
 14239 0066 EFE7     		b	.L1028
 14240              	.L1034:
 14241              		.align	2
 14242              	.L1033:
 14243 0068 00208C40 		.word	1082925056
 14244              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 427


 14245              	.LFE94:
 14247              		.section	.text.bno055_convert_double_gyro_z_dps,"ax",%progbits
 14248              		.align	1
 14249              		.global	bno055_convert_double_gyro_z_dps
 14250              		.syntax unified
 14251              		.thumb
 14252              		.thumb_func
 14254              	bno055_convert_double_gyro_z_dps:
 14255              	.LVL1682:
 14256              	.LFB95:
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 14257              		.loc 1 5481 1 is_stmt 1 view -0
 14258              		.cfi_startproc
 14259              		@ args = 0, pretend = 0, frame = 8
 14260              		@ frame_needed = 0, uses_anonymous_args = 0
5481:Core/Src/bno055.c ****     /* Variable used to return value of
 14261              		.loc 1 5481 1 is_stmt 0 view .LVU3876
 14262 0000 30B5     		push	{r4, r5, lr}
 14263              	.LCFI469:
 14264              		.cfi_def_cfa_offset 12
 14265              		.cfi_offset 4, -12
 14266              		.cfi_offset 5, -8
 14267              		.cfi_offset 14, -4
 14268 0002 83B0     		sub	sp, sp, #12
 14269              	.LCFI470:
 14270              		.cfi_def_cfa_offset 24
 14271 0004 0546     		mov	r5, r0
5484:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 14272              		.loc 1 5484 5 is_stmt 1 view .LVU3877
 14273              	.LVL1683:
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14274              		.loc 1 5485 5 view .LVU3878
5485:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14275              		.loc 1 5485 9 is_stmt 0 view .LVU3879
 14276 0006 0023     		movs	r3, #0
 14277 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5486:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14278              		.loc 1 5486 5 is_stmt 1 view .LVU3880
 14279              	.LVL1684:
5487:Core/Src/bno055.c **** 
 14280              		.loc 1 5487 5 view .LVU3881
5487:Core/Src/bno055.c **** 
 14281              		.loc 1 5487 8 is_stmt 0 view .LVU3882
 14282 000c 8DF80530 		strb	r3, [sp, #5]
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14283              		.loc 1 5491 5 is_stmt 1 view .LVU3883
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14284              		.loc 1 5491 16 is_stmt 0 view .LVU3884
 14285 0010 0DF10500 		add	r0, sp, #5
 14286              	.LVL1685:
5491:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14287              		.loc 1 5491 16 view .LVU3885
 14288 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14289              	.LVL1686:
 14290 0018 0446     		mov	r4, r0
 14291              	.LVL1687:
5492:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 428


 14292              		.loc 1 5492 5 is_stmt 1 view .LVU3886
5492:Core/Src/bno055.c ****     {
 14293              		.loc 1 5492 22 is_stmt 0 view .LVU3887
 14294 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5492:Core/Src/bno055.c ****     {
 14295              		.loc 1 5492 8 view .LVU3888
 14296 001e ABB9     		cbnz	r3, .L1041
 14297              	.L1036:
5496:Core/Src/bno055.c ****     {
 14298              		.loc 1 5496 5 is_stmt 1 view .LVU3889
5496:Core/Src/bno055.c ****     {
 14299              		.loc 1 5496 8 is_stmt 0 view .LVU3890
 14300 0020 DCB9     		cbnz	r4, .L1038
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14301              		.loc 1 5499 9 is_stmt 1 view .LVU3891
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14302              		.loc 1 5499 21 is_stmt 0 view .LVU3892
 14303 0022 0DF10600 		add	r0, sp, #6
 14304 0026 FFF7FEFF 		bl	bno055_read_gyro_z
 14305              	.LVL1688:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14306              		.loc 1 5499 18 view .LVU3893
 14307 002a 54FA80F4 		uxtab	r4, r4, r0
 14308              	.LVL1689:
5499:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14309              		.loc 1 5499 18 view .LVU3894
 14310 002e 64B2     		sxtb	r4, r4
 14311              	.LVL1690:
5500:Core/Src/bno055.c ****         {
 14312              		.loc 1 5500 9 is_stmt 1 view .LVU3895
5500:Core/Src/bno055.c ****         {
 14313              		.loc 1 5500 12 is_stmt 0 view .LVU3896
 14314 0030 B4B9     		cbnz	r4, .L1039
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14315              		.loc 1 5503 13 is_stmt 1 view .LVU3897
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14316              		.loc 1 5503 22 is_stmt 0 view .LVU3898
 14317 0032 BDF90600 		ldrsh	r0, [sp, #6]
 14318 0036 FFF7FEFF 		bl	__aeabi_i2d
 14319              	.LVL1691:
5503:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14320              		.loc 1 5503 20 view .LVU3899
 14321 003a 0022     		movs	r2, #0
 14322 003c 0A4B     		ldr	r3, .L1042
 14323 003e FFF7FEFF 		bl	__aeabi_dmul
 14324              	.LVL1692:
5504:Core/Src/bno055.c ****         }
 14325              		.loc 1 5504 13 is_stmt 1 view .LVU3900
5504:Core/Src/bno055.c ****         }
 14326              		.loc 1 5504 23 is_stmt 0 view .LVU3901
 14327 0042 C5E90001 		strd	r0, [r5]
 14328              	.LVL1693:
 14329              	.L1037:
5516:Core/Src/bno055.c **** }
 14330              		.loc 1 5516 5 is_stmt 1 view .LVU3902
5517:Core/Src/bno055.c **** 
 14331              		.loc 1 5517 1 is_stmt 0 view .LVU3903
ARM GAS  /tmp/ccO72alg.s 			page 429


 14332 0046 2046     		mov	r0, r4
 14333 0048 03B0     		add	sp, sp, #12
 14334              	.LCFI471:
 14335              		.cfi_remember_state
 14336              		.cfi_def_cfa_offset 12
 14337              		@ sp needed
 14338 004a 30BD     		pop	{r4, r5, pc}
 14339              	.LVL1694:
 14340              	.L1041:
 14341              	.LCFI472:
 14342              		.cfi_restore_state
5494:Core/Src/bno055.c ****     }
 14343              		.loc 1 5494 9 is_stmt 1 view .LVU3904
5494:Core/Src/bno055.c ****     }
 14344              		.loc 1 5494 21 is_stmt 0 view .LVU3905
 14345 004c 0020     		movs	r0, #0
 14346 004e FFF7FEFF 		bl	bno055_set_gyro_unit
 14347              	.LVL1695:
5494:Core/Src/bno055.c ****     }
 14348              		.loc 1 5494 18 view .LVU3906
 14349 0052 54FA80F4 		uxtab	r4, r4, r0
 14350              	.LVL1696:
5494:Core/Src/bno055.c ****     }
 14351              		.loc 1 5494 18 view .LVU3907
 14352 0056 64B2     		sxtb	r4, r4
 14353              	.LVL1697:
5494:Core/Src/bno055.c ****     }
 14354              		.loc 1 5494 18 view .LVU3908
 14355 0058 E2E7     		b	.L1036
 14356              	.L1038:
5513:Core/Src/bno055.c ****     }
 14357              		.loc 1 5513 18 view .LVU3909
 14358 005a 4FF0FF34 		mov	r4, #-1
 14359              	.LVL1698:
5513:Core/Src/bno055.c ****     }
 14360              		.loc 1 5513 18 view .LVU3910
 14361 005e F2E7     		b	.L1037
 14362              	.LVL1699:
 14363              	.L1039:
5508:Core/Src/bno055.c ****         }
 14364              		.loc 1 5508 22 view .LVU3911
 14365 0060 4FF0FF34 		mov	r4, #-1
 14366              	.LVL1700:
5508:Core/Src/bno055.c ****         }
 14367              		.loc 1 5508 22 view .LVU3912
 14368 0064 EFE7     		b	.L1037
 14369              	.L1043:
 14370 0066 00BF     		.align	2
 14371              	.L1042:
 14372 0068 0000B03F 		.word	1068498944
 14373              		.cfi_endproc
 14374              	.LFE95:
 14376              		.section	.text.bno055_convert_double_gyro_z_rps,"ax",%progbits
 14377              		.align	1
 14378              		.global	bno055_convert_double_gyro_z_rps
 14379              		.syntax unified
 14380              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 430


 14381              		.thumb_func
 14383              	bno055_convert_double_gyro_z_rps:
 14384              	.LVL1701:
 14385              	.LFB96:
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 14386              		.loc 1 5534 1 is_stmt 1 view -0
 14387              		.cfi_startproc
 14388              		@ args = 0, pretend = 0, frame = 8
 14389              		@ frame_needed = 0, uses_anonymous_args = 0
5534:Core/Src/bno055.c ****     /* Variable used to return value of
 14390              		.loc 1 5534 1 is_stmt 0 view .LVU3914
 14391 0000 30B5     		push	{r4, r5, lr}
 14392              	.LCFI473:
 14393              		.cfi_def_cfa_offset 12
 14394              		.cfi_offset 4, -12
 14395              		.cfi_offset 5, -8
 14396              		.cfi_offset 14, -4
 14397 0002 83B0     		sub	sp, sp, #12
 14398              	.LCFI474:
 14399              		.cfi_def_cfa_offset 24
 14400 0004 0546     		mov	r5, r0
5537:Core/Src/bno055.c ****     s16 reg_gyro_z_s16 = BNO055_INIT_VALUE;
 14401              		.loc 1 5537 5 is_stmt 1 view .LVU3915
 14402              	.LVL1702:
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14403              		.loc 1 5538 5 view .LVU3916
5538:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 14404              		.loc 1 5538 9 is_stmt 0 view .LVU3917
 14405 0006 0023     		movs	r3, #0
 14406 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5539:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14407              		.loc 1 5539 5 is_stmt 1 view .LVU3918
 14408              	.LVL1703:
5540:Core/Src/bno055.c **** 
 14409              		.loc 1 5540 5 view .LVU3919
5540:Core/Src/bno055.c **** 
 14410              		.loc 1 5540 8 is_stmt 0 view .LVU3920
 14411 000c 8DF80530 		strb	r3, [sp, #5]
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14412              		.loc 1 5544 5 is_stmt 1 view .LVU3921
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14413              		.loc 1 5544 16 is_stmt 0 view .LVU3922
 14414 0010 0DF10500 		add	r0, sp, #5
 14415              	.LVL1704:
5544:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14416              		.loc 1 5544 16 view .LVU3923
 14417 0014 FFF7FEFF 		bl	bno055_get_gyro_unit
 14418              	.LVL1705:
 14419 0018 0446     		mov	r4, r0
 14420              	.LVL1706:
5545:Core/Src/bno055.c ****     {
 14421              		.loc 1 5545 5 is_stmt 1 view .LVU3924
5545:Core/Src/bno055.c ****     {
 14422              		.loc 1 5545 22 is_stmt 0 view .LVU3925
 14423 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5545:Core/Src/bno055.c ****     {
 14424              		.loc 1 5545 8 view .LVU3926
ARM GAS  /tmp/ccO72alg.s 			page 431


 14425 001e 012B     		cmp	r3, #1
 14426 0020 15D1     		bne	.L1050
 14427              	.L1045:
5549:Core/Src/bno055.c ****     {
 14428              		.loc 1 5549 5 is_stmt 1 view .LVU3927
5549:Core/Src/bno055.c ****     {
 14429              		.loc 1 5549 8 is_stmt 0 view .LVU3928
 14430 0022 DCB9     		cbnz	r4, .L1047
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14431              		.loc 1 5552 9 is_stmt 1 view .LVU3929
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14432              		.loc 1 5552 21 is_stmt 0 view .LVU3930
 14433 0024 0DF10600 		add	r0, sp, #6
 14434 0028 FFF7FEFF 		bl	bno055_read_gyro_z
 14435              	.LVL1707:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14436              		.loc 1 5552 18 view .LVU3931
 14437 002c 54FA80F4 		uxtab	r4, r4, r0
 14438              	.LVL1708:
5552:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14439              		.loc 1 5552 18 view .LVU3932
 14440 0030 64B2     		sxtb	r4, r4
 14441              	.LVL1709:
5553:Core/Src/bno055.c ****         {
 14442              		.loc 1 5553 9 is_stmt 1 view .LVU3933
5553:Core/Src/bno055.c ****         {
 14443              		.loc 1 5553 12 is_stmt 0 view .LVU3934
 14444 0032 B4B9     		cbnz	r4, .L1048
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14445              		.loc 1 5556 13 is_stmt 1 view .LVU3935
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14446              		.loc 1 5556 22 is_stmt 0 view .LVU3936
 14447 0034 BDF90600 		ldrsh	r0, [sp, #6]
 14448 0038 FFF7FEFF 		bl	__aeabi_i2d
 14449              	.LVL1710:
5556:Core/Src/bno055.c ****             *gyro_z_d = data_d;
 14450              		.loc 1 5556 20 view .LVU3937
 14451 003c 0022     		movs	r2, #0
 14452 003e 0A4B     		ldr	r3, .L1051
 14453 0040 FFF7FEFF 		bl	__aeabi_ddiv
 14454              	.LVL1711:
5557:Core/Src/bno055.c ****         }
 14455              		.loc 1 5557 13 is_stmt 1 view .LVU3938
5557:Core/Src/bno055.c ****         }
 14456              		.loc 1 5557 23 is_stmt 0 view .LVU3939
 14457 0044 C5E90001 		strd	r0, [r5]
 14458              	.LVL1712:
 14459              	.L1046:
5569:Core/Src/bno055.c **** }
 14460              		.loc 1 5569 5 is_stmt 1 view .LVU3940
5570:Core/Src/bno055.c **** 
 14461              		.loc 1 5570 1 is_stmt 0 view .LVU3941
 14462 0048 2046     		mov	r0, r4
 14463 004a 03B0     		add	sp, sp, #12
 14464              	.LCFI475:
 14465              		.cfi_remember_state
 14466              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 432


 14467              		@ sp needed
 14468 004c 30BD     		pop	{r4, r5, pc}
 14469              	.LVL1713:
 14470              	.L1050:
 14471              	.LCFI476:
 14472              		.cfi_restore_state
5547:Core/Src/bno055.c ****     }
 14473              		.loc 1 5547 9 is_stmt 1 view .LVU3942
5547:Core/Src/bno055.c ****     }
 14474              		.loc 1 5547 21 is_stmt 0 view .LVU3943
 14475 004e 0120     		movs	r0, #1
 14476 0050 FFF7FEFF 		bl	bno055_set_gyro_unit
 14477              	.LVL1714:
5547:Core/Src/bno055.c ****     }
 14478              		.loc 1 5547 18 view .LVU3944
 14479 0054 54FA80F4 		uxtab	r4, r4, r0
 14480              	.LVL1715:
5547:Core/Src/bno055.c ****     }
 14481              		.loc 1 5547 18 view .LVU3945
 14482 0058 64B2     		sxtb	r4, r4
 14483              	.LVL1716:
5547:Core/Src/bno055.c ****     }
 14484              		.loc 1 5547 18 view .LVU3946
 14485 005a E2E7     		b	.L1045
 14486              	.L1047:
5566:Core/Src/bno055.c ****     }
 14487              		.loc 1 5566 18 view .LVU3947
 14488 005c 4FF0FF34 		mov	r4, #-1
 14489              	.LVL1717:
5566:Core/Src/bno055.c ****     }
 14490              		.loc 1 5566 18 view .LVU3948
 14491 0060 F2E7     		b	.L1046
 14492              	.LVL1718:
 14493              	.L1048:
5561:Core/Src/bno055.c ****         }
 14494              		.loc 1 5561 22 view .LVU3949
 14495 0062 4FF0FF34 		mov	r4, #-1
 14496              	.LVL1719:
5561:Core/Src/bno055.c ****         }
 14497              		.loc 1 5561 22 view .LVU3950
 14498 0066 EFE7     		b	.L1046
 14499              	.L1052:
 14500              		.align	2
 14501              	.L1051:
 14502 0068 00208C40 		.word	1082925056
 14503              		.cfi_endproc
 14504              	.LFE96:
 14506              		.section	.text.bno055_convert_double_gyro_xyz_dps,"ax",%progbits
 14507              		.align	1
 14508              		.global	bno055_convert_double_gyro_xyz_dps
 14509              		.syntax unified
 14510              		.thumb
 14511              		.thumb_func
 14513              	bno055_convert_double_gyro_xyz_dps:
 14514              	.LVL1720:
 14515              	.LFB97:
5591:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccO72alg.s 			page 433


 14516              		.loc 1 5591 1 is_stmt 1 view -0
 14517              		.cfi_startproc
 14518              		@ args = 0, pretend = 0, frame = 16
 14519              		@ frame_needed = 0, uses_anonymous_args = 0
5591:Core/Src/bno055.c ****     /* Variable used to return value of
 14520              		.loc 1 5591 1 is_stmt 0 view .LVU3952
 14521 0000 30B5     		push	{r4, r5, lr}
 14522              	.LCFI477:
 14523              		.cfi_def_cfa_offset 12
 14524              		.cfi_offset 4, -12
 14525              		.cfi_offset 5, -8
 14526              		.cfi_offset 14, -4
 14527 0002 85B0     		sub	sp, sp, #20
 14528              	.LCFI478:
 14529              		.cfi_def_cfa_offset 32
 14530 0004 0546     		mov	r5, r0
5594:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14531              		.loc 1 5594 5 is_stmt 1 view .LVU3953
 14532              	.LVL1721:
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14533              		.loc 1 5595 5 view .LVU3954
5595:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14534              		.loc 1 5595 26 is_stmt 0 view .LVU3955
 14535 0006 0023     		movs	r3, #0
 14536 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14537 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14538 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5596:Core/Src/bno055.c **** 
 14539              		.loc 1 5596 5 is_stmt 1 view .LVU3956
5596:Core/Src/bno055.c **** 
 14540              		.loc 1 5596 8 is_stmt 0 view .LVU3957
 14541 0014 8DF80730 		strb	r3, [sp, #7]
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14542              		.loc 1 5600 5 is_stmt 1 view .LVU3958
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14543              		.loc 1 5600 16 is_stmt 0 view .LVU3959
 14544 0018 0DF10700 		add	r0, sp, #7
 14545              	.LVL1722:
5600:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_DPS)
 14546              		.loc 1 5600 16 view .LVU3960
 14547 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14548              	.LVL1723:
 14549 0020 0446     		mov	r4, r0
 14550              	.LVL1724:
5601:Core/Src/bno055.c ****     {
 14551              		.loc 1 5601 5 is_stmt 1 view .LVU3961
5601:Core/Src/bno055.c ****     {
 14552              		.loc 1 5601 22 is_stmt 0 view .LVU3962
 14553 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5601:Core/Src/bno055.c ****     {
 14554              		.loc 1 5601 8 view .LVU3963
 14555 0026 43BB     		cbnz	r3, .L1059
 14556              	.L1054:
5605:Core/Src/bno055.c ****     {
 14557              		.loc 1 5605 5 is_stmt 1 view .LVU3964
5605:Core/Src/bno055.c ****     {
 14558              		.loc 1 5605 8 is_stmt 0 view .LVU3965
ARM GAS  /tmp/ccO72alg.s 			page 434


 14559 0028 74BB     		cbnz	r4, .L1056
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14560              		.loc 1 5608 9 is_stmt 1 view .LVU3966
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14561              		.loc 1 5608 21 is_stmt 0 view .LVU3967
 14562 002a 02A8     		add	r0, sp, #8
 14563 002c FFF7FEFF 		bl	bno055_read_gyro_xyz
 14564              	.LVL1725:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14565              		.loc 1 5608 18 view .LVU3968
 14566 0030 54FA80F4 		uxtab	r4, r4, r0
 14567              	.LVL1726:
5608:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14568              		.loc 1 5608 18 view .LVU3969
 14569 0034 64B2     		sxtb	r4, r4
 14570              	.LVL1727:
5609:Core/Src/bno055.c ****         {
 14571              		.loc 1 5609 9 is_stmt 1 view .LVU3970
5609:Core/Src/bno055.c ****         {
 14572              		.loc 1 5609 12 is_stmt 0 view .LVU3971
 14573 0036 54BB     		cbnz	r4, .L1057
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14574              		.loc 1 5612 13 is_stmt 1 view .LVU3972
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14575              		.loc 1 5612 27 is_stmt 0 view .LVU3973
 14576 0038 BDF90800 		ldrsh	r0, [sp, #8]
 14577 003c FFF7FEFF 		bl	__aeabi_i2d
 14578              	.LVL1728:
 14579 0040 0022     		movs	r2, #0
 14580 0042 144B     		ldr	r3, .L1060
 14581 0044 FFF7FEFF 		bl	__aeabi_dmul
 14582              	.LVL1729:
5612:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_DPS);
 14583              		.loc 1 5612 25 view .LVU3974
 14584 0048 C5E90001 		strd	r0, [r5]
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14585              		.loc 1 5613 13 is_stmt 1 view .LVU3975
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14586              		.loc 1 5613 27 is_stmt 0 view .LVU3976
 14587 004c BDF90A00 		ldrsh	r0, [sp, #10]
 14588 0050 FFF7FEFF 		bl	__aeabi_i2d
 14589              	.LVL1730:
 14590 0054 0022     		movs	r2, #0
 14591 0056 0F4B     		ldr	r3, .L1060
 14592 0058 FFF7FEFF 		bl	__aeabi_dmul
 14593              	.LVL1731:
5613:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_DPS);
 14594              		.loc 1 5613 25 view .LVU3977
 14595 005c C5E90201 		strd	r0, [r5, #8]
5614:Core/Src/bno055.c ****         }
 14596              		.loc 1 5614 13 is_stmt 1 view .LVU3978
5614:Core/Src/bno055.c ****         }
 14597              		.loc 1 5614 27 is_stmt 0 view .LVU3979
 14598 0060 BDF90C00 		ldrsh	r0, [sp, #12]
 14599 0064 FFF7FEFF 		bl	__aeabi_i2d
 14600              	.LVL1732:
 14601 0068 0022     		movs	r2, #0
ARM GAS  /tmp/ccO72alg.s 			page 435


 14602 006a 0A4B     		ldr	r3, .L1060
 14603 006c FFF7FEFF 		bl	__aeabi_dmul
 14604              	.LVL1733:
5614:Core/Src/bno055.c ****         }
 14605              		.loc 1 5614 25 view .LVU3980
 14606 0070 C5E90401 		strd	r0, [r5, #16]
 14607              	.LVL1734:
 14608              	.L1055:
5626:Core/Src/bno055.c **** }
 14609              		.loc 1 5626 5 is_stmt 1 view .LVU3981
5627:Core/Src/bno055.c **** 
 14610              		.loc 1 5627 1 is_stmt 0 view .LVU3982
 14611 0074 2046     		mov	r0, r4
 14612 0076 05B0     		add	sp, sp, #20
 14613              	.LCFI479:
 14614              		.cfi_remember_state
 14615              		.cfi_def_cfa_offset 12
 14616              		@ sp needed
 14617 0078 30BD     		pop	{r4, r5, pc}
 14618              	.LVL1735:
 14619              	.L1059:
 14620              	.LCFI480:
 14621              		.cfi_restore_state
5603:Core/Src/bno055.c ****     }
 14622              		.loc 1 5603 9 is_stmt 1 view .LVU3983
5603:Core/Src/bno055.c ****     }
 14623              		.loc 1 5603 21 is_stmt 0 view .LVU3984
 14624 007a 0020     		movs	r0, #0
 14625 007c FFF7FEFF 		bl	bno055_set_gyro_unit
 14626              	.LVL1736:
5603:Core/Src/bno055.c ****     }
 14627              		.loc 1 5603 18 view .LVU3985
 14628 0080 54FA80F4 		uxtab	r4, r4, r0
 14629              	.LVL1737:
5603:Core/Src/bno055.c ****     }
 14630              		.loc 1 5603 18 view .LVU3986
 14631 0084 64B2     		sxtb	r4, r4
 14632              	.LVL1738:
5603:Core/Src/bno055.c ****     }
 14633              		.loc 1 5603 18 view .LVU3987
 14634 0086 CFE7     		b	.L1054
 14635              	.L1056:
5623:Core/Src/bno055.c ****     }
 14636              		.loc 1 5623 18 view .LVU3988
 14637 0088 4FF0FF34 		mov	r4, #-1
 14638              	.LVL1739:
5623:Core/Src/bno055.c ****     }
 14639              		.loc 1 5623 18 view .LVU3989
 14640 008c F2E7     		b	.L1055
 14641              	.LVL1740:
 14642              	.L1057:
5618:Core/Src/bno055.c ****         }
 14643              		.loc 1 5618 22 view .LVU3990
 14644 008e 4FF0FF34 		mov	r4, #-1
 14645              	.LVL1741:
5618:Core/Src/bno055.c ****         }
 14646              		.loc 1 5618 22 view .LVU3991
ARM GAS  /tmp/ccO72alg.s 			page 436


 14647 0092 EFE7     		b	.L1055
 14648              	.L1061:
 14649              		.align	2
 14650              	.L1060:
 14651 0094 0000B03F 		.word	1068498944
 14652              		.cfi_endproc
 14653              	.LFE97:
 14655              		.section	.text.bno055_convert_double_gyro_xyz_rps,"ax",%progbits
 14656              		.align	1
 14657              		.global	bno055_convert_double_gyro_xyz_rps
 14658              		.syntax unified
 14659              		.thumb
 14660              		.thumb_func
 14662              	bno055_convert_double_gyro_xyz_rps:
 14663              	.LVL1742:
 14664              	.LFB98:
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14665              		.loc 1 5648 1 is_stmt 1 view -0
 14666              		.cfi_startproc
 14667              		@ args = 0, pretend = 0, frame = 16
 14668              		@ frame_needed = 0, uses_anonymous_args = 0
5648:Core/Src/bno055.c ****     /* Variable used to return value of
 14669              		.loc 1 5648 1 is_stmt 0 view .LVU3993
 14670 0000 30B5     		push	{r4, r5, lr}
 14671              	.LCFI481:
 14672              		.cfi_def_cfa_offset 12
 14673              		.cfi_offset 4, -12
 14674              		.cfi_offset 5, -8
 14675              		.cfi_offset 14, -4
 14676 0002 85B0     		sub	sp, sp, #20
 14677              	.LCFI482:
 14678              		.cfi_def_cfa_offset 32
 14679 0004 0546     		mov	r5, r0
5651:Core/Src/bno055.c ****     struct bno055_gyro_t reg_gyro_xyz = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE }
 14680              		.loc 1 5651 5 is_stmt 1 view .LVU3994
 14681              	.LVL1743:
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14682              		.loc 1 5652 5 view .LVU3995
5652:Core/Src/bno055.c ****     u8 gyro_unit_u8 = BNO055_INIT_VALUE;
 14683              		.loc 1 5652 26 is_stmt 0 view .LVU3996
 14684 0006 0023     		movs	r3, #0
 14685 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 14686 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 14687 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
5653:Core/Src/bno055.c **** 
 14688              		.loc 1 5653 5 is_stmt 1 view .LVU3997
5653:Core/Src/bno055.c **** 
 14689              		.loc 1 5653 8 is_stmt 0 view .LVU3998
 14690 0014 8DF80730 		strb	r3, [sp, #7]
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14691              		.loc 1 5657 5 is_stmt 1 view .LVU3999
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14692              		.loc 1 5657 16 is_stmt 0 view .LVU4000
 14693 0018 0DF10700 		add	r0, sp, #7
 14694              	.LVL1744:
5657:Core/Src/bno055.c ****     if (gyro_unit_u8 != BNO055_GYRO_UNIT_RPS)
 14695              		.loc 1 5657 16 view .LVU4001
ARM GAS  /tmp/ccO72alg.s 			page 437


 14696 001c FFF7FEFF 		bl	bno055_get_gyro_unit
 14697              	.LVL1745:
 14698 0020 0446     		mov	r4, r0
 14699              	.LVL1746:
5658:Core/Src/bno055.c ****     {
 14700              		.loc 1 5658 5 is_stmt 1 view .LVU4002
5658:Core/Src/bno055.c ****     {
 14701              		.loc 1 5658 22 is_stmt 0 view .LVU4003
 14702 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
5658:Core/Src/bno055.c ****     {
 14703              		.loc 1 5658 8 view .LVU4004
 14704 0026 012B     		cmp	r3, #1
 14705 0028 28D1     		bne	.L1068
 14706              	.L1063:
5662:Core/Src/bno055.c ****     {
 14707              		.loc 1 5662 5 is_stmt 1 view .LVU4005
5662:Core/Src/bno055.c ****     {
 14708              		.loc 1 5662 8 is_stmt 0 view .LVU4006
 14709 002a 74BB     		cbnz	r4, .L1065
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14710              		.loc 1 5665 9 is_stmt 1 view .LVU4007
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14711              		.loc 1 5665 21 is_stmt 0 view .LVU4008
 14712 002c 02A8     		add	r0, sp, #8
 14713 002e FFF7FEFF 		bl	bno055_read_gyro_xyz
 14714              	.LVL1747:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14715              		.loc 1 5665 18 view .LVU4009
 14716 0032 54FA80F4 		uxtab	r4, r4, r0
 14717              	.LVL1748:
5665:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 14718              		.loc 1 5665 18 view .LVU4010
 14719 0036 64B2     		sxtb	r4, r4
 14720              	.LVL1749:
5666:Core/Src/bno055.c ****         {
 14721              		.loc 1 5666 9 is_stmt 1 view .LVU4011
5666:Core/Src/bno055.c ****         {
 14722              		.loc 1 5666 12 is_stmt 0 view .LVU4012
 14723 0038 54BB     		cbnz	r4, .L1066
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14724              		.loc 1 5669 13 is_stmt 1 view .LVU4013
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14725              		.loc 1 5669 27 is_stmt 0 view .LVU4014
 14726 003a BDF90800 		ldrsh	r0, [sp, #8]
 14727 003e FFF7FEFF 		bl	__aeabi_i2d
 14728              	.LVL1750:
 14729 0042 0022     		movs	r2, #0
 14730 0044 144B     		ldr	r3, .L1069
 14731 0046 FFF7FEFF 		bl	__aeabi_ddiv
 14732              	.LVL1751:
5669:Core/Src/bno055.c ****             gyro_xyz->y = (double)(reg_gyro_xyz.y / BNO055_GYRO_DIV_RPS);
 14733              		.loc 1 5669 25 view .LVU4015
 14734 004a C5E90001 		strd	r0, [r5]
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14735              		.loc 1 5670 13 is_stmt 1 view .LVU4016
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14736              		.loc 1 5670 27 is_stmt 0 view .LVU4017
ARM GAS  /tmp/ccO72alg.s 			page 438


 14737 004e BDF90A00 		ldrsh	r0, [sp, #10]
 14738 0052 FFF7FEFF 		bl	__aeabi_i2d
 14739              	.LVL1752:
 14740 0056 0022     		movs	r2, #0
 14741 0058 0F4B     		ldr	r3, .L1069
 14742 005a FFF7FEFF 		bl	__aeabi_ddiv
 14743              	.LVL1753:
5670:Core/Src/bno055.c ****             gyro_xyz->z = (double)(reg_gyro_xyz.z / BNO055_GYRO_DIV_RPS);
 14744              		.loc 1 5670 25 view .LVU4018
 14745 005e C5E90201 		strd	r0, [r5, #8]
5671:Core/Src/bno055.c ****         }
 14746              		.loc 1 5671 13 is_stmt 1 view .LVU4019
5671:Core/Src/bno055.c ****         }
 14747              		.loc 1 5671 27 is_stmt 0 view .LVU4020
 14748 0062 BDF90C00 		ldrsh	r0, [sp, #12]
 14749 0066 FFF7FEFF 		bl	__aeabi_i2d
 14750              	.LVL1754:
 14751 006a 0022     		movs	r2, #0
 14752 006c 0A4B     		ldr	r3, .L1069
 14753 006e FFF7FEFF 		bl	__aeabi_ddiv
 14754              	.LVL1755:
5671:Core/Src/bno055.c ****         }
 14755              		.loc 1 5671 25 view .LVU4021
 14756 0072 C5E90401 		strd	r0, [r5, #16]
 14757              	.LVL1756:
 14758              	.L1064:
5683:Core/Src/bno055.c **** }
 14759              		.loc 1 5683 5 is_stmt 1 view .LVU4022
5684:Core/Src/bno055.c **** 
 14760              		.loc 1 5684 1 is_stmt 0 view .LVU4023
 14761 0076 2046     		mov	r0, r4
 14762 0078 05B0     		add	sp, sp, #20
 14763              	.LCFI483:
 14764              		.cfi_remember_state
 14765              		.cfi_def_cfa_offset 12
 14766              		@ sp needed
 14767 007a 30BD     		pop	{r4, r5, pc}
 14768              	.LVL1757:
 14769              	.L1068:
 14770              	.LCFI484:
 14771              		.cfi_restore_state
5660:Core/Src/bno055.c ****     }
 14772              		.loc 1 5660 9 is_stmt 1 view .LVU4024
5660:Core/Src/bno055.c ****     }
 14773              		.loc 1 5660 21 is_stmt 0 view .LVU4025
 14774 007c 0120     		movs	r0, #1
 14775 007e FFF7FEFF 		bl	bno055_set_gyro_unit
 14776              	.LVL1758:
5660:Core/Src/bno055.c ****     }
 14777              		.loc 1 5660 18 view .LVU4026
 14778 0082 54FA80F4 		uxtab	r4, r4, r0
 14779              	.LVL1759:
5660:Core/Src/bno055.c ****     }
 14780              		.loc 1 5660 18 view .LVU4027
 14781 0086 64B2     		sxtb	r4, r4
 14782              	.LVL1760:
5660:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 439


 14783              		.loc 1 5660 18 view .LVU4028
 14784 0088 CFE7     		b	.L1063
 14785              	.L1065:
5680:Core/Src/bno055.c ****     }
 14786              		.loc 1 5680 18 view .LVU4029
 14787 008a 4FF0FF34 		mov	r4, #-1
 14788              	.LVL1761:
5680:Core/Src/bno055.c ****     }
 14789              		.loc 1 5680 18 view .LVU4030
 14790 008e F2E7     		b	.L1064
 14791              	.LVL1762:
 14792              	.L1066:
5675:Core/Src/bno055.c ****         }
 14793              		.loc 1 5675 22 view .LVU4031
 14794 0090 4FF0FF34 		mov	r4, #-1
 14795              	.LVL1763:
5675:Core/Src/bno055.c ****         }
 14796              		.loc 1 5675 22 view .LVU4032
 14797 0094 EFE7     		b	.L1064
 14798              	.L1070:
 14799 0096 00BF     		.align	2
 14800              	.L1069:
 14801 0098 00208C40 		.word	1082925056
 14802              		.cfi_endproc
 14803              	.LFE98:
 14805              		.section	.text.bno055_set_euler_unit,"ax",%progbits
 14806              		.align	1
 14807              		.global	bno055_set_euler_unit
 14808              		.syntax unified
 14809              		.thumb
 14810              		.thumb_func
 14812              	bno055_set_euler_unit:
 14813              	.LVL1764:
 14814              	.LFB138:
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14815              		.loc 1 7731 1 is_stmt 1 view -0
 14816              		.cfi_startproc
 14817              		@ args = 0, pretend = 0, frame = 8
 14818              		@ frame_needed = 0, uses_anonymous_args = 0
7731:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 14819              		.loc 1 7731 1 is_stmt 0 view .LVU4034
 14820 0000 30B5     		push	{r4, r5, lr}
 14821              	.LCFI485:
 14822              		.cfi_def_cfa_offset 12
 14823              		.cfi_offset 4, -12
 14824              		.cfi_offset 5, -8
 14825              		.cfi_offset 14, -4
 14826 0002 83B0     		sub	sp, sp, #12
 14827              	.LCFI486:
 14828              		.cfi_def_cfa_offset 24
7732:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 14829              		.loc 1 7732 5 is_stmt 1 view .LVU4035
 14830              	.LVL1765:
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14831              		.loc 1 7733 5 view .LVU4036
7733:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 14832              		.loc 1 7733 8 is_stmt 0 view .LVU4037
ARM GAS  /tmp/ccO72alg.s 			page 440


 14833 0004 0023     		movs	r3, #0
 14834 0006 8DF80730 		strb	r3, [sp, #7]
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14835              		.loc 1 7734 5 is_stmt 1 view .LVU4038
7734:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 14836              		.loc 1 7734 8 is_stmt 0 view .LVU4039
 14837 000a 8DF80630 		strb	r3, [sp, #6]
7735:Core/Src/bno055.c **** 
 14838              		.loc 1 7735 5 is_stmt 1 view .LVU4040
 14839              	.LVL1766:
7738:Core/Src/bno055.c ****     {
 14840              		.loc 1 7738 5 view .LVU4041
7738:Core/Src/bno055.c ****     {
 14841              		.loc 1 7738 18 is_stmt 0 view .LVU4042
 14842 000e 264B     		ldr	r3, .L1081
 14843 0010 1B68     		ldr	r3, [r3]
7738:Core/Src/bno055.c ****     {
 14844              		.loc 1 7738 8 view .LVU4043
 14845 0012 002B     		cmp	r3, #0
 14846 0014 44D0     		beq	.L1075
 14847 0016 0546     		mov	r5, r0
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14848              		.loc 1 7747 9 is_stmt 1 view .LVU4044
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14849              		.loc 1 7747 19 is_stmt 0 view .LVU4045
 14850 0018 0DF10600 		add	r0, sp, #6
 14851              	.LVL1767:
7747:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 14852              		.loc 1 7747 19 view .LVU4046
 14853 001c FFF7FEFF 		bl	bno055_get_operation_mode
 14854              	.LVL1768:
7748:Core/Src/bno055.c ****         {
 14855              		.loc 1 7748 9 is_stmt 1 view .LVU4047
7748:Core/Src/bno055.c ****         {
 14856              		.loc 1 7748 12 is_stmt 0 view .LVU4048
 14857 0020 0446     		mov	r4, r0
 14858 0022 60BB     		cbnz	r0, .L1076
7750:Core/Src/bno055.c ****             {
 14859              		.loc 1 7750 13 is_stmt 1 view .LVU4049
7750:Core/Src/bno055.c ****             {
 14860              		.loc 1 7750 32 is_stmt 0 view .LVU4050
 14861 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7750:Core/Src/bno055.c ****             {
 14862              		.loc 1 7750 16 view .LVU4051
 14863 0028 1BBB     		cbnz	r3, .L1079
 14864              	.LVL1769:
 14865              	.L1074:
7754:Core/Src/bno055.c ****             {
 14866              		.loc 1 7754 13 is_stmt 1 view .LVU4052
7754:Core/Src/bno055.c ****             {
 14867              		.loc 1 7754 16 is_stmt 0 view .LVU4053
 14868 002a 84BB     		cbnz	r4, .L1077
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14869              		.loc 1 7757 17 is_stmt 1 view .LVU4054
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14870              		.loc 1 7757 36 is_stmt 0 view .LVU4055
 14871 002c 1E4B     		ldr	r3, .L1081
ARM GAS  /tmp/ccO72alg.s 			page 441


 14872 002e 1868     		ldr	r0, [r3]
 14873 0030 0469     		ldr	r4, [r0, #16]
 14874              	.LVL1770:
7757:Core/Src/bno055.c ****                                                           BNO055_EULER_UNIT_REG,
 14875              		.loc 1 7757 28 view .LVU4056
 14876 0032 0123     		movs	r3, #1
 14877 0034 0DF10702 		add	r2, sp, #7
 14878 0038 3B21     		movs	r1, #59
 14879 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 14880 003c A047     		blx	r4
 14881              	.LVL1771:
7761:Core/Src/bno055.c ****                 {
 14882              		.loc 1 7761 17 is_stmt 1 view .LVU4057
7761:Core/Src/bno055.c ****                 {
 14883              		.loc 1 7761 20 is_stmt 0 view .LVU4058
 14884 003e 0446     		mov	r4, r0
 14885 0040 F8B9     		cbnz	r0, .L1073
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14886              		.loc 1 7763 21 is_stmt 1 view .LVU4059
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14887              		.loc 1 7763 32 is_stmt 0 view .LVU4060
 14888 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 14889              	.LVL1772:
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14890              		.loc 1 7763 32 view .LVU4061
 14891 0046 20F00400 		bic	r0, r0, #4
 14892 004a 43B2     		sxtb	r3, r0
 14893 004c A800     		lsls	r0, r5, #2
 14894 004e 00F00400 		and	r0, r0, #4
 14895 0052 1843     		orrs	r0, r0, r3
7763:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 14896              		.loc 1 7763 30 view .LVU4062
 14897 0054 8DF80700 		strb	r0, [sp, #7]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14898              		.loc 1 7764 21 is_stmt 1 view .LVU4063
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14899              		.loc 1 7764 41 is_stmt 0 view .LVU4064
 14900 0058 134B     		ldr	r3, .L1081
 14901 005a 1868     		ldr	r0, [r3]
 14902 005c C568     		ldr	r5, [r0, #12]
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14903              		.loc 1 7764 33 view .LVU4065
 14904 005e 0123     		movs	r3, #1
 14905 0060 0DF10702 		add	r2, sp, #7
 14906 0064 3B21     		movs	r1, #59
 14907 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 14908 0068 A847     		blx	r5
 14909              	.LVL1773:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14910              		.loc 1 7764 30 view .LVU4066
 14911 006a 54FA80F4 		uxtab	r4, r4, r0
 14912 006e 64B2     		sxtb	r4, r4
 14913              	.LVL1774:
7764:Core/Src/bno055.c ****                                                                 BNO055_EULER_UNIT_REG,
 14914              		.loc 1 7764 30 view .LVU4067
 14915 0070 07E0     		b	.L1073
 14916              	.LVL1775:
ARM GAS  /tmp/ccO72alg.s 			page 442


 14917              	.L1079:
7752:Core/Src/bno055.c ****             }
 14918              		.loc 1 7752 17 is_stmt 1 view .LVU4068
7752:Core/Src/bno055.c ****             }
 14919              		.loc 1 7752 28 is_stmt 0 view .LVU4069
 14920 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 14921              	.LVL1776:
7752:Core/Src/bno055.c ****             }
 14922              		.loc 1 7752 25 view .LVU4070
 14923 0076 54FA80F4 		uxtab	r4, r4, r0
 14924 007a 64B2     		sxtb	r4, r4
 14925              	.LVL1777:
7752:Core/Src/bno055.c ****             }
 14926              		.loc 1 7752 25 view .LVU4071
 14927 007c D5E7     		b	.L1074
 14928              	.LVL1778:
 14929              	.L1076:
7777:Core/Src/bno055.c ****         }
 14930              		.loc 1 7777 22 view .LVU4072
 14931 007e 4FF0FF34 		mov	r4, #-1
 14932              	.LVL1779:
 14933              	.L1073:
7780:Core/Src/bno055.c ****     {
 14934              		.loc 1 7780 5 is_stmt 1 view .LVU4073
7780:Core/Src/bno055.c ****     {
 14935              		.loc 1 7780 24 is_stmt 0 view .LVU4074
 14936 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7780:Core/Src/bno055.c ****     {
 14937              		.loc 1 7780 8 view .LVU4075
 14938 0086 28B9     		cbnz	r0, .L1080
 14939              	.LVL1780:
 14940              	.L1072:
7788:Core/Src/bno055.c **** 
 14941              		.loc 1 7788 1 view .LVU4076
 14942 0088 2046     		mov	r0, r4
 14943 008a 03B0     		add	sp, sp, #12
 14944              	.LCFI487:
 14945              		.cfi_remember_state
 14946              		.cfi_def_cfa_offset 12
 14947              		@ sp needed
 14948 008c 30BD     		pop	{r4, r5, pc}
 14949              	.LVL1781:
 14950              	.L1077:
 14951              	.LCFI488:
 14952              		.cfi_restore_state
7772:Core/Src/bno055.c ****             }
 14953              		.loc 1 7772 26 view .LVU4077
 14954 008e 4FF0FF34 		mov	r4, #-1
 14955              	.LVL1782:
7772:Core/Src/bno055.c ****             }
 14956              		.loc 1 7772 26 view .LVU4078
 14957 0092 F6E7     		b	.L1073
 14958              	.LVL1783:
 14959              	.L1080:
7784:Core/Src/bno055.c ****     }
 14960              		.loc 1 7784 9 is_stmt 1 view .LVU4079
7784:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 443


 14961              		.loc 1 7784 21 is_stmt 0 view .LVU4080
 14962 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 14963              	.LVL1784:
7784:Core/Src/bno055.c ****     }
 14964              		.loc 1 7784 18 view .LVU4081
 14965 0098 54FA80F4 		uxtab	r4, r4, r0
 14966              	.LVL1785:
7784:Core/Src/bno055.c ****     }
 14967              		.loc 1 7784 18 view .LVU4082
 14968 009c 64B2     		sxtb	r4, r4
 14969              	.LVL1786:
7784:Core/Src/bno055.c ****     }
 14970              		.loc 1 7784 18 view .LVU4083
 14971 009e F3E7     		b	.L1072
 14972              	.LVL1787:
 14973              	.L1075:
7740:Core/Src/bno055.c ****     }
 14974              		.loc 1 7740 16 view .LVU4084
 14975 00a0 6FF07E04 		mvn	r4, #126
 14976 00a4 F0E7     		b	.L1072
 14977              	.L1082:
 14978 00a6 00BF     		.align	2
 14979              	.L1081:
 14980 00a8 00000000 		.word	.LANCHOR0
 14981              		.cfi_endproc
 14982              	.LFE138:
 14984              		.section	.text.bno055_convert_float_euler_h_deg,"ax",%progbits
 14985              		.align	1
 14986              		.global	bno055_convert_float_euler_h_deg
 14987              		.syntax unified
 14988              		.thumb
 14989              		.thumb_func
 14991              	bno055_convert_float_euler_h_deg:
 14992              	.LVL1788:
 14993              	.LFB61:
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 14994              		.loc 1 3880 1 is_stmt 1 view -0
 14995              		.cfi_startproc
 14996              		@ args = 0, pretend = 0, frame = 8
 14997              		@ frame_needed = 0, uses_anonymous_args = 0
3880:Core/Src/bno055.c ****     /* Variable used to return value of
 14998              		.loc 1 3880 1 is_stmt 0 view .LVU4086
 14999 0000 30B5     		push	{r4, r5, lr}
 15000              	.LCFI489:
 15001              		.cfi_def_cfa_offset 12
 15002              		.cfi_offset 4, -12
 15003              		.cfi_offset 5, -8
 15004              		.cfi_offset 14, -4
 15005 0002 83B0     		sub	sp, sp, #12
 15006              	.LCFI490:
 15007              		.cfi_def_cfa_offset 24
 15008 0004 0546     		mov	r5, r0
3883:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15009              		.loc 1 3883 5 is_stmt 1 view .LVU4087
 15010              	.LVL1789:
3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15011              		.loc 1 3884 5 view .LVU4088
ARM GAS  /tmp/ccO72alg.s 			page 444


3884:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15012              		.loc 1 3884 9 is_stmt 0 view .LVU4089
 15013 0006 0023     		movs	r3, #0
 15014 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3885:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15015              		.loc 1 3885 5 is_stmt 1 view .LVU4090
 15016              	.LVL1790:
3886:Core/Src/bno055.c **** 
 15017              		.loc 1 3886 5 view .LVU4091
3886:Core/Src/bno055.c **** 
 15018              		.loc 1 3886 8 is_stmt 0 view .LVU4092
 15019 000c 8DF80530 		strb	r3, [sp, #5]
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15020              		.loc 1 3890 5 is_stmt 1 view .LVU4093
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15021              		.loc 1 3890 16 is_stmt 0 view .LVU4094
 15022 0010 0DF10500 		add	r0, sp, #5
 15023              	.LVL1791:
3890:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15024              		.loc 1 3890 16 view .LVU4095
 15025 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15026              	.LVL1792:
 15027 0018 0446     		mov	r4, r0
 15028              	.LVL1793:
3891:Core/Src/bno055.c ****     {
 15029              		.loc 1 3891 5 is_stmt 1 view .LVU4096
3891:Core/Src/bno055.c ****     {
 15030              		.loc 1 3891 23 is_stmt 0 view .LVU4097
 15031 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3891:Core/Src/bno055.c ****     {
 15032              		.loc 1 3891 8 view .LVU4098
 15033 001e B3B9     		cbnz	r3, .L1089
 15034              	.L1084:
3895:Core/Src/bno055.c ****     {
 15035              		.loc 1 3895 5 is_stmt 1 view .LVU4099
3895:Core/Src/bno055.c ****     {
 15036              		.loc 1 3895 8 is_stmt 0 view .LVU4100
 15037 0020 E4B9     		cbnz	r4, .L1086
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15038              		.loc 1 3898 9 is_stmt 1 view .LVU4101
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15039              		.loc 1 3898 21 is_stmt 0 view .LVU4102
 15040 0022 0DF10600 		add	r0, sp, #6
 15041 0026 FFF7FEFF 		bl	bno055_read_euler_h
 15042              	.LVL1794:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15043              		.loc 1 3898 18 view .LVU4103
 15044 002a 54FA80F4 		uxtab	r4, r4, r0
 15045              	.LVL1795:
3898:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15046              		.loc 1 3898 18 view .LVU4104
 15047 002e 64B2     		sxtb	r4, r4
 15048              	.LVL1796:
3899:Core/Src/bno055.c ****         {
 15049              		.loc 1 3899 9 is_stmt 1 view .LVU4105
3899:Core/Src/bno055.c ****         {
 15050              		.loc 1 3899 12 is_stmt 0 view .LVU4106
ARM GAS  /tmp/ccO72alg.s 			page 445


 15051 0030 BCB9     		cbnz	r4, .L1087
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15052              		.loc 1 3902 13 is_stmt 1 view .LVU4107
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15053              		.loc 1 3902 46 is_stmt 0 view .LVU4108
 15054 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15055 0036 FFF7FEFF 		bl	__aeabi_i2d
 15056              	.LVL1797:
 15057 003a 0022     		movs	r2, #0
 15058 003c 0A4B     		ldr	r3, .L1090
 15059 003e FFF7FEFF 		bl	__aeabi_dmul
 15060              	.LVL1798:
3902:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15061              		.loc 1 3902 20 view .LVU4109
 15062 0042 FFF7FEFF 		bl	__aeabi_d2f
 15063              	.LVL1799:
3903:Core/Src/bno055.c ****         }
 15064              		.loc 1 3903 13 is_stmt 1 view .LVU4110
3903:Core/Src/bno055.c ****         }
 15065              		.loc 1 3903 24 is_stmt 0 view .LVU4111
 15066 0046 2860     		str	r0, [r5]	@ float
 15067              	.LVL1800:
 15068              	.L1085:
3915:Core/Src/bno055.c **** }
 15069              		.loc 1 3915 5 is_stmt 1 view .LVU4112
3916:Core/Src/bno055.c **** 
 15070              		.loc 1 3916 1 is_stmt 0 view .LVU4113
 15071 0048 2046     		mov	r0, r4
 15072 004a 03B0     		add	sp, sp, #12
 15073              	.LCFI491:
 15074              		.cfi_remember_state
 15075              		.cfi_def_cfa_offset 12
 15076              		@ sp needed
 15077 004c 30BD     		pop	{r4, r5, pc}
 15078              	.LVL1801:
 15079              	.L1089:
 15080              	.LCFI492:
 15081              		.cfi_restore_state
3893:Core/Src/bno055.c ****     }
 15082              		.loc 1 3893 9 is_stmt 1 view .LVU4114
3893:Core/Src/bno055.c ****     }
 15083              		.loc 1 3893 21 is_stmt 0 view .LVU4115
 15084 004e 0020     		movs	r0, #0
 15085 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15086              	.LVL1802:
3893:Core/Src/bno055.c ****     }
 15087              		.loc 1 3893 18 view .LVU4116
 15088 0054 54FA80F4 		uxtab	r4, r4, r0
 15089              	.LVL1803:
3893:Core/Src/bno055.c ****     }
 15090              		.loc 1 3893 18 view .LVU4117
 15091 0058 64B2     		sxtb	r4, r4
 15092              	.LVL1804:
3893:Core/Src/bno055.c ****     }
 15093              		.loc 1 3893 18 view .LVU4118
 15094 005a E1E7     		b	.L1084
 15095              	.L1086:
ARM GAS  /tmp/ccO72alg.s 			page 446


3912:Core/Src/bno055.c ****     }
 15096              		.loc 1 3912 18 view .LVU4119
 15097 005c 4FF0FF34 		mov	r4, #-1
 15098              	.LVL1805:
3912:Core/Src/bno055.c ****     }
 15099              		.loc 1 3912 18 view .LVU4120
 15100 0060 F2E7     		b	.L1085
 15101              	.LVL1806:
 15102              	.L1087:
3907:Core/Src/bno055.c ****         }
 15103              		.loc 1 3907 22 view .LVU4121
 15104 0062 4FF0FF34 		mov	r4, #-1
 15105              	.LVL1807:
3907:Core/Src/bno055.c ****         }
 15106              		.loc 1 3907 22 view .LVU4122
 15107 0066 EFE7     		b	.L1085
 15108              	.L1091:
 15109              		.align	2
 15110              	.L1090:
 15111 0068 0000B03F 		.word	1068498944
 15112              		.cfi_endproc
 15113              	.LFE61:
 15115              		.section	.text.bno055_convert_float_euler_h_rad,"ax",%progbits
 15116              		.align	1
 15117              		.global	bno055_convert_float_euler_h_rad
 15118              		.syntax unified
 15119              		.thumb
 15120              		.thumb_func
 15122              	bno055_convert_float_euler_h_rad:
 15123              	.LVL1808:
 15124              	.LFB62:
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15125              		.loc 1 3931 1 is_stmt 1 view -0
 15126              		.cfi_startproc
 15127              		@ args = 0, pretend = 0, frame = 8
 15128              		@ frame_needed = 0, uses_anonymous_args = 0
3931:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15129              		.loc 1 3931 1 is_stmt 0 view .LVU4124
 15130 0000 30B5     		push	{r4, r5, lr}
 15131              	.LCFI493:
 15132              		.cfi_def_cfa_offset 12
 15133              		.cfi_offset 4, -12
 15134              		.cfi_offset 5, -8
 15135              		.cfi_offset 14, -4
 15136 0002 83B0     		sub	sp, sp, #12
 15137              	.LCFI494:
 15138              		.cfi_def_cfa_offset 24
 15139 0004 0546     		mov	r5, r0
3932:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 15140              		.loc 1 3932 5 is_stmt 1 view .LVU4125
 15141              	.LVL1809:
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15142              		.loc 1 3933 5 view .LVU4126
3933:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15143              		.loc 1 3933 9 is_stmt 0 view .LVU4127
 15144 0006 0023     		movs	r3, #0
 15145 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
ARM GAS  /tmp/ccO72alg.s 			page 447


3934:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15146              		.loc 1 3934 5 is_stmt 1 view .LVU4128
 15147              	.LVL1810:
3935:Core/Src/bno055.c **** 
 15148              		.loc 1 3935 5 view .LVU4129
3935:Core/Src/bno055.c **** 
 15149              		.loc 1 3935 8 is_stmt 0 view .LVU4130
 15150 000c 8DF80530 		strb	r3, [sp, #5]
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15151              		.loc 1 3937 5 is_stmt 1 view .LVU4131
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15152              		.loc 1 3937 16 is_stmt 0 view .LVU4132
 15153 0010 0DF10500 		add	r0, sp, #5
 15154              	.LVL1811:
3937:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15155              		.loc 1 3937 16 view .LVU4133
 15156 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15157              	.LVL1812:
 15158 0018 0446     		mov	r4, r0
 15159              	.LVL1813:
3938:Core/Src/bno055.c ****     {
 15160              		.loc 1 3938 5 is_stmt 1 view .LVU4134
3938:Core/Src/bno055.c ****     {
 15161              		.loc 1 3938 23 is_stmt 0 view .LVU4135
 15162 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3938:Core/Src/bno055.c ****     {
 15163              		.loc 1 3938 8 view .LVU4136
 15164 001e 012B     		cmp	r3, #1
 15165 0020 16D1     		bne	.L1098
 15166              	.L1093:
3944:Core/Src/bno055.c ****     {
 15167              		.loc 1 3944 5 is_stmt 1 view .LVU4137
3944:Core/Src/bno055.c ****     {
 15168              		.loc 1 3944 8 is_stmt 0 view .LVU4138
 15169 0022 E4B9     		cbnz	r4, .L1095
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15170              		.loc 1 3947 9 is_stmt 1 view .LVU4139
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15171              		.loc 1 3947 21 is_stmt 0 view .LVU4140
 15172 0024 0DF10600 		add	r0, sp, #6
 15173 0028 FFF7FEFF 		bl	bno055_read_euler_h
 15174              	.LVL1814:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15175              		.loc 1 3947 18 view .LVU4141
 15176 002c 54FA80F4 		uxtab	r4, r4, r0
 15177              	.LVL1815:
3947:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15178              		.loc 1 3947 18 view .LVU4142
 15179 0030 64B2     		sxtb	r4, r4
 15180              	.LVL1816:
3948:Core/Src/bno055.c ****         {
 15181              		.loc 1 3948 9 is_stmt 1 view .LVU4143
3948:Core/Src/bno055.c ****         {
 15182              		.loc 1 3948 12 is_stmt 0 view .LVU4144
 15183 0032 BCB9     		cbnz	r4, .L1096
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15184              		.loc 1 3951 13 is_stmt 1 view .LVU4145
ARM GAS  /tmp/ccO72alg.s 			page 448


3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15185              		.loc 1 3951 46 is_stmt 0 view .LVU4146
 15186 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15187 0038 FFF7FEFF 		bl	__aeabi_i2d
 15188              	.LVL1817:
 15189 003c 0022     		movs	r2, #0
 15190 003e 0B4B     		ldr	r3, .L1099
 15191 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15192              	.LVL1818:
3951:Core/Src/bno055.c ****             *euler_h_f = data_f;
 15193              		.loc 1 3951 20 view .LVU4147
 15194 0044 FFF7FEFF 		bl	__aeabi_d2f
 15195              	.LVL1819:
3952:Core/Src/bno055.c ****         }
 15196              		.loc 1 3952 13 is_stmt 1 view .LVU4148
3952:Core/Src/bno055.c ****         }
 15197              		.loc 1 3952 24 is_stmt 0 view .LVU4149
 15198 0048 2860     		str	r0, [r5]	@ float
 15199              	.LVL1820:
 15200              	.L1094:
3964:Core/Src/bno055.c **** }
 15201              		.loc 1 3964 5 is_stmt 1 view .LVU4150
3965:Core/Src/bno055.c **** 
 15202              		.loc 1 3965 1 is_stmt 0 view .LVU4151
 15203 004a 2046     		mov	r0, r4
 15204 004c 03B0     		add	sp, sp, #12
 15205              	.LCFI495:
 15206              		.cfi_remember_state
 15207              		.cfi_def_cfa_offset 12
 15208              		@ sp needed
 15209 004e 30BD     		pop	{r4, r5, pc}
 15210              	.LVL1821:
 15211              	.L1098:
 15212              	.LCFI496:
 15213              		.cfi_restore_state
3942:Core/Src/bno055.c ****     }
 15214              		.loc 1 3942 9 is_stmt 1 view .LVU4152
3942:Core/Src/bno055.c ****     }
 15215              		.loc 1 3942 21 is_stmt 0 view .LVU4153
 15216 0050 0120     		movs	r0, #1
 15217 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15218              	.LVL1822:
3942:Core/Src/bno055.c ****     }
 15219              		.loc 1 3942 18 view .LVU4154
 15220 0056 54FA80F4 		uxtab	r4, r4, r0
 15221              	.LVL1823:
3942:Core/Src/bno055.c ****     }
 15222              		.loc 1 3942 18 view .LVU4155
 15223 005a 64B2     		sxtb	r4, r4
 15224              	.LVL1824:
3942:Core/Src/bno055.c ****     }
 15225              		.loc 1 3942 18 view .LVU4156
 15226 005c E1E7     		b	.L1093
 15227              	.L1095:
3961:Core/Src/bno055.c ****     }
 15228              		.loc 1 3961 18 view .LVU4157
 15229 005e 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccO72alg.s 			page 449


 15230              	.LVL1825:
3961:Core/Src/bno055.c ****     }
 15231              		.loc 1 3961 18 view .LVU4158
 15232 0062 F2E7     		b	.L1094
 15233              	.LVL1826:
 15234              	.L1096:
3956:Core/Src/bno055.c ****         }
 15235              		.loc 1 3956 22 view .LVU4159
 15236 0064 4FF0FF34 		mov	r4, #-1
 15237              	.LVL1827:
3956:Core/Src/bno055.c ****         }
 15238              		.loc 1 3956 22 view .LVU4160
 15239 0068 EFE7     		b	.L1094
 15240              	.L1100:
 15241 006a 00BF     		.align	2
 15242              	.L1099:
 15243 006c 00208C40 		.word	1082925056
 15244              		.cfi_endproc
 15245              	.LFE62:
 15247              		.section	.text.bno055_convert_float_euler_r_deg,"ax",%progbits
 15248              		.align	1
 15249              		.global	bno055_convert_float_euler_r_deg
 15250              		.syntax unified
 15251              		.thumb
 15252              		.thumb_func
 15254              	bno055_convert_float_euler_r_deg:
 15255              	.LVL1828:
 15256              	.LFB63:
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15257              		.loc 1 3979 1 is_stmt 1 view -0
 15258              		.cfi_startproc
 15259              		@ args = 0, pretend = 0, frame = 8
 15260              		@ frame_needed = 0, uses_anonymous_args = 0
3979:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15261              		.loc 1 3979 1 is_stmt 0 view .LVU4162
 15262 0000 30B5     		push	{r4, r5, lr}
 15263              	.LCFI497:
 15264              		.cfi_def_cfa_offset 12
 15265              		.cfi_offset 4, -12
 15266              		.cfi_offset 5, -8
 15267              		.cfi_offset 14, -4
 15268 0002 83B0     		sub	sp, sp, #12
 15269              	.LCFI498:
 15270              		.cfi_def_cfa_offset 24
 15271 0004 0546     		mov	r5, r0
3980:Core/Src/bno055.c ****     s16 reg_euler_r = BNO055_INIT_VALUE;
 15272              		.loc 1 3980 5 is_stmt 1 view .LVU4163
 15273              	.LVL1829:
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15274              		.loc 1 3981 5 view .LVU4164
3981:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15275              		.loc 1 3981 9 is_stmt 0 view .LVU4165
 15276 0006 0023     		movs	r3, #0
 15277 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
3982:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15278              		.loc 1 3982 5 is_stmt 1 view .LVU4166
 15279              	.LVL1830:
ARM GAS  /tmp/ccO72alg.s 			page 450


3983:Core/Src/bno055.c **** 
 15280              		.loc 1 3983 5 view .LVU4167
3983:Core/Src/bno055.c **** 
 15281              		.loc 1 3983 8 is_stmt 0 view .LVU4168
 15282 000c 8DF80530 		strb	r3, [sp, #5]
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15283              		.loc 1 3987 5 is_stmt 1 view .LVU4169
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15284              		.loc 1 3987 16 is_stmt 0 view .LVU4170
 15285 0010 0DF10500 		add	r0, sp, #5
 15286              	.LVL1831:
3987:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15287              		.loc 1 3987 16 view .LVU4171
 15288 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15289              	.LVL1832:
 15290 0018 0446     		mov	r4, r0
 15291              	.LVL1833:
3988:Core/Src/bno055.c ****     {
 15292              		.loc 1 3988 5 is_stmt 1 view .LVU4172
3988:Core/Src/bno055.c ****     {
 15293              		.loc 1 3988 23 is_stmt 0 view .LVU4173
 15294 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
3988:Core/Src/bno055.c ****     {
 15295              		.loc 1 3988 8 view .LVU4174
 15296 001e B3B9     		cbnz	r3, .L1107
 15297              	.L1102:
3992:Core/Src/bno055.c ****     {
 15298              		.loc 1 3992 5 is_stmt 1 view .LVU4175
3992:Core/Src/bno055.c ****     {
 15299              		.loc 1 3992 8 is_stmt 0 view .LVU4176
 15300 0020 E4B9     		cbnz	r4, .L1104
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15301              		.loc 1 3995 9 is_stmt 1 view .LVU4177
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15302              		.loc 1 3995 21 is_stmt 0 view .LVU4178
 15303 0022 0DF10600 		add	r0, sp, #6
 15304 0026 FFF7FEFF 		bl	bno055_read_euler_r
 15305              	.LVL1834:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15306              		.loc 1 3995 18 view .LVU4179
 15307 002a 54FA80F4 		uxtab	r4, r4, r0
 15308              	.LVL1835:
3995:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15309              		.loc 1 3995 18 view .LVU4180
 15310 002e 64B2     		sxtb	r4, r4
 15311              	.LVL1836:
3996:Core/Src/bno055.c ****         {
 15312              		.loc 1 3996 9 is_stmt 1 view .LVU4181
3996:Core/Src/bno055.c ****         {
 15313              		.loc 1 3996 12 is_stmt 0 view .LVU4182
 15314 0030 BCB9     		cbnz	r4, .L1105
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15315              		.loc 1 3999 13 is_stmt 1 view .LVU4183
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15316              		.loc 1 3999 42 is_stmt 0 view .LVU4184
 15317 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15318 0036 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccO72alg.s 			page 451


 15319              	.LVL1837:
 15320 003a 0022     		movs	r2, #0
 15321 003c 0A4B     		ldr	r3, .L1108
 15322 003e FFF7FEFF 		bl	__aeabi_dmul
 15323              	.LVL1838:
3999:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15324              		.loc 1 3999 20 view .LVU4185
 15325 0042 FFF7FEFF 		bl	__aeabi_d2f
 15326              	.LVL1839:
4000:Core/Src/bno055.c ****         }
 15327              		.loc 1 4000 13 is_stmt 1 view .LVU4186
4000:Core/Src/bno055.c ****         }
 15328              		.loc 1 4000 24 is_stmt 0 view .LVU4187
 15329 0046 2860     		str	r0, [r5]	@ float
 15330              	.LVL1840:
 15331              	.L1103:
4012:Core/Src/bno055.c **** }
 15332              		.loc 1 4012 5 is_stmt 1 view .LVU4188
4013:Core/Src/bno055.c **** 
 15333              		.loc 1 4013 1 is_stmt 0 view .LVU4189
 15334 0048 2046     		mov	r0, r4
 15335 004a 03B0     		add	sp, sp, #12
 15336              	.LCFI499:
 15337              		.cfi_remember_state
 15338              		.cfi_def_cfa_offset 12
 15339              		@ sp needed
 15340 004c 30BD     		pop	{r4, r5, pc}
 15341              	.LVL1841:
 15342              	.L1107:
 15343              	.LCFI500:
 15344              		.cfi_restore_state
3990:Core/Src/bno055.c ****     }
 15345              		.loc 1 3990 9 is_stmt 1 view .LVU4190
3990:Core/Src/bno055.c ****     }
 15346              		.loc 1 3990 21 is_stmt 0 view .LVU4191
 15347 004e 0020     		movs	r0, #0
 15348 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15349              	.LVL1842:
3990:Core/Src/bno055.c ****     }
 15350              		.loc 1 3990 18 view .LVU4192
 15351 0054 54FA80F4 		uxtab	r4, r4, r0
 15352              	.LVL1843:
3990:Core/Src/bno055.c ****     }
 15353              		.loc 1 3990 18 view .LVU4193
 15354 0058 64B2     		sxtb	r4, r4
 15355              	.LVL1844:
3990:Core/Src/bno055.c ****     }
 15356              		.loc 1 3990 18 view .LVU4194
 15357 005a E1E7     		b	.L1102
 15358              	.L1104:
4009:Core/Src/bno055.c ****     }
 15359              		.loc 1 4009 18 view .LVU4195
 15360 005c 4FF0FF34 		mov	r4, #-1
 15361              	.LVL1845:
4009:Core/Src/bno055.c ****     }
 15362              		.loc 1 4009 18 view .LVU4196
 15363 0060 F2E7     		b	.L1103
ARM GAS  /tmp/ccO72alg.s 			page 452


 15364              	.LVL1846:
 15365              	.L1105:
4004:Core/Src/bno055.c ****         }
 15366              		.loc 1 4004 22 view .LVU4197
 15367 0062 4FF0FF34 		mov	r4, #-1
 15368              	.LVL1847:
4004:Core/Src/bno055.c ****         }
 15369              		.loc 1 4004 22 view .LVU4198
 15370 0066 EFE7     		b	.L1103
 15371              	.L1109:
 15372              		.align	2
 15373              	.L1108:
 15374 0068 0000B03F 		.word	1068498944
 15375              		.cfi_endproc
 15376              	.LFE63:
 15378              		.section	.text.bno055_convert_float_euler_r_rad,"ax",%progbits
 15379              		.align	1
 15380              		.global	bno055_convert_float_euler_r_rad
 15381              		.syntax unified
 15382              		.thumb
 15383              		.thumb_func
 15385              	bno055_convert_float_euler_r_rad:
 15386              	.LVL1848:
 15387              	.LFB64:
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15388              		.loc 1 4027 1 is_stmt 1 view -0
 15389              		.cfi_startproc
 15390              		@ args = 0, pretend = 0, frame = 8
 15391              		@ frame_needed = 0, uses_anonymous_args = 0
4027:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15392              		.loc 1 4027 1 is_stmt 0 view .LVU4200
 15393 0000 30B5     		push	{r4, r5, lr}
 15394              	.LCFI501:
 15395              		.cfi_def_cfa_offset 12
 15396              		.cfi_offset 4, -12
 15397              		.cfi_offset 5, -8
 15398              		.cfi_offset 14, -4
 15399 0002 83B0     		sub	sp, sp, #12
 15400              	.LCFI502:
 15401              		.cfi_def_cfa_offset 24
 15402 0004 0546     		mov	r5, r0
4028:Core/Src/bno055.c ****     s16 reg_euler_r_f = BNO055_INIT_VALUE;
 15403              		.loc 1 4028 5 is_stmt 1 view .LVU4201
 15404              	.LVL1849:
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15405              		.loc 1 4029 5 view .LVU4202
4029:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15406              		.loc 1 4029 9 is_stmt 0 view .LVU4203
 15407 0006 0023     		movs	r3, #0
 15408 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4030:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15409              		.loc 1 4030 5 is_stmt 1 view .LVU4204
 15410              	.LVL1850:
4031:Core/Src/bno055.c **** 
 15411              		.loc 1 4031 5 view .LVU4205
4031:Core/Src/bno055.c **** 
 15412              		.loc 1 4031 8 is_stmt 0 view .LVU4206
ARM GAS  /tmp/ccO72alg.s 			page 453


 15413 000c 8DF80530 		strb	r3, [sp, #5]
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15414              		.loc 1 4035 5 is_stmt 1 view .LVU4207
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15415              		.loc 1 4035 16 is_stmt 0 view .LVU4208
 15416 0010 0DF10500 		add	r0, sp, #5
 15417              	.LVL1851:
4035:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15418              		.loc 1 4035 16 view .LVU4209
 15419 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15420              	.LVL1852:
 15421 0018 0446     		mov	r4, r0
 15422              	.LVL1853:
4036:Core/Src/bno055.c ****     {
 15423              		.loc 1 4036 5 is_stmt 1 view .LVU4210
4036:Core/Src/bno055.c ****     {
 15424              		.loc 1 4036 23 is_stmt 0 view .LVU4211
 15425 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4036:Core/Src/bno055.c ****     {
 15426              		.loc 1 4036 8 view .LVU4212
 15427 001e 012B     		cmp	r3, #1
 15428 0020 16D1     		bne	.L1116
 15429              	.L1111:
4040:Core/Src/bno055.c ****     {
 15430              		.loc 1 4040 5 is_stmt 1 view .LVU4213
4040:Core/Src/bno055.c ****     {
 15431              		.loc 1 4040 8 is_stmt 0 view .LVU4214
 15432 0022 E4B9     		cbnz	r4, .L1113
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15433              		.loc 1 4043 9 is_stmt 1 view .LVU4215
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15434              		.loc 1 4043 21 is_stmt 0 view .LVU4216
 15435 0024 0DF10600 		add	r0, sp, #6
 15436 0028 FFF7FEFF 		bl	bno055_read_euler_r
 15437              	.LVL1854:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15438              		.loc 1 4043 18 view .LVU4217
 15439 002c 54FA80F4 		uxtab	r4, r4, r0
 15440              	.LVL1855:
4043:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15441              		.loc 1 4043 18 view .LVU4218
 15442 0030 64B2     		sxtb	r4, r4
 15443              	.LVL1856:
4044:Core/Src/bno055.c ****         {
 15444              		.loc 1 4044 9 is_stmt 1 view .LVU4219
4044:Core/Src/bno055.c ****         {
 15445              		.loc 1 4044 12 is_stmt 0 view .LVU4220
 15446 0032 BCB9     		cbnz	r4, .L1114
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15447              		.loc 1 4047 13 is_stmt 1 view .LVU4221
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15448              		.loc 1 4047 44 is_stmt 0 view .LVU4222
 15449 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15450 0038 FFF7FEFF 		bl	__aeabi_i2d
 15451              	.LVL1857:
 15452 003c 0022     		movs	r2, #0
 15453 003e 0B4B     		ldr	r3, .L1117
ARM GAS  /tmp/ccO72alg.s 			page 454


 15454 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15455              	.LVL1858:
4047:Core/Src/bno055.c ****             *euler_r_f = data_f;
 15456              		.loc 1 4047 20 view .LVU4223
 15457 0044 FFF7FEFF 		bl	__aeabi_d2f
 15458              	.LVL1859:
4048:Core/Src/bno055.c ****         }
 15459              		.loc 1 4048 13 is_stmt 1 view .LVU4224
4048:Core/Src/bno055.c ****         }
 15460              		.loc 1 4048 24 is_stmt 0 view .LVU4225
 15461 0048 2860     		str	r0, [r5]	@ float
 15462              	.LVL1860:
 15463              	.L1112:
4060:Core/Src/bno055.c **** }
 15464              		.loc 1 4060 5 is_stmt 1 view .LVU4226
4061:Core/Src/bno055.c **** 
 15465              		.loc 1 4061 1 is_stmt 0 view .LVU4227
 15466 004a 2046     		mov	r0, r4
 15467 004c 03B0     		add	sp, sp, #12
 15468              	.LCFI503:
 15469              		.cfi_remember_state
 15470              		.cfi_def_cfa_offset 12
 15471              		@ sp needed
 15472 004e 30BD     		pop	{r4, r5, pc}
 15473              	.LVL1861:
 15474              	.L1116:
 15475              	.LCFI504:
 15476              		.cfi_restore_state
4038:Core/Src/bno055.c ****     }
 15477              		.loc 1 4038 9 is_stmt 1 view .LVU4228
4038:Core/Src/bno055.c ****     }
 15478              		.loc 1 4038 21 is_stmt 0 view .LVU4229
 15479 0050 0120     		movs	r0, #1
 15480 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15481              	.LVL1862:
4038:Core/Src/bno055.c ****     }
 15482              		.loc 1 4038 18 view .LVU4230
 15483 0056 54FA80F4 		uxtab	r4, r4, r0
 15484              	.LVL1863:
4038:Core/Src/bno055.c ****     }
 15485              		.loc 1 4038 18 view .LVU4231
 15486 005a 64B2     		sxtb	r4, r4
 15487              	.LVL1864:
4038:Core/Src/bno055.c ****     }
 15488              		.loc 1 4038 18 view .LVU4232
 15489 005c E1E7     		b	.L1111
 15490              	.L1113:
4057:Core/Src/bno055.c ****     }
 15491              		.loc 1 4057 18 view .LVU4233
 15492 005e 4FF0FF34 		mov	r4, #-1
 15493              	.LVL1865:
4057:Core/Src/bno055.c ****     }
 15494              		.loc 1 4057 18 view .LVU4234
 15495 0062 F2E7     		b	.L1112
 15496              	.LVL1866:
 15497              	.L1114:
4052:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 455


 15498              		.loc 1 4052 22 view .LVU4235
 15499 0064 4FF0FF34 		mov	r4, #-1
 15500              	.LVL1867:
4052:Core/Src/bno055.c ****         }
 15501              		.loc 1 4052 22 view .LVU4236
 15502 0068 EFE7     		b	.L1112
 15503              	.L1118:
 15504 006a 00BF     		.align	2
 15505              	.L1117:
 15506 006c 00208C40 		.word	1082925056
 15507              		.cfi_endproc
 15508              	.LFE64:
 15510              		.section	.text.bno055_convert_float_euler_p_deg,"ax",%progbits
 15511              		.align	1
 15512              		.global	bno055_convert_float_euler_p_deg
 15513              		.syntax unified
 15514              		.thumb
 15515              		.thumb_func
 15517              	bno055_convert_float_euler_p_deg:
 15518              	.LVL1868:
 15519              	.LFB65:
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15520              		.loc 1 4075 1 is_stmt 1 view -0
 15521              		.cfi_startproc
 15522              		@ args = 0, pretend = 0, frame = 8
 15523              		@ frame_needed = 0, uses_anonymous_args = 0
4075:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15524              		.loc 1 4075 1 is_stmt 0 view .LVU4238
 15525 0000 30B5     		push	{r4, r5, lr}
 15526              	.LCFI505:
 15527              		.cfi_def_cfa_offset 12
 15528              		.cfi_offset 4, -12
 15529              		.cfi_offset 5, -8
 15530              		.cfi_offset 14, -4
 15531 0002 83B0     		sub	sp, sp, #12
 15532              	.LCFI506:
 15533              		.cfi_def_cfa_offset 24
 15534 0004 0546     		mov	r5, r0
4076:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15535              		.loc 1 4076 5 is_stmt 1 view .LVU4239
 15536              	.LVL1869:
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15537              		.loc 1 4077 5 view .LVU4240
4077:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15538              		.loc 1 4077 9 is_stmt 0 view .LVU4241
 15539 0006 0023     		movs	r3, #0
 15540 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4078:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15541              		.loc 1 4078 5 is_stmt 1 view .LVU4242
 15542              	.LVL1870:
4079:Core/Src/bno055.c **** 
 15543              		.loc 1 4079 5 view .LVU4243
4079:Core/Src/bno055.c **** 
 15544              		.loc 1 4079 8 is_stmt 0 view .LVU4244
 15545 000c 8DF80530 		strb	r3, [sp, #5]
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15546              		.loc 1 4083 5 is_stmt 1 view .LVU4245
ARM GAS  /tmp/ccO72alg.s 			page 456


4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15547              		.loc 1 4083 16 is_stmt 0 view .LVU4246
 15548 0010 0DF10500 		add	r0, sp, #5
 15549              	.LVL1871:
4083:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15550              		.loc 1 4083 16 view .LVU4247
 15551 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15552              	.LVL1872:
 15553 0018 0446     		mov	r4, r0
 15554              	.LVL1873:
4084:Core/Src/bno055.c ****     {
 15555              		.loc 1 4084 5 is_stmt 1 view .LVU4248
4084:Core/Src/bno055.c ****     {
 15556              		.loc 1 4084 23 is_stmt 0 view .LVU4249
 15557 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4084:Core/Src/bno055.c ****     {
 15558              		.loc 1 4084 8 view .LVU4250
 15559 001e B3B9     		cbnz	r3, .L1125
 15560              	.L1120:
4088:Core/Src/bno055.c ****     {
 15561              		.loc 1 4088 5 is_stmt 1 view .LVU4251
4088:Core/Src/bno055.c ****     {
 15562              		.loc 1 4088 8 is_stmt 0 view .LVU4252
 15563 0020 E4B9     		cbnz	r4, .L1122
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15564              		.loc 1 4091 9 is_stmt 1 view .LVU4253
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15565              		.loc 1 4091 21 is_stmt 0 view .LVU4254
 15566 0022 0DF10600 		add	r0, sp, #6
 15567 0026 FFF7FEFF 		bl	bno055_read_euler_p
 15568              	.LVL1874:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15569              		.loc 1 4091 18 view .LVU4255
 15570 002a 54FA80F4 		uxtab	r4, r4, r0
 15571              	.LVL1875:
4091:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15572              		.loc 1 4091 18 view .LVU4256
 15573 002e 64B2     		sxtb	r4, r4
 15574              	.LVL1876:
4092:Core/Src/bno055.c ****         {
 15575              		.loc 1 4092 9 is_stmt 1 view .LVU4257
4092:Core/Src/bno055.c ****         {
 15576              		.loc 1 4092 12 is_stmt 0 view .LVU4258
 15577 0030 BCB9     		cbnz	r4, .L1123
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15578              		.loc 1 4095 13 is_stmt 1 view .LVU4259
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15579              		.loc 1 4095 44 is_stmt 0 view .LVU4260
 15580 0032 BDF90600 		ldrsh	r0, [sp, #6]
 15581 0036 FFF7FEFF 		bl	__aeabi_i2d
 15582              	.LVL1877:
 15583 003a 0022     		movs	r2, #0
 15584 003c 0A4B     		ldr	r3, .L1126
 15585 003e FFF7FEFF 		bl	__aeabi_dmul
 15586              	.LVL1878:
4095:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15587              		.loc 1 4095 20 view .LVU4261
ARM GAS  /tmp/ccO72alg.s 			page 457


 15588 0042 FFF7FEFF 		bl	__aeabi_d2f
 15589              	.LVL1879:
4096:Core/Src/bno055.c ****         }
 15590              		.loc 1 4096 13 is_stmt 1 view .LVU4262
4096:Core/Src/bno055.c ****         }
 15591              		.loc 1 4096 24 is_stmt 0 view .LVU4263
 15592 0046 2860     		str	r0, [r5]	@ float
 15593              	.LVL1880:
 15594              	.L1121:
4108:Core/Src/bno055.c **** }
 15595              		.loc 1 4108 5 is_stmt 1 view .LVU4264
4109:Core/Src/bno055.c **** 
 15596              		.loc 1 4109 1 is_stmt 0 view .LVU4265
 15597 0048 2046     		mov	r0, r4
 15598 004a 03B0     		add	sp, sp, #12
 15599              	.LCFI507:
 15600              		.cfi_remember_state
 15601              		.cfi_def_cfa_offset 12
 15602              		@ sp needed
 15603 004c 30BD     		pop	{r4, r5, pc}
 15604              	.LVL1881:
 15605              	.L1125:
 15606              	.LCFI508:
 15607              		.cfi_restore_state
4086:Core/Src/bno055.c ****     }
 15608              		.loc 1 4086 9 is_stmt 1 view .LVU4266
4086:Core/Src/bno055.c ****     }
 15609              		.loc 1 4086 21 is_stmt 0 view .LVU4267
 15610 004e 0020     		movs	r0, #0
 15611 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 15612              	.LVL1882:
4086:Core/Src/bno055.c ****     }
 15613              		.loc 1 4086 18 view .LVU4268
 15614 0054 54FA80F4 		uxtab	r4, r4, r0
 15615              	.LVL1883:
4086:Core/Src/bno055.c ****     }
 15616              		.loc 1 4086 18 view .LVU4269
 15617 0058 64B2     		sxtb	r4, r4
 15618              	.LVL1884:
4086:Core/Src/bno055.c ****     }
 15619              		.loc 1 4086 18 view .LVU4270
 15620 005a E1E7     		b	.L1120
 15621              	.L1122:
4105:Core/Src/bno055.c ****     }
 15622              		.loc 1 4105 18 view .LVU4271
 15623 005c 4FF0FF34 		mov	r4, #-1
 15624              	.LVL1885:
4105:Core/Src/bno055.c ****     }
 15625              		.loc 1 4105 18 view .LVU4272
 15626 0060 F2E7     		b	.L1121
 15627              	.LVL1886:
 15628              	.L1123:
4100:Core/Src/bno055.c ****         }
 15629              		.loc 1 4100 22 view .LVU4273
 15630 0062 4FF0FF34 		mov	r4, #-1
 15631              	.LVL1887:
4100:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 458


 15632              		.loc 1 4100 22 view .LVU4274
 15633 0066 EFE7     		b	.L1121
 15634              	.L1127:
 15635              		.align	2
 15636              	.L1126:
 15637 0068 0000B03F 		.word	1068498944
 15638              		.cfi_endproc
 15639              	.LFE65:
 15641              		.section	.text.bno055_convert_float_euler_p_rad,"ax",%progbits
 15642              		.align	1
 15643              		.global	bno055_convert_float_euler_p_rad
 15644              		.syntax unified
 15645              		.thumb
 15646              		.thumb_func
 15648              	bno055_convert_float_euler_p_rad:
 15649              	.LVL1888:
 15650              	.LFB66:
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15651              		.loc 1 4124 1 is_stmt 1 view -0
 15652              		.cfi_startproc
 15653              		@ args = 0, pretend = 0, frame = 8
 15654              		@ frame_needed = 0, uses_anonymous_args = 0
4124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 15655              		.loc 1 4124 1 is_stmt 0 view .LVU4276
 15656 0000 30B5     		push	{r4, r5, lr}
 15657              	.LCFI509:
 15658              		.cfi_def_cfa_offset 12
 15659              		.cfi_offset 4, -12
 15660              		.cfi_offset 5, -8
 15661              		.cfi_offset 14, -4
 15662 0002 83B0     		sub	sp, sp, #12
 15663              	.LCFI510:
 15664              		.cfi_def_cfa_offset 24
 15665 0004 0546     		mov	r5, r0
4125:Core/Src/bno055.c ****     s16 reg_euler_p_f = BNO055_INIT_VALUE;
 15666              		.loc 1 4125 5 is_stmt 1 view .LVU4277
 15667              	.LVL1889:
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15668              		.loc 1 4126 5 view .LVU4278
4126:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 15669              		.loc 1 4126 9 is_stmt 0 view .LVU4279
 15670 0006 0023     		movs	r3, #0
 15671 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
4127:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15672              		.loc 1 4127 5 is_stmt 1 view .LVU4280
 15673              	.LVL1890:
4128:Core/Src/bno055.c **** 
 15674              		.loc 1 4128 5 view .LVU4281
4128:Core/Src/bno055.c **** 
 15675              		.loc 1 4128 8 is_stmt 0 view .LVU4282
 15676 000c 8DF80530 		strb	r3, [sp, #5]
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15677              		.loc 1 4132 5 is_stmt 1 view .LVU4283
4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15678              		.loc 1 4132 16 is_stmt 0 view .LVU4284
 15679 0010 0DF10500 		add	r0, sp, #5
 15680              	.LVL1891:
ARM GAS  /tmp/ccO72alg.s 			page 459


4132:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15681              		.loc 1 4132 16 view .LVU4285
 15682 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 15683              	.LVL1892:
 15684 0018 0446     		mov	r4, r0
 15685              	.LVL1893:
4133:Core/Src/bno055.c ****     {
 15686              		.loc 1 4133 5 is_stmt 1 view .LVU4286
4133:Core/Src/bno055.c ****     {
 15687              		.loc 1 4133 23 is_stmt 0 view .LVU4287
 15688 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
4133:Core/Src/bno055.c ****     {
 15689              		.loc 1 4133 8 view .LVU4288
 15690 001e 012B     		cmp	r3, #1
 15691 0020 16D1     		bne	.L1134
 15692              	.L1129:
4137:Core/Src/bno055.c ****     {
 15693              		.loc 1 4137 5 is_stmt 1 view .LVU4289
4137:Core/Src/bno055.c ****     {
 15694              		.loc 1 4137 8 is_stmt 0 view .LVU4290
 15695 0022 E4B9     		cbnz	r4, .L1131
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15696              		.loc 1 4140 9 is_stmt 1 view .LVU4291
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15697              		.loc 1 4140 21 is_stmt 0 view .LVU4292
 15698 0024 0DF10600 		add	r0, sp, #6
 15699 0028 FFF7FEFF 		bl	bno055_read_euler_p
 15700              	.LVL1894:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15701              		.loc 1 4140 18 view .LVU4293
 15702 002c 54FA80F4 		uxtab	r4, r4, r0
 15703              	.LVL1895:
4140:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15704              		.loc 1 4140 18 view .LVU4294
 15705 0030 64B2     		sxtb	r4, r4
 15706              	.LVL1896:
4141:Core/Src/bno055.c ****         {
 15707              		.loc 1 4141 9 is_stmt 1 view .LVU4295
4141:Core/Src/bno055.c ****         {
 15708              		.loc 1 4141 12 is_stmt 0 view .LVU4296
 15709 0032 BCB9     		cbnz	r4, .L1132
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15710              		.loc 1 4144 13 is_stmt 1 view .LVU4297
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15711              		.loc 1 4144 44 is_stmt 0 view .LVU4298
 15712 0034 BDF90600 		ldrsh	r0, [sp, #6]
 15713 0038 FFF7FEFF 		bl	__aeabi_i2d
 15714              	.LVL1897:
 15715 003c 0022     		movs	r2, #0
 15716 003e 0B4B     		ldr	r3, .L1135
 15717 0040 FFF7FEFF 		bl	__aeabi_ddiv
 15718              	.LVL1898:
4144:Core/Src/bno055.c ****             *euler_p_f = data_f;
 15719              		.loc 1 4144 20 view .LVU4299
 15720 0044 FFF7FEFF 		bl	__aeabi_d2f
 15721              	.LVL1899:
4145:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 460


 15722              		.loc 1 4145 13 is_stmt 1 view .LVU4300
4145:Core/Src/bno055.c ****         }
 15723              		.loc 1 4145 24 is_stmt 0 view .LVU4301
 15724 0048 2860     		str	r0, [r5]	@ float
 15725              	.LVL1900:
 15726              	.L1130:
4157:Core/Src/bno055.c **** }
 15727              		.loc 1 4157 5 is_stmt 1 view .LVU4302
4158:Core/Src/bno055.c **** 
 15728              		.loc 1 4158 1 is_stmt 0 view .LVU4303
 15729 004a 2046     		mov	r0, r4
 15730 004c 03B0     		add	sp, sp, #12
 15731              	.LCFI511:
 15732              		.cfi_remember_state
 15733              		.cfi_def_cfa_offset 12
 15734              		@ sp needed
 15735 004e 30BD     		pop	{r4, r5, pc}
 15736              	.LVL1901:
 15737              	.L1134:
 15738              	.LCFI512:
 15739              		.cfi_restore_state
4135:Core/Src/bno055.c ****     }
 15740              		.loc 1 4135 9 is_stmt 1 view .LVU4304
4135:Core/Src/bno055.c ****     }
 15741              		.loc 1 4135 21 is_stmt 0 view .LVU4305
 15742 0050 0120     		movs	r0, #1
 15743 0052 FFF7FEFF 		bl	bno055_set_euler_unit
 15744              	.LVL1902:
4135:Core/Src/bno055.c ****     }
 15745              		.loc 1 4135 18 view .LVU4306
 15746 0056 54FA80F4 		uxtab	r4, r4, r0
 15747              	.LVL1903:
4135:Core/Src/bno055.c ****     }
 15748              		.loc 1 4135 18 view .LVU4307
 15749 005a 64B2     		sxtb	r4, r4
 15750              	.LVL1904:
4135:Core/Src/bno055.c ****     }
 15751              		.loc 1 4135 18 view .LVU4308
 15752 005c E1E7     		b	.L1129
 15753              	.L1131:
4154:Core/Src/bno055.c ****     }
 15754              		.loc 1 4154 18 view .LVU4309
 15755 005e 4FF0FF34 		mov	r4, #-1
 15756              	.LVL1905:
4154:Core/Src/bno055.c ****     }
 15757              		.loc 1 4154 18 view .LVU4310
 15758 0062 F2E7     		b	.L1130
 15759              	.LVL1906:
 15760              	.L1132:
4149:Core/Src/bno055.c ****         }
 15761              		.loc 1 4149 22 view .LVU4311
 15762 0064 4FF0FF34 		mov	r4, #-1
 15763              	.LVL1907:
4149:Core/Src/bno055.c ****         }
 15764              		.loc 1 4149 22 view .LVU4312
 15765 0068 EFE7     		b	.L1130
 15766              	.L1136:
ARM GAS  /tmp/ccO72alg.s 			page 461


 15767 006a 00BF     		.align	2
 15768              	.L1135:
 15769 006c 00208C40 		.word	1082925056
 15770              		.cfi_endproc
 15771              	.LFE66:
 15773              		.section	.text.bno055_convert_float_euler_hpr_deg,"ax",%progbits
 15774              		.align	1
 15775              		.global	bno055_convert_float_euler_hpr_deg
 15776              		.syntax unified
 15777              		.thumb
 15778              		.thumb_func
 15780              	bno055_convert_float_euler_hpr_deg:
 15781              	.LVL1908:
 15782              	.LFB67:
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15783              		.loc 1 4179 1 is_stmt 1 view -0
 15784              		.cfi_startproc
 15785              		@ args = 0, pretend = 0, frame = 16
 15786              		@ frame_needed = 0, uses_anonymous_args = 0
4179:Core/Src/bno055.c ****     /* Variable used to return value of
 15787              		.loc 1 4179 1 is_stmt 0 view .LVU4314
 15788 0000 30B5     		push	{r4, r5, lr}
 15789              	.LCFI513:
 15790              		.cfi_def_cfa_offset 12
 15791              		.cfi_offset 4, -12
 15792              		.cfi_offset 5, -8
 15793              		.cfi_offset 14, -4
 15794 0002 85B0     		sub	sp, sp, #20
 15795              	.LCFI514:
 15796              		.cfi_def_cfa_offset 32
 15797 0004 0546     		mov	r5, r0
4182:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15798              		.loc 1 4182 5 is_stmt 1 view .LVU4315
 15799              	.LVL1909:
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15800              		.loc 1 4183 5 view .LVU4316
4183:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15801              		.loc 1 4183 27 is_stmt 0 view .LVU4317
 15802 0006 0023     		movs	r3, #0
 15803 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15804 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 15805 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4184:Core/Src/bno055.c **** 
 15806              		.loc 1 4184 5 is_stmt 1 view .LVU4318
4184:Core/Src/bno055.c **** 
 15807              		.loc 1 4184 8 is_stmt 0 view .LVU4319
 15808 0014 8DF80730 		strb	r3, [sp, #7]
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15809              		.loc 1 4188 5 is_stmt 1 view .LVU4320
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15810              		.loc 1 4188 16 is_stmt 0 view .LVU4321
 15811 0018 0DF10700 		add	r0, sp, #7
 15812              	.LVL1910:
4188:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 15813              		.loc 1 4188 16 view .LVU4322
 15814 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15815              	.LVL1911:
ARM GAS  /tmp/ccO72alg.s 			page 462


 15816 0020 0446     		mov	r4, r0
 15817              	.LVL1912:
4189:Core/Src/bno055.c ****     {
 15818              		.loc 1 4189 5 is_stmt 1 view .LVU4323
4189:Core/Src/bno055.c ****     {
 15819              		.loc 1 4189 23 is_stmt 0 view .LVU4324
 15820 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4189:Core/Src/bno055.c ****     {
 15821              		.loc 1 4189 8 view .LVU4325
 15822 0026 5BBB     		cbnz	r3, .L1143
 15823              	.L1138:
4193:Core/Src/bno055.c ****     {
 15824              		.loc 1 4193 5 is_stmt 1 view .LVU4326
4193:Core/Src/bno055.c ****     {
 15825              		.loc 1 4193 8 is_stmt 0 view .LVU4327
 15826 0028 8CBB     		cbnz	r4, .L1140
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15827              		.loc 1 4196 9 is_stmt 1 view .LVU4328
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15828              		.loc 1 4196 21 is_stmt 0 view .LVU4329
 15829 002a 02A8     		add	r0, sp, #8
 15830 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 15831              	.LVL1913:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15832              		.loc 1 4196 18 view .LVU4330
 15833 0030 54FA80F4 		uxtab	r4, r4, r0
 15834              	.LVL1914:
4196:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15835              		.loc 1 4196 18 view .LVU4331
 15836 0034 64B2     		sxtb	r4, r4
 15837              	.LVL1915:
4197:Core/Src/bno055.c ****         {
 15838              		.loc 1 4197 9 is_stmt 1 view .LVU4332
4197:Core/Src/bno055.c ****         {
 15839              		.loc 1 4197 12 is_stmt 0 view .LVU4333
 15840 0036 6CBB     		cbnz	r4, .L1141
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15841              		.loc 1 4200 13 is_stmt 1 view .LVU4334
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15842              		.loc 1 4200 48 is_stmt 0 view .LVU4335
 15843 0038 BDF90800 		ldrsh	r0, [sp, #8]
 15844 003c FFF7FEFF 		bl	__aeabi_i2d
 15845              	.LVL1916:
 15846 0040 0022     		movs	r2, #0
 15847 0042 164B     		ldr	r3, .L1144
 15848 0044 FFF7FEFF 		bl	__aeabi_dmul
 15849              	.LVL1917:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15850              		.loc 1 4200 28 view .LVU4336
 15851 0048 FFF7FEFF 		bl	__aeabi_d2f
 15852              	.LVL1918:
4200:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_DEG);
 15853              		.loc 1 4200 26 view .LVU4337
 15854 004c 2860     		str	r0, [r5]	@ float
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15855              		.loc 1 4201 13 is_stmt 1 view .LVU4338
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
ARM GAS  /tmp/ccO72alg.s 			page 463


 15856              		.loc 1 4201 48 is_stmt 0 view .LVU4339
 15857 004e BDF90C00 		ldrsh	r0, [sp, #12]
 15858 0052 FFF7FEFF 		bl	__aeabi_i2d
 15859              	.LVL1919:
 15860 0056 0022     		movs	r2, #0
 15861 0058 104B     		ldr	r3, .L1144
 15862 005a FFF7FEFF 		bl	__aeabi_dmul
 15863              	.LVL1920:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15864              		.loc 1 4201 28 view .LVU4340
 15865 005e FFF7FEFF 		bl	__aeabi_d2f
 15866              	.LVL1921:
4201:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_DEG);
 15867              		.loc 1 4201 26 view .LVU4341
 15868 0062 A860     		str	r0, [r5, #8]	@ float
4202:Core/Src/bno055.c ****         }
 15869              		.loc 1 4202 13 is_stmt 1 view .LVU4342
4202:Core/Src/bno055.c ****         }
 15870              		.loc 1 4202 48 is_stmt 0 view .LVU4343
 15871 0064 BDF90A00 		ldrsh	r0, [sp, #10]
 15872 0068 FFF7FEFF 		bl	__aeabi_i2d
 15873              	.LVL1922:
 15874 006c 0022     		movs	r2, #0
 15875 006e 0B4B     		ldr	r3, .L1144
 15876 0070 FFF7FEFF 		bl	__aeabi_dmul
 15877              	.LVL1923:
4202:Core/Src/bno055.c ****         }
 15878              		.loc 1 4202 28 view .LVU4344
 15879 0074 FFF7FEFF 		bl	__aeabi_d2f
 15880              	.LVL1924:
4202:Core/Src/bno055.c ****         }
 15881              		.loc 1 4202 26 view .LVU4345
 15882 0078 6860     		str	r0, [r5, #4]	@ float
 15883              	.LVL1925:
 15884              	.L1139:
4214:Core/Src/bno055.c **** }
 15885              		.loc 1 4214 5 is_stmt 1 view .LVU4346
4215:Core/Src/bno055.c **** 
 15886              		.loc 1 4215 1 is_stmt 0 view .LVU4347
 15887 007a 2046     		mov	r0, r4
 15888 007c 05B0     		add	sp, sp, #20
 15889              	.LCFI515:
 15890              		.cfi_remember_state
 15891              		.cfi_def_cfa_offset 12
 15892              		@ sp needed
 15893 007e 30BD     		pop	{r4, r5, pc}
 15894              	.LVL1926:
 15895              	.L1143:
 15896              	.LCFI516:
 15897              		.cfi_restore_state
4191:Core/Src/bno055.c ****     }
 15898              		.loc 1 4191 9 is_stmt 1 view .LVU4348
4191:Core/Src/bno055.c ****     }
 15899              		.loc 1 4191 21 is_stmt 0 view .LVU4349
 15900 0080 0020     		movs	r0, #0
 15901 0082 FFF7FEFF 		bl	bno055_set_euler_unit
 15902              	.LVL1927:
ARM GAS  /tmp/ccO72alg.s 			page 464


4191:Core/Src/bno055.c ****     }
 15903              		.loc 1 4191 18 view .LVU4350
 15904 0086 54FA80F4 		uxtab	r4, r4, r0
 15905              	.LVL1928:
4191:Core/Src/bno055.c ****     }
 15906              		.loc 1 4191 18 view .LVU4351
 15907 008a 64B2     		sxtb	r4, r4
 15908              	.LVL1929:
4191:Core/Src/bno055.c ****     }
 15909              		.loc 1 4191 18 view .LVU4352
 15910 008c CCE7     		b	.L1138
 15911              	.L1140:
4211:Core/Src/bno055.c ****     }
 15912              		.loc 1 4211 18 view .LVU4353
 15913 008e 4FF0FF34 		mov	r4, #-1
 15914              	.LVL1930:
4211:Core/Src/bno055.c ****     }
 15915              		.loc 1 4211 18 view .LVU4354
 15916 0092 F2E7     		b	.L1139
 15917              	.LVL1931:
 15918              	.L1141:
4206:Core/Src/bno055.c ****         }
 15919              		.loc 1 4206 22 view .LVU4355
 15920 0094 4FF0FF34 		mov	r4, #-1
 15921              	.LVL1932:
4206:Core/Src/bno055.c ****         }
 15922              		.loc 1 4206 22 view .LVU4356
 15923 0098 EFE7     		b	.L1139
 15924              	.L1145:
 15925 009a 00BF     		.align	2
 15926              	.L1144:
 15927 009c 0000B03F 		.word	1068498944
 15928              		.cfi_endproc
 15929              	.LFE67:
 15931              		.section	.text.bno055_convert_float_euler_hpr_rad,"ax",%progbits
 15932              		.align	1
 15933              		.global	bno055_convert_float_euler_hpr_rad
 15934              		.syntax unified
 15935              		.thumb
 15936              		.thumb_func
 15938              	bno055_convert_float_euler_hpr_rad:
 15939              	.LVL1933:
 15940              	.LFB68:
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 15941              		.loc 1 4236 1 is_stmt 1 view -0
 15942              		.cfi_startproc
 15943              		@ args = 0, pretend = 0, frame = 16
 15944              		@ frame_needed = 0, uses_anonymous_args = 0
4236:Core/Src/bno055.c ****     /* Variable used to return value of
 15945              		.loc 1 4236 1 is_stmt 0 view .LVU4358
 15946 0000 30B5     		push	{r4, r5, lr}
 15947              	.LCFI517:
 15948              		.cfi_def_cfa_offset 12
 15949              		.cfi_offset 4, -12
 15950              		.cfi_offset 5, -8
 15951              		.cfi_offset 14, -4
 15952 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccO72alg.s 			page 465


 15953              	.LCFI518:
 15954              		.cfi_def_cfa_offset 32
 15955 0004 0546     		mov	r5, r0
4239:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 15956              		.loc 1 4239 5 is_stmt 1 view .LVU4359
 15957              	.LVL1934:
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15958              		.loc 1 4240 5 view .LVU4360
4240:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 15959              		.loc 1 4240 27 is_stmt 0 view .LVU4361
 15960 0006 0023     		movs	r3, #0
 15961 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 15962 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 15963 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
4241:Core/Src/bno055.c **** 
 15964              		.loc 1 4241 5 is_stmt 1 view .LVU4362
4241:Core/Src/bno055.c **** 
 15965              		.loc 1 4241 8 is_stmt 0 view .LVU4363
 15966 0014 8DF80730 		strb	r3, [sp, #7]
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15967              		.loc 1 4245 5 is_stmt 1 view .LVU4364
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15968              		.loc 1 4245 16 is_stmt 0 view .LVU4365
 15969 0018 0DF10700 		add	r0, sp, #7
 15970              	.LVL1935:
4245:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 15971              		.loc 1 4245 16 view .LVU4366
 15972 001c FFF7FEFF 		bl	bno055_get_euler_unit
 15973              	.LVL1936:
 15974 0020 0446     		mov	r4, r0
 15975              	.LVL1937:
4246:Core/Src/bno055.c ****     {
 15976              		.loc 1 4246 5 is_stmt 1 view .LVU4367
4246:Core/Src/bno055.c ****     {
 15977              		.loc 1 4246 23 is_stmt 0 view .LVU4368
 15978 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
4246:Core/Src/bno055.c ****     {
 15979              		.loc 1 4246 8 view .LVU4369
 15980 0026 012B     		cmp	r3, #1
 15981 0028 2BD1     		bne	.L1152
 15982              	.L1147:
4250:Core/Src/bno055.c ****     {
 15983              		.loc 1 4250 5 is_stmt 1 view .LVU4370
4250:Core/Src/bno055.c ****     {
 15984              		.loc 1 4250 8 is_stmt 0 view .LVU4371
 15985 002a 8CBB     		cbnz	r4, .L1149
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15986              		.loc 1 4253 9 is_stmt 1 view .LVU4372
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15987              		.loc 1 4253 21 is_stmt 0 view .LVU4373
 15988 002c 02A8     		add	r0, sp, #8
 15989 002e FFF7FEFF 		bl	bno055_read_euler_hrp
 15990              	.LVL1938:
4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15991              		.loc 1 4253 18 view .LVU4374
 15992 0032 54FA80F4 		uxtab	r4, r4, r0
 15993              	.LVL1939:
ARM GAS  /tmp/ccO72alg.s 			page 466


4253:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 15994              		.loc 1 4253 18 view .LVU4375
 15995 0036 64B2     		sxtb	r4, r4
 15996              	.LVL1940:
4254:Core/Src/bno055.c ****         {
 15997              		.loc 1 4254 9 is_stmt 1 view .LVU4376
4254:Core/Src/bno055.c ****         {
 15998              		.loc 1 4254 12 is_stmt 0 view .LVU4377
 15999 0038 6CBB     		cbnz	r4, .L1150
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16000              		.loc 1 4257 13 is_stmt 1 view .LVU4378
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16001              		.loc 1 4257 48 is_stmt 0 view .LVU4379
 16002 003a BDF90800 		ldrsh	r0, [sp, #8]
 16003 003e FFF7FEFF 		bl	__aeabi_i2d
 16004              	.LVL1941:
 16005 0042 0022     		movs	r2, #0
 16006 0044 154B     		ldr	r3, .L1153
 16007 0046 FFF7FEFF 		bl	__aeabi_ddiv
 16008              	.LVL1942:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16009              		.loc 1 4257 28 view .LVU4380
 16010 004a FFF7FEFF 		bl	__aeabi_d2f
 16011              	.LVL1943:
4257:Core/Src/bno055.c ****             euler_hpr->p = (float)(reg_euler.p / BNO055_EULER_DIV_RAD);
 16012              		.loc 1 4257 26 view .LVU4381
 16013 004e 2860     		str	r0, [r5]	@ float
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16014              		.loc 1 4258 13 is_stmt 1 view .LVU4382
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16015              		.loc 1 4258 48 is_stmt 0 view .LVU4383
 16016 0050 BDF90C00 		ldrsh	r0, [sp, #12]
 16017 0054 FFF7FEFF 		bl	__aeabi_i2d
 16018              	.LVL1944:
 16019 0058 0022     		movs	r2, #0
 16020 005a 104B     		ldr	r3, .L1153
 16021 005c FFF7FEFF 		bl	__aeabi_ddiv
 16022              	.LVL1945:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16023              		.loc 1 4258 28 view .LVU4384
 16024 0060 FFF7FEFF 		bl	__aeabi_d2f
 16025              	.LVL1946:
4258:Core/Src/bno055.c ****             euler_hpr->r = (float)(reg_euler.r / BNO055_EULER_DIV_RAD);
 16026              		.loc 1 4258 26 view .LVU4385
 16027 0064 A860     		str	r0, [r5, #8]	@ float
4259:Core/Src/bno055.c ****         }
 16028              		.loc 1 4259 13 is_stmt 1 view .LVU4386
4259:Core/Src/bno055.c ****         }
 16029              		.loc 1 4259 48 is_stmt 0 view .LVU4387
 16030 0066 BDF90A00 		ldrsh	r0, [sp, #10]
 16031 006a FFF7FEFF 		bl	__aeabi_i2d
 16032              	.LVL1947:
 16033 006e 0022     		movs	r2, #0
 16034 0070 0A4B     		ldr	r3, .L1153
 16035 0072 FFF7FEFF 		bl	__aeabi_ddiv
 16036              	.LVL1948:
4259:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 467


 16037              		.loc 1 4259 28 view .LVU4388
 16038 0076 FFF7FEFF 		bl	__aeabi_d2f
 16039              	.LVL1949:
4259:Core/Src/bno055.c ****         }
 16040              		.loc 1 4259 26 view .LVU4389
 16041 007a 6860     		str	r0, [r5, #4]	@ float
 16042              	.LVL1950:
 16043              	.L1148:
4271:Core/Src/bno055.c **** }
 16044              		.loc 1 4271 5 is_stmt 1 view .LVU4390
4272:Core/Src/bno055.c **** 
 16045              		.loc 1 4272 1 is_stmt 0 view .LVU4391
 16046 007c 2046     		mov	r0, r4
 16047 007e 05B0     		add	sp, sp, #20
 16048              	.LCFI519:
 16049              		.cfi_remember_state
 16050              		.cfi_def_cfa_offset 12
 16051              		@ sp needed
 16052 0080 30BD     		pop	{r4, r5, pc}
 16053              	.LVL1951:
 16054              	.L1152:
 16055              	.LCFI520:
 16056              		.cfi_restore_state
4248:Core/Src/bno055.c ****     }
 16057              		.loc 1 4248 9 is_stmt 1 view .LVU4392
4248:Core/Src/bno055.c ****     }
 16058              		.loc 1 4248 21 is_stmt 0 view .LVU4393
 16059 0082 0120     		movs	r0, #1
 16060 0084 FFF7FEFF 		bl	bno055_set_euler_unit
 16061              	.LVL1952:
4248:Core/Src/bno055.c ****     }
 16062              		.loc 1 4248 18 view .LVU4394
 16063 0088 54FA80F4 		uxtab	r4, r4, r0
 16064              	.LVL1953:
4248:Core/Src/bno055.c ****     }
 16065              		.loc 1 4248 18 view .LVU4395
 16066 008c 64B2     		sxtb	r4, r4
 16067              	.LVL1954:
4248:Core/Src/bno055.c ****     }
 16068              		.loc 1 4248 18 view .LVU4396
 16069 008e CCE7     		b	.L1147
 16070              	.L1149:
4268:Core/Src/bno055.c ****     }
 16071              		.loc 1 4268 18 view .LVU4397
 16072 0090 4FF0FF34 		mov	r4, #-1
 16073              	.LVL1955:
4268:Core/Src/bno055.c ****     }
 16074              		.loc 1 4268 18 view .LVU4398
 16075 0094 F2E7     		b	.L1148
 16076              	.LVL1956:
 16077              	.L1150:
4263:Core/Src/bno055.c ****         }
 16078              		.loc 1 4263 22 view .LVU4399
 16079 0096 4FF0FF34 		mov	r4, #-1
 16080              	.LVL1957:
4263:Core/Src/bno055.c ****         }
 16081              		.loc 1 4263 22 view .LVU4400
ARM GAS  /tmp/ccO72alg.s 			page 468


 16082 009a EFE7     		b	.L1148
 16083              	.L1154:
 16084              		.align	2
 16085              	.L1153:
 16086 009c 00208C40 		.word	1082925056
 16087              		.cfi_endproc
 16088              	.LFE68:
 16090              		.section	.text.bno055_convert_double_euler_h_deg,"ax",%progbits
 16091              		.align	1
 16092              		.global	bno055_convert_double_euler_h_deg
 16093              		.syntax unified
 16094              		.thumb
 16095              		.thumb_func
 16097              	bno055_convert_double_euler_h_deg:
 16098              	.LVL1958:
 16099              	.LFB99:
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16100              		.loc 1 5699 1 is_stmt 1 view -0
 16101              		.cfi_startproc
 16102              		@ args = 0, pretend = 0, frame = 8
 16103              		@ frame_needed = 0, uses_anonymous_args = 0
5699:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16104              		.loc 1 5699 1 is_stmt 0 view .LVU4402
 16105 0000 30B5     		push	{r4, r5, lr}
 16106              	.LCFI521:
 16107              		.cfi_def_cfa_offset 12
 16108              		.cfi_offset 4, -12
 16109              		.cfi_offset 5, -8
 16110              		.cfi_offset 14, -4
 16111 0002 83B0     		sub	sp, sp, #12
 16112              	.LCFI522:
 16113              		.cfi_def_cfa_offset 24
 16114 0004 0546     		mov	r5, r0
5700:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 16115              		.loc 1 5700 5 is_stmt 1 view .LVU4403
 16116              	.LVL1959:
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16117              		.loc 1 5701 5 view .LVU4404
5701:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16118              		.loc 1 5701 9 is_stmt 0 view .LVU4405
 16119 0006 0023     		movs	r3, #0
 16120 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5702:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16121              		.loc 1 5702 5 is_stmt 1 view .LVU4406
 16122              	.LVL1960:
5703:Core/Src/bno055.c **** 
 16123              		.loc 1 5703 5 view .LVU4407
5703:Core/Src/bno055.c **** 
 16124              		.loc 1 5703 8 is_stmt 0 view .LVU4408
 16125 000c 8DF80530 		strb	r3, [sp, #5]
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16126              		.loc 1 5707 5 is_stmt 1 view .LVU4409
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16127              		.loc 1 5707 16 is_stmt 0 view .LVU4410
 16128 0010 0DF10500 		add	r0, sp, #5
 16129              	.LVL1961:
5707:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
ARM GAS  /tmp/ccO72alg.s 			page 469


 16130              		.loc 1 5707 16 view .LVU4411
 16131 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16132              	.LVL1962:
 16133 0018 0446     		mov	r4, r0
 16134              	.LVL1963:
5708:Core/Src/bno055.c ****     {
 16135              		.loc 1 5708 5 is_stmt 1 view .LVU4412
5708:Core/Src/bno055.c ****     {
 16136              		.loc 1 5708 23 is_stmt 0 view .LVU4413
 16137 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5708:Core/Src/bno055.c ****     {
 16138              		.loc 1 5708 8 view .LVU4414
 16139 001e ABB9     		cbnz	r3, .L1161
 16140              	.L1156:
5712:Core/Src/bno055.c ****     {
 16141              		.loc 1 5712 5 is_stmt 1 view .LVU4415
5712:Core/Src/bno055.c ****     {
 16142              		.loc 1 5712 8 is_stmt 0 view .LVU4416
 16143 0020 DCB9     		cbnz	r4, .L1158
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16144              		.loc 1 5715 9 is_stmt 1 view .LVU4417
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16145              		.loc 1 5715 21 is_stmt 0 view .LVU4418
 16146 0022 0DF10600 		add	r0, sp, #6
 16147 0026 FFF7FEFF 		bl	bno055_read_euler_h
 16148              	.LVL1964:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16149              		.loc 1 5715 18 view .LVU4419
 16150 002a 54FA80F4 		uxtab	r4, r4, r0
 16151              	.LVL1965:
5715:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16152              		.loc 1 5715 18 view .LVU4420
 16153 002e 64B2     		sxtb	r4, r4
 16154              	.LVL1966:
5716:Core/Src/bno055.c ****         {
 16155              		.loc 1 5716 9 is_stmt 1 view .LVU4421
5716:Core/Src/bno055.c ****         {
 16156              		.loc 1 5716 12 is_stmt 0 view .LVU4422
 16157 0030 B4B9     		cbnz	r4, .L1159
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16158              		.loc 1 5719 13 is_stmt 1 view .LVU4423
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16159              		.loc 1 5719 22 is_stmt 0 view .LVU4424
 16160 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16161 0036 FFF7FEFF 		bl	__aeabi_i2d
 16162              	.LVL1967:
5719:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16163              		.loc 1 5719 20 view .LVU4425
 16164 003a 0022     		movs	r2, #0
 16165 003c 0A4B     		ldr	r3, .L1162
 16166 003e FFF7FEFF 		bl	__aeabi_dmul
 16167              	.LVL1968:
5720:Core/Src/bno055.c ****         }
 16168              		.loc 1 5720 13 is_stmt 1 view .LVU4426
5720:Core/Src/bno055.c ****         }
 16169              		.loc 1 5720 24 is_stmt 0 view .LVU4427
 16170 0042 C5E90001 		strd	r0, [r5]
ARM GAS  /tmp/ccO72alg.s 			page 470


 16171              	.LVL1969:
 16172              	.L1157:
5732:Core/Src/bno055.c **** }
 16173              		.loc 1 5732 5 is_stmt 1 view .LVU4428
5733:Core/Src/bno055.c **** 
 16174              		.loc 1 5733 1 is_stmt 0 view .LVU4429
 16175 0046 2046     		mov	r0, r4
 16176 0048 03B0     		add	sp, sp, #12
 16177              	.LCFI523:
 16178              		.cfi_remember_state
 16179              		.cfi_def_cfa_offset 12
 16180              		@ sp needed
 16181 004a 30BD     		pop	{r4, r5, pc}
 16182              	.LVL1970:
 16183              	.L1161:
 16184              	.LCFI524:
 16185              		.cfi_restore_state
5710:Core/Src/bno055.c ****     }
 16186              		.loc 1 5710 9 is_stmt 1 view .LVU4430
5710:Core/Src/bno055.c ****     }
 16187              		.loc 1 5710 21 is_stmt 0 view .LVU4431
 16188 004c 0020     		movs	r0, #0
 16189 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16190              	.LVL1971:
5710:Core/Src/bno055.c ****     }
 16191              		.loc 1 5710 18 view .LVU4432
 16192 0052 54FA80F4 		uxtab	r4, r4, r0
 16193              	.LVL1972:
5710:Core/Src/bno055.c ****     }
 16194              		.loc 1 5710 18 view .LVU4433
 16195 0056 64B2     		sxtb	r4, r4
 16196              	.LVL1973:
5710:Core/Src/bno055.c ****     }
 16197              		.loc 1 5710 18 view .LVU4434
 16198 0058 E2E7     		b	.L1156
 16199              	.L1158:
5729:Core/Src/bno055.c ****     }
 16200              		.loc 1 5729 18 view .LVU4435
 16201 005a 4FF0FF34 		mov	r4, #-1
 16202              	.LVL1974:
5729:Core/Src/bno055.c ****     }
 16203              		.loc 1 5729 18 view .LVU4436
 16204 005e F2E7     		b	.L1157
 16205              	.LVL1975:
 16206              	.L1159:
5724:Core/Src/bno055.c ****         }
 16207              		.loc 1 5724 22 view .LVU4437
 16208 0060 4FF0FF34 		mov	r4, #-1
 16209              	.LVL1976:
5724:Core/Src/bno055.c ****         }
 16210              		.loc 1 5724 22 view .LVU4438
 16211 0064 EFE7     		b	.L1157
 16212              	.L1163:
 16213 0066 00BF     		.align	2
 16214              	.L1162:
 16215 0068 0000B03F 		.word	1068498944
 16216              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 471


 16217              	.LFE99:
 16219              		.section	.text.bno055_convert_double_euler_h_rad,"ax",%progbits
 16220              		.align	1
 16221              		.global	bno055_convert_double_euler_h_rad
 16222              		.syntax unified
 16223              		.thumb
 16224              		.thumb_func
 16226              	bno055_convert_double_euler_h_rad:
 16227              	.LVL1977:
 16228              	.LFB100:
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16229              		.loc 1 5748 1 is_stmt 1 view -0
 16230              		.cfi_startproc
 16231              		@ args = 0, pretend = 0, frame = 8
 16232              		@ frame_needed = 0, uses_anonymous_args = 0
5748:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16233              		.loc 1 5748 1 is_stmt 0 view .LVU4440
 16234 0000 30B5     		push	{r4, r5, lr}
 16235              	.LCFI525:
 16236              		.cfi_def_cfa_offset 12
 16237              		.cfi_offset 4, -12
 16238              		.cfi_offset 5, -8
 16239              		.cfi_offset 14, -4
 16240 0002 83B0     		sub	sp, sp, #12
 16241              	.LCFI526:
 16242              		.cfi_def_cfa_offset 24
 16243 0004 0546     		mov	r5, r0
5749:Core/Src/bno055.c ****     s16 reg_euler_h_s16 = BNO055_INIT_VALUE;
 16244              		.loc 1 5749 5 is_stmt 1 view .LVU4441
 16245              	.LVL1978:
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16246              		.loc 1 5750 5 view .LVU4442
5750:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16247              		.loc 1 5750 9 is_stmt 0 view .LVU4443
 16248 0006 0023     		movs	r3, #0
 16249 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5751:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16250              		.loc 1 5751 5 is_stmt 1 view .LVU4444
 16251              	.LVL1979:
5752:Core/Src/bno055.c **** 
 16252              		.loc 1 5752 5 view .LVU4445
5752:Core/Src/bno055.c **** 
 16253              		.loc 1 5752 8 is_stmt 0 view .LVU4446
 16254 000c 8DF80530 		strb	r3, [sp, #5]
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16255              		.loc 1 5756 5 is_stmt 1 view .LVU4447
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16256              		.loc 1 5756 16 is_stmt 0 view .LVU4448
 16257 0010 0DF10500 		add	r0, sp, #5
 16258              	.LVL1980:
5756:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16259              		.loc 1 5756 16 view .LVU4449
 16260 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16261              	.LVL1981:
 16262 0018 0446     		mov	r4, r0
 16263              	.LVL1982:
5757:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 472


 16264              		.loc 1 5757 5 is_stmt 1 view .LVU4450
5757:Core/Src/bno055.c ****     {
 16265              		.loc 1 5757 23 is_stmt 0 view .LVU4451
 16266 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5757:Core/Src/bno055.c ****     {
 16267              		.loc 1 5757 8 view .LVU4452
 16268 001e 012B     		cmp	r3, #1
 16269 0020 15D1     		bne	.L1170
 16270              	.L1165:
5761:Core/Src/bno055.c ****     {
 16271              		.loc 1 5761 5 is_stmt 1 view .LVU4453
5761:Core/Src/bno055.c ****     {
 16272              		.loc 1 5761 8 is_stmt 0 view .LVU4454
 16273 0022 DCB9     		cbnz	r4, .L1167
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16274              		.loc 1 5764 9 is_stmt 1 view .LVU4455
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16275              		.loc 1 5764 21 is_stmt 0 view .LVU4456
 16276 0024 0DF10600 		add	r0, sp, #6
 16277 0028 FFF7FEFF 		bl	bno055_read_euler_h
 16278              	.LVL1983:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16279              		.loc 1 5764 18 view .LVU4457
 16280 002c 54FA80F4 		uxtab	r4, r4, r0
 16281              	.LVL1984:
5764:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16282              		.loc 1 5764 18 view .LVU4458
 16283 0030 64B2     		sxtb	r4, r4
 16284              	.LVL1985:
5765:Core/Src/bno055.c ****         {
 16285              		.loc 1 5765 9 is_stmt 1 view .LVU4459
5765:Core/Src/bno055.c ****         {
 16286              		.loc 1 5765 12 is_stmt 0 view .LVU4460
 16287 0032 B4B9     		cbnz	r4, .L1168
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16288              		.loc 1 5768 13 is_stmt 1 view .LVU4461
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16289              		.loc 1 5768 22 is_stmt 0 view .LVU4462
 16290 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16291 0038 FFF7FEFF 		bl	__aeabi_i2d
 16292              	.LVL1986:
5768:Core/Src/bno055.c ****             *euler_h_d = data_d;
 16293              		.loc 1 5768 20 view .LVU4463
 16294 003c 0022     		movs	r2, #0
 16295 003e 0A4B     		ldr	r3, .L1171
 16296 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16297              	.LVL1987:
5769:Core/Src/bno055.c ****         }
 16298              		.loc 1 5769 13 is_stmt 1 view .LVU4464
5769:Core/Src/bno055.c ****         }
 16299              		.loc 1 5769 24 is_stmt 0 view .LVU4465
 16300 0044 C5E90001 		strd	r0, [r5]
 16301              	.LVL1988:
 16302              	.L1166:
5781:Core/Src/bno055.c **** }
 16303              		.loc 1 5781 5 is_stmt 1 view .LVU4466
5782:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 473


 16304              		.loc 1 5782 1 is_stmt 0 view .LVU4467
 16305 0048 2046     		mov	r0, r4
 16306 004a 03B0     		add	sp, sp, #12
 16307              	.LCFI527:
 16308              		.cfi_remember_state
 16309              		.cfi_def_cfa_offset 12
 16310              		@ sp needed
 16311 004c 30BD     		pop	{r4, r5, pc}
 16312              	.LVL1989:
 16313              	.L1170:
 16314              	.LCFI528:
 16315              		.cfi_restore_state
5759:Core/Src/bno055.c ****     }
 16316              		.loc 1 5759 9 is_stmt 1 view .LVU4468
5759:Core/Src/bno055.c ****     }
 16317              		.loc 1 5759 21 is_stmt 0 view .LVU4469
 16318 004e 0120     		movs	r0, #1
 16319 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16320              	.LVL1990:
5759:Core/Src/bno055.c ****     }
 16321              		.loc 1 5759 18 view .LVU4470
 16322 0054 54FA80F4 		uxtab	r4, r4, r0
 16323              	.LVL1991:
5759:Core/Src/bno055.c ****     }
 16324              		.loc 1 5759 18 view .LVU4471
 16325 0058 64B2     		sxtb	r4, r4
 16326              	.LVL1992:
5759:Core/Src/bno055.c ****     }
 16327              		.loc 1 5759 18 view .LVU4472
 16328 005a E2E7     		b	.L1165
 16329              	.L1167:
5778:Core/Src/bno055.c ****     }
 16330              		.loc 1 5778 18 view .LVU4473
 16331 005c 4FF0FF34 		mov	r4, #-1
 16332              	.LVL1993:
5778:Core/Src/bno055.c ****     }
 16333              		.loc 1 5778 18 view .LVU4474
 16334 0060 F2E7     		b	.L1166
 16335              	.LVL1994:
 16336              	.L1168:
5773:Core/Src/bno055.c ****         }
 16337              		.loc 1 5773 22 view .LVU4475
 16338 0062 4FF0FF34 		mov	r4, #-1
 16339              	.LVL1995:
5773:Core/Src/bno055.c ****         }
 16340              		.loc 1 5773 22 view .LVU4476
 16341 0066 EFE7     		b	.L1166
 16342              	.L1172:
 16343              		.align	2
 16344              	.L1171:
 16345 0068 00208C40 		.word	1082925056
 16346              		.cfi_endproc
 16347              	.LFE100:
 16349              		.section	.text.bno055_convert_double_euler_r_deg,"ax",%progbits
 16350              		.align	1
 16351              		.global	bno055_convert_double_euler_r_deg
 16352              		.syntax unified
ARM GAS  /tmp/ccO72alg.s 			page 474


 16353              		.thumb
 16354              		.thumb_func
 16356              	bno055_convert_double_euler_r_deg:
 16357              	.LVL1996:
 16358              	.LFB101:
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16359              		.loc 1 5797 1 is_stmt 1 view -0
 16360              		.cfi_startproc
 16361              		@ args = 0, pretend = 0, frame = 8
 16362              		@ frame_needed = 0, uses_anonymous_args = 0
5797:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16363              		.loc 1 5797 1 is_stmt 0 view .LVU4478
 16364 0000 30B5     		push	{r4, r5, lr}
 16365              	.LCFI529:
 16366              		.cfi_def_cfa_offset 12
 16367              		.cfi_offset 4, -12
 16368              		.cfi_offset 5, -8
 16369              		.cfi_offset 14, -4
 16370 0002 83B0     		sub	sp, sp, #12
 16371              	.LCFI530:
 16372              		.cfi_def_cfa_offset 24
 16373 0004 0546     		mov	r5, r0
5798:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 16374              		.loc 1 5798 5 is_stmt 1 view .LVU4479
 16375              	.LVL1997:
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16376              		.loc 1 5799 5 view .LVU4480
5799:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16377              		.loc 1 5799 9 is_stmt 0 view .LVU4481
 16378 0006 0023     		movs	r3, #0
 16379 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5800:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16380              		.loc 1 5800 5 is_stmt 1 view .LVU4482
 16381              	.LVL1998:
5801:Core/Src/bno055.c **** 
 16382              		.loc 1 5801 5 view .LVU4483
5801:Core/Src/bno055.c **** 
 16383              		.loc 1 5801 8 is_stmt 0 view .LVU4484
 16384 000c 8DF80530 		strb	r3, [sp, #5]
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16385              		.loc 1 5805 5 is_stmt 1 view .LVU4485
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16386              		.loc 1 5805 16 is_stmt 0 view .LVU4486
 16387 0010 0DF10500 		add	r0, sp, #5
 16388              	.LVL1999:
5805:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16389              		.loc 1 5805 16 view .LVU4487
 16390 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16391              	.LVL2000:
 16392 0018 0446     		mov	r4, r0
 16393              	.LVL2001:
5806:Core/Src/bno055.c ****     {
 16394              		.loc 1 5806 5 is_stmt 1 view .LVU4488
5806:Core/Src/bno055.c ****     {
 16395              		.loc 1 5806 23 is_stmt 0 view .LVU4489
 16396 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5806:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 475


 16397              		.loc 1 5806 8 view .LVU4490
 16398 001e ABB9     		cbnz	r3, .L1179
 16399              	.L1174:
5810:Core/Src/bno055.c ****     {
 16400              		.loc 1 5810 5 is_stmt 1 view .LVU4491
5810:Core/Src/bno055.c ****     {
 16401              		.loc 1 5810 8 is_stmt 0 view .LVU4492
 16402 0020 DCB9     		cbnz	r4, .L1176
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16403              		.loc 1 5813 9 is_stmt 1 view .LVU4493
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16404              		.loc 1 5813 21 is_stmt 0 view .LVU4494
 16405 0022 0DF10600 		add	r0, sp, #6
 16406 0026 FFF7FEFF 		bl	bno055_read_euler_r
 16407              	.LVL2002:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16408              		.loc 1 5813 18 view .LVU4495
 16409 002a 54FA80F4 		uxtab	r4, r4, r0
 16410              	.LVL2003:
5813:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16411              		.loc 1 5813 18 view .LVU4496
 16412 002e 64B2     		sxtb	r4, r4
 16413              	.LVL2004:
5814:Core/Src/bno055.c ****         {
 16414              		.loc 1 5814 9 is_stmt 1 view .LVU4497
5814:Core/Src/bno055.c ****         {
 16415              		.loc 1 5814 12 is_stmt 0 view .LVU4498
 16416 0030 B4B9     		cbnz	r4, .L1177
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16417              		.loc 1 5817 13 is_stmt 1 view .LVU4499
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16418              		.loc 1 5817 22 is_stmt 0 view .LVU4500
 16419 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16420 0036 FFF7FEFF 		bl	__aeabi_i2d
 16421              	.LVL2005:
5817:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16422              		.loc 1 5817 20 view .LVU4501
 16423 003a 0022     		movs	r2, #0
 16424 003c 0A4B     		ldr	r3, .L1180
 16425 003e FFF7FEFF 		bl	__aeabi_dmul
 16426              	.LVL2006:
5818:Core/Src/bno055.c ****         }
 16427              		.loc 1 5818 13 is_stmt 1 view .LVU4502
5818:Core/Src/bno055.c ****         }
 16428              		.loc 1 5818 24 is_stmt 0 view .LVU4503
 16429 0042 C5E90001 		strd	r0, [r5]
 16430              	.LVL2007:
 16431              	.L1175:
5830:Core/Src/bno055.c **** }
 16432              		.loc 1 5830 5 is_stmt 1 view .LVU4504
5831:Core/Src/bno055.c **** 
 16433              		.loc 1 5831 1 is_stmt 0 view .LVU4505
 16434 0046 2046     		mov	r0, r4
 16435 0048 03B0     		add	sp, sp, #12
 16436              	.LCFI531:
 16437              		.cfi_remember_state
 16438              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 476


 16439              		@ sp needed
 16440 004a 30BD     		pop	{r4, r5, pc}
 16441              	.LVL2008:
 16442              	.L1179:
 16443              	.LCFI532:
 16444              		.cfi_restore_state
5808:Core/Src/bno055.c ****     }
 16445              		.loc 1 5808 9 is_stmt 1 view .LVU4506
5808:Core/Src/bno055.c ****     }
 16446              		.loc 1 5808 21 is_stmt 0 view .LVU4507
 16447 004c 0020     		movs	r0, #0
 16448 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16449              	.LVL2009:
5808:Core/Src/bno055.c ****     }
 16450              		.loc 1 5808 18 view .LVU4508
 16451 0052 54FA80F4 		uxtab	r4, r4, r0
 16452              	.LVL2010:
5808:Core/Src/bno055.c ****     }
 16453              		.loc 1 5808 18 view .LVU4509
 16454 0056 64B2     		sxtb	r4, r4
 16455              	.LVL2011:
5808:Core/Src/bno055.c ****     }
 16456              		.loc 1 5808 18 view .LVU4510
 16457 0058 E2E7     		b	.L1174
 16458              	.L1176:
5827:Core/Src/bno055.c ****     }
 16459              		.loc 1 5827 18 view .LVU4511
 16460 005a 4FF0FF34 		mov	r4, #-1
 16461              	.LVL2012:
5827:Core/Src/bno055.c ****     }
 16462              		.loc 1 5827 18 view .LVU4512
 16463 005e F2E7     		b	.L1175
 16464              	.LVL2013:
 16465              	.L1177:
5822:Core/Src/bno055.c ****         }
 16466              		.loc 1 5822 22 view .LVU4513
 16467 0060 4FF0FF34 		mov	r4, #-1
 16468              	.LVL2014:
5822:Core/Src/bno055.c ****         }
 16469              		.loc 1 5822 22 view .LVU4514
 16470 0064 EFE7     		b	.L1175
 16471              	.L1181:
 16472 0066 00BF     		.align	2
 16473              	.L1180:
 16474 0068 0000B03F 		.word	1068498944
 16475              		.cfi_endproc
 16476              	.LFE101:
 16478              		.section	.text.bno055_convert_double_euler_r_rad,"ax",%progbits
 16479              		.align	1
 16480              		.global	bno055_convert_double_euler_r_rad
 16481              		.syntax unified
 16482              		.thumb
 16483              		.thumb_func
 16485              	bno055_convert_double_euler_r_rad:
 16486              	.LVL2015:
 16487              	.LFB102:
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 477


 16488              		.loc 1 5846 1 is_stmt 1 view -0
 16489              		.cfi_startproc
 16490              		@ args = 0, pretend = 0, frame = 8
 16491              		@ frame_needed = 0, uses_anonymous_args = 0
5846:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16492              		.loc 1 5846 1 is_stmt 0 view .LVU4516
 16493 0000 30B5     		push	{r4, r5, lr}
 16494              	.LCFI533:
 16495              		.cfi_def_cfa_offset 12
 16496              		.cfi_offset 4, -12
 16497              		.cfi_offset 5, -8
 16498              		.cfi_offset 14, -4
 16499 0002 83B0     		sub	sp, sp, #12
 16500              	.LCFI534:
 16501              		.cfi_def_cfa_offset 24
 16502 0004 0546     		mov	r5, r0
5847:Core/Src/bno055.c ****     s16 reg_euler_r_s16 = BNO055_INIT_VALUE;
 16503              		.loc 1 5847 5 is_stmt 1 view .LVU4517
 16504              	.LVL2016:
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16505              		.loc 1 5848 5 view .LVU4518
5848:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16506              		.loc 1 5848 9 is_stmt 0 view .LVU4519
 16507 0006 0023     		movs	r3, #0
 16508 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5849:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16509              		.loc 1 5849 5 is_stmt 1 view .LVU4520
 16510              	.LVL2017:
5850:Core/Src/bno055.c **** 
 16511              		.loc 1 5850 5 view .LVU4521
5850:Core/Src/bno055.c **** 
 16512              		.loc 1 5850 8 is_stmt 0 view .LVU4522
 16513 000c 8DF80530 		strb	r3, [sp, #5]
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16514              		.loc 1 5854 5 is_stmt 1 view .LVU4523
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16515              		.loc 1 5854 16 is_stmt 0 view .LVU4524
 16516 0010 0DF10500 		add	r0, sp, #5
 16517              	.LVL2018:
5854:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16518              		.loc 1 5854 16 view .LVU4525
 16519 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16520              	.LVL2019:
 16521 0018 0446     		mov	r4, r0
 16522              	.LVL2020:
5855:Core/Src/bno055.c ****     {
 16523              		.loc 1 5855 5 is_stmt 1 view .LVU4526
5855:Core/Src/bno055.c ****     {
 16524              		.loc 1 5855 23 is_stmt 0 view .LVU4527
 16525 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5855:Core/Src/bno055.c ****     {
 16526              		.loc 1 5855 8 view .LVU4528
 16527 001e 012B     		cmp	r3, #1
 16528 0020 15D1     		bne	.L1188
 16529              	.L1183:
5859:Core/Src/bno055.c ****     {
 16530              		.loc 1 5859 5 is_stmt 1 view .LVU4529
ARM GAS  /tmp/ccO72alg.s 			page 478


5859:Core/Src/bno055.c ****     {
 16531              		.loc 1 5859 8 is_stmt 0 view .LVU4530
 16532 0022 DCB9     		cbnz	r4, .L1185
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16533              		.loc 1 5862 9 is_stmt 1 view .LVU4531
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16534              		.loc 1 5862 21 is_stmt 0 view .LVU4532
 16535 0024 0DF10600 		add	r0, sp, #6
 16536 0028 FFF7FEFF 		bl	bno055_read_euler_r
 16537              	.LVL2021:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16538              		.loc 1 5862 18 view .LVU4533
 16539 002c 54FA80F4 		uxtab	r4, r4, r0
 16540              	.LVL2022:
5862:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16541              		.loc 1 5862 18 view .LVU4534
 16542 0030 64B2     		sxtb	r4, r4
 16543              	.LVL2023:
5863:Core/Src/bno055.c ****         {
 16544              		.loc 1 5863 9 is_stmt 1 view .LVU4535
5863:Core/Src/bno055.c ****         {
 16545              		.loc 1 5863 12 is_stmt 0 view .LVU4536
 16546 0032 B4B9     		cbnz	r4, .L1186
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16547              		.loc 1 5866 13 is_stmt 1 view .LVU4537
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16548              		.loc 1 5866 22 is_stmt 0 view .LVU4538
 16549 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16550 0038 FFF7FEFF 		bl	__aeabi_i2d
 16551              	.LVL2024:
5866:Core/Src/bno055.c ****             *euler_r_d = data_d;
 16552              		.loc 1 5866 20 view .LVU4539
 16553 003c 0022     		movs	r2, #0
 16554 003e 0A4B     		ldr	r3, .L1189
 16555 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16556              	.LVL2025:
5867:Core/Src/bno055.c ****         }
 16557              		.loc 1 5867 13 is_stmt 1 view .LVU4540
5867:Core/Src/bno055.c ****         }
 16558              		.loc 1 5867 24 is_stmt 0 view .LVU4541
 16559 0044 C5E90001 		strd	r0, [r5]
 16560              	.LVL2026:
 16561              	.L1184:
5879:Core/Src/bno055.c **** }
 16562              		.loc 1 5879 5 is_stmt 1 view .LVU4542
5880:Core/Src/bno055.c **** 
 16563              		.loc 1 5880 1 is_stmt 0 view .LVU4543
 16564 0048 2046     		mov	r0, r4
 16565 004a 03B0     		add	sp, sp, #12
 16566              	.LCFI535:
 16567              		.cfi_remember_state
 16568              		.cfi_def_cfa_offset 12
 16569              		@ sp needed
 16570 004c 30BD     		pop	{r4, r5, pc}
 16571              	.LVL2027:
 16572              	.L1188:
 16573              	.LCFI536:
ARM GAS  /tmp/ccO72alg.s 			page 479


 16574              		.cfi_restore_state
5857:Core/Src/bno055.c ****     }
 16575              		.loc 1 5857 9 is_stmt 1 view .LVU4544
5857:Core/Src/bno055.c ****     }
 16576              		.loc 1 5857 21 is_stmt 0 view .LVU4545
 16577 004e 0120     		movs	r0, #1
 16578 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16579              	.LVL2028:
5857:Core/Src/bno055.c ****     }
 16580              		.loc 1 5857 18 view .LVU4546
 16581 0054 54FA80F4 		uxtab	r4, r4, r0
 16582              	.LVL2029:
5857:Core/Src/bno055.c ****     }
 16583              		.loc 1 5857 18 view .LVU4547
 16584 0058 64B2     		sxtb	r4, r4
 16585              	.LVL2030:
5857:Core/Src/bno055.c ****     }
 16586              		.loc 1 5857 18 view .LVU4548
 16587 005a E2E7     		b	.L1183
 16588              	.L1185:
5876:Core/Src/bno055.c ****     }
 16589              		.loc 1 5876 18 view .LVU4549
 16590 005c 4FF0FF34 		mov	r4, #-1
 16591              	.LVL2031:
5876:Core/Src/bno055.c ****     }
 16592              		.loc 1 5876 18 view .LVU4550
 16593 0060 F2E7     		b	.L1184
 16594              	.LVL2032:
 16595              	.L1186:
5871:Core/Src/bno055.c ****         }
 16596              		.loc 1 5871 22 view .LVU4551
 16597 0062 4FF0FF34 		mov	r4, #-1
 16598              	.LVL2033:
5871:Core/Src/bno055.c ****         }
 16599              		.loc 1 5871 22 view .LVU4552
 16600 0066 EFE7     		b	.L1184
 16601              	.L1190:
 16602              		.align	2
 16603              	.L1189:
 16604 0068 00208C40 		.word	1082925056
 16605              		.cfi_endproc
 16606              	.LFE102:
 16608              		.section	.text.bno055_convert_double_euler_p_deg,"ax",%progbits
 16609              		.align	1
 16610              		.global	bno055_convert_double_euler_p_deg
 16611              		.syntax unified
 16612              		.thumb
 16613              		.thumb_func
 16615              	bno055_convert_double_euler_p_deg:
 16616              	.LVL2034:
 16617              	.LFB103:
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16618              		.loc 1 5895 1 is_stmt 1 view -0
 16619              		.cfi_startproc
 16620              		@ args = 0, pretend = 0, frame = 8
 16621              		@ frame_needed = 0, uses_anonymous_args = 0
5895:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 480


 16622              		.loc 1 5895 1 is_stmt 0 view .LVU4554
 16623 0000 30B5     		push	{r4, r5, lr}
 16624              	.LCFI537:
 16625              		.cfi_def_cfa_offset 12
 16626              		.cfi_offset 4, -12
 16627              		.cfi_offset 5, -8
 16628              		.cfi_offset 14, -4
 16629 0002 83B0     		sub	sp, sp, #12
 16630              	.LCFI538:
 16631              		.cfi_def_cfa_offset 24
 16632 0004 0546     		mov	r5, r0
5896:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16633              		.loc 1 5896 5 is_stmt 1 view .LVU4555
 16634              	.LVL2035:
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16635              		.loc 1 5897 5 view .LVU4556
5897:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16636              		.loc 1 5897 9 is_stmt 0 view .LVU4557
 16637 0006 0023     		movs	r3, #0
 16638 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5898:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16639              		.loc 1 5898 5 is_stmt 1 view .LVU4558
 16640              	.LVL2036:
5899:Core/Src/bno055.c **** 
 16641              		.loc 1 5899 5 view .LVU4559
5899:Core/Src/bno055.c **** 
 16642              		.loc 1 5899 8 is_stmt 0 view .LVU4560
 16643 000c 8DF80530 		strb	r3, [sp, #5]
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16644              		.loc 1 5903 5 is_stmt 1 view .LVU4561
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16645              		.loc 1 5903 16 is_stmt 0 view .LVU4562
 16646 0010 0DF10500 		add	r0, sp, #5
 16647              	.LVL2037:
5903:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16648              		.loc 1 5903 16 view .LVU4563
 16649 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16650              	.LVL2038:
 16651 0018 0446     		mov	r4, r0
 16652              	.LVL2039:
5904:Core/Src/bno055.c ****     {
 16653              		.loc 1 5904 5 is_stmt 1 view .LVU4564
5904:Core/Src/bno055.c ****     {
 16654              		.loc 1 5904 23 is_stmt 0 view .LVU4565
 16655 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5904:Core/Src/bno055.c ****     {
 16656              		.loc 1 5904 8 view .LVU4566
 16657 001e ABB9     		cbnz	r3, .L1197
 16658              	.L1192:
5908:Core/Src/bno055.c ****     {
 16659              		.loc 1 5908 5 is_stmt 1 view .LVU4567
5908:Core/Src/bno055.c ****     {
 16660              		.loc 1 5908 8 is_stmt 0 view .LVU4568
 16661 0020 DCB9     		cbnz	r4, .L1194
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16662              		.loc 1 5911 9 is_stmt 1 view .LVU4569
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 481


 16663              		.loc 1 5911 21 is_stmt 0 view .LVU4570
 16664 0022 0DF10600 		add	r0, sp, #6
 16665 0026 FFF7FEFF 		bl	bno055_read_euler_p
 16666              	.LVL2040:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16667              		.loc 1 5911 18 view .LVU4571
 16668 002a 54FA80F4 		uxtab	r4, r4, r0
 16669              	.LVL2041:
5911:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16670              		.loc 1 5911 18 view .LVU4572
 16671 002e 64B2     		sxtb	r4, r4
 16672              	.LVL2042:
5912:Core/Src/bno055.c ****         {
 16673              		.loc 1 5912 9 is_stmt 1 view .LVU4573
5912:Core/Src/bno055.c ****         {
 16674              		.loc 1 5912 12 is_stmt 0 view .LVU4574
 16675 0030 B4B9     		cbnz	r4, .L1195
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16676              		.loc 1 5915 13 is_stmt 1 view .LVU4575
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16677              		.loc 1 5915 22 is_stmt 0 view .LVU4576
 16678 0032 BDF90600 		ldrsh	r0, [sp, #6]
 16679 0036 FFF7FEFF 		bl	__aeabi_i2d
 16680              	.LVL2043:
5915:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16681              		.loc 1 5915 20 view .LVU4577
 16682 003a 0022     		movs	r2, #0
 16683 003c 0A4B     		ldr	r3, .L1198
 16684 003e FFF7FEFF 		bl	__aeabi_dmul
 16685              	.LVL2044:
5916:Core/Src/bno055.c ****         }
 16686              		.loc 1 5916 13 is_stmt 1 view .LVU4578
5916:Core/Src/bno055.c ****         }
 16687              		.loc 1 5916 24 is_stmt 0 view .LVU4579
 16688 0042 C5E90001 		strd	r0, [r5]
 16689              	.LVL2045:
 16690              	.L1193:
5928:Core/Src/bno055.c **** }
 16691              		.loc 1 5928 5 is_stmt 1 view .LVU4580
5929:Core/Src/bno055.c **** 
 16692              		.loc 1 5929 1 is_stmt 0 view .LVU4581
 16693 0046 2046     		mov	r0, r4
 16694 0048 03B0     		add	sp, sp, #12
 16695              	.LCFI539:
 16696              		.cfi_remember_state
 16697              		.cfi_def_cfa_offset 12
 16698              		@ sp needed
 16699 004a 30BD     		pop	{r4, r5, pc}
 16700              	.LVL2046:
 16701              	.L1197:
 16702              	.LCFI540:
 16703              		.cfi_restore_state
5906:Core/Src/bno055.c ****     }
 16704              		.loc 1 5906 9 is_stmt 1 view .LVU4582
5906:Core/Src/bno055.c ****     }
 16705              		.loc 1 5906 21 is_stmt 0 view .LVU4583
 16706 004c 0020     		movs	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 482


 16707 004e FFF7FEFF 		bl	bno055_set_euler_unit
 16708              	.LVL2047:
5906:Core/Src/bno055.c ****     }
 16709              		.loc 1 5906 18 view .LVU4584
 16710 0052 54FA80F4 		uxtab	r4, r4, r0
 16711              	.LVL2048:
5906:Core/Src/bno055.c ****     }
 16712              		.loc 1 5906 18 view .LVU4585
 16713 0056 64B2     		sxtb	r4, r4
 16714              	.LVL2049:
5906:Core/Src/bno055.c ****     }
 16715              		.loc 1 5906 18 view .LVU4586
 16716 0058 E2E7     		b	.L1192
 16717              	.L1194:
5925:Core/Src/bno055.c ****     }
 16718              		.loc 1 5925 18 view .LVU4587
 16719 005a 4FF0FF34 		mov	r4, #-1
 16720              	.LVL2050:
5925:Core/Src/bno055.c ****     }
 16721              		.loc 1 5925 18 view .LVU4588
 16722 005e F2E7     		b	.L1193
 16723              	.LVL2051:
 16724              	.L1195:
5920:Core/Src/bno055.c ****         }
 16725              		.loc 1 5920 22 view .LVU4589
 16726 0060 4FF0FF34 		mov	r4, #-1
 16727              	.LVL2052:
5920:Core/Src/bno055.c ****         }
 16728              		.loc 1 5920 22 view .LVU4590
 16729 0064 EFE7     		b	.L1193
 16730              	.L1199:
 16731 0066 00BF     		.align	2
 16732              	.L1198:
 16733 0068 0000B03F 		.word	1068498944
 16734              		.cfi_endproc
 16735              	.LFE103:
 16737              		.section	.text.bno055_convert_double_euler_p_rad,"ax",%progbits
 16738              		.align	1
 16739              		.global	bno055_convert_double_euler_p_rad
 16740              		.syntax unified
 16741              		.thumb
 16742              		.thumb_func
 16744              	bno055_convert_double_euler_p_rad:
 16745              	.LVL2053:
 16746              	.LFB104:
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16747              		.loc 1 5944 1 is_stmt 1 view -0
 16748              		.cfi_startproc
 16749              		@ args = 0, pretend = 0, frame = 8
 16750              		@ frame_needed = 0, uses_anonymous_args = 0
5944:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 16751              		.loc 1 5944 1 is_stmt 0 view .LVU4592
 16752 0000 30B5     		push	{r4, r5, lr}
 16753              	.LCFI541:
 16754              		.cfi_def_cfa_offset 12
 16755              		.cfi_offset 4, -12
 16756              		.cfi_offset 5, -8
ARM GAS  /tmp/ccO72alg.s 			page 483


 16757              		.cfi_offset 14, -4
 16758 0002 83B0     		sub	sp, sp, #12
 16759              	.LCFI542:
 16760              		.cfi_def_cfa_offset 24
 16761 0004 0546     		mov	r5, r0
5945:Core/Src/bno055.c ****     s16 reg_euler_p_s16 = BNO055_INIT_VALUE;
 16762              		.loc 1 5945 5 is_stmt 1 view .LVU4593
 16763              	.LVL2054:
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16764              		.loc 1 5946 5 view .LVU4594
5946:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 16765              		.loc 1 5946 9 is_stmt 0 view .LVU4595
 16766 0006 0023     		movs	r3, #0
 16767 0008 ADF80630 		strh	r3, [sp, #6]	@ movhi
5947:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16768              		.loc 1 5947 5 is_stmt 1 view .LVU4596
 16769              	.LVL2055:
5948:Core/Src/bno055.c **** 
 16770              		.loc 1 5948 5 view .LVU4597
5948:Core/Src/bno055.c **** 
 16771              		.loc 1 5948 8 is_stmt 0 view .LVU4598
 16772 000c 8DF80530 		strb	r3, [sp, #5]
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16773              		.loc 1 5952 5 is_stmt 1 view .LVU4599
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16774              		.loc 1 5952 16 is_stmt 0 view .LVU4600
 16775 0010 0DF10500 		add	r0, sp, #5
 16776              	.LVL2056:
5952:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 16777              		.loc 1 5952 16 view .LVU4601
 16778 0014 FFF7FEFF 		bl	bno055_get_euler_unit
 16779              	.LVL2057:
 16780 0018 0446     		mov	r4, r0
 16781              	.LVL2058:
5953:Core/Src/bno055.c ****     {
 16782              		.loc 1 5953 5 is_stmt 1 view .LVU4602
5953:Core/Src/bno055.c ****     {
 16783              		.loc 1 5953 23 is_stmt 0 view .LVU4603
 16784 001a 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
5953:Core/Src/bno055.c ****     {
 16785              		.loc 1 5953 8 view .LVU4604
 16786 001e 012B     		cmp	r3, #1
 16787 0020 15D1     		bne	.L1206
 16788              	.L1201:
5957:Core/Src/bno055.c ****     {
 16789              		.loc 1 5957 5 is_stmt 1 view .LVU4605
5957:Core/Src/bno055.c ****     {
 16790              		.loc 1 5957 8 is_stmt 0 view .LVU4606
 16791 0022 DCB9     		cbnz	r4, .L1203
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16792              		.loc 1 5960 9 is_stmt 1 view .LVU4607
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16793              		.loc 1 5960 21 is_stmt 0 view .LVU4608
 16794 0024 0DF10600 		add	r0, sp, #6
 16795 0028 FFF7FEFF 		bl	bno055_read_euler_p
 16796              	.LVL2059:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 484


 16797              		.loc 1 5960 18 view .LVU4609
 16798 002c 54FA80F4 		uxtab	r4, r4, r0
 16799              	.LVL2060:
5960:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16800              		.loc 1 5960 18 view .LVU4610
 16801 0030 64B2     		sxtb	r4, r4
 16802              	.LVL2061:
5961:Core/Src/bno055.c ****         {
 16803              		.loc 1 5961 9 is_stmt 1 view .LVU4611
5961:Core/Src/bno055.c ****         {
 16804              		.loc 1 5961 12 is_stmt 0 view .LVU4612
 16805 0032 B4B9     		cbnz	r4, .L1204
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16806              		.loc 1 5964 13 is_stmt 1 view .LVU4613
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16807              		.loc 1 5964 22 is_stmt 0 view .LVU4614
 16808 0034 BDF90600 		ldrsh	r0, [sp, #6]
 16809 0038 FFF7FEFF 		bl	__aeabi_i2d
 16810              	.LVL2062:
5964:Core/Src/bno055.c ****             *euler_p_d = data_d;
 16811              		.loc 1 5964 20 view .LVU4615
 16812 003c 0022     		movs	r2, #0
 16813 003e 0A4B     		ldr	r3, .L1207
 16814 0040 FFF7FEFF 		bl	__aeabi_ddiv
 16815              	.LVL2063:
5965:Core/Src/bno055.c ****         }
 16816              		.loc 1 5965 13 is_stmt 1 view .LVU4616
5965:Core/Src/bno055.c ****         }
 16817              		.loc 1 5965 24 is_stmt 0 view .LVU4617
 16818 0044 C5E90001 		strd	r0, [r5]
 16819              	.LVL2064:
 16820              	.L1202:
5977:Core/Src/bno055.c **** }
 16821              		.loc 1 5977 5 is_stmt 1 view .LVU4618
5978:Core/Src/bno055.c **** 
 16822              		.loc 1 5978 1 is_stmt 0 view .LVU4619
 16823 0048 2046     		mov	r0, r4
 16824 004a 03B0     		add	sp, sp, #12
 16825              	.LCFI543:
 16826              		.cfi_remember_state
 16827              		.cfi_def_cfa_offset 12
 16828              		@ sp needed
 16829 004c 30BD     		pop	{r4, r5, pc}
 16830              	.LVL2065:
 16831              	.L1206:
 16832              	.LCFI544:
 16833              		.cfi_restore_state
5955:Core/Src/bno055.c ****     }
 16834              		.loc 1 5955 9 is_stmt 1 view .LVU4620
5955:Core/Src/bno055.c ****     }
 16835              		.loc 1 5955 21 is_stmt 0 view .LVU4621
 16836 004e 0120     		movs	r0, #1
 16837 0050 FFF7FEFF 		bl	bno055_set_euler_unit
 16838              	.LVL2066:
5955:Core/Src/bno055.c ****     }
 16839              		.loc 1 5955 18 view .LVU4622
 16840 0054 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 485


 16841              	.LVL2067:
5955:Core/Src/bno055.c ****     }
 16842              		.loc 1 5955 18 view .LVU4623
 16843 0058 64B2     		sxtb	r4, r4
 16844              	.LVL2068:
5955:Core/Src/bno055.c ****     }
 16845              		.loc 1 5955 18 view .LVU4624
 16846 005a E2E7     		b	.L1201
 16847              	.L1203:
5974:Core/Src/bno055.c ****     }
 16848              		.loc 1 5974 18 view .LVU4625
 16849 005c 4FF0FF34 		mov	r4, #-1
 16850              	.LVL2069:
5974:Core/Src/bno055.c ****     }
 16851              		.loc 1 5974 18 view .LVU4626
 16852 0060 F2E7     		b	.L1202
 16853              	.LVL2070:
 16854              	.L1204:
5969:Core/Src/bno055.c ****         }
 16855              		.loc 1 5969 22 view .LVU4627
 16856 0062 4FF0FF34 		mov	r4, #-1
 16857              	.LVL2071:
5969:Core/Src/bno055.c ****         }
 16858              		.loc 1 5969 22 view .LVU4628
 16859 0066 EFE7     		b	.L1202
 16860              	.L1208:
 16861              		.align	2
 16862              	.L1207:
 16863 0068 00208C40 		.word	1082925056
 16864              		.cfi_endproc
 16865              	.LFE104:
 16867              		.section	.text.bno055_convert_double_euler_hpr_deg,"ax",%progbits
 16868              		.align	1
 16869              		.global	bno055_convert_double_euler_hpr_deg
 16870              		.syntax unified
 16871              		.thumb
 16872              		.thumb_func
 16874              	bno055_convert_double_euler_hpr_deg:
 16875              	.LVL2072:
 16876              	.LFB105:
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 16877              		.loc 1 5999 1 is_stmt 1 view -0
 16878              		.cfi_startproc
 16879              		@ args = 0, pretend = 0, frame = 16
 16880              		@ frame_needed = 0, uses_anonymous_args = 0
5999:Core/Src/bno055.c ****     /* Variable used to return value of
 16881              		.loc 1 5999 1 is_stmt 0 view .LVU4630
 16882 0000 30B5     		push	{r4, r5, lr}
 16883              	.LCFI545:
 16884              		.cfi_def_cfa_offset 12
 16885              		.cfi_offset 4, -12
 16886              		.cfi_offset 5, -8
 16887              		.cfi_offset 14, -4
 16888 0002 85B0     		sub	sp, sp, #20
 16889              	.LCFI546:
 16890              		.cfi_def_cfa_offset 32
 16891 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccO72alg.s 			page 486


6002:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 16892              		.loc 1 6002 5 is_stmt 1 view .LVU4631
 16893              	.LVL2073:
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16894              		.loc 1 6003 5 view .LVU4632
6003:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 16895              		.loc 1 6003 27 is_stmt 0 view .LVU4633
 16896 0006 0023     		movs	r3, #0
 16897 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 16898 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 16899 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6004:Core/Src/bno055.c **** 
 16900              		.loc 1 6004 5 is_stmt 1 view .LVU4634
6004:Core/Src/bno055.c **** 
 16901              		.loc 1 6004 8 is_stmt 0 view .LVU4635
 16902 0014 8DF80730 		strb	r3, [sp, #7]
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16903              		.loc 1 6008 5 is_stmt 1 view .LVU4636
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16904              		.loc 1 6008 16 is_stmt 0 view .LVU4637
 16905 0018 0DF10700 		add	r0, sp, #7
 16906              	.LVL2074:
6008:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_DEG)
 16907              		.loc 1 6008 16 view .LVU4638
 16908 001c FFF7FEFF 		bl	bno055_get_euler_unit
 16909              	.LVL2075:
 16910 0020 0446     		mov	r4, r0
 16911              	.LVL2076:
6009:Core/Src/bno055.c ****     {
 16912              		.loc 1 6009 5 is_stmt 1 view .LVU4639
6009:Core/Src/bno055.c ****     {
 16913              		.loc 1 6009 23 is_stmt 0 view .LVU4640
 16914 0022 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6009:Core/Src/bno055.c ****     {
 16915              		.loc 1 6009 8 view .LVU4641
 16916 0026 43BB     		cbnz	r3, .L1215
 16917              	.L1210:
6013:Core/Src/bno055.c ****     {
 16918              		.loc 1 6013 5 is_stmt 1 view .LVU4642
6013:Core/Src/bno055.c ****     {
 16919              		.loc 1 6013 8 is_stmt 0 view .LVU4643
 16920 0028 74BB     		cbnz	r4, .L1212
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16921              		.loc 1 6016 9 is_stmt 1 view .LVU4644
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16922              		.loc 1 6016 21 is_stmt 0 view .LVU4645
 16923 002a 02A8     		add	r0, sp, #8
 16924 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 16925              	.LVL2077:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16926              		.loc 1 6016 18 view .LVU4646
 16927 0030 54FA80F4 		uxtab	r4, r4, r0
 16928              	.LVL2078:
6016:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 16929              		.loc 1 6016 18 view .LVU4647
 16930 0034 64B2     		sxtb	r4, r4
 16931              	.LVL2079:
ARM GAS  /tmp/ccO72alg.s 			page 487


6017:Core/Src/bno055.c ****         {
 16932              		.loc 1 6017 9 is_stmt 1 view .LVU4648
6017:Core/Src/bno055.c ****         {
 16933              		.loc 1 6017 12 is_stmt 0 view .LVU4649
 16934 0036 54BB     		cbnz	r4, .L1213
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16935              		.loc 1 6020 13 is_stmt 1 view .LVU4650
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16936              		.loc 1 6020 28 is_stmt 0 view .LVU4651
 16937 0038 BDF90800 		ldrsh	r0, [sp, #8]
 16938 003c FFF7FEFF 		bl	__aeabi_i2d
 16939              	.LVL2080:
 16940 0040 0022     		movs	r2, #0
 16941 0042 144B     		ldr	r3, .L1216
 16942 0044 FFF7FEFF 		bl	__aeabi_dmul
 16943              	.LVL2081:
6020:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_DEG);
 16944              		.loc 1 6020 26 view .LVU4652
 16945 0048 C5E90001 		strd	r0, [r5]
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16946              		.loc 1 6021 13 is_stmt 1 view .LVU4653
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16947              		.loc 1 6021 28 is_stmt 0 view .LVU4654
 16948 004c BDF90C00 		ldrsh	r0, [sp, #12]
 16949 0050 FFF7FEFF 		bl	__aeabi_i2d
 16950              	.LVL2082:
 16951 0054 0022     		movs	r2, #0
 16952 0056 0F4B     		ldr	r3, .L1216
 16953 0058 FFF7FEFF 		bl	__aeabi_dmul
 16954              	.LVL2083:
6021:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_DEG);
 16955              		.loc 1 6021 26 view .LVU4655
 16956 005c C5E90401 		strd	r0, [r5, #16]
6022:Core/Src/bno055.c ****         }
 16957              		.loc 1 6022 13 is_stmt 1 view .LVU4656
6022:Core/Src/bno055.c ****         }
 16958              		.loc 1 6022 28 is_stmt 0 view .LVU4657
 16959 0060 BDF90A00 		ldrsh	r0, [sp, #10]
 16960 0064 FFF7FEFF 		bl	__aeabi_i2d
 16961              	.LVL2084:
 16962 0068 0022     		movs	r2, #0
 16963 006a 0A4B     		ldr	r3, .L1216
 16964 006c FFF7FEFF 		bl	__aeabi_dmul
 16965              	.LVL2085:
6022:Core/Src/bno055.c ****         }
 16966              		.loc 1 6022 26 view .LVU4658
 16967 0070 C5E90201 		strd	r0, [r5, #8]
 16968              	.LVL2086:
 16969              	.L1211:
6034:Core/Src/bno055.c **** }
 16970              		.loc 1 6034 5 is_stmt 1 view .LVU4659
6035:Core/Src/bno055.c **** 
 16971              		.loc 1 6035 1 is_stmt 0 view .LVU4660
 16972 0074 2046     		mov	r0, r4
 16973 0076 05B0     		add	sp, sp, #20
 16974              	.LCFI547:
 16975              		.cfi_remember_state
ARM GAS  /tmp/ccO72alg.s 			page 488


 16976              		.cfi_def_cfa_offset 12
 16977              		@ sp needed
 16978 0078 30BD     		pop	{r4, r5, pc}
 16979              	.LVL2087:
 16980              	.L1215:
 16981              	.LCFI548:
 16982              		.cfi_restore_state
6011:Core/Src/bno055.c ****     }
 16983              		.loc 1 6011 9 is_stmt 1 view .LVU4661
6011:Core/Src/bno055.c ****     }
 16984              		.loc 1 6011 21 is_stmt 0 view .LVU4662
 16985 007a 0020     		movs	r0, #0
 16986 007c FFF7FEFF 		bl	bno055_set_euler_unit
 16987              	.LVL2088:
6011:Core/Src/bno055.c ****     }
 16988              		.loc 1 6011 18 view .LVU4663
 16989 0080 54FA80F4 		uxtab	r4, r4, r0
 16990              	.LVL2089:
6011:Core/Src/bno055.c ****     }
 16991              		.loc 1 6011 18 view .LVU4664
 16992 0084 64B2     		sxtb	r4, r4
 16993              	.LVL2090:
6011:Core/Src/bno055.c ****     }
 16994              		.loc 1 6011 18 view .LVU4665
 16995 0086 CFE7     		b	.L1210
 16996              	.L1212:
6031:Core/Src/bno055.c ****     }
 16997              		.loc 1 6031 18 view .LVU4666
 16998 0088 4FF0FF34 		mov	r4, #-1
 16999              	.LVL2091:
6031:Core/Src/bno055.c ****     }
 17000              		.loc 1 6031 18 view .LVU4667
 17001 008c F2E7     		b	.L1211
 17002              	.LVL2092:
 17003              	.L1213:
6026:Core/Src/bno055.c ****         }
 17004              		.loc 1 6026 22 view .LVU4668
 17005 008e 4FF0FF34 		mov	r4, #-1
 17006              	.LVL2093:
6026:Core/Src/bno055.c ****         }
 17007              		.loc 1 6026 22 view .LVU4669
 17008 0092 EFE7     		b	.L1211
 17009              	.L1217:
 17010              		.align	2
 17011              	.L1216:
 17012 0094 0000B03F 		.word	1068498944
 17013              		.cfi_endproc
 17014              	.LFE105:
 17016              		.section	.text.bno055_convert_double_euler_hpr_rad,"ax",%progbits
 17017              		.align	1
 17018              		.global	bno055_convert_double_euler_hpr_rad
 17019              		.syntax unified
 17020              		.thumb
 17021              		.thumb_func
 17023              	bno055_convert_double_euler_hpr_rad:
 17024              	.LVL2094:
 17025              	.LFB106:
ARM GAS  /tmp/ccO72alg.s 			page 489


6056:Core/Src/bno055.c ****     /* Variable used to return value of
 17026              		.loc 1 6056 1 is_stmt 1 view -0
 17027              		.cfi_startproc
 17028              		@ args = 0, pretend = 0, frame = 16
 17029              		@ frame_needed = 0, uses_anonymous_args = 0
6056:Core/Src/bno055.c ****     /* Variable used to return value of
 17030              		.loc 1 6056 1 is_stmt 0 view .LVU4671
 17031 0000 30B5     		push	{r4, r5, lr}
 17032              	.LCFI549:
 17033              		.cfi_def_cfa_offset 12
 17034              		.cfi_offset 4, -12
 17035              		.cfi_offset 5, -8
 17036              		.cfi_offset 14, -4
 17037 0002 85B0     		sub	sp, sp, #20
 17038              	.LCFI550:
 17039              		.cfi_def_cfa_offset 32
 17040 0004 0446     		mov	r4, r0
6059:Core/Src/bno055.c ****     struct bno055_euler_t reg_euler = { BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE };
 17041              		.loc 1 6059 5 is_stmt 1 view .LVU4672
 17042              	.LVL2095:
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17043              		.loc 1 6060 5 view .LVU4673
6060:Core/Src/bno055.c ****     u8 euler_unit_u8 = BNO055_INIT_VALUE;
 17044              		.loc 1 6060 27 is_stmt 0 view .LVU4674
 17045 0006 0023     		movs	r3, #0
 17046 0008 ADF80830 		strh	r3, [sp, #8]	@ movhi
 17047 000c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 17048 0010 ADF80C30 		strh	r3, [sp, #12]	@ movhi
6061:Core/Src/bno055.c **** 
 17049              		.loc 1 6061 5 is_stmt 1 view .LVU4675
6061:Core/Src/bno055.c **** 
 17050              		.loc 1 6061 8 is_stmt 0 view .LVU4676
 17051 0014 8DF80730 		strb	r3, [sp, #7]
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17052              		.loc 1 6065 5 is_stmt 1 view .LVU4677
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17053              		.loc 1 6065 16 is_stmt 0 view .LVU4678
 17054 0018 0DF10700 		add	r0, sp, #7
 17055              	.LVL2096:
6065:Core/Src/bno055.c ****     if (euler_unit_u8 != BNO055_EULER_UNIT_RAD)
 17056              		.loc 1 6065 16 view .LVU4679
 17057 001c FFF7FEFF 		bl	bno055_get_euler_unit
 17058              	.LVL2097:
6066:Core/Src/bno055.c ****     {
 17059              		.loc 1 6066 5 is_stmt 1 view .LVU4680
6066:Core/Src/bno055.c ****     {
 17060              		.loc 1 6066 23 is_stmt 0 view .LVU4681
 17061 0020 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
6066:Core/Src/bno055.c ****     {
 17062              		.loc 1 6066 8 view .LVU4682
 17063 0024 012B     		cmp	r3, #1
 17064 0026 26D1     		bne	.L1224
 17065              	.L1219:
6070:Core/Src/bno055.c ****     {
 17066              		.loc 1 6070 5 is_stmt 1 view .LVU4683
6070:Core/Src/bno055.c ****     {
 17067              		.loc 1 6070 8 is_stmt 0 view .LVU4684
ARM GAS  /tmp/ccO72alg.s 			page 490


 17068 0028 48BB     		cbnz	r0, .L1221
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17069              		.loc 1 6073 9 is_stmt 1 view .LVU4685
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17070              		.loc 1 6073 20 is_stmt 0 view .LVU4686
 17071 002a 02A8     		add	r0, sp, #8
 17072              	.LVL2098:
6073:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17073              		.loc 1 6073 20 view .LVU4687
 17074 002c FFF7FEFF 		bl	bno055_read_euler_hrp
 17075              	.LVL2099:
6074:Core/Src/bno055.c ****         {
 17076              		.loc 1 6074 9 is_stmt 1 view .LVU4688
6074:Core/Src/bno055.c ****         {
 17077              		.loc 1 6074 12 is_stmt 0 view .LVU4689
 17078 0030 0546     		mov	r5, r0
 17079 0032 38BB     		cbnz	r0, .L1222
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17080              		.loc 1 6077 13 is_stmt 1 view .LVU4690
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17081              		.loc 1 6077 28 is_stmt 0 view .LVU4691
 17082 0034 BDF90800 		ldrsh	r0, [sp, #8]
 17083              	.LVL2100:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17084              		.loc 1 6077 28 view .LVU4692
 17085 0038 FFF7FEFF 		bl	__aeabi_i2d
 17086              	.LVL2101:
 17087 003c 0022     		movs	r2, #0
 17088 003e 134B     		ldr	r3, .L1225
 17089 0040 FFF7FEFF 		bl	__aeabi_ddiv
 17090              	.LVL2102:
6077:Core/Src/bno055.c ****             euler_hpr->p = (double)(reg_euler.p / BNO055_EULER_DIV_RAD);
 17091              		.loc 1 6077 26 view .LVU4693
 17092 0044 C4E90001 		strd	r0, [r4]
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17093              		.loc 1 6078 13 is_stmt 1 view .LVU4694
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17094              		.loc 1 6078 28 is_stmt 0 view .LVU4695
 17095 0048 BDF90C00 		ldrsh	r0, [sp, #12]
 17096 004c FFF7FEFF 		bl	__aeabi_i2d
 17097              	.LVL2103:
 17098 0050 0022     		movs	r2, #0
 17099 0052 0E4B     		ldr	r3, .L1225
 17100 0054 FFF7FEFF 		bl	__aeabi_ddiv
 17101              	.LVL2104:
6078:Core/Src/bno055.c ****             euler_hpr->r = (double)(reg_euler.r / BNO055_EULER_DIV_RAD);
 17102              		.loc 1 6078 26 view .LVU4696
 17103 0058 C4E90401 		strd	r0, [r4, #16]
6079:Core/Src/bno055.c ****         }
 17104              		.loc 1 6079 13 is_stmt 1 view .LVU4697
6079:Core/Src/bno055.c ****         }
 17105              		.loc 1 6079 28 is_stmt 0 view .LVU4698
 17106 005c BDF90A00 		ldrsh	r0, [sp, #10]
 17107 0060 FFF7FEFF 		bl	__aeabi_i2d
 17108              	.LVL2105:
 17109 0064 0022     		movs	r2, #0
 17110 0066 094B     		ldr	r3, .L1225
ARM GAS  /tmp/ccO72alg.s 			page 491


 17111 0068 FFF7FEFF 		bl	__aeabi_ddiv
 17112              	.LVL2106:
6079:Core/Src/bno055.c ****         }
 17113              		.loc 1 6079 26 view .LVU4699
 17114 006c C4E90201 		strd	r0, [r4, #8]
 17115              	.L1220:
 17116              	.LVL2107:
6091:Core/Src/bno055.c **** }
 17117              		.loc 1 6091 5 is_stmt 1 view .LVU4700
6092:Core/Src/bno055.c **** 
 17118              		.loc 1 6092 1 is_stmt 0 view .LVU4701
 17119 0070 2846     		mov	r0, r5
 17120 0072 05B0     		add	sp, sp, #20
 17121              	.LCFI551:
 17122              		.cfi_remember_state
 17123              		.cfi_def_cfa_offset 12
 17124              		@ sp needed
 17125 0074 30BD     		pop	{r4, r5, pc}
 17126              	.LVL2108:
 17127              	.L1224:
 17128              	.LCFI552:
 17129              		.cfi_restore_state
6068:Core/Src/bno055.c ****     }
 17130              		.loc 1 6068 9 is_stmt 1 view .LVU4702
6068:Core/Src/bno055.c ****     }
 17131              		.loc 1 6068 20 is_stmt 0 view .LVU4703
 17132 0076 0120     		movs	r0, #1
 17133              	.LVL2109:
6068:Core/Src/bno055.c ****     }
 17134              		.loc 1 6068 20 view .LVU4704
 17135 0078 FFF7FEFF 		bl	bno055_set_euler_unit
 17136              	.LVL2110:
6068:Core/Src/bno055.c ****     }
 17137              		.loc 1 6068 20 view .LVU4705
 17138 007c D4E7     		b	.L1219
 17139              	.L1221:
6088:Core/Src/bno055.c ****     }
 17140              		.loc 1 6088 18 view .LVU4706
 17141 007e 4FF0FF35 		mov	r5, #-1
 17142 0082 F5E7     		b	.L1220
 17143              	.L1222:
6083:Core/Src/bno055.c ****         }
 17144              		.loc 1 6083 22 view .LVU4707
 17145 0084 4FF0FF35 		mov	r5, #-1
 17146 0088 F2E7     		b	.L1220
 17147              	.L1226:
 17148 008a 00BF     		.align	2
 17149              	.L1225:
 17150 008c 00208C40 		.word	1082925056
 17151              		.cfi_endproc
 17152              	.LFE106:
 17154              		.section	.text.bno055_set_tilt_unit,"ax",%progbits
 17155              		.align	1
 17156              		.global	bno055_set_tilt_unit
 17157              		.syntax unified
 17158              		.thumb
 17159              		.thumb_func
ARM GAS  /tmp/ccO72alg.s 			page 492


 17161              	bno055_set_tilt_unit:
 17162              	.LVL2111:
 17163              	.LFB140:
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17164              		.loc 1 7868 1 is_stmt 1 view -0
 17165              		.cfi_startproc
 17166              		@ args = 0, pretend = 0, frame = 8
 17167              		@ frame_needed = 0, uses_anonymous_args = 0
7868:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17168              		.loc 1 7868 1 is_stmt 0 view .LVU4709
 17169 0000 30B5     		push	{r4, r5, lr}
 17170              	.LCFI553:
 17171              		.cfi_def_cfa_offset 12
 17172              		.cfi_offset 4, -12
 17173              		.cfi_offset 5, -8
 17174              		.cfi_offset 14, -4
 17175 0002 83B0     		sub	sp, sp, #12
 17176              	.LCFI554:
 17177              		.cfi_def_cfa_offset 24
7869:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17178              		.loc 1 7869 5 is_stmt 1 view .LVU4710
 17179              	.LVL2112:
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17180              		.loc 1 7870 5 view .LVU4711
7870:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17181              		.loc 1 7870 8 is_stmt 0 view .LVU4712
 17182 0004 0023     		movs	r3, #0
 17183 0006 8DF80730 		strb	r3, [sp, #7]
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17184              		.loc 1 7871 5 is_stmt 1 view .LVU4713
7871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17185              		.loc 1 7871 8 is_stmt 0 view .LVU4714
 17186 000a 8DF80630 		strb	r3, [sp, #6]
7872:Core/Src/bno055.c **** 
 17187              		.loc 1 7872 5 is_stmt 1 view .LVU4715
 17188              	.LVL2113:
7875:Core/Src/bno055.c ****     {
 17189              		.loc 1 7875 5 view .LVU4716
7875:Core/Src/bno055.c ****     {
 17190              		.loc 1 7875 18 is_stmt 0 view .LVU4717
 17191 000e 264B     		ldr	r3, .L1237
 17192 0010 1B68     		ldr	r3, [r3]
7875:Core/Src/bno055.c ****     {
 17193              		.loc 1 7875 8 view .LVU4718
 17194 0012 002B     		cmp	r3, #0
 17195 0014 44D0     		beq	.L1231
 17196 0016 0546     		mov	r5, r0
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17197              		.loc 1 7884 9 is_stmt 1 view .LVU4719
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17198              		.loc 1 7884 19 is_stmt 0 view .LVU4720
 17199 0018 0DF10600 		add	r0, sp, #6
 17200              	.LVL2114:
7884:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17201              		.loc 1 7884 19 view .LVU4721
 17202 001c FFF7FEFF 		bl	bno055_get_operation_mode
 17203              	.LVL2115:
ARM GAS  /tmp/ccO72alg.s 			page 493


7885:Core/Src/bno055.c ****         {
 17204              		.loc 1 7885 9 is_stmt 1 view .LVU4722
7885:Core/Src/bno055.c ****         {
 17205              		.loc 1 7885 12 is_stmt 0 view .LVU4723
 17206 0020 0446     		mov	r4, r0
 17207 0022 60BB     		cbnz	r0, .L1232
7887:Core/Src/bno055.c ****             {
 17208              		.loc 1 7887 13 is_stmt 1 view .LVU4724
7887:Core/Src/bno055.c ****             {
 17209              		.loc 1 7887 32 is_stmt 0 view .LVU4725
 17210 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
7887:Core/Src/bno055.c ****             {
 17211              		.loc 1 7887 16 view .LVU4726
 17212 0028 1BBB     		cbnz	r3, .L1235
 17213              	.LVL2116:
 17214              	.L1230:
7891:Core/Src/bno055.c ****             {
 17215              		.loc 1 7891 13 is_stmt 1 view .LVU4727
7891:Core/Src/bno055.c ****             {
 17216              		.loc 1 7891 16 is_stmt 0 view .LVU4728
 17217 002a 84BB     		cbnz	r4, .L1233
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17218              		.loc 1 7893 17 is_stmt 1 view .LVU4729
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17219              		.loc 1 7893 36 is_stmt 0 view .LVU4730
 17220 002c 1E4B     		ldr	r3, .L1237
 17221 002e 1868     		ldr	r0, [r3]
 17222 0030 0469     		ldr	r4, [r0, #16]
 17223              	.LVL2117:
7893:Core/Src/bno055.c ****                                                           BNO055_TILT_UNIT_REG,
 17224              		.loc 1 7893 28 view .LVU4731
 17225 0032 0123     		movs	r3, #1
 17226 0034 0DF10702 		add	r2, sp, #7
 17227 0038 3B21     		movs	r1, #59
 17228 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17229 003c A047     		blx	r4
 17230              	.LVL2118:
7897:Core/Src/bno055.c ****                 {
 17231              		.loc 1 7897 17 is_stmt 1 view .LVU4732
7897:Core/Src/bno055.c ****                 {
 17232              		.loc 1 7897 20 is_stmt 0 view .LVU4733
 17233 003e 0446     		mov	r4, r0
 17234 0040 F8B9     		cbnz	r0, .L1229
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17235              		.loc 1 7899 21 is_stmt 1 view .LVU4734
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17236              		.loc 1 7899 32 is_stmt 0 view .LVU4735
 17237 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 17238              	.LVL2119:
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17239              		.loc 1 7899 32 view .LVU4736
 17240 0046 20F00800 		bic	r0, r0, #8
 17241 004a 43B2     		sxtb	r3, r0
 17242 004c E800     		lsls	r0, r5, #3
 17243 004e 00F00800 		and	r0, r0, #8
 17244 0052 1843     		orrs	r0, r0, r3
7899:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 494


 17245              		.loc 1 7899 30 view .LVU4737
 17246 0054 8DF80700 		strb	r0, [sp, #7]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17247              		.loc 1 7900 21 is_stmt 1 view .LVU4738
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17248              		.loc 1 7900 41 is_stmt 0 view .LVU4739
 17249 0058 134B     		ldr	r3, .L1237
 17250 005a 1868     		ldr	r0, [r3]
 17251 005c C568     		ldr	r5, [r0, #12]
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17252              		.loc 1 7900 33 view .LVU4740
 17253 005e 0123     		movs	r3, #1
 17254 0060 0DF10702 		add	r2, sp, #7
 17255 0064 3B21     		movs	r1, #59
 17256 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17257 0068 A847     		blx	r5
 17258              	.LVL2120:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17259              		.loc 1 7900 30 view .LVU4741
 17260 006a 54FA80F4 		uxtab	r4, r4, r0
 17261 006e 64B2     		sxtb	r4, r4
 17262              	.LVL2121:
7900:Core/Src/bno055.c ****                                                                 BNO055_TILT_UNIT_REG,
 17263              		.loc 1 7900 30 view .LVU4742
 17264 0070 07E0     		b	.L1229
 17265              	.LVL2122:
 17266              	.L1235:
7889:Core/Src/bno055.c ****             }
 17267              		.loc 1 7889 17 is_stmt 1 view .LVU4743
7889:Core/Src/bno055.c ****             }
 17268              		.loc 1 7889 28 is_stmt 0 view .LVU4744
 17269 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 17270              	.LVL2123:
7889:Core/Src/bno055.c ****             }
 17271              		.loc 1 7889 25 view .LVU4745
 17272 0076 54FA80F4 		uxtab	r4, r4, r0
 17273 007a 64B2     		sxtb	r4, r4
 17274              	.LVL2124:
7889:Core/Src/bno055.c ****             }
 17275              		.loc 1 7889 25 view .LVU4746
 17276 007c D5E7     		b	.L1230
 17277              	.LVL2125:
 17278              	.L1232:
7913:Core/Src/bno055.c ****         }
 17279              		.loc 1 7913 22 view .LVU4747
 17280 007e 4FF0FF34 		mov	r4, #-1
 17281              	.LVL2126:
 17282              	.L1229:
7916:Core/Src/bno055.c ****     {
 17283              		.loc 1 7916 5 is_stmt 1 view .LVU4748
7916:Core/Src/bno055.c ****     {
 17284              		.loc 1 7916 24 is_stmt 0 view .LVU4749
 17285 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
7916:Core/Src/bno055.c ****     {
 17286              		.loc 1 7916 8 view .LVU4750
 17287 0086 28B9     		cbnz	r0, .L1236
 17288              	.LVL2127:
ARM GAS  /tmp/ccO72alg.s 			page 495


 17289              	.L1228:
7924:Core/Src/bno055.c **** 
 17290              		.loc 1 7924 1 view .LVU4751
 17291 0088 2046     		mov	r0, r4
 17292 008a 03B0     		add	sp, sp, #12
 17293              	.LCFI555:
 17294              		.cfi_remember_state
 17295              		.cfi_def_cfa_offset 12
 17296              		@ sp needed
 17297 008c 30BD     		pop	{r4, r5, pc}
 17298              	.LVL2128:
 17299              	.L1233:
 17300              	.LCFI556:
 17301              		.cfi_restore_state
7908:Core/Src/bno055.c ****             }
 17302              		.loc 1 7908 26 view .LVU4752
 17303 008e 4FF0FF34 		mov	r4, #-1
 17304              	.LVL2129:
7908:Core/Src/bno055.c ****             }
 17305              		.loc 1 7908 26 view .LVU4753
 17306 0092 F6E7     		b	.L1229
 17307              	.LVL2130:
 17308              	.L1236:
7920:Core/Src/bno055.c ****     }
 17309              		.loc 1 7920 9 is_stmt 1 view .LVU4754
7920:Core/Src/bno055.c ****     }
 17310              		.loc 1 7920 21 is_stmt 0 view .LVU4755
 17311 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 17312              	.LVL2131:
7920:Core/Src/bno055.c ****     }
 17313              		.loc 1 7920 18 view .LVU4756
 17314 0098 54FA80F4 		uxtab	r4, r4, r0
 17315              	.LVL2132:
7920:Core/Src/bno055.c ****     }
 17316              		.loc 1 7920 18 view .LVU4757
 17317 009c 64B2     		sxtb	r4, r4
 17318              	.LVL2133:
7920:Core/Src/bno055.c ****     }
 17319              		.loc 1 7920 18 view .LVU4758
 17320 009e F3E7     		b	.L1228
 17321              	.LVL2134:
 17322              	.L1231:
7877:Core/Src/bno055.c ****     }
 17323              		.loc 1 7877 16 view .LVU4759
 17324 00a0 6FF07E04 		mvn	r4, #126
 17325 00a4 F0E7     		b	.L1228
 17326              	.L1238:
 17327 00a6 00BF     		.align	2
 17328              	.L1237:
 17329 00a8 00000000 		.word	.LANCHOR0
 17330              		.cfi_endproc
 17331              	.LFE140:
 17333              		.section	.text.bno055_set_temp_unit,"ax",%progbits
 17334              		.align	1
 17335              		.global	bno055_set_temp_unit
 17336              		.syntax unified
 17337              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 496


 17338              		.thumb_func
 17340              	bno055_set_temp_unit:
 17341              	.LVL2135:
 17342              	.LFB142:
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17343              		.loc 1 8000 1 is_stmt 1 view -0
 17344              		.cfi_startproc
 17345              		@ args = 0, pretend = 0, frame = 8
 17346              		@ frame_needed = 0, uses_anonymous_args = 0
8000:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17347              		.loc 1 8000 1 is_stmt 0 view .LVU4761
 17348 0000 30B5     		push	{r4, r5, lr}
 17349              	.LCFI557:
 17350              		.cfi_def_cfa_offset 12
 17351              		.cfi_offset 4, -12
 17352              		.cfi_offset 5, -8
 17353              		.cfi_offset 14, -4
 17354 0002 83B0     		sub	sp, sp, #12
 17355              	.LCFI558:
 17356              		.cfi_def_cfa_offset 24
8001:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 17357              		.loc 1 8001 5 is_stmt 1 view .LVU4762
 17358              	.LVL2136:
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17359              		.loc 1 8002 5 view .LVU4763
8002:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 17360              		.loc 1 8002 8 is_stmt 0 view .LVU4764
 17361 0004 0023     		movs	r3, #0
 17362 0006 8DF80730 		strb	r3, [sp, #7]
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17363              		.loc 1 8003 5 is_stmt 1 view .LVU4765
8003:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 17364              		.loc 1 8003 8 is_stmt 0 view .LVU4766
 17365 000a 8DF80630 		strb	r3, [sp, #6]
8004:Core/Src/bno055.c **** 
 17366              		.loc 1 8004 5 is_stmt 1 view .LVU4767
 17367              	.LVL2137:
8007:Core/Src/bno055.c ****     {
 17368              		.loc 1 8007 5 view .LVU4768
8007:Core/Src/bno055.c ****     {
 17369              		.loc 1 8007 18 is_stmt 0 view .LVU4769
 17370 000e 264B     		ldr	r3, .L1249
 17371 0010 1B68     		ldr	r3, [r3]
8007:Core/Src/bno055.c ****     {
 17372              		.loc 1 8007 8 view .LVU4770
 17373 0012 002B     		cmp	r3, #0
 17374 0014 44D0     		beq	.L1243
 17375 0016 0546     		mov	r5, r0
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17376              		.loc 1 8016 9 is_stmt 1 view .LVU4771
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17377              		.loc 1 8016 19 is_stmt 0 view .LVU4772
 17378 0018 0DF10600 		add	r0, sp, #6
 17379              	.LVL2138:
8016:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 17380              		.loc 1 8016 19 view .LVU4773
 17381 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccO72alg.s 			page 497


 17382              	.LVL2139:
8017:Core/Src/bno055.c ****         {
 17383              		.loc 1 8017 9 is_stmt 1 view .LVU4774
8017:Core/Src/bno055.c ****         {
 17384              		.loc 1 8017 12 is_stmt 0 view .LVU4775
 17385 0020 0446     		mov	r4, r0
 17386 0022 60BB     		cbnz	r0, .L1244
8019:Core/Src/bno055.c ****             {
 17387              		.loc 1 8019 13 is_stmt 1 view .LVU4776
8019:Core/Src/bno055.c ****             {
 17388              		.loc 1 8019 32 is_stmt 0 view .LVU4777
 17389 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8019:Core/Src/bno055.c ****             {
 17390              		.loc 1 8019 16 view .LVU4778
 17391 0028 1BBB     		cbnz	r3, .L1247
 17392              	.LVL2140:
 17393              	.L1242:
8023:Core/Src/bno055.c ****             {
 17394              		.loc 1 8023 13 is_stmt 1 view .LVU4779
8023:Core/Src/bno055.c ****             {
 17395              		.loc 1 8023 16 is_stmt 0 view .LVU4780
 17396 002a 84BB     		cbnz	r4, .L1245
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17397              		.loc 1 8026 17 is_stmt 1 view .LVU4781
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17398              		.loc 1 8026 36 is_stmt 0 view .LVU4782
 17399 002c 1E4B     		ldr	r3, .L1249
 17400 002e 1868     		ldr	r0, [r3]
 17401 0030 0469     		ldr	r4, [r0, #16]
 17402              	.LVL2141:
8026:Core/Src/bno055.c ****                                                           BNO055_TEMP_UNIT_REG,
 17403              		.loc 1 8026 28 view .LVU4783
 17404 0032 0123     		movs	r3, #1
 17405 0034 0DF10702 		add	r2, sp, #7
 17406 0038 3B21     		movs	r1, #59
 17407 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17408 003c A047     		blx	r4
 17409              	.LVL2142:
8030:Core/Src/bno055.c ****                 {
 17410              		.loc 1 8030 17 is_stmt 1 view .LVU4784
8030:Core/Src/bno055.c ****                 {
 17411              		.loc 1 8030 20 is_stmt 0 view .LVU4785
 17412 003e 0446     		mov	r4, r0
 17413 0040 F8B9     		cbnz	r0, .L1241
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17414              		.loc 1 8032 21 is_stmt 1 view .LVU4786
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17415              		.loc 1 8032 32 is_stmt 0 view .LVU4787
 17416 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 17417              	.LVL2143:
8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17418              		.loc 1 8032 32 view .LVU4788
 17419 0046 20F01000 		bic	r0, r0, #16
 17420 004a 43B2     		sxtb	r3, r0
 17421 004c 2801     		lsls	r0, r5, #4
 17422 004e 00F01000 		and	r0, r0, #16
 17423 0052 1843     		orrs	r0, r0, r3
ARM GAS  /tmp/ccO72alg.s 			page 498


8032:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 17424              		.loc 1 8032 30 view .LVU4789
 17425 0054 8DF80700 		strb	r0, [sp, #7]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17426              		.loc 1 8033 21 is_stmt 1 view .LVU4790
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17427              		.loc 1 8033 41 is_stmt 0 view .LVU4791
 17428 0058 134B     		ldr	r3, .L1249
 17429 005a 1868     		ldr	r0, [r3]
 17430 005c C568     		ldr	r5, [r0, #12]
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17431              		.loc 1 8033 33 view .LVU4792
 17432 005e 0123     		movs	r3, #1
 17433 0060 0DF10702 		add	r2, sp, #7
 17434 0064 3B21     		movs	r1, #59
 17435 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 17436 0068 A847     		blx	r5
 17437              	.LVL2144:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17438              		.loc 1 8033 30 view .LVU4793
 17439 006a 54FA80F4 		uxtab	r4, r4, r0
 17440 006e 64B2     		sxtb	r4, r4
 17441              	.LVL2145:
8033:Core/Src/bno055.c ****                                                                 BNO055_TEMP_UNIT_REG,
 17442              		.loc 1 8033 30 view .LVU4794
 17443 0070 07E0     		b	.L1241
 17444              	.LVL2146:
 17445              	.L1247:
8021:Core/Src/bno055.c ****             }
 17446              		.loc 1 8021 17 is_stmt 1 view .LVU4795
8021:Core/Src/bno055.c ****             }
 17447              		.loc 1 8021 28 is_stmt 0 view .LVU4796
 17448 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 17449              	.LVL2147:
8021:Core/Src/bno055.c ****             }
 17450              		.loc 1 8021 25 view .LVU4797
 17451 0076 54FA80F4 		uxtab	r4, r4, r0
 17452 007a 64B2     		sxtb	r4, r4
 17453              	.LVL2148:
8021:Core/Src/bno055.c ****             }
 17454              		.loc 1 8021 25 view .LVU4798
 17455 007c D5E7     		b	.L1242
 17456              	.LVL2149:
 17457              	.L1244:
8046:Core/Src/bno055.c ****         }
 17458              		.loc 1 8046 22 view .LVU4799
 17459 007e 4FF0FF34 		mov	r4, #-1
 17460              	.LVL2150:
 17461              	.L1241:
8049:Core/Src/bno055.c ****     {
 17462              		.loc 1 8049 5 is_stmt 1 view .LVU4800
8049:Core/Src/bno055.c ****     {
 17463              		.loc 1 8049 24 is_stmt 0 view .LVU4801
 17464 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8049:Core/Src/bno055.c ****     {
 17465              		.loc 1 8049 8 view .LVU4802
 17466 0086 28B9     		cbnz	r0, .L1248
ARM GAS  /tmp/ccO72alg.s 			page 499


 17467              	.LVL2151:
 17468              	.L1240:
8057:Core/Src/bno055.c **** 
 17469              		.loc 1 8057 1 view .LVU4803
 17470 0088 2046     		mov	r0, r4
 17471 008a 03B0     		add	sp, sp, #12
 17472              	.LCFI559:
 17473              		.cfi_remember_state
 17474              		.cfi_def_cfa_offset 12
 17475              		@ sp needed
 17476 008c 30BD     		pop	{r4, r5, pc}
 17477              	.LVL2152:
 17478              	.L1245:
 17479              	.LCFI560:
 17480              		.cfi_restore_state
8041:Core/Src/bno055.c ****             }
 17481              		.loc 1 8041 26 view .LVU4804
 17482 008e 4FF0FF34 		mov	r4, #-1
 17483              	.LVL2153:
8041:Core/Src/bno055.c ****             }
 17484              		.loc 1 8041 26 view .LVU4805
 17485 0092 F6E7     		b	.L1241
 17486              	.LVL2154:
 17487              	.L1248:
8053:Core/Src/bno055.c ****     }
 17488              		.loc 1 8053 9 is_stmt 1 view .LVU4806
8053:Core/Src/bno055.c ****     }
 17489              		.loc 1 8053 21 is_stmt 0 view .LVU4807
 17490 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 17491              	.LVL2155:
8053:Core/Src/bno055.c ****     }
 17492              		.loc 1 8053 18 view .LVU4808
 17493 0098 54FA80F4 		uxtab	r4, r4, r0
 17494              	.LVL2156:
8053:Core/Src/bno055.c ****     }
 17495              		.loc 1 8053 18 view .LVU4809
 17496 009c 64B2     		sxtb	r4, r4
 17497              	.LVL2157:
8053:Core/Src/bno055.c ****     }
 17498              		.loc 1 8053 18 view .LVU4810
 17499 009e F3E7     		b	.L1240
 17500              	.LVL2158:
 17501              	.L1243:
8009:Core/Src/bno055.c ****     }
 17502              		.loc 1 8009 16 view .LVU4811
 17503 00a0 6FF07E04 		mvn	r4, #126
 17504 00a4 F0E7     		b	.L1240
 17505              	.L1250:
 17506 00a6 00BF     		.align	2
 17507              	.L1249:
 17508 00a8 00000000 		.word	.LANCHOR0
 17509              		.cfi_endproc
 17510              	.LFE142:
 17512              		.global	__aeabi_dadd
 17513              		.section	.text.bno055_convert_float_temp_fahrenheit,"ax",%progbits
 17514              		.align	1
 17515              		.global	bno055_convert_float_temp_fahrenheit
ARM GAS  /tmp/ccO72alg.s 			page 500


 17516              		.syntax unified
 17517              		.thumb
 17518              		.thumb_func
 17520              	bno055_convert_float_temp_fahrenheit:
 17521              	.LVL2159:
 17522              	.LFB77:
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 17523              		.loc 1 4573 1 is_stmt 1 view -0
 17524              		.cfi_startproc
 17525              		@ args = 0, pretend = 0, frame = 8
 17526              		@ frame_needed = 0, uses_anonymous_args = 0
4573:Core/Src/bno055.c ****     /* Variable used to return value of
 17527              		.loc 1 4573 1 is_stmt 0 view .LVU4813
 17528 0000 30B5     		push	{r4, r5, lr}
 17529              	.LCFI561:
 17530              		.cfi_def_cfa_offset 12
 17531              		.cfi_offset 4, -12
 17532              		.cfi_offset 5, -8
 17533              		.cfi_offset 14, -4
 17534 0002 83B0     		sub	sp, sp, #12
 17535              	.LCFI562:
 17536              		.cfi_def_cfa_offset 24
 17537 0004 0546     		mov	r5, r0
4576:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17538              		.loc 1 4576 5 is_stmt 1 view .LVU4814
 17539              	.LVL2160:
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17540              		.loc 1 4577 5 view .LVU4815
4577:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17541              		.loc 1 4577 8 is_stmt 0 view .LVU4816
 17542 0006 0023     		movs	r3, #0
 17543 0008 8DF80730 		strb	r3, [sp, #7]
4578:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17544              		.loc 1 4578 5 is_stmt 1 view .LVU4817
 17545              	.LVL2161:
4579:Core/Src/bno055.c **** 
 17546              		.loc 1 4579 5 view .LVU4818
4579:Core/Src/bno055.c **** 
 17547              		.loc 1 4579 8 is_stmt 0 view .LVU4819
 17548 000c 8DF80630 		strb	r3, [sp, #6]
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17549              		.loc 1 4583 5 is_stmt 1 view .LVU4820
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17550              		.loc 1 4583 16 is_stmt 0 view .LVU4821
 17551 0010 0DF10600 		add	r0, sp, #6
 17552              	.LVL2162:
4583:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17553              		.loc 1 4583 16 view .LVU4822
 17554 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17555              	.LVL2163:
 17556 0018 0446     		mov	r4, r0
 17557              	.LVL2164:
4584:Core/Src/bno055.c ****     {
 17558              		.loc 1 4584 5 is_stmt 1 view .LVU4823
4584:Core/Src/bno055.c ****     {
 17559              		.loc 1 4584 22 is_stmt 0 view .LVU4824
 17560 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 501


4584:Core/Src/bno055.c ****     {
 17561              		.loc 1 4584 8 view .LVU4825
 17562 001e 012B     		cmp	r3, #1
 17563 0020 16D1     		bne	.L1257
 17564              	.L1252:
4588:Core/Src/bno055.c ****     {
 17565              		.loc 1 4588 5 is_stmt 1 view .LVU4826
4588:Core/Src/bno055.c ****     {
 17566              		.loc 1 4588 8 is_stmt 0 view .LVU4827
 17567 0022 E4B9     		cbnz	r4, .L1254
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17568              		.loc 1 4591 9 is_stmt 1 view .LVU4828
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17569              		.loc 1 4591 21 is_stmt 0 view .LVU4829
 17570 0024 0DF10700 		add	r0, sp, #7
 17571 0028 FFF7FEFF 		bl	bno055_read_temp_data
 17572              	.LVL2165:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17573              		.loc 1 4591 18 view .LVU4830
 17574 002c 54FA80F4 		uxtab	r4, r4, r0
 17575              	.LVL2166:
4591:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17576              		.loc 1 4591 18 view .LVU4831
 17577 0030 64B2     		sxtb	r4, r4
 17578              	.LVL2167:
4592:Core/Src/bno055.c ****         {
 17579              		.loc 1 4592 9 is_stmt 1 view .LVU4832
4592:Core/Src/bno055.c ****         {
 17580              		.loc 1 4592 12 is_stmt 0 view .LVU4833
 17581 0032 BCB9     		cbnz	r4, .L1255
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17582              		.loc 1 4595 13 is_stmt 1 view .LVU4834
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17583              		.loc 1 4595 42 is_stmt 0 view .LVU4835
 17584 0034 9DF90700 		ldrsb	r0, [sp, #7]
 17585 0038 FFF7FEFF 		bl	__aeabi_i2d
 17586              	.LVL2168:
 17587 003c 0246     		mov	r2, r0
 17588 003e 0B46     		mov	r3, r1
 17589 0040 FFF7FEFF 		bl	__aeabi_dadd
 17590              	.LVL2169:
4595:Core/Src/bno055.c ****             *temp_f = data_f;
 17591              		.loc 1 4595 20 view .LVU4836
 17592 0044 FFF7FEFF 		bl	__aeabi_d2f
 17593              	.LVL2170:
4596:Core/Src/bno055.c ****         }
 17594              		.loc 1 4596 13 is_stmt 1 view .LVU4837
4596:Core/Src/bno055.c ****         }
 17595              		.loc 1 4596 21 is_stmt 0 view .LVU4838
 17596 0048 2860     		str	r0, [r5]	@ float
 17597              	.LVL2171:
 17598              	.L1253:
4608:Core/Src/bno055.c **** }
 17599              		.loc 1 4608 5 is_stmt 1 view .LVU4839
4609:Core/Src/bno055.c **** 
 17600              		.loc 1 4609 1 is_stmt 0 view .LVU4840
 17601 004a 2046     		mov	r0, r4
ARM GAS  /tmp/ccO72alg.s 			page 502


 17602 004c 03B0     		add	sp, sp, #12
 17603              	.LCFI563:
 17604              		.cfi_remember_state
 17605              		.cfi_def_cfa_offset 12
 17606              		@ sp needed
 17607 004e 30BD     		pop	{r4, r5, pc}
 17608              	.LVL2172:
 17609              	.L1257:
 17610              	.LCFI564:
 17611              		.cfi_restore_state
4586:Core/Src/bno055.c ****     }
 17612              		.loc 1 4586 9 is_stmt 1 view .LVU4841
4586:Core/Src/bno055.c ****     }
 17613              		.loc 1 4586 21 is_stmt 0 view .LVU4842
 17614 0050 0120     		movs	r0, #1
 17615 0052 FFF7FEFF 		bl	bno055_set_temp_unit
 17616              	.LVL2173:
4586:Core/Src/bno055.c ****     }
 17617              		.loc 1 4586 18 view .LVU4843
 17618 0056 54FA80F4 		uxtab	r4, r4, r0
 17619              	.LVL2174:
4586:Core/Src/bno055.c ****     }
 17620              		.loc 1 4586 18 view .LVU4844
 17621 005a 64B2     		sxtb	r4, r4
 17622              	.LVL2175:
4586:Core/Src/bno055.c ****     }
 17623              		.loc 1 4586 18 view .LVU4845
 17624 005c E1E7     		b	.L1252
 17625              	.L1254:
4605:Core/Src/bno055.c ****     }
 17626              		.loc 1 4605 18 view .LVU4846
 17627 005e 4FF0FF34 		mov	r4, #-1
 17628              	.LVL2176:
4605:Core/Src/bno055.c ****     }
 17629              		.loc 1 4605 18 view .LVU4847
 17630 0062 F2E7     		b	.L1253
 17631              	.LVL2177:
 17632              	.L1255:
4600:Core/Src/bno055.c ****         }
 17633              		.loc 1 4600 22 view .LVU4848
 17634 0064 4FF0FF34 		mov	r4, #-1
 17635              	.LVL2178:
4600:Core/Src/bno055.c ****         }
 17636              		.loc 1 4600 22 view .LVU4849
 17637 0068 EFE7     		b	.L1253
 17638              		.cfi_endproc
 17639              	.LFE77:
 17641              		.section	.text.bno055_convert_float_temp_celsius,"ax",%progbits
 17642              		.align	1
 17643              		.global	bno055_convert_float_temp_celsius
 17644              		.syntax unified
 17645              		.thumb
 17646              		.thumb_func
 17648              	bno055_convert_float_temp_celsius:
 17649              	.LVL2179:
 17650              	.LFB78:
4625:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccO72alg.s 			page 503


 17651              		.loc 1 4625 1 is_stmt 1 view -0
 17652              		.cfi_startproc
 17653              		@ args = 0, pretend = 0, frame = 8
 17654              		@ frame_needed = 0, uses_anonymous_args = 0
4625:Core/Src/bno055.c ****     /* Variable used to return value of
 17655              		.loc 1 4625 1 is_stmt 0 view .LVU4851
 17656 0000 30B5     		push	{r4, r5, lr}
 17657              	.LCFI565:
 17658              		.cfi_def_cfa_offset 12
 17659              		.cfi_offset 4, -12
 17660              		.cfi_offset 5, -8
 17661              		.cfi_offset 14, -4
 17662 0002 83B0     		sub	sp, sp, #12
 17663              	.LCFI566:
 17664              		.cfi_def_cfa_offset 24
 17665 0004 0546     		mov	r5, r0
4628:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17666              		.loc 1 4628 5 is_stmt 1 view .LVU4852
 17667              	.LVL2180:
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17668              		.loc 1 4629 5 view .LVU4853
4629:Core/Src/bno055.c ****     float data_f = BNO055_INIT_VALUE;
 17669              		.loc 1 4629 8 is_stmt 0 view .LVU4854
 17670 0006 0023     		movs	r3, #0
 17671 0008 8DF80730 		strb	r3, [sp, #7]
4630:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17672              		.loc 1 4630 5 is_stmt 1 view .LVU4855
 17673              	.LVL2181:
4631:Core/Src/bno055.c **** 
 17674              		.loc 1 4631 5 view .LVU4856
4631:Core/Src/bno055.c **** 
 17675              		.loc 1 4631 8 is_stmt 0 view .LVU4857
 17676 000c 8DF80630 		strb	r3, [sp, #6]
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17677              		.loc 1 4635 5 is_stmt 1 view .LVU4858
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17678              		.loc 1 4635 16 is_stmt 0 view .LVU4859
 17679 0010 0DF10600 		add	r0, sp, #6
 17680              	.LVL2182:
4635:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17681              		.loc 1 4635 16 view .LVU4860
 17682 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17683              	.LVL2183:
 17684 0018 0446     		mov	r4, r0
 17685              	.LVL2184:
4636:Core/Src/bno055.c ****     {
 17686              		.loc 1 4636 5 is_stmt 1 view .LVU4861
4636:Core/Src/bno055.c ****     {
 17687              		.loc 1 4636 22 is_stmt 0 view .LVU4862
 17688 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
4636:Core/Src/bno055.c ****     {
 17689              		.loc 1 4636 8 view .LVU4863
 17690 001e 93B9     		cbnz	r3, .L1264
 17691              	.L1259:
4640:Core/Src/bno055.c ****     {
 17692              		.loc 1 4640 5 is_stmt 1 view .LVU4864
4640:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 504


 17693              		.loc 1 4640 8 is_stmt 0 view .LVU4865
 17694 0020 C4B9     		cbnz	r4, .L1261
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17695              		.loc 1 4643 9 is_stmt 1 view .LVU4866
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17696              		.loc 1 4643 21 is_stmt 0 view .LVU4867
 17697 0022 0DF10700 		add	r0, sp, #7
 17698 0026 FFF7FEFF 		bl	bno055_read_temp_data
 17699              	.LVL2185:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17700              		.loc 1 4643 18 view .LVU4868
 17701 002a 54FA80F4 		uxtab	r4, r4, r0
 17702              	.LVL2186:
4643:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17703              		.loc 1 4643 18 view .LVU4869
 17704 002e 64B2     		sxtb	r4, r4
 17705              	.LVL2187:
4644:Core/Src/bno055.c ****         {
 17706              		.loc 1 4644 9 is_stmt 1 view .LVU4870
4644:Core/Src/bno055.c ****         {
 17707              		.loc 1 4644 12 is_stmt 0 view .LVU4871
 17708 0030 9CB9     		cbnz	r4, .L1262
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17709              		.loc 1 4647 13 is_stmt 1 view .LVU4872
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17710              		.loc 1 4647 42 is_stmt 0 view .LVU4873
 17711 0032 9DF90700 		ldrsb	r0, [sp, #7]
 17712 0036 FFF7FEFF 		bl	__aeabi_i2d
 17713              	.LVL2188:
4647:Core/Src/bno055.c ****             *temp_f = data_f;
 17714              		.loc 1 4647 20 view .LVU4874
 17715 003a FFF7FEFF 		bl	__aeabi_d2f
 17716              	.LVL2189:
4648:Core/Src/bno055.c ****         }
 17717              		.loc 1 4648 13 is_stmt 1 view .LVU4875
4648:Core/Src/bno055.c ****         }
 17718              		.loc 1 4648 21 is_stmt 0 view .LVU4876
 17719 003e 2860     		str	r0, [r5]	@ float
 17720              	.LVL2190:
 17721              	.L1260:
4660:Core/Src/bno055.c **** }
 17722              		.loc 1 4660 5 is_stmt 1 view .LVU4877
4661:Core/Src/bno055.c **** #endif
 17723              		.loc 1 4661 1 is_stmt 0 view .LVU4878
 17724 0040 2046     		mov	r0, r4
 17725 0042 03B0     		add	sp, sp, #12
 17726              	.LCFI567:
 17727              		.cfi_remember_state
 17728              		.cfi_def_cfa_offset 12
 17729              		@ sp needed
 17730 0044 30BD     		pop	{r4, r5, pc}
 17731              	.LVL2191:
 17732              	.L1264:
 17733              	.LCFI568:
 17734              		.cfi_restore_state
4638:Core/Src/bno055.c ****     }
 17735              		.loc 1 4638 9 is_stmt 1 view .LVU4879
ARM GAS  /tmp/ccO72alg.s 			page 505


4638:Core/Src/bno055.c ****     }
 17736              		.loc 1 4638 21 is_stmt 0 view .LVU4880
 17737 0046 0020     		movs	r0, #0
 17738 0048 FFF7FEFF 		bl	bno055_set_temp_unit
 17739              	.LVL2192:
4638:Core/Src/bno055.c ****     }
 17740              		.loc 1 4638 18 view .LVU4881
 17741 004c 54FA80F4 		uxtab	r4, r4, r0
 17742              	.LVL2193:
4638:Core/Src/bno055.c ****     }
 17743              		.loc 1 4638 18 view .LVU4882
 17744 0050 64B2     		sxtb	r4, r4
 17745              	.LVL2194:
4638:Core/Src/bno055.c ****     }
 17746              		.loc 1 4638 18 view .LVU4883
 17747 0052 E5E7     		b	.L1259
 17748              	.L1261:
4657:Core/Src/bno055.c ****     }
 17749              		.loc 1 4657 18 view .LVU4884
 17750 0054 4FF0FF34 		mov	r4, #-1
 17751              	.LVL2195:
4657:Core/Src/bno055.c ****     }
 17752              		.loc 1 4657 18 view .LVU4885
 17753 0058 F2E7     		b	.L1260
 17754              	.LVL2196:
 17755              	.L1262:
4652:Core/Src/bno055.c ****         }
 17756              		.loc 1 4652 22 view .LVU4886
 17757 005a 4FF0FF34 		mov	r4, #-1
 17758              	.LVL2197:
4652:Core/Src/bno055.c ****         }
 17759              		.loc 1 4652 22 view .LVU4887
 17760 005e EFE7     		b	.L1260
 17761              		.cfi_endproc
 17762              	.LFE78:
 17764              		.section	.text.bno055_convert_double_temp_fahrenheit,"ax",%progbits
 17765              		.align	1
 17766              		.global	bno055_convert_double_temp_fahrenheit
 17767              		.syntax unified
 17768              		.thumb
 17769              		.thumb_func
 17771              	bno055_convert_double_temp_fahrenheit:
 17772              	.LVL2198:
 17773              	.LFB115:
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17774              		.loc 1 6399 1 is_stmt 1 view -0
 17775              		.cfi_startproc
 17776              		@ args = 0, pretend = 0, frame = 8
 17777              		@ frame_needed = 0, uses_anonymous_args = 0
6399:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17778              		.loc 1 6399 1 is_stmt 0 view .LVU4889
 17779 0000 30B5     		push	{r4, r5, lr}
 17780              	.LCFI569:
 17781              		.cfi_def_cfa_offset 12
 17782              		.cfi_offset 4, -12
 17783              		.cfi_offset 5, -8
 17784              		.cfi_offset 14, -4
ARM GAS  /tmp/ccO72alg.s 			page 506


 17785 0002 83B0     		sub	sp, sp, #12
 17786              	.LCFI570:
 17787              		.cfi_def_cfa_offset 24
 17788 0004 0546     		mov	r5, r0
6400:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17789              		.loc 1 6400 5 is_stmt 1 view .LVU4890
 17790              	.LVL2199:
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17791              		.loc 1 6401 5 view .LVU4891
6401:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17792              		.loc 1 6401 8 is_stmt 0 view .LVU4892
 17793 0006 0023     		movs	r3, #0
 17794 0008 8DF80730 		strb	r3, [sp, #7]
6402:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17795              		.loc 1 6402 5 is_stmt 1 view .LVU4893
 17796              	.LVL2200:
6403:Core/Src/bno055.c **** 
 17797              		.loc 1 6403 5 view .LVU4894
6403:Core/Src/bno055.c **** 
 17798              		.loc 1 6403 8 is_stmt 0 view .LVU4895
 17799 000c 8DF80630 		strb	r3, [sp, #6]
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17800              		.loc 1 6407 5 is_stmt 1 view .LVU4896
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17801              		.loc 1 6407 16 is_stmt 0 view .LVU4897
 17802 0010 0DF10600 		add	r0, sp, #6
 17803              	.LVL2201:
6407:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_FAHRENHEIT)
 17804              		.loc 1 6407 16 view .LVU4898
 17805 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17806              	.LVL2202:
 17807 0018 0446     		mov	r4, r0
 17808              	.LVL2203:
6408:Core/Src/bno055.c ****     {
 17809              		.loc 1 6408 5 is_stmt 1 view .LVU4899
6408:Core/Src/bno055.c ****     {
 17810              		.loc 1 6408 22 is_stmt 0 view .LVU4900
 17811 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6408:Core/Src/bno055.c ****     {
 17812              		.loc 1 6408 8 view .LVU4901
 17813 001e 012B     		cmp	r3, #1
 17814 0020 05D1     		bne	.L1271
 17815              	.L1266:
6412:Core/Src/bno055.c ****     {
 17816              		.loc 1 6412 5 is_stmt 1 view .LVU4902
6412:Core/Src/bno055.c ****     {
 17817              		.loc 1 6412 8 is_stmt 0 view .LVU4903
 17818 0022 5CB1     		cbz	r4, .L1272
6429:Core/Src/bno055.c ****     }
 17819              		.loc 1 6429 9 is_stmt 1 view .LVU4904
6429:Core/Src/bno055.c ****     }
 17820              		.loc 1 6429 18 is_stmt 0 view .LVU4905
 17821 0024 013C     		subs	r4, r4, #1
 17822              	.LVL2204:
6429:Core/Src/bno055.c ****     }
 17823              		.loc 1 6429 18 view .LVU4906
 17824 0026 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 507


 17825              	.LVL2205:
 17826              	.L1269:
6432:Core/Src/bno055.c **** }
 17827              		.loc 1 6432 5 is_stmt 1 view .LVU4907
6433:Core/Src/bno055.c **** 
 17828              		.loc 1 6433 1 is_stmt 0 view .LVU4908
 17829 0028 2046     		mov	r0, r4
 17830 002a 03B0     		add	sp, sp, #12
 17831              	.LCFI571:
 17832              		.cfi_remember_state
 17833              		.cfi_def_cfa_offset 12
 17834              		@ sp needed
 17835 002c 30BD     		pop	{r4, r5, pc}
 17836              	.LVL2206:
 17837              	.L1271:
 17838              	.LCFI572:
 17839              		.cfi_restore_state
6410:Core/Src/bno055.c ****     }
 17840              		.loc 1 6410 9 is_stmt 1 view .LVU4909
6410:Core/Src/bno055.c ****     }
 17841              		.loc 1 6410 21 is_stmt 0 view .LVU4910
 17842 002e 0120     		movs	r0, #1
 17843 0030 FFF7FEFF 		bl	bno055_set_temp_unit
 17844              	.LVL2207:
6410:Core/Src/bno055.c ****     }
 17845              		.loc 1 6410 18 view .LVU4911
 17846 0034 54FA80F4 		uxtab	r4, r4, r0
 17847              	.LVL2208:
6410:Core/Src/bno055.c ****     }
 17848              		.loc 1 6410 18 view .LVU4912
 17849 0038 64B2     		sxtb	r4, r4
 17850              	.LVL2209:
6410:Core/Src/bno055.c ****     }
 17851              		.loc 1 6410 18 view .LVU4913
 17852 003a F2E7     		b	.L1266
 17853              	.L1272:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17854              		.loc 1 6415 9 is_stmt 1 view .LVU4914
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17855              		.loc 1 6415 21 is_stmt 0 view .LVU4915
 17856 003c 0DF10700 		add	r0, sp, #7
 17857 0040 FFF7FEFF 		bl	bno055_read_temp_data
 17858              	.LVL2210:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17859              		.loc 1 6415 18 view .LVU4916
 17860 0044 54FA80F4 		uxtab	r4, r4, r0
 17861              	.LVL2211:
6415:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17862              		.loc 1 6415 18 view .LVU4917
 17863 0048 E3B2     		uxtb	r3, r4
 17864 004a 64B2     		sxtb	r4, r4
 17865              	.LVL2212:
6416:Core/Src/bno055.c ****         {
 17866              		.loc 1 6416 9 is_stmt 1 view .LVU4918
6416:Core/Src/bno055.c ****         {
 17867              		.loc 1 6416 12 is_stmt 0 view .LVU4919
 17868 004c 54B9     		cbnz	r4, .L1268
ARM GAS  /tmp/ccO72alg.s 			page 508


6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17869              		.loc 1 6419 13 is_stmt 1 view .LVU4920
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17870              		.loc 1 6419 22 is_stmt 0 view .LVU4921
 17871 004e 9DF90700 		ldrsb	r0, [sp, #7]
 17872 0052 FFF7FEFF 		bl	__aeabi_i2d
 17873              	.LVL2213:
 17874 0056 0246     		mov	r2, r0
 17875 0058 0B46     		mov	r3, r1
6419:Core/Src/bno055.c ****             *temp_d = data_d;
 17876              		.loc 1 6419 20 view .LVU4922
 17877 005a FFF7FEFF 		bl	__aeabi_dadd
 17878              	.LVL2214:
6420:Core/Src/bno055.c ****         }
 17879              		.loc 1 6420 13 is_stmt 1 view .LVU4923
6420:Core/Src/bno055.c ****         }
 17880              		.loc 1 6420 21 is_stmt 0 view .LVU4924
 17881 005e C5E90001 		strd	r0, [r5]
 17882 0062 E1E7     		b	.L1269
 17883              	.LVL2215:
 17884              	.L1268:
6424:Core/Src/bno055.c ****         }
 17885              		.loc 1 6424 13 is_stmt 1 view .LVU4925
6424:Core/Src/bno055.c ****         }
 17886              		.loc 1 6424 22 is_stmt 0 view .LVU4926
 17887 0064 5C1E     		subs	r4, r3, #1
 17888              	.LVL2216:
6424:Core/Src/bno055.c ****         }
 17889              		.loc 1 6424 22 view .LVU4927
 17890 0066 64B2     		sxtb	r4, r4
 17891              	.LVL2217:
6424:Core/Src/bno055.c ****         }
 17892              		.loc 1 6424 22 view .LVU4928
 17893 0068 DEE7     		b	.L1269
 17894              		.cfi_endproc
 17895              	.LFE115:
 17897              		.section	.text.bno055_convert_double_temp_celsius,"ax",%progbits
 17898              		.align	1
 17899              		.global	bno055_convert_double_temp_celsius
 17900              		.syntax unified
 17901              		.thumb
 17902              		.thumb_func
 17904              	bno055_convert_double_temp_celsius:
 17905              	.LVL2218:
 17906              	.LFB116:
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17907              		.loc 1 6448 1 is_stmt 1 view -0
 17908              		.cfi_startproc
 17909              		@ args = 0, pretend = 0, frame = 8
 17910              		@ frame_needed = 0, uses_anonymous_args = 0
6448:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 17911              		.loc 1 6448 1 is_stmt 0 view .LVU4930
 17912 0000 30B5     		push	{r4, r5, lr}
 17913              	.LCFI573:
 17914              		.cfi_def_cfa_offset 12
 17915              		.cfi_offset 4, -12
 17916              		.cfi_offset 5, -8
ARM GAS  /tmp/ccO72alg.s 			page 509


 17917              		.cfi_offset 14, -4
 17918 0002 83B0     		sub	sp, sp, #12
 17919              	.LCFI574:
 17920              		.cfi_def_cfa_offset 24
 17921 0004 0546     		mov	r5, r0
6449:Core/Src/bno055.c ****     s8 reg_temp_s8 = BNO055_INIT_VALUE;
 17922              		.loc 1 6449 5 is_stmt 1 view .LVU4931
 17923              	.LVL2219:
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17924              		.loc 1 6450 5 view .LVU4932
6450:Core/Src/bno055.c ****     double data_d = BNO055_INIT_VALUE;
 17925              		.loc 1 6450 8 is_stmt 0 view .LVU4933
 17926 0006 0023     		movs	r3, #0
 17927 0008 8DF80730 		strb	r3, [sp, #7]
6451:Core/Src/bno055.c ****     u8 temp_unit_u8 = BNO055_INIT_VALUE;
 17928              		.loc 1 6451 5 is_stmt 1 view .LVU4934
 17929              	.LVL2220:
6452:Core/Src/bno055.c **** 
 17930              		.loc 1 6452 5 view .LVU4935
6452:Core/Src/bno055.c **** 
 17931              		.loc 1 6452 8 is_stmt 0 view .LVU4936
 17932 000c 8DF80630 		strb	r3, [sp, #6]
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17933              		.loc 1 6456 5 is_stmt 1 view .LVU4937
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17934              		.loc 1 6456 16 is_stmt 0 view .LVU4938
 17935 0010 0DF10600 		add	r0, sp, #6
 17936              	.LVL2221:
6456:Core/Src/bno055.c ****     if (temp_unit_u8 != BNO055_TEMP_UNIT_CELSIUS)
 17937              		.loc 1 6456 16 view .LVU4939
 17938 0014 FFF7FEFF 		bl	bno055_get_temp_unit
 17939              	.LVL2222:
 17940 0018 0446     		mov	r4, r0
 17941              	.LVL2223:
6457:Core/Src/bno055.c ****     {
 17942              		.loc 1 6457 5 is_stmt 1 view .LVU4940
6457:Core/Src/bno055.c ****     {
 17943              		.loc 1 6457 22 is_stmt 0 view .LVU4941
 17944 001a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
6457:Core/Src/bno055.c ****     {
 17945              		.loc 1 6457 8 view .LVU4942
 17946 001e 2BB9     		cbnz	r3, .L1279
 17947              	.L1274:
6461:Core/Src/bno055.c ****     {
 17948              		.loc 1 6461 5 is_stmt 1 view .LVU4943
6461:Core/Src/bno055.c ****     {
 17949              		.loc 1 6461 8 is_stmt 0 view .LVU4944
 17950 0020 5CB1     		cbz	r4, .L1280
6478:Core/Src/bno055.c ****     }
 17951              		.loc 1 6478 9 is_stmt 1 view .LVU4945
6478:Core/Src/bno055.c ****     }
 17952              		.loc 1 6478 18 is_stmt 0 view .LVU4946
 17953 0022 013C     		subs	r4, r4, #1
 17954              	.LVL2224:
6478:Core/Src/bno055.c ****     }
 17955              		.loc 1 6478 18 view .LVU4947
 17956 0024 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 510


 17957              	.LVL2225:
 17958              	.L1277:
6481:Core/Src/bno055.c **** }
 17959              		.loc 1 6481 5 is_stmt 1 view .LVU4948
6482:Core/Src/bno055.c **** #endif
 17960              		.loc 1 6482 1 is_stmt 0 view .LVU4949
 17961 0026 2046     		mov	r0, r4
 17962 0028 03B0     		add	sp, sp, #12
 17963              	.LCFI575:
 17964              		.cfi_remember_state
 17965              		.cfi_def_cfa_offset 12
 17966              		@ sp needed
 17967 002a 30BD     		pop	{r4, r5, pc}
 17968              	.LVL2226:
 17969              	.L1279:
 17970              	.LCFI576:
 17971              		.cfi_restore_state
6459:Core/Src/bno055.c ****     }
 17972              		.loc 1 6459 9 is_stmt 1 view .LVU4950
6459:Core/Src/bno055.c ****     }
 17973              		.loc 1 6459 21 is_stmt 0 view .LVU4951
 17974 002c 0020     		movs	r0, #0
 17975 002e FFF7FEFF 		bl	bno055_set_temp_unit
 17976              	.LVL2227:
6459:Core/Src/bno055.c ****     }
 17977              		.loc 1 6459 18 view .LVU4952
 17978 0032 54FA80F4 		uxtab	r4, r4, r0
 17979              	.LVL2228:
6459:Core/Src/bno055.c ****     }
 17980              		.loc 1 6459 18 view .LVU4953
 17981 0036 64B2     		sxtb	r4, r4
 17982              	.LVL2229:
6459:Core/Src/bno055.c ****     }
 17983              		.loc 1 6459 18 view .LVU4954
 17984 0038 F2E7     		b	.L1274
 17985              	.L1280:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17986              		.loc 1 6464 9 is_stmt 1 view .LVU4955
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17987              		.loc 1 6464 21 is_stmt 0 view .LVU4956
 17988 003a 0DF10700 		add	r0, sp, #7
 17989 003e FFF7FEFF 		bl	bno055_read_temp_data
 17990              	.LVL2230:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17991              		.loc 1 6464 18 view .LVU4957
 17992 0042 54FA80F4 		uxtab	r4, r4, r0
 17993              	.LVL2231:
6464:Core/Src/bno055.c ****         if (com_rslt == BNO055_SUCCESS)
 17994              		.loc 1 6464 18 view .LVU4958
 17995 0046 E3B2     		uxtb	r3, r4
 17996 0048 64B2     		sxtb	r4, r4
 17997              	.LVL2232:
6465:Core/Src/bno055.c ****         {
 17998              		.loc 1 6465 9 is_stmt 1 view .LVU4959
6465:Core/Src/bno055.c ****         {
 17999              		.loc 1 6465 12 is_stmt 0 view .LVU4960
 18000 004a 34B9     		cbnz	r4, .L1276
ARM GAS  /tmp/ccO72alg.s 			page 511


6468:Core/Src/bno055.c ****             *temp_d = data_d;
 18001              		.loc 1 6468 13 is_stmt 1 view .LVU4961
6468:Core/Src/bno055.c ****             *temp_d = data_d;
 18002              		.loc 1 6468 20 is_stmt 0 view .LVU4962
 18003 004c 9DF90700 		ldrsb	r0, [sp, #7]
 18004 0050 FFF7FEFF 		bl	__aeabi_i2d
 18005              	.LVL2233:
6469:Core/Src/bno055.c ****         }
 18006              		.loc 1 6469 13 is_stmt 1 view .LVU4963
6469:Core/Src/bno055.c ****         }
 18007              		.loc 1 6469 21 is_stmt 0 view .LVU4964
 18008 0054 C5E90001 		strd	r0, [r5]
 18009 0058 E5E7     		b	.L1277
 18010              	.LVL2234:
 18011              	.L1276:
6473:Core/Src/bno055.c ****         }
 18012              		.loc 1 6473 13 is_stmt 1 view .LVU4965
6473:Core/Src/bno055.c ****         }
 18013              		.loc 1 6473 22 is_stmt 0 view .LVU4966
 18014 005a 5C1E     		subs	r4, r3, #1
 18015              	.LVL2235:
6473:Core/Src/bno055.c ****         }
 18016              		.loc 1 6473 22 view .LVU4967
 18017 005c 64B2     		sxtb	r4, r4
 18018              	.LVL2236:
6473:Core/Src/bno055.c ****         }
 18019              		.loc 1 6473 22 view .LVU4968
 18020 005e E2E7     		b	.L1277
 18021              		.cfi_endproc
 18022              	.LFE116:
 18024              		.section	.text.bno055_set_data_output_format,"ax",%progbits
 18025              		.align	1
 18026              		.global	bno055_set_data_output_format
 18027              		.syntax unified
 18028              		.thumb
 18029              		.thumb_func
 18031              	bno055_set_data_output_format:
 18032              	.LVL2237:
 18033              	.LFB144:
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18034              		.loc 1 8133 1 is_stmt 1 view -0
 18035              		.cfi_startproc
 18036              		@ args = 0, pretend = 0, frame = 8
 18037              		@ frame_needed = 0, uses_anonymous_args = 0
8133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18038              		.loc 1 8133 1 is_stmt 0 view .LVU4970
 18039 0000 30B5     		push	{r4, r5, lr}
 18040              	.LCFI577:
 18041              		.cfi_def_cfa_offset 12
 18042              		.cfi_offset 4, -12
 18043              		.cfi_offset 5, -8
 18044              		.cfi_offset 14, -4
 18045 0002 83B0     		sub	sp, sp, #12
 18046              	.LCFI578:
 18047              		.cfi_def_cfa_offset 24
8134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18048              		.loc 1 8134 5 is_stmt 1 view .LVU4971
ARM GAS  /tmp/ccO72alg.s 			page 512


 18049              	.LVL2238:
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18050              		.loc 1 8135 5 view .LVU4972
8135:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18051              		.loc 1 8135 8 is_stmt 0 view .LVU4973
 18052 0004 0023     		movs	r3, #0
 18053 0006 8DF80730 		strb	r3, [sp, #7]
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18054              		.loc 1 8136 5 is_stmt 1 view .LVU4974
8136:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18055              		.loc 1 8136 8 is_stmt 0 view .LVU4975
 18056 000a 8DF80630 		strb	r3, [sp, #6]
8137:Core/Src/bno055.c **** 
 18057              		.loc 1 8137 5 is_stmt 1 view .LVU4976
 18058              	.LVL2239:
8140:Core/Src/bno055.c ****     {
 18059              		.loc 1 8140 5 view .LVU4977
8140:Core/Src/bno055.c ****     {
 18060              		.loc 1 8140 18 is_stmt 0 view .LVU4978
 18061 000e 244B     		ldr	r3, .L1291
 18062 0010 1B68     		ldr	r3, [r3]
8140:Core/Src/bno055.c ****     {
 18063              		.loc 1 8140 8 view .LVU4979
 18064 0012 002B     		cmp	r3, #0
 18065 0014 41D0     		beq	.L1285
 18066 0016 0546     		mov	r5, r0
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18067              		.loc 1 8149 9 is_stmt 1 view .LVU4980
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18068              		.loc 1 8149 19 is_stmt 0 view .LVU4981
 18069 0018 0DF10600 		add	r0, sp, #6
 18070              	.LVL2240:
8149:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18071              		.loc 1 8149 19 view .LVU4982
 18072 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18073              	.LVL2241:
8150:Core/Src/bno055.c ****         {
 18074              		.loc 1 8150 9 is_stmt 1 view .LVU4983
8150:Core/Src/bno055.c ****         {
 18075              		.loc 1 8150 12 is_stmt 0 view .LVU4984
 18076 0020 0446     		mov	r4, r0
 18077 0022 48BB     		cbnz	r0, .L1286
8152:Core/Src/bno055.c ****             {
 18078              		.loc 1 8152 13 is_stmt 1 view .LVU4985
8152:Core/Src/bno055.c ****             {
 18079              		.loc 1 8152 32 is_stmt 0 view .LVU4986
 18080 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
8152:Core/Src/bno055.c ****             {
 18081              		.loc 1 8152 16 view .LVU4987
 18082 0028 03BB     		cbnz	r3, .L1289
 18083              	.LVL2242:
 18084              	.L1284:
8156:Core/Src/bno055.c ****             {
 18085              		.loc 1 8156 13 is_stmt 1 view .LVU4988
8156:Core/Src/bno055.c ****             {
 18086              		.loc 1 8156 16 is_stmt 0 view .LVU4989
 18087 002a 6CBB     		cbnz	r4, .L1287
ARM GAS  /tmp/ccO72alg.s 			page 513


8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18088              		.loc 1 8159 17 is_stmt 1 view .LVU4990
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18089              		.loc 1 8159 36 is_stmt 0 view .LVU4991
 18090 002c 1C4B     		ldr	r3, .L1291
 18091 002e 1868     		ldr	r0, [r3]
 18092 0030 0469     		ldr	r4, [r0, #16]
 18093              	.LVL2243:
8159:Core/Src/bno055.c ****                                                           BNO055_DATA_OUTPUT_FORMAT_REG,
 18094              		.loc 1 8159 28 view .LVU4992
 18095 0032 0123     		movs	r3, #1
 18096 0034 0DF10702 		add	r2, sp, #7
 18097 0038 3B21     		movs	r1, #59
 18098 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18099 003c A047     		blx	r4
 18100              	.LVL2244:
8163:Core/Src/bno055.c ****                 {
 18101              		.loc 1 8163 17 is_stmt 1 view .LVU4993
8163:Core/Src/bno055.c ****                 {
 18102              		.loc 1 8163 20 is_stmt 0 view .LVU4994
 18103 003e 0446     		mov	r4, r0
 18104 0040 E0B9     		cbnz	r0, .L1283
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18105              		.loc 1 8165 21 is_stmt 1 view .LVU4995
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18106              		.loc 1 8165 32 is_stmt 0 view .LVU4996
 18107 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 18108              	.LVL2245:
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18109              		.loc 1 8165 32 view .LVU4997
 18110 0046 00F07F00 		and	r0, r0, #127
 18111 004a 40EAC510 		orr	r0, r0, r5, lsl #7
8165:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18112              		.loc 1 8165 30 view .LVU4998
 18113 004e 8DF80700 		strb	r0, [sp, #7]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18114              		.loc 1 8166 21 is_stmt 1 view .LVU4999
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18115              		.loc 1 8166 41 is_stmt 0 view .LVU5000
 18116 0052 134B     		ldr	r3, .L1291
 18117 0054 1868     		ldr	r0, [r3]
 18118 0056 C568     		ldr	r5, [r0, #12]
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18119              		.loc 1 8166 33 view .LVU5001
 18120 0058 0123     		movs	r3, #1
 18121 005a 0DF10702 		add	r2, sp, #7
 18122 005e 3B21     		movs	r1, #59
 18123 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18124 0062 A847     		blx	r5
 18125              	.LVL2246:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18126              		.loc 1 8166 30 view .LVU5002
 18127 0064 54FA80F4 		uxtab	r4, r4, r0
 18128 0068 64B2     		sxtb	r4, r4
 18129              	.LVL2247:
8166:Core/Src/bno055.c ****                                                                 BNO055_DATA_OUTPUT_FORMAT_REG,
 18130              		.loc 1 8166 30 view .LVU5003
ARM GAS  /tmp/ccO72alg.s 			page 514


 18131 006a 07E0     		b	.L1283
 18132              	.LVL2248:
 18133              	.L1289:
8154:Core/Src/bno055.c ****             }
 18134              		.loc 1 8154 17 is_stmt 1 view .LVU5004
8154:Core/Src/bno055.c ****             }
 18135              		.loc 1 8154 28 is_stmt 0 view .LVU5005
 18136 006c FFF7FEFF 		bl	bno055_set_operation_mode
 18137              	.LVL2249:
8154:Core/Src/bno055.c ****             }
 18138              		.loc 1 8154 25 view .LVU5006
 18139 0070 54FA80F4 		uxtab	r4, r4, r0
 18140 0074 64B2     		sxtb	r4, r4
 18141              	.LVL2250:
8154:Core/Src/bno055.c ****             }
 18142              		.loc 1 8154 25 view .LVU5007
 18143 0076 D8E7     		b	.L1284
 18144              	.LVL2251:
 18145              	.L1286:
8179:Core/Src/bno055.c ****         }
 18146              		.loc 1 8179 22 view .LVU5008
 18147 0078 4FF0FF34 		mov	r4, #-1
 18148              	.LVL2252:
 18149              	.L1283:
8182:Core/Src/bno055.c ****     {
 18150              		.loc 1 8182 5 is_stmt 1 view .LVU5009
8182:Core/Src/bno055.c ****     {
 18151              		.loc 1 8182 24 is_stmt 0 view .LVU5010
 18152 007c 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
8182:Core/Src/bno055.c ****     {
 18153              		.loc 1 8182 8 view .LVU5011
 18154 0080 28B9     		cbnz	r0, .L1290
 18155              	.LVL2253:
 18156              	.L1282:
8190:Core/Src/bno055.c **** 
 18157              		.loc 1 8190 1 view .LVU5012
 18158 0082 2046     		mov	r0, r4
 18159 0084 03B0     		add	sp, sp, #12
 18160              	.LCFI579:
 18161              		.cfi_remember_state
 18162              		.cfi_def_cfa_offset 12
 18163              		@ sp needed
 18164 0086 30BD     		pop	{r4, r5, pc}
 18165              	.LVL2254:
 18166              	.L1287:
 18167              	.LCFI580:
 18168              		.cfi_restore_state
8174:Core/Src/bno055.c ****             }
 18169              		.loc 1 8174 26 view .LVU5013
 18170 0088 4FF0FF34 		mov	r4, #-1
 18171              	.LVL2255:
8174:Core/Src/bno055.c ****             }
 18172              		.loc 1 8174 26 view .LVU5014
 18173 008c F6E7     		b	.L1283
 18174              	.LVL2256:
 18175              	.L1290:
8186:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 515


 18176              		.loc 1 8186 9 is_stmt 1 view .LVU5015
8186:Core/Src/bno055.c ****     }
 18177              		.loc 1 8186 21 is_stmt 0 view .LVU5016
 18178 008e FFF7FEFF 		bl	bno055_set_operation_mode
 18179              	.LVL2257:
8186:Core/Src/bno055.c ****     }
 18180              		.loc 1 8186 18 view .LVU5017
 18181 0092 54FA80F4 		uxtab	r4, r4, r0
 18182              	.LVL2258:
8186:Core/Src/bno055.c ****     }
 18183              		.loc 1 8186 18 view .LVU5018
 18184 0096 64B2     		sxtb	r4, r4
 18185              	.LVL2259:
8186:Core/Src/bno055.c ****     }
 18186              		.loc 1 8186 18 view .LVU5019
 18187 0098 F3E7     		b	.L1282
 18188              	.LVL2260:
 18189              	.L1285:
8142:Core/Src/bno055.c ****     }
 18190              		.loc 1 8142 16 view .LVU5020
 18191 009a 6FF07E04 		mvn	r4, #126
 18192 009e F0E7     		b	.L1282
 18193              	.L1292:
 18194              		.align	2
 18195              	.L1291:
 18196 00a0 00000000 		.word	.LANCHOR0
 18197              		.cfi_endproc
 18198              	.LFE144:
 18200              		.section	.text.bno055_get_power_mode,"ax",%progbits
 18201              		.align	1
 18202              		.global	bno055_get_power_mode
 18203              		.syntax unified
 18204              		.thumb
 18205              		.thumb_func
 18207              	bno055_get_power_mode:
 18208              	.LVL2261:
 18209              	.LFB147:
8403:Core/Src/bno055.c **** 
8404:Core/Src/bno055.c **** /*! @brief This API used to read the power mode
8405:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8406:Core/Src/bno055.c ****  *
8407:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8408:Core/Src/bno055.c ****  *
8409:Core/Src/bno055.c ****  * power_mode_u8|      result           | comments
8410:Core/Src/bno055.c ****  * ---------|---------------------------|-------------------------------------
8411:Core/Src/bno055.c ****  *  0x00    |BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8412:Core/Src/bno055.c ****  *    -     |       -                   | map and the internal peripherals
8413:Core/Src/bno055.c ****  *    -     |       -                   | of the MCU are always
8414:Core/Src/bno055.c ****  *    -     |       -                   | operative in this mode
8415:Core/Src/bno055.c ****  *  0x01    |BNO055_POWER_MODE_LOWPOWER | This is first level of power
8416:Core/Src/bno055.c ****  *          |       -                   | saving mode
8417:Core/Src/bno055.c ****  *  0x02    |BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8418:Core/Src/bno055.c ****  *   -      |      -                    | paused and all the sensors and
8419:Core/Src/bno055.c ****  *   -      |      -                    | the micro controller are
8420:Core/Src/bno055.c ****  *   -      |      -                    | put into sleep mode.
8421:Core/Src/bno055.c ****  *
8422:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccO72alg.s 			page 516


8423:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8424:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8425:Core/Src/bno055.c ****  *
8426:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8427:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8428:Core/Src/bno055.c ****  *
8429:Core/Src/bno055.c ****  */
8430:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_power_mode(u8 *power_mode_u8)
8431:Core/Src/bno055.c **** {
 18210              		.loc 1 8431 1 is_stmt 1 view -0
 18211              		.cfi_startproc
 18212              		@ args = 0, pretend = 0, frame = 8
 18213              		@ frame_needed = 0, uses_anonymous_args = 0
 18214              		.loc 1 8431 1 is_stmt 0 view .LVU5022
 18215 0000 30B5     		push	{r4, r5, lr}
 18216              	.LCFI581:
 18217              		.cfi_def_cfa_offset 12
 18218              		.cfi_offset 4, -12
 18219              		.cfi_offset 5, -8
 18220              		.cfi_offset 14, -4
 18221 0002 83B0     		sub	sp, sp, #12
 18222              	.LCFI582:
 18223              		.cfi_def_cfa_offset 24
8432:Core/Src/bno055.c ****     /* Variable used to return value of
8433:Core/Src/bno055.c ****      * communication routine*/
8434:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18224              		.loc 1 8434 5 is_stmt 1 view .LVU5023
 18225              	.LVL2262:
8435:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18226              		.loc 1 8435 5 view .LVU5024
 18227              		.loc 1 8435 8 is_stmt 0 view .LVU5025
 18228 0004 0023     		movs	r3, #0
 18229 0006 8DF80730 		strb	r3, [sp, #7]
8436:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18230              		.loc 1 8436 5 is_stmt 1 view .LVU5026
 18231              	.LVL2263:
8437:Core/Src/bno055.c **** 
8438:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8439:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18232              		.loc 1 8439 5 view .LVU5027
 18233              		.loc 1 8439 18 is_stmt 0 view .LVU5028
 18234 000a 134B     		ldr	r3, .L1301
 18235 000c 1B68     		ldr	r3, [r3]
 18236              		.loc 1 8439 8 view .LVU5029
 18237 000e E3B1     		cbz	r3, .L1297
 18238 0010 0446     		mov	r4, r0
8440:Core/Src/bno055.c ****     {
8441:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8442:Core/Src/bno055.c ****     }
8443:Core/Src/bno055.c ****     else
8444:Core/Src/bno055.c ****     {
8445:Core/Src/bno055.c ****         /*condition check for page, power mode is
8446:Core/Src/bno055.c ****          * available in the page zero*/
8447:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18239              		.loc 1 8447 9 is_stmt 1 view .LVU5030
 18240              		.loc 1 8447 21 is_stmt 0 view .LVU5031
 18241 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 517


 18242              		.loc 1 8447 12 view .LVU5032
 18243 0014 9BB9     		cbnz	r3, .L1300
 18244              	.LVL2264:
 18245              	.L1295:
8448:Core/Src/bno055.c ****         {
8449:Core/Src/bno055.c ****             /* Write the page zero*/
8450:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8451:Core/Src/bno055.c ****         }
8452:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18246              		.loc 1 8452 53 discriminator 1 view .LVU5033
 18247 0016 104B     		ldr	r3, .L1301
 18248 0018 1B68     		ldr	r3, [r3]
 18249 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18250              		.loc 1 8452 41 discriminator 1 view .LVU5034
 18251 001c C3B9     		cbnz	r3, .L1298
 18252              	.L1296:
8453:Core/Src/bno055.c ****         {
8454:Core/Src/bno055.c ****             /* Read the value of power mode */
8455:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18253              		.loc 1 8455 13 is_stmt 1 view .LVU5035
 18254              		.loc 1 8455 32 is_stmt 0 view .LVU5036
 18255 001e 0E4B     		ldr	r3, .L1301
 18256 0020 1868     		ldr	r0, [r3]
 18257 0022 0569     		ldr	r5, [r0, #16]
 18258              		.loc 1 8455 24 view .LVU5037
 18259 0024 0123     		movs	r3, #1
 18260 0026 0DF10702 		add	r2, sp, #7
 18261 002a 3E21     		movs	r1, #62
 18262 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18263 002e A847     		blx	r5
 18264              	.LVL2265:
8456:Core/Src/bno055.c ****                                                       BNO055_POWER_MODE_REG,
8457:Core/Src/bno055.c ****                                                       &data_u8r,
8458:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8459:Core/Src/bno055.c ****             *power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_POWER_MODE);
 18265              		.loc 1 8459 13 is_stmt 1 view .LVU5038
 18266              		.loc 1 8459 30 is_stmt 0 view .LVU5039
 18267 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18268 0034 03F00303 		and	r3, r3, #3
 18269              		.loc 1 8459 28 view .LVU5040
 18270 0038 2370     		strb	r3, [r4]
 18271              	.LVL2266:
 18272              	.L1294:
8460:Core/Src/bno055.c ****         }
8461:Core/Src/bno055.c ****         else
8462:Core/Src/bno055.c ****         {
8463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8464:Core/Src/bno055.c ****         }
8465:Core/Src/bno055.c ****     }
8466:Core/Src/bno055.c **** 
8467:Core/Src/bno055.c ****     return com_rslt;
8468:Core/Src/bno055.c **** }
 18273              		.loc 1 8468 1 view .LVU5041
 18274 003a 03B0     		add	sp, sp, #12
 18275              	.LCFI583:
 18276              		.cfi_remember_state
 18277              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 518


 18278              		@ sp needed
 18279 003c 30BD     		pop	{r4, r5, pc}
 18280              	.LVL2267:
 18281              	.L1300:
 18282              	.LCFI584:
 18283              		.cfi_restore_state
8450:Core/Src/bno055.c ****         }
 18284              		.loc 1 8450 13 is_stmt 1 view .LVU5042
8450:Core/Src/bno055.c ****         }
 18285              		.loc 1 8450 23 is_stmt 0 view .LVU5043
 18286 003e 0020     		movs	r0, #0
 18287              	.LVL2268:
8450:Core/Src/bno055.c ****         }
 18288              		.loc 1 8450 23 view .LVU5044
 18289 0040 FFF7FEFF 		bl	bno055_write_page_id
 18290              	.LVL2269:
8452:Core/Src/bno055.c ****         {
 18291              		.loc 1 8452 9 is_stmt 1 view .LVU5045
8452:Core/Src/bno055.c ****         {
 18292              		.loc 1 8452 12 is_stmt 0 view .LVU5046
 18293 0044 0028     		cmp	r0, #0
 18294 0046 EAD0     		beq	.L1296
 18295 0048 E5E7     		b	.L1295
 18296              	.LVL2270:
 18297              	.L1297:
8441:Core/Src/bno055.c ****     }
 18298              		.loc 1 8441 16 view .LVU5047
 18299 004a 6FF07E00 		mvn	r0, #126
 18300              	.LVL2271:
8441:Core/Src/bno055.c ****     }
 18301              		.loc 1 8441 16 view .LVU5048
 18302 004e F4E7     		b	.L1294
 18303              	.LVL2272:
 18304              	.L1298:
8463:Core/Src/bno055.c ****         }
 18305              		.loc 1 8463 22 view .LVU5049
 18306 0050 4FF0FF30 		mov	r0, #-1
 18307 0054 F1E7     		b	.L1294
 18308              	.L1302:
 18309 0056 00BF     		.align	2
 18310              	.L1301:
 18311 0058 00000000 		.word	.LANCHOR0
 18312              		.cfi_endproc
 18313              	.LFE147:
 18315              		.section	.text.bno055_set_power_mode,"ax",%progbits
 18316              		.align	1
 18317              		.global	bno055_set_power_mode
 18318              		.syntax unified
 18319              		.thumb
 18320              		.thumb_func
 18322              	bno055_set_power_mode:
 18323              	.LVL2273:
 18324              	.LFB148:
8469:Core/Src/bno055.c **** 
8470:Core/Src/bno055.c **** /*! @brief This API used to write the power mode
8471:Core/Src/bno055.c ****  *  from register from 0x3E bit 0 to 1
8472:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 519


8473:Core/Src/bno055.c ****  *  @param power_mode_u8 : The value of power mode
8474:Core/Src/bno055.c ****  *
8475:Core/Src/bno055.c ****  *
8476:Core/Src/bno055.c ****  * power_mode_u8|      result          | comments
8477:Core/Src/bno055.c ****  * -------|----------------------------|---------------------------------
8478:Core/Src/bno055.c ****  *  0x00  | BNO055_POWER_MODE_NORMAL   | In the NORMAL mode the register
8479:Core/Src/bno055.c ****  *    -   |       -                    | map and the internal peripherals
8480:Core/Src/bno055.c ****  *    -   |       -                    | of the MCU are always
8481:Core/Src/bno055.c ****  *    -   |       -                    | operative in this mode
8482:Core/Src/bno055.c ****  *  0x01  | BNO055_POWER_MODE_LOWPOWER | This is first level of power
8483:Core/Src/bno055.c ****  *        |     -                      | saving mode
8484:Core/Src/bno055.c ****  *  0x02  | BNO055_POWER_MODE_SUSPEND  | In suspend mode the system is
8485:Core/Src/bno055.c ****  *   -    |      -                     | paused and all the sensors and
8486:Core/Src/bno055.c ****  *   -    |      -                     | the micro controller are
8487:Core/Src/bno055.c ****  *   -    |      -                     | put into sleep mode.
8488:Core/Src/bno055.c ****  *
8489:Core/Src/bno055.c ****  *  @return results of bus communication function
8490:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8491:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8492:Core/Src/bno055.c ****  *
8493:Core/Src/bno055.c ****  *  @note For detailed about LOWPOWER mode
8494:Core/Src/bno055.c ****  *  refer data sheet 3.4.2
8495:Core/Src/bno055.c ****  *
8496:Core/Src/bno055.c ****  */
8497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_power_mode(u8 power_mode_u8)
8498:Core/Src/bno055.c **** {
 18325              		.loc 1 8498 1 is_stmt 1 view -0
 18326              		.cfi_startproc
 18327              		@ args = 0, pretend = 0, frame = 8
 18328              		@ frame_needed = 0, uses_anonymous_args = 0
 18329              		.loc 1 8498 1 is_stmt 0 view .LVU5051
 18330 0000 30B5     		push	{r4, r5, lr}
 18331              	.LCFI585:
 18332              		.cfi_def_cfa_offset 12
 18333              		.cfi_offset 4, -12
 18334              		.cfi_offset 5, -8
 18335              		.cfi_offset 14, -4
 18336 0002 83B0     		sub	sp, sp, #12
 18337              	.LCFI586:
 18338              		.cfi_def_cfa_offset 24
8499:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18339              		.loc 1 8499 5 is_stmt 1 view .LVU5052
 18340              	.LVL2274:
8500:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18341              		.loc 1 8500 5 view .LVU5053
 18342              		.loc 1 8500 8 is_stmt 0 view .LVU5054
 18343 0004 0023     		movs	r3, #0
 18344 0006 8DF80730 		strb	r3, [sp, #7]
8501:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 18345              		.loc 1 8501 5 is_stmt 1 view .LVU5055
 18346              		.loc 1 8501 8 is_stmt 0 view .LVU5056
 18347 000a 8DF80630 		strb	r3, [sp, #6]
8502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18348              		.loc 1 8502 5 is_stmt 1 view .LVU5057
 18349              	.LVL2275:
8503:Core/Src/bno055.c **** 
8504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccO72alg.s 			page 520


8505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18350              		.loc 1 8505 5 view .LVU5058
 18351              		.loc 1 8505 18 is_stmt 0 view .LVU5059
 18352 000e 254B     		ldr	r3, .L1313
 18353 0010 1B68     		ldr	r3, [r3]
 18354              		.loc 1 8505 8 view .LVU5060
 18355 0012 002B     		cmp	r3, #0
 18356 0014 43D0     		beq	.L1307
 18357 0016 0546     		mov	r5, r0
8506:Core/Src/bno055.c ****     {
8507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8508:Core/Src/bno055.c ****     }
8509:Core/Src/bno055.c ****     else
8510:Core/Src/bno055.c ****     {
8511:Core/Src/bno055.c ****         /* The write operation effective only if the operation
8512:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
8513:Core/Src/bno055.c ****          * current operation mode and set the config mode */
8514:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 18358              		.loc 1 8514 9 is_stmt 1 view .LVU5061
 18359              		.loc 1 8514 19 is_stmt 0 view .LVU5062
 18360 0018 0DF10600 		add	r0, sp, #6
 18361              	.LVL2276:
 18362              		.loc 1 8514 19 view .LVU5063
 18363 001c FFF7FEFF 		bl	bno055_get_operation_mode
 18364              	.LVL2277:
8515:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 18365              		.loc 1 8515 9 is_stmt 1 view .LVU5064
 18366              		.loc 1 8515 12 is_stmt 0 view .LVU5065
 18367 0020 0446     		mov	r4, r0
 18368 0022 58BB     		cbnz	r0, .L1308
8516:Core/Src/bno055.c ****         {
8517:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18369              		.loc 1 8517 13 is_stmt 1 view .LVU5066
 18370              		.loc 1 8517 32 is_stmt 0 view .LVU5067
 18371 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 18372              		.loc 1 8517 16 view .LVU5068
 18373 0028 13BB     		cbnz	r3, .L1311
 18374              	.LVL2278:
 18375              	.L1306:
8518:Core/Src/bno055.c ****             {
8519:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
8520:Core/Src/bno055.c ****             }
8521:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 18376              		.loc 1 8521 13 is_stmt 1 view .LVU5069
 18377              		.loc 1 8521 16 is_stmt 0 view .LVU5070
 18378 002a 7CBB     		cbnz	r4, .L1309
8522:Core/Src/bno055.c ****             {
8523:Core/Src/bno055.c ****                 /* Write the value of power mode */
8524:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18379              		.loc 1 8524 17 is_stmt 1 view .LVU5071
 18380              		.loc 1 8524 36 is_stmt 0 view .LVU5072
 18381 002c 1D4B     		ldr	r3, .L1313
 18382 002e 1868     		ldr	r0, [r3]
 18383 0030 0469     		ldr	r4, [r0, #16]
 18384              	.LVL2279:
 18385              		.loc 1 8524 28 view .LVU5073
 18386 0032 0123     		movs	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 521


 18387 0034 0DF10702 		add	r2, sp, #7
 18388 0038 3E21     		movs	r1, #62
 18389 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18390 003c A047     		blx	r4
 18391              	.LVL2280:
8525:Core/Src/bno055.c ****                                                           BNO055_POWER_MODE_REG,
8526:Core/Src/bno055.c ****                                                           &data_u8r,
8527:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
8528:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 18392              		.loc 1 8528 17 is_stmt 1 view .LVU5074
 18393              		.loc 1 8528 20 is_stmt 0 view .LVU5075
 18394 003e 0446     		mov	r4, r0
 18395 0040 F0B9     		cbnz	r0, .L1305
8529:Core/Src/bno055.c ****                 {
8530:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_POWER_MODE, power_mode_u8);
 18396              		.loc 1 8530 21 is_stmt 1 view .LVU5076
 18397              		.loc 1 8530 32 is_stmt 0 view .LVU5077
 18398 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 18399              	.LVL2281:
 18400              		.loc 1 8530 32 view .LVU5078
 18401 0046 20F00300 		bic	r0, r0, #3
 18402 004a 43B2     		sxtb	r3, r0
 18403 004c 05F00300 		and	r0, r5, #3
 18404 0050 1843     		orrs	r0, r0, r3
 18405              		.loc 1 8530 30 view .LVU5079
 18406 0052 8DF80700 		strb	r0, [sp, #7]
8531:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18407              		.loc 1 8531 21 is_stmt 1 view .LVU5080
 18408              		.loc 1 8531 41 is_stmt 0 view .LVU5081
 18409 0056 134B     		ldr	r3, .L1313
 18410 0058 1868     		ldr	r0, [r3]
 18411 005a C568     		ldr	r5, [r0, #12]
 18412              		.loc 1 8531 33 view .LVU5082
 18413 005c 0123     		movs	r3, #1
 18414 005e 0DF10702 		add	r2, sp, #7
 18415 0062 3E21     		movs	r1, #62
 18416 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18417 0066 A847     		blx	r5
 18418              	.LVL2282:
 18419              		.loc 1 8531 30 view .LVU5083
 18420 0068 54FA80F4 		uxtab	r4, r4, r0
 18421 006c 64B2     		sxtb	r4, r4
 18422              	.LVL2283:
 18423              		.loc 1 8531 30 view .LVU5084
 18424 006e 07E0     		b	.L1305
 18425              	.LVL2284:
 18426              	.L1311:
8519:Core/Src/bno055.c ****             }
 18427              		.loc 1 8519 17 is_stmt 1 view .LVU5085
8519:Core/Src/bno055.c ****             }
 18428              		.loc 1 8519 28 is_stmt 0 view .LVU5086
 18429 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 18430              	.LVL2285:
8519:Core/Src/bno055.c ****             }
 18431              		.loc 1 8519 25 view .LVU5087
 18432 0074 54FA80F4 		uxtab	r4, r4, r0
 18433 0078 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 522


 18434              	.LVL2286:
8519:Core/Src/bno055.c ****             }
 18435              		.loc 1 8519 25 view .LVU5088
 18436 007a D6E7     		b	.L1306
 18437              	.LVL2287:
 18438              	.L1308:
8532:Core/Src/bno055.c ****                                                                 BNO055_POWER_MODE_REG,
8533:Core/Src/bno055.c ****                                                                 &data_u8r,
8534:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
8535:Core/Src/bno055.c ****                 }
8536:Core/Src/bno055.c ****             }
8537:Core/Src/bno055.c ****             else
8538:Core/Src/bno055.c ****             {
8539:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
8540:Core/Src/bno055.c ****             }
8541:Core/Src/bno055.c ****         }
8542:Core/Src/bno055.c ****         else
8543:Core/Src/bno055.c ****         {
8544:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 18439              		.loc 1 8544 22 view .LVU5089
 18440 007c 4FF0FF34 		mov	r4, #-1
 18441              	.LVL2288:
 18442              	.L1305:
8545:Core/Src/bno055.c ****         }
8546:Core/Src/bno055.c ****     }
8547:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 18443              		.loc 1 8547 5 is_stmt 1 view .LVU5090
 18444              		.loc 1 8547 24 is_stmt 0 view .LVU5091
 18445 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 18446              		.loc 1 8547 8 view .LVU5092
 18447 0084 28B9     		cbnz	r0, .L1312
 18448              	.LVL2289:
 18449              	.L1304:
8548:Core/Src/bno055.c ****     {
8549:Core/Src/bno055.c ****         /* set the operation mode
8550:Core/Src/bno055.c ****          * of previous operation mode*/
8551:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
8552:Core/Src/bno055.c ****     }
8553:Core/Src/bno055.c **** 
8554:Core/Src/bno055.c ****     return com_rslt;
8555:Core/Src/bno055.c **** }
 18450              		.loc 1 8555 1 view .LVU5093
 18451 0086 2046     		mov	r0, r4
 18452 0088 03B0     		add	sp, sp, #12
 18453              	.LCFI587:
 18454              		.cfi_remember_state
 18455              		.cfi_def_cfa_offset 12
 18456              		@ sp needed
 18457 008a 30BD     		pop	{r4, r5, pc}
 18458              	.LVL2290:
 18459              	.L1309:
 18460              	.LCFI588:
 18461              		.cfi_restore_state
8539:Core/Src/bno055.c ****             }
 18462              		.loc 1 8539 26 view .LVU5094
 18463 008c 4FF0FF34 		mov	r4, #-1
 18464              	.LVL2291:
ARM GAS  /tmp/ccO72alg.s 			page 523


8539:Core/Src/bno055.c ****             }
 18465              		.loc 1 8539 26 view .LVU5095
 18466 0090 F6E7     		b	.L1305
 18467              	.LVL2292:
 18468              	.L1312:
8551:Core/Src/bno055.c ****     }
 18469              		.loc 1 8551 9 is_stmt 1 view .LVU5096
8551:Core/Src/bno055.c ****     }
 18470              		.loc 1 8551 21 is_stmt 0 view .LVU5097
 18471 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 18472              	.LVL2293:
8551:Core/Src/bno055.c ****     }
 18473              		.loc 1 8551 18 view .LVU5098
 18474 0096 54FA80F4 		uxtab	r4, r4, r0
 18475              	.LVL2294:
8551:Core/Src/bno055.c ****     }
 18476              		.loc 1 8551 18 view .LVU5099
 18477 009a 64B2     		sxtb	r4, r4
 18478              	.LVL2295:
8551:Core/Src/bno055.c ****     }
 18479              		.loc 1 8551 18 view .LVU5100
 18480 009c F3E7     		b	.L1304
 18481              	.LVL2296:
 18482              	.L1307:
8507:Core/Src/bno055.c ****     }
 18483              		.loc 1 8507 16 view .LVU5101
 18484 009e 6FF07E04 		mvn	r4, #126
 18485 00a2 F0E7     		b	.L1304
 18486              	.L1314:
 18487              		.align	2
 18488              	.L1313:
 18489 00a4 00000000 		.word	.LANCHOR0
 18490              		.cfi_endproc
 18491              	.LFE148:
 18493              		.section	.text.bno055_get_intr_rst,"ax",%progbits
 18494              		.align	1
 18495              		.global	bno055_get_intr_rst
 18496              		.syntax unified
 18497              		.thumb
 18498              		.thumb_func
 18500              	bno055_get_intr_rst:
 18501              	.LVL2297:
 18502              	.LFB149:
8556:Core/Src/bno055.c **** 
8557:Core/Src/bno055.c **** /*!
8558:Core/Src/bno055.c ****  *  @brief This API used to read the reset interrupt
8559:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8560:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8561:Core/Src/bno055.c ****  *
8562:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
8563:Core/Src/bno055.c ****  *
8564:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8565:Core/Src/bno055.c ****  *   ------------ |----------
8566:Core/Src/bno055.c ****  *     0x01       | BNO055_BIT_ENABLE
8567:Core/Src/bno055.c ****  *     0x00       | BNO055_BIT_DISABLE
8568:Core/Src/bno055.c ****  *
8569:Core/Src/bno055.c ****  *  @return results of bus communication function
ARM GAS  /tmp/ccO72alg.s 			page 524


8570:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8571:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8572:Core/Src/bno055.c ****  *
8573:Core/Src/bno055.c ****  */
8574:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_rst(u8 *intr_rst_u8)
8575:Core/Src/bno055.c **** {
 18503              		.loc 1 8575 1 is_stmt 1 view -0
 18504              		.cfi_startproc
 18505              		@ args = 0, pretend = 0, frame = 8
 18506              		@ frame_needed = 0, uses_anonymous_args = 0
 18507              		.loc 1 8575 1 is_stmt 0 view .LVU5103
 18508 0000 30B5     		push	{r4, r5, lr}
 18509              	.LCFI589:
 18510              		.cfi_def_cfa_offset 12
 18511              		.cfi_offset 4, -12
 18512              		.cfi_offset 5, -8
 18513              		.cfi_offset 14, -4
 18514 0002 83B0     		sub	sp, sp, #12
 18515              	.LCFI590:
 18516              		.cfi_def_cfa_offset 24
8576:Core/Src/bno055.c ****     /* Variable used to return value of
8577:Core/Src/bno055.c ****      * communication routine*/
8578:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18517              		.loc 1 8578 5 is_stmt 1 view .LVU5104
 18518              	.LVL2298:
8579:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18519              		.loc 1 8579 5 view .LVU5105
 18520              		.loc 1 8579 8 is_stmt 0 view .LVU5106
 18521 0004 0023     		movs	r3, #0
 18522 0006 8DF80730 		strb	r3, [sp, #7]
8580:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18523              		.loc 1 8580 5 is_stmt 1 view .LVU5107
 18524              	.LVL2299:
8581:Core/Src/bno055.c **** 
8582:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8583:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18525              		.loc 1 8583 5 view .LVU5108
 18526              		.loc 1 8583 18 is_stmt 0 view .LVU5109
 18527 000a 134B     		ldr	r3, .L1323
 18528 000c 1B68     		ldr	r3, [r3]
 18529              		.loc 1 8583 8 view .LVU5110
 18530 000e E3B1     		cbz	r3, .L1319
 18531 0010 0446     		mov	r4, r0
8584:Core/Src/bno055.c ****     {
8585:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8586:Core/Src/bno055.c ****     }
8587:Core/Src/bno055.c ****     else
8588:Core/Src/bno055.c ****     {
8589:Core/Src/bno055.c ****         /*condition check for page,  reset interrupt is
8590:Core/Src/bno055.c ****          * available in the page zero*/
8591:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18532              		.loc 1 8591 9 is_stmt 1 view .LVU5111
 18533              		.loc 1 8591 21 is_stmt 0 view .LVU5112
 18534 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18535              		.loc 1 8591 12 view .LVU5113
 18536 0014 9BB9     		cbnz	r3, .L1322
 18537              	.LVL2300:
ARM GAS  /tmp/ccO72alg.s 			page 525


 18538              	.L1317:
8592:Core/Src/bno055.c ****         {
8593:Core/Src/bno055.c ****             /* Write the page zero*/
8594:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8595:Core/Src/bno055.c ****         }
8596:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18539              		.loc 1 8596 53 discriminator 1 view .LVU5114
 18540 0016 104B     		ldr	r3, .L1323
 18541 0018 1B68     		ldr	r3, [r3]
 18542 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18543              		.loc 1 8596 41 discriminator 1 view .LVU5115
 18544 001c C3B9     		cbnz	r3, .L1320
 18545              	.L1318:
8597:Core/Src/bno055.c ****         {
8598:Core/Src/bno055.c ****             /* Read the value of reset interrupt*/
8599:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18546              		.loc 1 8599 13 is_stmt 1 view .LVU5116
 18547              		.loc 1 8599 32 is_stmt 0 view .LVU5117
 18548 001e 0E4B     		ldr	r3, .L1323
 18549 0020 1868     		ldr	r0, [r3]
 18550 0022 0569     		ldr	r5, [r0, #16]
 18551              		.loc 1 8599 24 view .LVU5118
 18552 0024 0123     		movs	r3, #1
 18553 0026 0DF10702 		add	r2, sp, #7
 18554 002a 3F21     		movs	r1, #63
 18555 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18556 002e A847     		blx	r5
 18557              	.LVL2301:
8600:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8601:Core/Src/bno055.c ****                                                       &data_u8r,
8602:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8603:Core/Src/bno055.c ****             *intr_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_INTR_RST);
 18558              		.loc 1 8603 13 is_stmt 1 view .LVU5119
 18559              		.loc 1 8603 28 is_stmt 0 view .LVU5120
 18560 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18561 0034 C3F38013 		ubfx	r3, r3, #6, #1
 18562              		.loc 1 8603 26 view .LVU5121
 18563 0038 2370     		strb	r3, [r4]
 18564              	.LVL2302:
 18565              	.L1316:
8604:Core/Src/bno055.c ****         }
8605:Core/Src/bno055.c ****         else
8606:Core/Src/bno055.c ****         {
8607:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8608:Core/Src/bno055.c ****         }
8609:Core/Src/bno055.c ****     }
8610:Core/Src/bno055.c **** 
8611:Core/Src/bno055.c ****     return com_rslt;
8612:Core/Src/bno055.c **** }
 18566              		.loc 1 8612 1 view .LVU5122
 18567 003a 03B0     		add	sp, sp, #12
 18568              	.LCFI591:
 18569              		.cfi_remember_state
 18570              		.cfi_def_cfa_offset 12
 18571              		@ sp needed
 18572 003c 30BD     		pop	{r4, r5, pc}
 18573              	.LVL2303:
ARM GAS  /tmp/ccO72alg.s 			page 526


 18574              	.L1322:
 18575              	.LCFI592:
 18576              		.cfi_restore_state
8594:Core/Src/bno055.c ****         }
 18577              		.loc 1 8594 13 is_stmt 1 view .LVU5123
8594:Core/Src/bno055.c ****         }
 18578              		.loc 1 8594 23 is_stmt 0 view .LVU5124
 18579 003e 0020     		movs	r0, #0
 18580              	.LVL2304:
8594:Core/Src/bno055.c ****         }
 18581              		.loc 1 8594 23 view .LVU5125
 18582 0040 FFF7FEFF 		bl	bno055_write_page_id
 18583              	.LVL2305:
8596:Core/Src/bno055.c ****         {
 18584              		.loc 1 8596 9 is_stmt 1 view .LVU5126
8596:Core/Src/bno055.c ****         {
 18585              		.loc 1 8596 12 is_stmt 0 view .LVU5127
 18586 0044 0028     		cmp	r0, #0
 18587 0046 EAD0     		beq	.L1318
 18588 0048 E5E7     		b	.L1317
 18589              	.LVL2306:
 18590              	.L1319:
8585:Core/Src/bno055.c ****     }
 18591              		.loc 1 8585 16 view .LVU5128
 18592 004a 6FF07E00 		mvn	r0, #126
 18593              	.LVL2307:
8585:Core/Src/bno055.c ****     }
 18594              		.loc 1 8585 16 view .LVU5129
 18595 004e F4E7     		b	.L1316
 18596              	.LVL2308:
 18597              	.L1320:
8607:Core/Src/bno055.c ****         }
 18598              		.loc 1 8607 22 view .LVU5130
 18599 0050 4FF0FF30 		mov	r0, #-1
 18600 0054 F1E7     		b	.L1316
 18601              	.L1324:
 18602 0056 00BF     		.align	2
 18603              	.L1323:
 18604 0058 00000000 		.word	.LANCHOR0
 18605              		.cfi_endproc
 18606              	.LFE149:
 18608              		.section	.text.bno055_set_intr_rst,"ax",%progbits
 18609              		.align	1
 18610              		.global	bno055_set_intr_rst
 18611              		.syntax unified
 18612              		.thumb
 18613              		.thumb_func
 18615              	bno055_set_intr_rst:
 18616              	.LVL2309:
 18617              	.LFB150:
8613:Core/Src/bno055.c **** 
8614:Core/Src/bno055.c **** /*!
8615:Core/Src/bno055.c ****  *  @brief This API used to write the reset interrupt
8616:Core/Src/bno055.c ****  *  from register from 0x3F bit 6
8617:Core/Src/bno055.c ****  *  It resets all the interrupt bit and interrupt output
8618:Core/Src/bno055.c ****  *
8619:Core/Src/bno055.c ****  *  @param intr_rst_u8 : The value of reset interrupt
ARM GAS  /tmp/ccO72alg.s 			page 527


8620:Core/Src/bno055.c ****  *
8621:Core/Src/bno055.c ****  *    intr_rst_u8 | result
8622:Core/Src/bno055.c ****  *   -------------- |----------
8623:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8624:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8625:Core/Src/bno055.c ****  *
8626:Core/Src/bno055.c ****  *  @return results of bus communication function
8627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8629:Core/Src/bno055.c ****  *
8630:Core/Src/bno055.c ****  */
8631:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_rst(u8 intr_rst_u8)
8632:Core/Src/bno055.c **** {
 18618              		.loc 1 8632 1 is_stmt 1 view -0
 18619              		.cfi_startproc
 18620              		@ args = 0, pretend = 0, frame = 8
 18621              		@ frame_needed = 0, uses_anonymous_args = 0
 18622              		.loc 1 8632 1 is_stmt 0 view .LVU5132
 18623 0000 30B5     		push	{r4, r5, lr}
 18624              	.LCFI593:
 18625              		.cfi_def_cfa_offset 12
 18626              		.cfi_offset 4, -12
 18627              		.cfi_offset 5, -8
 18628              		.cfi_offset 14, -4
 18629 0002 83B0     		sub	sp, sp, #12
 18630              	.LCFI594:
 18631              		.cfi_def_cfa_offset 24
8633:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18632              		.loc 1 8633 5 is_stmt 1 view .LVU5133
 18633              	.LVL2310:
8634:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18634              		.loc 1 8634 5 view .LVU5134
 18635              		.loc 1 8634 8 is_stmt 0 view .LVU5135
 18636 0004 0023     		movs	r3, #0
 18637 0006 8DF80730 		strb	r3, [sp, #7]
8635:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18638              		.loc 1 8635 5 is_stmt 1 view .LVU5136
 18639              	.LVL2311:
8636:Core/Src/bno055.c **** 
8637:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8638:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18640              		.loc 1 8638 5 view .LVU5137
 18641              		.loc 1 8638 18 is_stmt 0 view .LVU5138
 18642 000a 1E4B     		ldr	r3, .L1333
 18643 000c 1B68     		ldr	r3, [r3]
 18644              		.loc 1 8638 8 view .LVU5139
 18645 000e 002B     		cmp	r3, #0
 18646 0010 31D0     		beq	.L1329
 18647 0012 0446     		mov	r4, r0
8639:Core/Src/bno055.c ****     {
8640:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8641:Core/Src/bno055.c ****     }
8642:Core/Src/bno055.c ****     else
8643:Core/Src/bno055.c ****     {
8644:Core/Src/bno055.c ****         /*condition check for page, reset interrupt
8645:Core/Src/bno055.c ****          * available in the page zero*/
8646:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccO72alg.s 			page 528


 18648              		.loc 1 8646 9 is_stmt 1 view .LVU5140
 18649              		.loc 1 8646 21 is_stmt 0 view .LVU5141
 18650 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18651              		.loc 1 8646 12 view .LVU5142
 18652 0016 43BB     		cbnz	r3, .L1332
 18653              	.LVL2312:
 18654              	.L1327:
8647:Core/Src/bno055.c ****         {
8648:Core/Src/bno055.c ****             /* Write the page zero*/
8649:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8650:Core/Src/bno055.c ****         }
8651:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18655              		.loc 1 8651 53 discriminator 1 view .LVU5143
 18656 0018 1A4B     		ldr	r3, .L1333
 18657 001a 1B68     		ldr	r3, [r3]
 18658 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18659              		.loc 1 8651 41 discriminator 1 view .LVU5144
 18660 001e 6BBB     		cbnz	r3, .L1330
 18661              	.L1328:
8652:Core/Src/bno055.c ****         {
8653:Core/Src/bno055.c ****             /* Write the value of reset interrupt */
8654:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18662              		.loc 1 8654 13 is_stmt 1 view .LVU5145
 18663              		.loc 1 8654 32 is_stmt 0 view .LVU5146
 18664 0020 184B     		ldr	r3, .L1333
 18665 0022 1868     		ldr	r0, [r3]
 18666 0024 0569     		ldr	r5, [r0, #16]
 18667              		.loc 1 8654 24 view .LVU5147
 18668 0026 0123     		movs	r3, #1
 18669 0028 0DF10702 		add	r2, sp, #7
 18670 002c 3F21     		movs	r1, #63
 18671 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18672 0030 A847     		blx	r5
 18673              	.LVL2313:
8655:Core/Src/bno055.c ****                                                       BNO055_INTR_RST_REG,
8656:Core/Src/bno055.c ****                                                       &data_u8r,
8657:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8658:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18674              		.loc 1 8658 13 is_stmt 1 view .LVU5148
 18675              		.loc 1 8658 16 is_stmt 0 view .LVU5149
 18676 0032 0546     		mov	r5, r0
 18677 0034 B0B9     		cbnz	r0, .L1326
8659:Core/Src/bno055.c ****             {
8660:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_INTR_RST, intr_rst_u8);
 18678              		.loc 1 8660 17 is_stmt 1 view .LVU5150
 18679              		.loc 1 8660 28 is_stmt 0 view .LVU5151
 18680 0036 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18681 003a 23F04003 		bic	r3, r3, #64
 18682 003e 5BB2     		sxtb	r3, r3
 18683 0040 A401     		lsls	r4, r4, #6
 18684 0042 04F04004 		and	r4, r4, #64
 18685 0046 1C43     		orrs	r4, r4, r3
 18686              		.loc 1 8660 26 view .LVU5152
 18687 0048 8DF80740 		strb	r4, [sp, #7]
8661:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18688              		.loc 1 8661 17 is_stmt 1 view .LVU5153
 18689              		.loc 1 8661 37 is_stmt 0 view .LVU5154
ARM GAS  /tmp/ccO72alg.s 			page 529


 18690 004c 0D4B     		ldr	r3, .L1333
 18691 004e 1868     		ldr	r0, [r3]
 18692              	.LVL2314:
 18693              		.loc 1 8661 37 view .LVU5155
 18694 0050 C468     		ldr	r4, [r0, #12]
 18695              		.loc 1 8661 29 view .LVU5156
 18696 0052 0123     		movs	r3, #1
 18697 0054 0DF10702 		add	r2, sp, #7
 18698 0058 3F21     		movs	r1, #63
 18699 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18700 005c A047     		blx	r4
 18701              	.LVL2315:
 18702              		.loc 1 8661 26 view .LVU5157
 18703 005e 55FA80F5 		uxtab	r5, r5, r0
 18704 0062 6DB2     		sxtb	r5, r5
 18705              	.LVL2316:
 18706              	.L1326:
8662:Core/Src/bno055.c ****                                                             BNO055_INTR_RST_REG,
8663:Core/Src/bno055.c ****                                                             &data_u8r,
8664:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8665:Core/Src/bno055.c ****             }
8666:Core/Src/bno055.c ****         }
8667:Core/Src/bno055.c ****         else
8668:Core/Src/bno055.c ****         {
8669:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8670:Core/Src/bno055.c ****         }
8671:Core/Src/bno055.c ****     }
8672:Core/Src/bno055.c **** 
8673:Core/Src/bno055.c ****     return com_rslt;
8674:Core/Src/bno055.c **** }
 18707              		.loc 1 8674 1 view .LVU5158
 18708 0064 2846     		mov	r0, r5
 18709 0066 03B0     		add	sp, sp, #12
 18710              	.LCFI595:
 18711              		.cfi_remember_state
 18712              		.cfi_def_cfa_offset 12
 18713              		@ sp needed
 18714 0068 30BD     		pop	{r4, r5, pc}
 18715              	.LVL2317:
 18716              	.L1332:
 18717              	.LCFI596:
 18718              		.cfi_restore_state
8649:Core/Src/bno055.c ****         }
 18719              		.loc 1 8649 13 is_stmt 1 view .LVU5159
8649:Core/Src/bno055.c ****         }
 18720              		.loc 1 8649 23 is_stmt 0 view .LVU5160
 18721 006a 0020     		movs	r0, #0
 18722              	.LVL2318:
8649:Core/Src/bno055.c ****         }
 18723              		.loc 1 8649 23 view .LVU5161
 18724 006c FFF7FEFF 		bl	bno055_write_page_id
 18725              	.LVL2319:
8651:Core/Src/bno055.c ****         {
 18726              		.loc 1 8651 9 is_stmt 1 view .LVU5162
8651:Core/Src/bno055.c ****         {
 18727              		.loc 1 8651 12 is_stmt 0 view .LVU5163
 18728 0070 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 530


 18729 0072 D5D0     		beq	.L1328
 18730 0074 D0E7     		b	.L1327
 18731              	.LVL2320:
 18732              	.L1329:
8640:Core/Src/bno055.c ****     }
 18733              		.loc 1 8640 16 view .LVU5164
 18734 0076 6FF07E05 		mvn	r5, #126
 18735 007a F3E7     		b	.L1326
 18736              	.LVL2321:
 18737              	.L1330:
8669:Core/Src/bno055.c ****         }
 18738              		.loc 1 8669 22 view .LVU5165
 18739 007c 4FF0FF35 		mov	r5, #-1
 18740 0080 F0E7     		b	.L1326
 18741              	.L1334:
 18742 0082 00BF     		.align	2
 18743              	.L1333:
 18744 0084 00000000 		.word	.LANCHOR0
 18745              		.cfi_endproc
 18746              	.LFE150:
 18748              		.section	.text.bno055_get_clk_src,"ax",%progbits
 18749              		.align	1
 18750              		.global	bno055_get_clk_src
 18751              		.syntax unified
 18752              		.thumb
 18753              		.thumb_func
 18755              	bno055_get_clk_src:
 18756              	.LVL2322:
 18757              	.LFB151:
8675:Core/Src/bno055.c **** 
8676:Core/Src/bno055.c **** /*!
8677:Core/Src/bno055.c ****  *  @brief This API used to read the clk source
8678:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8679:Core/Src/bno055.c ****  *
8680:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8681:Core/Src/bno055.c ****  *
8682:Core/Src/bno055.c ****  *   clk_src_u8   | result
8683:Core/Src/bno055.c ****  *   -------------- |----------
8684:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8685:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8686:Core/Src/bno055.c ****  *
8687:Core/Src/bno055.c ****  *  @return results of bus communication function
8688:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8689:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8690:Core/Src/bno055.c ****  *
8691:Core/Src/bno055.c ****  */
8692:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_clk_src(u8 *clk_src_u8)
8693:Core/Src/bno055.c **** {
 18758              		.loc 1 8693 1 is_stmt 1 view -0
 18759              		.cfi_startproc
 18760              		@ args = 0, pretend = 0, frame = 8
 18761              		@ frame_needed = 0, uses_anonymous_args = 0
 18762              		.loc 1 8693 1 is_stmt 0 view .LVU5167
 18763 0000 30B5     		push	{r4, r5, lr}
 18764              	.LCFI597:
 18765              		.cfi_def_cfa_offset 12
 18766              		.cfi_offset 4, -12
ARM GAS  /tmp/ccO72alg.s 			page 531


 18767              		.cfi_offset 5, -8
 18768              		.cfi_offset 14, -4
 18769 0002 83B0     		sub	sp, sp, #12
 18770              	.LCFI598:
 18771              		.cfi_def_cfa_offset 24
8694:Core/Src/bno055.c ****     /* Variable used to return value of
8695:Core/Src/bno055.c ****      * communication routine*/
8696:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18772              		.loc 1 8696 5 is_stmt 1 view .LVU5168
 18773              	.LVL2323:
8697:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18774              		.loc 1 8697 5 view .LVU5169
 18775              		.loc 1 8697 8 is_stmt 0 view .LVU5170
 18776 0004 0023     		movs	r3, #0
 18777 0006 8DF80730 		strb	r3, [sp, #7]
8698:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18778              		.loc 1 8698 5 is_stmt 1 view .LVU5171
 18779              	.LVL2324:
8699:Core/Src/bno055.c **** 
8700:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8701:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18780              		.loc 1 8701 5 view .LVU5172
 18781              		.loc 1 8701 18 is_stmt 0 view .LVU5173
 18782 000a 124B     		ldr	r3, .L1343
 18783 000c 1B68     		ldr	r3, [r3]
 18784              		.loc 1 8701 8 view .LVU5174
 18785 000e DBB1     		cbz	r3, .L1339
 18786 0010 0446     		mov	r4, r0
8702:Core/Src/bno055.c ****     {
8703:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8704:Core/Src/bno055.c ****     }
8705:Core/Src/bno055.c ****     else
8706:Core/Src/bno055.c ****     {
8707:Core/Src/bno055.c ****         /*condition check for page, clk source is
8708:Core/Src/bno055.c ****          * available in the page zero*/
8709:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18787              		.loc 1 8709 9 is_stmt 1 view .LVU5175
 18788              		.loc 1 8709 21 is_stmt 0 view .LVU5176
 18789 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18790              		.loc 1 8709 12 view .LVU5177
 18791 0014 93B9     		cbnz	r3, .L1342
 18792              	.LVL2325:
 18793              	.L1337:
8710:Core/Src/bno055.c ****         {
8711:Core/Src/bno055.c ****             /* Write the page zero*/
8712:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8713:Core/Src/bno055.c ****         }
8714:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18794              		.loc 1 8714 53 discriminator 1 view .LVU5178
 18795 0016 0F4B     		ldr	r3, .L1343
 18796 0018 1B68     		ldr	r3, [r3]
 18797 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18798              		.loc 1 8714 41 discriminator 1 view .LVU5179
 18799 001c BBB9     		cbnz	r3, .L1340
 18800              	.L1338:
8715:Core/Src/bno055.c ****         {
8716:Core/Src/bno055.c ****             /* Read the value of clk source */
ARM GAS  /tmp/ccO72alg.s 			page 532


8717:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18801              		.loc 1 8717 13 is_stmt 1 view .LVU5180
 18802              		.loc 1 8717 32 is_stmt 0 view .LVU5181
 18803 001e 0D4B     		ldr	r3, .L1343
 18804 0020 1868     		ldr	r0, [r3]
 18805 0022 0569     		ldr	r5, [r0, #16]
 18806              		.loc 1 8717 24 view .LVU5182
 18807 0024 0123     		movs	r3, #1
 18808 0026 0DF10702 		add	r2, sp, #7
 18809 002a 3F21     		movs	r1, #63
 18810 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18811 002e A847     		blx	r5
 18812              	.LVL2326:
8718:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8719:Core/Src/bno055.c ****                                                       &data_u8r,
8720:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8721:Core/Src/bno055.c ****             *clk_src_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_CLK_SRC);
 18813              		.loc 1 8721 13 is_stmt 1 view .LVU5183
 18814              		.loc 1 8721 27 is_stmt 0 view .LVU5184
 18815 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 18816 0034 DB09     		lsrs	r3, r3, #7
 18817              		.loc 1 8721 25 view .LVU5185
 18818 0036 2370     		strb	r3, [r4]
 18819              	.LVL2327:
 18820              	.L1336:
8722:Core/Src/bno055.c ****         }
8723:Core/Src/bno055.c ****         else
8724:Core/Src/bno055.c ****         {
8725:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8726:Core/Src/bno055.c ****         }
8727:Core/Src/bno055.c ****     }
8728:Core/Src/bno055.c **** 
8729:Core/Src/bno055.c ****     return com_rslt;
8730:Core/Src/bno055.c **** }
 18821              		.loc 1 8730 1 view .LVU5186
 18822 0038 03B0     		add	sp, sp, #12
 18823              	.LCFI599:
 18824              		.cfi_remember_state
 18825              		.cfi_def_cfa_offset 12
 18826              		@ sp needed
 18827 003a 30BD     		pop	{r4, r5, pc}
 18828              	.LVL2328:
 18829              	.L1342:
 18830              	.LCFI600:
 18831              		.cfi_restore_state
8712:Core/Src/bno055.c ****         }
 18832              		.loc 1 8712 13 is_stmt 1 view .LVU5187
8712:Core/Src/bno055.c ****         }
 18833              		.loc 1 8712 23 is_stmt 0 view .LVU5188
 18834 003c 0020     		movs	r0, #0
 18835              	.LVL2329:
8712:Core/Src/bno055.c ****         }
 18836              		.loc 1 8712 23 view .LVU5189
 18837 003e FFF7FEFF 		bl	bno055_write_page_id
 18838              	.LVL2330:
8714:Core/Src/bno055.c ****         {
 18839              		.loc 1 8714 9 is_stmt 1 view .LVU5190
ARM GAS  /tmp/ccO72alg.s 			page 533


8714:Core/Src/bno055.c ****         {
 18840              		.loc 1 8714 12 is_stmt 0 view .LVU5191
 18841 0042 0028     		cmp	r0, #0
 18842 0044 EBD0     		beq	.L1338
 18843 0046 E6E7     		b	.L1337
 18844              	.LVL2331:
 18845              	.L1339:
8703:Core/Src/bno055.c ****     }
 18846              		.loc 1 8703 16 view .LVU5192
 18847 0048 6FF07E00 		mvn	r0, #126
 18848              	.LVL2332:
8703:Core/Src/bno055.c ****     }
 18849              		.loc 1 8703 16 view .LVU5193
 18850 004c F4E7     		b	.L1336
 18851              	.LVL2333:
 18852              	.L1340:
8725:Core/Src/bno055.c ****         }
 18853              		.loc 1 8725 22 view .LVU5194
 18854 004e 4FF0FF30 		mov	r0, #-1
 18855 0052 F1E7     		b	.L1336
 18856              	.L1344:
 18857              		.align	2
 18858              	.L1343:
 18859 0054 00000000 		.word	.LANCHOR0
 18860              		.cfi_endproc
 18861              	.LFE151:
 18863              		.section	.text.bno055_set_clk_src,"ax",%progbits
 18864              		.align	1
 18865              		.global	bno055_set_clk_src
 18866              		.syntax unified
 18867              		.thumb
 18868              		.thumb_func
 18870              	bno055_set_clk_src:
 18871              	.LVL2334:
 18872              	.LFB152:
8731:Core/Src/bno055.c **** 
8732:Core/Src/bno055.c **** /*!
8733:Core/Src/bno055.c ****  *  @brief This API used to write the clk source
8734:Core/Src/bno055.c ****  *  from register from 0x3F bit 7
8735:Core/Src/bno055.c ****  *
8736:Core/Src/bno055.c ****  *  @param clk_src_u8 : The value of clk source
8737:Core/Src/bno055.c ****  *
8738:Core/Src/bno055.c ****  *   clk_src_u8   | result
8739:Core/Src/bno055.c ****  *   -------------- |----------
8740:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8741:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8742:Core/Src/bno055.c ****  *
8743:Core/Src/bno055.c ****  *  @return results of bus communication function
8744:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8745:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8746:Core/Src/bno055.c ****  *
8747:Core/Src/bno055.c ****  */
8748:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_clk_src(u8 clk_src_u8)
8749:Core/Src/bno055.c **** {
 18873              		.loc 1 8749 1 is_stmt 1 view -0
 18874              		.cfi_startproc
 18875              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccO72alg.s 			page 534


 18876              		@ frame_needed = 0, uses_anonymous_args = 0
 18877              		.loc 1 8749 1 is_stmt 0 view .LVU5196
 18878 0000 30B5     		push	{r4, r5, lr}
 18879              	.LCFI601:
 18880              		.cfi_def_cfa_offset 12
 18881              		.cfi_offset 4, -12
 18882              		.cfi_offset 5, -8
 18883              		.cfi_offset 14, -4
 18884 0002 83B0     		sub	sp, sp, #12
 18885              	.LCFI602:
 18886              		.cfi_def_cfa_offset 24
8750:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 18887              		.loc 1 8750 5 is_stmt 1 view .LVU5197
 18888              	.LVL2335:
8751:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 18889              		.loc 1 8751 5 view .LVU5198
 18890              		.loc 1 8751 8 is_stmt 0 view .LVU5199
 18891 0004 0023     		movs	r3, #0
 18892 0006 8DF80730 		strb	r3, [sp, #7]
8752:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 18893              		.loc 1 8752 5 is_stmt 1 view .LVU5200
 18894              	.LVL2336:
8753:Core/Src/bno055.c **** 
8754:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8755:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 18895              		.loc 1 8755 5 view .LVU5201
 18896              		.loc 1 8755 18 is_stmt 0 view .LVU5202
 18897 000a 1C4B     		ldr	r3, .L1353
 18898 000c 1B68     		ldr	r3, [r3]
 18899              		.loc 1 8755 8 view .LVU5203
 18900 000e 002B     		cmp	r3, #0
 18901 0010 2ED0     		beq	.L1349
 18902 0012 0446     		mov	r4, r0
8756:Core/Src/bno055.c ****     {
8757:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8758:Core/Src/bno055.c ****     }
8759:Core/Src/bno055.c ****     else
8760:Core/Src/bno055.c ****     {
8761:Core/Src/bno055.c ****         /*condition check for page, clk source is
8762:Core/Src/bno055.c ****          * available in the page zero*/
8763:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 18903              		.loc 1 8763 9 is_stmt 1 view .LVU5204
 18904              		.loc 1 8763 21 is_stmt 0 view .LVU5205
 18905 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 18906              		.loc 1 8763 12 view .LVU5206
 18907 0016 2BBB     		cbnz	r3, .L1352
 18908              	.LVL2337:
 18909              	.L1347:
8764:Core/Src/bno055.c ****         {
8765:Core/Src/bno055.c ****             /* Write the page zero*/
8766:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8767:Core/Src/bno055.c ****         }
8768:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 18910              		.loc 1 8768 53 discriminator 1 view .LVU5207
 18911 0018 184B     		ldr	r3, .L1353
 18912 001a 1B68     		ldr	r3, [r3]
 18913 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 535


 18914              		.loc 1 8768 41 discriminator 1 view .LVU5208
 18915 001e 53BB     		cbnz	r3, .L1350
 18916              	.L1348:
8769:Core/Src/bno055.c ****         {
8770:Core/Src/bno055.c ****             /* Write the value of clk source */
8771:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 18917              		.loc 1 8771 13 is_stmt 1 view .LVU5209
 18918              		.loc 1 8771 32 is_stmt 0 view .LVU5210
 18919 0020 164B     		ldr	r3, .L1353
 18920 0022 1868     		ldr	r0, [r3]
 18921 0024 0569     		ldr	r5, [r0, #16]
 18922              		.loc 1 8771 24 view .LVU5211
 18923 0026 0123     		movs	r3, #1
 18924 0028 0DF10702 		add	r2, sp, #7
 18925 002c 3F21     		movs	r1, #63
 18926 002e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18927 0030 A847     		blx	r5
 18928              	.LVL2338:
8772:Core/Src/bno055.c ****                                                       BNO055_CLK_SRC_REG,
8773:Core/Src/bno055.c ****                                                       &data_u8r,
8774:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8775:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 18929              		.loc 1 8775 13 is_stmt 1 view .LVU5212
 18930              		.loc 1 8775 16 is_stmt 0 view .LVU5213
 18931 0032 0546     		mov	r5, r0
 18932 0034 98B9     		cbnz	r0, .L1346
8776:Core/Src/bno055.c ****             {
8777:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_CLK_SRC, clk_src_u8);
 18933              		.loc 1 8777 17 is_stmt 1 view .LVU5214
 18934              		.loc 1 8777 28 is_stmt 0 view .LVU5215
 18935 0036 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 18936              	.LVL2339:
 18937              		.loc 1 8777 28 view .LVU5216
 18938 003a 00F07F00 		and	r0, r0, #127
 18939 003e 40EAC414 		orr	r4, r0, r4, lsl #7
 18940              		.loc 1 8777 26 view .LVU5217
 18941 0042 8DF80740 		strb	r4, [sp, #7]
8778:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 18942              		.loc 1 8778 17 is_stmt 1 view .LVU5218
 18943              		.loc 1 8778 37 is_stmt 0 view .LVU5219
 18944 0046 0D4B     		ldr	r3, .L1353
 18945 0048 1868     		ldr	r0, [r3]
 18946 004a C468     		ldr	r4, [r0, #12]
 18947              		.loc 1 8778 29 view .LVU5220
 18948 004c 0123     		movs	r3, #1
 18949 004e 0DF10702 		add	r2, sp, #7
 18950 0052 3F21     		movs	r1, #63
 18951 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 18952 0056 A047     		blx	r4
 18953              	.LVL2340:
 18954              		.loc 1 8778 26 view .LVU5221
 18955 0058 55FA80F5 		uxtab	r5, r5, r0
 18956 005c 6DB2     		sxtb	r5, r5
 18957              	.LVL2341:
 18958              	.L1346:
8779:Core/Src/bno055.c ****                                                             BNO055_CLK_SRC_REG,
8780:Core/Src/bno055.c ****                                                             &data_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 536


8781:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
8782:Core/Src/bno055.c ****             }
8783:Core/Src/bno055.c ****         }
8784:Core/Src/bno055.c ****         else
8785:Core/Src/bno055.c ****         {
8786:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8787:Core/Src/bno055.c ****         }
8788:Core/Src/bno055.c ****     }
8789:Core/Src/bno055.c **** 
8790:Core/Src/bno055.c ****     return com_rslt;
8791:Core/Src/bno055.c **** }
 18959              		.loc 1 8791 1 view .LVU5222
 18960 005e 2846     		mov	r0, r5
 18961 0060 03B0     		add	sp, sp, #12
 18962              	.LCFI603:
 18963              		.cfi_remember_state
 18964              		.cfi_def_cfa_offset 12
 18965              		@ sp needed
 18966 0062 30BD     		pop	{r4, r5, pc}
 18967              	.LVL2342:
 18968              	.L1352:
 18969              	.LCFI604:
 18970              		.cfi_restore_state
8766:Core/Src/bno055.c ****         }
 18971              		.loc 1 8766 13 is_stmt 1 view .LVU5223
8766:Core/Src/bno055.c ****         }
 18972              		.loc 1 8766 23 is_stmt 0 view .LVU5224
 18973 0064 0020     		movs	r0, #0
 18974              	.LVL2343:
8766:Core/Src/bno055.c ****         }
 18975              		.loc 1 8766 23 view .LVU5225
 18976 0066 FFF7FEFF 		bl	bno055_write_page_id
 18977              	.LVL2344:
8768:Core/Src/bno055.c ****         {
 18978              		.loc 1 8768 9 is_stmt 1 view .LVU5226
8768:Core/Src/bno055.c ****         {
 18979              		.loc 1 8768 12 is_stmt 0 view .LVU5227
 18980 006a 0028     		cmp	r0, #0
 18981 006c D8D0     		beq	.L1348
 18982 006e D3E7     		b	.L1347
 18983              	.LVL2345:
 18984              	.L1349:
8757:Core/Src/bno055.c ****     }
 18985              		.loc 1 8757 16 view .LVU5228
 18986 0070 6FF07E05 		mvn	r5, #126
 18987 0074 F3E7     		b	.L1346
 18988              	.LVL2346:
 18989              	.L1350:
8786:Core/Src/bno055.c ****         }
 18990              		.loc 1 8786 22 view .LVU5229
 18991 0076 4FF0FF35 		mov	r5, #-1
 18992 007a F0E7     		b	.L1346
 18993              	.L1354:
 18994              		.align	2
 18995              	.L1353:
 18996 007c 00000000 		.word	.LANCHOR0
 18997              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 537


 18998              	.LFE152:
 19000              		.section	.text.bno055_get_sys_rst,"ax",%progbits
 19001              		.align	1
 19002              		.global	bno055_get_sys_rst
 19003              		.syntax unified
 19004              		.thumb
 19005              		.thumb_func
 19007              	bno055_get_sys_rst:
 19008              	.LVL2347:
 19009              	.LFB153:
8792:Core/Src/bno055.c **** 
8793:Core/Src/bno055.c **** /*!
8794:Core/Src/bno055.c ****  *  @brief This API used to read the reset system
8795:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8796:Core/Src/bno055.c ****  *
8797:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8798:Core/Src/bno055.c ****  *
8799:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8800:Core/Src/bno055.c ****  *   -------------- |----------
8801:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8802:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8803:Core/Src/bno055.c ****  *
8804:Core/Src/bno055.c ****  *  @return results of bus communication function
8805:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8806:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8807:Core/Src/bno055.c ****  *
8808:Core/Src/bno055.c ****  *  @note It resets the whole system
8809:Core/Src/bno055.c ****  */
8810:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_sys_rst(u8 *sys_rst_u8)
8811:Core/Src/bno055.c **** {
 19010              		.loc 1 8811 1 is_stmt 1 view -0
 19011              		.cfi_startproc
 19012              		@ args = 0, pretend = 0, frame = 8
 19013              		@ frame_needed = 0, uses_anonymous_args = 0
 19014              		.loc 1 8811 1 is_stmt 0 view .LVU5231
 19015 0000 30B5     		push	{r4, r5, lr}
 19016              	.LCFI605:
 19017              		.cfi_def_cfa_offset 12
 19018              		.cfi_offset 4, -12
 19019              		.cfi_offset 5, -8
 19020              		.cfi_offset 14, -4
 19021 0002 83B0     		sub	sp, sp, #12
 19022              	.LCFI606:
 19023              		.cfi_def_cfa_offset 24
8812:Core/Src/bno055.c ****     /* Variable used to return value of
8813:Core/Src/bno055.c ****      * communication routine*/
8814:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19024              		.loc 1 8814 5 is_stmt 1 view .LVU5232
 19025              	.LVL2348:
8815:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19026              		.loc 1 8815 5 view .LVU5233
 19027              		.loc 1 8815 8 is_stmt 0 view .LVU5234
 19028 0004 0023     		movs	r3, #0
 19029 0006 8DF80730 		strb	r3, [sp, #7]
8816:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19030              		.loc 1 8816 5 is_stmt 1 view .LVU5235
 19031              	.LVL2349:
ARM GAS  /tmp/ccO72alg.s 			page 538


8817:Core/Src/bno055.c **** 
8818:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8819:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19032              		.loc 1 8819 5 view .LVU5236
 19033              		.loc 1 8819 18 is_stmt 0 view .LVU5237
 19034 000a 134B     		ldr	r3, .L1363
 19035 000c 1B68     		ldr	r3, [r3]
 19036              		.loc 1 8819 8 view .LVU5238
 19037 000e E3B1     		cbz	r3, .L1359
 19038 0010 0446     		mov	r4, r0
8820:Core/Src/bno055.c ****     {
8821:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8822:Core/Src/bno055.c ****     }
8823:Core/Src/bno055.c ****     else
8824:Core/Src/bno055.c ****     {
8825:Core/Src/bno055.c ****         /*condition check for page, reset system is
8826:Core/Src/bno055.c ****          * available in the page zero*/
8827:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19039              		.loc 1 8827 9 is_stmt 1 view .LVU5239
 19040              		.loc 1 8827 21 is_stmt 0 view .LVU5240
 19041 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19042              		.loc 1 8827 12 view .LVU5241
 19043 0014 9BB9     		cbnz	r3, .L1362
 19044              	.LVL2350:
 19045              	.L1357:
8828:Core/Src/bno055.c ****         {
8829:Core/Src/bno055.c ****             /* Write the page zero*/
8830:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8831:Core/Src/bno055.c ****         }
8832:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19046              		.loc 1 8832 53 discriminator 1 view .LVU5242
 19047 0016 104B     		ldr	r3, .L1363
 19048 0018 1B68     		ldr	r3, [r3]
 19049 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19050              		.loc 1 8832 41 discriminator 1 view .LVU5243
 19051 001c C3B9     		cbnz	r3, .L1360
 19052              	.L1358:
8833:Core/Src/bno055.c ****         {
8834:Core/Src/bno055.c ****             /* Read the value of reset system */
8835:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19053              		.loc 1 8835 13 is_stmt 1 view .LVU5244
 19054              		.loc 1 8835 32 is_stmt 0 view .LVU5245
 19055 001e 0E4B     		ldr	r3, .L1363
 19056 0020 1868     		ldr	r0, [r3]
 19057 0022 0569     		ldr	r5, [r0, #16]
 19058              		.loc 1 8835 24 view .LVU5246
 19059 0024 0123     		movs	r3, #1
 19060 0026 0DF10702 		add	r2, sp, #7
 19061 002a 3F21     		movs	r1, #63
 19062 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19063 002e A847     		blx	r5
 19064              	.LVL2351:
8836:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8837:Core/Src/bno055.c ****                                                       &data_u8r,
8838:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8839:Core/Src/bno055.c ****             *sys_rst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SYS_RST);
 19065              		.loc 1 8839 13 is_stmt 1 view .LVU5247
ARM GAS  /tmp/ccO72alg.s 			page 539


 19066              		.loc 1 8839 27 is_stmt 0 view .LVU5248
 19067 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19068 0034 C3F34013 		ubfx	r3, r3, #5, #1
 19069              		.loc 1 8839 25 view .LVU5249
 19070 0038 2370     		strb	r3, [r4]
 19071              	.LVL2352:
 19072              	.L1356:
8840:Core/Src/bno055.c ****         }
8841:Core/Src/bno055.c ****         else
8842:Core/Src/bno055.c ****         {
8843:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8844:Core/Src/bno055.c ****         }
8845:Core/Src/bno055.c ****     }
8846:Core/Src/bno055.c **** 
8847:Core/Src/bno055.c ****     return com_rslt;
8848:Core/Src/bno055.c **** }
 19073              		.loc 1 8848 1 view .LVU5250
 19074 003a 03B0     		add	sp, sp, #12
 19075              	.LCFI607:
 19076              		.cfi_remember_state
 19077              		.cfi_def_cfa_offset 12
 19078              		@ sp needed
 19079 003c 30BD     		pop	{r4, r5, pc}
 19080              	.LVL2353:
 19081              	.L1362:
 19082              	.LCFI608:
 19083              		.cfi_restore_state
8830:Core/Src/bno055.c ****         }
 19084              		.loc 1 8830 13 is_stmt 1 view .LVU5251
8830:Core/Src/bno055.c ****         }
 19085              		.loc 1 8830 23 is_stmt 0 view .LVU5252
 19086 003e 0020     		movs	r0, #0
 19087              	.LVL2354:
8830:Core/Src/bno055.c ****         }
 19088              		.loc 1 8830 23 view .LVU5253
 19089 0040 FFF7FEFF 		bl	bno055_write_page_id
 19090              	.LVL2355:
8832:Core/Src/bno055.c ****         {
 19091              		.loc 1 8832 9 is_stmt 1 view .LVU5254
8832:Core/Src/bno055.c ****         {
 19092              		.loc 1 8832 12 is_stmt 0 view .LVU5255
 19093 0044 0028     		cmp	r0, #0
 19094 0046 EAD0     		beq	.L1358
 19095 0048 E5E7     		b	.L1357
 19096              	.LVL2356:
 19097              	.L1359:
8821:Core/Src/bno055.c ****     }
 19098              		.loc 1 8821 16 view .LVU5256
 19099 004a 6FF07E00 		mvn	r0, #126
 19100              	.LVL2357:
8821:Core/Src/bno055.c ****     }
 19101              		.loc 1 8821 16 view .LVU5257
 19102 004e F4E7     		b	.L1356
 19103              	.LVL2358:
 19104              	.L1360:
8843:Core/Src/bno055.c ****         }
 19105              		.loc 1 8843 22 view .LVU5258
ARM GAS  /tmp/ccO72alg.s 			page 540


 19106 0050 4FF0FF30 		mov	r0, #-1
 19107 0054 F1E7     		b	.L1356
 19108              	.L1364:
 19109 0056 00BF     		.align	2
 19110              	.L1363:
 19111 0058 00000000 		.word	.LANCHOR0
 19112              		.cfi_endproc
 19113              	.LFE153:
 19115              		.section	.text.bno055_set_sys_rst,"ax",%progbits
 19116              		.align	1
 19117              		.global	bno055_set_sys_rst
 19118              		.syntax unified
 19119              		.thumb
 19120              		.thumb_func
 19122              	bno055_set_sys_rst:
 19123              	.LVL2359:
 19124              	.LFB154:
8849:Core/Src/bno055.c **** 
8850:Core/Src/bno055.c **** /*!
8851:Core/Src/bno055.c ****  *  @brief This API used to write the reset system
8852:Core/Src/bno055.c ****  *  from register from 0x3F bit 5
8853:Core/Src/bno055.c ****  *
8854:Core/Src/bno055.c ****  *  @param sys_rst_u8 : The value of reset system
8855:Core/Src/bno055.c ****  *
8856:Core/Src/bno055.c ****  *   sys_rst_u8   | result
8857:Core/Src/bno055.c ****  *   -------------- |----------
8858:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8859:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8860:Core/Src/bno055.c ****  *
8861:Core/Src/bno055.c ****  *  @return results of bus communication function
8862:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8863:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8864:Core/Src/bno055.c ****  *
8865:Core/Src/bno055.c ****  *  @note It resets the whole system
8866:Core/Src/bno055.c ****  */
8867:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_sys_rst(u8 sys_rst_u8)
8868:Core/Src/bno055.c **** {
 19125              		.loc 1 8868 1 is_stmt 1 view -0
 19126              		.cfi_startproc
 19127              		@ args = 0, pretend = 0, frame = 8
 19128              		@ frame_needed = 0, uses_anonymous_args = 0
 19129              		.loc 1 8868 1 is_stmt 0 view .LVU5260
 19130 0000 30B5     		push	{r4, r5, lr}
 19131              	.LCFI609:
 19132              		.cfi_def_cfa_offset 12
 19133              		.cfi_offset 4, -12
 19134              		.cfi_offset 5, -8
 19135              		.cfi_offset 14, -4
 19136 0002 83B0     		sub	sp, sp, #12
 19137              	.LCFI610:
 19138              		.cfi_def_cfa_offset 24
8869:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19139              		.loc 1 8869 5 is_stmt 1 view .LVU5261
 19140              	.LVL2360:
8870:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19141              		.loc 1 8870 5 view .LVU5262
 19142              		.loc 1 8870 8 is_stmt 0 view .LVU5263
ARM GAS  /tmp/ccO72alg.s 			page 541


 19143 0004 0023     		movs	r3, #0
 19144 0006 8DF80730 		strb	r3, [sp, #7]
8871:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19145              		.loc 1 8871 5 is_stmt 1 view .LVU5264
 19146              	.LVL2361:
8872:Core/Src/bno055.c **** 
8873:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8874:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19147              		.loc 1 8874 5 view .LVU5265
 19148              		.loc 1 8874 18 is_stmt 0 view .LVU5266
 19149 000a 1B4B     		ldr	r3, .L1373
 19150 000c 1B68     		ldr	r3, [r3]
 19151              		.loc 1 8874 8 view .LVU5267
 19152 000e 63B3     		cbz	r3, .L1369
 19153 0010 0446     		mov	r4, r0
8875:Core/Src/bno055.c ****     {
8876:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8877:Core/Src/bno055.c ****     }
8878:Core/Src/bno055.c ****     else
8879:Core/Src/bno055.c ****     {
8880:Core/Src/bno055.c ****         /*condition check for page, reset system is
8881:Core/Src/bno055.c ****          * available in the page zero*/
8882:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19154              		.loc 1 8882 9 is_stmt 1 view .LVU5268
 19155              		.loc 1 8882 21 is_stmt 0 view .LVU5269
 19156 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19157              		.loc 1 8882 12 view .LVU5270
 19158 0014 1BBB     		cbnz	r3, .L1372
 19159              	.LVL2362:
 19160              	.L1367:
8883:Core/Src/bno055.c ****         {
8884:Core/Src/bno055.c ****             /* Write the page zero*/
8885:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8886:Core/Src/bno055.c ****         }
8887:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19161              		.loc 1 8887 53 discriminator 1 view .LVU5271
 19162 0016 184B     		ldr	r3, .L1373
 19163 0018 1B68     		ldr	r3, [r3]
 19164 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19165              		.loc 1 8887 41 discriminator 1 view .LVU5272
 19166 001c 43BB     		cbnz	r3, .L1370
 19167              	.L1368:
8888:Core/Src/bno055.c ****         {
8889:Core/Src/bno055.c ****             /* Write the value of reset system */
8890:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19168              		.loc 1 8890 13 is_stmt 1 view .LVU5273
 19169              		.loc 1 8890 32 is_stmt 0 view .LVU5274
 19170 001e 164B     		ldr	r3, .L1373
 19171 0020 1868     		ldr	r0, [r3]
 19172 0022 0569     		ldr	r5, [r0, #16]
 19173              		.loc 1 8890 24 view .LVU5275
 19174 0024 0123     		movs	r3, #1
 19175 0026 0DF10702 		add	r2, sp, #7
 19176 002a 3F21     		movs	r1, #63
 19177 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19178 002e A847     		blx	r5
 19179              	.LVL2363:
ARM GAS  /tmp/ccO72alg.s 			page 542


8891:Core/Src/bno055.c ****                                                       BNO055_SYS_RST_REG,
8892:Core/Src/bno055.c ****                                                       &data_u8r,
8893:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8894:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 19180              		.loc 1 8894 13 is_stmt 1 view .LVU5276
 19181              		.loc 1 8894 16 is_stmt 0 view .LVU5277
 19182 0030 98B9     		cbnz	r0, .L1366
8895:Core/Src/bno055.c ****             {
8896:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SYS_RST, sys_rst_u8);
 19183              		.loc 1 8896 17 is_stmt 1 view .LVU5278
 19184              		.loc 1 8896 28 is_stmt 0 view .LVU5279
 19185 0032 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19186 0036 23F02003 		bic	r3, r3, #32
 19187 003a 5BB2     		sxtb	r3, r3
 19188 003c 6401     		lsls	r4, r4, #5
 19189 003e 04F02004 		and	r4, r4, #32
 19190 0042 1C43     		orrs	r4, r4, r3
 19191              		.loc 1 8896 26 view .LVU5280
 19192 0044 8DF80740 		strb	r4, [sp, #7]
8897:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19193              		.loc 1 8897 17 is_stmt 1 view .LVU5281
 19194              		.loc 1 8897 36 is_stmt 0 view .LVU5282
 19195 0048 0B4B     		ldr	r3, .L1373
 19196 004a 1868     		ldr	r0, [r3]
 19197              	.LVL2364:
 19198              		.loc 1 8897 36 view .LVU5283
 19199 004c C468     		ldr	r4, [r0, #12]
 19200              		.loc 1 8897 28 view .LVU5284
 19201 004e 0123     		movs	r3, #1
 19202 0050 0DF10702 		add	r2, sp, #7
 19203 0054 3F21     		movs	r1, #63
 19204 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19205 0058 A047     		blx	r4
 19206              	.LVL2365:
 19207              	.L1366:
8898:Core/Src/bno055.c ****                                                            BNO055_SYS_RST_REG,
8899:Core/Src/bno055.c ****                                                            &data_u8r,
8900:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
8901:Core/Src/bno055.c ****             }
8902:Core/Src/bno055.c ****         }
8903:Core/Src/bno055.c ****         else
8904:Core/Src/bno055.c ****         {
8905:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8906:Core/Src/bno055.c ****         }
8907:Core/Src/bno055.c ****     }
8908:Core/Src/bno055.c **** 
8909:Core/Src/bno055.c ****     return com_rslt;
8910:Core/Src/bno055.c **** }
 19208              		.loc 1 8910 1 view .LVU5285
 19209 005a 03B0     		add	sp, sp, #12
 19210              	.LCFI611:
 19211              		.cfi_remember_state
 19212              		.cfi_def_cfa_offset 12
 19213              		@ sp needed
 19214 005c 30BD     		pop	{r4, r5, pc}
 19215              	.LVL2366:
 19216              	.L1372:
ARM GAS  /tmp/ccO72alg.s 			page 543


 19217              	.LCFI612:
 19218              		.cfi_restore_state
8885:Core/Src/bno055.c ****         }
 19219              		.loc 1 8885 13 is_stmt 1 view .LVU5286
8885:Core/Src/bno055.c ****         }
 19220              		.loc 1 8885 23 is_stmt 0 view .LVU5287
 19221 005e 0020     		movs	r0, #0
 19222              	.LVL2367:
8885:Core/Src/bno055.c ****         }
 19223              		.loc 1 8885 23 view .LVU5288
 19224 0060 FFF7FEFF 		bl	bno055_write_page_id
 19225              	.LVL2368:
8887:Core/Src/bno055.c ****         {
 19226              		.loc 1 8887 9 is_stmt 1 view .LVU5289
8887:Core/Src/bno055.c ****         {
 19227              		.loc 1 8887 12 is_stmt 0 view .LVU5290
 19228 0064 0028     		cmp	r0, #0
 19229 0066 DAD0     		beq	.L1368
 19230 0068 D5E7     		b	.L1367
 19231              	.LVL2369:
 19232              	.L1369:
8876:Core/Src/bno055.c ****     }
 19233              		.loc 1 8876 16 view .LVU5291
 19234 006a 6FF07E00 		mvn	r0, #126
 19235              	.LVL2370:
8876:Core/Src/bno055.c ****     }
 19236              		.loc 1 8876 16 view .LVU5292
 19237 006e F4E7     		b	.L1366
 19238              	.LVL2371:
 19239              	.L1370:
8905:Core/Src/bno055.c ****         }
 19240              		.loc 1 8905 22 view .LVU5293
 19241 0070 4FF0FF30 		mov	r0, #-1
 19242 0074 F1E7     		b	.L1366
 19243              	.L1374:
 19244 0076 00BF     		.align	2
 19245              	.L1373:
 19246 0078 00000000 		.word	.LANCHOR0
 19247              		.cfi_endproc
 19248              	.LFE154:
 19250              		.section	.text.bno055_get_selftest,"ax",%progbits
 19251              		.align	1
 19252              		.global	bno055_get_selftest
 19253              		.syntax unified
 19254              		.thumb
 19255              		.thumb_func
 19257              	bno055_get_selftest:
 19258              	.LVL2372:
 19259              	.LFB155:
8911:Core/Src/bno055.c **** 
8912:Core/Src/bno055.c **** /*!
8913:Core/Src/bno055.c ****  *  @brief This API used to read the self test
8914:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8915:Core/Src/bno055.c ****  *
8916:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8917:Core/Src/bno055.c ****  *
8918:Core/Src/bno055.c ****  *   selftest_u8  | result
ARM GAS  /tmp/ccO72alg.s 			page 544


8919:Core/Src/bno055.c ****  *   -------------- |----------
8920:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8921:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8922:Core/Src/bno055.c ****  *
8923:Core/Src/bno055.c ****  *  @return results of bus communication function
8924:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8925:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8926:Core/Src/bno055.c ****  *
8927:Core/Src/bno055.c ****  *  @note It triggers the self test
8928:Core/Src/bno055.c ****  */
8929:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_selftest(u8 *selftest_u8)
8930:Core/Src/bno055.c **** {
 19260              		.loc 1 8930 1 is_stmt 1 view -0
 19261              		.cfi_startproc
 19262              		@ args = 0, pretend = 0, frame = 8
 19263              		@ frame_needed = 0, uses_anonymous_args = 0
 19264              		.loc 1 8930 1 is_stmt 0 view .LVU5295
 19265 0000 30B5     		push	{r4, r5, lr}
 19266              	.LCFI613:
 19267              		.cfi_def_cfa_offset 12
 19268              		.cfi_offset 4, -12
 19269              		.cfi_offset 5, -8
 19270              		.cfi_offset 14, -4
 19271 0002 83B0     		sub	sp, sp, #12
 19272              	.LCFI614:
 19273              		.cfi_def_cfa_offset 24
8931:Core/Src/bno055.c ****     /* Variable used to return value of
8932:Core/Src/bno055.c ****      * communication routine*/
8933:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19274              		.loc 1 8933 5 is_stmt 1 view .LVU5296
 19275              	.LVL2373:
8934:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19276              		.loc 1 8934 5 view .LVU5297
 19277              		.loc 1 8934 8 is_stmt 0 view .LVU5298
 19278 0004 0023     		movs	r3, #0
 19279 0006 8DF80730 		strb	r3, [sp, #7]
8935:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19280              		.loc 1 8935 5 is_stmt 1 view .LVU5299
 19281              	.LVL2374:
8936:Core/Src/bno055.c **** 
8937:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8938:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19282              		.loc 1 8938 5 view .LVU5300
 19283              		.loc 1 8938 18 is_stmt 0 view .LVU5301
 19284 000a 134B     		ldr	r3, .L1383
 19285 000c 1B68     		ldr	r3, [r3]
 19286              		.loc 1 8938 8 view .LVU5302
 19287 000e E3B1     		cbz	r3, .L1379
 19288 0010 0446     		mov	r4, r0
8939:Core/Src/bno055.c ****     {
8940:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8941:Core/Src/bno055.c ****     }
8942:Core/Src/bno055.c ****     else
8943:Core/Src/bno055.c ****     {
8944:Core/Src/bno055.c ****         /*condition check for page, self test is
8945:Core/Src/bno055.c ****          * available in the page zero*/
8946:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
ARM GAS  /tmp/ccO72alg.s 			page 545


 19289              		.loc 1 8946 9 is_stmt 1 view .LVU5303
 19290              		.loc 1 8946 21 is_stmt 0 view .LVU5304
 19291 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19292              		.loc 1 8946 12 view .LVU5305
 19293 0014 9BB9     		cbnz	r3, .L1382
 19294              	.LVL2375:
 19295              	.L1377:
8947:Core/Src/bno055.c ****         {
8948:Core/Src/bno055.c ****             /* Write the page zero*/
8949:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
8950:Core/Src/bno055.c ****         }
8951:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19296              		.loc 1 8951 53 discriminator 1 view .LVU5306
 19297 0016 104B     		ldr	r3, .L1383
 19298 0018 1B68     		ldr	r3, [r3]
 19299 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19300              		.loc 1 8951 41 discriminator 1 view .LVU5307
 19301 001c C3B9     		cbnz	r3, .L1380
 19302              	.L1378:
8952:Core/Src/bno055.c ****         {
8953:Core/Src/bno055.c ****             /* Read the value of self test */
8954:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19303              		.loc 1 8954 13 is_stmt 1 view .LVU5308
 19304              		.loc 1 8954 32 is_stmt 0 view .LVU5309
 19305 001e 0E4B     		ldr	r3, .L1383
 19306 0020 1868     		ldr	r0, [r3]
 19307 0022 0569     		ldr	r5, [r0, #16]
 19308              		.loc 1 8954 24 view .LVU5310
 19309 0024 0123     		movs	r3, #1
 19310 0026 0DF10702 		add	r2, sp, #7
 19311 002a 3F21     		movs	r1, #63
 19312 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19313 002e A847     		blx	r5
 19314              	.LVL2376:
8955:Core/Src/bno055.c ****                                                       BNO055_SELFTEST_REG,
8956:Core/Src/bno055.c ****                                                       &data_u8r,
8957:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
8958:Core/Src/bno055.c ****             *selftest_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_SELFTEST);
 19315              		.loc 1 8958 13 is_stmt 1 view .LVU5311
 19316              		.loc 1 8958 28 is_stmt 0 view .LVU5312
 19317 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19318 0034 03F00103 		and	r3, r3, #1
 19319              		.loc 1 8958 26 view .LVU5313
 19320 0038 2370     		strb	r3, [r4]
 19321              	.LVL2377:
 19322              	.L1376:
8959:Core/Src/bno055.c ****         }
8960:Core/Src/bno055.c ****         else
8961:Core/Src/bno055.c ****         {
8962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
8963:Core/Src/bno055.c ****         }
8964:Core/Src/bno055.c ****     }
8965:Core/Src/bno055.c **** 
8966:Core/Src/bno055.c ****     return com_rslt;
8967:Core/Src/bno055.c **** }
 19323              		.loc 1 8967 1 view .LVU5314
 19324 003a 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 546


 19325              	.LCFI615:
 19326              		.cfi_remember_state
 19327              		.cfi_def_cfa_offset 12
 19328              		@ sp needed
 19329 003c 30BD     		pop	{r4, r5, pc}
 19330              	.LVL2378:
 19331              	.L1382:
 19332              	.LCFI616:
 19333              		.cfi_restore_state
8949:Core/Src/bno055.c ****         }
 19334              		.loc 1 8949 13 is_stmt 1 view .LVU5315
8949:Core/Src/bno055.c ****         }
 19335              		.loc 1 8949 23 is_stmt 0 view .LVU5316
 19336 003e 0020     		movs	r0, #0
 19337              	.LVL2379:
8949:Core/Src/bno055.c ****         }
 19338              		.loc 1 8949 23 view .LVU5317
 19339 0040 FFF7FEFF 		bl	bno055_write_page_id
 19340              	.LVL2380:
8951:Core/Src/bno055.c ****         {
 19341              		.loc 1 8951 9 is_stmt 1 view .LVU5318
8951:Core/Src/bno055.c ****         {
 19342              		.loc 1 8951 12 is_stmt 0 view .LVU5319
 19343 0044 0028     		cmp	r0, #0
 19344 0046 EAD0     		beq	.L1378
 19345 0048 E5E7     		b	.L1377
 19346              	.LVL2381:
 19347              	.L1379:
8940:Core/Src/bno055.c ****     }
 19348              		.loc 1 8940 16 view .LVU5320
 19349 004a 6FF07E00 		mvn	r0, #126
 19350              	.LVL2382:
8940:Core/Src/bno055.c ****     }
 19351              		.loc 1 8940 16 view .LVU5321
 19352 004e F4E7     		b	.L1376
 19353              	.LVL2383:
 19354              	.L1380:
8962:Core/Src/bno055.c ****         }
 19355              		.loc 1 8962 22 view .LVU5322
 19356 0050 4FF0FF30 		mov	r0, #-1
 19357 0054 F1E7     		b	.L1376
 19358              	.L1384:
 19359 0056 00BF     		.align	2
 19360              	.L1383:
 19361 0058 00000000 		.word	.LANCHOR0
 19362              		.cfi_endproc
 19363              	.LFE155:
 19365              		.section	.text.bno055_set_selftest,"ax",%progbits
 19366              		.align	1
 19367              		.global	bno055_set_selftest
 19368              		.syntax unified
 19369              		.thumb
 19370              		.thumb_func
 19372              	bno055_set_selftest:
 19373              	.LVL2384:
 19374              	.LFB156:
8968:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 547


8969:Core/Src/bno055.c **** /*!
8970:Core/Src/bno055.c ****  *  @brief This API used to write the self test
8971:Core/Src/bno055.c ****  *  from register from 0x3F bit 0
8972:Core/Src/bno055.c ****  *
8973:Core/Src/bno055.c ****  *  @param selftest_u8 : The value of self test
8974:Core/Src/bno055.c ****  *
8975:Core/Src/bno055.c ****  *   selftest_u8  | result
8976:Core/Src/bno055.c ****  *   -------------- |----------
8977:Core/Src/bno055.c ****  *     0x01         | BNO055_BIT_ENABLE
8978:Core/Src/bno055.c ****  *     0x00         | BNO055_BIT_DISABLE
8979:Core/Src/bno055.c ****  *
8980:Core/Src/bno055.c ****  *  @return results of bus communication function
8981:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
8982:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
8983:Core/Src/bno055.c ****  *
8984:Core/Src/bno055.c ****  *  @note It triggers the self test
8985:Core/Src/bno055.c ****  *
8986:Core/Src/bno055.c ****  *
8987:Core/Src/bno055.c ****  */
8988:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_selftest(u8 selftest_u8)
8989:Core/Src/bno055.c **** {
 19375              		.loc 1 8989 1 is_stmt 1 view -0
 19376              		.cfi_startproc
 19377              		@ args = 0, pretend = 0, frame = 8
 19378              		@ frame_needed = 0, uses_anonymous_args = 0
 19379              		.loc 1 8989 1 is_stmt 0 view .LVU5324
 19380 0000 30B5     		push	{r4, r5, lr}
 19381              	.LCFI617:
 19382              		.cfi_def_cfa_offset 12
 19383              		.cfi_offset 4, -12
 19384              		.cfi_offset 5, -8
 19385              		.cfi_offset 14, -4
 19386 0002 83B0     		sub	sp, sp, #12
 19387              	.LCFI618:
 19388              		.cfi_def_cfa_offset 24
8990:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19389              		.loc 1 8990 5 is_stmt 1 view .LVU5325
 19390              	.LVL2385:
8991:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19391              		.loc 1 8991 5 view .LVU5326
 19392              		.loc 1 8991 8 is_stmt 0 view .LVU5327
 19393 0004 0023     		movs	r3, #0
 19394 0006 8DF80730 		strb	r3, [sp, #7]
8992:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19395              		.loc 1 8992 5 is_stmt 1 view .LVU5328
 19396              		.loc 1 8992 8 is_stmt 0 view .LVU5329
 19397 000a 8DF80630 		strb	r3, [sp, #6]
8993:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19398              		.loc 1 8993 5 is_stmt 1 view .LVU5330
 19399              	.LVL2386:
8994:Core/Src/bno055.c **** 
8995:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
8996:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19400              		.loc 1 8996 5 view .LVU5331
 19401              		.loc 1 8996 18 is_stmt 0 view .LVU5332
 19402 000e 254B     		ldr	r3, .L1395
 19403 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 548


 19404              		.loc 1 8996 8 view .LVU5333
 19405 0012 002B     		cmp	r3, #0
 19406 0014 43D0     		beq	.L1389
 19407 0016 0546     		mov	r5, r0
8997:Core/Src/bno055.c ****     {
8998:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
8999:Core/Src/bno055.c ****     }
9000:Core/Src/bno055.c ****     else
9001:Core/Src/bno055.c ****     {
9002:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9003:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9004:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9005:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19408              		.loc 1 9005 9 is_stmt 1 view .LVU5334
 19409              		.loc 1 9005 19 is_stmt 0 view .LVU5335
 19410 0018 0DF10600 		add	r0, sp, #6
 19411              	.LVL2387:
 19412              		.loc 1 9005 19 view .LVU5336
 19413 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19414              	.LVL2388:
9006:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19415              		.loc 1 9006 9 is_stmt 1 view .LVU5337
 19416              		.loc 1 9006 12 is_stmt 0 view .LVU5338
 19417 0020 0446     		mov	r4, r0
 19418 0022 58BB     		cbnz	r0, .L1390
9007:Core/Src/bno055.c ****         {
9008:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19419              		.loc 1 9008 13 is_stmt 1 view .LVU5339
 19420              		.loc 1 9008 32 is_stmt 0 view .LVU5340
 19421 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19422              		.loc 1 9008 16 view .LVU5341
 19423 0028 13BB     		cbnz	r3, .L1393
 19424              	.LVL2389:
 19425              	.L1388:
9009:Core/Src/bno055.c ****             {
9010:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9011:Core/Src/bno055.c ****             }
9012:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19426              		.loc 1 9012 13 is_stmt 1 view .LVU5342
 19427              		.loc 1 9012 16 is_stmt 0 view .LVU5343
 19428 002a 7CBB     		cbnz	r4, .L1391
9013:Core/Src/bno055.c ****             {
9014:Core/Src/bno055.c ****                 /* Write the value of self test */
9015:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19429              		.loc 1 9015 17 is_stmt 1 view .LVU5344
 19430              		.loc 1 9015 36 is_stmt 0 view .LVU5345
 19431 002c 1D4B     		ldr	r3, .L1395
 19432 002e 1868     		ldr	r0, [r3]
 19433 0030 0469     		ldr	r4, [r0, #16]
 19434              	.LVL2390:
 19435              		.loc 1 9015 28 view .LVU5346
 19436 0032 0123     		movs	r3, #1
 19437 0034 0DF10702 		add	r2, sp, #7
 19438 0038 3F21     		movs	r1, #63
 19439 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19440 003c A047     		blx	r4
 19441              	.LVL2391:
ARM GAS  /tmp/ccO72alg.s 			page 549


9016:Core/Src/bno055.c ****                                                           BNO055_SELFTEST_REG,
9017:Core/Src/bno055.c ****                                                           &data_u8r,
9018:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9019:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19442              		.loc 1 9019 17 is_stmt 1 view .LVU5347
 19443              		.loc 1 9019 20 is_stmt 0 view .LVU5348
 19444 003e 0446     		mov	r4, r0
 19445 0040 F0B9     		cbnz	r0, .L1387
9020:Core/Src/bno055.c ****                 {
9021:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_SELFTEST, selftest_u8);
 19446              		.loc 1 9021 21 is_stmt 1 view .LVU5349
 19447              		.loc 1 9021 32 is_stmt 0 view .LVU5350
 19448 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 19449              	.LVL2392:
 19450              		.loc 1 9021 32 view .LVU5351
 19451 0046 20F00100 		bic	r0, r0, #1
 19452 004a 43B2     		sxtb	r3, r0
 19453 004c 05F00100 		and	r0, r5, #1
 19454 0050 1843     		orrs	r0, r0, r3
 19455              		.loc 1 9021 30 view .LVU5352
 19456 0052 8DF80700 		strb	r0, [sp, #7]
9022:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19457              		.loc 1 9022 21 is_stmt 1 view .LVU5353
 19458              		.loc 1 9022 41 is_stmt 0 view .LVU5354
 19459 0056 134B     		ldr	r3, .L1395
 19460 0058 1868     		ldr	r0, [r3]
 19461 005a C568     		ldr	r5, [r0, #12]
 19462              		.loc 1 9022 33 view .LVU5355
 19463 005c 0123     		movs	r3, #1
 19464 005e 0DF10702 		add	r2, sp, #7
 19465 0062 3F21     		movs	r1, #63
 19466 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19467 0066 A847     		blx	r5
 19468              	.LVL2393:
 19469              		.loc 1 9022 30 view .LVU5356
 19470 0068 54FA80F4 		uxtab	r4, r4, r0
 19471 006c 64B2     		sxtb	r4, r4
 19472              	.LVL2394:
 19473              		.loc 1 9022 30 view .LVU5357
 19474 006e 07E0     		b	.L1387
 19475              	.LVL2395:
 19476              	.L1393:
9010:Core/Src/bno055.c ****             }
 19477              		.loc 1 9010 17 is_stmt 1 view .LVU5358
9010:Core/Src/bno055.c ****             }
 19478              		.loc 1 9010 28 is_stmt 0 view .LVU5359
 19479 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19480              	.LVL2396:
9010:Core/Src/bno055.c ****             }
 19481              		.loc 1 9010 25 view .LVU5360
 19482 0074 54FA80F4 		uxtab	r4, r4, r0
 19483 0078 64B2     		sxtb	r4, r4
 19484              	.LVL2397:
9010:Core/Src/bno055.c ****             }
 19485              		.loc 1 9010 25 view .LVU5361
 19486 007a D6E7     		b	.L1388
 19487              	.LVL2398:
ARM GAS  /tmp/ccO72alg.s 			page 550


 19488              	.L1390:
9023:Core/Src/bno055.c ****                                                                 BNO055_SELFTEST_REG,
9024:Core/Src/bno055.c ****                                                                 &data_u8r,
9025:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9026:Core/Src/bno055.c ****                 }
9027:Core/Src/bno055.c ****             }
9028:Core/Src/bno055.c ****             else
9029:Core/Src/bno055.c ****             {
9030:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9031:Core/Src/bno055.c ****             }
9032:Core/Src/bno055.c ****         }
9033:Core/Src/bno055.c ****         else
9034:Core/Src/bno055.c ****         {
9035:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19489              		.loc 1 9035 22 view .LVU5362
 19490 007c 4FF0FF34 		mov	r4, #-1
 19491              	.LVL2399:
 19492              	.L1387:
9036:Core/Src/bno055.c ****         }
9037:Core/Src/bno055.c ****     }
9038:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19493              		.loc 1 9038 5 is_stmt 1 view .LVU5363
 19494              		.loc 1 9038 24 is_stmt 0 view .LVU5364
 19495 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19496              		.loc 1 9038 8 view .LVU5365
 19497 0084 28B9     		cbnz	r0, .L1394
 19498              	.LVL2400:
 19499              	.L1386:
9039:Core/Src/bno055.c ****     {
9040:Core/Src/bno055.c ****         /* set the operation mode
9041:Core/Src/bno055.c ****          * of previous operation mode*/
9042:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9043:Core/Src/bno055.c ****     }
9044:Core/Src/bno055.c **** 
9045:Core/Src/bno055.c ****     return com_rslt;
9046:Core/Src/bno055.c **** }
 19500              		.loc 1 9046 1 view .LVU5366
 19501 0086 2046     		mov	r0, r4
 19502 0088 03B0     		add	sp, sp, #12
 19503              	.LCFI619:
 19504              		.cfi_remember_state
 19505              		.cfi_def_cfa_offset 12
 19506              		@ sp needed
 19507 008a 30BD     		pop	{r4, r5, pc}
 19508              	.LVL2401:
 19509              	.L1391:
 19510              	.LCFI620:
 19511              		.cfi_restore_state
9030:Core/Src/bno055.c ****             }
 19512              		.loc 1 9030 26 view .LVU5367
 19513 008c 4FF0FF34 		mov	r4, #-1
 19514              	.LVL2402:
9030:Core/Src/bno055.c ****             }
 19515              		.loc 1 9030 26 view .LVU5368
 19516 0090 F6E7     		b	.L1387
 19517              	.LVL2403:
 19518              	.L1394:
ARM GAS  /tmp/ccO72alg.s 			page 551


9042:Core/Src/bno055.c ****     }
 19519              		.loc 1 9042 9 is_stmt 1 view .LVU5369
9042:Core/Src/bno055.c ****     }
 19520              		.loc 1 9042 21 is_stmt 0 view .LVU5370
 19521 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19522              	.LVL2404:
9042:Core/Src/bno055.c ****     }
 19523              		.loc 1 9042 18 view .LVU5371
 19524 0096 54FA80F4 		uxtab	r4, r4, r0
 19525              	.LVL2405:
9042:Core/Src/bno055.c ****     }
 19526              		.loc 1 9042 18 view .LVU5372
 19527 009a 64B2     		sxtb	r4, r4
 19528              	.LVL2406:
9042:Core/Src/bno055.c ****     }
 19529              		.loc 1 9042 18 view .LVU5373
 19530 009c F3E7     		b	.L1386
 19531              	.LVL2407:
 19532              	.L1389:
8998:Core/Src/bno055.c ****     }
 19533              		.loc 1 8998 16 view .LVU5374
 19534 009e 6FF07E04 		mvn	r4, #126
 19535 00a2 F0E7     		b	.L1386
 19536              	.L1396:
 19537              		.align	2
 19538              	.L1395:
 19539 00a4 00000000 		.word	.LANCHOR0
 19540              		.cfi_endproc
 19541              	.LFE156:
 19543              		.section	.text.bno055_get_temp_source,"ax",%progbits
 19544              		.align	1
 19545              		.global	bno055_get_temp_source
 19546              		.syntax unified
 19547              		.thumb
 19548              		.thumb_func
 19550              	bno055_get_temp_source:
 19551              	.LVL2408:
 19552              	.LFB157:
9047:Core/Src/bno055.c **** 
9048:Core/Src/bno055.c **** /*!
9049:Core/Src/bno055.c ****  *  @brief This API used to read the temperature source
9050:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9051:Core/Src/bno055.c ****  *
9052:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9053:Core/Src/bno055.c ****  *
9054:Core/Src/bno055.c ****  *     temp_source_u8 | result
9055:Core/Src/bno055.c ****  *    ----------------  |---------------
9056:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9057:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9058:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
9059:Core/Src/bno055.c ****  *
9060:Core/Src/bno055.c ****  *  @return results of bus communication function
9061:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9062:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9063:Core/Src/bno055.c ****  *
9064:Core/Src/bno055.c ****  */
9065:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_temp_source(u8 *temp_source_u8)
ARM GAS  /tmp/ccO72alg.s 			page 552


9066:Core/Src/bno055.c **** {
 19553              		.loc 1 9066 1 is_stmt 1 view -0
 19554              		.cfi_startproc
 19555              		@ args = 0, pretend = 0, frame = 8
 19556              		@ frame_needed = 0, uses_anonymous_args = 0
 19557              		.loc 1 9066 1 is_stmt 0 view .LVU5376
 19558 0000 30B5     		push	{r4, r5, lr}
 19559              	.LCFI621:
 19560              		.cfi_def_cfa_offset 12
 19561              		.cfi_offset 4, -12
 19562              		.cfi_offset 5, -8
 19563              		.cfi_offset 14, -4
 19564 0002 83B0     		sub	sp, sp, #12
 19565              	.LCFI622:
 19566              		.cfi_def_cfa_offset 24
9067:Core/Src/bno055.c ****     /* Variable used to return value of
9068:Core/Src/bno055.c ****      * communication routine*/
9069:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19567              		.loc 1 9069 5 is_stmt 1 view .LVU5377
 19568              	.LVL2409:
9070:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19569              		.loc 1 9070 5 view .LVU5378
 19570              		.loc 1 9070 8 is_stmt 0 view .LVU5379
 19571 0004 0023     		movs	r3, #0
 19572 0006 8DF80730 		strb	r3, [sp, #7]
9071:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19573              		.loc 1 9071 5 is_stmt 1 view .LVU5380
 19574              	.LVL2410:
9072:Core/Src/bno055.c **** 
9073:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9074:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19575              		.loc 1 9074 5 view .LVU5381
 19576              		.loc 1 9074 18 is_stmt 0 view .LVU5382
 19577 000a 134B     		ldr	r3, .L1405
 19578 000c 1B68     		ldr	r3, [r3]
 19579              		.loc 1 9074 8 view .LVU5383
 19580 000e E3B1     		cbz	r3, .L1401
 19581 0010 0446     		mov	r4, r0
9075:Core/Src/bno055.c ****     {
9076:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9077:Core/Src/bno055.c ****     }
9078:Core/Src/bno055.c ****     else
9079:Core/Src/bno055.c ****     {
9080:Core/Src/bno055.c ****         /*condition check for page, temperature source is
9081:Core/Src/bno055.c ****          * available in the page zero*/
9082:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19582              		.loc 1 9082 9 is_stmt 1 view .LVU5384
 19583              		.loc 1 9082 21 is_stmt 0 view .LVU5385
 19584 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19585              		.loc 1 9082 12 view .LVU5386
 19586 0014 9BB9     		cbnz	r3, .L1404
 19587              	.LVL2411:
 19588              	.L1399:
9083:Core/Src/bno055.c ****         {
9084:Core/Src/bno055.c ****             /* Write the page zero*/
9085:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9086:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 553


9087:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19589              		.loc 1 9087 53 discriminator 1 view .LVU5387
 19590 0016 104B     		ldr	r3, .L1405
 19591 0018 1B68     		ldr	r3, [r3]
 19592 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19593              		.loc 1 9087 41 discriminator 1 view .LVU5388
 19594 001c C3B9     		cbnz	r3, .L1402
 19595              	.L1400:
9088:Core/Src/bno055.c ****         {
9089:Core/Src/bno055.c ****             /* Read the value of temperature source */
9090:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19596              		.loc 1 9090 13 is_stmt 1 view .LVU5389
 19597              		.loc 1 9090 32 is_stmt 0 view .LVU5390
 19598 001e 0E4B     		ldr	r3, .L1405
 19599 0020 1868     		ldr	r0, [r3]
 19600 0022 0569     		ldr	r5, [r0, #16]
 19601              		.loc 1 9090 24 view .LVU5391
 19602 0024 0123     		movs	r3, #1
 19603 0026 0DF10702 		add	r2, sp, #7
 19604 002a 4021     		movs	r1, #64
 19605 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19606 002e A847     		blx	r5
 19607              	.LVL2412:
9091:Core/Src/bno055.c ****                                                       BNO055_TEMP_SOURCE_REG,
9092:Core/Src/bno055.c ****                                                       &data_u8r,
9093:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9094:Core/Src/bno055.c ****             *temp_source_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE);
 19608              		.loc 1 9094 13 is_stmt 1 view .LVU5392
 19609              		.loc 1 9094 31 is_stmt 0 view .LVU5393
 19610 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19611 0034 03F00303 		and	r3, r3, #3
 19612              		.loc 1 9094 29 view .LVU5394
 19613 0038 2370     		strb	r3, [r4]
 19614              	.LVL2413:
 19615              	.L1398:
9095:Core/Src/bno055.c ****         }
9096:Core/Src/bno055.c ****         else
9097:Core/Src/bno055.c ****         {
9098:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9099:Core/Src/bno055.c ****         }
9100:Core/Src/bno055.c ****     }
9101:Core/Src/bno055.c **** 
9102:Core/Src/bno055.c ****     return com_rslt;
9103:Core/Src/bno055.c **** }
 19616              		.loc 1 9103 1 view .LVU5395
 19617 003a 03B0     		add	sp, sp, #12
 19618              	.LCFI623:
 19619              		.cfi_remember_state
 19620              		.cfi_def_cfa_offset 12
 19621              		@ sp needed
 19622 003c 30BD     		pop	{r4, r5, pc}
 19623              	.LVL2414:
 19624              	.L1404:
 19625              	.LCFI624:
 19626              		.cfi_restore_state
9085:Core/Src/bno055.c ****         }
 19627              		.loc 1 9085 13 is_stmt 1 view .LVU5396
ARM GAS  /tmp/ccO72alg.s 			page 554


9085:Core/Src/bno055.c ****         }
 19628              		.loc 1 9085 23 is_stmt 0 view .LVU5397
 19629 003e 0020     		movs	r0, #0
 19630              	.LVL2415:
9085:Core/Src/bno055.c ****         }
 19631              		.loc 1 9085 23 view .LVU5398
 19632 0040 FFF7FEFF 		bl	bno055_write_page_id
 19633              	.LVL2416:
9087:Core/Src/bno055.c ****         {
 19634              		.loc 1 9087 9 is_stmt 1 view .LVU5399
9087:Core/Src/bno055.c ****         {
 19635              		.loc 1 9087 12 is_stmt 0 view .LVU5400
 19636 0044 0028     		cmp	r0, #0
 19637 0046 EAD0     		beq	.L1400
 19638 0048 E5E7     		b	.L1399
 19639              	.LVL2417:
 19640              	.L1401:
9076:Core/Src/bno055.c ****     }
 19641              		.loc 1 9076 16 view .LVU5401
 19642 004a 6FF07E00 		mvn	r0, #126
 19643              	.LVL2418:
9076:Core/Src/bno055.c ****     }
 19644              		.loc 1 9076 16 view .LVU5402
 19645 004e F4E7     		b	.L1398
 19646              	.LVL2419:
 19647              	.L1402:
9098:Core/Src/bno055.c ****         }
 19648              		.loc 1 9098 22 view .LVU5403
 19649 0050 4FF0FF30 		mov	r0, #-1
 19650 0054 F1E7     		b	.L1398
 19651              	.L1406:
 19652 0056 00BF     		.align	2
 19653              	.L1405:
 19654 0058 00000000 		.word	.LANCHOR0
 19655              		.cfi_endproc
 19656              	.LFE157:
 19658              		.section	.text.bno055_set_temp_source,"ax",%progbits
 19659              		.align	1
 19660              		.global	bno055_set_temp_source
 19661              		.syntax unified
 19662              		.thumb
 19663              		.thumb_func
 19665              	bno055_set_temp_source:
 19666              	.LVL2420:
 19667              	.LFB158:
9104:Core/Src/bno055.c **** 
9105:Core/Src/bno055.c **** /*!
9106:Core/Src/bno055.c ****  *  @brief This API used to write the temperature source
9107:Core/Src/bno055.c ****  *  from register from 0x40 bit 0 and 1
9108:Core/Src/bno055.c ****  *
9109:Core/Src/bno055.c ****  *  @param temp_source_u8 : The value of selected temperature source
9110:Core/Src/bno055.c ****  *
9111:Core/Src/bno055.c ****  *     temp_source_u8 | result
9112:Core/Src/bno055.c ****  *    ----------------  |---------------
9113:Core/Src/bno055.c ****  *      0x00            | BNO055_ACCEL_TEMP_EN
9114:Core/Src/bno055.c ****  *      0X01            | BNO055_GYRO_TEMP_EN
9115:Core/Src/bno055.c ****  *      0X03            | BNO055_MCU_TEMP_EN
ARM GAS  /tmp/ccO72alg.s 			page 555


9116:Core/Src/bno055.c ****  *
9117:Core/Src/bno055.c ****  *  @return results of bus communication function
9118:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9119:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9120:Core/Src/bno055.c ****  *
9121:Core/Src/bno055.c ****  */
9122:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_temp_source(u8 temp_source_u8)
9123:Core/Src/bno055.c **** {
 19668              		.loc 1 9123 1 is_stmt 1 view -0
 19669              		.cfi_startproc
 19670              		@ args = 0, pretend = 0, frame = 8
 19671              		@ frame_needed = 0, uses_anonymous_args = 0
 19672              		.loc 1 9123 1 is_stmt 0 view .LVU5405
 19673 0000 30B5     		push	{r4, r5, lr}
 19674              	.LCFI625:
 19675              		.cfi_def_cfa_offset 12
 19676              		.cfi_offset 4, -12
 19677              		.cfi_offset 5, -8
 19678              		.cfi_offset 14, -4
 19679 0002 83B0     		sub	sp, sp, #12
 19680              	.LCFI626:
 19681              		.cfi_def_cfa_offset 24
9124:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19682              		.loc 1 9124 5 is_stmt 1 view .LVU5406
 19683              	.LVL2421:
9125:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19684              		.loc 1 9125 5 view .LVU5407
 19685              		.loc 1 9125 8 is_stmt 0 view .LVU5408
 19686 0004 0023     		movs	r3, #0
 19687 0006 8DF80730 		strb	r3, [sp, #7]
9126:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19688              		.loc 1 9126 5 is_stmt 1 view .LVU5409
 19689              		.loc 1 9126 8 is_stmt 0 view .LVU5410
 19690 000a 8DF80630 		strb	r3, [sp, #6]
9127:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19691              		.loc 1 9127 5 is_stmt 1 view .LVU5411
 19692              	.LVL2422:
9128:Core/Src/bno055.c **** 
9129:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9130:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19693              		.loc 1 9130 5 view .LVU5412
 19694              		.loc 1 9130 18 is_stmt 0 view .LVU5413
 19695 000e 254B     		ldr	r3, .L1417
 19696 0010 1B68     		ldr	r3, [r3]
 19697              		.loc 1 9130 8 view .LVU5414
 19698 0012 002B     		cmp	r3, #0
 19699 0014 43D0     		beq	.L1411
 19700 0016 0546     		mov	r5, r0
9131:Core/Src/bno055.c ****     {
9132:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9133:Core/Src/bno055.c ****     }
9134:Core/Src/bno055.c ****     else
9135:Core/Src/bno055.c ****     {
9136:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9137:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9138:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9139:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
ARM GAS  /tmp/ccO72alg.s 			page 556


 19701              		.loc 1 9139 9 is_stmt 1 view .LVU5415
 19702              		.loc 1 9139 19 is_stmt 0 view .LVU5416
 19703 0018 0DF10600 		add	r0, sp, #6
 19704              	.LVL2423:
 19705              		.loc 1 9139 19 view .LVU5417
 19706 001c FFF7FEFF 		bl	bno055_get_operation_mode
 19707              	.LVL2424:
9140:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 19708              		.loc 1 9140 9 is_stmt 1 view .LVU5418
 19709              		.loc 1 9140 12 is_stmt 0 view .LVU5419
 19710 0020 0446     		mov	r4, r0
 19711 0022 58BB     		cbnz	r0, .L1412
9141:Core/Src/bno055.c ****         {
9142:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19712              		.loc 1 9142 13 is_stmt 1 view .LVU5420
 19713              		.loc 1 9142 32 is_stmt 0 view .LVU5421
 19714 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 19715              		.loc 1 9142 16 view .LVU5422
 19716 0028 13BB     		cbnz	r3, .L1415
 19717              	.LVL2425:
 19718              	.L1410:
9143:Core/Src/bno055.c ****             {
9144:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9145:Core/Src/bno055.c ****             }
9146:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 19719              		.loc 1 9146 13 is_stmt 1 view .LVU5423
 19720              		.loc 1 9146 16 is_stmt 0 view .LVU5424
 19721 002a 7CBB     		cbnz	r4, .L1413
9147:Core/Src/bno055.c ****             {
9148:Core/Src/bno055.c ****                 /* Write the value of temperature source*/
9149:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19722              		.loc 1 9149 17 is_stmt 1 view .LVU5425
 19723              		.loc 1 9149 36 is_stmt 0 view .LVU5426
 19724 002c 1D4B     		ldr	r3, .L1417
 19725 002e 1868     		ldr	r0, [r3]
 19726 0030 0469     		ldr	r4, [r0, #16]
 19727              	.LVL2426:
 19728              		.loc 1 9149 28 view .LVU5427
 19729 0032 0123     		movs	r3, #1
 19730 0034 0DF10702 		add	r2, sp, #7
 19731 0038 4021     		movs	r1, #64
 19732 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19733 003c A047     		blx	r4
 19734              	.LVL2427:
9150:Core/Src/bno055.c ****                                                           BNO055_TEMP_SOURCE_REG,
9151:Core/Src/bno055.c ****                                                           &data_u8r,
9152:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9153:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 19735              		.loc 1 9153 17 is_stmt 1 view .LVU5428
 19736              		.loc 1 9153 20 is_stmt 0 view .LVU5429
 19737 003e 0446     		mov	r4, r0
 19738 0040 F0B9     		cbnz	r0, .L1409
9154:Core/Src/bno055.c ****                 {
9155:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_TEMP_SOURCE, temp_source_u8);
 19739              		.loc 1 9155 21 is_stmt 1 view .LVU5430
 19740              		.loc 1 9155 32 is_stmt 0 view .LVU5431
 19741 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 557


 19742              	.LVL2428:
 19743              		.loc 1 9155 32 view .LVU5432
 19744 0046 20F00300 		bic	r0, r0, #3
 19745 004a 43B2     		sxtb	r3, r0
 19746 004c 05F00300 		and	r0, r5, #3
 19747 0050 1843     		orrs	r0, r0, r3
 19748              		.loc 1 9155 30 view .LVU5433
 19749 0052 8DF80700 		strb	r0, [sp, #7]
9156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 19750              		.loc 1 9156 21 is_stmt 1 view .LVU5434
 19751              		.loc 1 9156 41 is_stmt 0 view .LVU5435
 19752 0056 134B     		ldr	r3, .L1417
 19753 0058 1868     		ldr	r0, [r3]
 19754 005a C568     		ldr	r5, [r0, #12]
 19755              		.loc 1 9156 33 view .LVU5436
 19756 005c 0123     		movs	r3, #1
 19757 005e 0DF10702 		add	r2, sp, #7
 19758 0062 4021     		movs	r1, #64
 19759 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19760 0066 A847     		blx	r5
 19761              	.LVL2429:
 19762              		.loc 1 9156 30 view .LVU5437
 19763 0068 54FA80F4 		uxtab	r4, r4, r0
 19764 006c 64B2     		sxtb	r4, r4
 19765              	.LVL2430:
 19766              		.loc 1 9156 30 view .LVU5438
 19767 006e 07E0     		b	.L1409
 19768              	.LVL2431:
 19769              	.L1415:
9144:Core/Src/bno055.c ****             }
 19770              		.loc 1 9144 17 is_stmt 1 view .LVU5439
9144:Core/Src/bno055.c ****             }
 19771              		.loc 1 9144 28 is_stmt 0 view .LVU5440
 19772 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 19773              	.LVL2432:
9144:Core/Src/bno055.c ****             }
 19774              		.loc 1 9144 25 view .LVU5441
 19775 0074 54FA80F4 		uxtab	r4, r4, r0
 19776 0078 64B2     		sxtb	r4, r4
 19777              	.LVL2433:
9144:Core/Src/bno055.c ****             }
 19778              		.loc 1 9144 25 view .LVU5442
 19779 007a D6E7     		b	.L1410
 19780              	.LVL2434:
 19781              	.L1412:
9157:Core/Src/bno055.c ****                                                                 BNO055_TEMP_SOURCE_REG,
9158:Core/Src/bno055.c ****                                                                 &data_u8r,
9159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9160:Core/Src/bno055.c ****                 }
9161:Core/Src/bno055.c ****             }
9162:Core/Src/bno055.c ****             else
9163:Core/Src/bno055.c ****             {
9164:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9165:Core/Src/bno055.c ****             }
9166:Core/Src/bno055.c ****         }
9167:Core/Src/bno055.c ****         else
9168:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 558


9169:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 19782              		.loc 1 9169 22 view .LVU5443
 19783 007c 4FF0FF34 		mov	r4, #-1
 19784              	.LVL2435:
 19785              	.L1409:
9170:Core/Src/bno055.c ****         }
9171:Core/Src/bno055.c ****     }
9172:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 19786              		.loc 1 9172 5 is_stmt 1 view .LVU5444
 19787              		.loc 1 9172 24 is_stmt 0 view .LVU5445
 19788 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 19789              		.loc 1 9172 8 view .LVU5446
 19790 0084 28B9     		cbnz	r0, .L1416
 19791              	.LVL2436:
 19792              	.L1408:
9173:Core/Src/bno055.c ****     {
9174:Core/Src/bno055.c ****         /* set the operation mode
9175:Core/Src/bno055.c ****          * of previous operation mode*/
9176:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9177:Core/Src/bno055.c ****     }
9178:Core/Src/bno055.c **** 
9179:Core/Src/bno055.c ****     return com_rslt;
9180:Core/Src/bno055.c **** }
 19793              		.loc 1 9180 1 view .LVU5447
 19794 0086 2046     		mov	r0, r4
 19795 0088 03B0     		add	sp, sp, #12
 19796              	.LCFI627:
 19797              		.cfi_remember_state
 19798              		.cfi_def_cfa_offset 12
 19799              		@ sp needed
 19800 008a 30BD     		pop	{r4, r5, pc}
 19801              	.LVL2437:
 19802              	.L1413:
 19803              	.LCFI628:
 19804              		.cfi_restore_state
9164:Core/Src/bno055.c ****             }
 19805              		.loc 1 9164 26 view .LVU5448
 19806 008c 4FF0FF34 		mov	r4, #-1
 19807              	.LVL2438:
9164:Core/Src/bno055.c ****             }
 19808              		.loc 1 9164 26 view .LVU5449
 19809 0090 F6E7     		b	.L1409
 19810              	.LVL2439:
 19811              	.L1416:
9176:Core/Src/bno055.c ****     }
 19812              		.loc 1 9176 9 is_stmt 1 view .LVU5450
9176:Core/Src/bno055.c ****     }
 19813              		.loc 1 9176 21 is_stmt 0 view .LVU5451
 19814 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 19815              	.LVL2440:
9176:Core/Src/bno055.c ****     }
 19816              		.loc 1 9176 18 view .LVU5452
 19817 0096 54FA80F4 		uxtab	r4, r4, r0
 19818              	.LVL2441:
9176:Core/Src/bno055.c ****     }
 19819              		.loc 1 9176 18 view .LVU5453
 19820 009a 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 559


 19821              	.LVL2442:
9176:Core/Src/bno055.c ****     }
 19822              		.loc 1 9176 18 view .LVU5454
 19823 009c F3E7     		b	.L1408
 19824              	.LVL2443:
 19825              	.L1411:
9132:Core/Src/bno055.c ****     }
 19826              		.loc 1 9132 16 view .LVU5455
 19827 009e 6FF07E04 		mvn	r4, #126
 19828 00a2 F0E7     		b	.L1408
 19829              	.L1418:
 19830              		.align	2
 19831              	.L1417:
 19832 00a4 00000000 		.word	.LANCHOR0
 19833              		.cfi_endproc
 19834              	.LFE158:
 19836              		.section	.text.bno055_get_axis_remap_value,"ax",%progbits
 19837              		.align	1
 19838              		.global	bno055_get_axis_remap_value
 19839              		.syntax unified
 19840              		.thumb
 19841              		.thumb_func
 19843              	bno055_get_axis_remap_value:
 19844              	.LVL2444:
 19845              	.LFB159:
9181:Core/Src/bno055.c **** 
9182:Core/Src/bno055.c **** /*!
9183:Core/Src/bno055.c ****  *  @brief This API used to read the axis remap value
9184:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9185:Core/Src/bno055.c ****  *
9186:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9187:Core/Src/bno055.c ****  *
9188:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9189:Core/Src/bno055.c ****  *   ------------|-------------------|------------
9190:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9191:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9192:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9193:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9194:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9195:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9196:Core/Src/bno055.c ****  *
9197:Core/Src/bno055.c ****  *  @return results of bus communication function
9198:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9199:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9200:Core/Src/bno055.c ****  *
9201:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9202:Core/Src/bno055.c ****  *  x-axis :
9203:Core/Src/bno055.c ****  *
9204:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9205:Core/Src/bno055.c ****  *
9206:Core/Src/bno055.c ****  *  y-axis :
9207:Core/Src/bno055.c ****  *
9208:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9209:Core/Src/bno055.c ****  *
9210:Core/Src/bno055.c ****  *  z-axis :
9211:Core/Src/bno055.c ****  *
9212:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
ARM GAS  /tmp/ccO72alg.s 			page 560


9213:Core/Src/bno055.c ****  *
9214:Core/Src/bno055.c ****  */
9215:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_axis_remap_value(u8 *remap_axis_u8)
9216:Core/Src/bno055.c **** {
 19846              		.loc 1 9216 1 is_stmt 1 view -0
 19847              		.cfi_startproc
 19848              		@ args = 0, pretend = 0, frame = 8
 19849              		@ frame_needed = 0, uses_anonymous_args = 0
 19850              		.loc 1 9216 1 is_stmt 0 view .LVU5457
 19851 0000 30B5     		push	{r4, r5, lr}
 19852              	.LCFI629:
 19853              		.cfi_def_cfa_offset 12
 19854              		.cfi_offset 4, -12
 19855              		.cfi_offset 5, -8
 19856              		.cfi_offset 14, -4
 19857 0002 83B0     		sub	sp, sp, #12
 19858              	.LCFI630:
 19859              		.cfi_def_cfa_offset 24
9217:Core/Src/bno055.c ****     /* Variable used to return value of
9218:Core/Src/bno055.c ****      * communication routine*/
9219:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19860              		.loc 1 9219 5 is_stmt 1 view .LVU5458
 19861              	.LVL2445:
9220:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19862              		.loc 1 9220 5 view .LVU5459
 19863              		.loc 1 9220 8 is_stmt 0 view .LVU5460
 19864 0004 0023     		movs	r3, #0
 19865 0006 8DF80730 		strb	r3, [sp, #7]
9221:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19866              		.loc 1 9221 5 is_stmt 1 view .LVU5461
 19867              	.LVL2446:
9222:Core/Src/bno055.c **** 
9223:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9224:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19868              		.loc 1 9224 5 view .LVU5462
 19869              		.loc 1 9224 18 is_stmt 0 view .LVU5463
 19870 000a 134B     		ldr	r3, .L1427
 19871 000c 1B68     		ldr	r3, [r3]
 19872              		.loc 1 9224 8 view .LVU5464
 19873 000e E3B1     		cbz	r3, .L1423
 19874 0010 0446     		mov	r4, r0
9225:Core/Src/bno055.c ****     {
9226:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9227:Core/Src/bno055.c ****     }
9228:Core/Src/bno055.c ****     else
9229:Core/Src/bno055.c ****     {
9230:Core/Src/bno055.c ****         /*condition check for page, axis remap is
9231:Core/Src/bno055.c ****          * available in the page zero*/
9232:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 19875              		.loc 1 9232 9 is_stmt 1 view .LVU5465
 19876              		.loc 1 9232 21 is_stmt 0 view .LVU5466
 19877 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19878              		.loc 1 9232 12 view .LVU5467
 19879 0014 9BB9     		cbnz	r3, .L1426
 19880              	.LVL2447:
 19881              	.L1421:
9233:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 561


9234:Core/Src/bno055.c ****             /* Write the page zero*/
9235:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9236:Core/Src/bno055.c ****         }
9237:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 19882              		.loc 1 9237 53 discriminator 1 view .LVU5468
 19883 0016 104B     		ldr	r3, .L1427
 19884 0018 1B68     		ldr	r3, [r3]
 19885 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 19886              		.loc 1 9237 41 discriminator 1 view .LVU5469
 19887 001c C3B9     		cbnz	r3, .L1424
 19888              	.L1422:
9238:Core/Src/bno055.c ****         {
9239:Core/Src/bno055.c ****             /* Read the value of axis remap*/
9240:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 19889              		.loc 1 9240 13 is_stmt 1 view .LVU5470
 19890              		.loc 1 9240 32 is_stmt 0 view .LVU5471
 19891 001e 0E4B     		ldr	r3, .L1427
 19892 0020 1868     		ldr	r0, [r3]
 19893 0022 0569     		ldr	r5, [r0, #16]
 19894              		.loc 1 9240 24 view .LVU5472
 19895 0024 0123     		movs	r3, #1
 19896 0026 0DF10702 		add	r2, sp, #7
 19897 002a 4121     		movs	r1, #65
 19898 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 19899 002e A847     		blx	r5
 19900              	.LVL2448:
9241:Core/Src/bno055.c ****                                                       BNO055_REMAP_AXIS_VALUE_REG,
9242:Core/Src/bno055.c ****                                                       &data_u8r,
9243:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9244:Core/Src/bno055.c ****             *remap_axis_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE);
 19901              		.loc 1 9244 13 is_stmt 1 view .LVU5473
 19902              		.loc 1 9244 30 is_stmt 0 view .LVU5474
 19903 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 19904 0034 03F03F03 		and	r3, r3, #63
 19905              		.loc 1 9244 28 view .LVU5475
 19906 0038 2370     		strb	r3, [r4]
 19907              	.LVL2449:
 19908              	.L1420:
9245:Core/Src/bno055.c ****         }
9246:Core/Src/bno055.c ****         else
9247:Core/Src/bno055.c ****         {
9248:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9249:Core/Src/bno055.c ****         }
9250:Core/Src/bno055.c ****     }
9251:Core/Src/bno055.c **** 
9252:Core/Src/bno055.c ****     return com_rslt;
9253:Core/Src/bno055.c **** }
 19909              		.loc 1 9253 1 view .LVU5476
 19910 003a 03B0     		add	sp, sp, #12
 19911              	.LCFI631:
 19912              		.cfi_remember_state
 19913              		.cfi_def_cfa_offset 12
 19914              		@ sp needed
 19915 003c 30BD     		pop	{r4, r5, pc}
 19916              	.LVL2450:
 19917              	.L1426:
 19918              	.LCFI632:
ARM GAS  /tmp/ccO72alg.s 			page 562


 19919              		.cfi_restore_state
9235:Core/Src/bno055.c ****         }
 19920              		.loc 1 9235 13 is_stmt 1 view .LVU5477
9235:Core/Src/bno055.c ****         }
 19921              		.loc 1 9235 23 is_stmt 0 view .LVU5478
 19922 003e 0020     		movs	r0, #0
 19923              	.LVL2451:
9235:Core/Src/bno055.c ****         }
 19924              		.loc 1 9235 23 view .LVU5479
 19925 0040 FFF7FEFF 		bl	bno055_write_page_id
 19926              	.LVL2452:
9237:Core/Src/bno055.c ****         {
 19927              		.loc 1 9237 9 is_stmt 1 view .LVU5480
9237:Core/Src/bno055.c ****         {
 19928              		.loc 1 9237 12 is_stmt 0 view .LVU5481
 19929 0044 0028     		cmp	r0, #0
 19930 0046 EAD0     		beq	.L1422
 19931 0048 E5E7     		b	.L1421
 19932              	.LVL2453:
 19933              	.L1423:
9226:Core/Src/bno055.c ****     }
 19934              		.loc 1 9226 16 view .LVU5482
 19935 004a 6FF07E00 		mvn	r0, #126
 19936              	.LVL2454:
9226:Core/Src/bno055.c ****     }
 19937              		.loc 1 9226 16 view .LVU5483
 19938 004e F4E7     		b	.L1420
 19939              	.LVL2455:
 19940              	.L1424:
9248:Core/Src/bno055.c ****         }
 19941              		.loc 1 9248 22 view .LVU5484
 19942 0050 4FF0FF30 		mov	r0, #-1
 19943 0054 F1E7     		b	.L1420
 19944              	.L1428:
 19945 0056 00BF     		.align	2
 19946              	.L1427:
 19947 0058 00000000 		.word	.LANCHOR0
 19948              		.cfi_endproc
 19949              	.LFE159:
 19951              		.section	.text.bno055_set_axis_remap_value,"ax",%progbits
 19952              		.align	1
 19953              		.global	bno055_set_axis_remap_value
 19954              		.syntax unified
 19955              		.thumb
 19956              		.thumb_func
 19958              	bno055_set_axis_remap_value:
 19959              	.LVL2456:
 19960              	.LFB160:
9254:Core/Src/bno055.c **** 
9255:Core/Src/bno055.c **** /*!
9256:Core/Src/bno055.c ****  *  @brief This API used to write the axis remap value
9257:Core/Src/bno055.c ****  *  from register from 0x41 bit 0 and 5
9258:Core/Src/bno055.c ****  *
9259:Core/Src/bno055.c ****  *  @param remap_axis_u8 : The value of axis remapping
9260:Core/Src/bno055.c ****  *
9261:Core/Src/bno055.c ****  *    remap_axis_u8 |   result     | comments
9262:Core/Src/bno055.c ****  *   ------------|-------------------|------------
ARM GAS  /tmp/ccO72alg.s 			page 563


9263:Core/Src/bno055.c ****  *      0X21     | BNO055_REMAP_X_Y         | Z=Z;X=Y;Y=X
9264:Core/Src/bno055.c ****  *      0X18     | BNO055_REMAP_Y_Z         | X=X;Y=Z;Z=Y
9265:Core/Src/bno055.c ****  *      0X06     | BNO055_REMAP_Z_X         | Y=Y;X=Z;Z=X
9266:Core/Src/bno055.c ****  *      0X12     | BNO055_REMAP_X_Y_Z_TYPE0 | X=Z;Y=X;Z=Y
9267:Core/Src/bno055.c ****  *      0X09     | BNO055_REMAP_X_Y_Z_TYPE1 | X=Y;Y=Z;Z=X
9268:Core/Src/bno055.c ****  *      0X24     | BNO055_DEFAULT_AXIS      | X=X;Y=Y;Z=Z
9269:Core/Src/bno055.c ****  *
9270:Core/Src/bno055.c ****  *  @return results of bus communication function
9271:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9272:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9273:Core/Src/bno055.c ****  *
9274:Core/Src/bno055.c ****  *  @note : For axis sign remap refer the following APIs
9275:Core/Src/bno055.c ****  *  x-axis :
9276:Core/Src/bno055.c ****  *
9277:Core/Src/bno055.c ****  *  bno055_set_x_remap_sign()
9278:Core/Src/bno055.c ****  *
9279:Core/Src/bno055.c ****  *  y-axis :
9280:Core/Src/bno055.c ****  *
9281:Core/Src/bno055.c ****  *  bno055_set_y_remap_sign()
9282:Core/Src/bno055.c ****  *
9283:Core/Src/bno055.c ****  *  z-axis :
9284:Core/Src/bno055.c ****  *
9285:Core/Src/bno055.c ****  *  bno055_set_z_remap_sign()
9286:Core/Src/bno055.c ****  *
9287:Core/Src/bno055.c ****  */
9288:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_axis_remap_value(u8 remap_axis_u8)
9289:Core/Src/bno055.c **** {
 19961              		.loc 1 9289 1 is_stmt 1 view -0
 19962              		.cfi_startproc
 19963              		@ args = 0, pretend = 0, frame = 8
 19964              		@ frame_needed = 0, uses_anonymous_args = 0
 19965              		.loc 1 9289 1 is_stmt 0 view .LVU5486
 19966 0000 30B5     		push	{r4, r5, lr}
 19967              	.LCFI633:
 19968              		.cfi_def_cfa_offset 12
 19969              		.cfi_offset 4, -12
 19970              		.cfi_offset 5, -8
 19971              		.cfi_offset 14, -4
 19972 0002 83B0     		sub	sp, sp, #12
 19973              	.LCFI634:
 19974              		.cfi_def_cfa_offset 24
9290:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 19975              		.loc 1 9290 5 is_stmt 1 view .LVU5487
 19976              	.LVL2457:
9291:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 19977              		.loc 1 9291 5 view .LVU5488
 19978              		.loc 1 9291 8 is_stmt 0 view .LVU5489
 19979 0004 0023     		movs	r3, #0
 19980 0006 8DF80730 		strb	r3, [sp, #7]
9292:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 19981              		.loc 1 9292 5 is_stmt 1 view .LVU5490
 19982              		.loc 1 9292 8 is_stmt 0 view .LVU5491
 19983 000a 8DF80630 		strb	r3, [sp, #6]
9293:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 19984              		.loc 1 9293 5 is_stmt 1 view .LVU5492
 19985              	.LVL2458:
9294:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 564


9295:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9296:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 19986              		.loc 1 9296 5 view .LVU5493
 19987              		.loc 1 9296 18 is_stmt 0 view .LVU5494
 19988 000e 424B     		ldr	r3, .L1442
 19989 0010 1B68     		ldr	r3, [r3]
 19990              		.loc 1 9296 8 view .LVU5495
 19991 0012 002B     		cmp	r3, #0
 19992 0014 7CD0     		beq	.L1436
 19993 0016 0546     		mov	r5, r0
9297:Core/Src/bno055.c ****     {
9298:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9299:Core/Src/bno055.c ****     }
9300:Core/Src/bno055.c ****     else
9301:Core/Src/bno055.c ****     {
9302:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9303:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9304:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9305:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 19994              		.loc 1 9305 9 is_stmt 1 view .LVU5496
 19995              		.loc 1 9305 19 is_stmt 0 view .LVU5497
 19996 0018 0DF10600 		add	r0, sp, #6
 19997              	.LVL2459:
 19998              		.loc 1 9305 19 view .LVU5498
 19999 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20000              	.LVL2460:
9306:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20001              		.loc 1 9306 9 is_stmt 1 view .LVU5499
 20002              		.loc 1 9306 12 is_stmt 0 view .LVU5500
 20003 0020 0446     		mov	r4, r0
 20004 0022 0028     		cmp	r0, #0
 20005 0024 63D1     		bne	.L1437
9307:Core/Src/bno055.c ****         {
9308:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20006              		.loc 1 9308 13 is_stmt 1 view .LVU5501
 20007              		.loc 1 9308 32 is_stmt 0 view .LVU5502
 20008 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20009              		.loc 1 9308 16 view .LVU5503
 20010 002a B3B9     		cbnz	r3, .L1440
 20011              	.LVL2461:
 20012              	.L1432:
9309:Core/Src/bno055.c ****             {
9310:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9311:Core/Src/bno055.c ****             }
9312:Core/Src/bno055.c **** 
9313:Core/Src/bno055.c ****             /* Write the value of axis remap */
9314:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20013              		.loc 1 9314 13 is_stmt 1 view .LVU5504
 20014              		.loc 1 9314 16 is_stmt 0 view .LVU5505
 20015 002c 002C     		cmp	r4, #0
 20016 002e 66D1     		bne	.L1438
9315:Core/Src/bno055.c ****             {
9316:Core/Src/bno055.c ****                 switch (remap_axis_u8)
 20017              		.loc 1 9316 17 is_stmt 1 view .LVU5506
 20018 0030 AB1F     		subs	r3, r5, #6
 20019 0032 1E2B     		cmp	r3, #30
 20020 0034 3AD8     		bhi	.L1433
ARM GAS  /tmp/ccO72alg.s 			page 565


 20021 0036 DFE803F0 		tbb	[pc, r3]
 20022              	.L1435:
 20023 003a 16       		.byte	(.L1434-.L1435)/2
 20024 003b 39       		.byte	(.L1433-.L1435)/2
 20025 003c 39       		.byte	(.L1433-.L1435)/2
 20026 003d 16       		.byte	(.L1434-.L1435)/2
 20027 003e 39       		.byte	(.L1433-.L1435)/2
 20028 003f 39       		.byte	(.L1433-.L1435)/2
 20029 0040 39       		.byte	(.L1433-.L1435)/2
 20030 0041 39       		.byte	(.L1433-.L1435)/2
 20031 0042 39       		.byte	(.L1433-.L1435)/2
 20032 0043 39       		.byte	(.L1433-.L1435)/2
 20033 0044 39       		.byte	(.L1433-.L1435)/2
 20034 0045 39       		.byte	(.L1433-.L1435)/2
 20035 0046 16       		.byte	(.L1434-.L1435)/2
 20036 0047 39       		.byte	(.L1433-.L1435)/2
 20037 0048 39       		.byte	(.L1433-.L1435)/2
 20038 0049 39       		.byte	(.L1433-.L1435)/2
 20039 004a 39       		.byte	(.L1433-.L1435)/2
 20040 004b 39       		.byte	(.L1433-.L1435)/2
 20041 004c 16       		.byte	(.L1434-.L1435)/2
 20042 004d 39       		.byte	(.L1433-.L1435)/2
 20043 004e 39       		.byte	(.L1433-.L1435)/2
 20044 004f 39       		.byte	(.L1433-.L1435)/2
 20045 0050 39       		.byte	(.L1433-.L1435)/2
 20046 0051 39       		.byte	(.L1433-.L1435)/2
 20047 0052 39       		.byte	(.L1433-.L1435)/2
 20048 0053 39       		.byte	(.L1433-.L1435)/2
 20049 0054 39       		.byte	(.L1433-.L1435)/2
 20050 0055 16       		.byte	(.L1434-.L1435)/2
 20051 0056 39       		.byte	(.L1433-.L1435)/2
 20052 0057 39       		.byte	(.L1433-.L1435)/2
 20053 0058 16       		.byte	(.L1434-.L1435)/2
 20054              	.LVL2462:
 20055 0059 00       		.p2align 1
 20056              	.L1440:
9310:Core/Src/bno055.c ****             }
 20057              		.loc 1 9310 17 view .LVU5507
9310:Core/Src/bno055.c ****             }
 20058              		.loc 1 9310 28 is_stmt 0 view .LVU5508
 20059 005a FFF7FEFF 		bl	bno055_set_operation_mode
 20060              	.LVL2463:
9310:Core/Src/bno055.c ****             }
 20061              		.loc 1 9310 25 view .LVU5509
 20062 005e 54FA80F4 		uxtab	r4, r4, r0
 20063 0062 64B2     		sxtb	r4, r4
 20064              	.LVL2464:
9310:Core/Src/bno055.c ****             }
 20065              		.loc 1 9310 25 view .LVU5510
 20066 0064 E2E7     		b	.L1432
 20067              	.L1434:
9317:Core/Src/bno055.c ****                 {
9318:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y:
9319:Core/Src/bno055.c ****                     case BNO055_REMAP_Y_Z:
9320:Core/Src/bno055.c ****                     case BNO055_REMAP_Z_X:
9321:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE0:
9322:Core/Src/bno055.c ****                     case BNO055_REMAP_X_Y_Z_TYPE1:
ARM GAS  /tmp/ccO72alg.s 			page 566


9323:Core/Src/bno055.c ****                     case BNO055_DEFAULT_AXIS:
9324:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20068              		.loc 1 9324 25 is_stmt 1 view .LVU5511
 20069              		.loc 1 9324 44 is_stmt 0 view .LVU5512
 20070 0066 2C4B     		ldr	r3, .L1442
 20071 0068 1868     		ldr	r0, [r3]
 20072 006a 0469     		ldr	r4, [r0, #16]
 20073              	.LVL2465:
 20074              		.loc 1 9324 36 view .LVU5513
 20075 006c 0123     		movs	r3, #1
 20076 006e 0DF10702 		add	r2, sp, #7
 20077 0072 4121     		movs	r1, #65
 20078 0074 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20079 0076 A047     		blx	r4
 20080              	.LVL2466:
9325:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9326:Core/Src/bno055.c ****                                                                   &data_u8r,
9327:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9328:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 20081              		.loc 1 9328 25 is_stmt 1 view .LVU5514
 20082              		.loc 1 9328 28 is_stmt 0 view .LVU5515
 20083 0078 0446     		mov	r4, r0
 20084 007a 0028     		cmp	r0, #0
 20085 007c 39D1     		bne	.L1431
9329:Core/Src/bno055.c ****                         {
9330:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, remap
 20086              		.loc 1 9330 29 is_stmt 1 view .LVU5516
 20087              		.loc 1 9330 40 is_stmt 0 view .LVU5517
 20088 007e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 20089              	.LVL2467:
 20090              		.loc 1 9330 40 view .LVU5518
 20091 0082 20F03F00 		bic	r0, r0, #63
 20092 0086 43B2     		sxtb	r3, r0
 20093 0088 05F03F00 		and	r0, r5, #63
 20094 008c 1843     		orrs	r0, r0, r3
 20095              		.loc 1 9330 38 view .LVU5519
 20096 008e 8DF80700 		strb	r0, [sp, #7]
9331:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20097              		.loc 1 9331 29 is_stmt 1 view .LVU5520
 20098              		.loc 1 9331 49 is_stmt 0 view .LVU5521
 20099 0092 214B     		ldr	r3, .L1442
 20100 0094 1868     		ldr	r0, [r3]
 20101 0096 C568     		ldr	r5, [r0, #12]
 20102              		.loc 1 9331 41 view .LVU5522
 20103 0098 0123     		movs	r3, #1
 20104 009a 0DF10702 		add	r2, sp, #7
 20105 009e 4121     		movs	r1, #65
 20106 00a0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20107 00a2 A847     		blx	r5
 20108              	.LVL2468:
 20109              		.loc 1 9331 38 view .LVU5523
 20110 00a4 54FA80F4 		uxtab	r4, r4, r0
 20111 00a8 64B2     		sxtb	r4, r4
 20112              	.LVL2469:
 20113              		.loc 1 9331 38 view .LVU5524
 20114 00aa 22E0     		b	.L1431
 20115              	.LVL2470:
ARM GAS  /tmp/ccO72alg.s 			page 567


 20116              	.L1433:
9332:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9333:Core/Src/bno055.c ****                                                                         &data_u8r,
9334:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9335:Core/Src/bno055.c ****                         }
9336:Core/Src/bno055.c ****                         break;
9337:Core/Src/bno055.c ****                     default:
9338:Core/Src/bno055.c **** 
9339:Core/Src/bno055.c ****                         /* Write the default axis remap value */
9340:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20117              		.loc 1 9340 25 is_stmt 1 view .LVU5525
 20118              		.loc 1 9340 44 is_stmt 0 view .LVU5526
 20119 00ac 1A4B     		ldr	r3, .L1442
 20120 00ae 1868     		ldr	r0, [r3]
 20121 00b0 0469     		ldr	r4, [r0, #16]
 20122              	.LVL2471:
 20123              		.loc 1 9340 36 view .LVU5527
 20124 00b2 0123     		movs	r3, #1
 20125 00b4 0DF10702 		add	r2, sp, #7
 20126 00b8 4121     		movs	r1, #65
 20127 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20128 00bc A047     		blx	r4
 20129              	.LVL2472:
9341:Core/Src/bno055.c ****                                                                   BNO055_REMAP_AXIS_VALUE_REG,
9342:Core/Src/bno055.c ****                                                                   &data_u8r,
9343:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
9344:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 20130              		.loc 1 9344 25 is_stmt 1 view .LVU5528
 20131              		.loc 1 9344 28 is_stmt 0 view .LVU5529
 20132 00be 0446     		mov	r4, r0
 20133 00c0 B8B9     		cbnz	r0, .L1431
9345:Core/Src/bno055.c ****                         {
9346:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_AXIS_VALUE, BNO05
 20134              		.loc 1 9346 29 is_stmt 1 view .LVU5530
 20135              		.loc 1 9346 40 is_stmt 0 view .LVU5531
 20136 00c2 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20137 00c6 23F03F03 		bic	r3, r3, #63
 20138 00ca 5BB2     		sxtb	r3, r3
 20139 00cc 43F02403 		orr	r3, r3, #36
 20140              		.loc 1 9346 38 view .LVU5532
 20141 00d0 8DF80730 		strb	r3, [sp, #7]
9347:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20142              		.loc 1 9347 29 is_stmt 1 view .LVU5533
 20143              		.loc 1 9347 49 is_stmt 0 view .LVU5534
 20144 00d4 104B     		ldr	r3, .L1442
 20145 00d6 1868     		ldr	r0, [r3]
 20146              	.LVL2473:
 20147              		.loc 1 9347 49 view .LVU5535
 20148 00d8 C568     		ldr	r5, [r0, #12]
 20149              		.loc 1 9347 41 view .LVU5536
 20150 00da 0123     		movs	r3, #1
 20151 00dc 0DF10702 		add	r2, sp, #7
 20152 00e0 4121     		movs	r1, #65
 20153 00e2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20154 00e4 A847     		blx	r5
 20155              	.LVL2474:
 20156              		.loc 1 9347 38 view .LVU5537
ARM GAS  /tmp/ccO72alg.s 			page 568


 20157 00e6 54FA80F4 		uxtab	r4, r4, r0
 20158 00ea 64B2     		sxtb	r4, r4
 20159              	.LVL2475:
 20160              		.loc 1 9347 38 view .LVU5538
 20161 00ec 01E0     		b	.L1431
 20162              	.LVL2476:
 20163              	.L1437:
9348:Core/Src/bno055.c ****                                                                         BNO055_REMAP_AXIS_VALUE_REG
9349:Core/Src/bno055.c ****                                                                         &data_u8r,
9350:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
9351:Core/Src/bno055.c ****                         }
9352:Core/Src/bno055.c ****                         break;
9353:Core/Src/bno055.c ****                 }
9354:Core/Src/bno055.c ****             }
9355:Core/Src/bno055.c ****             else
9356:Core/Src/bno055.c ****             {
9357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9358:Core/Src/bno055.c ****             }
9359:Core/Src/bno055.c ****         }
9360:Core/Src/bno055.c ****         else
9361:Core/Src/bno055.c ****         {
9362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20164              		.loc 1 9362 22 view .LVU5539
 20165 00ee 4FF0FF34 		mov	r4, #-1
 20166              	.LVL2477:
 20167              	.L1431:
9363:Core/Src/bno055.c ****         }
9364:Core/Src/bno055.c ****     }
9365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20168              		.loc 1 9365 5 is_stmt 1 view .LVU5540
 20169              		.loc 1 9365 24 is_stmt 0 view .LVU5541
 20170 00f2 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20171              		.loc 1 9365 8 view .LVU5542
 20172 00f6 28B9     		cbnz	r0, .L1441
 20173              	.LVL2478:
 20174              	.L1430:
9366:Core/Src/bno055.c ****     {
9367:Core/Src/bno055.c ****         /* set the operation mode
9368:Core/Src/bno055.c ****          * of previous operation mode*/
9369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9370:Core/Src/bno055.c ****     }
9371:Core/Src/bno055.c **** 
9372:Core/Src/bno055.c ****     return com_rslt;
9373:Core/Src/bno055.c **** }
 20175              		.loc 1 9373 1 view .LVU5543
 20176 00f8 2046     		mov	r0, r4
 20177 00fa 03B0     		add	sp, sp, #12
 20178              	.LCFI635:
 20179              		.cfi_remember_state
 20180              		.cfi_def_cfa_offset 12
 20181              		@ sp needed
 20182 00fc 30BD     		pop	{r4, r5, pc}
 20183              	.LVL2479:
 20184              	.L1438:
 20185              	.LCFI636:
 20186              		.cfi_restore_state
9357:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 569


 20187              		.loc 1 9357 26 view .LVU5544
 20188 00fe 4FF0FF34 		mov	r4, #-1
 20189              	.LVL2480:
9357:Core/Src/bno055.c ****             }
 20190              		.loc 1 9357 26 view .LVU5545
 20191 0102 F6E7     		b	.L1431
 20192              	.LVL2481:
 20193              	.L1441:
9369:Core/Src/bno055.c ****     }
 20194              		.loc 1 9369 9 is_stmt 1 view .LVU5546
9369:Core/Src/bno055.c ****     }
 20195              		.loc 1 9369 21 is_stmt 0 view .LVU5547
 20196 0104 FFF7FEFF 		bl	bno055_set_operation_mode
 20197              	.LVL2482:
9369:Core/Src/bno055.c ****     }
 20198              		.loc 1 9369 18 view .LVU5548
 20199 0108 54FA80F4 		uxtab	r4, r4, r0
 20200              	.LVL2483:
9369:Core/Src/bno055.c ****     }
 20201              		.loc 1 9369 18 view .LVU5549
 20202 010c 64B2     		sxtb	r4, r4
 20203              	.LVL2484:
9369:Core/Src/bno055.c ****     }
 20204              		.loc 1 9369 18 view .LVU5550
 20205 010e F3E7     		b	.L1430
 20206              	.LVL2485:
 20207              	.L1436:
9298:Core/Src/bno055.c ****     }
 20208              		.loc 1 9298 16 view .LVU5551
 20209 0110 6FF07E04 		mvn	r4, #126
 20210 0114 F0E7     		b	.L1430
 20211              	.L1443:
 20212 0116 00BF     		.align	2
 20213              	.L1442:
 20214 0118 00000000 		.word	.LANCHOR0
 20215              		.cfi_endproc
 20216              	.LFE160:
 20218              		.section	.text.bno055_get_remap_x_sign,"ax",%progbits
 20219              		.align	1
 20220              		.global	bno055_get_remap_x_sign
 20221              		.syntax unified
 20222              		.thumb
 20223              		.thumb_func
 20225              	bno055_get_remap_x_sign:
 20226              	.LVL2486:
 20227              	.LFB161:
9374:Core/Src/bno055.c **** 
9375:Core/Src/bno055.c **** /*!
9376:Core/Src/bno055.c ****  *  @brief This API used to read the x-axis remap
9377:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9378:Core/Src/bno055.c ****  *
9379:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9380:Core/Src/bno055.c ****  *
9381:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9382:Core/Src/bno055.c ****  *   ------------------- |--------------------
9383:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9384:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
ARM GAS  /tmp/ccO72alg.s 			page 570


9385:Core/Src/bno055.c ****  *
9386:Core/Src/bno055.c ****  *  @return results of bus communication function
9387:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9388:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9389:Core/Src/bno055.c ****  *
9390:Core/Src/bno055.c ****  */
9391:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_x_sign(u8 *remap_x_sign_u8)
9392:Core/Src/bno055.c **** {
 20228              		.loc 1 9392 1 is_stmt 1 view -0
 20229              		.cfi_startproc
 20230              		@ args = 0, pretend = 0, frame = 8
 20231              		@ frame_needed = 0, uses_anonymous_args = 0
 20232              		.loc 1 9392 1 is_stmt 0 view .LVU5553
 20233 0000 30B5     		push	{r4, r5, lr}
 20234              	.LCFI637:
 20235              		.cfi_def_cfa_offset 12
 20236              		.cfi_offset 4, -12
 20237              		.cfi_offset 5, -8
 20238              		.cfi_offset 14, -4
 20239 0002 83B0     		sub	sp, sp, #12
 20240              	.LCFI638:
 20241              		.cfi_def_cfa_offset 24
9393:Core/Src/bno055.c ****     /* Variable used to return value of
9394:Core/Src/bno055.c ****      * communication routine*/
9395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20242              		.loc 1 9395 5 is_stmt 1 view .LVU5554
 20243              	.LVL2487:
9396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20244              		.loc 1 9396 5 view .LVU5555
 20245              		.loc 1 9396 8 is_stmt 0 view .LVU5556
 20246 0004 0023     		movs	r3, #0
 20247 0006 8DF80730 		strb	r3, [sp, #7]
9397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20248              		.loc 1 9397 5 is_stmt 1 view .LVU5557
 20249              	.LVL2488:
9398:Core/Src/bno055.c **** 
9399:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9400:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20250              		.loc 1 9400 5 view .LVU5558
 20251              		.loc 1 9400 18 is_stmt 0 view .LVU5559
 20252 000a 134B     		ldr	r3, .L1452
 20253 000c 1B68     		ldr	r3, [r3]
 20254              		.loc 1 9400 8 view .LVU5560
 20255 000e E3B1     		cbz	r3, .L1448
 20256 0010 0446     		mov	r4, r0
9401:Core/Src/bno055.c ****     {
9402:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9403:Core/Src/bno055.c ****     }
9404:Core/Src/bno055.c ****     else
9405:Core/Src/bno055.c ****     {
9406:Core/Src/bno055.c ****         /*condition check for page, x-axis remap sign is
9407:Core/Src/bno055.c ****          * available in the page zero*/
9408:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20257              		.loc 1 9408 9 is_stmt 1 view .LVU5561
 20258              		.loc 1 9408 21 is_stmt 0 view .LVU5562
 20259 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20260              		.loc 1 9408 12 view .LVU5563
ARM GAS  /tmp/ccO72alg.s 			page 571


 20261 0014 9BB9     		cbnz	r3, .L1451
 20262              	.LVL2489:
 20263              	.L1446:
9409:Core/Src/bno055.c ****         {
9410:Core/Src/bno055.c ****             /* Write the page zero*/
9411:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9412:Core/Src/bno055.c ****         }
9413:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20264              		.loc 1 9413 53 discriminator 1 view .LVU5564
 20265 0016 104B     		ldr	r3, .L1452
 20266 0018 1B68     		ldr	r3, [r3]
 20267 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20268              		.loc 1 9413 41 discriminator 1 view .LVU5565
 20269 001c C3B9     		cbnz	r3, .L1449
 20270              	.L1447:
9414:Core/Src/bno055.c ****         {
9415:Core/Src/bno055.c ****             /* Read the value of x-axis remap sign */
9416:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20271              		.loc 1 9416 13 is_stmt 1 view .LVU5566
 20272              		.loc 1 9416 32 is_stmt 0 view .LVU5567
 20273 001e 0E4B     		ldr	r3, .L1452
 20274 0020 1868     		ldr	r0, [r3]
 20275 0022 0569     		ldr	r5, [r0, #16]
 20276              		.loc 1 9416 24 view .LVU5568
 20277 0024 0123     		movs	r3, #1
 20278 0026 0DF10702 		add	r2, sp, #7
 20279 002a 4221     		movs	r1, #66
 20280 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20281 002e A847     		blx	r5
 20282              	.LVL2490:
9417:Core/Src/bno055.c ****                                                       BNO055_REMAP_X_SIGN_REG,
9418:Core/Src/bno055.c ****                                                       &data_u8r,
9419:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9420:Core/Src/bno055.c ****             *remap_x_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN);
 20283              		.loc 1 9420 13 is_stmt 1 view .LVU5569
 20284              		.loc 1 9420 32 is_stmt 0 view .LVU5570
 20285 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20286 0034 C3F38003 		ubfx	r3, r3, #2, #1
 20287              		.loc 1 9420 30 view .LVU5571
 20288 0038 2370     		strb	r3, [r4]
 20289              	.LVL2491:
 20290              	.L1445:
9421:Core/Src/bno055.c ****         }
9422:Core/Src/bno055.c ****         else
9423:Core/Src/bno055.c ****         {
9424:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9425:Core/Src/bno055.c ****         }
9426:Core/Src/bno055.c ****     }
9427:Core/Src/bno055.c **** 
9428:Core/Src/bno055.c ****     return com_rslt;
9429:Core/Src/bno055.c **** }
 20291              		.loc 1 9429 1 view .LVU5572
 20292 003a 03B0     		add	sp, sp, #12
 20293              	.LCFI639:
 20294              		.cfi_remember_state
 20295              		.cfi_def_cfa_offset 12
 20296              		@ sp needed
ARM GAS  /tmp/ccO72alg.s 			page 572


 20297 003c 30BD     		pop	{r4, r5, pc}
 20298              	.LVL2492:
 20299              	.L1451:
 20300              	.LCFI640:
 20301              		.cfi_restore_state
9411:Core/Src/bno055.c ****         }
 20302              		.loc 1 9411 13 is_stmt 1 view .LVU5573
9411:Core/Src/bno055.c ****         }
 20303              		.loc 1 9411 23 is_stmt 0 view .LVU5574
 20304 003e 0020     		movs	r0, #0
 20305              	.LVL2493:
9411:Core/Src/bno055.c ****         }
 20306              		.loc 1 9411 23 view .LVU5575
 20307 0040 FFF7FEFF 		bl	bno055_write_page_id
 20308              	.LVL2494:
9413:Core/Src/bno055.c ****         {
 20309              		.loc 1 9413 9 is_stmt 1 view .LVU5576
9413:Core/Src/bno055.c ****         {
 20310              		.loc 1 9413 12 is_stmt 0 view .LVU5577
 20311 0044 0028     		cmp	r0, #0
 20312 0046 EAD0     		beq	.L1447
 20313 0048 E5E7     		b	.L1446
 20314              	.LVL2495:
 20315              	.L1448:
9402:Core/Src/bno055.c ****     }
 20316              		.loc 1 9402 16 view .LVU5578
 20317 004a 6FF07E00 		mvn	r0, #126
 20318              	.LVL2496:
9402:Core/Src/bno055.c ****     }
 20319              		.loc 1 9402 16 view .LVU5579
 20320 004e F4E7     		b	.L1445
 20321              	.LVL2497:
 20322              	.L1449:
9424:Core/Src/bno055.c ****         }
 20323              		.loc 1 9424 22 view .LVU5580
 20324 0050 4FF0FF30 		mov	r0, #-1
 20325 0054 F1E7     		b	.L1445
 20326              	.L1453:
 20327 0056 00BF     		.align	2
 20328              	.L1452:
 20329 0058 00000000 		.word	.LANCHOR0
 20330              		.cfi_endproc
 20331              	.LFE161:
 20333              		.section	.text.bno055_set_remap_x_sign,"ax",%progbits
 20334              		.align	1
 20335              		.global	bno055_set_remap_x_sign
 20336              		.syntax unified
 20337              		.thumb
 20338              		.thumb_func
 20340              	bno055_set_remap_x_sign:
 20341              	.LVL2498:
 20342              	.LFB162:
9430:Core/Src/bno055.c **** 
9431:Core/Src/bno055.c **** /*!
9432:Core/Src/bno055.c ****  *  @brief This API used to write the x-axis remap
9433:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 2
9434:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 573


9435:Core/Src/bno055.c ****  *  @param remap_x_sign_u8 : The value of x-axis remap sign
9436:Core/Src/bno055.c ****  *
9437:Core/Src/bno055.c ****  *    remap_x_sign_u8  |    result
9438:Core/Src/bno055.c ****  *   ------------------- |--------------------
9439:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9440:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9441:Core/Src/bno055.c ****  *
9442:Core/Src/bno055.c ****  *  @return results of bus communication function
9443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9445:Core/Src/bno055.c ****  *
9446:Core/Src/bno055.c ****  */
9447:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_x_sign(u8 remap_x_sign_u8)
9448:Core/Src/bno055.c **** {
 20343              		.loc 1 9448 1 is_stmt 1 view -0
 20344              		.cfi_startproc
 20345              		@ args = 0, pretend = 0, frame = 8
 20346              		@ frame_needed = 0, uses_anonymous_args = 0
 20347              		.loc 1 9448 1 is_stmt 0 view .LVU5582
 20348 0000 30B5     		push	{r4, r5, lr}
 20349              	.LCFI641:
 20350              		.cfi_def_cfa_offset 12
 20351              		.cfi_offset 4, -12
 20352              		.cfi_offset 5, -8
 20353              		.cfi_offset 14, -4
 20354 0002 83B0     		sub	sp, sp, #12
 20355              	.LCFI642:
 20356              		.cfi_def_cfa_offset 24
9449:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20357              		.loc 1 9449 5 is_stmt 1 view .LVU5583
 20358              	.LVL2499:
9450:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20359              		.loc 1 9450 5 view .LVU5584
 20360              		.loc 1 9450 8 is_stmt 0 view .LVU5585
 20361 0004 0023     		movs	r3, #0
 20362 0006 8DF80730 		strb	r3, [sp, #7]
9451:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20363              		.loc 1 9451 5 is_stmt 1 view .LVU5586
 20364              		.loc 1 9451 8 is_stmt 0 view .LVU5587
 20365 000a 8DF80630 		strb	r3, [sp, #6]
9452:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20366              		.loc 1 9452 5 is_stmt 1 view .LVU5588
 20367              	.LVL2500:
9453:Core/Src/bno055.c **** 
9454:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9455:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20368              		.loc 1 9455 5 view .LVU5589
 20369              		.loc 1 9455 18 is_stmt 0 view .LVU5590
 20370 000e 264B     		ldr	r3, .L1464
 20371 0010 1B68     		ldr	r3, [r3]
 20372              		.loc 1 9455 8 view .LVU5591
 20373 0012 002B     		cmp	r3, #0
 20374 0014 44D0     		beq	.L1458
 20375 0016 0546     		mov	r5, r0
9456:Core/Src/bno055.c ****     {
9457:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9458:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 574


9459:Core/Src/bno055.c ****     else
9460:Core/Src/bno055.c ****     {
9461:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9462:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9463:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9464:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20376              		.loc 1 9464 9 is_stmt 1 view .LVU5592
 20377              		.loc 1 9464 19 is_stmt 0 view .LVU5593
 20378 0018 0DF10600 		add	r0, sp, #6
 20379              	.LVL2501:
 20380              		.loc 1 9464 19 view .LVU5594
 20381 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20382              	.LVL2502:
9465:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20383              		.loc 1 9465 9 is_stmt 1 view .LVU5595
 20384              		.loc 1 9465 12 is_stmt 0 view .LVU5596
 20385 0020 0446     		mov	r4, r0
 20386 0022 60BB     		cbnz	r0, .L1459
9466:Core/Src/bno055.c ****         {
9467:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20387              		.loc 1 9467 13 is_stmt 1 view .LVU5597
 20388              		.loc 1 9467 32 is_stmt 0 view .LVU5598
 20389 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20390              		.loc 1 9467 16 view .LVU5599
 20391 0028 1BBB     		cbnz	r3, .L1462
 20392              	.LVL2503:
 20393              	.L1457:
9468:Core/Src/bno055.c ****             {
9469:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9470:Core/Src/bno055.c ****             }
9471:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20394              		.loc 1 9471 13 is_stmt 1 view .LVU5600
 20395              		.loc 1 9471 16 is_stmt 0 view .LVU5601
 20396 002a 84BB     		cbnz	r4, .L1460
9472:Core/Src/bno055.c ****             {
9473:Core/Src/bno055.c ****                 /* Write the value of x-axis remap */
9474:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20397              		.loc 1 9474 17 is_stmt 1 view .LVU5602
 20398              		.loc 1 9474 36 is_stmt 0 view .LVU5603
 20399 002c 1E4B     		ldr	r3, .L1464
 20400 002e 1868     		ldr	r0, [r3]
 20401 0030 0469     		ldr	r4, [r0, #16]
 20402              	.LVL2504:
 20403              		.loc 1 9474 28 view .LVU5604
 20404 0032 0123     		movs	r3, #1
 20405 0034 0DF10702 		add	r2, sp, #7
 20406 0038 4221     		movs	r1, #66
 20407 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20408 003c A047     		blx	r4
 20409              	.LVL2505:
9475:Core/Src/bno055.c ****                                                           BNO055_REMAP_X_SIGN_REG,
9476:Core/Src/bno055.c ****                                                           &data_u8r,
9477:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9478:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20410              		.loc 1 9478 17 is_stmt 1 view .LVU5605
 20411              		.loc 1 9478 20 is_stmt 0 view .LVU5606
 20412 003e 0446     		mov	r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 575


 20413 0040 F8B9     		cbnz	r0, .L1456
9479:Core/Src/bno055.c ****                 {
9480:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_X_SIGN, remap_x_sign_u8);
 20414              		.loc 1 9480 21 is_stmt 1 view .LVU5607
 20415              		.loc 1 9480 32 is_stmt 0 view .LVU5608
 20416 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 20417              	.LVL2506:
 20418              		.loc 1 9480 32 view .LVU5609
 20419 0046 20F00400 		bic	r0, r0, #4
 20420 004a 43B2     		sxtb	r3, r0
 20421 004c A800     		lsls	r0, r5, #2
 20422 004e 00F00400 		and	r0, r0, #4
 20423 0052 1843     		orrs	r0, r0, r3
 20424              		.loc 1 9480 30 view .LVU5610
 20425 0054 8DF80700 		strb	r0, [sp, #7]
9481:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20426              		.loc 1 9481 21 is_stmt 1 view .LVU5611
 20427              		.loc 1 9481 41 is_stmt 0 view .LVU5612
 20428 0058 134B     		ldr	r3, .L1464
 20429 005a 1868     		ldr	r0, [r3]
 20430 005c C568     		ldr	r5, [r0, #12]
 20431              		.loc 1 9481 33 view .LVU5613
 20432 005e 0123     		movs	r3, #1
 20433 0060 0DF10702 		add	r2, sp, #7
 20434 0064 4221     		movs	r1, #66
 20435 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20436 0068 A847     		blx	r5
 20437              	.LVL2507:
 20438              		.loc 1 9481 30 view .LVU5614
 20439 006a 54FA80F4 		uxtab	r4, r4, r0
 20440 006e 64B2     		sxtb	r4, r4
 20441              	.LVL2508:
 20442              		.loc 1 9481 30 view .LVU5615
 20443 0070 07E0     		b	.L1456
 20444              	.LVL2509:
 20445              	.L1462:
9469:Core/Src/bno055.c ****             }
 20446              		.loc 1 9469 17 is_stmt 1 view .LVU5616
9469:Core/Src/bno055.c ****             }
 20447              		.loc 1 9469 28 is_stmt 0 view .LVU5617
 20448 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 20449              	.LVL2510:
9469:Core/Src/bno055.c ****             }
 20450              		.loc 1 9469 25 view .LVU5618
 20451 0076 54FA80F4 		uxtab	r4, r4, r0
 20452 007a 64B2     		sxtb	r4, r4
 20453              	.LVL2511:
9469:Core/Src/bno055.c ****             }
 20454              		.loc 1 9469 25 view .LVU5619
 20455 007c D5E7     		b	.L1457
 20456              	.LVL2512:
 20457              	.L1459:
9482:Core/Src/bno055.c ****                                                                 BNO055_REMAP_X_SIGN_REG,
9483:Core/Src/bno055.c ****                                                                 &data_u8r,
9484:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9485:Core/Src/bno055.c ****                 }
9486:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 576


9487:Core/Src/bno055.c ****             else
9488:Core/Src/bno055.c ****             {
9489:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9490:Core/Src/bno055.c ****             }
9491:Core/Src/bno055.c ****         }
9492:Core/Src/bno055.c ****         else
9493:Core/Src/bno055.c ****         {
9494:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20458              		.loc 1 9494 22 view .LVU5620
 20459 007e 4FF0FF34 		mov	r4, #-1
 20460              	.LVL2513:
 20461              	.L1456:
9495:Core/Src/bno055.c ****         }
9496:Core/Src/bno055.c ****     }
9497:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20462              		.loc 1 9497 5 is_stmt 1 view .LVU5621
 20463              		.loc 1 9497 24 is_stmt 0 view .LVU5622
 20464 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20465              		.loc 1 9497 8 view .LVU5623
 20466 0086 28B9     		cbnz	r0, .L1463
 20467              	.LVL2514:
 20468              	.L1455:
9498:Core/Src/bno055.c ****     {
9499:Core/Src/bno055.c ****         /* set the operation mode
9500:Core/Src/bno055.c ****          * of previous operation mode*/
9501:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9502:Core/Src/bno055.c ****     }
9503:Core/Src/bno055.c **** 
9504:Core/Src/bno055.c ****     return com_rslt;
9505:Core/Src/bno055.c **** }
 20469              		.loc 1 9505 1 view .LVU5624
 20470 0088 2046     		mov	r0, r4
 20471 008a 03B0     		add	sp, sp, #12
 20472              	.LCFI643:
 20473              		.cfi_remember_state
 20474              		.cfi_def_cfa_offset 12
 20475              		@ sp needed
 20476 008c 30BD     		pop	{r4, r5, pc}
 20477              	.LVL2515:
 20478              	.L1460:
 20479              	.LCFI644:
 20480              		.cfi_restore_state
9489:Core/Src/bno055.c ****             }
 20481              		.loc 1 9489 26 view .LVU5625
 20482 008e 4FF0FF34 		mov	r4, #-1
 20483              	.LVL2516:
9489:Core/Src/bno055.c ****             }
 20484              		.loc 1 9489 26 view .LVU5626
 20485 0092 F6E7     		b	.L1456
 20486              	.LVL2517:
 20487              	.L1463:
9501:Core/Src/bno055.c ****     }
 20488              		.loc 1 9501 9 is_stmt 1 view .LVU5627
9501:Core/Src/bno055.c ****     }
 20489              		.loc 1 9501 21 is_stmt 0 view .LVU5628
 20490 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 20491              	.LVL2518:
ARM GAS  /tmp/ccO72alg.s 			page 577


9501:Core/Src/bno055.c ****     }
 20492              		.loc 1 9501 18 view .LVU5629
 20493 0098 54FA80F4 		uxtab	r4, r4, r0
 20494              	.LVL2519:
9501:Core/Src/bno055.c ****     }
 20495              		.loc 1 9501 18 view .LVU5630
 20496 009c 64B2     		sxtb	r4, r4
 20497              	.LVL2520:
9501:Core/Src/bno055.c ****     }
 20498              		.loc 1 9501 18 view .LVU5631
 20499 009e F3E7     		b	.L1455
 20500              	.LVL2521:
 20501              	.L1458:
9457:Core/Src/bno055.c ****     }
 20502              		.loc 1 9457 16 view .LVU5632
 20503 00a0 6FF07E04 		mvn	r4, #126
 20504 00a4 F0E7     		b	.L1455
 20505              	.L1465:
 20506 00a6 00BF     		.align	2
 20507              	.L1464:
 20508 00a8 00000000 		.word	.LANCHOR0
 20509              		.cfi_endproc
 20510              	.LFE162:
 20512              		.section	.text.bno055_get_remap_y_sign,"ax",%progbits
 20513              		.align	1
 20514              		.global	bno055_get_remap_y_sign
 20515              		.syntax unified
 20516              		.thumb
 20517              		.thumb_func
 20519              	bno055_get_remap_y_sign:
 20520              	.LVL2522:
 20521              	.LFB163:
9506:Core/Src/bno055.c **** 
9507:Core/Src/bno055.c **** /*!
9508:Core/Src/bno055.c ****  *  @brief This API used to read the y-axis remap
9509:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9510:Core/Src/bno055.c ****  *
9511:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9512:Core/Src/bno055.c ****  *
9513:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9514:Core/Src/bno055.c ****  *   ------------------- |--------------------
9515:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9516:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9517:Core/Src/bno055.c ****  *
9518:Core/Src/bno055.c ****  *  @return results of bus communication function
9519:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9520:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9521:Core/Src/bno055.c ****  *
9522:Core/Src/bno055.c ****  */
9523:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_y_sign(u8 *remap_y_sign_u8)
9524:Core/Src/bno055.c **** {
 20522              		.loc 1 9524 1 is_stmt 1 view -0
 20523              		.cfi_startproc
 20524              		@ args = 0, pretend = 0, frame = 8
 20525              		@ frame_needed = 0, uses_anonymous_args = 0
 20526              		.loc 1 9524 1 is_stmt 0 view .LVU5634
 20527 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccO72alg.s 			page 578


 20528              	.LCFI645:
 20529              		.cfi_def_cfa_offset 12
 20530              		.cfi_offset 4, -12
 20531              		.cfi_offset 5, -8
 20532              		.cfi_offset 14, -4
 20533 0002 83B0     		sub	sp, sp, #12
 20534              	.LCFI646:
 20535              		.cfi_def_cfa_offset 24
9525:Core/Src/bno055.c ****     /* Variable used to return value of
9526:Core/Src/bno055.c ****      * communication routine*/
9527:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20536              		.loc 1 9527 5 is_stmt 1 view .LVU5635
 20537              	.LVL2523:
9528:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20538              		.loc 1 9528 5 view .LVU5636
 20539              		.loc 1 9528 8 is_stmt 0 view .LVU5637
 20540 0004 0023     		movs	r3, #0
 20541 0006 8DF80730 		strb	r3, [sp, #7]
9529:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20542              		.loc 1 9529 5 is_stmt 1 view .LVU5638
 20543              	.LVL2524:
9530:Core/Src/bno055.c **** 
9531:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9532:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20544              		.loc 1 9532 5 view .LVU5639
 20545              		.loc 1 9532 18 is_stmt 0 view .LVU5640
 20546 000a 134B     		ldr	r3, .L1474
 20547 000c 1B68     		ldr	r3, [r3]
 20548              		.loc 1 9532 8 view .LVU5641
 20549 000e E3B1     		cbz	r3, .L1470
 20550 0010 0446     		mov	r4, r0
9533:Core/Src/bno055.c ****     {
9534:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9535:Core/Src/bno055.c ****     }
9536:Core/Src/bno055.c ****     else
9537:Core/Src/bno055.c ****     {
9538:Core/Src/bno055.c ****         /*condition check for page, y-axis remap sign is
9539:Core/Src/bno055.c ****          * available in the page zero*/
9540:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20551              		.loc 1 9540 9 is_stmt 1 view .LVU5642
 20552              		.loc 1 9540 21 is_stmt 0 view .LVU5643
 20553 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20554              		.loc 1 9540 12 view .LVU5644
 20555 0014 9BB9     		cbnz	r3, .L1473
 20556              	.LVL2525:
 20557              	.L1468:
9541:Core/Src/bno055.c ****         {
9542:Core/Src/bno055.c ****             /* Write the page zero*/
9543:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9544:Core/Src/bno055.c ****         }
9545:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20558              		.loc 1 9545 53 discriminator 1 view .LVU5645
 20559 0016 104B     		ldr	r3, .L1474
 20560 0018 1B68     		ldr	r3, [r3]
 20561 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20562              		.loc 1 9545 41 discriminator 1 view .LVU5646
 20563 001c C3B9     		cbnz	r3, .L1471
ARM GAS  /tmp/ccO72alg.s 			page 579


 20564              	.L1469:
9546:Core/Src/bno055.c ****         {
9547:Core/Src/bno055.c ****             /* Read the value of y-axis remap sign*/
9548:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20565              		.loc 1 9548 13 is_stmt 1 view .LVU5647
 20566              		.loc 1 9548 32 is_stmt 0 view .LVU5648
 20567 001e 0E4B     		ldr	r3, .L1474
 20568 0020 1868     		ldr	r0, [r3]
 20569 0022 0569     		ldr	r5, [r0, #16]
 20570              		.loc 1 9548 24 view .LVU5649
 20571 0024 0123     		movs	r3, #1
 20572 0026 0DF10702 		add	r2, sp, #7
 20573 002a 4221     		movs	r1, #66
 20574 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20575 002e A847     		blx	r5
 20576              	.LVL2526:
9549:Core/Src/bno055.c ****                                                       BNO055_REMAP_Y_SIGN_REG,
9550:Core/Src/bno055.c ****                                                       &data_u8r,
9551:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9552:Core/Src/bno055.c ****             *remap_y_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN);
 20577              		.loc 1 9552 13 is_stmt 1 view .LVU5650
 20578              		.loc 1 9552 32 is_stmt 0 view .LVU5651
 20579 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20580 0034 C3F34003 		ubfx	r3, r3, #1, #1
 20581              		.loc 1 9552 30 view .LVU5652
 20582 0038 2370     		strb	r3, [r4]
 20583              	.LVL2527:
 20584              	.L1467:
9553:Core/Src/bno055.c ****         }
9554:Core/Src/bno055.c ****         else
9555:Core/Src/bno055.c ****         {
9556:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9557:Core/Src/bno055.c ****         }
9558:Core/Src/bno055.c ****     }
9559:Core/Src/bno055.c **** 
9560:Core/Src/bno055.c ****     return com_rslt;
9561:Core/Src/bno055.c **** }
 20585              		.loc 1 9561 1 view .LVU5653
 20586 003a 03B0     		add	sp, sp, #12
 20587              	.LCFI647:
 20588              		.cfi_remember_state
 20589              		.cfi_def_cfa_offset 12
 20590              		@ sp needed
 20591 003c 30BD     		pop	{r4, r5, pc}
 20592              	.LVL2528:
 20593              	.L1473:
 20594              	.LCFI648:
 20595              		.cfi_restore_state
9543:Core/Src/bno055.c ****         }
 20596              		.loc 1 9543 13 is_stmt 1 view .LVU5654
9543:Core/Src/bno055.c ****         }
 20597              		.loc 1 9543 23 is_stmt 0 view .LVU5655
 20598 003e 0020     		movs	r0, #0
 20599              	.LVL2529:
9543:Core/Src/bno055.c ****         }
 20600              		.loc 1 9543 23 view .LVU5656
 20601 0040 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccO72alg.s 			page 580


 20602              	.LVL2530:
9545:Core/Src/bno055.c ****         {
 20603              		.loc 1 9545 9 is_stmt 1 view .LVU5657
9545:Core/Src/bno055.c ****         {
 20604              		.loc 1 9545 12 is_stmt 0 view .LVU5658
 20605 0044 0028     		cmp	r0, #0
 20606 0046 EAD0     		beq	.L1469
 20607 0048 E5E7     		b	.L1468
 20608              	.LVL2531:
 20609              	.L1470:
9534:Core/Src/bno055.c ****     }
 20610              		.loc 1 9534 16 view .LVU5659
 20611 004a 6FF07E00 		mvn	r0, #126
 20612              	.LVL2532:
9534:Core/Src/bno055.c ****     }
 20613              		.loc 1 9534 16 view .LVU5660
 20614 004e F4E7     		b	.L1467
 20615              	.LVL2533:
 20616              	.L1471:
9556:Core/Src/bno055.c ****         }
 20617              		.loc 1 9556 22 view .LVU5661
 20618 0050 4FF0FF30 		mov	r0, #-1
 20619 0054 F1E7     		b	.L1467
 20620              	.L1475:
 20621 0056 00BF     		.align	2
 20622              	.L1474:
 20623 0058 00000000 		.word	.LANCHOR0
 20624              		.cfi_endproc
 20625              	.LFE163:
 20627              		.section	.text.bno055_set_remap_y_sign,"ax",%progbits
 20628              		.align	1
 20629              		.global	bno055_set_remap_y_sign
 20630              		.syntax unified
 20631              		.thumb
 20632              		.thumb_func
 20634              	bno055_set_remap_y_sign:
 20635              	.LVL2534:
 20636              	.LFB164:
9562:Core/Src/bno055.c **** 
9563:Core/Src/bno055.c **** /*!
9564:Core/Src/bno055.c ****  *  @brief This API used to write the y-axis remap
9565:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 1
9566:Core/Src/bno055.c ****  *
9567:Core/Src/bno055.c ****  *  @param remap_y_sign_u8 : The value of y-axis remap sign
9568:Core/Src/bno055.c ****  *
9569:Core/Src/bno055.c ****  *    remap_y_sign_u8  |   result
9570:Core/Src/bno055.c ****  *   ------------------- |--------------------
9571:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9572:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9573:Core/Src/bno055.c ****  *
9574:Core/Src/bno055.c ****  *  @return results of bus communication function
9575:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9576:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9577:Core/Src/bno055.c ****  *
9578:Core/Src/bno055.c ****  */
9579:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_y_sign(u8 remap_y_sign_u8)
9580:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 581


 20637              		.loc 1 9580 1 is_stmt 1 view -0
 20638              		.cfi_startproc
 20639              		@ args = 0, pretend = 0, frame = 8
 20640              		@ frame_needed = 0, uses_anonymous_args = 0
 20641              		.loc 1 9580 1 is_stmt 0 view .LVU5663
 20642 0000 30B5     		push	{r4, r5, lr}
 20643              	.LCFI649:
 20644              		.cfi_def_cfa_offset 12
 20645              		.cfi_offset 4, -12
 20646              		.cfi_offset 5, -8
 20647              		.cfi_offset 14, -4
 20648 0002 83B0     		sub	sp, sp, #12
 20649              	.LCFI650:
 20650              		.cfi_def_cfa_offset 24
9581:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20651              		.loc 1 9581 5 is_stmt 1 view .LVU5664
 20652              	.LVL2535:
9582:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20653              		.loc 1 9582 5 view .LVU5665
 20654              		.loc 1 9582 8 is_stmt 0 view .LVU5666
 20655 0004 0023     		movs	r3, #0
 20656 0006 8DF80730 		strb	r3, [sp, #7]
9583:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20657              		.loc 1 9583 5 is_stmt 1 view .LVU5667
 20658              		.loc 1 9583 8 is_stmt 0 view .LVU5668
 20659 000a 8DF80630 		strb	r3, [sp, #6]
9584:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20660              		.loc 1 9584 5 is_stmt 1 view .LVU5669
 20661              	.LVL2536:
9585:Core/Src/bno055.c **** 
9586:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9587:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20662              		.loc 1 9587 5 view .LVU5670
 20663              		.loc 1 9587 18 is_stmt 0 view .LVU5671
 20664 000e 264B     		ldr	r3, .L1486
 20665 0010 1B68     		ldr	r3, [r3]
 20666              		.loc 1 9587 8 view .LVU5672
 20667 0012 002B     		cmp	r3, #0
 20668 0014 44D0     		beq	.L1480
 20669 0016 0546     		mov	r5, r0
9588:Core/Src/bno055.c ****     {
9589:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9590:Core/Src/bno055.c ****     }
9591:Core/Src/bno055.c ****     else
9592:Core/Src/bno055.c ****     {
9593:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9594:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9595:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9596:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20670              		.loc 1 9596 9 is_stmt 1 view .LVU5673
 20671              		.loc 1 9596 19 is_stmt 0 view .LVU5674
 20672 0018 0DF10600 		add	r0, sp, #6
 20673              	.LVL2537:
 20674              		.loc 1 9596 19 view .LVU5675
 20675 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20676              	.LVL2538:
9597:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 582


 20677              		.loc 1 9597 9 is_stmt 1 view .LVU5676
 20678              		.loc 1 9597 12 is_stmt 0 view .LVU5677
 20679 0020 0446     		mov	r4, r0
 20680 0022 60BB     		cbnz	r0, .L1481
9598:Core/Src/bno055.c ****         {
9599:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20681              		.loc 1 9599 13 is_stmt 1 view .LVU5678
 20682              		.loc 1 9599 32 is_stmt 0 view .LVU5679
 20683 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20684              		.loc 1 9599 16 view .LVU5680
 20685 0028 1BBB     		cbnz	r3, .L1484
 20686              	.LVL2539:
 20687              	.L1479:
9600:Core/Src/bno055.c ****             {
9601:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9602:Core/Src/bno055.c ****             }
9603:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20688              		.loc 1 9603 13 is_stmt 1 view .LVU5681
 20689              		.loc 1 9603 16 is_stmt 0 view .LVU5682
 20690 002a 84BB     		cbnz	r4, .L1482
9604:Core/Src/bno055.c ****             {
9605:Core/Src/bno055.c ****                 /* Write the value of y-axis remap sign*/
9606:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20691              		.loc 1 9606 17 is_stmt 1 view .LVU5683
 20692              		.loc 1 9606 36 is_stmt 0 view .LVU5684
 20693 002c 1E4B     		ldr	r3, .L1486
 20694 002e 1868     		ldr	r0, [r3]
 20695 0030 0469     		ldr	r4, [r0, #16]
 20696              	.LVL2540:
 20697              		.loc 1 9606 28 view .LVU5685
 20698 0032 0123     		movs	r3, #1
 20699 0034 0DF10702 		add	r2, sp, #7
 20700 0038 4221     		movs	r1, #66
 20701 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20702 003c A047     		blx	r4
 20703              	.LVL2541:
9607:Core/Src/bno055.c ****                                                           BNO055_REMAP_Y_SIGN_REG,
9608:Core/Src/bno055.c ****                                                           &data_u8r,
9609:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9610:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20704              		.loc 1 9610 17 is_stmt 1 view .LVU5686
 20705              		.loc 1 9610 20 is_stmt 0 view .LVU5687
 20706 003e 0446     		mov	r4, r0
 20707 0040 F8B9     		cbnz	r0, .L1478
9611:Core/Src/bno055.c ****                 {
9612:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Y_SIGN, remap_y_sign_u8);
 20708              		.loc 1 9612 21 is_stmt 1 view .LVU5688
 20709              		.loc 1 9612 32 is_stmt 0 view .LVU5689
 20710 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 20711              	.LVL2542:
 20712              		.loc 1 9612 32 view .LVU5690
 20713 0046 20F00200 		bic	r0, r0, #2
 20714 004a 43B2     		sxtb	r3, r0
 20715 004c 6800     		lsls	r0, r5, #1
 20716 004e 00F00200 		and	r0, r0, #2
 20717 0052 1843     		orrs	r0, r0, r3
 20718              		.loc 1 9612 30 view .LVU5691
ARM GAS  /tmp/ccO72alg.s 			page 583


 20719 0054 8DF80700 		strb	r0, [sp, #7]
9613:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 20720              		.loc 1 9613 21 is_stmt 1 view .LVU5692
 20721              		.loc 1 9613 41 is_stmt 0 view .LVU5693
 20722 0058 134B     		ldr	r3, .L1486
 20723 005a 1868     		ldr	r0, [r3]
 20724 005c C568     		ldr	r5, [r0, #12]
 20725              		.loc 1 9613 33 view .LVU5694
 20726 005e 0123     		movs	r3, #1
 20727 0060 0DF10702 		add	r2, sp, #7
 20728 0064 4221     		movs	r1, #66
 20729 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20730 0068 A847     		blx	r5
 20731              	.LVL2543:
 20732              		.loc 1 9613 30 view .LVU5695
 20733 006a 54FA80F4 		uxtab	r4, r4, r0
 20734 006e 64B2     		sxtb	r4, r4
 20735              	.LVL2544:
 20736              		.loc 1 9613 30 view .LVU5696
 20737 0070 07E0     		b	.L1478
 20738              	.LVL2545:
 20739              	.L1484:
9601:Core/Src/bno055.c ****             }
 20740              		.loc 1 9601 17 is_stmt 1 view .LVU5697
9601:Core/Src/bno055.c ****             }
 20741              		.loc 1 9601 28 is_stmt 0 view .LVU5698
 20742 0072 FFF7FEFF 		bl	bno055_set_operation_mode
 20743              	.LVL2546:
9601:Core/Src/bno055.c ****             }
 20744              		.loc 1 9601 25 view .LVU5699
 20745 0076 54FA80F4 		uxtab	r4, r4, r0
 20746 007a 64B2     		sxtb	r4, r4
 20747              	.LVL2547:
9601:Core/Src/bno055.c ****             }
 20748              		.loc 1 9601 25 view .LVU5700
 20749 007c D5E7     		b	.L1479
 20750              	.LVL2548:
 20751              	.L1481:
9614:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Y_SIGN_REG,
9615:Core/Src/bno055.c ****                                                                 &data_u8r,
9616:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9617:Core/Src/bno055.c ****                 }
9618:Core/Src/bno055.c ****             }
9619:Core/Src/bno055.c ****             else
9620:Core/Src/bno055.c ****             {
9621:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9622:Core/Src/bno055.c ****             }
9623:Core/Src/bno055.c ****         }
9624:Core/Src/bno055.c ****         else
9625:Core/Src/bno055.c ****         {
9626:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 20752              		.loc 1 9626 22 view .LVU5701
 20753 007e 4FF0FF34 		mov	r4, #-1
 20754              	.LVL2549:
 20755              	.L1478:
9627:Core/Src/bno055.c ****         }
9628:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 584


9629:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20756              		.loc 1 9629 5 is_stmt 1 view .LVU5702
 20757              		.loc 1 9629 24 is_stmt 0 view .LVU5703
 20758 0082 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 20759              		.loc 1 9629 8 view .LVU5704
 20760 0086 28B9     		cbnz	r0, .L1485
 20761              	.LVL2550:
 20762              	.L1477:
9630:Core/Src/bno055.c ****     {
9631:Core/Src/bno055.c ****         /* set the operation mode
9632:Core/Src/bno055.c ****          * of previous operation mode*/
9633:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9634:Core/Src/bno055.c ****     }
9635:Core/Src/bno055.c **** 
9636:Core/Src/bno055.c ****     return com_rslt;
9637:Core/Src/bno055.c **** }
 20763              		.loc 1 9637 1 view .LVU5705
 20764 0088 2046     		mov	r0, r4
 20765 008a 03B0     		add	sp, sp, #12
 20766              	.LCFI651:
 20767              		.cfi_remember_state
 20768              		.cfi_def_cfa_offset 12
 20769              		@ sp needed
 20770 008c 30BD     		pop	{r4, r5, pc}
 20771              	.LVL2551:
 20772              	.L1482:
 20773              	.LCFI652:
 20774              		.cfi_restore_state
9621:Core/Src/bno055.c ****             }
 20775              		.loc 1 9621 26 view .LVU5706
 20776 008e 4FF0FF34 		mov	r4, #-1
 20777              	.LVL2552:
9621:Core/Src/bno055.c ****             }
 20778              		.loc 1 9621 26 view .LVU5707
 20779 0092 F6E7     		b	.L1478
 20780              	.LVL2553:
 20781              	.L1485:
9633:Core/Src/bno055.c ****     }
 20782              		.loc 1 9633 9 is_stmt 1 view .LVU5708
9633:Core/Src/bno055.c ****     }
 20783              		.loc 1 9633 21 is_stmt 0 view .LVU5709
 20784 0094 FFF7FEFF 		bl	bno055_set_operation_mode
 20785              	.LVL2554:
9633:Core/Src/bno055.c ****     }
 20786              		.loc 1 9633 18 view .LVU5710
 20787 0098 54FA80F4 		uxtab	r4, r4, r0
 20788              	.LVL2555:
9633:Core/Src/bno055.c ****     }
 20789              		.loc 1 9633 18 view .LVU5711
 20790 009c 64B2     		sxtb	r4, r4
 20791              	.LVL2556:
9633:Core/Src/bno055.c ****     }
 20792              		.loc 1 9633 18 view .LVU5712
 20793 009e F3E7     		b	.L1477
 20794              	.LVL2557:
 20795              	.L1480:
9589:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 585


 20796              		.loc 1 9589 16 view .LVU5713
 20797 00a0 6FF07E04 		mvn	r4, #126
 20798 00a4 F0E7     		b	.L1477
 20799              	.L1487:
 20800 00a6 00BF     		.align	2
 20801              	.L1486:
 20802 00a8 00000000 		.word	.LANCHOR0
 20803              		.cfi_endproc
 20804              	.LFE164:
 20806              		.section	.text.bno055_get_remap_z_sign,"ax",%progbits
 20807              		.align	1
 20808              		.global	bno055_get_remap_z_sign
 20809              		.syntax unified
 20810              		.thumb
 20811              		.thumb_func
 20813              	bno055_get_remap_z_sign:
 20814              	.LVL2558:
 20815              	.LFB165:
9638:Core/Src/bno055.c **** 
9639:Core/Src/bno055.c **** /*!
9640:Core/Src/bno055.c ****  *  @brief This API used to read the z-axis remap
9641:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9642:Core/Src/bno055.c ****  *
9643:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9644:Core/Src/bno055.c ****  *
9645:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9646:Core/Src/bno055.c ****  *   ------------------- |--------------------
9647:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9648:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9649:Core/Src/bno055.c ****  *
9650:Core/Src/bno055.c ****  *  @return results of bus communication function
9651:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9652:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9653:Core/Src/bno055.c ****  *
9654:Core/Src/bno055.c ****  */
9655:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_remap_z_sign(u8 *remap_z_sign_u8)
9656:Core/Src/bno055.c **** {
 20816              		.loc 1 9656 1 is_stmt 1 view -0
 20817              		.cfi_startproc
 20818              		@ args = 0, pretend = 0, frame = 8
 20819              		@ frame_needed = 0, uses_anonymous_args = 0
 20820              		.loc 1 9656 1 is_stmt 0 view .LVU5715
 20821 0000 30B5     		push	{r4, r5, lr}
 20822              	.LCFI653:
 20823              		.cfi_def_cfa_offset 12
 20824              		.cfi_offset 4, -12
 20825              		.cfi_offset 5, -8
 20826              		.cfi_offset 14, -4
 20827 0002 83B0     		sub	sp, sp, #12
 20828              	.LCFI654:
 20829              		.cfi_def_cfa_offset 24
9657:Core/Src/bno055.c ****     /* Variable used to return value of
9658:Core/Src/bno055.c ****      * communication routine*/
9659:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20830              		.loc 1 9659 5 is_stmt 1 view .LVU5716
 20831              	.LVL2559:
9660:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccO72alg.s 			page 586


 20832              		.loc 1 9660 5 view .LVU5717
 20833              		.loc 1 9660 8 is_stmt 0 view .LVU5718
 20834 0004 0023     		movs	r3, #0
 20835 0006 8DF80730 		strb	r3, [sp, #7]
9661:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20836              		.loc 1 9661 5 is_stmt 1 view .LVU5719
 20837              	.LVL2560:
9662:Core/Src/bno055.c **** 
9663:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9664:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20838              		.loc 1 9664 5 view .LVU5720
 20839              		.loc 1 9664 18 is_stmt 0 view .LVU5721
 20840 000a 134B     		ldr	r3, .L1496
 20841 000c 1B68     		ldr	r3, [r3]
 20842              		.loc 1 9664 8 view .LVU5722
 20843 000e E3B1     		cbz	r3, .L1492
 20844 0010 0446     		mov	r4, r0
9665:Core/Src/bno055.c ****     {
9666:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9667:Core/Src/bno055.c ****     }
9668:Core/Src/bno055.c ****     else
9669:Core/Src/bno055.c ****     {
9670:Core/Src/bno055.c ****         /*condition check for page, z-axis remap sign is
9671:Core/Src/bno055.c ****          * available in the page zero*/
9672:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 20845              		.loc 1 9672 9 is_stmt 1 view .LVU5723
 20846              		.loc 1 9672 21 is_stmt 0 view .LVU5724
 20847 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20848              		.loc 1 9672 12 view .LVU5725
 20849 0014 9BB9     		cbnz	r3, .L1495
 20850              	.LVL2561:
 20851              	.L1490:
9673:Core/Src/bno055.c ****         {
9674:Core/Src/bno055.c ****             /* Write the page zero*/
9675:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9676:Core/Src/bno055.c ****         }
9677:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 20852              		.loc 1 9677 53 discriminator 1 view .LVU5726
 20853 0016 104B     		ldr	r3, .L1496
 20854 0018 1B68     		ldr	r3, [r3]
 20855 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20856              		.loc 1 9677 41 discriminator 1 view .LVU5727
 20857 001c C3B9     		cbnz	r3, .L1493
 20858              	.L1491:
9678:Core/Src/bno055.c ****         {
9679:Core/Src/bno055.c ****             /* Read the value of z-axis remap sign*/
9680:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20859              		.loc 1 9680 13 is_stmt 1 view .LVU5728
 20860              		.loc 1 9680 32 is_stmt 0 view .LVU5729
 20861 001e 0E4B     		ldr	r3, .L1496
 20862 0020 1868     		ldr	r0, [r3]
 20863 0022 0569     		ldr	r5, [r0, #16]
 20864              		.loc 1 9680 24 view .LVU5730
 20865 0024 0123     		movs	r3, #1
 20866 0026 0DF10702 		add	r2, sp, #7
 20867 002a 4221     		movs	r1, #66
 20868 002c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 587


 20869 002e A847     		blx	r5
 20870              	.LVL2562:
9681:Core/Src/bno055.c ****                                                       BNO055_REMAP_Z_SIGN_REG,
9682:Core/Src/bno055.c ****                                                       &data_u8r,
9683:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
9684:Core/Src/bno055.c ****             *remap_z_sign_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN);
 20871              		.loc 1 9684 13 is_stmt 1 view .LVU5731
 20872              		.loc 1 9684 32 is_stmt 0 view .LVU5732
 20873 0030 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 20874 0034 03F00103 		and	r3, r3, #1
 20875              		.loc 1 9684 30 view .LVU5733
 20876 0038 2370     		strb	r3, [r4]
 20877              	.LVL2563:
 20878              	.L1489:
9685:Core/Src/bno055.c ****         }
9686:Core/Src/bno055.c ****         else
9687:Core/Src/bno055.c ****         {
9688:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9689:Core/Src/bno055.c ****         }
9690:Core/Src/bno055.c ****     }
9691:Core/Src/bno055.c **** 
9692:Core/Src/bno055.c ****     return com_rslt;
9693:Core/Src/bno055.c **** }
 20879              		.loc 1 9693 1 view .LVU5734
 20880 003a 03B0     		add	sp, sp, #12
 20881              	.LCFI655:
 20882              		.cfi_remember_state
 20883              		.cfi_def_cfa_offset 12
 20884              		@ sp needed
 20885 003c 30BD     		pop	{r4, r5, pc}
 20886              	.LVL2564:
 20887              	.L1495:
 20888              	.LCFI656:
 20889              		.cfi_restore_state
9675:Core/Src/bno055.c ****         }
 20890              		.loc 1 9675 13 is_stmt 1 view .LVU5735
9675:Core/Src/bno055.c ****         }
 20891              		.loc 1 9675 23 is_stmt 0 view .LVU5736
 20892 003e 0020     		movs	r0, #0
 20893              	.LVL2565:
9675:Core/Src/bno055.c ****         }
 20894              		.loc 1 9675 23 view .LVU5737
 20895 0040 FFF7FEFF 		bl	bno055_write_page_id
 20896              	.LVL2566:
9677:Core/Src/bno055.c ****         {
 20897              		.loc 1 9677 9 is_stmt 1 view .LVU5738
9677:Core/Src/bno055.c ****         {
 20898              		.loc 1 9677 12 is_stmt 0 view .LVU5739
 20899 0044 0028     		cmp	r0, #0
 20900 0046 EAD0     		beq	.L1491
 20901 0048 E5E7     		b	.L1490
 20902              	.LVL2567:
 20903              	.L1492:
9666:Core/Src/bno055.c ****     }
 20904              		.loc 1 9666 16 view .LVU5740
 20905 004a 6FF07E00 		mvn	r0, #126
 20906              	.LVL2568:
ARM GAS  /tmp/ccO72alg.s 			page 588


9666:Core/Src/bno055.c ****     }
 20907              		.loc 1 9666 16 view .LVU5741
 20908 004e F4E7     		b	.L1489
 20909              	.LVL2569:
 20910              	.L1493:
9688:Core/Src/bno055.c ****         }
 20911              		.loc 1 9688 22 view .LVU5742
 20912 0050 4FF0FF30 		mov	r0, #-1
 20913 0054 F1E7     		b	.L1489
 20914              	.L1497:
 20915 0056 00BF     		.align	2
 20916              	.L1496:
 20917 0058 00000000 		.word	.LANCHOR0
 20918              		.cfi_endproc
 20919              	.LFE165:
 20921              		.section	.text.bno055_set_remap_z_sign,"ax",%progbits
 20922              		.align	1
 20923              		.global	bno055_set_remap_z_sign
 20924              		.syntax unified
 20925              		.thumb
 20926              		.thumb_func
 20928              	bno055_set_remap_z_sign:
 20929              	.LVL2570:
 20930              	.LFB166:
9694:Core/Src/bno055.c **** 
9695:Core/Src/bno055.c **** /*!
9696:Core/Src/bno055.c ****  *  @brief This API used to write the z-axis remap
9697:Core/Src/bno055.c ****  *  sign from register from 0x42 bit 0
9698:Core/Src/bno055.c ****  *
9699:Core/Src/bno055.c ****  *  @param remap_z_sign_u8 : The value of z-axis remap sign
9700:Core/Src/bno055.c ****  *
9701:Core/Src/bno055.c ****  *    remap_z_sign_u8  |   result
9702:Core/Src/bno055.c ****  *   ------------------- |--------------------
9703:Core/Src/bno055.c ****  *      0X00             | BNO055_REMAP_AXIS_POSITIVE
9704:Core/Src/bno055.c ****  *      0X01             | BNO055_REMAP_AXIS_NEGATIVE
9705:Core/Src/bno055.c ****  *
9706:Core/Src/bno055.c ****  *  @return results of bus communication function
9707:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9708:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9709:Core/Src/bno055.c ****  *
9710:Core/Src/bno055.c ****  */
9711:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_remap_z_sign(u8 remap_z_sign_u8)
9712:Core/Src/bno055.c **** {
 20931              		.loc 1 9712 1 is_stmt 1 view -0
 20932              		.cfi_startproc
 20933              		@ args = 0, pretend = 0, frame = 8
 20934              		@ frame_needed = 0, uses_anonymous_args = 0
 20935              		.loc 1 9712 1 is_stmt 0 view .LVU5744
 20936 0000 30B5     		push	{r4, r5, lr}
 20937              	.LCFI657:
 20938              		.cfi_def_cfa_offset 12
 20939              		.cfi_offset 4, -12
 20940              		.cfi_offset 5, -8
 20941              		.cfi_offset 14, -4
 20942 0002 83B0     		sub	sp, sp, #12
 20943              	.LCFI658:
 20944              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccO72alg.s 			page 589


9713:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 20945              		.loc 1 9713 5 is_stmt 1 view .LVU5745
 20946              	.LVL2571:
9714:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 20947              		.loc 1 9714 5 view .LVU5746
 20948              		.loc 1 9714 8 is_stmt 0 view .LVU5747
 20949 0004 0023     		movs	r3, #0
 20950 0006 8DF80730 		strb	r3, [sp, #7]
9715:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 20951              		.loc 1 9715 5 is_stmt 1 view .LVU5748
 20952              		.loc 1 9715 8 is_stmt 0 view .LVU5749
 20953 000a 8DF80630 		strb	r3, [sp, #6]
9716:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 20954              		.loc 1 9716 5 is_stmt 1 view .LVU5750
 20955              	.LVL2572:
9717:Core/Src/bno055.c **** 
9718:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9719:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 20956              		.loc 1 9719 5 view .LVU5751
 20957              		.loc 1 9719 18 is_stmt 0 view .LVU5752
 20958 000e 254B     		ldr	r3, .L1508
 20959 0010 1B68     		ldr	r3, [r3]
 20960              		.loc 1 9719 8 view .LVU5753
 20961 0012 002B     		cmp	r3, #0
 20962 0014 43D0     		beq	.L1502
 20963 0016 0546     		mov	r5, r0
9720:Core/Src/bno055.c ****     {
9721:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9722:Core/Src/bno055.c ****     }
9723:Core/Src/bno055.c ****     else
9724:Core/Src/bno055.c ****     {
9725:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9726:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9727:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9728:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 20964              		.loc 1 9728 9 is_stmt 1 view .LVU5754
 20965              		.loc 1 9728 19 is_stmt 0 view .LVU5755
 20966 0018 0DF10600 		add	r0, sp, #6
 20967              	.LVL2573:
 20968              		.loc 1 9728 19 view .LVU5756
 20969 001c FFF7FEFF 		bl	bno055_get_operation_mode
 20970              	.LVL2574:
9729:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 20971              		.loc 1 9729 9 is_stmt 1 view .LVU5757
 20972              		.loc 1 9729 12 is_stmt 0 view .LVU5758
 20973 0020 0446     		mov	r4, r0
 20974 0022 58BB     		cbnz	r0, .L1503
9730:Core/Src/bno055.c ****         {
9731:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 20975              		.loc 1 9731 13 is_stmt 1 view .LVU5759
 20976              		.loc 1 9731 32 is_stmt 0 view .LVU5760
 20977 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 20978              		.loc 1 9731 16 view .LVU5761
 20979 0028 13BB     		cbnz	r3, .L1506
 20980              	.LVL2575:
 20981              	.L1501:
9732:Core/Src/bno055.c ****             {
ARM GAS  /tmp/ccO72alg.s 			page 590


9733:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9734:Core/Src/bno055.c ****             }
9735:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 20982              		.loc 1 9735 13 is_stmt 1 view .LVU5762
 20983              		.loc 1 9735 16 is_stmt 0 view .LVU5763
 20984 002a 7CBB     		cbnz	r4, .L1504
9736:Core/Src/bno055.c ****             {
9737:Core/Src/bno055.c ****                 /* Write the value of z-axis remap sign*/
9738:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 20985              		.loc 1 9738 17 is_stmt 1 view .LVU5764
 20986              		.loc 1 9738 36 is_stmt 0 view .LVU5765
 20987 002c 1D4B     		ldr	r3, .L1508
 20988 002e 1868     		ldr	r0, [r3]
 20989 0030 0469     		ldr	r4, [r0, #16]
 20990              	.LVL2576:
 20991              		.loc 1 9738 28 view .LVU5766
 20992 0032 0123     		movs	r3, #1
 20993 0034 0DF10702 		add	r2, sp, #7
 20994 0038 4221     		movs	r1, #66
 20995 003a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 20996 003c A047     		blx	r4
 20997              	.LVL2577:
9739:Core/Src/bno055.c ****                                                           BNO055_REMAP_Z_SIGN_REG,
9740:Core/Src/bno055.c ****                                                           &data_u8r,
9741:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
9742:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 20998              		.loc 1 9742 17 is_stmt 1 view .LVU5767
 20999              		.loc 1 9742 20 is_stmt 0 view .LVU5768
 21000 003e 0446     		mov	r4, r0
 21001 0040 F0B9     		cbnz	r0, .L1500
9743:Core/Src/bno055.c ****                 {
9744:Core/Src/bno055.c ****                     data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_REMAP_Z_SIGN, remap_z_sign_u8);
 21002              		.loc 1 9744 21 is_stmt 1 view .LVU5769
 21003              		.loc 1 9744 32 is_stmt 0 view .LVU5770
 21004 0042 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 21005              	.LVL2578:
 21006              		.loc 1 9744 32 view .LVU5771
 21007 0046 20F00100 		bic	r0, r0, #1
 21008 004a 43B2     		sxtb	r3, r0
 21009 004c 05F00100 		and	r0, r5, #1
 21010 0050 1843     		orrs	r0, r0, r3
 21011              		.loc 1 9744 30 view .LVU5772
 21012 0052 8DF80700 		strb	r0, [sp, #7]
9745:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21013              		.loc 1 9745 21 is_stmt 1 view .LVU5773
 21014              		.loc 1 9745 41 is_stmt 0 view .LVU5774
 21015 0056 134B     		ldr	r3, .L1508
 21016 0058 1868     		ldr	r0, [r3]
 21017 005a C568     		ldr	r5, [r0, #12]
 21018              		.loc 1 9745 33 view .LVU5775
 21019 005c 0123     		movs	r3, #1
 21020 005e 0DF10702 		add	r2, sp, #7
 21021 0062 4221     		movs	r1, #66
 21022 0064 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21023 0066 A847     		blx	r5
 21024              	.LVL2579:
 21025              		.loc 1 9745 30 view .LVU5776
ARM GAS  /tmp/ccO72alg.s 			page 591


 21026 0068 54FA80F4 		uxtab	r4, r4, r0
 21027 006c 64B2     		sxtb	r4, r4
 21028              	.LVL2580:
 21029              		.loc 1 9745 30 view .LVU5777
 21030 006e 07E0     		b	.L1500
 21031              	.LVL2581:
 21032              	.L1506:
9733:Core/Src/bno055.c ****             }
 21033              		.loc 1 9733 17 is_stmt 1 view .LVU5778
9733:Core/Src/bno055.c ****             }
 21034              		.loc 1 9733 28 is_stmt 0 view .LVU5779
 21035 0070 FFF7FEFF 		bl	bno055_set_operation_mode
 21036              	.LVL2582:
9733:Core/Src/bno055.c ****             }
 21037              		.loc 1 9733 25 view .LVU5780
 21038 0074 54FA80F4 		uxtab	r4, r4, r0
 21039 0078 64B2     		sxtb	r4, r4
 21040              	.LVL2583:
9733:Core/Src/bno055.c ****             }
 21041              		.loc 1 9733 25 view .LVU5781
 21042 007a D6E7     		b	.L1501
 21043              	.LVL2584:
 21044              	.L1503:
9746:Core/Src/bno055.c ****                                                                 BNO055_REMAP_Z_SIGN_REG,
9747:Core/Src/bno055.c ****                                                                 &data_u8r,
9748:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
9749:Core/Src/bno055.c ****                 }
9750:Core/Src/bno055.c ****             }
9751:Core/Src/bno055.c ****             else
9752:Core/Src/bno055.c ****             {
9753:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9754:Core/Src/bno055.c ****             }
9755:Core/Src/bno055.c ****         }
9756:Core/Src/bno055.c ****         else
9757:Core/Src/bno055.c ****         {
9758:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 21045              		.loc 1 9758 22 view .LVU5782
 21046 007c 4FF0FF34 		mov	r4, #-1
 21047              	.LVL2585:
 21048              	.L1500:
9759:Core/Src/bno055.c ****         }
9760:Core/Src/bno055.c ****     }
9761:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21049              		.loc 1 9761 5 is_stmt 1 view .LVU5783
 21050              		.loc 1 9761 24 is_stmt 0 view .LVU5784
 21051 0080 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 21052              		.loc 1 9761 8 view .LVU5785
 21053 0084 28B9     		cbnz	r0, .L1507
 21054              	.LVL2586:
 21055              	.L1499:
9762:Core/Src/bno055.c ****     {
9763:Core/Src/bno055.c ****         /* set the operation mode
9764:Core/Src/bno055.c ****          * of previous operation mode*/
9765:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
9766:Core/Src/bno055.c ****     }
9767:Core/Src/bno055.c **** 
9768:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccO72alg.s 			page 592


9769:Core/Src/bno055.c **** }
 21056              		.loc 1 9769 1 view .LVU5786
 21057 0086 2046     		mov	r0, r4
 21058 0088 03B0     		add	sp, sp, #12
 21059              	.LCFI659:
 21060              		.cfi_remember_state
 21061              		.cfi_def_cfa_offset 12
 21062              		@ sp needed
 21063 008a 30BD     		pop	{r4, r5, pc}
 21064              	.LVL2587:
 21065              	.L1504:
 21066              	.LCFI660:
 21067              		.cfi_restore_state
9753:Core/Src/bno055.c ****             }
 21068              		.loc 1 9753 26 view .LVU5787
 21069 008c 4FF0FF34 		mov	r4, #-1
 21070              	.LVL2588:
9753:Core/Src/bno055.c ****             }
 21071              		.loc 1 9753 26 view .LVU5788
 21072 0090 F6E7     		b	.L1500
 21073              	.LVL2589:
 21074              	.L1507:
9765:Core/Src/bno055.c ****     }
 21075              		.loc 1 9765 9 is_stmt 1 view .LVU5789
9765:Core/Src/bno055.c ****     }
 21076              		.loc 1 9765 21 is_stmt 0 view .LVU5790
 21077 0092 FFF7FEFF 		bl	bno055_set_operation_mode
 21078              	.LVL2590:
9765:Core/Src/bno055.c ****     }
 21079              		.loc 1 9765 18 view .LVU5791
 21080 0096 54FA80F4 		uxtab	r4, r4, r0
 21081              	.LVL2591:
9765:Core/Src/bno055.c ****     }
 21082              		.loc 1 9765 18 view .LVU5792
 21083 009a 64B2     		sxtb	r4, r4
 21084              	.LVL2592:
9765:Core/Src/bno055.c ****     }
 21085              		.loc 1 9765 18 view .LVU5793
 21086 009c F3E7     		b	.L1499
 21087              	.LVL2593:
 21088              	.L1502:
9721:Core/Src/bno055.c ****     }
 21089              		.loc 1 9721 16 view .LVU5794
 21090 009e 6FF07E04 		mvn	r4, #126
 21091 00a2 F0E7     		b	.L1499
 21092              	.L1509:
 21093              		.align	2
 21094              	.L1508:
 21095 00a4 00000000 		.word	.LANCHOR0
 21096              		.cfi_endproc
 21097              	.LFE166:
 21099              		.section	.text.bno055_read_sic_matrix,"ax",%progbits
 21100              		.align	1
 21101              		.global	bno055_read_sic_matrix
 21102              		.syntax unified
 21103              		.thumb
 21104              		.thumb_func
ARM GAS  /tmp/ccO72alg.s 			page 593


 21106              	bno055_read_sic_matrix:
 21107              	.LVL2594:
 21108              	.LFB167:
9770:Core/Src/bno055.c **** 
9771:Core/Src/bno055.c **** /*!
9772:Core/Src/bno055.c ****  *  @brief This API is used to read soft iron calibration matrix
9773:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9774:Core/Src/bno055.c ****  *
9775:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9776:Core/Src/bno055.c ****  *
9777:Core/Src/bno055.c ****  *  sic_matrix         |           result
9778:Core/Src/bno055.c ****  * --------------------|----------------------------------
9779:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9780:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9781:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9782:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9783:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9784:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9785:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9786:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9787:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9788:Core/Src/bno055.c ****  *
9789:Core/Src/bno055.c ****  *
9790:Core/Src/bno055.c ****  *  @return results of bus communication function
9791:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9792:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9793:Core/Src/bno055.c ****  *
9794:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9795:Core/Src/bno055.c ****  */
9796:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9797:Core/Src/bno055.c **** {
 21109              		.loc 1 9797 1 is_stmt 1 view -0
 21110              		.cfi_startproc
 21111              		@ args = 0, pretend = 0, frame = 24
 21112              		@ frame_needed = 0, uses_anonymous_args = 0
 21113              		.loc 1 9797 1 is_stmt 0 view .LVU5796
 21114 0000 30B5     		push	{r4, r5, lr}
 21115              	.LCFI661:
 21116              		.cfi_def_cfa_offset 12
 21117              		.cfi_offset 4, -12
 21118              		.cfi_offset 5, -8
 21119              		.cfi_offset 14, -4
 21120 0002 87B0     		sub	sp, sp, #28
 21121              	.LCFI662:
 21122              		.cfi_def_cfa_offset 40
 21123 0004 0446     		mov	r4, r0
9798:Core/Src/bno055.c ****     /* Variable used to return value of
9799:Core/Src/bno055.c ****      * communication routine*/
9800:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21124              		.loc 1 9800 5 is_stmt 1 view .LVU5797
 21125              	.LVL2595:
9801:Core/Src/bno055.c **** 
9802:Core/Src/bno055.c ****     /* Array holding the soft iron calibration matrix values
9803:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] - sic_0->LSB
9804:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] - sic_0->MSB
9805:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] - sic_1->LSB
9806:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] - sic_1->MSB
ARM GAS  /tmp/ccO72alg.s 			page 594


9807:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] - sic_2->LSB
9808:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] - sic_2->MSB
9809:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] - sic_3->LSB
9810:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] - sic_3->MSB
9811:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] - sic_4->LSB
9812:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] - sic_4->MSB
9813:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] - sic_5->LSB
9814:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] - sic_5->MSB
9815:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] - sic_6->LSB
9816:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] - sic_6->MSB
9817:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] - sic_7->LSB
9818:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] - sic_7->MSB
9819:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] - sic_8->LSB
9820:Core/Src/bno055.c ****      * data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] - sic_8->MSB
9821:Core/Src/bno055.c ****      */
9822:Core/Src/bno055.c ****     u8 data_u8[BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE] = {
 21126              		.loc 1 9822 5 view .LVU5798
 21127              		.loc 1 9822 8 is_stmt 0 view .LVU5799
 21128 0006 0DF1040C 		add	ip, sp, #4
 21129 000a 364D     		ldr	r5, .L1519
 21130 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21131              	.LVL2596:
 21132              		.loc 1 9822 8 view .LVU5800
 21133 000e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 21134 0012 2B68     		ldr	r3, [r5]
 21135 0014 ACF80030 		strh	r3, [ip]	@ movhi
9823:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9824:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9825:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
9826:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE
9827:Core/Src/bno055.c ****     };
9828:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21136              		.loc 1 9828 5 is_stmt 1 view .LVU5801
 21137              	.LVL2597:
9829:Core/Src/bno055.c **** 
9830:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9831:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21138              		.loc 1 9831 5 view .LVU5802
 21139              		.loc 1 9831 18 is_stmt 0 view .LVU5803
 21140 0018 334B     		ldr	r3, .L1519+4
 21141 001a 1B68     		ldr	r3, [r3]
 21142              		.loc 1 9831 8 view .LVU5804
 21143 001c 002B     		cmp	r3, #0
 21144 001e 58D0     		beq	.L1514
9832:Core/Src/bno055.c ****     {
9833:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9834:Core/Src/bno055.c ****     }
9835:Core/Src/bno055.c ****     else
9836:Core/Src/bno055.c ****     {
9837:Core/Src/bno055.c ****         /*condition check for page, soft iron calibration matrix is
9838:Core/Src/bno055.c ****          * available in the page zero*/
9839:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 21145              		.loc 1 9839 9 is_stmt 1 view .LVU5805
 21146              		.loc 1 9839 21 is_stmt 0 view .LVU5806
 21147 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21148              		.loc 1 9839 12 view .LVU5807
 21149 0022 002B     		cmp	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 595


 21150 0024 4FD1     		bne	.L1518
 21151              	.LVL2598:
 21152              	.L1512:
9840:Core/Src/bno055.c ****         {
9841:Core/Src/bno055.c ****             /* Write the page zero*/
9842:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
9843:Core/Src/bno055.c ****         }
9844:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 21153              		.loc 1 9844 53 discriminator 1 view .LVU5808
 21154 0026 304B     		ldr	r3, .L1519+4
 21155 0028 1B68     		ldr	r3, [r3]
 21156 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21157              		.loc 1 9844 41 discriminator 1 view .LVU5809
 21158 002c 002B     		cmp	r3, #0
 21159 002e 53D1     		bne	.L1515
 21160              	.L1513:
9845:Core/Src/bno055.c ****         {
9846:Core/Src/bno055.c ****             /* Read soft iron calibration matrix value
9847:Core/Src/bno055.c ****              * it is eighteen bytes of data */
9848:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21161              		.loc 1 9848 13 is_stmt 1 view .LVU5810
 21162              		.loc 1 9848 32 is_stmt 0 view .LVU5811
 21163 0030 2D4B     		ldr	r3, .L1519+4
 21164 0032 1868     		ldr	r0, [r3]
 21165 0034 0569     		ldr	r5, [r0, #16]
 21166              		.loc 1 9848 24 view .LVU5812
 21167 0036 1223     		movs	r3, #18
 21168 0038 01AA     		add	r2, sp, #4
 21169 003a 4321     		movs	r1, #67
 21170 003c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21171 003e A847     		blx	r5
 21172              	.LVL2599:
9849:Core/Src/bno055.c ****                                                       BNO055_SIC_MATRIX_0_LSB_REG,
9850:Core/Src/bno055.c ****                                                       data_u8,
9851:Core/Src/bno055.c ****                                                       BNO055_SOFT_IRON_CALIBRATION_MATRIX_SIZE);
9852:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 21173              		.loc 1 9852 13 is_stmt 1 view .LVU5813
 21174              		.loc 1 9852 16 is_stmt 0 view .LVU5814
 21175 0040 0028     		cmp	r0, #0
 21176 0042 4CD1     		bne	.L1516
9853:Core/Src/bno055.c ****             {
9854:Core/Src/bno055.c ****                 /*soft iron calibration matrix zero*/
9855:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21177              		.loc 1 9855 17 is_stmt 1 view .LVU5815
9856:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_LSB
9857:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_0_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21178              		.loc 1 9857 17 view .LVU5816
9858:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_0_MSB
9859:Core/Src/bno055.c ****                 sic_matrix->sic_0 =
 21179              		.loc 1 9859 17 view .LVU5817
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21180              		.loc 1 9860 34 is_stmt 0 view .LVU5818
 21181 0044 9DF90520 		ldrsb	r2, [sp, #5]
9861:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_0_LSB]));
 21182              		.loc 1 9861 35 view .LVU5819
 21183 0048 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
9860:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
ARM GAS  /tmp/ccO72alg.s 			page 596


 21184              		.loc 1 9860 21 view .LVU5820
 21185 004c 43EA0223 		orr	r3, r3, r2, lsl #8
9859:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_0_MSB])) << (BNO055_SHIFT_EIGH
 21186              		.loc 1 9859 35 view .LVU5821
 21187 0050 2380     		strh	r3, [r4]	@ movhi
9862:Core/Src/bno055.c **** 
9863:Core/Src/bno055.c ****                 /*soft iron calibration matrix one*/
9864:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21188              		.loc 1 9864 17 is_stmt 1 view .LVU5822
9865:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_LSB
9866:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_1_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21189              		.loc 1 9866 17 view .LVU5823
9867:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_1_MSB
9868:Core/Src/bno055.c ****                 sic_matrix->sic_1 =
 21190              		.loc 1 9868 17 view .LVU5824
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21191              		.loc 1 9869 34 is_stmt 0 view .LVU5825
 21192 0052 9DF90720 		ldrsb	r2, [sp, #7]
9870:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_1_LSB]));
 21193              		.loc 1 9870 35 view .LVU5826
 21194 0056 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
9869:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21195              		.loc 1 9869 21 view .LVU5827
 21196 005a 43EA0223 		orr	r3, r3, r2, lsl #8
9868:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_1_MSB])) << (BNO055_SHIFT_EIGH
 21197              		.loc 1 9868 35 view .LVU5828
 21198 005e 6380     		strh	r3, [r4, #2]	@ movhi
9871:Core/Src/bno055.c **** 
9872:Core/Src/bno055.c ****                 /*soft iron calibration matrix two*/
9873:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21199              		.loc 1 9873 17 is_stmt 1 view .LVU5829
9874:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_LSB
9875:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_2_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21200              		.loc 1 9875 17 view .LVU5830
9876:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_2_MSB
9877:Core/Src/bno055.c ****                 sic_matrix->sic_2 =
 21201              		.loc 1 9877 17 view .LVU5831
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21202              		.loc 1 9878 34 is_stmt 0 view .LVU5832
 21203 0060 9DF90920 		ldrsb	r2, [sp, #9]
9879:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_2_LSB]));
 21204              		.loc 1 9879 35 view .LVU5833
 21205 0064 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
9878:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21206              		.loc 1 9878 21 view .LVU5834
 21207 0068 43EA0223 		orr	r3, r3, r2, lsl #8
9877:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_2_MSB])) << (BNO055_SHIFT_EIGH
 21208              		.loc 1 9877 35 view .LVU5835
 21209 006c A380     		strh	r3, [r4, #4]	@ movhi
9880:Core/Src/bno055.c **** 
9881:Core/Src/bno055.c ****                 /*soft iron calibration matrix three*/
9882:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21210              		.loc 1 9882 17 is_stmt 1 view .LVU5836
9883:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
9884:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_3_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21211              		.loc 1 9884 17 view .LVU5837
9885:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_3_LSB
ARM GAS  /tmp/ccO72alg.s 			page 597


9886:Core/Src/bno055.c ****                 sic_matrix->sic_3 =
 21212              		.loc 1 9886 17 view .LVU5838
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21213              		.loc 1 9887 34 is_stmt 0 view .LVU5839
 21214 006e 9DF90B20 		ldrsb	r2, [sp, #11]
9888:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_3_LSB]));
 21215              		.loc 1 9888 35 view .LVU5840
 21216 0072 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
9887:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21217              		.loc 1 9887 21 view .LVU5841
 21218 0076 43EA0223 		orr	r3, r3, r2, lsl #8
9886:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_3_MSB])) << (BNO055_SHIFT_EIGH
 21219              		.loc 1 9886 35 view .LVU5842
 21220 007a E380     		strh	r3, [r4, #6]	@ movhi
9889:Core/Src/bno055.c **** 
9890:Core/Src/bno055.c ****                 /*soft iron calibration matrix four*/
9891:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21221              		.loc 1 9891 17 is_stmt 1 view .LVU5843
9892:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9893:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_4_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21222              		.loc 1 9893 17 view .LVU5844
9894:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_4_LSB
9895:Core/Src/bno055.c ****                 sic_matrix->sic_4 =
 21223              		.loc 1 9895 17 view .LVU5845
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21224              		.loc 1 9896 34 is_stmt 0 view .LVU5846
 21225 007c 9DF90D20 		ldrsb	r2, [sp, #13]
9897:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_4_LSB]));
 21226              		.loc 1 9897 35 view .LVU5847
 21227 0080 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
9896:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21228              		.loc 1 9896 21 view .LVU5848
 21229 0084 43EA0223 		orr	r3, r3, r2, lsl #8
9895:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_4_MSB])) << (BNO055_SHIFT_EIGH
 21230              		.loc 1 9895 35 view .LVU5849
 21231 0088 2381     		strh	r3, [r4, #8]	@ movhi
9898:Core/Src/bno055.c **** 
9899:Core/Src/bno055.c ****                 /*soft iron calibration matrix five*/
9900:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21232              		.loc 1 9900 17 is_stmt 1 view .LVU5850
9901:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9902:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_5_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21233              		.loc 1 9902 17 view .LVU5851
9903:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_5_LSB
9904:Core/Src/bno055.c ****                 sic_matrix->sic_5 =
 21234              		.loc 1 9904 17 view .LVU5852
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21235              		.loc 1 9905 34 is_stmt 0 view .LVU5853
 21236 008a 9DF90F20 		ldrsb	r2, [sp, #15]
9906:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_5_LSB]));
 21237              		.loc 1 9906 35 view .LVU5854
 21238 008e 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
9905:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21239              		.loc 1 9905 21 view .LVU5855
 21240 0092 43EA0223 		orr	r3, r3, r2, lsl #8
9904:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_5_MSB])) << (BNO055_SHIFT_EIGH
 21241              		.loc 1 9904 35 view .LVU5856
ARM GAS  /tmp/ccO72alg.s 			page 598


 21242 0096 6381     		strh	r3, [r4, #10]	@ movhi
9907:Core/Src/bno055.c **** 
9908:Core/Src/bno055.c ****                 /*soft iron calibration matrix six*/
9909:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21243              		.loc 1 9909 17 is_stmt 1 view .LVU5857
9910:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9911:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_6_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21244              		.loc 1 9911 17 view .LVU5858
9912:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_6_LSB
9913:Core/Src/bno055.c ****                 sic_matrix->sic_6 =
 21245              		.loc 1 9913 17 view .LVU5859
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21246              		.loc 1 9914 34 is_stmt 0 view .LVU5860
 21247 0098 9DF91120 		ldrsb	r2, [sp, #17]
9915:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_6_LSB]));
 21248              		.loc 1 9915 35 view .LVU5861
 21249 009c 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
9914:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21250              		.loc 1 9914 21 view .LVU5862
 21251 00a0 43EA0223 		orr	r3, r3, r2, lsl #8
9913:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_6_MSB])) << (BNO055_SHIFT_EIGH
 21252              		.loc 1 9913 35 view .LVU5863
 21253 00a4 A381     		strh	r3, [r4, #12]	@ movhi
9916:Core/Src/bno055.c **** 
9917:Core/Src/bno055.c ****                 /*soft iron calibration matrix seven*/
9918:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21254              		.loc 1 9918 17 is_stmt 1 view .LVU5864
9919:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9920:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_7_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21255              		.loc 1 9920 17 view .LVU5865
9921:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_7_LSB
9922:Core/Src/bno055.c ****                 sic_matrix->sic_7 =
 21256              		.loc 1 9922 17 view .LVU5866
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21257              		.loc 1 9923 34 is_stmt 0 view .LVU5867
 21258 00a6 9DF91320 		ldrsb	r2, [sp, #19]
9924:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_7_LSB]));
 21259              		.loc 1 9924 35 view .LVU5868
 21260 00aa 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
9923:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21261              		.loc 1 9923 21 view .LVU5869
 21262 00ae 43EA0223 		orr	r3, r3, r2, lsl #8
9922:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_7_MSB])) << (BNO055_SHIFT_EIGH
 21263              		.loc 1 9922 35 view .LVU5870
 21264 00b2 E381     		strh	r3, [r4, #14]	@ movhi
9925:Core/Src/bno055.c **** 
9926:Core/Src/bno055.c ****                 /*soft iron calibration matrix eight*/
9927:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21265              		.loc 1 9927 17 is_stmt 1 view .LVU5871
9928:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9929:Core/Src/bno055.c ****                 data_u8[BNO055_SOFT_IRON_CALIB_8_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SOFT_IRO
 21266              		.loc 1 9929 17 view .LVU5872
9930:Core/Src/bno055.c ****                                                                             BNO055_SIC_MATRIX_8_LSB
9931:Core/Src/bno055.c ****                 sic_matrix->sic_8 =
 21267              		.loc 1 9931 17 view .LVU5873
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21268              		.loc 1 9932 34 is_stmt 0 view .LVU5874
ARM GAS  /tmp/ccO72alg.s 			page 599


 21269 00b4 9DF91520 		ldrsb	r2, [sp, #21]
9933:Core/Src/bno055.c ****                           (data_u8[BNO055_SOFT_IRON_CALIB_8_LSB]));
 21270              		.loc 1 9933 35 view .LVU5875
 21271 00b8 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
9932:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21272              		.loc 1 9932 21 view .LVU5876
 21273 00bc 43EA0223 		orr	r3, r3, r2, lsl #8
9931:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SOFT_IRON_CALIB_8_MSB])) << (BNO055_SHIFT_EIGH
 21274              		.loc 1 9931 35 view .LVU5877
 21275 00c0 2382     		strh	r3, [r4, #16]	@ movhi
 21276              	.LVL2600:
 21277              	.L1511:
9934:Core/Src/bno055.c ****             }
9935:Core/Src/bno055.c ****             else
9936:Core/Src/bno055.c ****             {
9937:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
9938:Core/Src/bno055.c ****             }
9939:Core/Src/bno055.c ****         }
9940:Core/Src/bno055.c ****         else
9941:Core/Src/bno055.c ****         {
9942:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
9943:Core/Src/bno055.c ****         }
9944:Core/Src/bno055.c ****     }
9945:Core/Src/bno055.c **** 
9946:Core/Src/bno055.c ****     return com_rslt;
9947:Core/Src/bno055.c **** }
 21278              		.loc 1 9947 1 view .LVU5878
 21279 00c2 07B0     		add	sp, sp, #28
 21280              	.LCFI663:
 21281              		.cfi_remember_state
 21282              		.cfi_def_cfa_offset 12
 21283              		@ sp needed
 21284 00c4 30BD     		pop	{r4, r5, pc}
 21285              	.LVL2601:
 21286              	.L1518:
 21287              	.LCFI664:
 21288              		.cfi_restore_state
9842:Core/Src/bno055.c ****         }
 21289              		.loc 1 9842 13 is_stmt 1 view .LVU5879
9842:Core/Src/bno055.c ****         }
 21290              		.loc 1 9842 23 is_stmt 0 view .LVU5880
 21291 00c6 0020     		movs	r0, #0
 21292 00c8 FFF7FEFF 		bl	bno055_write_page_id
 21293              	.LVL2602:
9844:Core/Src/bno055.c ****         {
 21294              		.loc 1 9844 9 is_stmt 1 view .LVU5881
9844:Core/Src/bno055.c ****         {
 21295              		.loc 1 9844 12 is_stmt 0 view .LVU5882
 21296 00cc 0028     		cmp	r0, #0
 21297 00ce AFD0     		beq	.L1513
 21298 00d0 A9E7     		b	.L1512
 21299              	.LVL2603:
 21300              	.L1514:
9833:Core/Src/bno055.c ****     }
 21301              		.loc 1 9833 16 view .LVU5883
 21302 00d2 6FF07E00 		mvn	r0, #126
 21303 00d6 F4E7     		b	.L1511
ARM GAS  /tmp/ccO72alg.s 			page 600


 21304              	.LVL2604:
 21305              	.L1515:
9942:Core/Src/bno055.c ****         }
 21306              		.loc 1 9942 22 view .LVU5884
 21307 00d8 4FF0FF30 		mov	r0, #-1
 21308 00dc F1E7     		b	.L1511
 21309              	.LVL2605:
 21310              	.L1516:
9937:Core/Src/bno055.c ****             }
 21311              		.loc 1 9937 26 view .LVU5885
 21312 00de 4FF0FF30 		mov	r0, #-1
 21313              	.LVL2606:
9937:Core/Src/bno055.c ****             }
 21314              		.loc 1 9937 26 view .LVU5886
 21315 00e2 EEE7     		b	.L1511
 21316              	.L1520:
 21317              		.align	2
 21318              	.L1519:
 21319 00e4 10000000 		.word	.LANCHOR1+16
 21320 00e8 00000000 		.word	.LANCHOR0
 21321              		.cfi_endproc
 21322              	.LFE167:
 21324              		.section	.text.bno055_write_sic_matrix,"ax",%progbits
 21325              		.align	1
 21326              		.global	bno055_write_sic_matrix
 21327              		.syntax unified
 21328              		.thumb
 21329              		.thumb_func
 21331              	bno055_write_sic_matrix:
 21332              	.LVL2607:
 21333              	.LFB168:
9948:Core/Src/bno055.c **** 
9949:Core/Src/bno055.c **** /*!
9950:Core/Src/bno055.c ****  *  @brief This API is used to write soft iron calibration matrix
9951:Core/Src/bno055.c ****  *  from the register 0x43 to 0x53 it is a 18 bytes of data
9952:Core/Src/bno055.c ****  *
9953:Core/Src/bno055.c ****  *  @param sic_matrix : The value of soft iron calibration matrix
9954:Core/Src/bno055.c ****  *
9955:Core/Src/bno055.c ****  *  sic_matrix         |           result
9956:Core/Src/bno055.c ****  * --------------------|----------------------------------
9957:Core/Src/bno055.c ****  *       sic_0         | soft iron calibration matrix zero
9958:Core/Src/bno055.c ****  *       sic_1         | soft iron calibration matrix one
9959:Core/Src/bno055.c ****  *       sic_2         | soft iron calibration matrix two
9960:Core/Src/bno055.c ****  *       sic_3         | soft iron calibration matrix three
9961:Core/Src/bno055.c ****  *       sic_4         | soft iron calibration matrix four
9962:Core/Src/bno055.c ****  *       sic_5         | soft iron calibration matrix five
9963:Core/Src/bno055.c ****  *       sic_6         | soft iron calibration matrix six
9964:Core/Src/bno055.c ****  *       sic_7         | soft iron calibration matrix seven
9965:Core/Src/bno055.c ****  *       sic_8         | soft iron calibration matrix eight
9966:Core/Src/bno055.c ****  *
9967:Core/Src/bno055.c ****  *
9968:Core/Src/bno055.c ****  *  @return results of bus communication function
9969:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
9970:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
9971:Core/Src/bno055.c ****  *
9972:Core/Src/bno055.c ****  *  @note : Each soft iron calibration matrix range from -32768 to +32767
9973:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccO72alg.s 			page 601


9974:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_sic_matrix(struct bno055_sic_matrix_t  *sic_matrix)
9975:Core/Src/bno055.c **** {
 21334              		.loc 1 9975 1 is_stmt 1 view -0
 21335              		.cfi_startproc
 21336              		@ args = 0, pretend = 0, frame = 8
 21337              		@ frame_needed = 0, uses_anonymous_args = 0
 21338              		.loc 1 9975 1 is_stmt 0 view .LVU5888
 21339 0000 70B5     		push	{r4, r5, r6, lr}
 21340              	.LCFI665:
 21341              		.cfi_def_cfa_offset 16
 21342              		.cfi_offset 4, -16
 21343              		.cfi_offset 5, -12
 21344              		.cfi_offset 6, -8
 21345              		.cfi_offset 14, -4
 21346 0002 82B0     		sub	sp, sp, #8
 21347              	.LCFI666:
 21348              		.cfi_def_cfa_offset 24
9976:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 21349              		.loc 1 9976 5 is_stmt 1 view .LVU5889
 21350              	.LVL2608:
9977:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 21351              		.loc 1 9977 5 view .LVU5890
9978:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 21352              		.loc 1 9978 5 view .LVU5891
 21353              		.loc 1 9978 8 is_stmt 0 view .LVU5892
 21354 0004 0023     		movs	r3, #0
 21355 0006 8DF80730 		strb	r3, [sp, #7]
9979:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 21356              		.loc 1 9979 5 is_stmt 1 view .LVU5893
 21357              		.loc 1 9979 8 is_stmt 0 view .LVU5894
 21358 000a 8DF80630 		strb	r3, [sp, #6]
9980:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 21359              		.loc 1 9980 5 is_stmt 1 view .LVU5895
 21360              	.LVL2609:
9981:Core/Src/bno055.c **** 
9982:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
9983:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 21361              		.loc 1 9983 5 view .LVU5896
 21362              		.loc 1 9983 18 is_stmt 0 view .LVU5897
 21363 000e A74B     		ldr	r3, .L1548
 21364 0010 1B68     		ldr	r3, [r3]
 21365              		.loc 1 9983 8 view .LVU5898
 21366 0012 002B     		cmp	r3, #0
 21367 0014 00F04682 		beq	.L1542
 21368 0018 0546     		mov	r5, r0
9984:Core/Src/bno055.c ****     {
9985:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
9986:Core/Src/bno055.c ****     }
9987:Core/Src/bno055.c ****     else
9988:Core/Src/bno055.c ****     {
9989:Core/Src/bno055.c ****         /* The write operation effective only if the operation
9990:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
9991:Core/Src/bno055.c ****          * current operation mode and set the config mode */
9992:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 21369              		.loc 1 9992 9 is_stmt 1 view .LVU5899
 21370              		.loc 1 9992 19 is_stmt 0 view .LVU5900
 21371 001a 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccO72alg.s 			page 602


 21372              	.LVL2610:
 21373              		.loc 1 9992 19 view .LVU5901
 21374 001e FFF7FEFF 		bl	bno055_get_operation_mode
 21375              	.LVL2611:
9993:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 21376              		.loc 1 9993 9 is_stmt 1 view .LVU5902
 21377              		.loc 1 9993 12 is_stmt 0 view .LVU5903
 21378 0022 0446     		mov	r4, r0
 21379 0024 0028     		cmp	r0, #0
 21380 0026 40F02C82 		bne	.L1543
9994:Core/Src/bno055.c ****         {
9995:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 21381              		.loc 1 9995 13 is_stmt 1 view .LVU5904
 21382              		.loc 1 9995 32 is_stmt 0 view .LVU5905
 21383 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 21384              		.loc 1 9995 16 view .LVU5906
 21385 002e 002B     		cmp	r3, #0
 21386 0030 40F02182 		bne	.L1546
 21387              	.LVL2612:
 21388              	.L1524:
9996:Core/Src/bno055.c ****             {
9997:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
9998:Core/Src/bno055.c ****             }
9999:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 21389              		.loc 1 9999 13 is_stmt 1 view .LVU5907
 21390              		.loc 1 9999 16 is_stmt 0 view .LVU5908
 21391 0034 002C     		cmp	r4, #0
 21392 0036 40F02C82 		bne	.L1544
10000:Core/Src/bno055.c ****             {
10001:Core/Src/bno055.c ****                 /* write soft iron calibration
10002:Core/Src/bno055.c ****                  * matrix zero value*/
10003:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21393              		.loc 1 10003 17 is_stmt 1 view .LVU5909
 21394              		.loc 1 10003 36 is_stmt 0 view .LVU5910
 21395 003a 9C4B     		ldr	r3, .L1548
 21396 003c 1868     		ldr	r0, [r3]
 21397 003e 0469     		ldr	r4, [r0, #16]
 21398              	.LVL2613:
 21399              		.loc 1 10003 28 view .LVU5911
 21400 0040 0123     		movs	r3, #1
 21401 0042 0DF10702 		add	r2, sp, #7
 21402 0046 4321     		movs	r1, #67
 21403 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21404 004a A047     		blx	r4
 21405              	.LVL2614:
10004:Core/Src/bno055.c ****                                                           BNO055_SIC_MATRIX_0_LSB_REG,
10005:Core/Src/bno055.c ****                                                           &data2_u8r,
10006:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10007:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21406              		.loc 1 10007 17 is_stmt 1 view .LVU5912
 21407              		.loc 1 10007 20 is_stmt 0 view .LVU5913
 21408 004c 0446     		mov	r4, r0
 21409 004e 78B9     		cbnz	r0, .L1525
10008:Core/Src/bno055.c ****                 {
10009:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21410              		.loc 1 10009 21 is_stmt 1 view .LVU5914
 21411              		.loc 1 10009 49 is_stmt 0 view .LVU5915
ARM GAS  /tmp/ccO72alg.s 			page 603


 21412 0050 B5F90030 		ldrsh	r3, [r5]
 21413              	.LVL2615:
10010:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_LSB, data1_u8r);
 21414              		.loc 1 10010 21 is_stmt 1 view .LVU5916
 21415              		.loc 1 10010 31 is_stmt 0 view .LVU5917
 21416 0054 8DF80730 		strb	r3, [sp, #7]
10011:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21417              		.loc 1 10011 21 is_stmt 1 view .LVU5918
 21418              		.loc 1 10011 41 is_stmt 0 view .LVU5919
 21419 0058 944B     		ldr	r3, .L1548
 21420              	.LVL2616:
 21421              		.loc 1 10011 41 view .LVU5920
 21422 005a 1868     		ldr	r0, [r3]
 21423              	.LVL2617:
 21424              		.loc 1 10011 41 view .LVU5921
 21425 005c C668     		ldr	r6, [r0, #12]
 21426              		.loc 1 10011 33 view .LVU5922
 21427 005e 0123     		movs	r3, #1
 21428 0060 0DF10702 		add	r2, sp, #7
 21429              	.LVL2618:
 21430              		.loc 1 10011 33 view .LVU5923
 21431 0064 4321     		movs	r1, #67
 21432 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21433 0068 B047     		blx	r6
 21434              	.LVL2619:
 21435              		.loc 1 10011 30 view .LVU5924
 21436 006a 54FA80F4 		uxtab	r4, r4, r0
 21437 006e 64B2     		sxtb	r4, r4
 21438              	.LVL2620:
 21439              	.L1525:
10012:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_LSB_REG,
10013:Core/Src/bno055.c ****                                                                 &data2_u8r,
10014:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10015:Core/Src/bno055.c ****                 }
10016:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21440              		.loc 1 10016 17 is_stmt 1 view .LVU5925
 21441              		.loc 1 10016 37 is_stmt 0 view .LVU5926
 21442 0070 8E4B     		ldr	r3, .L1548
 21443 0072 1868     		ldr	r0, [r3]
 21444 0074 0669     		ldr	r6, [r0, #16]
 21445              		.loc 1 10016 29 view .LVU5927
 21446 0076 0123     		movs	r3, #1
 21447 0078 0DF10702 		add	r2, sp, #7
 21448 007c 4421     		movs	r1, #68
 21449 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21450 0080 B047     		blx	r6
 21451              	.LVL2621:
 21452              		.loc 1 10016 26 view .LVU5928
 21453 0082 54FA80F4 		uxtab	r4, r4, r0
 21454              	.LVL2622:
 21455              		.loc 1 10016 26 view .LVU5929
 21456 0086 E6B2     		uxtb	r6, r4
 21457 0088 64B2     		sxtb	r4, r4
 21458              	.LVL2623:
10017:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_0_MSB_REG,
10018:Core/Src/bno055.c ****                                                            &data2_u8r,
10019:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 604


10020:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21459              		.loc 1 10020 17 is_stmt 1 view .LVU5930
 21460              		.loc 1 10020 20 is_stmt 0 view .LVU5931
 21461 008a 7CB9     		cbnz	r4, .L1526
10021:Core/Src/bno055.c ****                 {
10022:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_0 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21462              		.loc 1 10022 21 is_stmt 1 view .LVU5932
 21463              		.loc 1 10022 34 is_stmt 0 view .LVU5933
 21464 008c 95F90130 		ldrsb	r3, [r5, #1]
 21465              	.LVL2624:
10023:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_0_MSB, data1_u8r);
 21466              		.loc 1 10023 21 is_stmt 1 view .LVU5934
 21467              		.loc 1 10023 31 is_stmt 0 view .LVU5935
 21468 0090 8DF80730 		strb	r3, [sp, #7]
10024:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21469              		.loc 1 10024 21 is_stmt 1 view .LVU5936
 21470              		.loc 1 10024 41 is_stmt 0 view .LVU5937
 21471 0094 854B     		ldr	r3, .L1548
 21472              	.LVL2625:
 21473              		.loc 1 10024 41 view .LVU5938
 21474 0096 1868     		ldr	r0, [r3]
 21475 0098 C468     		ldr	r4, [r0, #12]
 21476              	.LVL2626:
 21477              		.loc 1 10024 33 view .LVU5939
 21478 009a 0123     		movs	r3, #1
 21479 009c 0DF10702 		add	r2, sp, #7
 21480              	.LVL2627:
 21481              		.loc 1 10024 33 view .LVU5940
 21482 00a0 4421     		movs	r1, #68
 21483 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21484 00a4 A047     		blx	r4
 21485              	.LVL2628:
 21486              		.loc 1 10024 30 view .LVU5941
 21487 00a6 56FA80F4 		uxtab	r4, r6, r0
 21488 00aa 64B2     		sxtb	r4, r4
 21489              	.LVL2629:
 21490              	.L1526:
10025:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_0_MSB_REG,
10026:Core/Src/bno055.c ****                                                                 &data2_u8r,
10027:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10028:Core/Src/bno055.c ****                 }
10029:Core/Src/bno055.c **** 
10030:Core/Src/bno055.c ****                 /* write soft iron calibration
10031:Core/Src/bno055.c ****                  * matrix one value*/
10032:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21491              		.loc 1 10032 17 is_stmt 1 view .LVU5942
 21492              		.loc 1 10032 37 is_stmt 0 view .LVU5943
 21493 00ac 7F4B     		ldr	r3, .L1548
 21494 00ae 1868     		ldr	r0, [r3]
 21495 00b0 0669     		ldr	r6, [r0, #16]
 21496              		.loc 1 10032 29 view .LVU5944
 21497 00b2 0123     		movs	r3, #1
 21498 00b4 0DF10702 		add	r2, sp, #7
 21499 00b8 4521     		movs	r1, #69
 21500 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21501 00bc B047     		blx	r6
 21502              	.LVL2630:
ARM GAS  /tmp/ccO72alg.s 			page 605


 21503              		.loc 1 10032 26 view .LVU5945
 21504 00be 54FA80F4 		uxtab	r4, r4, r0
 21505              	.LVL2631:
 21506              		.loc 1 10032 26 view .LVU5946
 21507 00c2 E6B2     		uxtb	r6, r4
 21508 00c4 64B2     		sxtb	r4, r4
 21509              	.LVL2632:
10033:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_LSB_REG,
10034:Core/Src/bno055.c ****                                                            &data2_u8r,
10035:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10036:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21510              		.loc 1 10036 17 is_stmt 1 view .LVU5947
 21511              		.loc 1 10036 20 is_stmt 0 view .LVU5948
 21512 00c6 7CB9     		cbnz	r4, .L1527
10037:Core/Src/bno055.c ****                 {
10038:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21513              		.loc 1 10038 21 is_stmt 1 view .LVU5949
 21514              		.loc 1 10038 49 is_stmt 0 view .LVU5950
 21515 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 21516              	.LVL2633:
10039:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_LSB, data1_u8r);
 21517              		.loc 1 10039 21 is_stmt 1 view .LVU5951
 21518              		.loc 1 10039 31 is_stmt 0 view .LVU5952
 21519 00cc 8DF80730 		strb	r3, [sp, #7]
10040:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21520              		.loc 1 10040 21 is_stmt 1 view .LVU5953
 21521              		.loc 1 10040 41 is_stmt 0 view .LVU5954
 21522 00d0 764B     		ldr	r3, .L1548
 21523              	.LVL2634:
 21524              		.loc 1 10040 41 view .LVU5955
 21525 00d2 1868     		ldr	r0, [r3]
 21526 00d4 C468     		ldr	r4, [r0, #12]
 21527              	.LVL2635:
 21528              		.loc 1 10040 33 view .LVU5956
 21529 00d6 0123     		movs	r3, #1
 21530 00d8 0DF10702 		add	r2, sp, #7
 21531              	.LVL2636:
 21532              		.loc 1 10040 33 view .LVU5957
 21533 00dc 4521     		movs	r1, #69
 21534 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21535 00e0 A047     		blx	r4
 21536              	.LVL2637:
 21537              		.loc 1 10040 30 view .LVU5958
 21538 00e2 56FA80F4 		uxtab	r4, r6, r0
 21539 00e6 64B2     		sxtb	r4, r4
 21540              	.LVL2638:
 21541              	.L1527:
10041:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_LSB_REG,
10042:Core/Src/bno055.c ****                                                                 &data2_u8r,
10043:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10044:Core/Src/bno055.c ****                 }
10045:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21542              		.loc 1 10045 17 is_stmt 1 view .LVU5959
 21543              		.loc 1 10045 37 is_stmt 0 view .LVU5960
 21544 00e8 704B     		ldr	r3, .L1548
 21545 00ea 1868     		ldr	r0, [r3]
 21546 00ec 0669     		ldr	r6, [r0, #16]
ARM GAS  /tmp/ccO72alg.s 			page 606


 21547              		.loc 1 10045 29 view .LVU5961
 21548 00ee 0123     		movs	r3, #1
 21549 00f0 0DF10702 		add	r2, sp, #7
 21550 00f4 4621     		movs	r1, #70
 21551 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21552 00f8 B047     		blx	r6
 21553              	.LVL2639:
 21554              		.loc 1 10045 26 view .LVU5962
 21555 00fa 54FA80F4 		uxtab	r4, r4, r0
 21556              	.LVL2640:
 21557              		.loc 1 10045 26 view .LVU5963
 21558 00fe E6B2     		uxtb	r6, r4
 21559 0100 64B2     		sxtb	r4, r4
 21560              	.LVL2641:
10046:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_1_MSB_REG,
10047:Core/Src/bno055.c ****                                                            &data2_u8r,
10048:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10049:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21561              		.loc 1 10049 17 is_stmt 1 view .LVU5964
 21562              		.loc 1 10049 20 is_stmt 0 view .LVU5965
 21563 0102 7CB9     		cbnz	r4, .L1528
10050:Core/Src/bno055.c ****                 {
10051:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_1 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21564              		.loc 1 10051 21 is_stmt 1 view .LVU5966
 21565              		.loc 1 10051 34 is_stmt 0 view .LVU5967
 21566 0104 95F90330 		ldrsb	r3, [r5, #3]
 21567              	.LVL2642:
10052:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_1_MSB, data1_u8r);
 21568              		.loc 1 10052 21 is_stmt 1 view .LVU5968
 21569              		.loc 1 10052 31 is_stmt 0 view .LVU5969
 21570 0108 8DF80730 		strb	r3, [sp, #7]
10053:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21571              		.loc 1 10053 21 is_stmt 1 view .LVU5970
 21572              		.loc 1 10053 41 is_stmt 0 view .LVU5971
 21573 010c 674B     		ldr	r3, .L1548
 21574              	.LVL2643:
 21575              		.loc 1 10053 41 view .LVU5972
 21576 010e 1868     		ldr	r0, [r3]
 21577 0110 C468     		ldr	r4, [r0, #12]
 21578              	.LVL2644:
 21579              		.loc 1 10053 33 view .LVU5973
 21580 0112 0123     		movs	r3, #1
 21581 0114 0DF10702 		add	r2, sp, #7
 21582              	.LVL2645:
 21583              		.loc 1 10053 33 view .LVU5974
 21584 0118 4621     		movs	r1, #70
 21585 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21586 011c A047     		blx	r4
 21587              	.LVL2646:
 21588              		.loc 1 10053 30 view .LVU5975
 21589 011e 56FA80F4 		uxtab	r4, r6, r0
 21590 0122 64B2     		sxtb	r4, r4
 21591              	.LVL2647:
 21592              	.L1528:
10054:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_1_MSB_REG,
10055:Core/Src/bno055.c ****                                                                 &data2_u8r,
10056:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 607


10057:Core/Src/bno055.c ****                 }
10058:Core/Src/bno055.c **** 
10059:Core/Src/bno055.c ****                 /* write soft iron calibration
10060:Core/Src/bno055.c ****                  * matrix two value*/
10061:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21593              		.loc 1 10061 17 is_stmt 1 view .LVU5976
 21594              		.loc 1 10061 37 is_stmt 0 view .LVU5977
 21595 0124 614B     		ldr	r3, .L1548
 21596 0126 1868     		ldr	r0, [r3]
 21597 0128 0669     		ldr	r6, [r0, #16]
 21598              		.loc 1 10061 29 view .LVU5978
 21599 012a 0123     		movs	r3, #1
 21600 012c 0DF10702 		add	r2, sp, #7
 21601 0130 4721     		movs	r1, #71
 21602 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21603 0134 B047     		blx	r6
 21604              	.LVL2648:
 21605              		.loc 1 10061 26 view .LVU5979
 21606 0136 54FA80F4 		uxtab	r4, r4, r0
 21607              	.LVL2649:
 21608              		.loc 1 10061 26 view .LVU5980
 21609 013a E6B2     		uxtb	r6, r4
 21610 013c 64B2     		sxtb	r4, r4
 21611              	.LVL2650:
10062:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_LSB_REG,
10063:Core/Src/bno055.c ****                                                            &data2_u8r,
10064:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10065:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21612              		.loc 1 10065 17 is_stmt 1 view .LVU5981
 21613              		.loc 1 10065 20 is_stmt 0 view .LVU5982
 21614 013e 7CB9     		cbnz	r4, .L1529
10066:Core/Src/bno055.c ****                 {
10067:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21615              		.loc 1 10067 21 is_stmt 1 view .LVU5983
 21616              		.loc 1 10067 49 is_stmt 0 view .LVU5984
 21617 0140 B5F90430 		ldrsh	r3, [r5, #4]
 21618              	.LVL2651:
10068:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_LSB, data1_u8r);
 21619              		.loc 1 10068 21 is_stmt 1 view .LVU5985
 21620              		.loc 1 10068 31 is_stmt 0 view .LVU5986
 21621 0144 8DF80730 		strb	r3, [sp, #7]
10069:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21622              		.loc 1 10069 21 is_stmt 1 view .LVU5987
 21623              		.loc 1 10069 41 is_stmt 0 view .LVU5988
 21624 0148 584B     		ldr	r3, .L1548
 21625              	.LVL2652:
 21626              		.loc 1 10069 41 view .LVU5989
 21627 014a 1868     		ldr	r0, [r3]
 21628 014c C468     		ldr	r4, [r0, #12]
 21629              	.LVL2653:
 21630              		.loc 1 10069 33 view .LVU5990
 21631 014e 0123     		movs	r3, #1
 21632 0150 0DF10702 		add	r2, sp, #7
 21633              	.LVL2654:
 21634              		.loc 1 10069 33 view .LVU5991
 21635 0154 4721     		movs	r1, #71
 21636 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 608


 21637 0158 A047     		blx	r4
 21638              	.LVL2655:
 21639              		.loc 1 10069 30 view .LVU5992
 21640 015a 56FA80F4 		uxtab	r4, r6, r0
 21641 015e 64B2     		sxtb	r4, r4
 21642              	.LVL2656:
 21643              	.L1529:
10070:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_LSB_REG,
10071:Core/Src/bno055.c ****                                                                 &data2_u8r,
10072:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10073:Core/Src/bno055.c ****                 }
10074:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21644              		.loc 1 10074 17 is_stmt 1 view .LVU5993
 21645              		.loc 1 10074 37 is_stmt 0 view .LVU5994
 21646 0160 524B     		ldr	r3, .L1548
 21647 0162 1868     		ldr	r0, [r3]
 21648 0164 0669     		ldr	r6, [r0, #16]
 21649              		.loc 1 10074 29 view .LVU5995
 21650 0166 0123     		movs	r3, #1
 21651 0168 0DF10702 		add	r2, sp, #7
 21652 016c 4821     		movs	r1, #72
 21653 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21654 0170 B047     		blx	r6
 21655              	.LVL2657:
 21656              		.loc 1 10074 26 view .LVU5996
 21657 0172 54FA80F4 		uxtab	r4, r4, r0
 21658              	.LVL2658:
 21659              		.loc 1 10074 26 view .LVU5997
 21660 0176 E6B2     		uxtb	r6, r4
 21661 0178 64B2     		sxtb	r4, r4
 21662              	.LVL2659:
10075:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_2_MSB_REG,
10076:Core/Src/bno055.c ****                                                            &data2_u8r,
10077:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10078:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21663              		.loc 1 10078 17 is_stmt 1 view .LVU5998
 21664              		.loc 1 10078 20 is_stmt 0 view .LVU5999
 21665 017a 7CB9     		cbnz	r4, .L1530
10079:Core/Src/bno055.c ****                 {
10080:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_2 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21666              		.loc 1 10080 21 is_stmt 1 view .LVU6000
 21667              		.loc 1 10080 34 is_stmt 0 view .LVU6001
 21668 017c 95F90530 		ldrsb	r3, [r5, #5]
 21669              	.LVL2660:
10081:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_2_MSB, data1_u8r);
 21670              		.loc 1 10081 21 is_stmt 1 view .LVU6002
 21671              		.loc 1 10081 31 is_stmt 0 view .LVU6003
 21672 0180 8DF80730 		strb	r3, [sp, #7]
10082:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21673              		.loc 1 10082 21 is_stmt 1 view .LVU6004
 21674              		.loc 1 10082 41 is_stmt 0 view .LVU6005
 21675 0184 494B     		ldr	r3, .L1548
 21676              	.LVL2661:
 21677              		.loc 1 10082 41 view .LVU6006
 21678 0186 1868     		ldr	r0, [r3]
 21679 0188 C468     		ldr	r4, [r0, #12]
 21680              	.LVL2662:
ARM GAS  /tmp/ccO72alg.s 			page 609


 21681              		.loc 1 10082 33 view .LVU6007
 21682 018a 0123     		movs	r3, #1
 21683 018c 0DF10702 		add	r2, sp, #7
 21684              	.LVL2663:
 21685              		.loc 1 10082 33 view .LVU6008
 21686 0190 4821     		movs	r1, #72
 21687 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21688 0194 A047     		blx	r4
 21689              	.LVL2664:
 21690              		.loc 1 10082 30 view .LVU6009
 21691 0196 56FA80F4 		uxtab	r4, r6, r0
 21692 019a 64B2     		sxtb	r4, r4
 21693              	.LVL2665:
 21694              	.L1530:
10083:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_2_MSB_REG,
10084:Core/Src/bno055.c ****                                                                 &data2_u8r,
10085:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10086:Core/Src/bno055.c ****                 }
10087:Core/Src/bno055.c **** 
10088:Core/Src/bno055.c ****                 /* write soft iron calibration
10089:Core/Src/bno055.c ****                  * matrix three value*/
10090:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21695              		.loc 1 10090 17 is_stmt 1 view .LVU6010
 21696              		.loc 1 10090 37 is_stmt 0 view .LVU6011
 21697 019c 434B     		ldr	r3, .L1548
 21698 019e 1868     		ldr	r0, [r3]
 21699 01a0 0669     		ldr	r6, [r0, #16]
 21700              		.loc 1 10090 29 view .LVU6012
 21701 01a2 0123     		movs	r3, #1
 21702 01a4 0DF10702 		add	r2, sp, #7
 21703 01a8 4921     		movs	r1, #73
 21704 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21705 01ac B047     		blx	r6
 21706              	.LVL2666:
 21707              		.loc 1 10090 26 view .LVU6013
 21708 01ae 54FA80F4 		uxtab	r4, r4, r0
 21709              	.LVL2667:
 21710              		.loc 1 10090 26 view .LVU6014
 21711 01b2 E6B2     		uxtb	r6, r4
 21712 01b4 64B2     		sxtb	r4, r4
 21713              	.LVL2668:
10091:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_LSB_REG,
10092:Core/Src/bno055.c ****                                                            &data2_u8r,
10093:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10094:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21714              		.loc 1 10094 17 is_stmt 1 view .LVU6015
 21715              		.loc 1 10094 20 is_stmt 0 view .LVU6016
 21716 01b6 7CB9     		cbnz	r4, .L1531
10095:Core/Src/bno055.c ****                 {
10096:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21717              		.loc 1 10096 21 is_stmt 1 view .LVU6017
 21718              		.loc 1 10096 49 is_stmt 0 view .LVU6018
 21719 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 21720              	.LVL2669:
10097:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_LSB, data1_u8r);
 21721              		.loc 1 10097 21 is_stmt 1 view .LVU6019
 21722              		.loc 1 10097 31 is_stmt 0 view .LVU6020
ARM GAS  /tmp/ccO72alg.s 			page 610


 21723 01bc 8DF80730 		strb	r3, [sp, #7]
10098:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21724              		.loc 1 10098 21 is_stmt 1 view .LVU6021
 21725              		.loc 1 10098 41 is_stmt 0 view .LVU6022
 21726 01c0 3A4B     		ldr	r3, .L1548
 21727              	.LVL2670:
 21728              		.loc 1 10098 41 view .LVU6023
 21729 01c2 1868     		ldr	r0, [r3]
 21730 01c4 C468     		ldr	r4, [r0, #12]
 21731              	.LVL2671:
 21732              		.loc 1 10098 33 view .LVU6024
 21733 01c6 0123     		movs	r3, #1
 21734 01c8 0DF10702 		add	r2, sp, #7
 21735              	.LVL2672:
 21736              		.loc 1 10098 33 view .LVU6025
 21737 01cc 4921     		movs	r1, #73
 21738 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21739 01d0 A047     		blx	r4
 21740              	.LVL2673:
 21741              		.loc 1 10098 30 view .LVU6026
 21742 01d2 56FA80F4 		uxtab	r4, r6, r0
 21743 01d6 64B2     		sxtb	r4, r4
 21744              	.LVL2674:
 21745              	.L1531:
10099:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_LSB_REG,
10100:Core/Src/bno055.c ****                                                                 &data2_u8r,
10101:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10102:Core/Src/bno055.c ****                 }
10103:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21746              		.loc 1 10103 17 is_stmt 1 view .LVU6027
 21747              		.loc 1 10103 37 is_stmt 0 view .LVU6028
 21748 01d8 344B     		ldr	r3, .L1548
 21749 01da 1868     		ldr	r0, [r3]
 21750 01dc 0669     		ldr	r6, [r0, #16]
 21751              		.loc 1 10103 29 view .LVU6029
 21752 01de 0123     		movs	r3, #1
 21753 01e0 0DF10702 		add	r2, sp, #7
 21754 01e4 4A21     		movs	r1, #74
 21755 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21756 01e8 B047     		blx	r6
 21757              	.LVL2675:
 21758              		.loc 1 10103 26 view .LVU6030
 21759 01ea 54FA80F4 		uxtab	r4, r4, r0
 21760              	.LVL2676:
 21761              		.loc 1 10103 26 view .LVU6031
 21762 01ee E6B2     		uxtb	r6, r4
 21763 01f0 64B2     		sxtb	r4, r4
 21764              	.LVL2677:
10104:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_3_MSB_REG,
10105:Core/Src/bno055.c ****                                                            &data2_u8r,
10106:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10107:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21765              		.loc 1 10107 17 is_stmt 1 view .LVU6032
 21766              		.loc 1 10107 20 is_stmt 0 view .LVU6033
 21767 01f2 7CB9     		cbnz	r4, .L1532
10108:Core/Src/bno055.c ****                 {
10109:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_3 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
ARM GAS  /tmp/ccO72alg.s 			page 611


 21768              		.loc 1 10109 21 is_stmt 1 view .LVU6034
 21769              		.loc 1 10109 34 is_stmt 0 view .LVU6035
 21770 01f4 95F90730 		ldrsb	r3, [r5, #7]
 21771              	.LVL2678:
10110:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_3_MSB, data1_u8r);
 21772              		.loc 1 10110 21 is_stmt 1 view .LVU6036
 21773              		.loc 1 10110 31 is_stmt 0 view .LVU6037
 21774 01f8 8DF80730 		strb	r3, [sp, #7]
10111:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21775              		.loc 1 10111 21 is_stmt 1 view .LVU6038
 21776              		.loc 1 10111 41 is_stmt 0 view .LVU6039
 21777 01fc 2B4B     		ldr	r3, .L1548
 21778              	.LVL2679:
 21779              		.loc 1 10111 41 view .LVU6040
 21780 01fe 1868     		ldr	r0, [r3]
 21781 0200 C468     		ldr	r4, [r0, #12]
 21782              	.LVL2680:
 21783              		.loc 1 10111 33 view .LVU6041
 21784 0202 0123     		movs	r3, #1
 21785 0204 0DF10702 		add	r2, sp, #7
 21786              	.LVL2681:
 21787              		.loc 1 10111 33 view .LVU6042
 21788 0208 4A21     		movs	r1, #74
 21789 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21790 020c A047     		blx	r4
 21791              	.LVL2682:
 21792              		.loc 1 10111 30 view .LVU6043
 21793 020e 56FA80F4 		uxtab	r4, r6, r0
 21794 0212 64B2     		sxtb	r4, r4
 21795              	.LVL2683:
 21796              	.L1532:
10112:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_3_MSB_REG,
10113:Core/Src/bno055.c ****                                                                 &data2_u8r,
10114:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10115:Core/Src/bno055.c ****                 }
10116:Core/Src/bno055.c **** 
10117:Core/Src/bno055.c ****                 /* write soft iron calibration
10118:Core/Src/bno055.c ****                  * matrix four value*/
10119:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21797              		.loc 1 10119 17 is_stmt 1 view .LVU6044
 21798              		.loc 1 10119 37 is_stmt 0 view .LVU6045
 21799 0214 254B     		ldr	r3, .L1548
 21800 0216 1868     		ldr	r0, [r3]
 21801 0218 0669     		ldr	r6, [r0, #16]
 21802              		.loc 1 10119 29 view .LVU6046
 21803 021a 0123     		movs	r3, #1
 21804 021c 0DF10702 		add	r2, sp, #7
 21805 0220 4B21     		movs	r1, #75
 21806 0222 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21807 0224 B047     		blx	r6
 21808              	.LVL2684:
 21809              		.loc 1 10119 26 view .LVU6047
 21810 0226 54FA80F4 		uxtab	r4, r4, r0
 21811              	.LVL2685:
 21812              		.loc 1 10119 26 view .LVU6048
 21813 022a E6B2     		uxtb	r6, r4
 21814 022c 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 612


 21815              	.LVL2686:
10120:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_LSB_REG,
10121:Core/Src/bno055.c ****                                                            &data2_u8r,
10122:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10123:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21816              		.loc 1 10123 17 is_stmt 1 view .LVU6049
 21817              		.loc 1 10123 20 is_stmt 0 view .LVU6050
 21818 022e 7CB9     		cbnz	r4, .L1533
10124:Core/Src/bno055.c ****                 {
10125:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21819              		.loc 1 10125 21 is_stmt 1 view .LVU6051
 21820              		.loc 1 10125 49 is_stmt 0 view .LVU6052
 21821 0230 B5F90830 		ldrsh	r3, [r5, #8]
 21822              	.LVL2687:
10126:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_LSB, data1_u8r);
 21823              		.loc 1 10126 21 is_stmt 1 view .LVU6053
 21824              		.loc 1 10126 31 is_stmt 0 view .LVU6054
 21825 0234 8DF80730 		strb	r3, [sp, #7]
10127:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21826              		.loc 1 10127 21 is_stmt 1 view .LVU6055
 21827              		.loc 1 10127 41 is_stmt 0 view .LVU6056
 21828 0238 1C4B     		ldr	r3, .L1548
 21829              	.LVL2688:
 21830              		.loc 1 10127 41 view .LVU6057
 21831 023a 1868     		ldr	r0, [r3]
 21832 023c C468     		ldr	r4, [r0, #12]
 21833              	.LVL2689:
 21834              		.loc 1 10127 33 view .LVU6058
 21835 023e 0123     		movs	r3, #1
 21836 0240 0DF10702 		add	r2, sp, #7
 21837              	.LVL2690:
 21838              		.loc 1 10127 33 view .LVU6059
 21839 0244 4B21     		movs	r1, #75
 21840 0246 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21841 0248 A047     		blx	r4
 21842              	.LVL2691:
 21843              		.loc 1 10127 30 view .LVU6060
 21844 024a 56FA80F4 		uxtab	r4, r6, r0
 21845 024e 64B2     		sxtb	r4, r4
 21846              	.LVL2692:
 21847              	.L1533:
10128:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_LSB_REG,
10129:Core/Src/bno055.c ****                                                                 &data2_u8r,
10130:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10131:Core/Src/bno055.c ****                 }
10132:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21848              		.loc 1 10132 17 is_stmt 1 view .LVU6061
 21849              		.loc 1 10132 37 is_stmt 0 view .LVU6062
 21850 0250 164B     		ldr	r3, .L1548
 21851 0252 1868     		ldr	r0, [r3]
 21852 0254 0669     		ldr	r6, [r0, #16]
 21853              		.loc 1 10132 29 view .LVU6063
 21854 0256 0123     		movs	r3, #1
 21855 0258 0DF10702 		add	r2, sp, #7
 21856 025c 4C21     		movs	r1, #76
 21857 025e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21858 0260 B047     		blx	r6
ARM GAS  /tmp/ccO72alg.s 			page 613


 21859              	.LVL2693:
 21860              		.loc 1 10132 26 view .LVU6064
 21861 0262 54FA80F4 		uxtab	r4, r4, r0
 21862              	.LVL2694:
 21863              		.loc 1 10132 26 view .LVU6065
 21864 0266 E6B2     		uxtb	r6, r4
 21865 0268 64B2     		sxtb	r4, r4
 21866              	.LVL2695:
10133:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_4_MSB_REG,
10134:Core/Src/bno055.c ****                                                            &data2_u8r,
10135:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10136:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21867              		.loc 1 10136 17 is_stmt 1 view .LVU6066
 21868              		.loc 1 10136 20 is_stmt 0 view .LVU6067
 21869 026a 7CB9     		cbnz	r4, .L1534
10137:Core/Src/bno055.c ****                 {
10138:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_4 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21870              		.loc 1 10138 21 is_stmt 1 view .LVU6068
 21871              		.loc 1 10138 34 is_stmt 0 view .LVU6069
 21872 026c 95F90930 		ldrsb	r3, [r5, #9]
 21873              	.LVL2696:
10139:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_4_MSB, data1_u8r);
 21874              		.loc 1 10139 21 is_stmt 1 view .LVU6070
 21875              		.loc 1 10139 31 is_stmt 0 view .LVU6071
 21876 0270 8DF80730 		strb	r3, [sp, #7]
10140:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21877              		.loc 1 10140 21 is_stmt 1 view .LVU6072
 21878              		.loc 1 10140 41 is_stmt 0 view .LVU6073
 21879 0274 0D4B     		ldr	r3, .L1548
 21880              	.LVL2697:
 21881              		.loc 1 10140 41 view .LVU6074
 21882 0276 1868     		ldr	r0, [r3]
 21883 0278 C468     		ldr	r4, [r0, #12]
 21884              	.LVL2698:
 21885              		.loc 1 10140 33 view .LVU6075
 21886 027a 0123     		movs	r3, #1
 21887 027c 0DF10702 		add	r2, sp, #7
 21888              	.LVL2699:
 21889              		.loc 1 10140 33 view .LVU6076
 21890 0280 4C21     		movs	r1, #76
 21891 0282 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21892 0284 A047     		blx	r4
 21893              	.LVL2700:
 21894              		.loc 1 10140 30 view .LVU6077
 21895 0286 56FA80F4 		uxtab	r4, r6, r0
 21896 028a 64B2     		sxtb	r4, r4
 21897              	.LVL2701:
 21898              	.L1534:
10141:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_4_MSB_REG,
10142:Core/Src/bno055.c ****                                                                 &data2_u8r,
10143:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10144:Core/Src/bno055.c ****                 }
10145:Core/Src/bno055.c **** 
10146:Core/Src/bno055.c ****                 /* write soft iron calibration
10147:Core/Src/bno055.c ****                  * matrix five value*/
10148:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21899              		.loc 1 10148 17 is_stmt 1 view .LVU6078
ARM GAS  /tmp/ccO72alg.s 			page 614


 21900              		.loc 1 10148 37 is_stmt 0 view .LVU6079
 21901 028c 074B     		ldr	r3, .L1548
 21902 028e 1868     		ldr	r0, [r3]
 21903 0290 0669     		ldr	r6, [r0, #16]
 21904              		.loc 1 10148 29 view .LVU6080
 21905 0292 0123     		movs	r3, #1
 21906 0294 0DF10702 		add	r2, sp, #7
 21907 0298 4D21     		movs	r1, #77
 21908 029a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21909 029c B047     		blx	r6
 21910              	.LVL2702:
 21911              		.loc 1 10148 26 view .LVU6081
 21912 029e 54FA80F4 		uxtab	r4, r4, r0
 21913              	.LVL2703:
 21914              		.loc 1 10148 26 view .LVU6082
 21915 02a2 E6B2     		uxtb	r6, r4
 21916 02a4 64B2     		sxtb	r4, r4
 21917              	.LVL2704:
10149:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_LSB_REG,
10150:Core/Src/bno055.c ****                                                            &data2_u8r,
10151:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10152:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21918              		.loc 1 10152 17 is_stmt 1 view .LVU6083
 21919              		.loc 1 10152 20 is_stmt 0 view .LVU6084
 21920 02a6 9CB9     		cbnz	r4, .L1535
 21921 02a8 02E0     		b	.L1549
 21922              	.L1550:
 21923 02aa 00BF     		.align	2
 21924              	.L1548:
 21925 02ac 00000000 		.word	.LANCHOR0
 21926              	.L1549:
10153:Core/Src/bno055.c ****                 {
10154:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 & BNO055_SIC_HEX_0_0_F_F_DATA));
 21927              		.loc 1 10154 21 is_stmt 1 view .LVU6085
 21928              		.loc 1 10154 49 is_stmt 0 view .LVU6086
 21929 02b0 B5F90A30 		ldrsh	r3, [r5, #10]
 21930              	.LVL2705:
10155:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_LSB, data1_u8r);
 21931              		.loc 1 10155 21 is_stmt 1 view .LVU6087
 21932              		.loc 1 10155 31 is_stmt 0 view .LVU6088
 21933 02b4 8DF80730 		strb	r3, [sp, #7]
10156:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21934              		.loc 1 10156 21 is_stmt 1 view .LVU6089
 21935              		.loc 1 10156 41 is_stmt 0 view .LVU6090
 21936 02b8 7C4B     		ldr	r3, .L1551
 21937              	.LVL2706:
 21938              		.loc 1 10156 41 view .LVU6091
 21939 02ba 1868     		ldr	r0, [r3]
 21940 02bc C468     		ldr	r4, [r0, #12]
 21941              	.LVL2707:
 21942              		.loc 1 10156 33 view .LVU6092
 21943 02be 0123     		movs	r3, #1
 21944 02c0 0DF10702 		add	r2, sp, #7
 21945              	.LVL2708:
 21946              		.loc 1 10156 33 view .LVU6093
 21947 02c4 4D21     		movs	r1, #77
 21948 02c6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 615


 21949 02c8 A047     		blx	r4
 21950              	.LVL2709:
 21951              		.loc 1 10156 30 view .LVU6094
 21952 02ca 56FA80F4 		uxtab	r4, r6, r0
 21953 02ce 64B2     		sxtb	r4, r4
 21954              	.LVL2710:
 21955              	.L1535:
10157:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_LSB_REG,
10158:Core/Src/bno055.c ****                                                                 &data2_u8r,
10159:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10160:Core/Src/bno055.c ****                 }
10161:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 21956              		.loc 1 10161 17 is_stmt 1 view .LVU6095
 21957              		.loc 1 10161 37 is_stmt 0 view .LVU6096
 21958 02d0 764B     		ldr	r3, .L1551
 21959 02d2 1868     		ldr	r0, [r3]
 21960 02d4 0669     		ldr	r6, [r0, #16]
 21961              		.loc 1 10161 29 view .LVU6097
 21962 02d6 0123     		movs	r3, #1
 21963 02d8 0DF10702 		add	r2, sp, #7
 21964 02dc 4E21     		movs	r1, #78
 21965 02de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 21966 02e0 B047     		blx	r6
 21967              	.LVL2711:
 21968              		.loc 1 10161 26 view .LVU6098
 21969 02e2 54FA80F4 		uxtab	r4, r4, r0
 21970              	.LVL2712:
 21971              		.loc 1 10161 26 view .LVU6099
 21972 02e6 E6B2     		uxtb	r6, r4
 21973 02e8 64B2     		sxtb	r4, r4
 21974              	.LVL2713:
10162:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_5_MSB_REG,
10163:Core/Src/bno055.c ****                                                            &data2_u8r,
10164:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10165:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 21975              		.loc 1 10165 17 is_stmt 1 view .LVU6100
 21976              		.loc 1 10165 20 is_stmt 0 view .LVU6101
 21977 02ea 7CB9     		cbnz	r4, .L1536
10166:Core/Src/bno055.c ****                 {
10167:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_5 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 21978              		.loc 1 10167 21 is_stmt 1 view .LVU6102
 21979              		.loc 1 10167 34 is_stmt 0 view .LVU6103
 21980 02ec 95F90B30 		ldrsb	r3, [r5, #11]
 21981              	.LVL2714:
10168:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_5_MSB, data1_u8r);
 21982              		.loc 1 10168 21 is_stmt 1 view .LVU6104
 21983              		.loc 1 10168 31 is_stmt 0 view .LVU6105
 21984 02f0 8DF80730 		strb	r3, [sp, #7]
10169:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 21985              		.loc 1 10169 21 is_stmt 1 view .LVU6106
 21986              		.loc 1 10169 41 is_stmt 0 view .LVU6107
 21987 02f4 6D4B     		ldr	r3, .L1551
 21988              	.LVL2715:
 21989              		.loc 1 10169 41 view .LVU6108
 21990 02f6 1868     		ldr	r0, [r3]
 21991 02f8 C468     		ldr	r4, [r0, #12]
 21992              	.LVL2716:
ARM GAS  /tmp/ccO72alg.s 			page 616


 21993              		.loc 1 10169 33 view .LVU6109
 21994 02fa 0123     		movs	r3, #1
 21995 02fc 0DF10702 		add	r2, sp, #7
 21996              	.LVL2717:
 21997              		.loc 1 10169 33 view .LVU6110
 21998 0300 4E21     		movs	r1, #78
 21999 0302 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22000 0304 A047     		blx	r4
 22001              	.LVL2718:
 22002              		.loc 1 10169 30 view .LVU6111
 22003 0306 56FA80F4 		uxtab	r4, r6, r0
 22004 030a 64B2     		sxtb	r4, r4
 22005              	.LVL2719:
 22006              	.L1536:
10170:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_5_MSB_REG,
10171:Core/Src/bno055.c ****                                                                 &data2_u8r,
10172:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10173:Core/Src/bno055.c ****                 }
10174:Core/Src/bno055.c **** 
10175:Core/Src/bno055.c ****                 /* write soft iron calibration
10176:Core/Src/bno055.c ****                  * matrix six value*/
10177:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22007              		.loc 1 10177 17 is_stmt 1 view .LVU6112
 22008              		.loc 1 10177 37 is_stmt 0 view .LVU6113
 22009 030c 674B     		ldr	r3, .L1551
 22010 030e 1868     		ldr	r0, [r3]
 22011 0310 0669     		ldr	r6, [r0, #16]
 22012              		.loc 1 10177 29 view .LVU6114
 22013 0312 0123     		movs	r3, #1
 22014 0314 0DF10702 		add	r2, sp, #7
 22015 0318 4F21     		movs	r1, #79
 22016 031a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22017 031c B047     		blx	r6
 22018              	.LVL2720:
 22019              		.loc 1 10177 26 view .LVU6115
 22020 031e 54FA80F4 		uxtab	r4, r4, r0
 22021              	.LVL2721:
 22022              		.loc 1 10177 26 view .LVU6116
 22023 0322 E6B2     		uxtb	r6, r4
 22024 0324 64B2     		sxtb	r4, r4
 22025              	.LVL2722:
10178:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_LSB_REG,
10179:Core/Src/bno055.c ****                                                            &data2_u8r,
10180:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10181:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22026              		.loc 1 10181 17 is_stmt 1 view .LVU6117
 22027              		.loc 1 10181 20 is_stmt 0 view .LVU6118
 22028 0326 7CB9     		cbnz	r4, .L1537
10182:Core/Src/bno055.c ****                 {
10183:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22029              		.loc 1 10183 21 is_stmt 1 view .LVU6119
 22030              		.loc 1 10183 49 is_stmt 0 view .LVU6120
 22031 0328 B5F90C30 		ldrsh	r3, [r5, #12]
 22032              	.LVL2723:
10184:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_LSB, data1_u8r);
 22033              		.loc 1 10184 21 is_stmt 1 view .LVU6121
 22034              		.loc 1 10184 31 is_stmt 0 view .LVU6122
ARM GAS  /tmp/ccO72alg.s 			page 617


 22035 032c 8DF80730 		strb	r3, [sp, #7]
10185:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22036              		.loc 1 10185 21 is_stmt 1 view .LVU6123
 22037              		.loc 1 10185 41 is_stmt 0 view .LVU6124
 22038 0330 5E4B     		ldr	r3, .L1551
 22039              	.LVL2724:
 22040              		.loc 1 10185 41 view .LVU6125
 22041 0332 1868     		ldr	r0, [r3]
 22042 0334 C468     		ldr	r4, [r0, #12]
 22043              	.LVL2725:
 22044              		.loc 1 10185 33 view .LVU6126
 22045 0336 0123     		movs	r3, #1
 22046 0338 0DF10702 		add	r2, sp, #7
 22047              	.LVL2726:
 22048              		.loc 1 10185 33 view .LVU6127
 22049 033c 4F21     		movs	r1, #79
 22050 033e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22051 0340 A047     		blx	r4
 22052              	.LVL2727:
 22053              		.loc 1 10185 30 view .LVU6128
 22054 0342 56FA80F4 		uxtab	r4, r6, r0
 22055 0346 64B2     		sxtb	r4, r4
 22056              	.LVL2728:
 22057              	.L1537:
10186:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_LSB_REG,
10187:Core/Src/bno055.c ****                                                                 &data2_u8r,
10188:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10189:Core/Src/bno055.c ****                 }
10190:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22058              		.loc 1 10190 17 is_stmt 1 view .LVU6129
 22059              		.loc 1 10190 37 is_stmt 0 view .LVU6130
 22060 0348 584B     		ldr	r3, .L1551
 22061 034a 1868     		ldr	r0, [r3]
 22062 034c 0669     		ldr	r6, [r0, #16]
 22063              		.loc 1 10190 29 view .LVU6131
 22064 034e 0123     		movs	r3, #1
 22065 0350 0DF10702 		add	r2, sp, #7
 22066 0354 5021     		movs	r1, #80
 22067 0356 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22068 0358 B047     		blx	r6
 22069              	.LVL2729:
 22070              		.loc 1 10190 26 view .LVU6132
 22071 035a 54FA80F4 		uxtab	r4, r4, r0
 22072              	.LVL2730:
 22073              		.loc 1 10190 26 view .LVU6133
 22074 035e E6B2     		uxtb	r6, r4
 22075 0360 64B2     		sxtb	r4, r4
 22076              	.LVL2731:
10191:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_6_MSB_REG,
10192:Core/Src/bno055.c ****                                                            &data2_u8r,
10193:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10194:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22077              		.loc 1 10194 17 is_stmt 1 view .LVU6134
 22078              		.loc 1 10194 20 is_stmt 0 view .LVU6135
 22079 0362 7CB9     		cbnz	r4, .L1538
10195:Core/Src/bno055.c ****                 {
10196:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_6 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
ARM GAS  /tmp/ccO72alg.s 			page 618


 22080              		.loc 1 10196 21 is_stmt 1 view .LVU6136
 22081              		.loc 1 10196 34 is_stmt 0 view .LVU6137
 22082 0364 95F90D30 		ldrsb	r3, [r5, #13]
 22083              	.LVL2732:
10197:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_6_MSB, data1_u8r);
 22084              		.loc 1 10197 21 is_stmt 1 view .LVU6138
 22085              		.loc 1 10197 31 is_stmt 0 view .LVU6139
 22086 0368 8DF80730 		strb	r3, [sp, #7]
10198:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22087              		.loc 1 10198 21 is_stmt 1 view .LVU6140
 22088              		.loc 1 10198 41 is_stmt 0 view .LVU6141
 22089 036c 4F4B     		ldr	r3, .L1551
 22090              	.LVL2733:
 22091              		.loc 1 10198 41 view .LVU6142
 22092 036e 1868     		ldr	r0, [r3]
 22093 0370 C468     		ldr	r4, [r0, #12]
 22094              	.LVL2734:
 22095              		.loc 1 10198 33 view .LVU6143
 22096 0372 0123     		movs	r3, #1
 22097 0374 0DF10702 		add	r2, sp, #7
 22098              	.LVL2735:
 22099              		.loc 1 10198 33 view .LVU6144
 22100 0378 5021     		movs	r1, #80
 22101 037a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22102 037c A047     		blx	r4
 22103              	.LVL2736:
 22104              		.loc 1 10198 30 view .LVU6145
 22105 037e 56FA80F4 		uxtab	r4, r6, r0
 22106 0382 64B2     		sxtb	r4, r4
 22107              	.LVL2737:
 22108              	.L1538:
10199:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_6_MSB_REG,
10200:Core/Src/bno055.c ****                                                                 &data2_u8r,
10201:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10202:Core/Src/bno055.c ****                 }
10203:Core/Src/bno055.c **** 
10204:Core/Src/bno055.c ****                 /* write soft iron calibration
10205:Core/Src/bno055.c ****                  * matrix seven value*/
10206:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22109              		.loc 1 10206 17 is_stmt 1 view .LVU6146
 22110              		.loc 1 10206 37 is_stmt 0 view .LVU6147
 22111 0384 494B     		ldr	r3, .L1551
 22112 0386 1868     		ldr	r0, [r3]
 22113 0388 0669     		ldr	r6, [r0, #16]
 22114              		.loc 1 10206 29 view .LVU6148
 22115 038a 0123     		movs	r3, #1
 22116 038c 0DF10702 		add	r2, sp, #7
 22117 0390 5121     		movs	r1, #81
 22118 0392 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22119 0394 B047     		blx	r6
 22120              	.LVL2738:
 22121              		.loc 1 10206 26 view .LVU6149
 22122 0396 54FA80F4 		uxtab	r4, r4, r0
 22123              	.LVL2739:
 22124              		.loc 1 10206 26 view .LVU6150
 22125 039a E6B2     		uxtb	r6, r4
 22126 039c 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 619


 22127              	.LVL2740:
10207:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_LSB_REG,
10208:Core/Src/bno055.c ****                                                            &data2_u8r,
10209:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10210:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22128              		.loc 1 10210 17 is_stmt 1 view .LVU6151
 22129              		.loc 1 10210 20 is_stmt 0 view .LVU6152
 22130 039e 7CB9     		cbnz	r4, .L1539
10211:Core/Src/bno055.c ****                 {
10212:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22131              		.loc 1 10212 21 is_stmt 1 view .LVU6153
 22132              		.loc 1 10212 49 is_stmt 0 view .LVU6154
 22133 03a0 B5F90E30 		ldrsh	r3, [r5, #14]
 22134              	.LVL2741:
10213:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_LSB, data1_u8r);
 22135              		.loc 1 10213 21 is_stmt 1 view .LVU6155
 22136              		.loc 1 10213 31 is_stmt 0 view .LVU6156
 22137 03a4 8DF80730 		strb	r3, [sp, #7]
10214:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22138              		.loc 1 10214 21 is_stmt 1 view .LVU6157
 22139              		.loc 1 10214 41 is_stmt 0 view .LVU6158
 22140 03a8 404B     		ldr	r3, .L1551
 22141              	.LVL2742:
 22142              		.loc 1 10214 41 view .LVU6159
 22143 03aa 1868     		ldr	r0, [r3]
 22144 03ac C468     		ldr	r4, [r0, #12]
 22145              	.LVL2743:
 22146              		.loc 1 10214 33 view .LVU6160
 22147 03ae 0123     		movs	r3, #1
 22148 03b0 0DF10702 		add	r2, sp, #7
 22149              	.LVL2744:
 22150              		.loc 1 10214 33 view .LVU6161
 22151 03b4 5121     		movs	r1, #81
 22152 03b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22153 03b8 A047     		blx	r4
 22154              	.LVL2745:
 22155              		.loc 1 10214 30 view .LVU6162
 22156 03ba 56FA80F4 		uxtab	r4, r6, r0
 22157 03be 64B2     		sxtb	r4, r4
 22158              	.LVL2746:
 22159              	.L1539:
10215:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_LSB_REG,
10216:Core/Src/bno055.c ****                                                                 &data2_u8r,
10217:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10218:Core/Src/bno055.c ****                 }
10219:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22160              		.loc 1 10219 17 is_stmt 1 view .LVU6163
 22161              		.loc 1 10219 37 is_stmt 0 view .LVU6164
 22162 03c0 3A4B     		ldr	r3, .L1551
 22163 03c2 1868     		ldr	r0, [r3]
 22164 03c4 0669     		ldr	r6, [r0, #16]
 22165              		.loc 1 10219 29 view .LVU6165
 22166 03c6 0123     		movs	r3, #1
 22167 03c8 0DF10702 		add	r2, sp, #7
 22168 03cc 5221     		movs	r1, #82
 22169 03ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22170 03d0 B047     		blx	r6
ARM GAS  /tmp/ccO72alg.s 			page 620


 22171              	.LVL2747:
 22172              		.loc 1 10219 26 view .LVU6166
 22173 03d2 54FA80F4 		uxtab	r4, r4, r0
 22174              	.LVL2748:
 22175              		.loc 1 10219 26 view .LVU6167
 22176 03d6 E6B2     		uxtb	r6, r4
 22177 03d8 64B2     		sxtb	r4, r4
 22178              	.LVL2749:
10220:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_7_MSB_REG,
10221:Core/Src/bno055.c ****                                                            &data2_u8r,
10222:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10223:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22179              		.loc 1 10223 17 is_stmt 1 view .LVU6168
 22180              		.loc 1 10223 20 is_stmt 0 view .LVU6169
 22181 03da 7CB9     		cbnz	r4, .L1540
10224:Core/Src/bno055.c ****                 {
10225:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_7 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22182              		.loc 1 10225 21 is_stmt 1 view .LVU6170
 22183              		.loc 1 10225 34 is_stmt 0 view .LVU6171
 22184 03dc 95F90F30 		ldrsb	r3, [r5, #15]
 22185              	.LVL2750:
10226:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_7_MSB, data1_u8r);
 22186              		.loc 1 10226 21 is_stmt 1 view .LVU6172
 22187              		.loc 1 10226 31 is_stmt 0 view .LVU6173
 22188 03e0 8DF80730 		strb	r3, [sp, #7]
10227:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22189              		.loc 1 10227 21 is_stmt 1 view .LVU6174
 22190              		.loc 1 10227 41 is_stmt 0 view .LVU6175
 22191 03e4 314B     		ldr	r3, .L1551
 22192              	.LVL2751:
 22193              		.loc 1 10227 41 view .LVU6176
 22194 03e6 1868     		ldr	r0, [r3]
 22195 03e8 C468     		ldr	r4, [r0, #12]
 22196              	.LVL2752:
 22197              		.loc 1 10227 33 view .LVU6177
 22198 03ea 0123     		movs	r3, #1
 22199 03ec 0DF10702 		add	r2, sp, #7
 22200              	.LVL2753:
 22201              		.loc 1 10227 33 view .LVU6178
 22202 03f0 5221     		movs	r1, #82
 22203 03f2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22204 03f4 A047     		blx	r4
 22205              	.LVL2754:
 22206              		.loc 1 10227 30 view .LVU6179
 22207 03f6 56FA80F4 		uxtab	r4, r6, r0
 22208 03fa 64B2     		sxtb	r4, r4
 22209              	.LVL2755:
 22210              	.L1540:
10228:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_7_MSB_REG,
10229:Core/Src/bno055.c ****                                                                 &data2_u8r,
10230:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10231:Core/Src/bno055.c ****                 }
10232:Core/Src/bno055.c **** 
10233:Core/Src/bno055.c ****                 /* write soft iron calibration
10234:Core/Src/bno055.c ****                  * matrix eight value*/
10235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22211              		.loc 1 10235 17 is_stmt 1 view .LVU6180
ARM GAS  /tmp/ccO72alg.s 			page 621


 22212              		.loc 1 10235 37 is_stmt 0 view .LVU6181
 22213 03fc 2B4B     		ldr	r3, .L1551
 22214 03fe 1868     		ldr	r0, [r3]
 22215 0400 0669     		ldr	r6, [r0, #16]
 22216              		.loc 1 10235 29 view .LVU6182
 22217 0402 0123     		movs	r3, #1
 22218 0404 0DF10702 		add	r2, sp, #7
 22219 0408 5321     		movs	r1, #83
 22220 040a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22221 040c B047     		blx	r6
 22222              	.LVL2756:
 22223              		.loc 1 10235 26 view .LVU6183
 22224 040e 54FA80F4 		uxtab	r4, r4, r0
 22225              	.LVL2757:
 22226              		.loc 1 10235 26 view .LVU6184
 22227 0412 E6B2     		uxtb	r6, r4
 22228 0414 64B2     		sxtb	r4, r4
 22229              	.LVL2758:
10236:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_LSB_REG,
10237:Core/Src/bno055.c ****                                                            &data2_u8r,
10238:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10239:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22230              		.loc 1 10239 17 is_stmt 1 view .LVU6185
 22231              		.loc 1 10239 20 is_stmt 0 view .LVU6186
 22232 0416 7CB9     		cbnz	r4, .L1541
10240:Core/Src/bno055.c ****                 {
10241:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 & BNO055_SIC_HEX_0_0_F_F_DATA));
 22233              		.loc 1 10241 21 is_stmt 1 view .LVU6187
 22234              		.loc 1 10241 49 is_stmt 0 view .LVU6188
 22235 0418 B5F91030 		ldrsh	r3, [r5, #16]
 22236              	.LVL2759:
10242:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_LSB, data1_u8r);
 22237              		.loc 1 10242 21 is_stmt 1 view .LVU6189
 22238              		.loc 1 10242 31 is_stmt 0 view .LVU6190
 22239 041c 8DF80730 		strb	r3, [sp, #7]
10243:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22240              		.loc 1 10243 21 is_stmt 1 view .LVU6191
 22241              		.loc 1 10243 41 is_stmt 0 view .LVU6192
 22242 0420 224B     		ldr	r3, .L1551
 22243              	.LVL2760:
 22244              		.loc 1 10243 41 view .LVU6193
 22245 0422 1868     		ldr	r0, [r3]
 22246 0424 C468     		ldr	r4, [r0, #12]
 22247              	.LVL2761:
 22248              		.loc 1 10243 33 view .LVU6194
 22249 0426 0123     		movs	r3, #1
 22250 0428 0DF10702 		add	r2, sp, #7
 22251              	.LVL2762:
 22252              		.loc 1 10243 33 view .LVU6195
 22253 042c 5321     		movs	r1, #83
 22254 042e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22255 0430 A047     		blx	r4
 22256              	.LVL2763:
 22257              		.loc 1 10243 30 view .LVU6196
 22258 0432 56FA80F4 		uxtab	r4, r6, r0
 22259 0436 64B2     		sxtb	r4, r4
 22260              	.LVL2764:
ARM GAS  /tmp/ccO72alg.s 			page 622


 22261              	.L1541:
10244:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_LSB_REG,
10245:Core/Src/bno055.c ****                                                                 &data2_u8r,
10246:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10247:Core/Src/bno055.c ****                 }
10248:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22262              		.loc 1 10248 17 is_stmt 1 view .LVU6197
 22263              		.loc 1 10248 37 is_stmt 0 view .LVU6198
 22264 0438 1C4B     		ldr	r3, .L1551
 22265 043a 1868     		ldr	r0, [r3]
 22266 043c 0669     		ldr	r6, [r0, #16]
 22267              		.loc 1 10248 29 view .LVU6199
 22268 043e 0123     		movs	r3, #1
 22269 0440 0DF10702 		add	r2, sp, #7
 22270 0444 5421     		movs	r1, #84
 22271 0446 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22272 0448 B047     		blx	r6
 22273              	.LVL2765:
 22274              		.loc 1 10248 26 view .LVU6200
 22275 044a 54FA80F4 		uxtab	r4, r4, r0
 22276              	.LVL2766:
 22277              		.loc 1 10248 26 view .LVU6201
 22278 044e E6B2     		uxtb	r6, r4
 22279 0450 64B2     		sxtb	r4, r4
 22280              	.LVL2767:
10249:Core/Src/bno055.c ****                                                            BNO055_SIC_MATRIX_8_MSB_REG,
10250:Core/Src/bno055.c ****                                                            &data2_u8r,
10251:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10252:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22281              		.loc 1 10252 17 is_stmt 1 view .LVU6202
 22282              		.loc 1 10252 20 is_stmt 0 view .LVU6203
 22283 0452 C4B9     		cbnz	r4, .L1523
10253:Core/Src/bno055.c ****                 {
10254:Core/Src/bno055.c ****                     data1_u8r = ((s8)(sic_matrix->sic_8 >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HE
 22284              		.loc 1 10254 21 is_stmt 1 view .LVU6204
 22285              		.loc 1 10254 34 is_stmt 0 view .LVU6205
 22286 0454 95F91130 		ldrsb	r3, [r5, #17]
 22287              	.LVL2768:
10255:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_SIC_MATRIX_8_MSB, data1_u8r);
 22288              		.loc 1 10255 21 is_stmt 1 view .LVU6206
 22289              		.loc 1 10255 31 is_stmt 0 view .LVU6207
 22290 0458 8DF80730 		strb	r3, [sp, #7]
10256:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22291              		.loc 1 10256 21 is_stmt 1 view .LVU6208
 22292              		.loc 1 10256 41 is_stmt 0 view .LVU6209
 22293 045c 134B     		ldr	r3, .L1551
 22294              	.LVL2769:
 22295              		.loc 1 10256 41 view .LVU6210
 22296 045e 1868     		ldr	r0, [r3]
 22297 0460 C468     		ldr	r4, [r0, #12]
 22298              	.LVL2770:
 22299              		.loc 1 10256 33 view .LVU6211
 22300 0462 0123     		movs	r3, #1
 22301 0464 0DF10702 		add	r2, sp, #7
 22302              	.LVL2771:
 22303              		.loc 1 10256 33 view .LVU6212
 22304 0468 5421     		movs	r1, #84
ARM GAS  /tmp/ccO72alg.s 			page 623


 22305 046a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22306 046c A047     		blx	r4
 22307              	.LVL2772:
 22308              		.loc 1 10256 30 view .LVU6213
 22309 046e 56FA80F4 		uxtab	r4, r6, r0
 22310 0472 64B2     		sxtb	r4, r4
 22311              	.LVL2773:
 22312              		.loc 1 10256 30 view .LVU6214
 22313 0474 07E0     		b	.L1523
 22314              	.LVL2774:
 22315              	.L1546:
9997:Core/Src/bno055.c ****             }
 22316              		.loc 1 9997 17 is_stmt 1 view .LVU6215
9997:Core/Src/bno055.c ****             }
 22317              		.loc 1 9997 28 is_stmt 0 view .LVU6216
 22318 0476 FFF7FEFF 		bl	bno055_set_operation_mode
 22319              	.LVL2775:
9997:Core/Src/bno055.c ****             }
 22320              		.loc 1 9997 25 view .LVU6217
 22321 047a 54FA80F4 		uxtab	r4, r4, r0
 22322 047e 64B2     		sxtb	r4, r4
 22323              	.LVL2776:
9997:Core/Src/bno055.c ****             }
 22324              		.loc 1 9997 25 view .LVU6218
 22325 0480 D8E5     		b	.L1524
 22326              	.LVL2777:
 22327              	.L1543:
10257:Core/Src/bno055.c ****                                                                 BNO055_SIC_MATRIX_8_MSB_REG,
10258:Core/Src/bno055.c ****                                                                 &data2_u8r,
10259:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10260:Core/Src/bno055.c ****                 }
10261:Core/Src/bno055.c ****             }
10262:Core/Src/bno055.c ****             else
10263:Core/Src/bno055.c ****             {
10264:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10265:Core/Src/bno055.c ****             }
10266:Core/Src/bno055.c ****         }
10267:Core/Src/bno055.c ****         else
10268:Core/Src/bno055.c ****         {
10269:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 22328              		.loc 1 10269 22 view .LVU6219
 22329 0482 4FF0FF34 		mov	r4, #-1
 22330              	.LVL2778:
 22331              	.L1523:
10270:Core/Src/bno055.c ****         }
10271:Core/Src/bno055.c ****     }
10272:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22332              		.loc 1 10272 5 is_stmt 1 view .LVU6220
 22333              		.loc 1 10272 24 is_stmt 0 view .LVU6221
 22334 0486 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 22335              		.loc 1 10272 8 view .LVU6222
 22336 048a 28B9     		cbnz	r0, .L1547
 22337              	.LVL2779:
 22338              	.L1522:
10273:Core/Src/bno055.c ****     {
10274:Core/Src/bno055.c ****         /* set the operation mode
10275:Core/Src/bno055.c ****          * of previous operation mode*/
ARM GAS  /tmp/ccO72alg.s 			page 624


10276:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10277:Core/Src/bno055.c ****     }
10278:Core/Src/bno055.c **** 
10279:Core/Src/bno055.c ****     return com_rslt;
10280:Core/Src/bno055.c **** }
 22339              		.loc 1 10280 1 view .LVU6223
 22340 048c 2046     		mov	r0, r4
 22341 048e 02B0     		add	sp, sp, #8
 22342              	.LCFI667:
 22343              		.cfi_remember_state
 22344              		.cfi_def_cfa_offset 16
 22345              		@ sp needed
 22346 0490 70BD     		pop	{r4, r5, r6, pc}
 22347              	.LVL2780:
 22348              	.L1544:
 22349              	.LCFI668:
 22350              		.cfi_restore_state
10264:Core/Src/bno055.c ****             }
 22351              		.loc 1 10264 26 view .LVU6224
 22352 0492 4FF0FF34 		mov	r4, #-1
 22353              	.LVL2781:
10264:Core/Src/bno055.c ****             }
 22354              		.loc 1 10264 26 view .LVU6225
 22355 0496 F6E7     		b	.L1523
 22356              	.LVL2782:
 22357              	.L1547:
10276:Core/Src/bno055.c ****     }
 22358              		.loc 1 10276 9 is_stmt 1 view .LVU6226
10276:Core/Src/bno055.c ****     }
 22359              		.loc 1 10276 21 is_stmt 0 view .LVU6227
 22360 0498 FFF7FEFF 		bl	bno055_set_operation_mode
 22361              	.LVL2783:
10276:Core/Src/bno055.c ****     }
 22362              		.loc 1 10276 18 view .LVU6228
 22363 049c 54FA80F4 		uxtab	r4, r4, r0
 22364              	.LVL2784:
10276:Core/Src/bno055.c ****     }
 22365              		.loc 1 10276 18 view .LVU6229
 22366 04a0 64B2     		sxtb	r4, r4
 22367              	.LVL2785:
10276:Core/Src/bno055.c ****     }
 22368              		.loc 1 10276 18 view .LVU6230
 22369 04a2 F3E7     		b	.L1522
 22370              	.LVL2786:
 22371              	.L1542:
9985:Core/Src/bno055.c ****     }
 22372              		.loc 1 9985 16 view .LVU6231
 22373 04a4 6FF07E04 		mvn	r4, #126
 22374 04a8 F0E7     		b	.L1522
 22375              	.L1552:
 22376 04aa 00BF     		.align	2
 22377              	.L1551:
 22378 04ac 00000000 		.word	.LANCHOR0
 22379              		.cfi_endproc
 22380              	.LFE168:
 22382              		.section	.text.bno055_read_accel_offset,"ax",%progbits
 22383              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 625


 22384              		.global	bno055_read_accel_offset
 22385              		.syntax unified
 22386              		.thumb
 22387              		.thumb_func
 22389              	bno055_read_accel_offset:
 22390              	.LVL2787:
 22391              	.LFB169:
10281:Core/Src/bno055.c **** 
10282:Core/Src/bno055.c **** /*!
10283:Core/Src/bno055.c ****  *  @brief This API is used to read accel offset and accel radius
10284:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10285:Core/Src/bno055.c ****  *
10286:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10287:Core/Src/bno055.c ****  *
10288:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10289:Core/Src/bno055.c ****  *      ------------------- | ----------------
10290:Core/Src/bno055.c ****  *               x          |  accel offset x
10291:Core/Src/bno055.c ****  *               y          |  accel offset y
10292:Core/Src/bno055.c ****  *               z          |  accel offset z
10293:Core/Src/bno055.c ****  *               r          |  accel offset r
10294:Core/Src/bno055.c ****  *
10295:Core/Src/bno055.c ****  *
10296:Core/Src/bno055.c ****  *  @return results of bus communication function
10297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10299:Core/Src/bno055.c ****  *
10300:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10301:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10302:Core/Src/bno055.c ****  *
10303:Core/Src/bno055.c ****  *  accel G range   |  offset range
10304:Core/Src/bno055.c ****  * ---------------  |  --------------
10305:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10306:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10307:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10308:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10309:Core/Src/bno055.c ****  *
10310:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10311:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10312:Core/Src/bno055.c ****  */
10313:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10314:Core/Src/bno055.c **** {
 22392              		.loc 1 10314 1 is_stmt 1 view -0
 22393              		.cfi_startproc
 22394              		@ args = 0, pretend = 0, frame = 8
 22395              		@ frame_needed = 0, uses_anonymous_args = 0
 22396              		.loc 1 10314 1 is_stmt 0 view .LVU6233
 22397 0000 70B5     		push	{r4, r5, r6, lr}
 22398              	.LCFI669:
 22399              		.cfi_def_cfa_offset 16
 22400              		.cfi_offset 4, -16
 22401              		.cfi_offset 5, -12
 22402              		.cfi_offset 6, -8
 22403              		.cfi_offset 14, -4
 22404 0002 82B0     		sub	sp, sp, #8
 22405              	.LCFI670:
 22406              		.cfi_def_cfa_offset 24
 22407 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 626


10315:Core/Src/bno055.c ****     /* Variable used to return value of
10316:Core/Src/bno055.c ****      * communication routine*/
10317:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22408              		.loc 1 10317 5 is_stmt 1 view .LVU6234
 22409              	.LVL2788:
10318:Core/Src/bno055.c **** 
10319:Core/Src/bno055.c ****     /* Array holding the accel offset values
10320:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10321:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10322:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10323:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10324:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10325:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10326:Core/Src/bno055.c ****      */
10327:Core/Src/bno055.c ****     u8 data_u8[BNO055_ACCEL_OFFSET_ARRAY] = {
 22410              		.loc 1 10327 5 view .LVU6235
 22411              		.loc 1 10327 8 is_stmt 0 view .LVU6236
 22412 0006 2C4B     		ldr	r3, .L1563
 22413 0008 93E80300 		ldm	r3, {r0, r1}
 22414              	.LVL2789:
 22415              		.loc 1 10327 8 view .LVU6237
 22416 000c 0090     		str	r0, [sp]
 22417 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10328:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10329:Core/Src/bno055.c ****     };
10330:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22418              		.loc 1 10330 5 is_stmt 1 view .LVU6238
 22419              	.LVL2790:
10331:Core/Src/bno055.c **** 
10332:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10333:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22420              		.loc 1 10333 5 view .LVU6239
 22421              		.loc 1 10333 18 is_stmt 0 view .LVU6240
 22422 0012 2A4B     		ldr	r3, .L1563+4
 22423 0014 1B68     		ldr	r3, [r3]
 22424              		.loc 1 10333 8 view .LVU6241
 22425 0016 002B     		cmp	r3, #0
 22426 0018 42D0     		beq	.L1557
10334:Core/Src/bno055.c ****     {
10335:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10336:Core/Src/bno055.c ****     }
10337:Core/Src/bno055.c ****     else
10338:Core/Src/bno055.c ****     {
10339:Core/Src/bno055.c ****         /*condition check for page, accel offset is
10340:Core/Src/bno055.c ****          * available in the page zero*/
10341:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 22427              		.loc 1 10341 9 is_stmt 1 view .LVU6242
 22428              		.loc 1 10341 21 is_stmt 0 view .LVU6243
 22429 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22430              		.loc 1 10341 12 view .LVU6244
 22431 001c 002B     		cmp	r3, #0
 22432 001e 39D1     		bne	.L1562
 22433              	.LVL2791:
 22434              	.L1555:
10342:Core/Src/bno055.c ****         {
10343:Core/Src/bno055.c ****             /* Write the page zero*/
10344:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
ARM GAS  /tmp/ccO72alg.s 			page 627


10345:Core/Src/bno055.c ****         }
10346:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
 22435              		.loc 1 10346 53 discriminator 1 view .LVU6245
 22436 0020 264B     		ldr	r3, .L1563+4
 22437 0022 1B68     		ldr	r3, [r3]
 22438 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22439              		.loc 1 10346 41 discriminator 1 view .LVU6246
 22440 0026 002B     		cmp	r3, #0
 22441 0028 3DD1     		bne	.L1558
 22442              	.L1556:
10347:Core/Src/bno055.c ****         {
10348:Core/Src/bno055.c ****             /* Read accel offset value it is six bytes of data*/
10349:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22443              		.loc 1 10349 13 is_stmt 1 view .LVU6247
 22444              		.loc 1 10349 32 is_stmt 0 view .LVU6248
 22445 002a 244B     		ldr	r3, .L1563+4
 22446 002c 1868     		ldr	r0, [r3]
 22447 002e 0569     		ldr	r5, [r0, #16]
 22448              		.loc 1 10349 24 view .LVU6249
 22449 0030 0623     		movs	r3, #6
 22450 0032 6A46     		mov	r2, sp
 22451 0034 5521     		movs	r1, #85
 22452 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22453 0038 A847     		blx	r5
 22454              	.LVL2792:
10350:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_X_LSB_REG,
10351:Core/Src/bno055.c ****                                                       data_u8,
10352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_OFFSET_ARRAY);
10353:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 22455              		.loc 1 10353 13 is_stmt 1 view .LVU6250
 22456              		.loc 1 10353 16 is_stmt 0 view .LVU6251
 22457 003a 0546     		mov	r5, r0
 22458 003c 0028     		cmp	r0, #0
 22459 003e 35D1     		bne	.L1559
10354:Core/Src/bno055.c ****             {
10355:Core/Src/bno055.c ****                 /* Read accel x offset value*/
10356:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22460              		.loc 1 10356 17 is_stmt 1 view .LVU6252
10357:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10358:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22461              		.loc 1 10358 17 view .LVU6253
10359:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10360:Core/Src/bno055.c ****                 accel_offset->x =
 22462              		.loc 1 10360 17 view .LVU6254
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22463              		.loc 1 10361 34 is_stmt 0 view .LVU6255
 22464 0040 9DF90120 		ldrsb	r2, [sp, #1]
10362:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 22465              		.loc 1 10362 35 view .LVU6256
 22466 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10361:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22467              		.loc 1 10361 21 view .LVU6257
 22468 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10360:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 22469              		.loc 1 10360 33 view .LVU6258
 22470 004c 2380     		strh	r3, [r4]	@ movhi
10363:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 628


10364:Core/Src/bno055.c ****                 /* Read accel y offset value*/
10365:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22471              		.loc 1 10365 17 is_stmt 1 view .LVU6259
10366:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10367:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22472              		.loc 1 10367 17 view .LVU6260
10368:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10369:Core/Src/bno055.c ****                 accel_offset->y =
 22473              		.loc 1 10369 17 view .LVU6261
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22474              		.loc 1 10370 34 is_stmt 0 view .LVU6262
 22475 004e 9DF90320 		ldrsb	r2, [sp, #3]
10371:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 22476              		.loc 1 10371 35 view .LVU6263
 22477 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10370:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22478              		.loc 1 10370 21 view .LVU6264
 22479 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10369:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 22480              		.loc 1 10369 33 view .LVU6265
 22481 005a 6380     		strh	r3, [r4, #2]	@ movhi
10372:Core/Src/bno055.c **** 
10373:Core/Src/bno055.c ****                 /* Read accel z offset value*/
10374:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22482              		.loc 1 10374 17 is_stmt 1 view .LVU6266
10375:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10376:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 22483              		.loc 1 10376 17 view .LVU6267
10377:Core/Src/bno055.c ****                                                                                BNO055_ACCEL_OFFSET_
10378:Core/Src/bno055.c ****                 accel_offset->z =
 22484              		.loc 1 10378 17 view .LVU6268
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22485              		.loc 1 10379 34 is_stmt 0 view .LVU6269
 22486 005c 9DF90520 		ldrsb	r2, [sp, #5]
10380:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 22487              		.loc 1 10380 35 view .LVU6270
 22488 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10379:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22489              		.loc 1 10379 21 view .LVU6271
 22490 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10378:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 22491              		.loc 1 10378 33 view .LVU6272
 22492 0068 A380     		strh	r3, [r4, #4]	@ movhi
10381:Core/Src/bno055.c **** 
10382:Core/Src/bno055.c ****                 /* Read accel radius value
10383:Core/Src/bno055.c ****                  * it is two bytes of data*/
10384:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22493              		.loc 1 10384 17 is_stmt 1 view .LVU6273
 22494              		.loc 1 10384 37 is_stmt 0 view .LVU6274
 22495 006a 144B     		ldr	r3, .L1563+4
 22496 006c 1868     		ldr	r0, [r3]
 22497              	.LVL2793:
 22498              		.loc 1 10384 37 view .LVU6275
 22499 006e 0669     		ldr	r6, [r0, #16]
 22500              		.loc 1 10384 29 view .LVU6276
 22501 0070 0223     		movs	r3, #2
 22502 0072 6A46     		mov	r2, sp
ARM GAS  /tmp/ccO72alg.s 			page 629


 22503 0074 6721     		movs	r1, #103
 22504 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22505 0078 B047     		blx	r6
 22506              	.LVL2794:
 22507              		.loc 1 10384 26 view .LVU6277
 22508 007a 55FA80F0 		uxtab	r0, r5, r0
 22509 007e 40B2     		sxtb	r0, r0
 22510              	.LVL2795:
10385:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10386:Core/Src/bno055.c ****                                                            data_u8,
10387:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10388:Core/Src/bno055.c **** 
10389:Core/Src/bno055.c ****                 /* Array holding the accel radius values
10390:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_LSB] - radius->LSB
10391:Core/Src/bno055.c ****                  * data_u8[BNO055_OFFSET_RADIUS_MSB] - radius->MSB
10392:Core/Src/bno055.c ****                  */
10393:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22511              		.loc 1 10393 17 is_stmt 1 view .LVU6278
 22512              		.loc 1 10393 20 is_stmt 0 view .LVU6279
 22513 0080 B8B9     		cbnz	r0, .L1560
10394:Core/Src/bno055.c ****                 {
10395:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22514              		.loc 1 10395 21 is_stmt 1 view .LVU6280
10396:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_LSB
10397:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 22515              		.loc 1 10397 21 view .LVU6281
10398:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_RADIUS_MSB
10399:Core/Src/bno055.c ****                     accel_offset->r =
 22516              		.loc 1 10399 21 view .LVU6282
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22517              		.loc 1 10400 38 is_stmt 0 view .LVU6283
 22518 0082 9DF90120 		ldrsb	r2, [sp, #1]
10401:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 22519              		.loc 1 10401 39 view .LVU6284
 22520 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10400:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22521              		.loc 1 10400 25 view .LVU6285
 22522 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10399:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 22523              		.loc 1 10399 37 view .LVU6286
 22524 008e E380     		strh	r3, [r4, #6]	@ movhi
 22525              	.LVL2796:
 22526              	.L1554:
10402:Core/Src/bno055.c ****                 }
10403:Core/Src/bno055.c ****                 else
10404:Core/Src/bno055.c ****                 {
10405:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10406:Core/Src/bno055.c ****                 }
10407:Core/Src/bno055.c ****             }
10408:Core/Src/bno055.c ****             else
10409:Core/Src/bno055.c ****             {
10410:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10411:Core/Src/bno055.c ****             }
10412:Core/Src/bno055.c ****         }
10413:Core/Src/bno055.c ****         else
10414:Core/Src/bno055.c ****         {
10415:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 630


10416:Core/Src/bno055.c ****         }
10417:Core/Src/bno055.c ****     }
10418:Core/Src/bno055.c **** 
10419:Core/Src/bno055.c ****     return com_rslt;
10420:Core/Src/bno055.c **** }
 22527              		.loc 1 10420 1 view .LVU6287
 22528 0090 02B0     		add	sp, sp, #8
 22529              	.LCFI671:
 22530              		.cfi_remember_state
 22531              		.cfi_def_cfa_offset 16
 22532              		@ sp needed
 22533 0092 70BD     		pop	{r4, r5, r6, pc}
 22534              	.LVL2797:
 22535              	.L1562:
 22536              	.LCFI672:
 22537              		.cfi_restore_state
10344:Core/Src/bno055.c ****         }
 22538              		.loc 1 10344 13 is_stmt 1 view .LVU6288
10344:Core/Src/bno055.c ****         }
 22539              		.loc 1 10344 23 is_stmt 0 view .LVU6289
 22540 0094 0020     		movs	r0, #0
 22541 0096 FFF7FEFF 		bl	bno055_write_page_id
 22542              	.LVL2798:
10346:Core/Src/bno055.c ****         {
 22543              		.loc 1 10346 9 is_stmt 1 view .LVU6290
10346:Core/Src/bno055.c ****         {
 22544              		.loc 1 10346 12 is_stmt 0 view .LVU6291
 22545 009a 0028     		cmp	r0, #0
 22546 009c C5D0     		beq	.L1556
 22547 009e BFE7     		b	.L1555
 22548              	.LVL2799:
 22549              	.L1557:
10335:Core/Src/bno055.c ****     }
 22550              		.loc 1 10335 16 view .LVU6292
 22551 00a0 6FF07E00 		mvn	r0, #126
 22552 00a4 F4E7     		b	.L1554
 22553              	.LVL2800:
 22554              	.L1558:
10415:Core/Src/bno055.c ****         }
 22555              		.loc 1 10415 22 view .LVU6293
 22556 00a6 4FF0FF30 		mov	r0, #-1
 22557 00aa F1E7     		b	.L1554
 22558              	.LVL2801:
 22559              	.L1559:
10410:Core/Src/bno055.c ****             }
 22560              		.loc 1 10410 26 view .LVU6294
 22561 00ac 4FF0FF30 		mov	r0, #-1
 22562              	.LVL2802:
10410:Core/Src/bno055.c ****             }
 22563              		.loc 1 10410 26 view .LVU6295
 22564 00b0 EEE7     		b	.L1554
 22565              	.LVL2803:
 22566              	.L1560:
10405:Core/Src/bno055.c ****                 }
 22567              		.loc 1 10405 30 view .LVU6296
 22568 00b2 4FF0FF30 		mov	r0, #-1
 22569              	.LVL2804:
ARM GAS  /tmp/ccO72alg.s 			page 631


10405:Core/Src/bno055.c ****                 }
 22570              		.loc 1 10405 30 view .LVU6297
 22571 00b6 EBE7     		b	.L1554
 22572              	.L1564:
 22573              		.align	2
 22574              	.L1563:
 22575 00b8 00000000 		.word	.LANCHOR1
 22576 00bc 00000000 		.word	.LANCHOR0
 22577              		.cfi_endproc
 22578              	.LFE169:
 22580              		.section	.text.bno055_write_accel_offset,"ax",%progbits
 22581              		.align	1
 22582              		.global	bno055_write_accel_offset
 22583              		.syntax unified
 22584              		.thumb
 22585              		.thumb_func
 22587              	bno055_write_accel_offset:
 22588              	.LVL2805:
 22589              	.LFB170:
10421:Core/Src/bno055.c **** 
10422:Core/Src/bno055.c **** /*!
10423:Core/Src/bno055.c ****  *  @brief This API is used to write accel offset and accel radius
10424:Core/Src/bno055.c ****  *  offset form register 0x55 to 0x5A and radius form 0x67 and 0x68
10425:Core/Src/bno055.c ****  *
10426:Core/Src/bno055.c ****  *  @param accel_offset : The value of accel offset and radius
10427:Core/Src/bno055.c ****  *
10428:Core/Src/bno055.c ****  *      bno055_accel_offset_t |     result
10429:Core/Src/bno055.c ****  *      ------------------- | ----------------
10430:Core/Src/bno055.c ****  *               x          |  accel offset x
10431:Core/Src/bno055.c ****  *               y          |  accel offset y
10432:Core/Src/bno055.c ****  *               z          |  accel offset z
10433:Core/Src/bno055.c ****  *               r          |  accel offset r
10434:Core/Src/bno055.c ****  *
10435:Core/Src/bno055.c ****  *
10436:Core/Src/bno055.c ****  *  @return results of bus communication function
10437:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10438:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10439:Core/Src/bno055.c ****  *
10440:Core/Src/bno055.c ****  *  @note  The range of the accel offset varies based on
10441:Core/Src/bno055.c ****  *  the G-range of accel sensor.
10442:Core/Src/bno055.c ****  *
10443:Core/Src/bno055.c ****  *  accel G range   |  offset range
10444:Core/Src/bno055.c ****  * ---------------  |  --------------
10445:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_2G  |   +/-2000
10446:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_4G  |   +/-4000
10447:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_8G  |   +/-8000
10448:Core/Src/bno055.c ****  *  BNO055_ACCEL_RANGE_16G |   +/-16000
10449:Core/Src/bno055.c ****  *
10450:Core/Src/bno055.c ****  *  accel G range can be configured by using the
10451:Core/Src/bno055.c ****  *  bno055_set_accel_range() API
10452:Core/Src/bno055.c ****  */
10453:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_accel_offset(struct bno055_accel_offset_t  *accel_offset)
10454:Core/Src/bno055.c **** {
 22590              		.loc 1 10454 1 is_stmt 1 view -0
 22591              		.cfi_startproc
 22592              		@ args = 0, pretend = 0, frame = 8
 22593              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccO72alg.s 			page 632


 22594              		.loc 1 10454 1 is_stmt 0 view .LVU6299
 22595 0000 70B5     		push	{r4, r5, r6, lr}
 22596              	.LCFI673:
 22597              		.cfi_def_cfa_offset 16
 22598              		.cfi_offset 4, -16
 22599              		.cfi_offset 5, -12
 22600              		.cfi_offset 6, -8
 22601              		.cfi_offset 14, -4
 22602 0002 82B0     		sub	sp, sp, #8
 22603              	.LCFI674:
 22604              		.cfi_def_cfa_offset 24
10455:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 22605              		.loc 1 10455 5 is_stmt 1 view .LVU6300
 22606              	.LVL2806:
10456:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 22607              		.loc 1 10456 5 view .LVU6301
10457:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 22608              		.loc 1 10457 5 view .LVU6302
 22609              		.loc 1 10457 8 is_stmt 0 view .LVU6303
 22610 0004 0023     		movs	r3, #0
 22611 0006 8DF80730 		strb	r3, [sp, #7]
10458:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 22612              		.loc 1 10458 5 is_stmt 1 view .LVU6304
 22613              		.loc 1 10458 8 is_stmt 0 view .LVU6305
 22614 000a 8DF80630 		strb	r3, [sp, #6]
10459:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 22615              		.loc 1 10459 5 is_stmt 1 view .LVU6306
 22616              	.LVL2807:
10460:Core/Src/bno055.c **** 
10461:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10462:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 22617              		.loc 1 10462 5 view .LVU6307
 22618              		.loc 1 10462 18 is_stmt 0 view .LVU6308
 22619 000e 8C4B     		ldr	r3, .L1582
 22620 0010 1B68     		ldr	r3, [r3]
 22621              		.loc 1 10462 8 view .LVU6309
 22622 0012 002B     		cmp	r3, #0
 22623 0014 00F01081 		beq	.L1576
 22624 0018 0546     		mov	r5, r0
10463:Core/Src/bno055.c ****     {
10464:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10465:Core/Src/bno055.c ****     }
10466:Core/Src/bno055.c ****     else
10467:Core/Src/bno055.c ****     {
10468:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10469:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10470:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10471:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 22625              		.loc 1 10471 9 is_stmt 1 view .LVU6310
 22626              		.loc 1 10471 19 is_stmt 0 view .LVU6311
 22627 001a 0DF10600 		add	r0, sp, #6
 22628              	.LVL2808:
 22629              		.loc 1 10471 19 view .LVU6312
 22630 001e FFF7FEFF 		bl	bno055_get_operation_mode
 22631              	.LVL2809:
10472:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 22632              		.loc 1 10472 9 is_stmt 1 view .LVU6313
ARM GAS  /tmp/ccO72alg.s 			page 633


 22633              		.loc 1 10472 12 is_stmt 0 view .LVU6314
 22634 0022 0446     		mov	r4, r0
 22635 0024 0028     		cmp	r0, #0
 22636 0026 40F0F680 		bne	.L1577
10473:Core/Src/bno055.c ****         {
10474:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 22637              		.loc 1 10474 13 is_stmt 1 view .LVU6315
 22638              		.loc 1 10474 32 is_stmt 0 view .LVU6316
 22639 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 22640              		.loc 1 10474 16 view .LVU6317
 22641 002e 002B     		cmp	r3, #0
 22642 0030 40F0EB80 		bne	.L1580
 22643              	.LVL2810:
 22644              	.L1568:
10475:Core/Src/bno055.c ****             {
10476:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10477:Core/Src/bno055.c ****             }
10478:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 22645              		.loc 1 10478 13 is_stmt 1 view .LVU6318
 22646              		.loc 1 10478 16 is_stmt 0 view .LVU6319
 22647 0034 002C     		cmp	r4, #0
 22648 0036 40F0F680 		bne	.L1578
10479:Core/Src/bno055.c ****             {
10480:Core/Src/bno055.c ****                 /* write accel offset x value*/
10481:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22649              		.loc 1 10481 17 is_stmt 1 view .LVU6320
 22650              		.loc 1 10481 36 is_stmt 0 view .LVU6321
 22651 003a 814B     		ldr	r3, .L1582
 22652 003c 1868     		ldr	r0, [r3]
 22653 003e 0469     		ldr	r4, [r0, #16]
 22654              	.LVL2811:
 22655              		.loc 1 10481 28 view .LVU6322
 22656 0040 0123     		movs	r3, #1
 22657 0042 0DF10702 		add	r2, sp, #7
 22658 0046 5521     		movs	r1, #85
 22659 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22660 004a A047     		blx	r4
 22661              	.LVL2812:
10482:Core/Src/bno055.c ****                                                           BNO055_ACCEL_OFFSET_X_LSB_REG,
10483:Core/Src/bno055.c ****                                                           &data2_u8r,
10484:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10485:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22662              		.loc 1 10485 17 is_stmt 1 view .LVU6323
 22663              		.loc 1 10485 20 is_stmt 0 view .LVU6324
 22664 004c 0446     		mov	r4, r0
 22665 004e 78B9     		cbnz	r0, .L1569
10486:Core/Src/bno055.c ****                 {
10487:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 22666              		.loc 1 10487 21 is_stmt 1 view .LVU6325
 22667              		.loc 1 10487 51 is_stmt 0 view .LVU6326
 22668 0050 B5F90030 		ldrsh	r3, [r5]
 22669              	.LVL2813:
10488:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_LSB, data1_u8r
 22670              		.loc 1 10488 21 is_stmt 1 view .LVU6327
 22671              		.loc 1 10488 31 is_stmt 0 view .LVU6328
 22672 0054 8DF80730 		strb	r3, [sp, #7]
10489:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 634


 22673              		.loc 1 10489 21 is_stmt 1 view .LVU6329
 22674              		.loc 1 10489 41 is_stmt 0 view .LVU6330
 22675 0058 794B     		ldr	r3, .L1582
 22676              	.LVL2814:
 22677              		.loc 1 10489 41 view .LVU6331
 22678 005a 1868     		ldr	r0, [r3]
 22679              	.LVL2815:
 22680              		.loc 1 10489 41 view .LVU6332
 22681 005c C668     		ldr	r6, [r0, #12]
 22682              		.loc 1 10489 33 view .LVU6333
 22683 005e 0123     		movs	r3, #1
 22684 0060 0DF10702 		add	r2, sp, #7
 22685              	.LVL2816:
 22686              		.loc 1 10489 33 view .LVU6334
 22687 0064 5521     		movs	r1, #85
 22688 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22689 0068 B047     		blx	r6
 22690              	.LVL2817:
 22691              		.loc 1 10489 30 view .LVU6335
 22692 006a 54FA80F4 		uxtab	r4, r4, r0
 22693 006e 64B2     		sxtb	r4, r4
 22694              	.LVL2818:
 22695              	.L1569:
10490:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_LSB_REG,
10491:Core/Src/bno055.c ****                                                                 &data2_u8r,
10492:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10493:Core/Src/bno055.c ****                 }
10494:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22696              		.loc 1 10494 17 is_stmt 1 view .LVU6336
 22697              		.loc 1 10494 37 is_stmt 0 view .LVU6337
 22698 0070 734B     		ldr	r3, .L1582
 22699 0072 1868     		ldr	r0, [r3]
 22700 0074 0669     		ldr	r6, [r0, #16]
 22701              		.loc 1 10494 29 view .LVU6338
 22702 0076 0123     		movs	r3, #1
 22703 0078 0DF10702 		add	r2, sp, #7
 22704 007c 5621     		movs	r1, #86
 22705 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22706 0080 B047     		blx	r6
 22707              	.LVL2819:
 22708              		.loc 1 10494 26 view .LVU6339
 22709 0082 54FA80F4 		uxtab	r4, r4, r0
 22710              	.LVL2820:
 22711              		.loc 1 10494 26 view .LVU6340
 22712 0086 E6B2     		uxtb	r6, r4
 22713 0088 64B2     		sxtb	r4, r4
 22714              	.LVL2821:
10495:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_X_MSB_REG,
10496:Core/Src/bno055.c ****                                                            &data2_u8r,
10497:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10498:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22715              		.loc 1 10498 17 is_stmt 1 view .LVU6341
 22716              		.loc 1 10498 20 is_stmt 0 view .LVU6342
 22717 008a 7CB9     		cbnz	r4, .L1570
10499:Core/Src/bno055.c ****                 {
10500:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22718              		.loc 1 10500 21 is_stmt 1 view .LVU6343
ARM GAS  /tmp/ccO72alg.s 			page 635


 22719              		.loc 1 10500 34 is_stmt 0 view .LVU6344
 22720 008c 95F90130 		ldrsb	r3, [r5, #1]
 22721              	.LVL2822:
10501:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_X_MSB, data1_u8r
 22722              		.loc 1 10501 21 is_stmt 1 view .LVU6345
 22723              		.loc 1 10501 31 is_stmt 0 view .LVU6346
 22724 0090 8DF80730 		strb	r3, [sp, #7]
10502:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22725              		.loc 1 10502 21 is_stmt 1 view .LVU6347
 22726              		.loc 1 10502 41 is_stmt 0 view .LVU6348
 22727 0094 6A4B     		ldr	r3, .L1582
 22728              	.LVL2823:
 22729              		.loc 1 10502 41 view .LVU6349
 22730 0096 1868     		ldr	r0, [r3]
 22731 0098 C468     		ldr	r4, [r0, #12]
 22732              	.LVL2824:
 22733              		.loc 1 10502 33 view .LVU6350
 22734 009a 0123     		movs	r3, #1
 22735 009c 0DF10702 		add	r2, sp, #7
 22736              	.LVL2825:
 22737              		.loc 1 10502 33 view .LVU6351
 22738 00a0 5621     		movs	r1, #86
 22739 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22740 00a4 A047     		blx	r4
 22741              	.LVL2826:
 22742              		.loc 1 10502 30 view .LVU6352
 22743 00a6 56FA80F4 		uxtab	r4, r6, r0
 22744 00aa 64B2     		sxtb	r4, r4
 22745              	.LVL2827:
 22746              	.L1570:
10503:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_X_MSB_REG,
10504:Core/Src/bno055.c ****                                                                 &data2_u8r,
10505:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10506:Core/Src/bno055.c ****                 }
10507:Core/Src/bno055.c **** 
10508:Core/Src/bno055.c ****                 /* write accel offset y value*/
10509:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22747              		.loc 1 10509 17 is_stmt 1 view .LVU6353
 22748              		.loc 1 10509 37 is_stmt 0 view .LVU6354
 22749 00ac 644B     		ldr	r3, .L1582
 22750 00ae 1868     		ldr	r0, [r3]
 22751 00b0 0669     		ldr	r6, [r0, #16]
 22752              		.loc 1 10509 29 view .LVU6355
 22753 00b2 0123     		movs	r3, #1
 22754 00b4 0DF10702 		add	r2, sp, #7
 22755 00b8 5721     		movs	r1, #87
 22756 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22757 00bc B047     		blx	r6
 22758              	.LVL2828:
 22759              		.loc 1 10509 26 view .LVU6356
 22760 00be 54FA80F4 		uxtab	r4, r4, r0
 22761              	.LVL2829:
 22762              		.loc 1 10509 26 view .LVU6357
 22763 00c2 E6B2     		uxtb	r6, r4
 22764 00c4 64B2     		sxtb	r4, r4
 22765              	.LVL2830:
10510:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_LSB_REG,
ARM GAS  /tmp/ccO72alg.s 			page 636


10511:Core/Src/bno055.c ****                                                            &data2_u8r,
10512:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10513:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22766              		.loc 1 10513 17 is_stmt 1 view .LVU6358
 22767              		.loc 1 10513 20 is_stmt 0 view .LVU6359
 22768 00c6 7CB9     		cbnz	r4, .L1571
10514:Core/Src/bno055.c ****                 {
10515:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 22769              		.loc 1 10515 21 is_stmt 1 view .LVU6360
 22770              		.loc 1 10515 51 is_stmt 0 view .LVU6361
 22771 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 22772              	.LVL2831:
10516:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_LSB, data1_u8r
 22773              		.loc 1 10516 21 is_stmt 1 view .LVU6362
 22774              		.loc 1 10516 31 is_stmt 0 view .LVU6363
 22775 00cc 8DF80730 		strb	r3, [sp, #7]
10517:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22776              		.loc 1 10517 21 is_stmt 1 view .LVU6364
 22777              		.loc 1 10517 41 is_stmt 0 view .LVU6365
 22778 00d0 5B4B     		ldr	r3, .L1582
 22779              	.LVL2832:
 22780              		.loc 1 10517 41 view .LVU6366
 22781 00d2 1868     		ldr	r0, [r3]
 22782 00d4 C468     		ldr	r4, [r0, #12]
 22783              	.LVL2833:
 22784              		.loc 1 10517 33 view .LVU6367
 22785 00d6 0123     		movs	r3, #1
 22786 00d8 0DF10702 		add	r2, sp, #7
 22787              	.LVL2834:
 22788              		.loc 1 10517 33 view .LVU6368
 22789 00dc 5721     		movs	r1, #87
 22790 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22791 00e0 A047     		blx	r4
 22792              	.LVL2835:
 22793              		.loc 1 10517 30 view .LVU6369
 22794 00e2 56FA80F4 		uxtab	r4, r6, r0
 22795 00e6 64B2     		sxtb	r4, r4
 22796              	.LVL2836:
 22797              	.L1571:
10518:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_LSB_REG,
10519:Core/Src/bno055.c ****                                                                 &data2_u8r,
10520:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10521:Core/Src/bno055.c ****                 }
10522:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22798              		.loc 1 10522 17 is_stmt 1 view .LVU6370
 22799              		.loc 1 10522 37 is_stmt 0 view .LVU6371
 22800 00e8 554B     		ldr	r3, .L1582
 22801 00ea 1868     		ldr	r0, [r3]
 22802 00ec 0669     		ldr	r6, [r0, #16]
 22803              		.loc 1 10522 29 view .LVU6372
 22804 00ee 0123     		movs	r3, #1
 22805 00f0 0DF10702 		add	r2, sp, #7
 22806 00f4 5821     		movs	r1, #88
 22807 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22808 00f8 B047     		blx	r6
 22809              	.LVL2837:
 22810              		.loc 1 10522 26 view .LVU6373
ARM GAS  /tmp/ccO72alg.s 			page 637


 22811 00fa 54FA80F4 		uxtab	r4, r4, r0
 22812              	.LVL2838:
 22813              		.loc 1 10522 26 view .LVU6374
 22814 00fe E6B2     		uxtb	r6, r4
 22815 0100 64B2     		sxtb	r4, r4
 22816              	.LVL2839:
10523:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Y_MSB_REG,
10524:Core/Src/bno055.c ****                                                            &data2_u8r,
10525:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10526:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22817              		.loc 1 10526 17 is_stmt 1 view .LVU6375
 22818              		.loc 1 10526 20 is_stmt 0 view .LVU6376
 22819 0102 7CB9     		cbnz	r4, .L1572
10527:Core/Src/bno055.c ****                 {
10528:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22820              		.loc 1 10528 21 is_stmt 1 view .LVU6377
 22821              		.loc 1 10528 34 is_stmt 0 view .LVU6378
 22822 0104 95F90330 		ldrsb	r3, [r5, #3]
 22823              	.LVL2840:
10529:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Y_MSB, data1_u8r
 22824              		.loc 1 10529 21 is_stmt 1 view .LVU6379
 22825              		.loc 1 10529 31 is_stmt 0 view .LVU6380
 22826 0108 8DF80730 		strb	r3, [sp, #7]
10530:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22827              		.loc 1 10530 21 is_stmt 1 view .LVU6381
 22828              		.loc 1 10530 41 is_stmt 0 view .LVU6382
 22829 010c 4C4B     		ldr	r3, .L1582
 22830              	.LVL2841:
 22831              		.loc 1 10530 41 view .LVU6383
 22832 010e 1868     		ldr	r0, [r3]
 22833 0110 C468     		ldr	r4, [r0, #12]
 22834              	.LVL2842:
 22835              		.loc 1 10530 33 view .LVU6384
 22836 0112 0123     		movs	r3, #1
 22837 0114 0DF10702 		add	r2, sp, #7
 22838              	.LVL2843:
 22839              		.loc 1 10530 33 view .LVU6385
 22840 0118 5821     		movs	r1, #88
 22841 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22842 011c A047     		blx	r4
 22843              	.LVL2844:
 22844              		.loc 1 10530 30 view .LVU6386
 22845 011e 56FA80F4 		uxtab	r4, r6, r0
 22846 0122 64B2     		sxtb	r4, r4
 22847              	.LVL2845:
 22848              	.L1572:
10531:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Y_MSB_REG,
10532:Core/Src/bno055.c ****                                                                 &data2_u8r,
10533:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10534:Core/Src/bno055.c ****                 }
10535:Core/Src/bno055.c **** 
10536:Core/Src/bno055.c ****                 /* write accel offset z value*/
10537:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22849              		.loc 1 10537 17 is_stmt 1 view .LVU6387
 22850              		.loc 1 10537 37 is_stmt 0 view .LVU6388
 22851 0124 464B     		ldr	r3, .L1582
 22852 0126 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 638


 22853 0128 0669     		ldr	r6, [r0, #16]
 22854              		.loc 1 10537 29 view .LVU6389
 22855 012a 0123     		movs	r3, #1
 22856 012c 0DF10702 		add	r2, sp, #7
 22857 0130 5921     		movs	r1, #89
 22858 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22859 0134 B047     		blx	r6
 22860              	.LVL2846:
 22861              		.loc 1 10537 26 view .LVU6390
 22862 0136 54FA80F4 		uxtab	r4, r4, r0
 22863              	.LVL2847:
 22864              		.loc 1 10537 26 view .LVU6391
 22865 013a E6B2     		uxtb	r6, r4
 22866 013c 64B2     		sxtb	r4, r4
 22867              	.LVL2848:
10538:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_LSB_REG,
10539:Core/Src/bno055.c ****                                                            &data2_u8r,
10540:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10541:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22868              		.loc 1 10541 17 is_stmt 1 view .LVU6392
 22869              		.loc 1 10541 20 is_stmt 0 view .LVU6393
 22870 013e 7CB9     		cbnz	r4, .L1573
10542:Core/Src/bno055.c ****                 {
10543:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 22871              		.loc 1 10543 21 is_stmt 1 view .LVU6394
 22872              		.loc 1 10543 51 is_stmt 0 view .LVU6395
 22873 0140 B5F90430 		ldrsh	r3, [r5, #4]
 22874              	.LVL2849:
10544:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_LSB, data1_u8r
 22875              		.loc 1 10544 21 is_stmt 1 view .LVU6396
 22876              		.loc 1 10544 31 is_stmt 0 view .LVU6397
 22877 0144 8DF80730 		strb	r3, [sp, #7]
10545:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22878              		.loc 1 10545 21 is_stmt 1 view .LVU6398
 22879              		.loc 1 10545 41 is_stmt 0 view .LVU6399
 22880 0148 3D4B     		ldr	r3, .L1582
 22881              	.LVL2850:
 22882              		.loc 1 10545 41 view .LVU6400
 22883 014a 1868     		ldr	r0, [r3]
 22884 014c C468     		ldr	r4, [r0, #12]
 22885              	.LVL2851:
 22886              		.loc 1 10545 33 view .LVU6401
 22887 014e 0123     		movs	r3, #1
 22888 0150 0DF10702 		add	r2, sp, #7
 22889              	.LVL2852:
 22890              		.loc 1 10545 33 view .LVU6402
 22891 0154 5921     		movs	r1, #89
 22892 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22893 0158 A047     		blx	r4
 22894              	.LVL2853:
 22895              		.loc 1 10545 30 view .LVU6403
 22896 015a 56FA80F4 		uxtab	r4, r6, r0
 22897 015e 64B2     		sxtb	r4, r4
 22898              	.LVL2854:
 22899              	.L1573:
10546:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_LSB_REG,
10547:Core/Src/bno055.c ****                                                                 &data2_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 639


10548:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10549:Core/Src/bno055.c ****                 }
10550:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22900              		.loc 1 10550 17 is_stmt 1 view .LVU6404
 22901              		.loc 1 10550 37 is_stmt 0 view .LVU6405
 22902 0160 374B     		ldr	r3, .L1582
 22903 0162 1868     		ldr	r0, [r3]
 22904 0164 0669     		ldr	r6, [r0, #16]
 22905              		.loc 1 10550 29 view .LVU6406
 22906 0166 0123     		movs	r3, #1
 22907 0168 0DF10702 		add	r2, sp, #7
 22908 016c 5A21     		movs	r1, #90
 22909 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22910 0170 B047     		blx	r6
 22911              	.LVL2855:
 22912              		.loc 1 10550 26 view .LVU6407
 22913 0172 54FA80F4 		uxtab	r4, r4, r0
 22914              	.LVL2856:
 22915              		.loc 1 10550 26 view .LVU6408
 22916 0176 E6B2     		uxtb	r6, r4
 22917 0178 64B2     		sxtb	r4, r4
 22918              	.LVL2857:
10551:Core/Src/bno055.c ****                                                            BNO055_ACCEL_OFFSET_Z_MSB_REG,
10552:Core/Src/bno055.c ****                                                            &data2_u8r,
10553:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10554:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22919              		.loc 1 10554 17 is_stmt 1 view .LVU6409
 22920              		.loc 1 10554 20 is_stmt 0 view .LVU6410
 22921 017a 7CB9     		cbnz	r4, .L1574
10555:Core/Src/bno055.c ****                 {
10556:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 22922              		.loc 1 10556 21 is_stmt 1 view .LVU6411
 22923              		.loc 1 10556 34 is_stmt 0 view .LVU6412
 22924 017c 95F90530 		ldrsb	r3, [r5, #5]
 22925              	.LVL2858:
10557:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_OFFSET_Z_MSB, data1_u8r
 22926              		.loc 1 10557 21 is_stmt 1 view .LVU6413
 22927              		.loc 1 10557 31 is_stmt 0 view .LVU6414
 22928 0180 8DF80730 		strb	r3, [sp, #7]
10558:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22929              		.loc 1 10558 21 is_stmt 1 view .LVU6415
 22930              		.loc 1 10558 41 is_stmt 0 view .LVU6416
 22931 0184 2E4B     		ldr	r3, .L1582
 22932              	.LVL2859:
 22933              		.loc 1 10558 41 view .LVU6417
 22934 0186 1868     		ldr	r0, [r3]
 22935 0188 C468     		ldr	r4, [r0, #12]
 22936              	.LVL2860:
 22937              		.loc 1 10558 33 view .LVU6418
 22938 018a 0123     		movs	r3, #1
 22939 018c 0DF10702 		add	r2, sp, #7
 22940              	.LVL2861:
 22941              		.loc 1 10558 33 view .LVU6419
 22942 0190 5A21     		movs	r1, #90
 22943 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22944 0194 A047     		blx	r4
 22945              	.LVL2862:
ARM GAS  /tmp/ccO72alg.s 			page 640


 22946              		.loc 1 10558 30 view .LVU6420
 22947 0196 56FA80F4 		uxtab	r4, r6, r0
 22948 019a 64B2     		sxtb	r4, r4
 22949              	.LVL2863:
 22950              	.L1574:
10559:Core/Src/bno055.c ****                                                                 BNO055_ACCEL_OFFSET_Z_MSB_REG,
10560:Core/Src/bno055.c ****                                                                 &data2_u8r,
10561:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10562:Core/Src/bno055.c ****                 }
10563:Core/Src/bno055.c **** 
10564:Core/Src/bno055.c ****                 /*write accel radius value*/
10565:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 22951              		.loc 1 10565 17 is_stmt 1 view .LVU6421
 22952              		.loc 1 10565 37 is_stmt 0 view .LVU6422
 22953 019c 284B     		ldr	r3, .L1582
 22954 019e 1868     		ldr	r0, [r3]
 22955 01a0 0669     		ldr	r6, [r0, #16]
 22956              		.loc 1 10565 29 view .LVU6423
 22957 01a2 0123     		movs	r3, #1
 22958 01a4 0DF10702 		add	r2, sp, #7
 22959 01a8 6721     		movs	r1, #103
 22960 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22961 01ac B047     		blx	r6
 22962              	.LVL2864:
 22963              		.loc 1 10565 26 view .LVU6424
 22964 01ae 54FA80F4 		uxtab	r4, r4, r0
 22965              	.LVL2865:
 22966              		.loc 1 10565 26 view .LVU6425
 22967 01b2 64B2     		sxtb	r4, r4
 22968              	.LVL2866:
10566:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_LSB_REG,
10567:Core/Src/bno055.c ****                                                            &data2_u8r,
10568:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10569:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 22969              		.loc 1 10569 17 is_stmt 1 view .LVU6426
 22970              		.loc 1 10569 20 is_stmt 0 view .LVU6427
 22971 01b4 6CB9     		cbnz	r4, .L1575
10570:Core/Src/bno055.c ****                 {
10571:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 22972              		.loc 1 10571 21 is_stmt 1 view .LVU6428
 22973              		.loc 1 10571 51 is_stmt 0 view .LVU6429
 22974 01b6 B5F90630 		ldrsh	r3, [r5, #6]
 22975              	.LVL2867:
10572:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_LSB, data1_u8r);
 22976              		.loc 1 10572 21 is_stmt 1 view .LVU6430
 22977              		.loc 1 10572 31 is_stmt 0 view .LVU6431
 22978 01ba 8DF80730 		strb	r3, [sp, #7]
10573:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 22979              		.loc 1 10573 21 is_stmt 1 view .LVU6432
 22980              		.loc 1 10573 40 is_stmt 0 view .LVU6433
 22981 01be 204B     		ldr	r3, .L1582
 22982              	.LVL2868:
 22983              		.loc 1 10573 40 view .LVU6434
 22984 01c0 1868     		ldr	r0, [r3]
 22985 01c2 C468     		ldr	r4, [r0, #12]
 22986              	.LVL2869:
 22987              		.loc 1 10573 32 view .LVU6435
ARM GAS  /tmp/ccO72alg.s 			page 641


 22988 01c4 0123     		movs	r3, #1
 22989 01c6 0DF10702 		add	r2, sp, #7
 22990              	.LVL2870:
 22991              		.loc 1 10573 32 view .LVU6436
 22992 01ca 6721     		movs	r1, #103
 22993 01cc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 22994 01ce A047     		blx	r4
 22995              	.LVL2871:
 22996              		.loc 1 10573 32 view .LVU6437
 22997 01d0 0446     		mov	r4, r0
 22998              	.LVL2872:
 22999              	.L1575:
10574:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_LSB_REG,
10575:Core/Src/bno055.c ****                                                                &data2_u8r,
10576:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10577:Core/Src/bno055.c ****                 }
10578:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23000              		.loc 1 10578 17 is_stmt 1 view .LVU6438
 23001              		.loc 1 10578 37 is_stmt 0 view .LVU6439
 23002 01d2 1B4B     		ldr	r3, .L1582
 23003 01d4 1868     		ldr	r0, [r3]
 23004 01d6 0669     		ldr	r6, [r0, #16]
 23005              		.loc 1 10578 29 view .LVU6440
 23006 01d8 0123     		movs	r3, #1
 23007 01da 0DF10702 		add	r2, sp, #7
 23008 01de 6821     		movs	r1, #104
 23009 01e0 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23010 01e2 B047     		blx	r6
 23011              	.LVL2873:
 23012              		.loc 1 10578 26 view .LVU6441
 23013 01e4 54FA80F4 		uxtab	r4, r4, r0
 23014              	.LVL2874:
 23015              		.loc 1 10578 26 view .LVU6442
 23016 01e8 64B2     		sxtb	r4, r4
 23017              	.LVL2875:
10579:Core/Src/bno055.c ****                                                            BNO055_ACCEL_RADIUS_MSB_REG,
10580:Core/Src/bno055.c ****                                                            &data2_u8r,
10581:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10582:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23018              		.loc 1 10582 17 is_stmt 1 view .LVU6443
 23019              		.loc 1 10582 20 is_stmt 0 view .LVU6444
 23020 01ea B4B9     		cbnz	r4, .L1567
10583:Core/Src/bno055.c ****                 {
10584:Core/Src/bno055.c ****                     data1_u8r = ((s8)(accel_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_
 23021              		.loc 1 10584 21 is_stmt 1 view .LVU6445
 23022              		.loc 1 10584 34 is_stmt 0 view .LVU6446
 23023 01ec 95F90730 		ldrsb	r3, [r5, #7]
 23024              	.LVL2876:
10585:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_ACCEL_RADIUS_MSB, data1_u8r);
 23025              		.loc 1 10585 21 is_stmt 1 view .LVU6447
 23026              		.loc 1 10585 31 is_stmt 0 view .LVU6448
 23027 01f0 8DF80730 		strb	r3, [sp, #7]
10586:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23028              		.loc 1 10586 21 is_stmt 1 view .LVU6449
 23029              		.loc 1 10586 40 is_stmt 0 view .LVU6450
 23030 01f4 124B     		ldr	r3, .L1582
 23031              	.LVL2877:
ARM GAS  /tmp/ccO72alg.s 			page 642


 23032              		.loc 1 10586 40 view .LVU6451
 23033 01f6 1868     		ldr	r0, [r3]
 23034 01f8 C468     		ldr	r4, [r0, #12]
 23035              	.LVL2878:
 23036              		.loc 1 10586 32 view .LVU6452
 23037 01fa 0123     		movs	r3, #1
 23038 01fc 0DF10702 		add	r2, sp, #7
 23039              	.LVL2879:
 23040              		.loc 1 10586 32 view .LVU6453
 23041 0200 6821     		movs	r1, #104
 23042 0202 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23043 0204 A047     		blx	r4
 23044              	.LVL2880:
 23045              		.loc 1 10586 32 view .LVU6454
 23046 0206 0446     		mov	r4, r0
 23047              	.LVL2881:
 23048              		.loc 1 10586 32 view .LVU6455
 23049 0208 07E0     		b	.L1567
 23050              	.LVL2882:
 23051              	.L1580:
10476:Core/Src/bno055.c ****             }
 23052              		.loc 1 10476 17 is_stmt 1 view .LVU6456
10476:Core/Src/bno055.c ****             }
 23053              		.loc 1 10476 28 is_stmt 0 view .LVU6457
 23054 020a FFF7FEFF 		bl	bno055_set_operation_mode
 23055              	.LVL2883:
10476:Core/Src/bno055.c ****             }
 23056              		.loc 1 10476 25 view .LVU6458
 23057 020e 54FA80F4 		uxtab	r4, r4, r0
 23058 0212 64B2     		sxtb	r4, r4
 23059              	.LVL2884:
10476:Core/Src/bno055.c ****             }
 23060              		.loc 1 10476 25 view .LVU6459
 23061 0214 0EE7     		b	.L1568
 23062              	.LVL2885:
 23063              	.L1577:
10587:Core/Src/bno055.c ****                                                                BNO055_ACCEL_RADIUS_MSB_REG,
10588:Core/Src/bno055.c ****                                                                &data2_u8r,
10589:Core/Src/bno055.c ****                                                                BNO055_GEN_READ_WRITE_LENGTH);
10590:Core/Src/bno055.c ****                 }
10591:Core/Src/bno055.c ****             }
10592:Core/Src/bno055.c ****             else
10593:Core/Src/bno055.c ****             {
10594:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10595:Core/Src/bno055.c ****             }
10596:Core/Src/bno055.c ****         }
10597:Core/Src/bno055.c ****         else
10598:Core/Src/bno055.c ****         {
10599:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23064              		.loc 1 10599 22 view .LVU6460
 23065 0216 4FF0FF34 		mov	r4, #-1
 23066              	.LVL2886:
 23067              	.L1567:
10600:Core/Src/bno055.c ****         }
10601:Core/Src/bno055.c ****     }
10602:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23068              		.loc 1 10602 5 is_stmt 1 view .LVU6461
ARM GAS  /tmp/ccO72alg.s 			page 643


 23069              		.loc 1 10602 24 is_stmt 0 view .LVU6462
 23070 021a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23071              		.loc 1 10602 8 view .LVU6463
 23072 021e 28B9     		cbnz	r0, .L1581
 23073              	.LVL2887:
 23074              	.L1566:
10603:Core/Src/bno055.c ****     {
10604:Core/Src/bno055.c ****         /* set the operation mode
10605:Core/Src/bno055.c ****          * of previous operation mode*/
10606:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10607:Core/Src/bno055.c ****     }
10608:Core/Src/bno055.c **** 
10609:Core/Src/bno055.c ****     return com_rslt;
10610:Core/Src/bno055.c **** }
 23075              		.loc 1 10610 1 view .LVU6464
 23076 0220 2046     		mov	r0, r4
 23077 0222 02B0     		add	sp, sp, #8
 23078              	.LCFI675:
 23079              		.cfi_remember_state
 23080              		.cfi_def_cfa_offset 16
 23081              		@ sp needed
 23082 0224 70BD     		pop	{r4, r5, r6, pc}
 23083              	.LVL2888:
 23084              	.L1578:
 23085              	.LCFI676:
 23086              		.cfi_restore_state
10594:Core/Src/bno055.c ****             }
 23087              		.loc 1 10594 26 view .LVU6465
 23088 0226 4FF0FF34 		mov	r4, #-1
 23089              	.LVL2889:
10594:Core/Src/bno055.c ****             }
 23090              		.loc 1 10594 26 view .LVU6466
 23091 022a F6E7     		b	.L1567
 23092              	.LVL2890:
 23093              	.L1581:
10606:Core/Src/bno055.c ****     }
 23094              		.loc 1 10606 9 is_stmt 1 view .LVU6467
10606:Core/Src/bno055.c ****     }
 23095              		.loc 1 10606 21 is_stmt 0 view .LVU6468
 23096 022c FFF7FEFF 		bl	bno055_set_operation_mode
 23097              	.LVL2891:
10606:Core/Src/bno055.c ****     }
 23098              		.loc 1 10606 18 view .LVU6469
 23099 0230 54FA80F4 		uxtab	r4, r4, r0
 23100              	.LVL2892:
10606:Core/Src/bno055.c ****     }
 23101              		.loc 1 10606 18 view .LVU6470
 23102 0234 64B2     		sxtb	r4, r4
 23103              	.LVL2893:
10606:Core/Src/bno055.c ****     }
 23104              		.loc 1 10606 18 view .LVU6471
 23105 0236 F3E7     		b	.L1566
 23106              	.LVL2894:
 23107              	.L1576:
10464:Core/Src/bno055.c ****     }
 23108              		.loc 1 10464 16 view .LVU6472
 23109 0238 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/ccO72alg.s 			page 644


 23110 023c F0E7     		b	.L1566
 23111              	.L1583:
 23112 023e 00BF     		.align	2
 23113              	.L1582:
 23114 0240 00000000 		.word	.LANCHOR0
 23115              		.cfi_endproc
 23116              	.LFE170:
 23118              		.section	.text.bno055_read_mag_offset,"ax",%progbits
 23119              		.align	1
 23120              		.global	bno055_read_mag_offset
 23121              		.syntax unified
 23122              		.thumb
 23123              		.thumb_func
 23125              	bno055_read_mag_offset:
 23126              	.LVL2895:
 23127              	.LFB171:
10611:Core/Src/bno055.c **** 
10612:Core/Src/bno055.c **** /*!
10613:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10614:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10615:Core/Src/bno055.c ****  *
10616:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10617:Core/Src/bno055.c ****  *
10618:Core/Src/bno055.c ****  *      bno055_mag_offset_t   |     result
10619:Core/Src/bno055.c ****  *      ------------------- | ----------------
10620:Core/Src/bno055.c ****  *               x          |  mag offset x
10621:Core/Src/bno055.c ****  *               y          |  mag offset y
10622:Core/Src/bno055.c ****  *               z          |  mag offset z
10623:Core/Src/bno055.c ****  *               r          |  mag radius r
10624:Core/Src/bno055.c ****  *
10625:Core/Src/bno055.c ****  *
10626:Core/Src/bno055.c ****  *  @return results of bus communication function
10627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10629:Core/Src/bno055.c ****  *
10630:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10631:Core/Src/bno055.c ****  */
10632:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_mag_offset(struct bno055_mag_offset_t  *mag_offset)
10633:Core/Src/bno055.c **** {
 23128              		.loc 1 10633 1 is_stmt 1 view -0
 23129              		.cfi_startproc
 23130              		@ args = 0, pretend = 0, frame = 8
 23131              		@ frame_needed = 0, uses_anonymous_args = 0
 23132              		.loc 1 10633 1 is_stmt 0 view .LVU6474
 23133 0000 70B5     		push	{r4, r5, r6, lr}
 23134              	.LCFI677:
 23135              		.cfi_def_cfa_offset 16
 23136              		.cfi_offset 4, -16
 23137              		.cfi_offset 5, -12
 23138              		.cfi_offset 6, -8
 23139              		.cfi_offset 14, -4
 23140 0002 82B0     		sub	sp, sp, #8
 23141              	.LCFI678:
 23142              		.cfi_def_cfa_offset 24
 23143 0004 0446     		mov	r4, r0
10634:Core/Src/bno055.c ****     /* Variable used to return value of
10635:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccO72alg.s 			page 645


10636:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23144              		.loc 1 10636 5 is_stmt 1 view .LVU6475
 23145              	.LVL2896:
10637:Core/Src/bno055.c **** 
10638:Core/Src/bno055.c ****     /* Array holding the mag offset values
10639:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10640:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10641:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10642:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10643:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10644:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10645:Core/Src/bno055.c ****      */
10646:Core/Src/bno055.c ****     u8 data_u8[BNO055_MAG_OFFSET_ARRAY] = {
 23146              		.loc 1 10646 5 view .LVU6476
 23147              		.loc 1 10646 8 is_stmt 0 view .LVU6477
 23148 0006 2C4B     		ldr	r3, .L1594
 23149 0008 93E80300 		ldm	r3, {r0, r1}
 23150              	.LVL2897:
 23151              		.loc 1 10646 8 view .LVU6478
 23152 000c 0090     		str	r0, [sp]
 23153 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10647:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10648:Core/Src/bno055.c ****     };
10649:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23154              		.loc 1 10649 5 is_stmt 1 view .LVU6479
 23155              	.LVL2898:
10650:Core/Src/bno055.c **** 
10651:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10652:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23156              		.loc 1 10652 5 view .LVU6480
 23157              		.loc 1 10652 18 is_stmt 0 view .LVU6481
 23158 0012 2A4B     		ldr	r3, .L1594+4
 23159 0014 1B68     		ldr	r3, [r3]
 23160              		.loc 1 10652 8 view .LVU6482
 23161 0016 002B     		cmp	r3, #0
 23162 0018 42D0     		beq	.L1588
10653:Core/Src/bno055.c ****     {
10654:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10655:Core/Src/bno055.c ****     }
10656:Core/Src/bno055.c ****     else
10657:Core/Src/bno055.c ****     {
10658:Core/Src/bno055.c ****         /*condition check for page, mag offset is
10659:Core/Src/bno055.c ****          * available in the page zero*/
10660:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 23163              		.loc 1 10660 9 is_stmt 1 view .LVU6483
 23164              		.loc 1 10660 21 is_stmt 0 view .LVU6484
 23165 001a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23166              		.loc 1 10660 12 view .LVU6485
 23167 001c 002B     		cmp	r3, #0
 23168 001e 39D1     		bne	.L1593
 23169              	.LVL2899:
 23170              	.L1586:
10661:Core/Src/bno055.c ****         {
10662:Core/Src/bno055.c ****             /* Write the page zero*/
10663:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10664:Core/Src/bno055.c ****         }
10665:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
ARM GAS  /tmp/ccO72alg.s 			page 646


 23171              		.loc 1 10665 53 discriminator 1 view .LVU6486
 23172 0020 264B     		ldr	r3, .L1594+4
 23173 0022 1B68     		ldr	r3, [r3]
 23174 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23175              		.loc 1 10665 41 discriminator 1 view .LVU6487
 23176 0026 002B     		cmp	r3, #0
 23177 0028 3DD1     		bne	.L1589
 23178              	.L1587:
10666:Core/Src/bno055.c ****         {
10667:Core/Src/bno055.c ****             /* Read mag offset value it the six bytes of data */
10668:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23179              		.loc 1 10668 13 is_stmt 1 view .LVU6488
 23180              		.loc 1 10668 32 is_stmt 0 view .LVU6489
 23181 002a 244B     		ldr	r3, .L1594+4
 23182 002c 1868     		ldr	r0, [r3]
 23183 002e 0569     		ldr	r5, [r0, #16]
 23184              		.loc 1 10668 24 view .LVU6490
 23185 0030 0623     		movs	r3, #6
 23186 0032 6A46     		mov	r2, sp
 23187 0034 5B21     		movs	r1, #91
 23188 0036 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23189 0038 A847     		blx	r5
 23190              	.LVL2900:
10669:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_X_LSB_REG,
10670:Core/Src/bno055.c ****                                                       data_u8,
10671:Core/Src/bno055.c ****                                                       BNO055_MAG_OFFSET_ARRAY);
10672:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 23191              		.loc 1 10672 13 is_stmt 1 view .LVU6491
 23192              		.loc 1 10672 16 is_stmt 0 view .LVU6492
 23193 003a 0546     		mov	r5, r0
 23194 003c 0028     		cmp	r0, #0
 23195 003e 35D1     		bne	.L1590
10673:Core/Src/bno055.c ****             {
10674:Core/Src/bno055.c ****                 /* Read mag x offset value*/
10675:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23196              		.loc 1 10675 17 is_stmt 1 view .LVU6493
10676:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10677:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23197              		.loc 1 10677 17 view .LVU6494
10678:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_X_
10679:Core/Src/bno055.c ****                 mag_offset->x =
 23198              		.loc 1 10679 17 view .LVU6495
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23199              		.loc 1 10680 34 is_stmt 0 view .LVU6496
 23200 0040 9DF90120 		ldrsb	r2, [sp, #1]
10681:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 23201              		.loc 1 10681 35 view .LVU6497
 23202 0044 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10680:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23203              		.loc 1 10680 21 view .LVU6498
 23204 0048 43EA0223 		orr	r3, r3, r2, lsl #8
10679:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23205              		.loc 1 10679 31 view .LVU6499
 23206 004c 2380     		strh	r3, [r4]	@ movhi
10682:Core/Src/bno055.c **** 
10683:Core/Src/bno055.c ****                 /* Read mag y offset value*/
10684:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
ARM GAS  /tmp/ccO72alg.s 			page 647


 23207              		.loc 1 10684 17 is_stmt 1 view .LVU6500
10685:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10686:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23208              		.loc 1 10686 17 view .LVU6501
10687:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Y_
10688:Core/Src/bno055.c ****                 mag_offset->y =
 23209              		.loc 1 10688 17 view .LVU6502
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23210              		.loc 1 10689 34 is_stmt 0 view .LVU6503
 23211 004e 9DF90320 		ldrsb	r2, [sp, #3]
10690:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 23212              		.loc 1 10690 35 view .LVU6504
 23213 0052 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
10689:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23214              		.loc 1 10689 21 view .LVU6505
 23215 0056 43EA0223 		orr	r3, r3, r2, lsl #8
10688:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23216              		.loc 1 10688 31 view .LVU6506
 23217 005a 6380     		strh	r3, [r4, #2]	@ movhi
10691:Core/Src/bno055.c **** 
10692:Core/Src/bno055.c ****                 /* Read mag z offset value*/
10693:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23218              		.loc 1 10693 17 is_stmt 1 view .LVU6507
10694:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10695:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23219              		.loc 1 10695 17 view .LVU6508
10696:Core/Src/bno055.c ****                                                                                BNO055_MAG_OFFSET_Z_
10697:Core/Src/bno055.c ****                 mag_offset->z =
 23220              		.loc 1 10697 17 view .LVU6509
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23221              		.loc 1 10698 34 is_stmt 0 view .LVU6510
 23222 005c 9DF90520 		ldrsb	r2, [sp, #5]
10699:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 23223              		.loc 1 10699 35 view .LVU6511
 23224 0060 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
10698:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23225              		.loc 1 10698 21 view .LVU6512
 23226 0064 43EA0223 		orr	r3, r3, r2, lsl #8
10697:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23227              		.loc 1 10697 31 view .LVU6513
 23228 0068 A380     		strh	r3, [r4, #4]	@ movhi
10700:Core/Src/bno055.c **** 
10701:Core/Src/bno055.c ****                 /* Read mag radius value
10702:Core/Src/bno055.c ****                  * it the two bytes of data */
10703:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23229              		.loc 1 10703 17 is_stmt 1 view .LVU6514
 23230              		.loc 1 10703 37 is_stmt 0 view .LVU6515
 23231 006a 144B     		ldr	r3, .L1594+4
 23232 006c 1868     		ldr	r0, [r3]
 23233              	.LVL2901:
 23234              		.loc 1 10703 37 view .LVU6516
 23235 006e 0669     		ldr	r6, [r0, #16]
 23236              		.loc 1 10703 29 view .LVU6517
 23237 0070 0223     		movs	r3, #2
 23238 0072 6A46     		mov	r2, sp
 23239 0074 6921     		movs	r1, #105
 23240 0076 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 648


 23241 0078 B047     		blx	r6
 23242              	.LVL2902:
 23243              		.loc 1 10703 26 view .LVU6518
 23244 007a 55FA80F0 		uxtab	r0, r5, r0
 23245 007e 40B2     		sxtb	r0, r0
 23246              	.LVL2903:
10704:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10705:Core/Src/bno055.c ****                                                            data_u8,
10706:Core/Src/bno055.c ****                                                            BNO055_LSB_MSB_READ_LENGTH);
10707:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23247              		.loc 1 10707 17 is_stmt 1 view .LVU6519
 23248              		.loc 1 10707 20 is_stmt 0 view .LVU6520
 23249 0080 B8B9     		cbnz	r0, .L1591
10708:Core/Src/bno055.c ****                 {
10709:Core/Src/bno055.c ****                     /* Array holding the mag radius values
10710:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_LSB] -
10711:Core/Src/bno055.c ****                      * radius->LSB
10712:Core/Src/bno055.c ****                      * data_u8[BNO055_OFFSET_RADIUS_MSB] -
10713:Core/Src/bno055.c ****                      * radius->MSB
10714:Core/Src/bno055.c ****                      */
10715:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 23250              		.loc 1 10715 21 is_stmt 1 view .LVU6521
10716:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_LSB);
10717:Core/Src/bno055.c ****                     data_u8[BNO055_OFFSET_RADIUS_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_OFFSET_R
 23251              		.loc 1 10717 21 view .LVU6522
10718:Core/Src/bno055.c ****                                                                             BNO055_MAG_RADIUS_MSB);
10719:Core/Src/bno055.c ****                     mag_offset->r =
 23252              		.loc 1 10719 21 view .LVU6523
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23253              		.loc 1 10720 38 is_stmt 0 view .LVU6524
 23254 0082 9DF90120 		ldrsb	r2, [sp, #1]
10721:Core/Src/bno055.c ****                               (data_u8[BNO055_OFFSET_RADIUS_LSB]));
 23255              		.loc 1 10721 39 view .LVU6525
 23256 0086 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
10720:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23257              		.loc 1 10720 25 view .LVU6526
 23258 008a 43EA0223 		orr	r3, r3, r2, lsl #8
10719:Core/Src/bno055.c ****                         (s16)((((s32)(s8)(data_u8[BNO055_OFFSET_RADIUS_MSB])) << (BNO055_SHIFT_EIGH
 23259              		.loc 1 10719 35 view .LVU6527
 23260 008e E380     		strh	r3, [r4, #6]	@ movhi
 23261              	.LVL2904:
 23262              	.L1585:
10722:Core/Src/bno055.c ****                 }
10723:Core/Src/bno055.c ****                 else
10724:Core/Src/bno055.c ****                 {
10725:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
10726:Core/Src/bno055.c ****                 }
10727:Core/Src/bno055.c ****             }
10728:Core/Src/bno055.c ****             else
10729:Core/Src/bno055.c ****             {
10730:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10731:Core/Src/bno055.c ****             }
10732:Core/Src/bno055.c ****         }
10733:Core/Src/bno055.c ****         else
10734:Core/Src/bno055.c ****         {
10735:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
10736:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 649


10737:Core/Src/bno055.c ****     }
10738:Core/Src/bno055.c **** 
10739:Core/Src/bno055.c ****     return com_rslt;
10740:Core/Src/bno055.c **** }
 23263              		.loc 1 10740 1 view .LVU6528
 23264 0090 02B0     		add	sp, sp, #8
 23265              	.LCFI679:
 23266              		.cfi_remember_state
 23267              		.cfi_def_cfa_offset 16
 23268              		@ sp needed
 23269 0092 70BD     		pop	{r4, r5, r6, pc}
 23270              	.LVL2905:
 23271              	.L1593:
 23272              	.LCFI680:
 23273              		.cfi_restore_state
10663:Core/Src/bno055.c ****         }
 23274              		.loc 1 10663 13 is_stmt 1 view .LVU6529
10663:Core/Src/bno055.c ****         }
 23275              		.loc 1 10663 23 is_stmt 0 view .LVU6530
 23276 0094 0020     		movs	r0, #0
 23277 0096 FFF7FEFF 		bl	bno055_write_page_id
 23278              	.LVL2906:
10665:Core/Src/bno055.c ****         {
 23279              		.loc 1 10665 9 is_stmt 1 view .LVU6531
10665:Core/Src/bno055.c ****         {
 23280              		.loc 1 10665 12 is_stmt 0 view .LVU6532
 23281 009a 0028     		cmp	r0, #0
 23282 009c C5D0     		beq	.L1587
 23283 009e BFE7     		b	.L1586
 23284              	.LVL2907:
 23285              	.L1588:
10654:Core/Src/bno055.c ****     }
 23286              		.loc 1 10654 16 view .LVU6533
 23287 00a0 6FF07E00 		mvn	r0, #126
 23288 00a4 F4E7     		b	.L1585
 23289              	.LVL2908:
 23290              	.L1589:
10735:Core/Src/bno055.c ****         }
 23291              		.loc 1 10735 22 view .LVU6534
 23292 00a6 4FF0FF30 		mov	r0, #-1
 23293 00aa F1E7     		b	.L1585
 23294              	.LVL2909:
 23295              	.L1590:
10730:Core/Src/bno055.c ****             }
 23296              		.loc 1 10730 26 view .LVU6535
 23297 00ac 4FF0FF30 		mov	r0, #-1
 23298              	.LVL2910:
10730:Core/Src/bno055.c ****             }
 23299              		.loc 1 10730 26 view .LVU6536
 23300 00b0 EEE7     		b	.L1585
 23301              	.LVL2911:
 23302              	.L1591:
10725:Core/Src/bno055.c ****                 }
 23303              		.loc 1 10725 30 view .LVU6537
 23304 00b2 4FF0FF30 		mov	r0, #-1
 23305              	.LVL2912:
10725:Core/Src/bno055.c ****                 }
ARM GAS  /tmp/ccO72alg.s 			page 650


 23306              		.loc 1 10725 30 view .LVU6538
 23307 00b6 EBE7     		b	.L1585
 23308              	.L1595:
 23309              		.align	2
 23310              	.L1594:
 23311 00b8 00000000 		.word	.LANCHOR1
 23312 00bc 00000000 		.word	.LANCHOR0
 23313              		.cfi_endproc
 23314              	.LFE171:
 23316              		.section	.text.bno055_write_mag_offset,"ax",%progbits
 23317              		.align	1
 23318              		.global	bno055_write_mag_offset
 23319              		.syntax unified
 23320              		.thumb
 23321              		.thumb_func
 23323              	bno055_write_mag_offset:
 23324              	.LVL2913:
 23325              	.LFB172:
10741:Core/Src/bno055.c **** 
10742:Core/Src/bno055.c **** /*!
10743:Core/Src/bno055.c ****  *  @brief This API is used to read mag offset
10744:Core/Src/bno055.c ****  *  offset form register 0x69 to 0x6A
10745:Core/Src/bno055.c ****  *
10746:Core/Src/bno055.c ****  *  @param mag_offset :  The value of mag offset and radius
10747:Core/Src/bno055.c ****  *
10748:Core/Src/bno055.c ****  *      bno055_mag_offset_t |     result
10749:Core/Src/bno055.c ****  *      ------------------- | ----------------
10750:Core/Src/bno055.c ****  *               x          |  mag offset x
10751:Core/Src/bno055.c ****  *               y          |  mag offset y
10752:Core/Src/bno055.c ****  *               z          |  mag offset z
10753:Core/Src/bno055.c ****  *               r          |  mag radius r
10754:Core/Src/bno055.c ****  *
10755:Core/Src/bno055.c ****  *
10756:Core/Src/bno055.c ****  *  @return results of bus communication function
10757:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10758:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10759:Core/Src/bno055.c ****  *
10760:Core/Src/bno055.c ****  *  @note  The range of the magnetometer offset is +/-6400 in LSB
10761:Core/Src/bno055.c ****  */
10762:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_mag_offset(struct bno055_mag_offset_t *mag_offset)
10763:Core/Src/bno055.c **** {
 23326              		.loc 1 10763 1 is_stmt 1 view -0
 23327              		.cfi_startproc
 23328              		@ args = 0, pretend = 0, frame = 8
 23329              		@ frame_needed = 0, uses_anonymous_args = 0
 23330              		.loc 1 10763 1 is_stmt 0 view .LVU6540
 23331 0000 70B5     		push	{r4, r5, r6, lr}
 23332              	.LCFI681:
 23333              		.cfi_def_cfa_offset 16
 23334              		.cfi_offset 4, -16
 23335              		.cfi_offset 5, -12
 23336              		.cfi_offset 6, -8
 23337              		.cfi_offset 14, -4
 23338 0002 82B0     		sub	sp, sp, #8
 23339              	.LCFI682:
 23340              		.cfi_def_cfa_offset 24
10764:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 651


 23341              		.loc 1 10764 5 is_stmt 1 view .LVU6541
 23342              	.LVL2914:
10765:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 23343              		.loc 1 10765 5 view .LVU6542
10766:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
 23344              		.loc 1 10766 5 view .LVU6543
 23345              		.loc 1 10766 8 is_stmt 0 view .LVU6544
 23346 0004 0023     		movs	r3, #0
 23347 0006 8DF80730 		strb	r3, [sp, #7]
10767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 23348              		.loc 1 10767 5 is_stmt 1 view .LVU6545
 23349              		.loc 1 10767 8 is_stmt 0 view .LVU6546
 23350 000a 8DF80630 		strb	r3, [sp, #6]
10768:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23351              		.loc 1 10768 5 is_stmt 1 view .LVU6547
 23352              	.LVL2915:
10769:Core/Src/bno055.c **** 
10770:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10771:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23353              		.loc 1 10771 5 view .LVU6548
 23354              		.loc 1 10771 18 is_stmt 0 view .LVU6549
 23355 000e 8F4B     		ldr	r3, .L1613
 23356 0010 1B68     		ldr	r3, [r3]
 23357              		.loc 1 10771 8 view .LVU6550
 23358 0012 002B     		cmp	r3, #0
 23359 0014 00F01681 		beq	.L1607
 23360 0018 0546     		mov	r5, r0
10772:Core/Src/bno055.c ****     {
10773:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10774:Core/Src/bno055.c ****     }
10775:Core/Src/bno055.c ****     else
10776:Core/Src/bno055.c ****     {
10777:Core/Src/bno055.c ****         /* The write operation effective only if the operation
10778:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
10779:Core/Src/bno055.c ****          * current operation mode and set the config mode */
10780:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 23361              		.loc 1 10780 9 is_stmt 1 view .LVU6551
 23362              		.loc 1 10780 19 is_stmt 0 view .LVU6552
 23363 001a 0DF10600 		add	r0, sp, #6
 23364              	.LVL2916:
 23365              		.loc 1 10780 19 view .LVU6553
 23366 001e FFF7FEFF 		bl	bno055_get_operation_mode
 23367              	.LVL2917:
10781:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 23368              		.loc 1 10781 9 is_stmt 1 view .LVU6554
 23369              		.loc 1 10781 12 is_stmt 0 view .LVU6555
 23370 0022 0446     		mov	r4, r0
 23371 0024 0028     		cmp	r0, #0
 23372 0026 40F0FC80 		bne	.L1608
10782:Core/Src/bno055.c ****         {
10783:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23373              		.loc 1 10783 13 is_stmt 1 view .LVU6556
 23374              		.loc 1 10783 32 is_stmt 0 view .LVU6557
 23375 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 23376              		.loc 1 10783 16 view .LVU6558
 23377 002e 002B     		cmp	r3, #0
 23378 0030 40F0F180 		bne	.L1611
ARM GAS  /tmp/ccO72alg.s 			page 652


 23379              	.LVL2918:
 23380              	.L1599:
10784:Core/Src/bno055.c ****             {
10785:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
10786:Core/Src/bno055.c ****             }
10787:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 23381              		.loc 1 10787 13 is_stmt 1 view .LVU6559
 23382              		.loc 1 10787 16 is_stmt 0 view .LVU6560
 23383 0034 002C     		cmp	r4, #0
 23384 0036 40F0FC80 		bne	.L1609
10788:Core/Src/bno055.c ****             {
10789:Core/Src/bno055.c ****                 /* write Mag offset x value*/
10790:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23385              		.loc 1 10790 17 is_stmt 1 view .LVU6561
 23386              		.loc 1 10790 36 is_stmt 0 view .LVU6562
 23387 003a 844B     		ldr	r3, .L1613
 23388 003c 1868     		ldr	r0, [r3]
 23389 003e 0469     		ldr	r4, [r0, #16]
 23390              	.LVL2919:
 23391              		.loc 1 10790 28 view .LVU6563
 23392 0040 0123     		movs	r3, #1
 23393 0042 0DF10702 		add	r2, sp, #7
 23394 0046 5B21     		movs	r1, #91
 23395 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23396 004a A047     		blx	r4
 23397              	.LVL2920:
10791:Core/Src/bno055.c ****                                                           BNO055_MAG_OFFSET_X_LSB_REG,
10792:Core/Src/bno055.c ****                                                           &data2_u8r,
10793:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
10794:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23398              		.loc 1 10794 17 is_stmt 1 view .LVU6564
 23399              		.loc 1 10794 20 is_stmt 0 view .LVU6565
 23400 004c 0446     		mov	r4, r0
 23401 004e 78B9     		cbnz	r0, .L1600
10795:Core/Src/bno055.c ****                 {
10796:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 23402              		.loc 1 10796 21 is_stmt 1 view .LVU6566
 23403              		.loc 1 10796 49 is_stmt 0 view .LVU6567
 23404 0050 B5F90030 		ldrsh	r3, [r5]
 23405              	.LVL2921:
10797:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_LSB, data1_u8r);
 23406              		.loc 1 10797 21 is_stmt 1 view .LVU6568
 23407              		.loc 1 10797 31 is_stmt 0 view .LVU6569
 23408 0054 8DF80730 		strb	r3, [sp, #7]
10798:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23409              		.loc 1 10798 21 is_stmt 1 view .LVU6570
 23410              		.loc 1 10798 41 is_stmt 0 view .LVU6571
 23411 0058 7C4B     		ldr	r3, .L1613
 23412              	.LVL2922:
 23413              		.loc 1 10798 41 view .LVU6572
 23414 005a 1868     		ldr	r0, [r3]
 23415              	.LVL2923:
 23416              		.loc 1 10798 41 view .LVU6573
 23417 005c C668     		ldr	r6, [r0, #12]
 23418              		.loc 1 10798 33 view .LVU6574
 23419 005e 0123     		movs	r3, #1
 23420 0060 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccO72alg.s 			page 653


 23421              	.LVL2924:
 23422              		.loc 1 10798 33 view .LVU6575
 23423 0064 5B21     		movs	r1, #91
 23424 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23425 0068 B047     		blx	r6
 23426              	.LVL2925:
 23427              		.loc 1 10798 30 view .LVU6576
 23428 006a 54FA80F4 		uxtab	r4, r4, r0
 23429 006e 64B2     		sxtb	r4, r4
 23430              	.LVL2926:
 23431              	.L1600:
10799:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_LSB_REG,
10800:Core/Src/bno055.c ****                                                                 &data2_u8r,
10801:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10802:Core/Src/bno055.c ****                 }
10803:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23432              		.loc 1 10803 17 is_stmt 1 view .LVU6577
 23433              		.loc 1 10803 37 is_stmt 0 view .LVU6578
 23434 0070 764B     		ldr	r3, .L1613
 23435 0072 1868     		ldr	r0, [r3]
 23436 0074 0669     		ldr	r6, [r0, #16]
 23437              		.loc 1 10803 29 view .LVU6579
 23438 0076 0123     		movs	r3, #1
 23439 0078 0DF10702 		add	r2, sp, #7
 23440 007c 5C21     		movs	r1, #92
 23441 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23442 0080 B047     		blx	r6
 23443              	.LVL2927:
 23444              		.loc 1 10803 26 view .LVU6580
 23445 0082 54FA80F4 		uxtab	r4, r4, r0
 23446              	.LVL2928:
 23447              		.loc 1 10803 26 view .LVU6581
 23448 0086 E6B2     		uxtb	r6, r4
 23449 0088 64B2     		sxtb	r4, r4
 23450              	.LVL2929:
10804:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_X_MSB_REG,
10805:Core/Src/bno055.c ****                                                            &data2_u8r,
10806:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10807:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23451              		.loc 1 10807 17 is_stmt 1 view .LVU6582
 23452              		.loc 1 10807 20 is_stmt 0 view .LVU6583
 23453 008a 7CB9     		cbnz	r4, .L1601
10808:Core/Src/bno055.c ****                 {
10809:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23454              		.loc 1 10809 21 is_stmt 1 view .LVU6584
 23455              		.loc 1 10809 34 is_stmt 0 view .LVU6585
 23456 008c 95F90130 		ldrsb	r3, [r5, #1]
 23457              	.LVL2930:
10810:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_X_MSB, data1_u8r);
 23458              		.loc 1 10810 21 is_stmt 1 view .LVU6586
 23459              		.loc 1 10810 31 is_stmt 0 view .LVU6587
 23460 0090 8DF80730 		strb	r3, [sp, #7]
10811:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23461              		.loc 1 10811 21 is_stmt 1 view .LVU6588
 23462              		.loc 1 10811 41 is_stmt 0 view .LVU6589
 23463 0094 6D4B     		ldr	r3, .L1613
 23464              	.LVL2931:
ARM GAS  /tmp/ccO72alg.s 			page 654


 23465              		.loc 1 10811 41 view .LVU6590
 23466 0096 1868     		ldr	r0, [r3]
 23467 0098 C468     		ldr	r4, [r0, #12]
 23468              	.LVL2932:
 23469              		.loc 1 10811 33 view .LVU6591
 23470 009a 0123     		movs	r3, #1
 23471 009c 0DF10702 		add	r2, sp, #7
 23472              	.LVL2933:
 23473              		.loc 1 10811 33 view .LVU6592
 23474 00a0 5C21     		movs	r1, #92
 23475 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23476 00a4 A047     		blx	r4
 23477              	.LVL2934:
 23478              		.loc 1 10811 30 view .LVU6593
 23479 00a6 56FA80F4 		uxtab	r4, r6, r0
 23480 00aa 64B2     		sxtb	r4, r4
 23481              	.LVL2935:
 23482              	.L1601:
10812:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_X_MSB_REG,
10813:Core/Src/bno055.c ****                                                                 &data2_u8r,
10814:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10815:Core/Src/bno055.c ****                 }
10816:Core/Src/bno055.c **** 
10817:Core/Src/bno055.c ****                 /* write Mag offset y value*/
10818:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23483              		.loc 1 10818 17 is_stmt 1 view .LVU6594
 23484              		.loc 1 10818 37 is_stmt 0 view .LVU6595
 23485 00ac 674B     		ldr	r3, .L1613
 23486 00ae 1868     		ldr	r0, [r3]
 23487 00b0 0669     		ldr	r6, [r0, #16]
 23488              		.loc 1 10818 29 view .LVU6596
 23489 00b2 0123     		movs	r3, #1
 23490 00b4 0DF10702 		add	r2, sp, #7
 23491 00b8 5D21     		movs	r1, #93
 23492 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23493 00bc B047     		blx	r6
 23494              	.LVL2936:
 23495              		.loc 1 10818 26 view .LVU6597
 23496 00be 54FA80F4 		uxtab	r4, r4, r0
 23497              	.LVL2937:
 23498              		.loc 1 10818 26 view .LVU6598
 23499 00c2 E6B2     		uxtb	r6, r4
 23500 00c4 64B2     		sxtb	r4, r4
 23501              	.LVL2938:
10819:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_LSB_REG,
10820:Core/Src/bno055.c ****                                                            &data2_u8r,
10821:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10822:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23502              		.loc 1 10822 17 is_stmt 1 view .LVU6599
 23503              		.loc 1 10822 20 is_stmt 0 view .LVU6600
 23504 00c6 7CB9     		cbnz	r4, .L1602
10823:Core/Src/bno055.c ****                 {
10824:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 23505              		.loc 1 10824 21 is_stmt 1 view .LVU6601
 23506              		.loc 1 10824 49 is_stmt 0 view .LVU6602
 23507 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 23508              	.LVL2939:
ARM GAS  /tmp/ccO72alg.s 			page 655


10825:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_LSB, data1_u8r);
 23509              		.loc 1 10825 21 is_stmt 1 view .LVU6603
 23510              		.loc 1 10825 31 is_stmt 0 view .LVU6604
 23511 00cc 8DF80730 		strb	r3, [sp, #7]
10826:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23512              		.loc 1 10826 21 is_stmt 1 view .LVU6605
 23513              		.loc 1 10826 41 is_stmt 0 view .LVU6606
 23514 00d0 5E4B     		ldr	r3, .L1613
 23515              	.LVL2940:
 23516              		.loc 1 10826 41 view .LVU6607
 23517 00d2 1868     		ldr	r0, [r3]
 23518 00d4 C468     		ldr	r4, [r0, #12]
 23519              	.LVL2941:
 23520              		.loc 1 10826 33 view .LVU6608
 23521 00d6 0123     		movs	r3, #1
 23522 00d8 0DF10702 		add	r2, sp, #7
 23523              	.LVL2942:
 23524              		.loc 1 10826 33 view .LVU6609
 23525 00dc 5D21     		movs	r1, #93
 23526 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23527 00e0 A047     		blx	r4
 23528              	.LVL2943:
 23529              		.loc 1 10826 30 view .LVU6610
 23530 00e2 56FA80F4 		uxtab	r4, r6, r0
 23531 00e6 64B2     		sxtb	r4, r4
 23532              	.LVL2944:
 23533              	.L1602:
10827:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_LSB_REG,
10828:Core/Src/bno055.c ****                                                                 &data2_u8r,
10829:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10830:Core/Src/bno055.c ****                 }
10831:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23534              		.loc 1 10831 17 is_stmt 1 view .LVU6611
 23535              		.loc 1 10831 37 is_stmt 0 view .LVU6612
 23536 00e8 584B     		ldr	r3, .L1613
 23537 00ea 1868     		ldr	r0, [r3]
 23538 00ec 0669     		ldr	r6, [r0, #16]
 23539              		.loc 1 10831 29 view .LVU6613
 23540 00ee 0123     		movs	r3, #1
 23541 00f0 0DF10702 		add	r2, sp, #7
 23542 00f4 5E21     		movs	r1, #94
 23543 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23544 00f8 B047     		blx	r6
 23545              	.LVL2945:
 23546              		.loc 1 10831 26 view .LVU6614
 23547 00fa 54FA80F4 		uxtab	r4, r4, r0
 23548              	.LVL2946:
 23549              		.loc 1 10831 26 view .LVU6615
 23550 00fe E6B2     		uxtb	r6, r4
 23551 0100 64B2     		sxtb	r4, r4
 23552              	.LVL2947:
10832:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Y_MSB_REG,
10833:Core/Src/bno055.c ****                                                            &data2_u8r,
10834:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10835:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23553              		.loc 1 10835 17 is_stmt 1 view .LVU6616
 23554              		.loc 1 10835 20 is_stmt 0 view .LVU6617
ARM GAS  /tmp/ccO72alg.s 			page 656


 23555 0102 7CB9     		cbnz	r4, .L1603
10836:Core/Src/bno055.c ****                 {
10837:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23556              		.loc 1 10837 21 is_stmt 1 view .LVU6618
 23557              		.loc 1 10837 34 is_stmt 0 view .LVU6619
 23558 0104 95F90330 		ldrsb	r3, [r5, #3]
 23559              	.LVL2948:
10838:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Y_MSB, data1_u8r);
 23560              		.loc 1 10838 21 is_stmt 1 view .LVU6620
 23561              		.loc 1 10838 31 is_stmt 0 view .LVU6621
 23562 0108 8DF80730 		strb	r3, [sp, #7]
10839:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23563              		.loc 1 10839 21 is_stmt 1 view .LVU6622
 23564              		.loc 1 10839 41 is_stmt 0 view .LVU6623
 23565 010c 4F4B     		ldr	r3, .L1613
 23566              	.LVL2949:
 23567              		.loc 1 10839 41 view .LVU6624
 23568 010e 1868     		ldr	r0, [r3]
 23569 0110 C468     		ldr	r4, [r0, #12]
 23570              	.LVL2950:
 23571              		.loc 1 10839 33 view .LVU6625
 23572 0112 0123     		movs	r3, #1
 23573 0114 0DF10702 		add	r2, sp, #7
 23574              	.LVL2951:
 23575              		.loc 1 10839 33 view .LVU6626
 23576 0118 5E21     		movs	r1, #94
 23577 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23578 011c A047     		blx	r4
 23579              	.LVL2952:
 23580              		.loc 1 10839 30 view .LVU6627
 23581 011e 56FA80F4 		uxtab	r4, r6, r0
 23582 0122 64B2     		sxtb	r4, r4
 23583              	.LVL2953:
 23584              	.L1603:
10840:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Y_MSB_REG,
10841:Core/Src/bno055.c ****                                                                 &data2_u8r,
10842:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10843:Core/Src/bno055.c ****                 }
10844:Core/Src/bno055.c **** 
10845:Core/Src/bno055.c ****                 /* write Mag offset z value*/
10846:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23585              		.loc 1 10846 17 is_stmt 1 view .LVU6628
 23586              		.loc 1 10846 37 is_stmt 0 view .LVU6629
 23587 0124 494B     		ldr	r3, .L1613
 23588 0126 1868     		ldr	r0, [r3]
 23589 0128 0669     		ldr	r6, [r0, #16]
 23590              		.loc 1 10846 29 view .LVU6630
 23591 012a 0123     		movs	r3, #1
 23592 012c 0DF10702 		add	r2, sp, #7
 23593 0130 5F21     		movs	r1, #95
 23594 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23595 0134 B047     		blx	r6
 23596              	.LVL2954:
 23597              		.loc 1 10846 26 view .LVU6631
 23598 0136 54FA80F4 		uxtab	r4, r4, r0
 23599              	.LVL2955:
 23600              		.loc 1 10846 26 view .LVU6632
ARM GAS  /tmp/ccO72alg.s 			page 657


 23601 013a E6B2     		uxtb	r6, r4
 23602 013c 64B2     		sxtb	r4, r4
 23603              	.LVL2956:
10847:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_LSB_REG,
10848:Core/Src/bno055.c ****                                                            &data2_u8r,
10849:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10850:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23604              		.loc 1 10850 17 is_stmt 1 view .LVU6633
 23605              		.loc 1 10850 20 is_stmt 0 view .LVU6634
 23606 013e 7CB9     		cbnz	r4, .L1604
10851:Core/Src/bno055.c ****                 {
10852:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 23607              		.loc 1 10852 21 is_stmt 1 view .LVU6635
 23608              		.loc 1 10852 49 is_stmt 0 view .LVU6636
 23609 0140 B5F90430 		ldrsh	r3, [r5, #4]
 23610              	.LVL2957:
10853:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_LSB, data1_u8r);
 23611              		.loc 1 10853 21 is_stmt 1 view .LVU6637
 23612              		.loc 1 10853 31 is_stmt 0 view .LVU6638
 23613 0144 8DF80730 		strb	r3, [sp, #7]
10854:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23614              		.loc 1 10854 21 is_stmt 1 view .LVU6639
 23615              		.loc 1 10854 41 is_stmt 0 view .LVU6640
 23616 0148 404B     		ldr	r3, .L1613
 23617              	.LVL2958:
 23618              		.loc 1 10854 41 view .LVU6641
 23619 014a 1868     		ldr	r0, [r3]
 23620 014c C468     		ldr	r4, [r0, #12]
 23621              	.LVL2959:
 23622              		.loc 1 10854 33 view .LVU6642
 23623 014e 0123     		movs	r3, #1
 23624 0150 0DF10702 		add	r2, sp, #7
 23625              	.LVL2960:
 23626              		.loc 1 10854 33 view .LVU6643
 23627 0154 5F21     		movs	r1, #95
 23628 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23629 0158 A047     		blx	r4
 23630              	.LVL2961:
 23631              		.loc 1 10854 30 view .LVU6644
 23632 015a 56FA80F4 		uxtab	r4, r6, r0
 23633 015e 64B2     		sxtb	r4, r4
 23634              	.LVL2962:
 23635              	.L1604:
10855:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_LSB_REG,
10856:Core/Src/bno055.c ****                                                                 &data2_u8r,
10857:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10858:Core/Src/bno055.c ****                 }
10859:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23636              		.loc 1 10859 17 is_stmt 1 view .LVU6645
 23637              		.loc 1 10859 37 is_stmt 0 view .LVU6646
 23638 0160 3A4B     		ldr	r3, .L1613
 23639 0162 1868     		ldr	r0, [r3]
 23640 0164 0669     		ldr	r6, [r0, #16]
 23641              		.loc 1 10859 29 view .LVU6647
 23642 0166 0123     		movs	r3, #1
 23643 0168 0DF10702 		add	r2, sp, #7
 23644 016c 6021     		movs	r1, #96
ARM GAS  /tmp/ccO72alg.s 			page 658


 23645 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23646 0170 B047     		blx	r6
 23647              	.LVL2963:
 23648              		.loc 1 10859 26 view .LVU6648
 23649 0172 54FA80F4 		uxtab	r4, r4, r0
 23650              	.LVL2964:
 23651              		.loc 1 10859 26 view .LVU6649
 23652 0176 E6B2     		uxtb	r6, r4
 23653 0178 64B2     		sxtb	r4, r4
 23654              	.LVL2965:
10860:Core/Src/bno055.c ****                                                            BNO055_MAG_OFFSET_Z_MSB_REG,
10861:Core/Src/bno055.c ****                                                            &data2_u8r,
10862:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10863:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23655              		.loc 1 10863 17 is_stmt 1 view .LVU6650
 23656              		.loc 1 10863 20 is_stmt 0 view .LVU6651
 23657 017a 7CB9     		cbnz	r4, .L1605
10864:Core/Src/bno055.c ****                 {
10865:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23658              		.loc 1 10865 21 is_stmt 1 view .LVU6652
 23659              		.loc 1 10865 34 is_stmt 0 view .LVU6653
 23660 017c 95F90530 		ldrsb	r3, [r5, #5]
 23661              	.LVL2966:
10866:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_OFFSET_Z_MSB, data1_u8r);
 23662              		.loc 1 10866 21 is_stmt 1 view .LVU6654
 23663              		.loc 1 10866 31 is_stmt 0 view .LVU6655
 23664 0180 8DF80730 		strb	r3, [sp, #7]
10867:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23665              		.loc 1 10867 21 is_stmt 1 view .LVU6656
 23666              		.loc 1 10867 41 is_stmt 0 view .LVU6657
 23667 0184 314B     		ldr	r3, .L1613
 23668              	.LVL2967:
 23669              		.loc 1 10867 41 view .LVU6658
 23670 0186 1868     		ldr	r0, [r3]
 23671 0188 C468     		ldr	r4, [r0, #12]
 23672              	.LVL2968:
 23673              		.loc 1 10867 33 view .LVU6659
 23674 018a 0123     		movs	r3, #1
 23675 018c 0DF10702 		add	r2, sp, #7
 23676              	.LVL2969:
 23677              		.loc 1 10867 33 view .LVU6660
 23678 0190 6021     		movs	r1, #96
 23679 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23680 0194 A047     		blx	r4
 23681              	.LVL2970:
 23682              		.loc 1 10867 30 view .LVU6661
 23683 0196 56FA80F4 		uxtab	r4, r6, r0
 23684 019a 64B2     		sxtb	r4, r4
 23685              	.LVL2971:
 23686              	.L1605:
10868:Core/Src/bno055.c ****                                                                 BNO055_MAG_OFFSET_Z_MSB_REG,
10869:Core/Src/bno055.c ****                                                                 &data2_u8r,
10870:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10871:Core/Src/bno055.c ****                 }
10872:Core/Src/bno055.c **** 
10873:Core/Src/bno055.c ****                 /* write Mag radius value*/
10874:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 659


 23687              		.loc 1 10874 17 is_stmt 1 view .LVU6662
 23688              		.loc 1 10874 37 is_stmt 0 view .LVU6663
 23689 019c 2B4B     		ldr	r3, .L1613
 23690 019e 1868     		ldr	r0, [r3]
 23691 01a0 0669     		ldr	r6, [r0, #16]
 23692              		.loc 1 10874 29 view .LVU6664
 23693 01a2 0123     		movs	r3, #1
 23694 01a4 0DF10702 		add	r2, sp, #7
 23695 01a8 6921     		movs	r1, #105
 23696 01aa 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23697 01ac B047     		blx	r6
 23698              	.LVL2972:
 23699              		.loc 1 10874 26 view .LVU6665
 23700 01ae 54FA80F4 		uxtab	r4, r4, r0
 23701              	.LVL2973:
 23702              		.loc 1 10874 26 view .LVU6666
 23703 01b2 E6B2     		uxtb	r6, r4
 23704 01b4 64B2     		sxtb	r4, r4
 23705              	.LVL2974:
10875:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_LSB_REG,
10876:Core/Src/bno055.c ****                                                            &data2_u8r,
10877:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10878:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23706              		.loc 1 10878 17 is_stmt 1 view .LVU6667
 23707              		.loc 1 10878 20 is_stmt 0 view .LVU6668
 23708 01b6 7CB9     		cbnz	r4, .L1606
10879:Core/Src/bno055.c ****                 {
10880:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r & BNO055_SIC_HEX_0_0_F_F_DATA));
 23709              		.loc 1 10880 21 is_stmt 1 view .LVU6669
 23710              		.loc 1 10880 49 is_stmt 0 view .LVU6670
 23711 01b8 B5F90630 		ldrsh	r3, [r5, #6]
 23712              	.LVL2975:
10881:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_LSB, data1_u8r);
 23713              		.loc 1 10881 21 is_stmt 1 view .LVU6671
 23714              		.loc 1 10881 31 is_stmt 0 view .LVU6672
 23715 01bc 8DF80730 		strb	r3, [sp, #7]
10882:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23716              		.loc 1 10882 21 is_stmt 1 view .LVU6673
 23717              		.loc 1 10882 41 is_stmt 0 view .LVU6674
 23718 01c0 224B     		ldr	r3, .L1613
 23719              	.LVL2976:
 23720              		.loc 1 10882 41 view .LVU6675
 23721 01c2 1868     		ldr	r0, [r3]
 23722 01c4 C468     		ldr	r4, [r0, #12]
 23723              	.LVL2977:
 23724              		.loc 1 10882 33 view .LVU6676
 23725 01c6 0123     		movs	r3, #1
 23726 01c8 0DF10702 		add	r2, sp, #7
 23727              	.LVL2978:
 23728              		.loc 1 10882 33 view .LVU6677
 23729 01cc 6921     		movs	r1, #105
 23730 01ce 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23731 01d0 A047     		blx	r4
 23732              	.LVL2979:
 23733              		.loc 1 10882 30 view .LVU6678
 23734 01d2 56FA80F4 		uxtab	r4, r6, r0
 23735 01d6 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 660


 23736              	.LVL2980:
 23737              	.L1606:
10883:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_LSB_REG,
10884:Core/Src/bno055.c ****                                                                 &data2_u8r,
10885:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10886:Core/Src/bno055.c ****                 }
10887:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23738              		.loc 1 10887 17 is_stmt 1 view .LVU6679
 23739              		.loc 1 10887 37 is_stmt 0 view .LVU6680
 23740 01d8 1C4B     		ldr	r3, .L1613
 23741 01da 1868     		ldr	r0, [r3]
 23742 01dc 0669     		ldr	r6, [r0, #16]
 23743              		.loc 1 10887 29 view .LVU6681
 23744 01de 0123     		movs	r3, #1
 23745 01e0 0DF10702 		add	r2, sp, #7
 23746 01e4 6A21     		movs	r1, #106
 23747 01e6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23748 01e8 B047     		blx	r6
 23749              	.LVL2981:
 23750              		.loc 1 10887 26 view .LVU6682
 23751 01ea 54FA80F4 		uxtab	r4, r4, r0
 23752              	.LVL2982:
 23753              		.loc 1 10887 26 view .LVU6683
 23754 01ee E6B2     		uxtb	r6, r4
 23755 01f0 64B2     		sxtb	r4, r4
 23756              	.LVL2983:
10888:Core/Src/bno055.c ****                                                            BNO055_MAG_RADIUS_MSB_REG,
10889:Core/Src/bno055.c ****                                                            &data2_u8r,
10890:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
10891:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 23757              		.loc 1 10891 17 is_stmt 1 view .LVU6684
 23758              		.loc 1 10891 20 is_stmt 0 view .LVU6685
 23759 01f2 C4B9     		cbnz	r4, .L1598
10892:Core/Src/bno055.c ****                 {
10893:Core/Src/bno055.c ****                     data1_u8r = ((s8)(mag_offset->r >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0_
 23760              		.loc 1 10893 21 is_stmt 1 view .LVU6686
 23761              		.loc 1 10893 34 is_stmt 0 view .LVU6687
 23762 01f4 95F90730 		ldrsb	r3, [r5, #7]
 23763              	.LVL2984:
10894:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_MAG_RADIUS_MSB, data1_u8r);
 23764              		.loc 1 10894 21 is_stmt 1 view .LVU6688
 23765              		.loc 1 10894 31 is_stmt 0 view .LVU6689
 23766 01f8 8DF80730 		strb	r3, [sp, #7]
10895:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 23767              		.loc 1 10895 21 is_stmt 1 view .LVU6690
 23768              		.loc 1 10895 41 is_stmt 0 view .LVU6691
 23769 01fc 134B     		ldr	r3, .L1613
 23770              	.LVL2985:
 23771              		.loc 1 10895 41 view .LVU6692
 23772 01fe 1868     		ldr	r0, [r3]
 23773 0200 C468     		ldr	r4, [r0, #12]
 23774              	.LVL2986:
 23775              		.loc 1 10895 33 view .LVU6693
 23776 0202 0123     		movs	r3, #1
 23777 0204 0DF10702 		add	r2, sp, #7
 23778              	.LVL2987:
 23779              		.loc 1 10895 33 view .LVU6694
ARM GAS  /tmp/ccO72alg.s 			page 661


 23780 0208 6A21     		movs	r1, #106
 23781 020a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23782 020c A047     		blx	r4
 23783              	.LVL2988:
 23784              		.loc 1 10895 30 view .LVU6695
 23785 020e 56FA80F4 		uxtab	r4, r6, r0
 23786 0212 64B2     		sxtb	r4, r4
 23787              	.LVL2989:
 23788              		.loc 1 10895 30 view .LVU6696
 23789 0214 07E0     		b	.L1598
 23790              	.LVL2990:
 23791              	.L1611:
10785:Core/Src/bno055.c ****             }
 23792              		.loc 1 10785 17 is_stmt 1 view .LVU6697
10785:Core/Src/bno055.c ****             }
 23793              		.loc 1 10785 28 is_stmt 0 view .LVU6698
 23794 0216 FFF7FEFF 		bl	bno055_set_operation_mode
 23795              	.LVL2991:
10785:Core/Src/bno055.c ****             }
 23796              		.loc 1 10785 25 view .LVU6699
 23797 021a 54FA80F4 		uxtab	r4, r4, r0
 23798 021e 64B2     		sxtb	r4, r4
 23799              	.LVL2992:
10785:Core/Src/bno055.c ****             }
 23800              		.loc 1 10785 25 view .LVU6700
 23801 0220 08E7     		b	.L1599
 23802              	.LVL2993:
 23803              	.L1608:
10896:Core/Src/bno055.c ****                                                                 BNO055_MAG_RADIUS_MSB_REG,
10897:Core/Src/bno055.c ****                                                                 &data2_u8r,
10898:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
10899:Core/Src/bno055.c ****                 }
10900:Core/Src/bno055.c ****             }
10901:Core/Src/bno055.c ****             else
10902:Core/Src/bno055.c ****             {
10903:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
10904:Core/Src/bno055.c ****             }
10905:Core/Src/bno055.c ****         }
10906:Core/Src/bno055.c ****         else
10907:Core/Src/bno055.c ****         {
10908:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 23804              		.loc 1 10908 22 view .LVU6701
 23805 0222 4FF0FF34 		mov	r4, #-1
 23806              	.LVL2994:
 23807              	.L1598:
10909:Core/Src/bno055.c ****         }
10910:Core/Src/bno055.c ****     }
10911:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 23808              		.loc 1 10911 5 is_stmt 1 view .LVU6702
 23809              		.loc 1 10911 24 is_stmt 0 view .LVU6703
 23810 0226 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 23811              		.loc 1 10911 8 view .LVU6704
 23812 022a 28B9     		cbnz	r0, .L1612
 23813              	.LVL2995:
 23814              	.L1597:
10912:Core/Src/bno055.c ****     {
10913:Core/Src/bno055.c ****         /* set the operation mode
ARM GAS  /tmp/ccO72alg.s 			page 662


10914:Core/Src/bno055.c ****          * of previous operation mode*/
10915:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
10916:Core/Src/bno055.c ****     }
10917:Core/Src/bno055.c **** 
10918:Core/Src/bno055.c ****     return com_rslt;
10919:Core/Src/bno055.c **** }
 23815              		.loc 1 10919 1 view .LVU6705
 23816 022c 2046     		mov	r0, r4
 23817 022e 02B0     		add	sp, sp, #8
 23818              	.LCFI683:
 23819              		.cfi_remember_state
 23820              		.cfi_def_cfa_offset 16
 23821              		@ sp needed
 23822 0230 70BD     		pop	{r4, r5, r6, pc}
 23823              	.LVL2996:
 23824              	.L1609:
 23825              	.LCFI684:
 23826              		.cfi_restore_state
10903:Core/Src/bno055.c ****             }
 23827              		.loc 1 10903 26 view .LVU6706
 23828 0232 4FF0FF34 		mov	r4, #-1
 23829              	.LVL2997:
10903:Core/Src/bno055.c ****             }
 23830              		.loc 1 10903 26 view .LVU6707
 23831 0236 F6E7     		b	.L1598
 23832              	.LVL2998:
 23833              	.L1612:
10915:Core/Src/bno055.c ****     }
 23834              		.loc 1 10915 9 is_stmt 1 view .LVU6708
10915:Core/Src/bno055.c ****     }
 23835              		.loc 1 10915 21 is_stmt 0 view .LVU6709
 23836 0238 FFF7FEFF 		bl	bno055_set_operation_mode
 23837              	.LVL2999:
10915:Core/Src/bno055.c ****     }
 23838              		.loc 1 10915 18 view .LVU6710
 23839 023c 54FA80F4 		uxtab	r4, r4, r0
 23840              	.LVL3000:
10915:Core/Src/bno055.c ****     }
 23841              		.loc 1 10915 18 view .LVU6711
 23842 0240 64B2     		sxtb	r4, r4
 23843              	.LVL3001:
10915:Core/Src/bno055.c ****     }
 23844              		.loc 1 10915 18 view .LVU6712
 23845 0242 F3E7     		b	.L1597
 23846              	.LVL3002:
 23847              	.L1607:
10773:Core/Src/bno055.c ****     }
 23848              		.loc 1 10773 16 view .LVU6713
 23849 0244 6FF07E04 		mvn	r4, #126
 23850 0248 F0E7     		b	.L1597
 23851              	.L1614:
 23852 024a 00BF     		.align	2
 23853              	.L1613:
 23854 024c 00000000 		.word	.LANCHOR0
 23855              		.cfi_endproc
 23856              	.LFE172:
 23858              		.section	.text.bno055_read_gyro_offset,"ax",%progbits
ARM GAS  /tmp/ccO72alg.s 			page 663


 23859              		.align	1
 23860              		.global	bno055_read_gyro_offset
 23861              		.syntax unified
 23862              		.thumb
 23863              		.thumb_func
 23865              	bno055_read_gyro_offset:
 23866              	.LVL3003:
 23867              	.LFB173:
10920:Core/Src/bno055.c **** 
10921:Core/Src/bno055.c **** /*!
10922:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
10923:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
10924:Core/Src/bno055.c ****  *
10925:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
10926:Core/Src/bno055.c ****  *
10927:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
10928:Core/Src/bno055.c ****  *      ------------------- | ----------------
10929:Core/Src/bno055.c ****  *               x          |  gyro offset x
10930:Core/Src/bno055.c ****  *               y          |  gyro offset y
10931:Core/Src/bno055.c ****  *               z          |  gyro offset z
10932:Core/Src/bno055.c ****  *
10933:Core/Src/bno055.c ****  *
10934:Core/Src/bno055.c ****  *  @return results of bus communication function
10935:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
10936:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
10937:Core/Src/bno055.c ****  *
10938:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
10939:Core/Src/bno055.c ****  *  the range of gyro sensor
10940:Core/Src/bno055.c ****  *
10941:Core/Src/bno055.c ****  *  gyro G range         | offset range
10942:Core/Src/bno055.c ****  * --------------------  | ------------
10943:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
10944:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
10945:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
10946:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
10947:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
10948:Core/Src/bno055.c ****  *
10949:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
10950:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
10951:Core/Src/bno055.c ****  */
10952:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_read_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
10953:Core/Src/bno055.c **** {
 23868              		.loc 1 10953 1 is_stmt 1 view -0
 23869              		.cfi_startproc
 23870              		@ args = 0, pretend = 0, frame = 8
 23871              		@ frame_needed = 0, uses_anonymous_args = 0
 23872              		.loc 1 10953 1 is_stmt 0 view .LVU6715
 23873 0000 30B5     		push	{r4, r5, lr}
 23874              	.LCFI685:
 23875              		.cfi_def_cfa_offset 12
 23876              		.cfi_offset 4, -12
 23877              		.cfi_offset 5, -8
 23878              		.cfi_offset 14, -4
 23879 0002 83B0     		sub	sp, sp, #12
 23880              	.LCFI686:
 23881              		.cfi_def_cfa_offset 24
 23882 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 664


10954:Core/Src/bno055.c ****     /* Variable used to return value of
10955:Core/Src/bno055.c ****      * communication routine*/
10956:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 23883              		.loc 1 10956 5 is_stmt 1 view .LVU6716
 23884              	.LVL3004:
10957:Core/Src/bno055.c **** 
10958:Core/Src/bno055.c ****     /* Array holding the gyro offset values
10959:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] - offset x->LSB
10960:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] - offset x->MSB
10961:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] - offset y->LSB
10962:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] - offset y->MSB
10963:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] - offset z->LSB
10964:Core/Src/bno055.c ****      * data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] - offset z->MSB
10965:Core/Src/bno055.c ****      */
10966:Core/Src/bno055.c ****     u8 data_u8[BNO055_GYRO_OFFSET_ARRAY] = {
 23885              		.loc 1 10966 5 view .LVU6717
 23886              		.loc 1 10966 8 is_stmt 0 view .LVU6718
 23887 0006 1F4B     		ldr	r3, .L1624
 23888 0008 93E80300 		ldm	r3, {r0, r1}
 23889              	.LVL3005:
 23890              		.loc 1 10966 8 view .LVU6719
 23891 000c 0090     		str	r0, [sp]
 23892 000e ADF80410 		strh	r1, [sp, #4]	@ movhi
10967:Core/Src/bno055.c ****         BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VALUE, BNO055_INIT_VAL
10968:Core/Src/bno055.c ****     };
10969:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 23893              		.loc 1 10969 5 is_stmt 1 view .LVU6720
 23894              	.LVL3006:
10970:Core/Src/bno055.c **** 
10971:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
10972:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 23895              		.loc 1 10972 5 view .LVU6721
 23896              		.loc 1 10972 18 is_stmt 0 view .LVU6722
 23897 0012 1D4B     		ldr	r3, .L1624+4
 23898 0014 1B68     		ldr	r3, [r3]
 23899              		.loc 1 10972 8 view .LVU6723
 23900 0016 5BB3     		cbz	r3, .L1619
10973:Core/Src/bno055.c ****     {
10974:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
10975:Core/Src/bno055.c ****     }
10976:Core/Src/bno055.c ****     else
10977:Core/Src/bno055.c ****     {
10978:Core/Src/bno055.c ****         /*condition check for page, gyro offset is
10979:Core/Src/bno055.c ****          * available in the page zero*/
10980:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ZERO)
 23901              		.loc 1 10980 9 is_stmt 1 view .LVU6724
 23902              		.loc 1 10980 21 is_stmt 0 view .LVU6725
 23903 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23904              		.loc 1 10980 12 view .LVU6726
 23905 001a 1BBB     		cbnz	r3, .L1623
 23906              	.LVL3007:
 23907              	.L1617:
10981:Core/Src/bno055.c ****         {
10982:Core/Src/bno055.c ****             /* Write the page zero*/
10983:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ZERO);
10984:Core/Src/bno055.c ****         }
10985:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ZERO))
ARM GAS  /tmp/ccO72alg.s 			page 665


 23908              		.loc 1 10985 53 discriminator 1 view .LVU6727
 23909 001c 1A4B     		ldr	r3, .L1624+4
 23910 001e 1B68     		ldr	r3, [r3]
 23911 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23912              		.loc 1 10985 41 discriminator 1 view .LVU6728
 23913 0022 43BB     		cbnz	r3, .L1620
 23914              	.L1618:
10986:Core/Src/bno055.c ****         {
10987:Core/Src/bno055.c ****             /* Read gyro offset value it the six bytes of data*/
10988:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 23915              		.loc 1 10988 13 is_stmt 1 view .LVU6729
 23916              		.loc 1 10988 32 is_stmt 0 view .LVU6730
 23917 0024 184B     		ldr	r3, .L1624+4
 23918 0026 1868     		ldr	r0, [r3]
 23919 0028 0569     		ldr	r5, [r0, #16]
 23920              		.loc 1 10988 24 view .LVU6731
 23921 002a 0623     		movs	r3, #6
 23922 002c 6A46     		mov	r2, sp
 23923 002e 6121     		movs	r1, #97
 23924 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 23925 0032 A847     		blx	r5
 23926              	.LVL3008:
10989:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_X_LSB_REG,
10990:Core/Src/bno055.c ****                                                       data_u8,
10991:Core/Src/bno055.c ****                                                       BNO055_GYRO_OFFSET_ARRAY);
10992:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 23927              		.loc 1 10992 13 is_stmt 1 view .LVU6732
 23928              		.loc 1 10992 16 is_stmt 0 view .LVU6733
 23929 0034 10BB     		cbnz	r0, .L1621
10993:Core/Src/bno055.c ****             {
10994:Core/Src/bno055.c ****                 /* Read gyro x offset value*/
10995:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23930              		.loc 1 10995 17 is_stmt 1 view .LVU6734
10996:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10997:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23931              		.loc 1 10997 17 view .LVU6735
10998:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_X
10999:Core/Src/bno055.c ****                 gyro_offset->x =
 23932              		.loc 1 10999 17 view .LVU6736
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23933              		.loc 1 11000 34 is_stmt 0 view .LVU6737
 23934 0036 9DF90120 		ldrsb	r2, [sp, #1]
11001:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_X_LSB]));
 23935              		.loc 1 11001 35 view .LVU6738
 23936 003a 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
11000:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23937              		.loc 1 11000 21 view .LVU6739
 23938 003e 43EA0223 		orr	r3, r3, r2, lsl #8
10999:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_X_MSB])) << (BNO055_SHIFT_E
 23939              		.loc 1 10999 32 view .LVU6740
 23940 0042 2380     		strh	r3, [r4]	@ movhi
11002:Core/Src/bno055.c **** 
11003:Core/Src/bno055.c ****                 /* Read gyro y offset value*/
11004:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23941              		.loc 1 11004 17 is_stmt 1 view .LVU6741
11005:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11006:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
ARM GAS  /tmp/ccO72alg.s 			page 666


 23942              		.loc 1 11006 17 view .LVU6742
11007:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Y
11008:Core/Src/bno055.c ****                 gyro_offset->y =
 23943              		.loc 1 11008 17 view .LVU6743
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23944              		.loc 1 11009 34 is_stmt 0 view .LVU6744
 23945 0044 9DF90320 		ldrsb	r2, [sp, #3]
11010:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Y_LSB]));
 23946              		.loc 1 11010 35 view .LVU6745
 23947 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
11009:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23948              		.loc 1 11009 21 view .LVU6746
 23949 004c 43EA0223 		orr	r3, r3, r2, lsl #8
11008:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Y_MSB])) << (BNO055_SHIFT_E
 23950              		.loc 1 11008 32 view .LVU6747
 23951 0050 6380     		strh	r3, [r4, #2]	@ movhi
11011:Core/Src/bno055.c **** 
11012:Core/Src/bno055.c ****                 /* Read gyro z offset value*/
11013:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23952              		.loc 1 11013 17 is_stmt 1 view .LVU6748
11014:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11015:Core/Src/bno055.c ****                 data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB] = BNO055_GET_BITSLICE(data_u8[BNO055_SENSO
 23953              		.loc 1 11015 17 view .LVU6749
11016:Core/Src/bno055.c ****                                                                                BNO055_GYRO_OFFSET_Z
11017:Core/Src/bno055.c ****                 gyro_offset->z =
 23954              		.loc 1 11017 17 view .LVU6750
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23955              		.loc 1 11018 34 is_stmt 0 view .LVU6751
 23956 0052 9DF90520 		ldrsb	r2, [sp, #5]
11019:Core/Src/bno055.c ****                           (data_u8[BNO055_SENSOR_OFFSET_DATA_Z_LSB]));
 23957              		.loc 1 11019 35 view .LVU6752
 23958 0056 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
11018:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23959              		.loc 1 11018 21 view .LVU6753
 23960 005a 43EA0223 		orr	r3, r3, r2, lsl #8
11017:Core/Src/bno055.c ****                     (s16)((((s32)(s8)(data_u8[BNO055_SENSOR_OFFSET_DATA_Z_MSB])) << (BNO055_SHIFT_E
 23961              		.loc 1 11017 32 view .LVU6754
 23962 005e A380     		strh	r3, [r4, #4]	@ movhi
 23963              	.LVL3009:
 23964              	.L1616:
11020:Core/Src/bno055.c ****             }
11021:Core/Src/bno055.c ****             else
11022:Core/Src/bno055.c ****             {
11023:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11024:Core/Src/bno055.c ****             }
11025:Core/Src/bno055.c ****         }
11026:Core/Src/bno055.c ****         else
11027:Core/Src/bno055.c ****         {
11028:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11029:Core/Src/bno055.c ****         }
11030:Core/Src/bno055.c ****     }
11031:Core/Src/bno055.c **** 
11032:Core/Src/bno055.c ****     return com_rslt;
11033:Core/Src/bno055.c **** }
 23965              		.loc 1 11033 1 view .LVU6755
 23966 0060 03B0     		add	sp, sp, #12
 23967              	.LCFI687:
ARM GAS  /tmp/ccO72alg.s 			page 667


 23968              		.cfi_remember_state
 23969              		.cfi_def_cfa_offset 12
 23970              		@ sp needed
 23971 0062 30BD     		pop	{r4, r5, pc}
 23972              	.LVL3010:
 23973              	.L1623:
 23974              	.LCFI688:
 23975              		.cfi_restore_state
10983:Core/Src/bno055.c ****         }
 23976              		.loc 1 10983 13 is_stmt 1 view .LVU6756
10983:Core/Src/bno055.c ****         }
 23977              		.loc 1 10983 23 is_stmt 0 view .LVU6757
 23978 0064 0020     		movs	r0, #0
 23979 0066 FFF7FEFF 		bl	bno055_write_page_id
 23980              	.LVL3011:
10985:Core/Src/bno055.c ****         {
 23981              		.loc 1 10985 9 is_stmt 1 view .LVU6758
10985:Core/Src/bno055.c ****         {
 23982              		.loc 1 10985 12 is_stmt 0 view .LVU6759
 23983 006a 0028     		cmp	r0, #0
 23984 006c DAD0     		beq	.L1618
 23985 006e D5E7     		b	.L1617
 23986              	.LVL3012:
 23987              	.L1619:
10974:Core/Src/bno055.c ****     }
 23988              		.loc 1 10974 16 view .LVU6760
 23989 0070 6FF07E00 		mvn	r0, #126
 23990 0074 F4E7     		b	.L1616
 23991              	.LVL3013:
 23992              	.L1620:
11028:Core/Src/bno055.c ****         }
 23993              		.loc 1 11028 22 view .LVU6761
 23994 0076 4FF0FF30 		mov	r0, #-1
 23995 007a F1E7     		b	.L1616
 23996              	.LVL3014:
 23997              	.L1621:
11023:Core/Src/bno055.c ****             }
 23998              		.loc 1 11023 26 view .LVU6762
 23999 007c 4FF0FF30 		mov	r0, #-1
 24000              	.LVL3015:
11023:Core/Src/bno055.c ****             }
 24001              		.loc 1 11023 26 view .LVU6763
 24002 0080 EEE7     		b	.L1616
 24003              	.L1625:
 24004 0082 00BF     		.align	2
 24005              	.L1624:
 24006 0084 00000000 		.word	.LANCHOR1
 24007 0088 00000000 		.word	.LANCHOR0
 24008              		.cfi_endproc
 24009              	.LFE173:
 24011              		.section	.text.bno055_write_gyro_offset,"ax",%progbits
 24012              		.align	1
 24013              		.global	bno055_write_gyro_offset
 24014              		.syntax unified
 24015              		.thumb
 24016              		.thumb_func
 24018              	bno055_write_gyro_offset:
ARM GAS  /tmp/ccO72alg.s 			page 668


 24019              	.LVL3016:
 24020              	.LFB174:
11034:Core/Src/bno055.c **** 
11035:Core/Src/bno055.c **** /*!
11036:Core/Src/bno055.c ****  *  @brief This API is used to read gyro offset
11037:Core/Src/bno055.c ****  *  offset form register 0x61 to 0x66
11038:Core/Src/bno055.c ****  *
11039:Core/Src/bno055.c ****  *  @param gyro_offset : The value of gyro offset
11040:Core/Src/bno055.c ****  *
11041:Core/Src/bno055.c ****  *      bno055_gyro_offset_t  |     result
11042:Core/Src/bno055.c ****  *      ------------------- | ----------------
11043:Core/Src/bno055.c ****  *               x          |  gyro offset x
11044:Core/Src/bno055.c ****  *               y          |  gyro offset y
11045:Core/Src/bno055.c ****  *               z          |  gyro offset z
11046:Core/Src/bno055.c ****  *
11047:Core/Src/bno055.c ****  *
11048:Core/Src/bno055.c ****  *  @return results of bus communication function
11049:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11050:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11051:Core/Src/bno055.c ****  *
11052:Core/Src/bno055.c ****  *  @note  The range of the gyro offset varies based on
11053:Core/Src/bno055.c ****  *  the range of gyro sensor
11054:Core/Src/bno055.c ****  *
11055:Core/Src/bno055.c ****  *  gyro G range         | offset range
11056:Core/Src/bno055.c ****  * --------------------  | ------------
11057:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_2000DPS   | +/-32000
11058:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_1000DPS   | +/-16000
11059:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_500DPS    | +/-8000
11060:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_250DPS    | +/-4000
11061:Core/Src/bno055.c ****  *  BNO055_GYRO_RANGE_125DPS    | +/-2000
11062:Core/Src/bno055.c ****  *
11063:Core/Src/bno055.c ****  *  Gyro range can be configured by using the
11064:Core/Src/bno055.c ****  *  bno055_set_gyro_range() API
11065:Core/Src/bno055.c ****  */
11066:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_write_gyro_offset(struct bno055_gyro_offset_t  *gyro_offset)
11067:Core/Src/bno055.c **** {
 24021              		.loc 1 11067 1 is_stmt 1 view -0
 24022              		.cfi_startproc
 24023              		@ args = 0, pretend = 0, frame = 8
 24024              		@ frame_needed = 0, uses_anonymous_args = 0
 24025              		.loc 1 11067 1 is_stmt 0 view .LVU6765
 24026 0000 70B5     		push	{r4, r5, r6, lr}
 24027              	.LCFI689:
 24028              		.cfi_def_cfa_offset 16
 24029              		.cfi_offset 4, -16
 24030              		.cfi_offset 5, -12
 24031              		.cfi_offset 6, -8
 24032              		.cfi_offset 14, -4
 24033 0002 82B0     		sub	sp, sp, #8
 24034              	.LCFI690:
 24035              		.cfi_def_cfa_offset 24
11068:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24036              		.loc 1 11068 5 is_stmt 1 view .LVU6766
 24037              	.LVL3017:
11069:Core/Src/bno055.c ****     u8 data1_u8r = BNO055_INIT_VALUE;
 24038              		.loc 1 11069 5 view .LVU6767
11070:Core/Src/bno055.c ****     u8 data2_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccO72alg.s 			page 669


 24039              		.loc 1 11070 5 view .LVU6768
 24040              		.loc 1 11070 8 is_stmt 0 view .LVU6769
 24041 0004 0023     		movs	r3, #0
 24042 0006 8DF80730 		strb	r3, [sp, #7]
11071:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24043              		.loc 1 11071 5 is_stmt 1 view .LVU6770
 24044              		.loc 1 11071 8 is_stmt 0 view .LVU6771
 24045 000a 8DF80630 		strb	r3, [sp, #6]
11072:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24046              		.loc 1 11072 5 is_stmt 1 view .LVU6772
 24047              	.LVL3018:
11073:Core/Src/bno055.c **** 
11074:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11075:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24048              		.loc 1 11075 5 view .LVU6773
 24049              		.loc 1 11075 18 is_stmt 0 view .LVU6774
 24050 000e 714B     		ldr	r3, .L1641
 24051 0010 1B68     		ldr	r3, [r3]
 24052              		.loc 1 11075 8 view .LVU6775
 24053 0012 002B     		cmp	r3, #0
 24054 0014 00F0DA80 		beq	.L1635
 24055 0018 0546     		mov	r5, r0
11076:Core/Src/bno055.c ****     {
11077:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11078:Core/Src/bno055.c ****     }
11079:Core/Src/bno055.c ****     else
11080:Core/Src/bno055.c ****     {
11081:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11082:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11083:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11084:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24056              		.loc 1 11084 9 is_stmt 1 view .LVU6776
 24057              		.loc 1 11084 19 is_stmt 0 view .LVU6777
 24058 001a 0DF10600 		add	r0, sp, #6
 24059              	.LVL3019:
 24060              		.loc 1 11084 19 view .LVU6778
 24061 001e FFF7FEFF 		bl	bno055_get_operation_mode
 24062              	.LVL3020:
11085:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24063              		.loc 1 11085 9 is_stmt 1 view .LVU6779
 24064              		.loc 1 11085 12 is_stmt 0 view .LVU6780
 24065 0022 0446     		mov	r4, r0
 24066 0024 0028     		cmp	r0, #0
 24067 0026 40F0C080 		bne	.L1636
11086:Core/Src/bno055.c ****         {
11087:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24068              		.loc 1 11087 13 is_stmt 1 view .LVU6781
 24069              		.loc 1 11087 32 is_stmt 0 view .LVU6782
 24070 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24071              		.loc 1 11087 16 view .LVU6783
 24072 002e 002B     		cmp	r3, #0
 24073 0030 40F0B580 		bne	.L1639
 24074              	.LVL3021:
 24075              	.L1629:
11088:Core/Src/bno055.c ****             {
11089:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11090:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 670


11091:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24076              		.loc 1 11091 13 is_stmt 1 view .LVU6784
 24077              		.loc 1 11091 16 is_stmt 0 view .LVU6785
 24078 0034 002C     		cmp	r4, #0
 24079 0036 40F0C080 		bne	.L1637
11092:Core/Src/bno055.c ****             {
11093:Core/Src/bno055.c ****                 /* write gryo offset x value*/
11094:Core/Src/bno055.c ****                 com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24080              		.loc 1 11094 17 is_stmt 1 view .LVU6786
 24081              		.loc 1 11094 36 is_stmt 0 view .LVU6787
 24082 003a 664B     		ldr	r3, .L1641
 24083 003c 1868     		ldr	r0, [r3]
 24084 003e 0469     		ldr	r4, [r0, #16]
 24085              	.LVL3022:
 24086              		.loc 1 11094 28 view .LVU6788
 24087 0040 0123     		movs	r3, #1
 24088 0042 0DF10702 		add	r2, sp, #7
 24089 0046 6121     		movs	r1, #97
 24090 0048 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24091 004a A047     		blx	r4
 24092              	.LVL3023:
11095:Core/Src/bno055.c ****                                                           BNO055_GYRO_OFFSET_X_LSB_REG,
11096:Core/Src/bno055.c ****                                                           &data2_u8r,
11097:Core/Src/bno055.c ****                                                           BNO055_GEN_READ_WRITE_LENGTH);
11098:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24093              		.loc 1 11098 17 is_stmt 1 view .LVU6789
 24094              		.loc 1 11098 20 is_stmt 0 view .LVU6790
 24095 004c 0446     		mov	r4, r0
 24096 004e 78B9     		cbnz	r0, .L1630
11099:Core/Src/bno055.c ****                 {
11100:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x & BNO055_SIC_HEX_0_0_F_F_DATA));
 24097              		.loc 1 11100 21 is_stmt 1 view .LVU6791
 24098              		.loc 1 11100 50 is_stmt 0 view .LVU6792
 24099 0050 B5F90030 		ldrsh	r3, [r5]
 24100              	.LVL3024:
11101:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_LSB, data1_u8r)
 24101              		.loc 1 11101 21 is_stmt 1 view .LVU6793
 24102              		.loc 1 11101 31 is_stmt 0 view .LVU6794
 24103 0054 8DF80730 		strb	r3, [sp, #7]
11102:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24104              		.loc 1 11102 21 is_stmt 1 view .LVU6795
 24105              		.loc 1 11102 41 is_stmt 0 view .LVU6796
 24106 0058 5E4B     		ldr	r3, .L1641
 24107              	.LVL3025:
 24108              		.loc 1 11102 41 view .LVU6797
 24109 005a 1868     		ldr	r0, [r3]
 24110              	.LVL3026:
 24111              		.loc 1 11102 41 view .LVU6798
 24112 005c C668     		ldr	r6, [r0, #12]
 24113              		.loc 1 11102 33 view .LVU6799
 24114 005e 0123     		movs	r3, #1
 24115 0060 0DF10702 		add	r2, sp, #7
 24116              	.LVL3027:
 24117              		.loc 1 11102 33 view .LVU6800
 24118 0064 6121     		movs	r1, #97
 24119 0066 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24120 0068 B047     		blx	r6
ARM GAS  /tmp/ccO72alg.s 			page 671


 24121              	.LVL3028:
 24122              		.loc 1 11102 30 view .LVU6801
 24123 006a 54FA80F4 		uxtab	r4, r4, r0
 24124 006e 64B2     		sxtb	r4, r4
 24125              	.LVL3029:
 24126              	.L1630:
11103:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_LSB_REG,
11104:Core/Src/bno055.c ****                                                                 &data2_u8r,
11105:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11106:Core/Src/bno055.c ****                 }
11107:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24127              		.loc 1 11107 17 is_stmt 1 view .LVU6802
 24128              		.loc 1 11107 37 is_stmt 0 view .LVU6803
 24129 0070 584B     		ldr	r3, .L1641
 24130 0072 1868     		ldr	r0, [r3]
 24131 0074 0669     		ldr	r6, [r0, #16]
 24132              		.loc 1 11107 29 view .LVU6804
 24133 0076 0123     		movs	r3, #1
 24134 0078 0DF10702 		add	r2, sp, #7
 24135 007c 6221     		movs	r1, #98
 24136 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24137 0080 B047     		blx	r6
 24138              	.LVL3030:
 24139              		.loc 1 11107 26 view .LVU6805
 24140 0082 54FA80F4 		uxtab	r4, r4, r0
 24141              	.LVL3031:
 24142              		.loc 1 11107 26 view .LVU6806
 24143 0086 E6B2     		uxtb	r6, r4
 24144 0088 64B2     		sxtb	r4, r4
 24145              	.LVL3032:
11108:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_X_MSB_REG,
11109:Core/Src/bno055.c ****                                                            &data2_u8r,
11110:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11111:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24146              		.loc 1 11111 17 is_stmt 1 view .LVU6807
 24147              		.loc 1 11111 20 is_stmt 0 view .LVU6808
 24148 008a 7CB9     		cbnz	r4, .L1631
11112:Core/Src/bno055.c ****                 {
11113:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->x >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24149              		.loc 1 11113 21 is_stmt 1 view .LVU6809
 24150              		.loc 1 11113 34 is_stmt 0 view .LVU6810
 24151 008c 95F90130 		ldrsb	r3, [r5, #1]
 24152              	.LVL3033:
11114:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_X_MSB, data1_u8r)
 24153              		.loc 1 11114 21 is_stmt 1 view .LVU6811
 24154              		.loc 1 11114 31 is_stmt 0 view .LVU6812
 24155 0090 8DF80730 		strb	r3, [sp, #7]
11115:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24156              		.loc 1 11115 21 is_stmt 1 view .LVU6813
 24157              		.loc 1 11115 41 is_stmt 0 view .LVU6814
 24158 0094 4F4B     		ldr	r3, .L1641
 24159              	.LVL3034:
 24160              		.loc 1 11115 41 view .LVU6815
 24161 0096 1868     		ldr	r0, [r3]
 24162 0098 C468     		ldr	r4, [r0, #12]
 24163              	.LVL3035:
 24164              		.loc 1 11115 33 view .LVU6816
ARM GAS  /tmp/ccO72alg.s 			page 672


 24165 009a 0123     		movs	r3, #1
 24166 009c 0DF10702 		add	r2, sp, #7
 24167              	.LVL3036:
 24168              		.loc 1 11115 33 view .LVU6817
 24169 00a0 6221     		movs	r1, #98
 24170 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24171 00a4 A047     		blx	r4
 24172              	.LVL3037:
 24173              		.loc 1 11115 30 view .LVU6818
 24174 00a6 56FA80F4 		uxtab	r4, r6, r0
 24175 00aa 64B2     		sxtb	r4, r4
 24176              	.LVL3038:
 24177              	.L1631:
11116:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_X_MSB_REG,
11117:Core/Src/bno055.c ****                                                                 &data2_u8r,
11118:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11119:Core/Src/bno055.c ****                 }
11120:Core/Src/bno055.c **** 
11121:Core/Src/bno055.c ****                 /* write gryo offset y value*/
11122:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24178              		.loc 1 11122 17 is_stmt 1 view .LVU6819
 24179              		.loc 1 11122 37 is_stmt 0 view .LVU6820
 24180 00ac 494B     		ldr	r3, .L1641
 24181 00ae 1868     		ldr	r0, [r3]
 24182 00b0 0669     		ldr	r6, [r0, #16]
 24183              		.loc 1 11122 29 view .LVU6821
 24184 00b2 0123     		movs	r3, #1
 24185 00b4 0DF10702 		add	r2, sp, #7
 24186 00b8 6321     		movs	r1, #99
 24187 00ba 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24188 00bc B047     		blx	r6
 24189              	.LVL3039:
 24190              		.loc 1 11122 26 view .LVU6822
 24191 00be 54FA80F4 		uxtab	r4, r4, r0
 24192              	.LVL3040:
 24193              		.loc 1 11122 26 view .LVU6823
 24194 00c2 E6B2     		uxtb	r6, r4
 24195 00c4 64B2     		sxtb	r4, r4
 24196              	.LVL3041:
11123:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_LSB_REG,
11124:Core/Src/bno055.c ****                                                            &data2_u8r,
11125:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11126:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24197              		.loc 1 11126 17 is_stmt 1 view .LVU6824
 24198              		.loc 1 11126 20 is_stmt 0 view .LVU6825
 24199 00c6 7CB9     		cbnz	r4, .L1632
11127:Core/Src/bno055.c ****                 {
11128:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y & BNO055_SIC_HEX_0_0_F_F_DATA));
 24200              		.loc 1 11128 21 is_stmt 1 view .LVU6826
 24201              		.loc 1 11128 50 is_stmt 0 view .LVU6827
 24202 00c8 B5F90230 		ldrsh	r3, [r5, #2]
 24203              	.LVL3042:
11129:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_LSB, data1_u8r)
 24204              		.loc 1 11129 21 is_stmt 1 view .LVU6828
 24205              		.loc 1 11129 31 is_stmt 0 view .LVU6829
 24206 00cc 8DF80730 		strb	r3, [sp, #7]
11130:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 673


 24207              		.loc 1 11130 21 is_stmt 1 view .LVU6830
 24208              		.loc 1 11130 41 is_stmt 0 view .LVU6831
 24209 00d0 404B     		ldr	r3, .L1641
 24210              	.LVL3043:
 24211              		.loc 1 11130 41 view .LVU6832
 24212 00d2 1868     		ldr	r0, [r3]
 24213 00d4 C468     		ldr	r4, [r0, #12]
 24214              	.LVL3044:
 24215              		.loc 1 11130 33 view .LVU6833
 24216 00d6 0123     		movs	r3, #1
 24217 00d8 0DF10702 		add	r2, sp, #7
 24218              	.LVL3045:
 24219              		.loc 1 11130 33 view .LVU6834
 24220 00dc 6321     		movs	r1, #99
 24221 00de 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24222 00e0 A047     		blx	r4
 24223              	.LVL3046:
 24224              		.loc 1 11130 30 view .LVU6835
 24225 00e2 56FA80F4 		uxtab	r4, r6, r0
 24226 00e6 64B2     		sxtb	r4, r4
 24227              	.LVL3047:
 24228              	.L1632:
11131:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_LSB_REG,
11132:Core/Src/bno055.c ****                                                                 &data2_u8r,
11133:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11134:Core/Src/bno055.c ****                 }
11135:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24229              		.loc 1 11135 17 is_stmt 1 view .LVU6836
 24230              		.loc 1 11135 37 is_stmt 0 view .LVU6837
 24231 00e8 3A4B     		ldr	r3, .L1641
 24232 00ea 1868     		ldr	r0, [r3]
 24233 00ec 0669     		ldr	r6, [r0, #16]
 24234              		.loc 1 11135 29 view .LVU6838
 24235 00ee 0123     		movs	r3, #1
 24236 00f0 0DF10702 		add	r2, sp, #7
 24237 00f4 6421     		movs	r1, #100
 24238 00f6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24239 00f8 B047     		blx	r6
 24240              	.LVL3048:
 24241              		.loc 1 11135 26 view .LVU6839
 24242 00fa 54FA80F4 		uxtab	r4, r4, r0
 24243              	.LVL3049:
 24244              		.loc 1 11135 26 view .LVU6840
 24245 00fe E6B2     		uxtb	r6, r4
 24246 0100 64B2     		sxtb	r4, r4
 24247              	.LVL3050:
11136:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Y_MSB_REG,
11137:Core/Src/bno055.c ****                                                            &data2_u8r,
11138:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11139:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24248              		.loc 1 11139 17 is_stmt 1 view .LVU6841
 24249              		.loc 1 11139 20 is_stmt 0 view .LVU6842
 24250 0102 7CB9     		cbnz	r4, .L1633
11140:Core/Src/bno055.c ****                 {
11141:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->y >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24251              		.loc 1 11141 21 is_stmt 1 view .LVU6843
 24252              		.loc 1 11141 34 is_stmt 0 view .LVU6844
ARM GAS  /tmp/ccO72alg.s 			page 674


 24253 0104 95F90330 		ldrsb	r3, [r5, #3]
 24254              	.LVL3051:
11142:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Y_MSB, data1_u8r)
 24255              		.loc 1 11142 21 is_stmt 1 view .LVU6845
 24256              		.loc 1 11142 31 is_stmt 0 view .LVU6846
 24257 0108 8DF80730 		strb	r3, [sp, #7]
11143:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24258              		.loc 1 11143 21 is_stmt 1 view .LVU6847
 24259              		.loc 1 11143 41 is_stmt 0 view .LVU6848
 24260 010c 314B     		ldr	r3, .L1641
 24261              	.LVL3052:
 24262              		.loc 1 11143 41 view .LVU6849
 24263 010e 1868     		ldr	r0, [r3]
 24264 0110 C468     		ldr	r4, [r0, #12]
 24265              	.LVL3053:
 24266              		.loc 1 11143 33 view .LVU6850
 24267 0112 0123     		movs	r3, #1
 24268 0114 0DF10702 		add	r2, sp, #7
 24269              	.LVL3054:
 24270              		.loc 1 11143 33 view .LVU6851
 24271 0118 6421     		movs	r1, #100
 24272 011a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24273 011c A047     		blx	r4
 24274              	.LVL3055:
 24275              		.loc 1 11143 30 view .LVU6852
 24276 011e 56FA80F4 		uxtab	r4, r6, r0
 24277 0122 64B2     		sxtb	r4, r4
 24278              	.LVL3056:
 24279              	.L1633:
11144:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Y_MSB_REG,
11145:Core/Src/bno055.c ****                                                                 &data2_u8r,
11146:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11147:Core/Src/bno055.c ****                 }
11148:Core/Src/bno055.c **** 
11149:Core/Src/bno055.c ****                 /* write gryo offset z value*/
11150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24280              		.loc 1 11150 17 is_stmt 1 view .LVU6853
 24281              		.loc 1 11150 37 is_stmt 0 view .LVU6854
 24282 0124 2B4B     		ldr	r3, .L1641
 24283 0126 1868     		ldr	r0, [r3]
 24284 0128 0669     		ldr	r6, [r0, #16]
 24285              		.loc 1 11150 29 view .LVU6855
 24286 012a 0123     		movs	r3, #1
 24287 012c 0DF10702 		add	r2, sp, #7
 24288 0130 6521     		movs	r1, #101
 24289 0132 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24290 0134 B047     		blx	r6
 24291              	.LVL3057:
 24292              		.loc 1 11150 26 view .LVU6856
 24293 0136 54FA80F4 		uxtab	r4, r4, r0
 24294              	.LVL3058:
 24295              		.loc 1 11150 26 view .LVU6857
 24296 013a E6B2     		uxtb	r6, r4
 24297 013c 64B2     		sxtb	r4, r4
 24298              	.LVL3059:
11151:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_LSB_REG,
11152:Core/Src/bno055.c ****                                                            &data2_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 675


11153:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11154:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24299              		.loc 1 11154 17 is_stmt 1 view .LVU6858
 24300              		.loc 1 11154 20 is_stmt 0 view .LVU6859
 24301 013e 7CB9     		cbnz	r4, .L1634
11155:Core/Src/bno055.c ****                 {
11156:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z & BNO055_SIC_HEX_0_0_F_F_DATA));
 24302              		.loc 1 11156 21 is_stmt 1 view .LVU6860
 24303              		.loc 1 11156 50 is_stmt 0 view .LVU6861
 24304 0140 B5F90430 		ldrsh	r3, [r5, #4]
 24305              	.LVL3060:
11157:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_LSB, data1_u8r)
 24306              		.loc 1 11157 21 is_stmt 1 view .LVU6862
 24307              		.loc 1 11157 31 is_stmt 0 view .LVU6863
 24308 0144 8DF80730 		strb	r3, [sp, #7]
11158:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24309              		.loc 1 11158 21 is_stmt 1 view .LVU6864
 24310              		.loc 1 11158 41 is_stmt 0 view .LVU6865
 24311 0148 224B     		ldr	r3, .L1641
 24312              	.LVL3061:
 24313              		.loc 1 11158 41 view .LVU6866
 24314 014a 1868     		ldr	r0, [r3]
 24315 014c C468     		ldr	r4, [r0, #12]
 24316              	.LVL3062:
 24317              		.loc 1 11158 33 view .LVU6867
 24318 014e 0123     		movs	r3, #1
 24319 0150 0DF10702 		add	r2, sp, #7
 24320              	.LVL3063:
 24321              		.loc 1 11158 33 view .LVU6868
 24322 0154 6521     		movs	r1, #101
 24323 0156 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24324 0158 A047     		blx	r4
 24325              	.LVL3064:
 24326              		.loc 1 11158 30 view .LVU6869
 24327 015a 56FA80F4 		uxtab	r4, r6, r0
 24328 015e 64B2     		sxtb	r4, r4
 24329              	.LVL3065:
 24330              	.L1634:
11159:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_LSB_REG,
11160:Core/Src/bno055.c ****                                                                 &data2_u8r,
11161:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11162:Core/Src/bno055.c ****                 }
11163:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24331              		.loc 1 11163 17 is_stmt 1 view .LVU6870
 24332              		.loc 1 11163 37 is_stmt 0 view .LVU6871
 24333 0160 1C4B     		ldr	r3, .L1641
 24334 0162 1868     		ldr	r0, [r3]
 24335 0164 0669     		ldr	r6, [r0, #16]
 24336              		.loc 1 11163 29 view .LVU6872
 24337 0166 0123     		movs	r3, #1
 24338 0168 0DF10702 		add	r2, sp, #7
 24339 016c 6621     		movs	r1, #102
 24340 016e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24341 0170 B047     		blx	r6
 24342              	.LVL3066:
 24343              		.loc 1 11163 26 view .LVU6873
 24344 0172 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 676


 24345              	.LVL3067:
 24346              		.loc 1 11163 26 view .LVU6874
 24347 0176 E6B2     		uxtb	r6, r4
 24348 0178 64B2     		sxtb	r4, r4
 24349              	.LVL3068:
11164:Core/Src/bno055.c ****                                                            BNO055_GYRO_OFFSET_Z_MSB_REG,
11165:Core/Src/bno055.c ****                                                            &data2_u8r,
11166:Core/Src/bno055.c ****                                                            BNO055_GEN_READ_WRITE_LENGTH);
11167:Core/Src/bno055.c ****                 if (com_rslt == BNO055_SUCCESS)
 24350              		.loc 1 11167 17 is_stmt 1 view .LVU6875
 24351              		.loc 1 11167 20 is_stmt 0 view .LVU6876
 24352 017a C4B9     		cbnz	r4, .L1628
11168:Core/Src/bno055.c ****                 {
11169:Core/Src/bno055.c ****                     data1_u8r = ((s8)(gyro_offset->z >> BNO055_SHIFT_EIGHT_BITS) & BNO055_SIC_HEX_0
 24353              		.loc 1 11169 21 is_stmt 1 view .LVU6877
 24354              		.loc 1 11169 34 is_stmt 0 view .LVU6878
 24355 017c 95F90530 		ldrsb	r3, [r5, #5]
 24356              	.LVL3069:
11170:Core/Src/bno055.c ****                     data2_u8r = BNO055_SET_BITSLICE(data2_u8r, BNO055_GYRO_OFFSET_Z_MSB, data1_u8r)
 24357              		.loc 1 11170 21 is_stmt 1 view .LVU6879
 24358              		.loc 1 11170 31 is_stmt 0 view .LVU6880
 24359 0180 8DF80730 		strb	r3, [sp, #7]
11171:Core/Src/bno055.c ****                     com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24360              		.loc 1 11171 21 is_stmt 1 view .LVU6881
 24361              		.loc 1 11171 41 is_stmt 0 view .LVU6882
 24362 0184 134B     		ldr	r3, .L1641
 24363              	.LVL3070:
 24364              		.loc 1 11171 41 view .LVU6883
 24365 0186 1868     		ldr	r0, [r3]
 24366 0188 C468     		ldr	r4, [r0, #12]
 24367              	.LVL3071:
 24368              		.loc 1 11171 33 view .LVU6884
 24369 018a 0123     		movs	r3, #1
 24370 018c 0DF10702 		add	r2, sp, #7
 24371              	.LVL3072:
 24372              		.loc 1 11171 33 view .LVU6885
 24373 0190 6621     		movs	r1, #102
 24374 0192 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24375 0194 A047     		blx	r4
 24376              	.LVL3073:
 24377              		.loc 1 11171 30 view .LVU6886
 24378 0196 56FA80F4 		uxtab	r4, r6, r0
 24379 019a 64B2     		sxtb	r4, r4
 24380              	.LVL3074:
 24381              		.loc 1 11171 30 view .LVU6887
 24382 019c 07E0     		b	.L1628
 24383              	.LVL3075:
 24384              	.L1639:
11089:Core/Src/bno055.c ****             }
 24385              		.loc 1 11089 17 is_stmt 1 view .LVU6888
11089:Core/Src/bno055.c ****             }
 24386              		.loc 1 11089 28 is_stmt 0 view .LVU6889
 24387 019e FFF7FEFF 		bl	bno055_set_operation_mode
 24388              	.LVL3076:
11089:Core/Src/bno055.c ****             }
 24389              		.loc 1 11089 25 view .LVU6890
 24390 01a2 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 677


 24391 01a6 64B2     		sxtb	r4, r4
 24392              	.LVL3077:
11089:Core/Src/bno055.c ****             }
 24393              		.loc 1 11089 25 view .LVU6891
 24394 01a8 44E7     		b	.L1629
 24395              	.LVL3078:
 24396              	.L1636:
11172:Core/Src/bno055.c ****                                                                 BNO055_GYRO_OFFSET_Z_MSB_REG,
11173:Core/Src/bno055.c ****                                                                 &data2_u8r,
11174:Core/Src/bno055.c ****                                                                 BNO055_GEN_READ_WRITE_LENGTH);
11175:Core/Src/bno055.c ****                 }
11176:Core/Src/bno055.c ****             }
11177:Core/Src/bno055.c ****             else
11178:Core/Src/bno055.c ****             {
11179:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
11180:Core/Src/bno055.c ****             }
11181:Core/Src/bno055.c ****         }
11182:Core/Src/bno055.c ****         else
11183:Core/Src/bno055.c ****         {
11184:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24397              		.loc 1 11184 22 view .LVU6892
 24398 01aa 4FF0FF34 		mov	r4, #-1
 24399              	.LVL3079:
 24400              	.L1628:
11185:Core/Src/bno055.c ****         }
11186:Core/Src/bno055.c ****     }
11187:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24401              		.loc 1 11187 5 is_stmt 1 view .LVU6893
 24402              		.loc 1 11187 24 is_stmt 0 view .LVU6894
 24403 01ae 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24404              		.loc 1 11187 8 view .LVU6895
 24405 01b2 28B9     		cbnz	r0, .L1640
 24406              	.LVL3080:
 24407              	.L1627:
11188:Core/Src/bno055.c ****     {
11189:Core/Src/bno055.c ****         /* set the operation mode
11190:Core/Src/bno055.c ****          * of previous operation mode*/
11191:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11192:Core/Src/bno055.c ****     }
11193:Core/Src/bno055.c **** 
11194:Core/Src/bno055.c ****     return com_rslt;
11195:Core/Src/bno055.c **** }
 24408              		.loc 1 11195 1 view .LVU6896
 24409 01b4 2046     		mov	r0, r4
 24410 01b6 02B0     		add	sp, sp, #8
 24411              	.LCFI691:
 24412              		.cfi_remember_state
 24413              		.cfi_def_cfa_offset 16
 24414              		@ sp needed
 24415 01b8 70BD     		pop	{r4, r5, r6, pc}
 24416              	.LVL3081:
 24417              	.L1637:
 24418              	.LCFI692:
 24419              		.cfi_restore_state
11179:Core/Src/bno055.c ****             }
 24420              		.loc 1 11179 26 view .LVU6897
 24421 01ba 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccO72alg.s 			page 678


 24422              	.LVL3082:
11179:Core/Src/bno055.c ****             }
 24423              		.loc 1 11179 26 view .LVU6898
 24424 01be F6E7     		b	.L1628
 24425              	.LVL3083:
 24426              	.L1640:
11191:Core/Src/bno055.c ****     }
 24427              		.loc 1 11191 9 is_stmt 1 view .LVU6899
11191:Core/Src/bno055.c ****     }
 24428              		.loc 1 11191 21 is_stmt 0 view .LVU6900
 24429 01c0 FFF7FEFF 		bl	bno055_set_operation_mode
 24430              	.LVL3084:
11191:Core/Src/bno055.c ****     }
 24431              		.loc 1 11191 18 view .LVU6901
 24432 01c4 54FA80F4 		uxtab	r4, r4, r0
 24433              	.LVL3085:
11191:Core/Src/bno055.c ****     }
 24434              		.loc 1 11191 18 view .LVU6902
 24435 01c8 64B2     		sxtb	r4, r4
 24436              	.LVL3086:
11191:Core/Src/bno055.c ****     }
 24437              		.loc 1 11191 18 view .LVU6903
 24438 01ca F3E7     		b	.L1627
 24439              	.LVL3087:
 24440              	.L1635:
11077:Core/Src/bno055.c ****     }
 24441              		.loc 1 11077 16 view .LVU6904
 24442 01cc 6FF07E04 		mvn	r4, #126
 24443 01d0 F0E7     		b	.L1627
 24444              	.L1642:
 24445 01d2 00BF     		.align	2
 24446              	.L1641:
 24447 01d4 00000000 		.word	.LANCHOR0
 24448              		.cfi_endproc
 24449              	.LFE174:
 24451              		.section	.text.bno055_get_accel_range,"ax",%progbits
 24452              		.align	1
 24453              		.global	bno055_get_accel_range
 24454              		.syntax unified
 24455              		.thumb
 24456              		.thumb_func
 24458              	bno055_get_accel_range:
 24459              	.LVL3088:
 24460              	.LFB175:
11196:Core/Src/bno055.c **** 
11197:Core/Src/bno055.c **** /********************************************************/
11198:Core/Src/bno055.c **** /************** PAGE1 Functions *********************/
11199:Core/Src/bno055.c **** /********************************************************/
11200:Core/Src/bno055.c **** 
11201:Core/Src/bno055.c **** /*!
11202:Core/Src/bno055.c ****  *  @brief This API used to read the accel range
11203:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11204:Core/Src/bno055.c ****  *
11205:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11206:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11207:Core/Src/bno055.c ****  *       ----------------- | --------------
11208:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
ARM GAS  /tmp/ccO72alg.s 			page 679


11209:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11210:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11211:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11212:Core/Src/bno055.c ****  *
11213:Core/Src/bno055.c ****  *  @return results of bus communication function
11214:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11215:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11216:Core/Src/bno055.c ****  *
11217:Core/Src/bno055.c ****  *
11218:Core/Src/bno055.c ****  */
11219:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_range(u8 *accel_range_u8)
11220:Core/Src/bno055.c **** {
 24461              		.loc 1 11220 1 is_stmt 1 view -0
 24462              		.cfi_startproc
 24463              		@ args = 0, pretend = 0, frame = 8
 24464              		@ frame_needed = 0, uses_anonymous_args = 0
 24465              		.loc 1 11220 1 is_stmt 0 view .LVU6906
 24466 0000 30B5     		push	{r4, r5, lr}
 24467              	.LCFI693:
 24468              		.cfi_def_cfa_offset 12
 24469              		.cfi_offset 4, -12
 24470              		.cfi_offset 5, -8
 24471              		.cfi_offset 14, -4
 24472 0002 83B0     		sub	sp, sp, #12
 24473              	.LCFI694:
 24474              		.cfi_def_cfa_offset 24
11221:Core/Src/bno055.c ****     /* Variable used to return value of
11222:Core/Src/bno055.c ****      * communication routine*/
11223:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24475              		.loc 1 11223 5 is_stmt 1 view .LVU6907
 24476              	.LVL3089:
11224:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24477              		.loc 1 11224 5 view .LVU6908
 24478              		.loc 1 11224 8 is_stmt 0 view .LVU6909
 24479 0004 0023     		movs	r3, #0
 24480 0006 8DF80730 		strb	r3, [sp, #7]
11225:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24481              		.loc 1 11225 5 is_stmt 1 view .LVU6910
 24482              	.LVL3090:
11226:Core/Src/bno055.c **** 
11227:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11228:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24483              		.loc 1 11228 5 view .LVU6911
 24484              		.loc 1 11228 18 is_stmt 0 view .LVU6912
 24485 000a 144B     		ldr	r3, .L1651
 24486 000c 1B68     		ldr	r3, [r3]
 24487              		.loc 1 11228 8 view .LVU6913
 24488 000e F3B1     		cbz	r3, .L1647
 24489 0010 0446     		mov	r4, r0
11229:Core/Src/bno055.c ****     {
11230:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11231:Core/Src/bno055.c ****     }
11232:Core/Src/bno055.c ****     else
11233:Core/Src/bno055.c ****     {
11234:Core/Src/bno055.c ****         /*condition check for page, accel range is
11235:Core/Src/bno055.c ****          * available in the page one*/
11236:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
ARM GAS  /tmp/ccO72alg.s 			page 680


 24490              		.loc 1 11236 9 is_stmt 1 view .LVU6914
 24491              		.loc 1 11236 21 is_stmt 0 view .LVU6915
 24492 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24493              		.loc 1 11236 12 view .LVU6916
 24494 0014 012B     		cmp	r3, #1
 24495 0016 14D1     		bne	.L1650
 24496              	.LVL3091:
 24497              	.L1645:
11237:Core/Src/bno055.c ****         {
11238:Core/Src/bno055.c ****             /* Write page as one */
11239:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11240:Core/Src/bno055.c ****         }
11241:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24498              		.loc 1 11241 53 discriminator 1 view .LVU6917
 24499 0018 104B     		ldr	r3, .L1651
 24500 001a 1B68     		ldr	r3, [r3]
 24501 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24502              		.loc 1 11241 41 discriminator 1 view .LVU6918
 24503 001e 012B     		cmp	r3, #1
 24504 0020 18D1     		bne	.L1648
 24505              	.L1646:
11242:Core/Src/bno055.c ****         {
11243:Core/Src/bno055.c ****             /* Read the value of accel g range */
11244:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24506              		.loc 1 11244 13 is_stmt 1 view .LVU6919
 24507              		.loc 1 11244 32 is_stmt 0 view .LVU6920
 24508 0022 0E4B     		ldr	r3, .L1651
 24509 0024 1868     		ldr	r0, [r3]
 24510 0026 0569     		ldr	r5, [r0, #16]
 24511              		.loc 1 11244 24 view .LVU6921
 24512 0028 0123     		movs	r3, #1
 24513 002a 0DF10702 		add	r2, sp, #7
 24514 002e 0821     		movs	r1, #8
 24515 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24516 0032 A847     		blx	r5
 24517              	.LVL3092:
11245:Core/Src/bno055.c ****                                                       BNO055_ACCEL_RANGE_REG,
11246:Core/Src/bno055.c ****                                                       &data_u8r,
11247:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11248:Core/Src/bno055.c ****             *accel_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE);
 24518              		.loc 1 11248 13 is_stmt 1 view .LVU6922
 24519              		.loc 1 11248 31 is_stmt 0 view .LVU6923
 24520 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24521 0038 03F00303 		and	r3, r3, #3
 24522              		.loc 1 11248 29 view .LVU6924
 24523 003c 2370     		strb	r3, [r4]
 24524              	.LVL3093:
 24525              	.L1644:
11249:Core/Src/bno055.c ****         }
11250:Core/Src/bno055.c ****         else
11251:Core/Src/bno055.c ****         {
11252:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11253:Core/Src/bno055.c ****         }
11254:Core/Src/bno055.c ****     }
11255:Core/Src/bno055.c **** 
11256:Core/Src/bno055.c ****     return com_rslt;
11257:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 681


 24526              		.loc 1 11257 1 view .LVU6925
 24527 003e 03B0     		add	sp, sp, #12
 24528              	.LCFI695:
 24529              		.cfi_remember_state
 24530              		.cfi_def_cfa_offset 12
 24531              		@ sp needed
 24532 0040 30BD     		pop	{r4, r5, pc}
 24533              	.LVL3094:
 24534              	.L1650:
 24535              	.LCFI696:
 24536              		.cfi_restore_state
11239:Core/Src/bno055.c ****         }
 24537              		.loc 1 11239 13 is_stmt 1 view .LVU6926
11239:Core/Src/bno055.c ****         }
 24538              		.loc 1 11239 23 is_stmt 0 view .LVU6927
 24539 0042 0120     		movs	r0, #1
 24540              	.LVL3095:
11239:Core/Src/bno055.c ****         }
 24541              		.loc 1 11239 23 view .LVU6928
 24542 0044 FFF7FEFF 		bl	bno055_write_page_id
 24543              	.LVL3096:
11241:Core/Src/bno055.c ****         {
 24544              		.loc 1 11241 9 is_stmt 1 view .LVU6929
11241:Core/Src/bno055.c ****         {
 24545              		.loc 1 11241 12 is_stmt 0 view .LVU6930
 24546 0048 0028     		cmp	r0, #0
 24547 004a EAD0     		beq	.L1646
 24548 004c E4E7     		b	.L1645
 24549              	.LVL3097:
 24550              	.L1647:
11230:Core/Src/bno055.c ****     }
 24551              		.loc 1 11230 16 view .LVU6931
 24552 004e 6FF07E00 		mvn	r0, #126
 24553              	.LVL3098:
11230:Core/Src/bno055.c ****     }
 24554              		.loc 1 11230 16 view .LVU6932
 24555 0052 F4E7     		b	.L1644
 24556              	.LVL3099:
 24557              	.L1648:
11252:Core/Src/bno055.c ****         }
 24558              		.loc 1 11252 22 view .LVU6933
 24559 0054 4FF0FF30 		mov	r0, #-1
 24560 0058 F1E7     		b	.L1644
 24561              	.L1652:
 24562 005a 00BF     		.align	2
 24563              	.L1651:
 24564 005c 00000000 		.word	.LANCHOR0
 24565              		.cfi_endproc
 24566              	.LFE175:
 24568              		.section	.text.bno055_set_accel_range,"ax",%progbits
 24569              		.align	1
 24570              		.global	bno055_set_accel_range
 24571              		.syntax unified
 24572              		.thumb
 24573              		.thumb_func
 24575              	bno055_set_accel_range:
 24576              	.LVL3100:
ARM GAS  /tmp/ccO72alg.s 			page 682


 24577              	.LFB176:
11258:Core/Src/bno055.c **** 
11259:Core/Src/bno055.c **** /*!
11260:Core/Src/bno055.c ****  *  @brief This API used to write the accel range
11261:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 0 and 1
11262:Core/Src/bno055.c ****  *
11263:Core/Src/bno055.c ****  *  @param accel_range_u8 : The value of accel range
11264:Core/Src/bno055.c ****  *
11265:Core/Src/bno055.c ****  *        accel_range_u8 |   result
11266:Core/Src/bno055.c ****  *       ----------------- | --------------
11267:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_RANGE_2G
11268:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_RANGE_4G
11269:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_RANGE_8G
11270:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_RANGE_16G
11271:Core/Src/bno055.c ****  *
11272:Core/Src/bno055.c ****  *  @return results of bus communication function
11273:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11274:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11275:Core/Src/bno055.c ****  *
11276:Core/Src/bno055.c ****  *
11277:Core/Src/bno055.c ****  */
11278:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_range(u8 accel_range_u8)
11279:Core/Src/bno055.c **** {
 24578              		.loc 1 11279 1 is_stmt 1 view -0
 24579              		.cfi_startproc
 24580              		@ args = 0, pretend = 0, frame = 8
 24581              		@ frame_needed = 0, uses_anonymous_args = 0
 24582              		.loc 1 11279 1 is_stmt 0 view .LVU6935
 24583 0000 30B5     		push	{r4, r5, lr}
 24584              	.LCFI697:
 24585              		.cfi_def_cfa_offset 12
 24586              		.cfi_offset 4, -12
 24587              		.cfi_offset 5, -8
 24588              		.cfi_offset 14, -4
 24589 0002 83B0     		sub	sp, sp, #12
 24590              	.LCFI698:
 24591              		.cfi_def_cfa_offset 24
11280:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24592              		.loc 1 11280 5 is_stmt 1 view .LVU6936
 24593              	.LVL3101:
11281:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24594              		.loc 1 11281 5 view .LVU6937
 24595              		.loc 1 11281 8 is_stmt 0 view .LVU6938
 24596 0004 0023     		movs	r3, #0
 24597 0006 8DF80730 		strb	r3, [sp, #7]
11282:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24598              		.loc 1 11282 5 is_stmt 1 view .LVU6939
 24599              	.LVL3102:
11283:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24600              		.loc 1 11283 5 view .LVU6940
 24601              		.loc 1 11283 8 is_stmt 0 view .LVU6941
 24602 000a 8DF80630 		strb	r3, [sp, #6]
11284:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24603              		.loc 1 11284 5 is_stmt 1 view .LVU6942
 24604              	.LVL3103:
11285:Core/Src/bno055.c **** 
11286:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccO72alg.s 			page 683


11287:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24605              		.loc 1 11287 5 view .LVU6943
 24606              		.loc 1 11287 18 is_stmt 0 view .LVU6944
 24607 000e 2C4B     		ldr	r3, .L1666
 24608 0010 1B68     		ldr	r3, [r3]
 24609              		.loc 1 11287 8 view .LVU6945
 24610 0012 002B     		cmp	r3, #0
 24611 0014 50D0     		beq	.L1657
 24612 0016 0546     		mov	r5, r0
11288:Core/Src/bno055.c ****     {
11289:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11290:Core/Src/bno055.c ****     }
11291:Core/Src/bno055.c ****     else
11292:Core/Src/bno055.c ****     {
11293:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11294:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11295:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11296:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24613              		.loc 1 11296 9 is_stmt 1 view .LVU6946
 24614              		.loc 1 11296 19 is_stmt 0 view .LVU6947
 24615 0018 0DF10600 		add	r0, sp, #6
 24616              	.LVL3104:
 24617              		.loc 1 11296 19 view .LVU6948
 24618 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24619              	.LVL3105:
11297:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24620              		.loc 1 11297 9 is_stmt 1 view .LVU6949
 24621              		.loc 1 11297 12 is_stmt 0 view .LVU6950
 24622 0020 0446     		mov	r4, r0
 24623 0022 0028     		cmp	r0, #0
 24624 0024 34D1     		bne	.L1658
11298:Core/Src/bno055.c ****         {
11299:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24625              		.loc 1 11299 13 is_stmt 1 view .LVU6951
 24626              		.loc 1 11299 32 is_stmt 0 view .LVU6952
 24627 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24628              		.loc 1 11299 16 view .LVU6953
 24629 002a 1BB9     		cbnz	r3, .L1663
 24630              	.LVL3106:
 24631              	.L1656:
11300:Core/Src/bno055.c ****             {
11301:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11302:Core/Src/bno055.c ****             }
11303:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24632              		.loc 1 11303 13 is_stmt 1 view .LVU6954
 24633              		.loc 1 11303 16 is_stmt 0 view .LVU6955
 24634 002c 44B1     		cbz	r4, .L1664
11304:Core/Src/bno055.c ****             {
11305:Core/Src/bno055.c ****                 /* Write page as one */
11306:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11307:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11308:Core/Src/bno055.c ****                 {
11309:Core/Src/bno055.c ****                     if (accel_range_u8 < BNO055_ACCEL_RANGE)
11310:Core/Src/bno055.c ****                     {
11311:Core/Src/bno055.c ****                         /* Write the value of accel range*/
11312:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11313:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
ARM GAS  /tmp/ccO72alg.s 			page 684


11314:Core/Src/bno055.c ****                                                                   &data_u8r,
11315:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11316:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11317:Core/Src/bno055.c ****                         {
11318:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_RANGE, accel_rang
11319:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11320:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
11321:Core/Src/bno055.c ****                                                                         &data_u8r,
11322:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11323:Core/Src/bno055.c ****                         }
11324:Core/Src/bno055.c ****                     }
11325:Core/Src/bno055.c ****                     else
11326:Core/Src/bno055.c ****                     {
11327:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11328:Core/Src/bno055.c ****                     }
11329:Core/Src/bno055.c ****                 }
11330:Core/Src/bno055.c ****                 else
11331:Core/Src/bno055.c ****                 {
11332:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11333:Core/Src/bno055.c ****                 }
11334:Core/Src/bno055.c ****             }
11335:Core/Src/bno055.c ****             else
11336:Core/Src/bno055.c ****             {
11337:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24635              		.loc 1 11337 26 view .LVU6956
 24636 002e 4FF0FF34 		mov	r4, #-1
 24637              	.LVL3107:
 24638              		.loc 1 11337 26 view .LVU6957
 24639 0032 2FE0     		b	.L1655
 24640              	.LVL3108:
 24641              	.L1663:
11301:Core/Src/bno055.c ****             }
 24642              		.loc 1 11301 17 is_stmt 1 view .LVU6958
11301:Core/Src/bno055.c ****             }
 24643              		.loc 1 11301 28 is_stmt 0 view .LVU6959
 24644 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 24645              	.LVL3109:
11301:Core/Src/bno055.c ****             }
 24646              		.loc 1 11301 25 view .LVU6960
 24647 0038 54FA80F4 		uxtab	r4, r4, r0
 24648 003c 64B2     		sxtb	r4, r4
 24649              	.LVL3110:
11301:Core/Src/bno055.c ****             }
 24650              		.loc 1 11301 25 view .LVU6961
 24651 003e F5E7     		b	.L1656
 24652              	.L1664:
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24653              		.loc 1 11306 17 is_stmt 1 view .LVU6962
11306:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24654              		.loc 1 11306 30 is_stmt 0 view .LVU6963
 24655 0040 0120     		movs	r0, #1
 24656 0042 FFF7FEFF 		bl	bno055_write_page_id
 24657              	.LVL3111:
11307:Core/Src/bno055.c ****                 {
 24658              		.loc 1 11307 17 is_stmt 1 view .LVU6964
11307:Core/Src/bno055.c ****                 {
 24659              		.loc 1 11307 20 is_stmt 0 view .LVU6965
ARM GAS  /tmp/ccO72alg.s 			page 685


 24660 0046 58BB     		cbnz	r0, .L1660
11309:Core/Src/bno055.c ****                     {
 24661              		.loc 1 11309 21 is_stmt 1 view .LVU6966
11309:Core/Src/bno055.c ****                     {
 24662              		.loc 1 11309 24 is_stmt 0 view .LVU6967
 24663 0048 042D     		cmp	r5, #4
 24664 004a 2CD8     		bhi	.L1661
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24665              		.loc 1 11312 25 is_stmt 1 view .LVU6968
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24666              		.loc 1 11312 44 is_stmt 0 view .LVU6969
 24667 004c 1C4B     		ldr	r3, .L1666
 24668 004e 1868     		ldr	r0, [r3]
 24669              	.LVL3112:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24670              		.loc 1 11312 44 view .LVU6970
 24671 0050 0469     		ldr	r4, [r0, #16]
 24672              	.LVL3113:
11312:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_RANGE_REG,
 24673              		.loc 1 11312 36 view .LVU6971
 24674 0052 0123     		movs	r3, #1
 24675 0054 0DF10702 		add	r2, sp, #7
 24676 0058 0821     		movs	r1, #8
 24677 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24678 005c A047     		blx	r4
 24679              	.LVL3114:
11316:Core/Src/bno055.c ****                         {
 24680              		.loc 1 11316 25 is_stmt 1 view .LVU6972
11316:Core/Src/bno055.c ****                         {
 24681              		.loc 1 11316 28 is_stmt 0 view .LVU6973
 24682 005e 0446     		mov	r4, r0
 24683 0060 C0B9     		cbnz	r0, .L1655
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24684              		.loc 1 11318 29 is_stmt 1 view .LVU6974
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24685              		.loc 1 11318 40 is_stmt 0 view .LVU6975
 24686 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 24687              	.LVL3115:
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24688              		.loc 1 11318 40 view .LVU6976
 24689 0066 20F00300 		bic	r0, r0, #3
 24690 006a 43B2     		sxtb	r3, r0
 24691 006c 05F00300 		and	r0, r5, #3
 24692 0070 1843     		orrs	r0, r0, r3
11318:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 24693              		.loc 1 11318 38 view .LVU6977
 24694 0072 8DF80700 		strb	r0, [sp, #7]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24695              		.loc 1 11319 29 is_stmt 1 view .LVU6978
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24696              		.loc 1 11319 49 is_stmt 0 view .LVU6979
 24697 0076 124B     		ldr	r3, .L1666
 24698 0078 1868     		ldr	r0, [r3]
 24699 007a C568     		ldr	r5, [r0, #12]
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24700              		.loc 1 11319 41 view .LVU6980
 24701 007c 0123     		movs	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 686


 24702 007e 0DF10702 		add	r2, sp, #7
 24703 0082 0821     		movs	r1, #8
 24704 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24705 0086 A847     		blx	r5
 24706              	.LVL3116:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24707              		.loc 1 11319 38 view .LVU6981
 24708 0088 54FA80F4 		uxtab	r4, r4, r0
 24709 008c 64B2     		sxtb	r4, r4
 24710              	.LVL3117:
11319:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_RANGE_REG,
 24711              		.loc 1 11319 38 view .LVU6982
 24712 008e 01E0     		b	.L1655
 24713              	.LVL3118:
 24714              	.L1658:
11338:Core/Src/bno055.c ****             }
11339:Core/Src/bno055.c ****         }
11340:Core/Src/bno055.c ****         else
11341:Core/Src/bno055.c ****         {
11342:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 24715              		.loc 1 11342 22 view .LVU6983
 24716 0090 4FF0FF34 		mov	r4, #-1
 24717              	.LVL3119:
 24718              	.L1655:
11343:Core/Src/bno055.c ****         }
11344:Core/Src/bno055.c ****     }
11345:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24719              		.loc 1 11345 5 is_stmt 1 view .LVU6984
 24720              		.loc 1 11345 24 is_stmt 0 view .LVU6985
 24721 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 24722              		.loc 1 11345 8 view .LVU6986
 24723 0098 40B9     		cbnz	r0, .L1665
 24724              	.LVL3120:
 24725              	.L1654:
11346:Core/Src/bno055.c ****     {
11347:Core/Src/bno055.c ****         /* set the operation mode of
11348:Core/Src/bno055.c ****          * previous operation mode*/
11349:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11350:Core/Src/bno055.c ****     }
11351:Core/Src/bno055.c **** 
11352:Core/Src/bno055.c ****     return com_rslt;
11353:Core/Src/bno055.c **** }
 24726              		.loc 1 11353 1 view .LVU6987
 24727 009a 2046     		mov	r0, r4
 24728 009c 03B0     		add	sp, sp, #12
 24729              	.LCFI699:
 24730              		.cfi_remember_state
 24731              		.cfi_def_cfa_offset 12
 24732              		@ sp needed
 24733 009e 30BD     		pop	{r4, r5, pc}
 24734              	.LVL3121:
 24735              	.L1660:
 24736              	.LCFI700:
 24737              		.cfi_restore_state
11332:Core/Src/bno055.c ****                 }
 24738              		.loc 1 11332 30 view .LVU6988
 24739 00a0 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccO72alg.s 			page 687


 24740              	.LVL3122:
11332:Core/Src/bno055.c ****                 }
 24741              		.loc 1 11332 30 view .LVU6989
 24742 00a4 F6E7     		b	.L1655
 24743              	.LVL3123:
 24744              	.L1661:
11327:Core/Src/bno055.c ****                     }
 24745              		.loc 1 11327 34 view .LVU6990
 24746 00a6 6FF00104 		mvn	r4, #1
 24747              	.LVL3124:
11327:Core/Src/bno055.c ****                     }
 24748              		.loc 1 11327 34 view .LVU6991
 24749 00aa F3E7     		b	.L1655
 24750              	.LVL3125:
 24751              	.L1665:
11349:Core/Src/bno055.c ****     }
 24752              		.loc 1 11349 9 is_stmt 1 view .LVU6992
11349:Core/Src/bno055.c ****     }
 24753              		.loc 1 11349 21 is_stmt 0 view .LVU6993
 24754 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 24755              	.LVL3126:
11349:Core/Src/bno055.c ****     }
 24756              		.loc 1 11349 18 view .LVU6994
 24757 00b0 54FA80F4 		uxtab	r4, r4, r0
 24758              	.LVL3127:
11349:Core/Src/bno055.c ****     }
 24759              		.loc 1 11349 18 view .LVU6995
 24760 00b4 64B2     		sxtb	r4, r4
 24761              	.LVL3128:
11349:Core/Src/bno055.c ****     }
 24762              		.loc 1 11349 18 view .LVU6996
 24763 00b6 F0E7     		b	.L1654
 24764              	.LVL3129:
 24765              	.L1657:
11289:Core/Src/bno055.c ****     }
 24766              		.loc 1 11289 16 view .LVU6997
 24767 00b8 6FF07E04 		mvn	r4, #126
 24768 00bc EDE7     		b	.L1654
 24769              	.L1667:
 24770 00be 00BF     		.align	2
 24771              	.L1666:
 24772 00c0 00000000 		.word	.LANCHOR0
 24773              		.cfi_endproc
 24774              	.LFE176:
 24776              		.section	.text.bno055_get_accel_bw,"ax",%progbits
 24777              		.align	1
 24778              		.global	bno055_get_accel_bw
 24779              		.syntax unified
 24780              		.thumb
 24781              		.thumb_func
 24783              	bno055_get_accel_bw:
 24784              	.LVL3130:
 24785              	.LFB177:
11354:Core/Src/bno055.c **** 
11355:Core/Src/bno055.c **** /*!
11356:Core/Src/bno055.c ****  *  @brief This API used to read the accel bandwidth
11357:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
ARM GAS  /tmp/ccO72alg.s 			page 688


11358:Core/Src/bno055.c ****  *
11359:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11360:Core/Src/bno055.c ****  *
11361:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11362:Core/Src/bno055.c ****  *       ----------------- | ---------------
11363:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11364:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11365:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11366:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11367:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11368:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11369:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11370:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11371:Core/Src/bno055.c ****  *
11372:Core/Src/bno055.c ****  *  @return results of bus communication function
11373:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11374:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11375:Core/Src/bno055.c ****  *
11376:Core/Src/bno055.c ****  *
11377:Core/Src/bno055.c ****  */
11378:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_bw(u8 *accel_bw_u8)
11379:Core/Src/bno055.c **** {
 24786              		.loc 1 11379 1 is_stmt 1 view -0
 24787              		.cfi_startproc
 24788              		@ args = 0, pretend = 0, frame = 8
 24789              		@ frame_needed = 0, uses_anonymous_args = 0
 24790              		.loc 1 11379 1 is_stmt 0 view .LVU6999
 24791 0000 30B5     		push	{r4, r5, lr}
 24792              	.LCFI701:
 24793              		.cfi_def_cfa_offset 12
 24794              		.cfi_offset 4, -12
 24795              		.cfi_offset 5, -8
 24796              		.cfi_offset 14, -4
 24797 0002 83B0     		sub	sp, sp, #12
 24798              	.LCFI702:
 24799              		.cfi_def_cfa_offset 24
11380:Core/Src/bno055.c ****     /* Variable used to return value of
11381:Core/Src/bno055.c ****      * communication routine*/
11382:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24800              		.loc 1 11382 5 is_stmt 1 view .LVU7000
 24801              	.LVL3131:
11383:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24802              		.loc 1 11383 5 view .LVU7001
 24803              		.loc 1 11383 8 is_stmt 0 view .LVU7002
 24804 0004 0023     		movs	r3, #0
 24805 0006 8DF80730 		strb	r3, [sp, #7]
11384:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24806              		.loc 1 11384 5 is_stmt 1 view .LVU7003
 24807              	.LVL3132:
11385:Core/Src/bno055.c **** 
11386:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11387:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24808              		.loc 1 11387 5 view .LVU7004
 24809              		.loc 1 11387 18 is_stmt 0 view .LVU7005
 24810 000a 144B     		ldr	r3, .L1676
 24811 000c 1B68     		ldr	r3, [r3]
 24812              		.loc 1 11387 8 view .LVU7006
ARM GAS  /tmp/ccO72alg.s 			page 689


 24813 000e F3B1     		cbz	r3, .L1672
 24814 0010 0446     		mov	r4, r0
11388:Core/Src/bno055.c ****     {
11389:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11390:Core/Src/bno055.c ****     }
11391:Core/Src/bno055.c ****     else
11392:Core/Src/bno055.c ****     {
11393:Core/Src/bno055.c ****         /*condition check for page, accel bandwidth is
11394:Core/Src/bno055.c ****          * available in the page one*/
11395:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 24815              		.loc 1 11395 9 is_stmt 1 view .LVU7007
 24816              		.loc 1 11395 21 is_stmt 0 view .LVU7008
 24817 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24818              		.loc 1 11395 12 view .LVU7009
 24819 0014 012B     		cmp	r3, #1
 24820 0016 14D1     		bne	.L1675
 24821              	.LVL3133:
 24822              	.L1670:
11396:Core/Src/bno055.c ****         {
11397:Core/Src/bno055.c ****             /* Write page as one */
11398:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11399:Core/Src/bno055.c ****         }
11400:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 24823              		.loc 1 11400 53 discriminator 1 view .LVU7010
 24824 0018 104B     		ldr	r3, .L1676
 24825 001a 1B68     		ldr	r3, [r3]
 24826 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24827              		.loc 1 11400 41 discriminator 1 view .LVU7011
 24828 001e 012B     		cmp	r3, #1
 24829 0020 18D1     		bne	.L1673
 24830              	.L1671:
11401:Core/Src/bno055.c ****         {
11402:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11403:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 24831              		.loc 1 11403 13 is_stmt 1 view .LVU7012
 24832              		.loc 1 11403 32 is_stmt 0 view .LVU7013
 24833 0022 0E4B     		ldr	r3, .L1676
 24834 0024 1868     		ldr	r0, [r3]
 24835 0026 0569     		ldr	r5, [r0, #16]
 24836              		.loc 1 11403 24 view .LVU7014
 24837 0028 0123     		movs	r3, #1
 24838 002a 0DF10702 		add	r2, sp, #7
 24839 002e 0821     		movs	r1, #8
 24840 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 24841 0032 A847     		blx	r5
 24842              	.LVL3134:
11404:Core/Src/bno055.c ****                                                       BNO055_ACCEL_BW_REG,
11405:Core/Src/bno055.c ****                                                       &data_u8r,
11406:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11407:Core/Src/bno055.c ****             *accel_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_BW);
 24843              		.loc 1 11407 13 is_stmt 1 view .LVU7015
 24844              		.loc 1 11407 28 is_stmt 0 view .LVU7016
 24845 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 24846 0038 C3F38203 		ubfx	r3, r3, #2, #3
 24847              		.loc 1 11407 26 view .LVU7017
 24848 003c 2370     		strb	r3, [r4]
 24849              	.LVL3135:
ARM GAS  /tmp/ccO72alg.s 			page 690


 24850              	.L1669:
11408:Core/Src/bno055.c ****         }
11409:Core/Src/bno055.c ****         else
11410:Core/Src/bno055.c ****         {
11411:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11412:Core/Src/bno055.c ****         }
11413:Core/Src/bno055.c ****     }
11414:Core/Src/bno055.c **** 
11415:Core/Src/bno055.c ****     return com_rslt;
11416:Core/Src/bno055.c **** }
 24851              		.loc 1 11416 1 view .LVU7018
 24852 003e 03B0     		add	sp, sp, #12
 24853              	.LCFI703:
 24854              		.cfi_remember_state
 24855              		.cfi_def_cfa_offset 12
 24856              		@ sp needed
 24857 0040 30BD     		pop	{r4, r5, pc}
 24858              	.LVL3136:
 24859              	.L1675:
 24860              	.LCFI704:
 24861              		.cfi_restore_state
11398:Core/Src/bno055.c ****         }
 24862              		.loc 1 11398 13 is_stmt 1 view .LVU7019
11398:Core/Src/bno055.c ****         }
 24863              		.loc 1 11398 23 is_stmt 0 view .LVU7020
 24864 0042 0120     		movs	r0, #1
 24865              	.LVL3137:
11398:Core/Src/bno055.c ****         }
 24866              		.loc 1 11398 23 view .LVU7021
 24867 0044 FFF7FEFF 		bl	bno055_write_page_id
 24868              	.LVL3138:
11400:Core/Src/bno055.c ****         {
 24869              		.loc 1 11400 9 is_stmt 1 view .LVU7022
11400:Core/Src/bno055.c ****         {
 24870              		.loc 1 11400 12 is_stmt 0 view .LVU7023
 24871 0048 0028     		cmp	r0, #0
 24872 004a EAD0     		beq	.L1671
 24873 004c E4E7     		b	.L1670
 24874              	.LVL3139:
 24875              	.L1672:
11389:Core/Src/bno055.c ****     }
 24876              		.loc 1 11389 16 view .LVU7024
 24877 004e 6FF07E00 		mvn	r0, #126
 24878              	.LVL3140:
11389:Core/Src/bno055.c ****     }
 24879              		.loc 1 11389 16 view .LVU7025
 24880 0052 F4E7     		b	.L1669
 24881              	.LVL3141:
 24882              	.L1673:
11411:Core/Src/bno055.c ****         }
 24883              		.loc 1 11411 22 view .LVU7026
 24884 0054 4FF0FF30 		mov	r0, #-1
 24885 0058 F1E7     		b	.L1669
 24886              	.L1677:
 24887 005a 00BF     		.align	2
 24888              	.L1676:
 24889 005c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 691


 24890              		.cfi_endproc
 24891              	.LFE177:
 24893              		.section	.text.bno055_set_accel_bw,"ax",%progbits
 24894              		.align	1
 24895              		.global	bno055_set_accel_bw
 24896              		.syntax unified
 24897              		.thumb
 24898              		.thumb_func
 24900              	bno055_set_accel_bw:
 24901              	.LVL3142:
 24902              	.LFB178:
11417:Core/Src/bno055.c **** 
11418:Core/Src/bno055.c **** /*!
11419:Core/Src/bno055.c ****  *  @brief This API used to write the accel bandwidth
11420:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 2 to 4
11421:Core/Src/bno055.c ****  *
11422:Core/Src/bno055.c ****  *  @param accel_bw_u8 : The value of accel bandwidth
11423:Core/Src/bno055.c ****  *
11424:Core/Src/bno055.c ****  *           accel_bw_u8 |     result
11425:Core/Src/bno055.c ****  *       ----------------- | ---------------
11426:Core/Src/bno055.c ****  *              0x00       | BNO055_ACCEL_BW_7_81HZ
11427:Core/Src/bno055.c ****  *              0x01       | BNO055_ACCEL_BW_15_63HZ
11428:Core/Src/bno055.c ****  *              0x02       | BNO055_ACCEL_BW_31_25HZ
11429:Core/Src/bno055.c ****  *              0x03       | BNO055_ACCEL_BW_62_5HZ
11430:Core/Src/bno055.c ****  *              0x04       | BNO055_ACCEL_BW_125HZ
11431:Core/Src/bno055.c ****  *              0x05       | BNO055_ACCEL_BW_250HZ
11432:Core/Src/bno055.c ****  *              0x06       | BNO055_ACCEL_BW_500HZ
11433:Core/Src/bno055.c ****  *              0x07       | BNO055_ACCEL_BW_1000HZ
11434:Core/Src/bno055.c ****  *
11435:Core/Src/bno055.c ****  *  @return results of bus communication function
11436:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11437:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11438:Core/Src/bno055.c ****  *
11439:Core/Src/bno055.c ****  *
11440:Core/Src/bno055.c ****  */
11441:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_bw(u8 accel_bw_u8)
11442:Core/Src/bno055.c **** {
 24903              		.loc 1 11442 1 is_stmt 1 view -0
 24904              		.cfi_startproc
 24905              		@ args = 0, pretend = 0, frame = 8
 24906              		@ frame_needed = 0, uses_anonymous_args = 0
 24907              		.loc 1 11442 1 is_stmt 0 view .LVU7028
 24908 0000 30B5     		push	{r4, r5, lr}
 24909              	.LCFI705:
 24910              		.cfi_def_cfa_offset 12
 24911              		.cfi_offset 4, -12
 24912              		.cfi_offset 5, -8
 24913              		.cfi_offset 14, -4
 24914 0002 83B0     		sub	sp, sp, #12
 24915              	.LCFI706:
 24916              		.cfi_def_cfa_offset 24
11443:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 24917              		.loc 1 11443 5 is_stmt 1 view .LVU7029
 24918              	.LVL3143:
11444:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 24919              		.loc 1 11444 5 view .LVU7030
 24920              		.loc 1 11444 8 is_stmt 0 view .LVU7031
ARM GAS  /tmp/ccO72alg.s 			page 692


 24921 0004 0023     		movs	r3, #0
 24922 0006 8DF80730 		strb	r3, [sp, #7]
11445:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 24923              		.loc 1 11445 5 is_stmt 1 view .LVU7032
 24924              	.LVL3144:
11446:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 24925              		.loc 1 11446 5 view .LVU7033
 24926              		.loc 1 11446 8 is_stmt 0 view .LVU7034
 24927 000a 8DF80630 		strb	r3, [sp, #6]
11447:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 24928              		.loc 1 11447 5 is_stmt 1 view .LVU7035
 24929              	.LVL3145:
11448:Core/Src/bno055.c **** 
11449:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11450:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 24930              		.loc 1 11450 5 view .LVU7036
 24931              		.loc 1 11450 18 is_stmt 0 view .LVU7037
 24932 000e 2C4B     		ldr	r3, .L1691
 24933 0010 1B68     		ldr	r3, [r3]
 24934              		.loc 1 11450 8 view .LVU7038
 24935 0012 002B     		cmp	r3, #0
 24936 0014 51D0     		beq	.L1682
 24937 0016 0546     		mov	r5, r0
11451:Core/Src/bno055.c ****     {
11452:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11453:Core/Src/bno055.c ****     }
11454:Core/Src/bno055.c ****     else
11455:Core/Src/bno055.c ****     {
11456:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11457:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11458:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11459:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 24938              		.loc 1 11459 9 is_stmt 1 view .LVU7039
 24939              		.loc 1 11459 19 is_stmt 0 view .LVU7040
 24940 0018 0DF10600 		add	r0, sp, #6
 24941              	.LVL3146:
 24942              		.loc 1 11459 19 view .LVU7041
 24943 001c FFF7FEFF 		bl	bno055_get_operation_mode
 24944              	.LVL3147:
11460:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 24945              		.loc 1 11460 9 is_stmt 1 view .LVU7042
 24946              		.loc 1 11460 12 is_stmt 0 view .LVU7043
 24947 0020 0446     		mov	r4, r0
 24948 0022 0028     		cmp	r0, #0
 24949 0024 35D1     		bne	.L1683
11461:Core/Src/bno055.c ****         {
11462:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 24950              		.loc 1 11462 13 is_stmt 1 view .LVU7044
 24951              		.loc 1 11462 32 is_stmt 0 view .LVU7045
 24952 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 24953              		.loc 1 11462 16 view .LVU7046
 24954 002a 1BB9     		cbnz	r3, .L1688
 24955              	.LVL3148:
 24956              	.L1681:
11463:Core/Src/bno055.c ****             {
11464:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11465:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 693


11466:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 24957              		.loc 1 11466 13 is_stmt 1 view .LVU7047
 24958              		.loc 1 11466 16 is_stmt 0 view .LVU7048
 24959 002c 44B1     		cbz	r4, .L1689
11467:Core/Src/bno055.c ****             {
11468:Core/Src/bno055.c ****                 /* Write page as one */
11469:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11470:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11471:Core/Src/bno055.c ****                 {
11472:Core/Src/bno055.c ****                     if (accel_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
11473:Core/Src/bno055.c ****                     {
11474:Core/Src/bno055.c ****                         /* Write the accel */
11475:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11476:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
11477:Core/Src/bno055.c ****                                                                   &data_u8r,
11478:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11479:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11480:Core/Src/bno055.c ****                         {
11481:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_BW, accel_bw_u8);
11482:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11483:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
11484:Core/Src/bno055.c ****                                                                         &data_u8r,
11485:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11486:Core/Src/bno055.c ****                         }
11487:Core/Src/bno055.c ****                     }
11488:Core/Src/bno055.c ****                     else
11489:Core/Src/bno055.c ****                     {
11490:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11491:Core/Src/bno055.c ****                     }
11492:Core/Src/bno055.c ****                 }
11493:Core/Src/bno055.c ****                 else
11494:Core/Src/bno055.c ****                 {
11495:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11496:Core/Src/bno055.c ****                 }
11497:Core/Src/bno055.c ****             }
11498:Core/Src/bno055.c ****             else
11499:Core/Src/bno055.c ****             {
11500:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 24960              		.loc 1 11500 26 view .LVU7049
 24961 002e 4FF0FF34 		mov	r4, #-1
 24962              	.LVL3149:
 24963              		.loc 1 11500 26 view .LVU7050
 24964 0032 30E0     		b	.L1680
 24965              	.LVL3150:
 24966              	.L1688:
11464:Core/Src/bno055.c ****             }
 24967              		.loc 1 11464 17 is_stmt 1 view .LVU7051
11464:Core/Src/bno055.c ****             }
 24968              		.loc 1 11464 28 is_stmt 0 view .LVU7052
 24969 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 24970              	.LVL3151:
11464:Core/Src/bno055.c ****             }
 24971              		.loc 1 11464 25 view .LVU7053
 24972 0038 54FA80F4 		uxtab	r4, r4, r0
 24973 003c 64B2     		sxtb	r4, r4
 24974              	.LVL3152:
11464:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 694


 24975              		.loc 1 11464 25 view .LVU7054
 24976 003e F5E7     		b	.L1681
 24977              	.L1689:
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24978              		.loc 1 11469 17 is_stmt 1 view .LVU7055
11469:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 24979              		.loc 1 11469 30 is_stmt 0 view .LVU7056
 24980 0040 0120     		movs	r0, #1
 24981 0042 FFF7FEFF 		bl	bno055_write_page_id
 24982              	.LVL3153:
11470:Core/Src/bno055.c ****                 {
 24983              		.loc 1 11470 17 is_stmt 1 view .LVU7057
11470:Core/Src/bno055.c ****                 {
 24984              		.loc 1 11470 20 is_stmt 0 view .LVU7058
 24985 0046 60BB     		cbnz	r0, .L1685
11472:Core/Src/bno055.c ****                     {
 24986              		.loc 1 11472 21 is_stmt 1 view .LVU7059
11472:Core/Src/bno055.c ****                     {
 24987              		.loc 1 11472 24 is_stmt 0 view .LVU7060
 24988 0048 072D     		cmp	r5, #7
 24989 004a 2DD8     		bhi	.L1686
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24990              		.loc 1 11475 25 is_stmt 1 view .LVU7061
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24991              		.loc 1 11475 44 is_stmt 0 view .LVU7062
 24992 004c 1C4B     		ldr	r3, .L1691
 24993 004e 1868     		ldr	r0, [r3]
 24994              	.LVL3154:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24995              		.loc 1 11475 44 view .LVU7063
 24996 0050 0469     		ldr	r4, [r0, #16]
 24997              	.LVL3155:
11475:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_BW_REG,
 24998              		.loc 1 11475 36 view .LVU7064
 24999 0052 0123     		movs	r3, #1
 25000 0054 0DF10702 		add	r2, sp, #7
 25001 0058 0821     		movs	r1, #8
 25002 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25003 005c A047     		blx	r4
 25004              	.LVL3156:
11479:Core/Src/bno055.c ****                         {
 25005              		.loc 1 11479 25 is_stmt 1 view .LVU7065
11479:Core/Src/bno055.c ****                         {
 25006              		.loc 1 11479 28 is_stmt 0 view .LVU7066
 25007 005e 0446     		mov	r4, r0
 25008 0060 C8B9     		cbnz	r0, .L1680
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25009              		.loc 1 11481 29 is_stmt 1 view .LVU7067
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25010              		.loc 1 11481 40 is_stmt 0 view .LVU7068
 25011 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25012              	.LVL3157:
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25013              		.loc 1 11481 40 view .LVU7069
 25014 0066 20F01C00 		bic	r0, r0, #28
 25015 006a 43B2     		sxtb	r3, r0
 25016 006c A800     		lsls	r0, r5, #2
ARM GAS  /tmp/ccO72alg.s 			page 695


 25017 006e 00F01C00 		and	r0, r0, #28
 25018 0072 1843     		orrs	r0, r0, r3
11481:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25019              		.loc 1 11481 38 view .LVU7070
 25020 0074 8DF80700 		strb	r0, [sp, #7]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25021              		.loc 1 11482 29 is_stmt 1 view .LVU7071
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25022              		.loc 1 11482 49 is_stmt 0 view .LVU7072
 25023 0078 114B     		ldr	r3, .L1691
 25024 007a 1868     		ldr	r0, [r3]
 25025 007c C568     		ldr	r5, [r0, #12]
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25026              		.loc 1 11482 41 view .LVU7073
 25027 007e 0123     		movs	r3, #1
 25028 0080 0DF10702 		add	r2, sp, #7
 25029 0084 0821     		movs	r1, #8
 25030 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25031 0088 A847     		blx	r5
 25032              	.LVL3158:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25033              		.loc 1 11482 38 view .LVU7074
 25034 008a 54FA80F4 		uxtab	r4, r4, r0
 25035 008e 64B2     		sxtb	r4, r4
 25036              	.LVL3159:
11482:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_BW_REG,
 25037              		.loc 1 11482 38 view .LVU7075
 25038 0090 01E0     		b	.L1680
 25039              	.LVL3160:
 25040              	.L1683:
11501:Core/Src/bno055.c ****             }
11502:Core/Src/bno055.c ****         }
11503:Core/Src/bno055.c ****         else
11504:Core/Src/bno055.c ****         {
11505:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25041              		.loc 1 11505 22 view .LVU7076
 25042 0092 4FF0FF34 		mov	r4, #-1
 25043              	.LVL3161:
 25044              	.L1680:
11506:Core/Src/bno055.c ****         }
11507:Core/Src/bno055.c ****     }
11508:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25045              		.loc 1 11508 5 is_stmt 1 view .LVU7077
 25046              		.loc 1 11508 24 is_stmt 0 view .LVU7078
 25047 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25048              		.loc 1 11508 8 view .LVU7079
 25049 009a 40B9     		cbnz	r0, .L1690
 25050              	.LVL3162:
 25051              	.L1679:
11509:Core/Src/bno055.c ****     {
11510:Core/Src/bno055.c ****         /* set the operation mode of
11511:Core/Src/bno055.c ****          * previous operation mode*/
11512:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11513:Core/Src/bno055.c ****     }
11514:Core/Src/bno055.c **** 
11515:Core/Src/bno055.c ****     return com_rslt;
11516:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 696


 25052              		.loc 1 11516 1 view .LVU7080
 25053 009c 2046     		mov	r0, r4
 25054 009e 03B0     		add	sp, sp, #12
 25055              	.LCFI707:
 25056              		.cfi_remember_state
 25057              		.cfi_def_cfa_offset 12
 25058              		@ sp needed
 25059 00a0 30BD     		pop	{r4, r5, pc}
 25060              	.LVL3163:
 25061              	.L1685:
 25062              	.LCFI708:
 25063              		.cfi_restore_state
11495:Core/Src/bno055.c ****                 }
 25064              		.loc 1 11495 30 view .LVU7081
 25065 00a2 4FF0FF34 		mov	r4, #-1
 25066              	.LVL3164:
11495:Core/Src/bno055.c ****                 }
 25067              		.loc 1 11495 30 view .LVU7082
 25068 00a6 F6E7     		b	.L1680
 25069              	.LVL3165:
 25070              	.L1686:
11490:Core/Src/bno055.c ****                     }
 25071              		.loc 1 11490 34 view .LVU7083
 25072 00a8 6FF00104 		mvn	r4, #1
 25073              	.LVL3166:
11490:Core/Src/bno055.c ****                     }
 25074              		.loc 1 11490 34 view .LVU7084
 25075 00ac F3E7     		b	.L1680
 25076              	.LVL3167:
 25077              	.L1690:
11512:Core/Src/bno055.c ****     }
 25078              		.loc 1 11512 9 is_stmt 1 view .LVU7085
11512:Core/Src/bno055.c ****     }
 25079              		.loc 1 11512 21 is_stmt 0 view .LVU7086
 25080 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 25081              	.LVL3168:
11512:Core/Src/bno055.c ****     }
 25082              		.loc 1 11512 18 view .LVU7087
 25083 00b2 54FA80F4 		uxtab	r4, r4, r0
 25084              	.LVL3169:
11512:Core/Src/bno055.c ****     }
 25085              		.loc 1 11512 18 view .LVU7088
 25086 00b6 64B2     		sxtb	r4, r4
 25087              	.LVL3170:
11512:Core/Src/bno055.c ****     }
 25088              		.loc 1 11512 18 view .LVU7089
 25089 00b8 F0E7     		b	.L1679
 25090              	.LVL3171:
 25091              	.L1682:
11452:Core/Src/bno055.c ****     }
 25092              		.loc 1 11452 16 view .LVU7090
 25093 00ba 6FF07E04 		mvn	r4, #126
 25094 00be EDE7     		b	.L1679
 25095              	.L1692:
 25096              		.align	2
 25097              	.L1691:
 25098 00c0 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 697


 25099              		.cfi_endproc
 25100              	.LFE178:
 25102              		.section	.text.bno055_get_accel_power_mode,"ax",%progbits
 25103              		.align	1
 25104              		.global	bno055_get_accel_power_mode
 25105              		.syntax unified
 25106              		.thumb
 25107              		.thumb_func
 25109              	bno055_get_accel_power_mode:
 25110              	.LVL3172:
 25111              	.LFB179:
11517:Core/Src/bno055.c **** 
11518:Core/Src/bno055.c **** /*!
11519:Core/Src/bno055.c ****  *  @brief This API used to read the accel power mode
11520:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11521:Core/Src/bno055.c ****  *
11522:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11523:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11524:Core/Src/bno055.c ****  *   -----------------   | -------------
11525:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11526:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11527:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11528:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11529:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11530:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11531:Core/Src/bno055.c ****  *
11532:Core/Src/bno055.c ****  *  @return results of bus communication function
11533:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11534:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11535:Core/Src/bno055.c ****  *
11536:Core/Src/bno055.c ****  *
11537:Core/Src/bno055.c ****  */
11538:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_power_mode(u8 *accel_power_mode_u8)
11539:Core/Src/bno055.c **** {
 25112              		.loc 1 11539 1 is_stmt 1 view -0
 25113              		.cfi_startproc
 25114              		@ args = 0, pretend = 0, frame = 8
 25115              		@ frame_needed = 0, uses_anonymous_args = 0
 25116              		.loc 1 11539 1 is_stmt 0 view .LVU7092
 25117 0000 30B5     		push	{r4, r5, lr}
 25118              	.LCFI709:
 25119              		.cfi_def_cfa_offset 12
 25120              		.cfi_offset 4, -12
 25121              		.cfi_offset 5, -8
 25122              		.cfi_offset 14, -4
 25123 0002 83B0     		sub	sp, sp, #12
 25124              	.LCFI710:
 25125              		.cfi_def_cfa_offset 24
11540:Core/Src/bno055.c ****     /* Variable used to return value of
11541:Core/Src/bno055.c ****      * communication routine*/
11542:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25126              		.loc 1 11542 5 is_stmt 1 view .LVU7093
 25127              	.LVL3173:
11543:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25128              		.loc 1 11543 5 view .LVU7094
 25129              		.loc 1 11543 8 is_stmt 0 view .LVU7095
 25130 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 698


 25131 0006 8DF80730 		strb	r3, [sp, #7]
11544:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25132              		.loc 1 11544 5 is_stmt 1 view .LVU7096
 25133              	.LVL3174:
11545:Core/Src/bno055.c **** 
11546:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11547:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25134              		.loc 1 11547 5 view .LVU7097
 25135              		.loc 1 11547 18 is_stmt 0 view .LVU7098
 25136 000a 134B     		ldr	r3, .L1701
 25137 000c 1B68     		ldr	r3, [r3]
 25138              		.loc 1 11547 8 view .LVU7099
 25139 000e EBB1     		cbz	r3, .L1697
 25140 0010 0446     		mov	r4, r0
11548:Core/Src/bno055.c ****     {
11549:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11550:Core/Src/bno055.c ****     }
11551:Core/Src/bno055.c ****     else
11552:Core/Src/bno055.c ****     {
11553:Core/Src/bno055.c ****         /*condition check for page, accel power mode is
11554:Core/Src/bno055.c ****          * available in the page one*/
11555:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25141              		.loc 1 11555 9 is_stmt 1 view .LVU7100
 25142              		.loc 1 11555 21 is_stmt 0 view .LVU7101
 25143 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25144              		.loc 1 11555 12 view .LVU7102
 25145 0014 012B     		cmp	r3, #1
 25146 0016 13D1     		bne	.L1700
 25147              	.LVL3175:
 25148              	.L1695:
11556:Core/Src/bno055.c ****         {
11557:Core/Src/bno055.c ****             /* Write page as one */
11558:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11559:Core/Src/bno055.c ****         }
11560:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25149              		.loc 1 11560 53 discriminator 1 view .LVU7103
 25150 0018 0F4B     		ldr	r3, .L1701
 25151 001a 1B68     		ldr	r3, [r3]
 25152 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25153              		.loc 1 11560 41 discriminator 1 view .LVU7104
 25154 001e 012B     		cmp	r3, #1
 25155 0020 17D1     		bne	.L1698
 25156              	.L1696:
11561:Core/Src/bno055.c ****         {
11562:Core/Src/bno055.c ****             /* Read the value of accel bandwidth */
11563:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25157              		.loc 1 11563 13 is_stmt 1 view .LVU7105
 25158              		.loc 1 11563 32 is_stmt 0 view .LVU7106
 25159 0022 0D4B     		ldr	r3, .L1701
 25160 0024 1868     		ldr	r0, [r3]
 25161 0026 0569     		ldr	r5, [r0, #16]
 25162              		.loc 1 11563 24 view .LVU7107
 25163 0028 0123     		movs	r3, #1
 25164 002a 0DF10702 		add	r2, sp, #7
 25165 002e 0821     		movs	r1, #8
 25166 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25167 0032 A847     		blx	r5
ARM GAS  /tmp/ccO72alg.s 			page 699


 25168              	.LVL3176:
11564:Core/Src/bno055.c ****                                                       BNO055_ACCEL_POWER_MODE_REG,
11565:Core/Src/bno055.c ****                                                       &data_u8r,
11566:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11567:Core/Src/bno055.c ****             *accel_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE);
 25169              		.loc 1 11567 13 is_stmt 1 view .LVU7108
 25170              		.loc 1 11567 36 is_stmt 0 view .LVU7109
 25171 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25172 0038 5B09     		lsrs	r3, r3, #5
 25173              		.loc 1 11567 34 view .LVU7110
 25174 003a 2370     		strb	r3, [r4]
 25175              	.LVL3177:
 25176              	.L1694:
11568:Core/Src/bno055.c ****         }
11569:Core/Src/bno055.c ****         else
11570:Core/Src/bno055.c ****         {
11571:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11572:Core/Src/bno055.c ****         }
11573:Core/Src/bno055.c ****     }
11574:Core/Src/bno055.c **** 
11575:Core/Src/bno055.c ****     return com_rslt;
11576:Core/Src/bno055.c **** }
 25177              		.loc 1 11576 1 view .LVU7111
 25178 003c 03B0     		add	sp, sp, #12
 25179              	.LCFI711:
 25180              		.cfi_remember_state
 25181              		.cfi_def_cfa_offset 12
 25182              		@ sp needed
 25183 003e 30BD     		pop	{r4, r5, pc}
 25184              	.LVL3178:
 25185              	.L1700:
 25186              	.LCFI712:
 25187              		.cfi_restore_state
11558:Core/Src/bno055.c ****         }
 25188              		.loc 1 11558 13 is_stmt 1 view .LVU7112
11558:Core/Src/bno055.c ****         }
 25189              		.loc 1 11558 23 is_stmt 0 view .LVU7113
 25190 0040 0120     		movs	r0, #1
 25191              	.LVL3179:
11558:Core/Src/bno055.c ****         }
 25192              		.loc 1 11558 23 view .LVU7114
 25193 0042 FFF7FEFF 		bl	bno055_write_page_id
 25194              	.LVL3180:
11560:Core/Src/bno055.c ****         {
 25195              		.loc 1 11560 9 is_stmt 1 view .LVU7115
11560:Core/Src/bno055.c ****         {
 25196              		.loc 1 11560 12 is_stmt 0 view .LVU7116
 25197 0046 0028     		cmp	r0, #0
 25198 0048 EBD0     		beq	.L1696
 25199 004a E5E7     		b	.L1695
 25200              	.LVL3181:
 25201              	.L1697:
11549:Core/Src/bno055.c ****     }
 25202              		.loc 1 11549 16 view .LVU7117
 25203 004c 6FF07E00 		mvn	r0, #126
 25204              	.LVL3182:
11549:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 700


 25205              		.loc 1 11549 16 view .LVU7118
 25206 0050 F4E7     		b	.L1694
 25207              	.LVL3183:
 25208              	.L1698:
11571:Core/Src/bno055.c ****         }
 25209              		.loc 1 11571 22 view .LVU7119
 25210 0052 4FF0FF30 		mov	r0, #-1
 25211 0056 F1E7     		b	.L1694
 25212              	.L1702:
 25213              		.align	2
 25214              	.L1701:
 25215 0058 00000000 		.word	.LANCHOR0
 25216              		.cfi_endproc
 25217              	.LFE179:
 25219              		.section	.text.bno055_set_accel_power_mode,"ax",%progbits
 25220              		.align	1
 25221              		.global	bno055_set_accel_power_mode
 25222              		.syntax unified
 25223              		.thumb
 25224              		.thumb_func
 25226              	bno055_set_accel_power_mode:
 25227              	.LVL3184:
 25228              	.LFB180:
11577:Core/Src/bno055.c **** 
11578:Core/Src/bno055.c **** /*!
11579:Core/Src/bno055.c ****  *  @brief This API used to write the accel power mode
11580:Core/Src/bno055.c ****  *  from page one register from 0x08 bit 5 to 7
11581:Core/Src/bno055.c ****  *
11582:Core/Src/bno055.c ****  *  @param accel_power_mode_u8 : The value of accel power mode
11583:Core/Src/bno055.c ****  * accel_power_mode_u8 |   result
11584:Core/Src/bno055.c ****  *   -----------------   | -------------
11585:Core/Src/bno055.c ****  *              0x00     | BNO055_ACCEL_NORMAL
11586:Core/Src/bno055.c ****  *              0x01     | BNO055_ACCEL_SUSPEND
11587:Core/Src/bno055.c ****  *              0x02     | BNO055_ACCEL_LOWPOWER_1
11588:Core/Src/bno055.c ****  *              0x03     | BNO055_ACCEL_STANDBY
11589:Core/Src/bno055.c ****  *              0x04     | BNO055_ACCEL_LOWPOWER_2
11590:Core/Src/bno055.c ****  *              0x05     | BNO055_ACCEL_DEEPSUSPEND
11591:Core/Src/bno055.c ****  *
11592:Core/Src/bno055.c ****  *  @return results of bus communication function
11593:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11594:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11595:Core/Src/bno055.c ****  *
11596:Core/Src/bno055.c ****  *
11597:Core/Src/bno055.c ****  */
11598:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_power_mode(u8 accel_power_mode_u8)
11599:Core/Src/bno055.c **** {
 25229              		.loc 1 11599 1 is_stmt 1 view -0
 25230              		.cfi_startproc
 25231              		@ args = 0, pretend = 0, frame = 8
 25232              		@ frame_needed = 0, uses_anonymous_args = 0
 25233              		.loc 1 11599 1 is_stmt 0 view .LVU7121
 25234 0000 30B5     		push	{r4, r5, lr}
 25235              	.LCFI713:
 25236              		.cfi_def_cfa_offset 12
 25237              		.cfi_offset 4, -12
 25238              		.cfi_offset 5, -8
 25239              		.cfi_offset 14, -4
ARM GAS  /tmp/ccO72alg.s 			page 701


 25240 0002 83B0     		sub	sp, sp, #12
 25241              	.LCFI714:
 25242              		.cfi_def_cfa_offset 24
11600:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25243              		.loc 1 11600 5 is_stmt 1 view .LVU7122
 25244              	.LVL3185:
11601:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25245              		.loc 1 11601 5 view .LVU7123
 25246              		.loc 1 11601 8 is_stmt 0 view .LVU7124
 25247 0004 0023     		movs	r3, #0
 25248 0006 8DF80730 		strb	r3, [sp, #7]
11602:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25249              		.loc 1 11602 5 is_stmt 1 view .LVU7125
 25250              	.LVL3186:
11603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25251              		.loc 1 11603 5 view .LVU7126
 25252              		.loc 1 11603 8 is_stmt 0 view .LVU7127
 25253 000a 8DF80630 		strb	r3, [sp, #6]
11604:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25254              		.loc 1 11604 5 is_stmt 1 view .LVU7128
 25255              	.LVL3187:
11605:Core/Src/bno055.c **** 
11606:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11607:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25256              		.loc 1 11607 5 view .LVU7129
 25257              		.loc 1 11607 18 is_stmt 0 view .LVU7130
 25258 000e 2A4B     		ldr	r3, .L1716
 25259 0010 1B68     		ldr	r3, [r3]
 25260              		.loc 1 11607 8 view .LVU7131
 25261 0012 002B     		cmp	r3, #0
 25262 0014 4DD0     		beq	.L1707
 25263 0016 0546     		mov	r5, r0
11608:Core/Src/bno055.c ****     {
11609:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11610:Core/Src/bno055.c ****     }
11611:Core/Src/bno055.c ****     else
11612:Core/Src/bno055.c ****     {
11613:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11614:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11615:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11616:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25264              		.loc 1 11616 9 is_stmt 1 view .LVU7132
 25265              		.loc 1 11616 19 is_stmt 0 view .LVU7133
 25266 0018 0DF10600 		add	r0, sp, #6
 25267              	.LVL3188:
 25268              		.loc 1 11616 19 view .LVU7134
 25269 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25270              	.LVL3189:
11617:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25271              		.loc 1 11617 9 is_stmt 1 view .LVU7135
 25272              		.loc 1 11617 12 is_stmt 0 view .LVU7136
 25273 0020 0446     		mov	r4, r0
 25274 0022 90BB     		cbnz	r0, .L1708
11618:Core/Src/bno055.c ****         {
11619:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25275              		.loc 1 11619 13 is_stmt 1 view .LVU7137
 25276              		.loc 1 11619 32 is_stmt 0 view .LVU7138
ARM GAS  /tmp/ccO72alg.s 			page 702


 25277 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25278              		.loc 1 11619 16 view .LVU7139
 25279 0028 1BB9     		cbnz	r3, .L1713
 25280              	.LVL3190:
 25281              	.L1706:
11620:Core/Src/bno055.c ****             {
11621:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11622:Core/Src/bno055.c ****             }
11623:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25282              		.loc 1 11623 13 is_stmt 1 view .LVU7140
 25283              		.loc 1 11623 16 is_stmt 0 view .LVU7141
 25284 002a 44B1     		cbz	r4, .L1714
11624:Core/Src/bno055.c ****             {
11625:Core/Src/bno055.c ****                 /* Write page as one */
11626:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11627:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11628:Core/Src/bno055.c ****                 {
11629:Core/Src/bno055.c ****                     if (accel_power_mode_u8 < BNO055_ACCEL_POWER_MODE_RANGE)
11630:Core/Src/bno055.c ****                     {
11631:Core/Src/bno055.c ****                         /* Write the value of accel bandwidth*/
11632:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11633:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
11634:Core/Src/bno055.c ****                                                                   &data_u8r,
11635:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11636:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11637:Core/Src/bno055.c ****                         {
11638:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_POWER_MODE, accel
11639:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11640:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
11641:Core/Src/bno055.c ****                                                                         &data_u8r,
11642:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11643:Core/Src/bno055.c ****                         }
11644:Core/Src/bno055.c ****                     }
11645:Core/Src/bno055.c ****                     else
11646:Core/Src/bno055.c ****                     {
11647:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11648:Core/Src/bno055.c ****                     }
11649:Core/Src/bno055.c ****                 }
11650:Core/Src/bno055.c ****                 else
11651:Core/Src/bno055.c ****                 {
11652:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11653:Core/Src/bno055.c ****                 }
11654:Core/Src/bno055.c ****             }
11655:Core/Src/bno055.c ****             else
11656:Core/Src/bno055.c ****             {
11657:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25285              		.loc 1 11657 26 view .LVU7142
 25286 002c 4FF0FF34 		mov	r4, #-1
 25287              	.LVL3191:
 25288              		.loc 1 11657 26 view .LVU7143
 25289 0030 2DE0     		b	.L1705
 25290              	.LVL3192:
 25291              	.L1713:
11621:Core/Src/bno055.c ****             }
 25292              		.loc 1 11621 17 is_stmt 1 view .LVU7144
11621:Core/Src/bno055.c ****             }
 25293              		.loc 1 11621 28 is_stmt 0 view .LVU7145
ARM GAS  /tmp/ccO72alg.s 			page 703


 25294 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 25295              	.LVL3193:
11621:Core/Src/bno055.c ****             }
 25296              		.loc 1 11621 25 view .LVU7146
 25297 0036 54FA80F4 		uxtab	r4, r4, r0
 25298 003a 64B2     		sxtb	r4, r4
 25299              	.LVL3194:
11621:Core/Src/bno055.c ****             }
 25300              		.loc 1 11621 25 view .LVU7147
 25301 003c F5E7     		b	.L1706
 25302              	.L1714:
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25303              		.loc 1 11626 17 is_stmt 1 view .LVU7148
11626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25304              		.loc 1 11626 30 is_stmt 0 view .LVU7149
 25305 003e 0120     		movs	r0, #1
 25306 0040 FFF7FEFF 		bl	bno055_write_page_id
 25307              	.LVL3195:
11627:Core/Src/bno055.c ****                 {
 25308              		.loc 1 11627 17 is_stmt 1 view .LVU7150
11627:Core/Src/bno055.c ****                 {
 25309              		.loc 1 11627 20 is_stmt 0 view .LVU7151
 25310 0044 48BB     		cbnz	r0, .L1710
11629:Core/Src/bno055.c ****                     {
 25311              		.loc 1 11629 21 is_stmt 1 view .LVU7152
11629:Core/Src/bno055.c ****                     {
 25312              		.loc 1 11629 24 is_stmt 0 view .LVU7153
 25313 0046 052D     		cmp	r5, #5
 25314 0048 2AD8     		bhi	.L1711
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25315              		.loc 1 11632 25 is_stmt 1 view .LVU7154
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25316              		.loc 1 11632 44 is_stmt 0 view .LVU7155
 25317 004a 1B4B     		ldr	r3, .L1716
 25318 004c 1868     		ldr	r0, [r3]
 25319              	.LVL3196:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25320              		.loc 1 11632 44 view .LVU7156
 25321 004e 0469     		ldr	r4, [r0, #16]
 25322              	.LVL3197:
11632:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_POWER_MODE_REG,
 25323              		.loc 1 11632 36 view .LVU7157
 25324 0050 0123     		movs	r3, #1
 25325 0052 0DF10702 		add	r2, sp, #7
 25326 0056 0821     		movs	r1, #8
 25327 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25328 005a A047     		blx	r4
 25329              	.LVL3198:
11636:Core/Src/bno055.c ****                         {
 25330              		.loc 1 11636 25 is_stmt 1 view .LVU7158
11636:Core/Src/bno055.c ****                         {
 25331              		.loc 1 11636 28 is_stmt 0 view .LVU7159
 25332 005c 0446     		mov	r4, r0
 25333 005e B0B9     		cbnz	r0, .L1705
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25334              		.loc 1 11638 29 is_stmt 1 view .LVU7160
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 704


 25335              		.loc 1 11638 40 is_stmt 0 view .LVU7161
 25336 0060 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25337              	.LVL3199:
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25338              		.loc 1 11638 40 view .LVU7162
 25339 0064 00F01F00 		and	r0, r0, #31
 25340 0068 40EA4510 		orr	r0, r0, r5, lsl #5
11638:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25341              		.loc 1 11638 38 view .LVU7163
 25342 006c 8DF80700 		strb	r0, [sp, #7]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25343              		.loc 1 11639 29 is_stmt 1 view .LVU7164
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25344              		.loc 1 11639 49 is_stmt 0 view .LVU7165
 25345 0070 114B     		ldr	r3, .L1716
 25346 0072 1868     		ldr	r0, [r3]
 25347 0074 C568     		ldr	r5, [r0, #12]
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25348              		.loc 1 11639 41 view .LVU7166
 25349 0076 0123     		movs	r3, #1
 25350 0078 0DF10702 		add	r2, sp, #7
 25351 007c 0821     		movs	r1, #8
 25352 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25353 0080 A847     		blx	r5
 25354              	.LVL3200:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25355              		.loc 1 11639 38 view .LVU7167
 25356 0082 54FA80F4 		uxtab	r4, r4, r0
 25357 0086 64B2     		sxtb	r4, r4
 25358              	.LVL3201:
11639:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_POWER_MODE_REG
 25359              		.loc 1 11639 38 view .LVU7168
 25360 0088 01E0     		b	.L1705
 25361              	.LVL3202:
 25362              	.L1708:
11658:Core/Src/bno055.c ****             }
11659:Core/Src/bno055.c ****         }
11660:Core/Src/bno055.c ****         else
11661:Core/Src/bno055.c ****         {
11662:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25363              		.loc 1 11662 22 view .LVU7169
 25364 008a 4FF0FF34 		mov	r4, #-1
 25365              	.LVL3203:
 25366              	.L1705:
11663:Core/Src/bno055.c ****         }
11664:Core/Src/bno055.c ****     }
11665:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25367              		.loc 1 11665 5 is_stmt 1 view .LVU7170
 25368              		.loc 1 11665 24 is_stmt 0 view .LVU7171
 25369 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25370              		.loc 1 11665 8 view .LVU7172
 25371 0092 40B9     		cbnz	r0, .L1715
 25372              	.LVL3204:
 25373              	.L1704:
11666:Core/Src/bno055.c ****     {
11667:Core/Src/bno055.c ****         /* set the operation mode of
11668:Core/Src/bno055.c ****          * previous operation mode*/
ARM GAS  /tmp/ccO72alg.s 			page 705


11669:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11670:Core/Src/bno055.c ****     }
11671:Core/Src/bno055.c **** 
11672:Core/Src/bno055.c ****     return com_rslt;
11673:Core/Src/bno055.c **** }
 25374              		.loc 1 11673 1 view .LVU7173
 25375 0094 2046     		mov	r0, r4
 25376 0096 03B0     		add	sp, sp, #12
 25377              	.LCFI715:
 25378              		.cfi_remember_state
 25379              		.cfi_def_cfa_offset 12
 25380              		@ sp needed
 25381 0098 30BD     		pop	{r4, r5, pc}
 25382              	.LVL3205:
 25383              	.L1710:
 25384              	.LCFI716:
 25385              		.cfi_restore_state
11652:Core/Src/bno055.c ****                 }
 25386              		.loc 1 11652 30 view .LVU7174
 25387 009a 4FF0FF34 		mov	r4, #-1
 25388              	.LVL3206:
11652:Core/Src/bno055.c ****                 }
 25389              		.loc 1 11652 30 view .LVU7175
 25390 009e F6E7     		b	.L1705
 25391              	.LVL3207:
 25392              	.L1711:
11647:Core/Src/bno055.c ****                     }
 25393              		.loc 1 11647 34 view .LVU7176
 25394 00a0 6FF00104 		mvn	r4, #1
 25395              	.LVL3208:
11647:Core/Src/bno055.c ****                     }
 25396              		.loc 1 11647 34 view .LVU7177
 25397 00a4 F3E7     		b	.L1705
 25398              	.LVL3209:
 25399              	.L1715:
11669:Core/Src/bno055.c ****     }
 25400              		.loc 1 11669 9 is_stmt 1 view .LVU7178
11669:Core/Src/bno055.c ****     }
 25401              		.loc 1 11669 21 is_stmt 0 view .LVU7179
 25402 00a6 FFF7FEFF 		bl	bno055_set_operation_mode
 25403              	.LVL3210:
11669:Core/Src/bno055.c ****     }
 25404              		.loc 1 11669 18 view .LVU7180
 25405 00aa 54FA80F4 		uxtab	r4, r4, r0
 25406              	.LVL3211:
11669:Core/Src/bno055.c ****     }
 25407              		.loc 1 11669 18 view .LVU7181
 25408 00ae 64B2     		sxtb	r4, r4
 25409              	.LVL3212:
11669:Core/Src/bno055.c ****     }
 25410              		.loc 1 11669 18 view .LVU7182
 25411 00b0 F0E7     		b	.L1704
 25412              	.LVL3213:
 25413              	.L1707:
11609:Core/Src/bno055.c ****     }
 25414              		.loc 1 11609 16 view .LVU7183
 25415 00b2 6FF07E04 		mvn	r4, #126
ARM GAS  /tmp/ccO72alg.s 			page 706


 25416 00b6 EDE7     		b	.L1704
 25417              	.L1717:
 25418              		.align	2
 25419              	.L1716:
 25420 00b8 00000000 		.word	.LANCHOR0
 25421              		.cfi_endproc
 25422              	.LFE180:
 25424              		.section	.text.bno055_get_mag_data_output_rate,"ax",%progbits
 25425              		.align	1
 25426              		.global	bno055_get_mag_data_output_rate
 25427              		.syntax unified
 25428              		.thumb
 25429              		.thumb_func
 25431              	bno055_get_mag_data_output_rate:
 25432              	.LVL3214:
 25433              	.LFB181:
11674:Core/Src/bno055.c **** 
11675:Core/Src/bno055.c **** /*!
11676:Core/Src/bno055.c ****  *  @brief This API used to read the mag output data rate
11677:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11678:Core/Src/bno055.c ****  *
11679:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11680:Core/Src/bno055.c ****  *
11681:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11682:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11683:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11684:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11685:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11686:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11687:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11688:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11689:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11690:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11691:Core/Src/bno055.c ****  *
11692:Core/Src/bno055.c ****  *  @return results of bus communication function
11693:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11694:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11695:Core/Src/bno055.c ****  *
11696:Core/Src/bno055.c ****  *
11697:Core/Src/bno055.c ****  */
11698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_data_output_rate(u8 *mag_data_output_rate_u8)
11699:Core/Src/bno055.c **** {
 25434              		.loc 1 11699 1 is_stmt 1 view -0
 25435              		.cfi_startproc
 25436              		@ args = 0, pretend = 0, frame = 8
 25437              		@ frame_needed = 0, uses_anonymous_args = 0
 25438              		.loc 1 11699 1 is_stmt 0 view .LVU7185
 25439 0000 30B5     		push	{r4, r5, lr}
 25440              	.LCFI717:
 25441              		.cfi_def_cfa_offset 12
 25442              		.cfi_offset 4, -12
 25443              		.cfi_offset 5, -8
 25444              		.cfi_offset 14, -4
 25445 0002 83B0     		sub	sp, sp, #12
 25446              	.LCFI718:
 25447              		.cfi_def_cfa_offset 24
11700:Core/Src/bno055.c ****     /* Variable used to return value of
ARM GAS  /tmp/ccO72alg.s 			page 707


11701:Core/Src/bno055.c ****      * communication routine*/
11702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25448              		.loc 1 11702 5 is_stmt 1 view .LVU7186
 25449              	.LVL3215:
11703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25450              		.loc 1 11703 5 view .LVU7187
 25451              		.loc 1 11703 8 is_stmt 0 view .LVU7188
 25452 0004 0023     		movs	r3, #0
 25453 0006 8DF80730 		strb	r3, [sp, #7]
11704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25454              		.loc 1 11704 5 is_stmt 1 view .LVU7189
 25455              	.LVL3216:
11705:Core/Src/bno055.c **** 
11706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25456              		.loc 1 11707 5 view .LVU7190
 25457              		.loc 1 11707 18 is_stmt 0 view .LVU7191
 25458 000a 144B     		ldr	r3, .L1726
 25459 000c 1B68     		ldr	r3, [r3]
 25460              		.loc 1 11707 8 view .LVU7192
 25461 000e F3B1     		cbz	r3, .L1722
 25462 0010 0446     		mov	r4, r0
11708:Core/Src/bno055.c ****     {
11709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11710:Core/Src/bno055.c ****     }
11711:Core/Src/bno055.c ****     else
11712:Core/Src/bno055.c ****     {
11713:Core/Src/bno055.c ****         /*condition check for page, output data rate
11714:Core/Src/bno055.c ****          * available in the page one*/
11715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25463              		.loc 1 11715 9 is_stmt 1 view .LVU7193
 25464              		.loc 1 11715 21 is_stmt 0 view .LVU7194
 25465 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25466              		.loc 1 11715 12 view .LVU7195
 25467 0014 012B     		cmp	r3, #1
 25468 0016 14D1     		bne	.L1725
 25469              	.LVL3217:
 25470              	.L1720:
11716:Core/Src/bno055.c ****         {
11717:Core/Src/bno055.c ****             /* Write page as one */
11718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11719:Core/Src/bno055.c ****         }
11720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25471              		.loc 1 11720 53 discriminator 1 view .LVU7196
 25472 0018 104B     		ldr	r3, .L1726
 25473 001a 1B68     		ldr	r3, [r3]
 25474 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25475              		.loc 1 11720 41 discriminator 1 view .LVU7197
 25476 001e 012B     		cmp	r3, #1
 25477 0020 18D1     		bne	.L1723
 25478              	.L1721:
11721:Core/Src/bno055.c ****         {
11722:Core/Src/bno055.c ****             /* Read the mag output data rate*/
11723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25479              		.loc 1 11723 13 is_stmt 1 view .LVU7198
 25480              		.loc 1 11723 32 is_stmt 0 view .LVU7199
 25481 0022 0E4B     		ldr	r3, .L1726
ARM GAS  /tmp/ccO72alg.s 			page 708


 25482 0024 1868     		ldr	r0, [r3]
 25483 0026 0569     		ldr	r5, [r0, #16]
 25484              		.loc 1 11723 24 view .LVU7200
 25485 0028 0123     		movs	r3, #1
 25486 002a 0DF10702 		add	r2, sp, #7
 25487 002e 0921     		movs	r1, #9
 25488 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25489 0032 A847     		blx	r5
 25490              	.LVL3218:
11724:Core/Src/bno055.c ****                                                       BNO055_MAG_DATA_OUTPUT_RATE_REG,
11725:Core/Src/bno055.c ****                                                       &data_u8r,
11726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11727:Core/Src/bno055.c ****             *mag_data_output_rate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_DATA_OUTPUT_RATE);
 25491              		.loc 1 11727 13 is_stmt 1 view .LVU7201
 25492              		.loc 1 11727 40 is_stmt 0 view .LVU7202
 25493 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25494 0038 03F00703 		and	r3, r3, #7
 25495              		.loc 1 11727 38 view .LVU7203
 25496 003c 2370     		strb	r3, [r4]
 25497              	.LVL3219:
 25498              	.L1719:
11728:Core/Src/bno055.c ****         }
11729:Core/Src/bno055.c ****         else
11730:Core/Src/bno055.c ****         {
11731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11732:Core/Src/bno055.c ****         }
11733:Core/Src/bno055.c ****     }
11734:Core/Src/bno055.c **** 
11735:Core/Src/bno055.c ****     return com_rslt;
11736:Core/Src/bno055.c **** }
 25499              		.loc 1 11736 1 view .LVU7204
 25500 003e 03B0     		add	sp, sp, #12
 25501              	.LCFI719:
 25502              		.cfi_remember_state
 25503              		.cfi_def_cfa_offset 12
 25504              		@ sp needed
 25505 0040 30BD     		pop	{r4, r5, pc}
 25506              	.LVL3220:
 25507              	.L1725:
 25508              	.LCFI720:
 25509              		.cfi_restore_state
11718:Core/Src/bno055.c ****         }
 25510              		.loc 1 11718 13 is_stmt 1 view .LVU7205
11718:Core/Src/bno055.c ****         }
 25511              		.loc 1 11718 23 is_stmt 0 view .LVU7206
 25512 0042 0120     		movs	r0, #1
 25513              	.LVL3221:
11718:Core/Src/bno055.c ****         }
 25514              		.loc 1 11718 23 view .LVU7207
 25515 0044 FFF7FEFF 		bl	bno055_write_page_id
 25516              	.LVL3222:
11720:Core/Src/bno055.c ****         {
 25517              		.loc 1 11720 9 is_stmt 1 view .LVU7208
11720:Core/Src/bno055.c ****         {
 25518              		.loc 1 11720 12 is_stmt 0 view .LVU7209
 25519 0048 0028     		cmp	r0, #0
 25520 004a EAD0     		beq	.L1721
ARM GAS  /tmp/ccO72alg.s 			page 709


 25521 004c E4E7     		b	.L1720
 25522              	.LVL3223:
 25523              	.L1722:
11709:Core/Src/bno055.c ****     }
 25524              		.loc 1 11709 16 view .LVU7210
 25525 004e 6FF07E00 		mvn	r0, #126
 25526              	.LVL3224:
11709:Core/Src/bno055.c ****     }
 25527              		.loc 1 11709 16 view .LVU7211
 25528 0052 F4E7     		b	.L1719
 25529              	.LVL3225:
 25530              	.L1723:
11731:Core/Src/bno055.c ****         }
 25531              		.loc 1 11731 22 view .LVU7212
 25532 0054 4FF0FF30 		mov	r0, #-1
 25533 0058 F1E7     		b	.L1719
 25534              	.L1727:
 25535 005a 00BF     		.align	2
 25536              	.L1726:
 25537 005c 00000000 		.word	.LANCHOR0
 25538              		.cfi_endproc
 25539              	.LFE181:
 25541              		.section	.text.bno055_set_mag_data_output_rate,"ax",%progbits
 25542              		.align	1
 25543              		.global	bno055_set_mag_data_output_rate
 25544              		.syntax unified
 25545              		.thumb
 25546              		.thumb_func
 25548              	bno055_set_mag_data_output_rate:
 25549              	.LVL3226:
 25550              	.LFB182:
11737:Core/Src/bno055.c **** 
11738:Core/Src/bno055.c **** /*!
11739:Core/Src/bno055.c ****  *  @brief This API used to write the mag output data rate
11740:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 0 to 2
11741:Core/Src/bno055.c ****  *
11742:Core/Src/bno055.c ****  *  @param mag_data_output_rate_u8 : The value of mag output data rate
11743:Core/Src/bno055.c ****  *
11744:Core/Src/bno055.c ****  *  mag_data_output_rate_u8 |   result
11745:Core/Src/bno055.c ****  *  ----------------------    |----------------------
11746:Core/Src/bno055.c ****  *     0x00                   | MAG_DATA_OUTPUT_RATE_2HZ
11747:Core/Src/bno055.c ****  *     0x01                   | MAG_DATA_OUTPUT_RATE_6HZ
11748:Core/Src/bno055.c ****  *     0x02                   | MAG_DATA_OUTPUT_RATE_8HZ
11749:Core/Src/bno055.c ****  *     0x03                   | MAG_DATA_OUTPUT_RATE_10HZ
11750:Core/Src/bno055.c ****  *     0x04                   | MAG_DATA_OUTPUT_RATE_15HZ
11751:Core/Src/bno055.c ****  *     0x05                   | MAG_DATA_OUTPUT_RATE_20HZ
11752:Core/Src/bno055.c ****  *     0x06                   | MAG_DATA_OUTPUT_RATE_25HZ
11753:Core/Src/bno055.c ****  *     0x07                   | MAG_DATA_OUTPUT_RATE_30HZ
11754:Core/Src/bno055.c ****  *
11755:Core/Src/bno055.c ****  *  @return results of bus communication function
11756:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11757:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11758:Core/Src/bno055.c ****  *
11759:Core/Src/bno055.c ****  *
11760:Core/Src/bno055.c ****  */
11761:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_data_output_rate(u8 mag_data_output_rate_u8)
11762:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 710


 25551              		.loc 1 11762 1 is_stmt 1 view -0
 25552              		.cfi_startproc
 25553              		@ args = 0, pretend = 0, frame = 8
 25554              		@ frame_needed = 0, uses_anonymous_args = 0
 25555              		.loc 1 11762 1 is_stmt 0 view .LVU7214
 25556 0000 30B5     		push	{r4, r5, lr}
 25557              	.LCFI721:
 25558              		.cfi_def_cfa_offset 12
 25559              		.cfi_offset 4, -12
 25560              		.cfi_offset 5, -8
 25561              		.cfi_offset 14, -4
 25562 0002 83B0     		sub	sp, sp, #12
 25563              	.LCFI722:
 25564              		.cfi_def_cfa_offset 24
11763:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25565              		.loc 1 11763 5 is_stmt 1 view .LVU7215
 25566              	.LVL3227:
11764:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25567              		.loc 1 11764 5 view .LVU7216
 25568              		.loc 1 11764 8 is_stmt 0 view .LVU7217
 25569 0004 0023     		movs	r3, #0
 25570 0006 8DF80730 		strb	r3, [sp, #7]
11765:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25571              		.loc 1 11765 5 is_stmt 1 view .LVU7218
 25572              	.LVL3228:
11766:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25573              		.loc 1 11766 5 view .LVU7219
11767:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25574              		.loc 1 11767 5 view .LVU7220
 25575              		.loc 1 11767 8 is_stmt 0 view .LVU7221
 25576 000a 8DF80630 		strb	r3, [sp, #6]
11768:Core/Src/bno055.c **** 
11769:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11770:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25577              		.loc 1 11770 5 is_stmt 1 view .LVU7222
 25578              		.loc 1 11770 18 is_stmt 0 view .LVU7223
 25579 000e 2C4B     		ldr	r3, .L1741
 25580 0010 1B68     		ldr	r3, [r3]
 25581              		.loc 1 11770 8 view .LVU7224
 25582 0012 002B     		cmp	r3, #0
 25583 0014 50D0     		beq	.L1732
 25584 0016 0546     		mov	r5, r0
11771:Core/Src/bno055.c ****     {
11772:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11773:Core/Src/bno055.c ****     }
11774:Core/Src/bno055.c ****     else
11775:Core/Src/bno055.c ****     {
11776:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11777:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
11778:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11779:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25585              		.loc 1 11779 9 is_stmt 1 view .LVU7225
 25586              		.loc 1 11779 19 is_stmt 0 view .LVU7226
 25587 0018 0DF10600 		add	r0, sp, #6
 25588              	.LVL3229:
 25589              		.loc 1 11779 19 view .LVU7227
 25590 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccO72alg.s 			page 711


 25591              	.LVL3230:
11780:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25592              		.loc 1 11780 9 is_stmt 1 view .LVU7228
 25593              		.loc 1 11780 12 is_stmt 0 view .LVU7229
 25594 0020 0446     		mov	r4, r0
 25595 0022 0028     		cmp	r0, #0
 25596 0024 34D1     		bne	.L1733
11781:Core/Src/bno055.c ****         {
11782:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25597              		.loc 1 11782 13 is_stmt 1 view .LVU7230
 25598              		.loc 1 11782 32 is_stmt 0 view .LVU7231
 25599 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25600              		.loc 1 11782 16 view .LVU7232
 25601 002a 1BB9     		cbnz	r3, .L1738
 25602              	.LVL3231:
 25603              	.L1731:
11783:Core/Src/bno055.c ****             {
11784:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11785:Core/Src/bno055.c ****             }
11786:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25604              		.loc 1 11786 13 is_stmt 1 view .LVU7233
 25605              		.loc 1 11786 16 is_stmt 0 view .LVU7234
 25606 002c 44B1     		cbz	r4, .L1739
11787:Core/Src/bno055.c ****             {
11788:Core/Src/bno055.c ****                 /* Write page as one */
11789:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11790:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11791:Core/Src/bno055.c ****                 {
11792:Core/Src/bno055.c ****                     if (mag_data_output_rate_u8 < BNO055_MAG_OUTPUT_RANGE)
11793:Core/Src/bno055.c ****                     {
11794:Core/Src/bno055.c ****                         /* Write the value of
11795:Core/Src/bno055.c ****                          * mag output data rate*/
11796:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11797:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
11798:Core/Src/bno055.c ****                                                                   &data_u8r,
11799:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11800:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11801:Core/Src/bno055.c ****                         {
11802:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r,
11803:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
11804:Core/Src/bno055.c ****                                                            mag_data_output_rate_u8);
11805:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11806:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
11807:Core/Src/bno055.c ****                                                                         &data_u8r,
11808:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11809:Core/Src/bno055.c ****                         }
11810:Core/Src/bno055.c ****                     }
11811:Core/Src/bno055.c ****                     else
11812:Core/Src/bno055.c ****                     {
11813:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11814:Core/Src/bno055.c ****                     }
11815:Core/Src/bno055.c ****                 }
11816:Core/Src/bno055.c ****                 else
11817:Core/Src/bno055.c ****                 {
11818:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11819:Core/Src/bno055.c ****                 }
11820:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 712


11821:Core/Src/bno055.c ****             else
11822:Core/Src/bno055.c ****             {
11823:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25607              		.loc 1 11823 26 view .LVU7235
 25608 002e 4FF0FF34 		mov	r4, #-1
 25609              	.LVL3232:
 25610              		.loc 1 11823 26 view .LVU7236
 25611 0032 2FE0     		b	.L1730
 25612              	.LVL3233:
 25613              	.L1738:
11784:Core/Src/bno055.c ****             }
 25614              		.loc 1 11784 17 is_stmt 1 view .LVU7237
11784:Core/Src/bno055.c ****             }
 25615              		.loc 1 11784 28 is_stmt 0 view .LVU7238
 25616 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25617              	.LVL3234:
11784:Core/Src/bno055.c ****             }
 25618              		.loc 1 11784 25 view .LVU7239
 25619 0038 54FA80F4 		uxtab	r4, r4, r0
 25620 003c 64B2     		sxtb	r4, r4
 25621              	.LVL3235:
11784:Core/Src/bno055.c ****             }
 25622              		.loc 1 11784 25 view .LVU7240
 25623 003e F5E7     		b	.L1731
 25624              	.L1739:
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25625              		.loc 1 11789 17 is_stmt 1 view .LVU7241
11789:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25626              		.loc 1 11789 30 is_stmt 0 view .LVU7242
 25627 0040 0120     		movs	r0, #1
 25628 0042 FFF7FEFF 		bl	bno055_write_page_id
 25629              	.LVL3236:
11790:Core/Src/bno055.c ****                 {
 25630              		.loc 1 11790 17 is_stmt 1 view .LVU7243
11790:Core/Src/bno055.c ****                 {
 25631              		.loc 1 11790 20 is_stmt 0 view .LVU7244
 25632 0046 58BB     		cbnz	r0, .L1735
11792:Core/Src/bno055.c ****                     {
 25633              		.loc 1 11792 21 is_stmt 1 view .LVU7245
11792:Core/Src/bno055.c ****                     {
 25634              		.loc 1 11792 24 is_stmt 0 view .LVU7246
 25635 0048 072D     		cmp	r5, #7
 25636 004a 2CD8     		bhi	.L1736
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25637              		.loc 1 11796 25 is_stmt 1 view .LVU7247
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25638              		.loc 1 11796 44 is_stmt 0 view .LVU7248
 25639 004c 1C4B     		ldr	r3, .L1741
 25640 004e 1868     		ldr	r0, [r3]
 25641              	.LVL3237:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25642              		.loc 1 11796 44 view .LVU7249
 25643 0050 0469     		ldr	r4, [r0, #16]
 25644              	.LVL3238:
11796:Core/Src/bno055.c ****                                                                   BNO055_MAG_DATA_OUTPUT_RATE_REG,
 25645              		.loc 1 11796 36 view .LVU7250
 25646 0052 0123     		movs	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 713


 25647 0054 0DF10702 		add	r2, sp, #7
 25648 0058 0921     		movs	r1, #9
 25649 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25650 005c A047     		blx	r4
 25651              	.LVL3239:
11800:Core/Src/bno055.c ****                         {
 25652              		.loc 1 11800 25 is_stmt 1 view .LVU7251
11800:Core/Src/bno055.c ****                         {
 25653              		.loc 1 11800 28 is_stmt 0 view .LVU7252
 25654 005e 0446     		mov	r4, r0
 25655 0060 C0B9     		cbnz	r0, .L1730
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25656              		.loc 1 11802 29 is_stmt 1 view .LVU7253
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25657              		.loc 1 11802 40 is_stmt 0 view .LVU7254
 25658 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25659              	.LVL3240:
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25660              		.loc 1 11802 40 view .LVU7255
 25661 0066 20F00700 		bic	r0, r0, #7
 25662 006a 43B2     		sxtb	r3, r0
 25663 006c 05F00700 		and	r0, r5, #7
 25664 0070 1843     		orrs	r0, r0, r3
11802:Core/Src/bno055.c ****                                                            BNO055_MAG_DATA_OUTPUT_RATE,
 25665              		.loc 1 11802 38 view .LVU7256
 25666 0072 8DF80700 		strb	r0, [sp, #7]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25667              		.loc 1 11805 29 is_stmt 1 view .LVU7257
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25668              		.loc 1 11805 49 is_stmt 0 view .LVU7258
 25669 0076 124B     		ldr	r3, .L1741
 25670 0078 1868     		ldr	r0, [r3]
 25671 007a C568     		ldr	r5, [r0, #12]
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25672              		.loc 1 11805 41 view .LVU7259
 25673 007c 0123     		movs	r3, #1
 25674 007e 0DF10702 		add	r2, sp, #7
 25675 0082 0921     		movs	r1, #9
 25676 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25677 0086 A847     		blx	r5
 25678              	.LVL3241:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25679              		.loc 1 11805 38 view .LVU7260
 25680 0088 54FA80F4 		uxtab	r4, r4, r0
 25681 008c 64B2     		sxtb	r4, r4
 25682              	.LVL3242:
11805:Core/Src/bno055.c ****                                                                         BNO055_MAG_DATA_OUTPUT_RATE
 25683              		.loc 1 11805 38 view .LVU7261
 25684 008e 01E0     		b	.L1730
 25685              	.LVL3243:
 25686              	.L1733:
11824:Core/Src/bno055.c ****             }
11825:Core/Src/bno055.c ****         }
11826:Core/Src/bno055.c ****         else
11827:Core/Src/bno055.c ****         {
11828:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 25687              		.loc 1 11828 22 view .LVU7262
ARM GAS  /tmp/ccO72alg.s 			page 714


 25688 0090 4FF0FF34 		mov	r4, #-1
 25689              	.LVL3244:
 25690              	.L1730:
11829:Core/Src/bno055.c ****         }
11830:Core/Src/bno055.c ****     }
11831:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25691              		.loc 1 11831 5 is_stmt 1 view .LVU7263
 25692              		.loc 1 11831 24 is_stmt 0 view .LVU7264
 25693 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 25694              		.loc 1 11831 8 view .LVU7265
 25695 0098 40B9     		cbnz	r0, .L1740
 25696              	.LVL3245:
 25697              	.L1729:
11832:Core/Src/bno055.c ****     {
11833:Core/Src/bno055.c ****         /* set the operation mode of
11834:Core/Src/bno055.c ****          * previous operation mode*/
11835:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11836:Core/Src/bno055.c ****     }
11837:Core/Src/bno055.c **** 
11838:Core/Src/bno055.c ****     return com_rslt;
11839:Core/Src/bno055.c **** }
 25698              		.loc 1 11839 1 view .LVU7266
 25699 009a 2046     		mov	r0, r4
 25700 009c 03B0     		add	sp, sp, #12
 25701              	.LCFI723:
 25702              		.cfi_remember_state
 25703              		.cfi_def_cfa_offset 12
 25704              		@ sp needed
 25705 009e 30BD     		pop	{r4, r5, pc}
 25706              	.LVL3246:
 25707              	.L1735:
 25708              	.LCFI724:
 25709              		.cfi_restore_state
11818:Core/Src/bno055.c ****                 }
 25710              		.loc 1 11818 30 view .LVU7267
 25711 00a0 4FF0FF34 		mov	r4, #-1
 25712              	.LVL3247:
11818:Core/Src/bno055.c ****                 }
 25713              		.loc 1 11818 30 view .LVU7268
 25714 00a4 F6E7     		b	.L1730
 25715              	.LVL3248:
 25716              	.L1736:
11813:Core/Src/bno055.c ****                     }
 25717              		.loc 1 11813 34 view .LVU7269
 25718 00a6 6FF00104 		mvn	r4, #1
 25719              	.LVL3249:
11813:Core/Src/bno055.c ****                     }
 25720              		.loc 1 11813 34 view .LVU7270
 25721 00aa F3E7     		b	.L1730
 25722              	.LVL3250:
 25723              	.L1740:
11835:Core/Src/bno055.c ****     }
 25724              		.loc 1 11835 9 is_stmt 1 view .LVU7271
11835:Core/Src/bno055.c ****     }
 25725              		.loc 1 11835 21 is_stmt 0 view .LVU7272
 25726 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 25727              	.LVL3251:
ARM GAS  /tmp/ccO72alg.s 			page 715


11835:Core/Src/bno055.c ****     }
 25728              		.loc 1 11835 18 view .LVU7273
 25729 00b0 54FA80F4 		uxtab	r4, r4, r0
 25730              	.LVL3252:
11835:Core/Src/bno055.c ****     }
 25731              		.loc 1 11835 18 view .LVU7274
 25732 00b4 64B2     		sxtb	r4, r4
 25733              	.LVL3253:
11835:Core/Src/bno055.c ****     }
 25734              		.loc 1 11835 18 view .LVU7275
 25735 00b6 F0E7     		b	.L1729
 25736              	.LVL3254:
 25737              	.L1732:
11772:Core/Src/bno055.c ****     }
 25738              		.loc 1 11772 16 view .LVU7276
 25739 00b8 6FF07E04 		mvn	r4, #126
 25740 00bc EDE7     		b	.L1729
 25741              	.L1742:
 25742 00be 00BF     		.align	2
 25743              	.L1741:
 25744 00c0 00000000 		.word	.LANCHOR0
 25745              		.cfi_endproc
 25746              	.LFE182:
 25748              		.section	.text.bno055_get_mag_operation_mode,"ax",%progbits
 25749              		.align	1
 25750              		.global	bno055_get_mag_operation_mode
 25751              		.syntax unified
 25752              		.thumb
 25753              		.thumb_func
 25755              	bno055_get_mag_operation_mode:
 25756              	.LVL3255:
 25757              	.LFB183:
11840:Core/Src/bno055.c **** 
11841:Core/Src/bno055.c **** /*!
11842:Core/Src/bno055.c ****  *  @brief This API used to read the mag operation mode
11843:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11844:Core/Src/bno055.c ****  *
11845:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11846:Core/Src/bno055.c ****  *
11847:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11848:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11849:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11850:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11851:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11852:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11853:Core/Src/bno055.c ****  *
11854:Core/Src/bno055.c ****  *  @return results of bus communication function
11855:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11856:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11857:Core/Src/bno055.c ****  *
11858:Core/Src/bno055.c ****  *
11859:Core/Src/bno055.c ****  */
11860:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_operation_mode(u8 *mag_operation_mode_u8)
11861:Core/Src/bno055.c **** {
 25758              		.loc 1 11861 1 is_stmt 1 view -0
 25759              		.cfi_startproc
 25760              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccO72alg.s 			page 716


 25761              		@ frame_needed = 0, uses_anonymous_args = 0
 25762              		.loc 1 11861 1 is_stmt 0 view .LVU7278
 25763 0000 30B5     		push	{r4, r5, lr}
 25764              	.LCFI725:
 25765              		.cfi_def_cfa_offset 12
 25766              		.cfi_offset 4, -12
 25767              		.cfi_offset 5, -8
 25768              		.cfi_offset 14, -4
 25769 0002 83B0     		sub	sp, sp, #12
 25770              	.LCFI726:
 25771              		.cfi_def_cfa_offset 24
11862:Core/Src/bno055.c ****     /* Variable used to return value of
11863:Core/Src/bno055.c ****      * communication routine*/
11864:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25772              		.loc 1 11864 5 is_stmt 1 view .LVU7279
 25773              	.LVL3256:
11865:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25774              		.loc 1 11865 5 view .LVU7280
 25775              		.loc 1 11865 8 is_stmt 0 view .LVU7281
 25776 0004 0023     		movs	r3, #0
 25777 0006 8DF80730 		strb	r3, [sp, #7]
11866:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25778              		.loc 1 11866 5 is_stmt 1 view .LVU7282
 25779              	.LVL3257:
11867:Core/Src/bno055.c **** 
11868:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11869:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25780              		.loc 1 11869 5 view .LVU7283
 25781              		.loc 1 11869 18 is_stmt 0 view .LVU7284
 25782 000a 144B     		ldr	r3, .L1751
 25783 000c 1B68     		ldr	r3, [r3]
 25784              		.loc 1 11869 8 view .LVU7285
 25785 000e F3B1     		cbz	r3, .L1747
 25786 0010 0446     		mov	r4, r0
11870:Core/Src/bno055.c ****     {
11871:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11872:Core/Src/bno055.c ****     }
11873:Core/Src/bno055.c ****     else
11874:Core/Src/bno055.c ****     {
11875:Core/Src/bno055.c ****         /*condition check for page, mag operation mode is
11876:Core/Src/bno055.c ****          * available in the page one*/
11877:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 25787              		.loc 1 11877 9 is_stmt 1 view .LVU7286
 25788              		.loc 1 11877 21 is_stmt 0 view .LVU7287
 25789 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25790              		.loc 1 11877 12 view .LVU7288
 25791 0014 012B     		cmp	r3, #1
 25792 0016 14D1     		bne	.L1750
 25793              	.LVL3258:
 25794              	.L1745:
11878:Core/Src/bno055.c ****         {
11879:Core/Src/bno055.c ****             /* Write page as one */
11880:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11881:Core/Src/bno055.c ****         }
11882:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 25795              		.loc 1 11882 53 discriminator 1 view .LVU7289
 25796 0018 104B     		ldr	r3, .L1751
ARM GAS  /tmp/ccO72alg.s 			page 717


 25797 001a 1B68     		ldr	r3, [r3]
 25798 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25799              		.loc 1 11882 41 discriminator 1 view .LVU7290
 25800 001e 012B     		cmp	r3, #1
 25801 0020 18D1     		bne	.L1748
 25802              	.L1746:
11883:Core/Src/bno055.c ****         {
11884:Core/Src/bno055.c ****             /* Read the value of mag operation mode*/
11885:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 25803              		.loc 1 11885 13 is_stmt 1 view .LVU7291
 25804              		.loc 1 11885 32 is_stmt 0 view .LVU7292
 25805 0022 0E4B     		ldr	r3, .L1751
 25806 0024 1868     		ldr	r0, [r3]
 25807 0026 0569     		ldr	r5, [r0, #16]
 25808              		.loc 1 11885 24 view .LVU7293
 25809 0028 0123     		movs	r3, #1
 25810 002a 0DF10702 		add	r2, sp, #7
 25811 002e 0921     		movs	r1, #9
 25812 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25813 0032 A847     		blx	r5
 25814              	.LVL3259:
11886:Core/Src/bno055.c ****                                                       BNO055_MAG_OPERATION_MODE_REG,
11887:Core/Src/bno055.c ****                                                       &data_u8r,
11888:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
11889:Core/Src/bno055.c ****             *mag_operation_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE);
 25815              		.loc 1 11889 13 is_stmt 1 view .LVU7294
 25816              		.loc 1 11889 38 is_stmt 0 view .LVU7295
 25817 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 25818 0038 C3F3C103 		ubfx	r3, r3, #3, #2
 25819              		.loc 1 11889 36 view .LVU7296
 25820 003c 2370     		strb	r3, [r4]
 25821              	.LVL3260:
 25822              	.L1744:
11890:Core/Src/bno055.c ****         }
11891:Core/Src/bno055.c ****         else
11892:Core/Src/bno055.c ****         {
11893:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
11894:Core/Src/bno055.c ****         }
11895:Core/Src/bno055.c ****     }
11896:Core/Src/bno055.c **** 
11897:Core/Src/bno055.c ****     return com_rslt;
11898:Core/Src/bno055.c **** }
 25823              		.loc 1 11898 1 view .LVU7297
 25824 003e 03B0     		add	sp, sp, #12
 25825              	.LCFI727:
 25826              		.cfi_remember_state
 25827              		.cfi_def_cfa_offset 12
 25828              		@ sp needed
 25829 0040 30BD     		pop	{r4, r5, pc}
 25830              	.LVL3261:
 25831              	.L1750:
 25832              	.LCFI728:
 25833              		.cfi_restore_state
11880:Core/Src/bno055.c ****         }
 25834              		.loc 1 11880 13 is_stmt 1 view .LVU7298
11880:Core/Src/bno055.c ****         }
 25835              		.loc 1 11880 23 is_stmt 0 view .LVU7299
ARM GAS  /tmp/ccO72alg.s 			page 718


 25836 0042 0120     		movs	r0, #1
 25837              	.LVL3262:
11880:Core/Src/bno055.c ****         }
 25838              		.loc 1 11880 23 view .LVU7300
 25839 0044 FFF7FEFF 		bl	bno055_write_page_id
 25840              	.LVL3263:
11882:Core/Src/bno055.c ****         {
 25841              		.loc 1 11882 9 is_stmt 1 view .LVU7301
11882:Core/Src/bno055.c ****         {
 25842              		.loc 1 11882 12 is_stmt 0 view .LVU7302
 25843 0048 0028     		cmp	r0, #0
 25844 004a EAD0     		beq	.L1746
 25845 004c E4E7     		b	.L1745
 25846              	.LVL3264:
 25847              	.L1747:
11871:Core/Src/bno055.c ****     }
 25848              		.loc 1 11871 16 view .LVU7303
 25849 004e 6FF07E00 		mvn	r0, #126
 25850              	.LVL3265:
11871:Core/Src/bno055.c ****     }
 25851              		.loc 1 11871 16 view .LVU7304
 25852 0052 F4E7     		b	.L1744
 25853              	.LVL3266:
 25854              	.L1748:
11893:Core/Src/bno055.c ****         }
 25855              		.loc 1 11893 22 view .LVU7305
 25856 0054 4FF0FF30 		mov	r0, #-1
 25857 0058 F1E7     		b	.L1744
 25858              	.L1752:
 25859 005a 00BF     		.align	2
 25860              	.L1751:
 25861 005c 00000000 		.word	.LANCHOR0
 25862              		.cfi_endproc
 25863              	.LFE183:
 25865              		.section	.text.bno055_set_mag_operation_mode,"ax",%progbits
 25866              		.align	1
 25867              		.global	bno055_set_mag_operation_mode
 25868              		.syntax unified
 25869              		.thumb
 25870              		.thumb_func
 25872              	bno055_set_mag_operation_mode:
 25873              	.LVL3267:
 25874              	.LFB184:
11899:Core/Src/bno055.c **** 
11900:Core/Src/bno055.c **** /*!
11901:Core/Src/bno055.c ****  *  @brief This API used to write the mag operation mode
11902:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 3 to 4
11903:Core/Src/bno055.c ****  *
11904:Core/Src/bno055.c ****  *  @param mag_operation_mode_u8 : The value of mag operation mode
11905:Core/Src/bno055.c ****  *
11906:Core/Src/bno055.c ****  *  mag_operation_mode_u8  |      result
11907:Core/Src/bno055.c ****  * ------------------------- |--------------------------
11908:Core/Src/bno055.c ****  *     0x00                  | MAG_OPR_MODE_LOWPOWER
11909:Core/Src/bno055.c ****  *     0x01                  | MAG_OPR_MODE_REGULAR
11910:Core/Src/bno055.c ****  *     0x02                  | MAG_OPR_MODE_ENHANCED_REGULAR
11911:Core/Src/bno055.c ****  *     0x03                  | MAG_OPR_MODE_HIGH_ACCURACY
11912:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 719


11913:Core/Src/bno055.c ****  *  @return results of bus communication function
11914:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
11915:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
11916:Core/Src/bno055.c ****  *
11917:Core/Src/bno055.c ****  *
11918:Core/Src/bno055.c ****  */
11919:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_operation_mode(u8 mag_operation_mode_u8)
11920:Core/Src/bno055.c **** {
 25875              		.loc 1 11920 1 is_stmt 1 view -0
 25876              		.cfi_startproc
 25877              		@ args = 0, pretend = 0, frame = 8
 25878              		@ frame_needed = 0, uses_anonymous_args = 0
 25879              		.loc 1 11920 1 is_stmt 0 view .LVU7307
 25880 0000 30B5     		push	{r4, r5, lr}
 25881              	.LCFI729:
 25882              		.cfi_def_cfa_offset 12
 25883              		.cfi_offset 4, -12
 25884              		.cfi_offset 5, -8
 25885              		.cfi_offset 14, -4
 25886 0002 83B0     		sub	sp, sp, #12
 25887              	.LCFI730:
 25888              		.cfi_def_cfa_offset 24
11921:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 25889              		.loc 1 11921 5 is_stmt 1 view .LVU7308
 25890              	.LVL3268:
11922:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 25891              		.loc 1 11922 5 view .LVU7309
 25892              		.loc 1 11922 8 is_stmt 0 view .LVU7310
 25893 0004 0023     		movs	r3, #0
 25894 0006 8DF80730 		strb	r3, [sp, #7]
11923:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 25895              		.loc 1 11923 5 is_stmt 1 view .LVU7311
 25896              	.LVL3269:
11924:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 25897              		.loc 1 11924 5 view .LVU7312
11925:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 25898              		.loc 1 11925 5 view .LVU7313
 25899              		.loc 1 11925 8 is_stmt 0 view .LVU7314
 25900 000a 8DF80630 		strb	r3, [sp, #6]
11926:Core/Src/bno055.c **** 
11927:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
11928:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 25901              		.loc 1 11928 5 is_stmt 1 view .LVU7315
 25902              		.loc 1 11928 18 is_stmt 0 view .LVU7316
 25903 000e 2C4B     		ldr	r3, .L1766
 25904 0010 1B68     		ldr	r3, [r3]
 25905              		.loc 1 11928 8 view .LVU7317
 25906 0012 002B     		cmp	r3, #0
 25907 0014 51D0     		beq	.L1757
 25908 0016 0546     		mov	r5, r0
11929:Core/Src/bno055.c ****     {
11930:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
11931:Core/Src/bno055.c ****     }
11932:Core/Src/bno055.c ****     else
11933:Core/Src/bno055.c ****     {
11934:Core/Src/bno055.c ****         /* The write operation effective only if the operation
11935:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
ARM GAS  /tmp/ccO72alg.s 			page 720


11936:Core/Src/bno055.c ****          * current operation mode and set the config mode */
11937:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 25909              		.loc 1 11937 9 is_stmt 1 view .LVU7318
 25910              		.loc 1 11937 19 is_stmt 0 view .LVU7319
 25911 0018 0DF10600 		add	r0, sp, #6
 25912              	.LVL3270:
 25913              		.loc 1 11937 19 view .LVU7320
 25914 001c FFF7FEFF 		bl	bno055_get_operation_mode
 25915              	.LVL3271:
11938:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 25916              		.loc 1 11938 9 is_stmt 1 view .LVU7321
 25917              		.loc 1 11938 12 is_stmt 0 view .LVU7322
 25918 0020 0446     		mov	r4, r0
 25919 0022 0028     		cmp	r0, #0
 25920 0024 35D1     		bne	.L1758
11939:Core/Src/bno055.c ****         {
11940:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 25921              		.loc 1 11940 13 is_stmt 1 view .LVU7323
 25922              		.loc 1 11940 32 is_stmt 0 view .LVU7324
 25923 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 25924              		.loc 1 11940 16 view .LVU7325
 25925 002a 1BB9     		cbnz	r3, .L1763
 25926              	.LVL3272:
 25927              	.L1756:
11941:Core/Src/bno055.c ****             {
11942:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
11943:Core/Src/bno055.c ****             }
11944:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 25928              		.loc 1 11944 13 is_stmt 1 view .LVU7326
 25929              		.loc 1 11944 16 is_stmt 0 view .LVU7327
 25930 002c 44B1     		cbz	r4, .L1764
11945:Core/Src/bno055.c ****             {
11946:Core/Src/bno055.c ****                 /* Write page as one */
11947:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
11948:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
11949:Core/Src/bno055.c ****                 {
11950:Core/Src/bno055.c ****                     if (mag_operation_mode_u8 < BNO055_MAG_OPR_MODE_RANGE)
11951:Core/Src/bno055.c ****                     {
11952:Core/Src/bno055.c ****                         /* Write the value
11953:Core/Src/bno055.c ****                          * of mag operation mode*/
11954:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
11955:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
11956:Core/Src/bno055.c ****                                                                   &data_u8r,
11957:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
11958:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
11959:Core/Src/bno055.c ****                         {
11960:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_OPERATION_MODE, mag
11961:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
11962:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
11963:Core/Src/bno055.c ****                                                                         &data_u8r,
11964:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
11965:Core/Src/bno055.c ****                         }
11966:Core/Src/bno055.c ****                     }
11967:Core/Src/bno055.c ****                     else
11968:Core/Src/bno055.c ****                     {
11969:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
11970:Core/Src/bno055.c ****                     }
ARM GAS  /tmp/ccO72alg.s 			page 721


11971:Core/Src/bno055.c ****                 }
11972:Core/Src/bno055.c ****                 else
11973:Core/Src/bno055.c ****                 {
11974:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
11975:Core/Src/bno055.c ****                 }
11976:Core/Src/bno055.c ****             }
11977:Core/Src/bno055.c ****             else
11978:Core/Src/bno055.c ****             {
11979:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 25931              		.loc 1 11979 26 view .LVU7328
 25932 002e 4FF0FF34 		mov	r4, #-1
 25933              	.LVL3273:
 25934              		.loc 1 11979 26 view .LVU7329
 25935 0032 30E0     		b	.L1755
 25936              	.LVL3274:
 25937              	.L1763:
11942:Core/Src/bno055.c ****             }
 25938              		.loc 1 11942 17 is_stmt 1 view .LVU7330
11942:Core/Src/bno055.c ****             }
 25939              		.loc 1 11942 28 is_stmt 0 view .LVU7331
 25940 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 25941              	.LVL3275:
11942:Core/Src/bno055.c ****             }
 25942              		.loc 1 11942 25 view .LVU7332
 25943 0038 54FA80F4 		uxtab	r4, r4, r0
 25944 003c 64B2     		sxtb	r4, r4
 25945              	.LVL3276:
11942:Core/Src/bno055.c ****             }
 25946              		.loc 1 11942 25 view .LVU7333
 25947 003e F5E7     		b	.L1756
 25948              	.L1764:
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25949              		.loc 1 11947 17 is_stmt 1 view .LVU7334
11947:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 25950              		.loc 1 11947 30 is_stmt 0 view .LVU7335
 25951 0040 0120     		movs	r0, #1
 25952 0042 FFF7FEFF 		bl	bno055_write_page_id
 25953              	.LVL3277:
11948:Core/Src/bno055.c ****                 {
 25954              		.loc 1 11948 17 is_stmt 1 view .LVU7336
11948:Core/Src/bno055.c ****                 {
 25955              		.loc 1 11948 20 is_stmt 0 view .LVU7337
 25956 0046 60BB     		cbnz	r0, .L1760
11950:Core/Src/bno055.c ****                     {
 25957              		.loc 1 11950 21 is_stmt 1 view .LVU7338
11950:Core/Src/bno055.c ****                     {
 25958              		.loc 1 11950 24 is_stmt 0 view .LVU7339
 25959 0048 042D     		cmp	r5, #4
 25960 004a 2DD8     		bhi	.L1761
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25961              		.loc 1 11954 25 is_stmt 1 view .LVU7340
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25962              		.loc 1 11954 44 is_stmt 0 view .LVU7341
 25963 004c 1C4B     		ldr	r3, .L1766
 25964 004e 1868     		ldr	r0, [r3]
 25965              	.LVL3278:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
ARM GAS  /tmp/ccO72alg.s 			page 722


 25966              		.loc 1 11954 44 view .LVU7342
 25967 0050 0469     		ldr	r4, [r0, #16]
 25968              	.LVL3279:
11954:Core/Src/bno055.c ****                                                                   BNO055_MAG_OPERATION_MODE_REG,
 25969              		.loc 1 11954 36 view .LVU7343
 25970 0052 0123     		movs	r3, #1
 25971 0054 0DF10702 		add	r2, sp, #7
 25972 0058 0921     		movs	r1, #9
 25973 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 25974 005c A047     		blx	r4
 25975              	.LVL3280:
11958:Core/Src/bno055.c ****                         {
 25976              		.loc 1 11958 25 is_stmt 1 view .LVU7344
11958:Core/Src/bno055.c ****                         {
 25977              		.loc 1 11958 28 is_stmt 0 view .LVU7345
 25978 005e 0446     		mov	r4, r0
 25979 0060 C8B9     		cbnz	r0, .L1755
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25980              		.loc 1 11960 29 is_stmt 1 view .LVU7346
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25981              		.loc 1 11960 40 is_stmt 0 view .LVU7347
 25982 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 25983              	.LVL3281:
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25984              		.loc 1 11960 40 view .LVU7348
 25985 0066 20F01800 		bic	r0, r0, #24
 25986 006a 43B2     		sxtb	r3, r0
 25987 006c E800     		lsls	r0, r5, #3
 25988 006e 00F01800 		and	r0, r0, #24
 25989 0072 1843     		orrs	r0, r0, r3
11960:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 25990              		.loc 1 11960 38 view .LVU7349
 25991 0074 8DF80700 		strb	r0, [sp, #7]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25992              		.loc 1 11961 29 is_stmt 1 view .LVU7350
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25993              		.loc 1 11961 49 is_stmt 0 view .LVU7351
 25994 0078 114B     		ldr	r3, .L1766
 25995 007a 1868     		ldr	r0, [r3]
 25996 007c C568     		ldr	r5, [r0, #12]
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 25997              		.loc 1 11961 41 view .LVU7352
 25998 007e 0123     		movs	r3, #1
 25999 0080 0DF10702 		add	r2, sp, #7
 26000 0084 0921     		movs	r1, #9
 26001 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26002 0088 A847     		blx	r5
 26003              	.LVL3282:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26004              		.loc 1 11961 38 view .LVU7353
 26005 008a 54FA80F4 		uxtab	r4, r4, r0
 26006 008e 64B2     		sxtb	r4, r4
 26007              	.LVL3283:
11961:Core/Src/bno055.c ****                                                                         BNO055_MAG_OPERATION_MODE_R
 26008              		.loc 1 11961 38 view .LVU7354
 26009 0090 01E0     		b	.L1755
 26010              	.LVL3284:
ARM GAS  /tmp/ccO72alg.s 			page 723


 26011              	.L1758:
11980:Core/Src/bno055.c ****             }
11981:Core/Src/bno055.c ****         }
11982:Core/Src/bno055.c ****         else
11983:Core/Src/bno055.c ****         {
11984:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26012              		.loc 1 11984 22 view .LVU7355
 26013 0092 4FF0FF34 		mov	r4, #-1
 26014              	.LVL3285:
 26015              	.L1755:
11985:Core/Src/bno055.c ****         }
11986:Core/Src/bno055.c ****     }
11987:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26016              		.loc 1 11987 5 is_stmt 1 view .LVU7356
 26017              		.loc 1 11987 24 is_stmt 0 view .LVU7357
 26018 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26019              		.loc 1 11987 8 view .LVU7358
 26020 009a 40B9     		cbnz	r0, .L1765
 26021              	.LVL3286:
 26022              	.L1754:
11988:Core/Src/bno055.c ****     {
11989:Core/Src/bno055.c ****         /* set the operation mode of
11990:Core/Src/bno055.c ****          * previous operation mode*/
11991:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
11992:Core/Src/bno055.c ****     }
11993:Core/Src/bno055.c **** 
11994:Core/Src/bno055.c ****     return com_rslt;
11995:Core/Src/bno055.c **** }
 26023              		.loc 1 11995 1 view .LVU7359
 26024 009c 2046     		mov	r0, r4
 26025 009e 03B0     		add	sp, sp, #12
 26026              	.LCFI731:
 26027              		.cfi_remember_state
 26028              		.cfi_def_cfa_offset 12
 26029              		@ sp needed
 26030 00a0 30BD     		pop	{r4, r5, pc}
 26031              	.LVL3287:
 26032              	.L1760:
 26033              	.LCFI732:
 26034              		.cfi_restore_state
11974:Core/Src/bno055.c ****                 }
 26035              		.loc 1 11974 30 view .LVU7360
 26036 00a2 4FF0FF34 		mov	r4, #-1
 26037              	.LVL3288:
11974:Core/Src/bno055.c ****                 }
 26038              		.loc 1 11974 30 view .LVU7361
 26039 00a6 F6E7     		b	.L1755
 26040              	.LVL3289:
 26041              	.L1761:
11969:Core/Src/bno055.c ****                     }
 26042              		.loc 1 11969 34 view .LVU7362
 26043 00a8 6FF00104 		mvn	r4, #1
 26044              	.LVL3290:
11969:Core/Src/bno055.c ****                     }
 26045              		.loc 1 11969 34 view .LVU7363
 26046 00ac F3E7     		b	.L1755
 26047              	.LVL3291:
ARM GAS  /tmp/ccO72alg.s 			page 724


 26048              	.L1765:
11991:Core/Src/bno055.c ****     }
 26049              		.loc 1 11991 9 is_stmt 1 view .LVU7364
11991:Core/Src/bno055.c ****     }
 26050              		.loc 1 11991 21 is_stmt 0 view .LVU7365
 26051 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 26052              	.LVL3292:
11991:Core/Src/bno055.c ****     }
 26053              		.loc 1 11991 18 view .LVU7366
 26054 00b2 54FA80F4 		uxtab	r4, r4, r0
 26055              	.LVL3293:
11991:Core/Src/bno055.c ****     }
 26056              		.loc 1 11991 18 view .LVU7367
 26057 00b6 64B2     		sxtb	r4, r4
 26058              	.LVL3294:
11991:Core/Src/bno055.c ****     }
 26059              		.loc 1 11991 18 view .LVU7368
 26060 00b8 F0E7     		b	.L1754
 26061              	.LVL3295:
 26062              	.L1757:
11930:Core/Src/bno055.c ****     }
 26063              		.loc 1 11930 16 view .LVU7369
 26064 00ba 6FF07E04 		mvn	r4, #126
 26065 00be EDE7     		b	.L1754
 26066              	.L1767:
 26067              		.align	2
 26068              	.L1766:
 26069 00c0 00000000 		.word	.LANCHOR0
 26070              		.cfi_endproc
 26071              	.LFE184:
 26073              		.section	.text.bno055_get_mag_power_mode,"ax",%progbits
 26074              		.align	1
 26075              		.global	bno055_get_mag_power_mode
 26076              		.syntax unified
 26077              		.thumb
 26078              		.thumb_func
 26080              	bno055_get_mag_power_mode:
 26081              	.LVL3296:
 26082              	.LFB185:
11996:Core/Src/bno055.c **** 
11997:Core/Src/bno055.c **** /*!
11998:Core/Src/bno055.c ****  *  @brief This API used to read the mag power mode
11999:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12000:Core/Src/bno055.c ****  *
12001:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12002:Core/Src/bno055.c ****  *
12003:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12004:Core/Src/bno055.c ****  * --------------------|-----------------
12005:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12006:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12007:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12008:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12009:Core/Src/bno055.c ****  *
12010:Core/Src/bno055.c ****  *  @return results of bus communication function
12011:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12012:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12013:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 725


12014:Core/Src/bno055.c ****  *
12015:Core/Src/bno055.c ****  */
12016:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_power_mode(u8 *mag_power_mode_u8)
12017:Core/Src/bno055.c **** {
 26083              		.loc 1 12017 1 is_stmt 1 view -0
 26084              		.cfi_startproc
 26085              		@ args = 0, pretend = 0, frame = 8
 26086              		@ frame_needed = 0, uses_anonymous_args = 0
 26087              		.loc 1 12017 1 is_stmt 0 view .LVU7371
 26088 0000 30B5     		push	{r4, r5, lr}
 26089              	.LCFI733:
 26090              		.cfi_def_cfa_offset 12
 26091              		.cfi_offset 4, -12
 26092              		.cfi_offset 5, -8
 26093              		.cfi_offset 14, -4
 26094 0002 83B0     		sub	sp, sp, #12
 26095              	.LCFI734:
 26096              		.cfi_def_cfa_offset 24
12018:Core/Src/bno055.c ****     /* Variable used to return value of
12019:Core/Src/bno055.c ****      * communication routine*/
12020:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26097              		.loc 1 12020 5 is_stmt 1 view .LVU7372
 26098              	.LVL3297:
12021:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26099              		.loc 1 12021 5 view .LVU7373
 26100              		.loc 1 12021 8 is_stmt 0 view .LVU7374
 26101 0004 0023     		movs	r3, #0
 26102 0006 8DF80730 		strb	r3, [sp, #7]
12022:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26103              		.loc 1 12022 5 is_stmt 1 view .LVU7375
 26104              	.LVL3298:
12023:Core/Src/bno055.c **** 
12024:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12025:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26105              		.loc 1 12025 5 view .LVU7376
 26106              		.loc 1 12025 18 is_stmt 0 view .LVU7377
 26107 000a 144B     		ldr	r3, .L1776
 26108 000c 1B68     		ldr	r3, [r3]
 26109              		.loc 1 12025 8 view .LVU7378
 26110 000e F3B1     		cbz	r3, .L1772
 26111 0010 0446     		mov	r4, r0
12026:Core/Src/bno055.c ****     {
12027:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12028:Core/Src/bno055.c ****     }
12029:Core/Src/bno055.c ****     else
12030:Core/Src/bno055.c ****     {
12031:Core/Src/bno055.c ****         /*condition check for page, mag power mode is
12032:Core/Src/bno055.c ****          * available in the page one*/
12033:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26112              		.loc 1 12033 9 is_stmt 1 view .LVU7379
 26113              		.loc 1 12033 21 is_stmt 0 view .LVU7380
 26114 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26115              		.loc 1 12033 12 view .LVU7381
 26116 0014 012B     		cmp	r3, #1
 26117 0016 14D1     		bne	.L1775
 26118              	.LVL3299:
 26119              	.L1770:
ARM GAS  /tmp/ccO72alg.s 			page 726


12034:Core/Src/bno055.c ****         {
12035:Core/Src/bno055.c ****             /* Write page as one */
12036:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12037:Core/Src/bno055.c ****         }
12038:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26120              		.loc 1 12038 53 discriminator 1 view .LVU7382
 26121 0018 104B     		ldr	r3, .L1776
 26122 001a 1B68     		ldr	r3, [r3]
 26123 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26124              		.loc 1 12038 41 discriminator 1 view .LVU7383
 26125 001e 012B     		cmp	r3, #1
 26126 0020 18D1     		bne	.L1773
 26127              	.L1771:
12039:Core/Src/bno055.c ****         {
12040:Core/Src/bno055.c ****             /* Read the value of mag power mode */
12041:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26128              		.loc 1 12041 13 is_stmt 1 view .LVU7384
 26129              		.loc 1 12041 32 is_stmt 0 view .LVU7385
 26130 0022 0E4B     		ldr	r3, .L1776
 26131 0024 1868     		ldr	r0, [r3]
 26132 0026 0569     		ldr	r5, [r0, #16]
 26133              		.loc 1 12041 24 view .LVU7386
 26134 0028 0123     		movs	r3, #1
 26135 002a 0DF10702 		add	r2, sp, #7
 26136 002e 0921     		movs	r1, #9
 26137 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26138 0032 A847     		blx	r5
 26139              	.LVL3300:
12042:Core/Src/bno055.c ****                                                       BNO055_MAG_POWER_MODE_REG,
12043:Core/Src/bno055.c ****                                                       &data_u8r,
12044:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12045:Core/Src/bno055.c ****             *mag_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE);
 26140              		.loc 1 12045 13 is_stmt 1 view .LVU7387
 26141              		.loc 1 12045 34 is_stmt 0 view .LVU7388
 26142 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26143 0038 C3F34113 		ubfx	r3, r3, #5, #2
 26144              		.loc 1 12045 32 view .LVU7389
 26145 003c 2370     		strb	r3, [r4]
 26146              	.LVL3301:
 26147              	.L1769:
12046:Core/Src/bno055.c ****         }
12047:Core/Src/bno055.c ****         else
12048:Core/Src/bno055.c ****         {
12049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12050:Core/Src/bno055.c ****         }
12051:Core/Src/bno055.c ****     }
12052:Core/Src/bno055.c **** 
12053:Core/Src/bno055.c ****     return com_rslt;
12054:Core/Src/bno055.c **** }
 26148              		.loc 1 12054 1 view .LVU7390
 26149 003e 03B0     		add	sp, sp, #12
 26150              	.LCFI735:
 26151              		.cfi_remember_state
 26152              		.cfi_def_cfa_offset 12
 26153              		@ sp needed
 26154 0040 30BD     		pop	{r4, r5, pc}
 26155              	.LVL3302:
ARM GAS  /tmp/ccO72alg.s 			page 727


 26156              	.L1775:
 26157              	.LCFI736:
 26158              		.cfi_restore_state
12036:Core/Src/bno055.c ****         }
 26159              		.loc 1 12036 13 is_stmt 1 view .LVU7391
12036:Core/Src/bno055.c ****         }
 26160              		.loc 1 12036 23 is_stmt 0 view .LVU7392
 26161 0042 0120     		movs	r0, #1
 26162              	.LVL3303:
12036:Core/Src/bno055.c ****         }
 26163              		.loc 1 12036 23 view .LVU7393
 26164 0044 FFF7FEFF 		bl	bno055_write_page_id
 26165              	.LVL3304:
12038:Core/Src/bno055.c ****         {
 26166              		.loc 1 12038 9 is_stmt 1 view .LVU7394
12038:Core/Src/bno055.c ****         {
 26167              		.loc 1 12038 12 is_stmt 0 view .LVU7395
 26168 0048 0028     		cmp	r0, #0
 26169 004a EAD0     		beq	.L1771
 26170 004c E4E7     		b	.L1770
 26171              	.LVL3305:
 26172              	.L1772:
12027:Core/Src/bno055.c ****     }
 26173              		.loc 1 12027 16 view .LVU7396
 26174 004e 6FF07E00 		mvn	r0, #126
 26175              	.LVL3306:
12027:Core/Src/bno055.c ****     }
 26176              		.loc 1 12027 16 view .LVU7397
 26177 0052 F4E7     		b	.L1769
 26178              	.LVL3307:
 26179              	.L1773:
12049:Core/Src/bno055.c ****         }
 26180              		.loc 1 12049 22 view .LVU7398
 26181 0054 4FF0FF30 		mov	r0, #-1
 26182 0058 F1E7     		b	.L1769
 26183              	.L1777:
 26184 005a 00BF     		.align	2
 26185              	.L1776:
 26186 005c 00000000 		.word	.LANCHOR0
 26187              		.cfi_endproc
 26188              	.LFE185:
 26190              		.section	.text.bno055_set_mag_power_mode,"ax",%progbits
 26191              		.align	1
 26192              		.global	bno055_set_mag_power_mode
 26193              		.syntax unified
 26194              		.thumb
 26195              		.thumb_func
 26197              	bno055_set_mag_power_mode:
 26198              	.LVL3308:
 26199              	.LFB186:
12055:Core/Src/bno055.c **** 
12056:Core/Src/bno055.c **** /*!
12057:Core/Src/bno055.c ****  *  @brief This API used to write the mag power mode
12058:Core/Src/bno055.c ****  *  from page one register from 0x09 bit 4 to 6
12059:Core/Src/bno055.c ****  *
12060:Core/Src/bno055.c ****  *  @param mag_power_mode_u8 : The value of mag power mode
12061:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 728


12062:Core/Src/bno055.c ****  * mag_power_mode_u8 |   result
12063:Core/Src/bno055.c ****  * --------------------|-----------------
12064:Core/Src/bno055.c ****  *     0x00            | BNO055_MAG_POWER_MODE_NORMAL
12065:Core/Src/bno055.c ****  *     0x01            | BNO055_MAG_POWER_MODE_SLEEP
12066:Core/Src/bno055.c ****  *     0x02            | BNO055_MAG_POWER_MODE_SUSPEND
12067:Core/Src/bno055.c ****  *     0x03            | BNO055_MAG_POWER_MODE_FORCE_MODE
12068:Core/Src/bno055.c ****  *
12069:Core/Src/bno055.c ****  *  @return results of bus communication function
12070:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12071:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12072:Core/Src/bno055.c ****  *
12073:Core/Src/bno055.c ****  *
12074:Core/Src/bno055.c ****  */
12075:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_power_mode(u8 mag_power_mode_u8)
12076:Core/Src/bno055.c **** {
 26200              		.loc 1 12076 1 is_stmt 1 view -0
 26201              		.cfi_startproc
 26202              		@ args = 0, pretend = 0, frame = 8
 26203              		@ frame_needed = 0, uses_anonymous_args = 0
 26204              		.loc 1 12076 1 is_stmt 0 view .LVU7400
 26205 0000 30B5     		push	{r4, r5, lr}
 26206              	.LCFI737:
 26207              		.cfi_def_cfa_offset 12
 26208              		.cfi_offset 4, -12
 26209              		.cfi_offset 5, -8
 26210              		.cfi_offset 14, -4
 26211 0002 83B0     		sub	sp, sp, #12
 26212              	.LCFI738:
 26213              		.cfi_def_cfa_offset 24
12077:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26214              		.loc 1 12077 5 is_stmt 1 view .LVU7401
 26215              	.LVL3309:
12078:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26216              		.loc 1 12078 5 view .LVU7402
 26217              		.loc 1 12078 8 is_stmt 0 view .LVU7403
 26218 0004 0023     		movs	r3, #0
 26219 0006 8DF80730 		strb	r3, [sp, #7]
12079:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26220              		.loc 1 12079 5 is_stmt 1 view .LVU7404
 26221              	.LVL3310:
12080:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26222              		.loc 1 12080 5 view .LVU7405
12081:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26223              		.loc 1 12081 5 view .LVU7406
 26224              		.loc 1 12081 8 is_stmt 0 view .LVU7407
 26225 000a 8DF80630 		strb	r3, [sp, #6]
12082:Core/Src/bno055.c **** 
12083:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12084:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26226              		.loc 1 12084 5 is_stmt 1 view .LVU7408
 26227              		.loc 1 12084 18 is_stmt 0 view .LVU7409
 26228 000e 2C4B     		ldr	r3, .L1791
 26229 0010 1B68     		ldr	r3, [r3]
 26230              		.loc 1 12084 8 view .LVU7410
 26231 0012 002B     		cmp	r3, #0
 26232 0014 51D0     		beq	.L1782
 26233 0016 0546     		mov	r5, r0
ARM GAS  /tmp/ccO72alg.s 			page 729


12085:Core/Src/bno055.c ****     {
12086:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12087:Core/Src/bno055.c ****     }
12088:Core/Src/bno055.c ****     else
12089:Core/Src/bno055.c ****     {
12090:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12091:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12092:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12093:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26234              		.loc 1 12093 9 is_stmt 1 view .LVU7411
 26235              		.loc 1 12093 19 is_stmt 0 view .LVU7412
 26236 0018 0DF10600 		add	r0, sp, #6
 26237              	.LVL3311:
 26238              		.loc 1 12093 19 view .LVU7413
 26239 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26240              	.LVL3312:
12094:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26241              		.loc 1 12094 9 is_stmt 1 view .LVU7414
 26242              		.loc 1 12094 12 is_stmt 0 view .LVU7415
 26243 0020 0446     		mov	r4, r0
 26244 0022 0028     		cmp	r0, #0
 26245 0024 35D1     		bne	.L1783
12095:Core/Src/bno055.c ****         {
12096:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26246              		.loc 1 12096 13 is_stmt 1 view .LVU7416
 26247              		.loc 1 12096 32 is_stmt 0 view .LVU7417
 26248 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26249              		.loc 1 12096 16 view .LVU7418
 26250 002a 1BB9     		cbnz	r3, .L1788
 26251              	.LVL3313:
 26252              	.L1781:
12097:Core/Src/bno055.c ****             {
12098:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12099:Core/Src/bno055.c ****             }
12100:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26253              		.loc 1 12100 13 is_stmt 1 view .LVU7419
 26254              		.loc 1 12100 16 is_stmt 0 view .LVU7420
 26255 002c 44B1     		cbz	r4, .L1789
12101:Core/Src/bno055.c ****             {
12102:Core/Src/bno055.c ****                 /* Write page as one */
12103:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12104:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12105:Core/Src/bno055.c ****                 {
12106:Core/Src/bno055.c ****                     if (mag_power_mode_u8 < BNO055_MAG_POWER_MODE_RANGE)
12107:Core/Src/bno055.c ****                     {
12108:Core/Src/bno055.c ****                         /* Write the value of mag power mode*/
12109:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12110:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
12111:Core/Src/bno055.c ****                                                                   &data_u8r,
12112:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12113:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12114:Core/Src/bno055.c ****                         {
12115:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_POWER_MODE, mag_pow
12116:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12117:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
12118:Core/Src/bno055.c ****                                                                         &data_u8r,
12119:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
ARM GAS  /tmp/ccO72alg.s 			page 730


12120:Core/Src/bno055.c ****                         }
12121:Core/Src/bno055.c ****                     }
12122:Core/Src/bno055.c ****                     else
12123:Core/Src/bno055.c ****                     {
12124:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12125:Core/Src/bno055.c ****                     }
12126:Core/Src/bno055.c ****                 }
12127:Core/Src/bno055.c ****                 else
12128:Core/Src/bno055.c ****                 {
12129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12130:Core/Src/bno055.c ****                 }
12131:Core/Src/bno055.c ****             }
12132:Core/Src/bno055.c ****             else
12133:Core/Src/bno055.c ****             {
12134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26256              		.loc 1 12134 26 view .LVU7421
 26257 002e 4FF0FF34 		mov	r4, #-1
 26258              	.LVL3314:
 26259              		.loc 1 12134 26 view .LVU7422
 26260 0032 30E0     		b	.L1780
 26261              	.LVL3315:
 26262              	.L1788:
12098:Core/Src/bno055.c ****             }
 26263              		.loc 1 12098 17 is_stmt 1 view .LVU7423
12098:Core/Src/bno055.c ****             }
 26264              		.loc 1 12098 28 is_stmt 0 view .LVU7424
 26265 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26266              	.LVL3316:
12098:Core/Src/bno055.c ****             }
 26267              		.loc 1 12098 25 view .LVU7425
 26268 0038 54FA80F4 		uxtab	r4, r4, r0
 26269 003c 64B2     		sxtb	r4, r4
 26270              	.LVL3317:
12098:Core/Src/bno055.c ****             }
 26271              		.loc 1 12098 25 view .LVU7426
 26272 003e F5E7     		b	.L1781
 26273              	.L1789:
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26274              		.loc 1 12103 17 is_stmt 1 view .LVU7427
12103:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26275              		.loc 1 12103 30 is_stmt 0 view .LVU7428
 26276 0040 0120     		movs	r0, #1
 26277 0042 FFF7FEFF 		bl	bno055_write_page_id
 26278              	.LVL3318:
12104:Core/Src/bno055.c ****                 {
 26279              		.loc 1 12104 17 is_stmt 1 view .LVU7429
12104:Core/Src/bno055.c ****                 {
 26280              		.loc 1 12104 20 is_stmt 0 view .LVU7430
 26281 0046 60BB     		cbnz	r0, .L1785
12106:Core/Src/bno055.c ****                     {
 26282              		.loc 1 12106 21 is_stmt 1 view .LVU7431
12106:Core/Src/bno055.c ****                     {
 26283              		.loc 1 12106 24 is_stmt 0 view .LVU7432
 26284 0048 032D     		cmp	r5, #3
 26285 004a 2DD8     		bhi	.L1786
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26286              		.loc 1 12109 25 is_stmt 1 view .LVU7433
ARM GAS  /tmp/ccO72alg.s 			page 731


12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26287              		.loc 1 12109 44 is_stmt 0 view .LVU7434
 26288 004c 1C4B     		ldr	r3, .L1791
 26289 004e 1868     		ldr	r0, [r3]
 26290              	.LVL3319:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26291              		.loc 1 12109 44 view .LVU7435
 26292 0050 0469     		ldr	r4, [r0, #16]
 26293              	.LVL3320:
12109:Core/Src/bno055.c ****                                                                   BNO055_MAG_POWER_MODE_REG,
 26294              		.loc 1 12109 36 view .LVU7436
 26295 0052 0123     		movs	r3, #1
 26296 0054 0DF10702 		add	r2, sp, #7
 26297 0058 0921     		movs	r1, #9
 26298 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26299 005c A047     		blx	r4
 26300              	.LVL3321:
12113:Core/Src/bno055.c ****                         {
 26301              		.loc 1 12113 25 is_stmt 1 view .LVU7437
12113:Core/Src/bno055.c ****                         {
 26302              		.loc 1 12113 28 is_stmt 0 view .LVU7438
 26303 005e 0446     		mov	r4, r0
 26304 0060 C8B9     		cbnz	r0, .L1780
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26305              		.loc 1 12115 29 is_stmt 1 view .LVU7439
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26306              		.loc 1 12115 40 is_stmt 0 view .LVU7440
 26307 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 26308              	.LVL3322:
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26309              		.loc 1 12115 40 view .LVU7441
 26310 0066 20F06000 		bic	r0, r0, #96
 26311 006a 43B2     		sxtb	r3, r0
 26312 006c 6801     		lsls	r0, r5, #5
 26313 006e 00F06000 		and	r0, r0, #96
 26314 0072 1843     		orrs	r0, r0, r3
12115:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26315              		.loc 1 12115 38 view .LVU7442
 26316 0074 8DF80700 		strb	r0, [sp, #7]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26317              		.loc 1 12116 29 is_stmt 1 view .LVU7443
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26318              		.loc 1 12116 49 is_stmt 0 view .LVU7444
 26319 0078 114B     		ldr	r3, .L1791
 26320 007a 1868     		ldr	r0, [r3]
 26321 007c C568     		ldr	r5, [r0, #12]
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26322              		.loc 1 12116 41 view .LVU7445
 26323 007e 0123     		movs	r3, #1
 26324 0080 0DF10702 		add	r2, sp, #7
 26325 0084 0921     		movs	r1, #9
 26326 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26327 0088 A847     		blx	r5
 26328              	.LVL3323:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26329              		.loc 1 12116 38 view .LVU7446
 26330 008a 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 732


 26331 008e 64B2     		sxtb	r4, r4
 26332              	.LVL3324:
12116:Core/Src/bno055.c ****                                                                         BNO055_MAG_POWER_MODE_REG,
 26333              		.loc 1 12116 38 view .LVU7447
 26334 0090 01E0     		b	.L1780
 26335              	.LVL3325:
 26336              	.L1783:
12135:Core/Src/bno055.c ****             }
12136:Core/Src/bno055.c ****         }
12137:Core/Src/bno055.c ****         else
12138:Core/Src/bno055.c ****         {
12139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26337              		.loc 1 12139 22 view .LVU7448
 26338 0092 4FF0FF34 		mov	r4, #-1
 26339              	.LVL3326:
 26340              	.L1780:
12140:Core/Src/bno055.c ****         }
12141:Core/Src/bno055.c ****     }
12142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26341              		.loc 1 12142 5 is_stmt 1 view .LVU7449
 26342              		.loc 1 12142 24 is_stmt 0 view .LVU7450
 26343 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26344              		.loc 1 12142 8 view .LVU7451
 26345 009a 40B9     		cbnz	r0, .L1790
 26346              	.LVL3327:
 26347              	.L1779:
12143:Core/Src/bno055.c ****     {
12144:Core/Src/bno055.c ****         /* set the operation mode of
12145:Core/Src/bno055.c ****          * previous operation mode*/
12146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12147:Core/Src/bno055.c ****     }
12148:Core/Src/bno055.c **** 
12149:Core/Src/bno055.c ****     return com_rslt;
12150:Core/Src/bno055.c **** }
 26348              		.loc 1 12150 1 view .LVU7452
 26349 009c 2046     		mov	r0, r4
 26350 009e 03B0     		add	sp, sp, #12
 26351              	.LCFI739:
 26352              		.cfi_remember_state
 26353              		.cfi_def_cfa_offset 12
 26354              		@ sp needed
 26355 00a0 30BD     		pop	{r4, r5, pc}
 26356              	.LVL3328:
 26357              	.L1785:
 26358              	.LCFI740:
 26359              		.cfi_restore_state
12129:Core/Src/bno055.c ****                 }
 26360              		.loc 1 12129 30 view .LVU7453
 26361 00a2 4FF0FF34 		mov	r4, #-1
 26362              	.LVL3329:
12129:Core/Src/bno055.c ****                 }
 26363              		.loc 1 12129 30 view .LVU7454
 26364 00a6 F6E7     		b	.L1780
 26365              	.LVL3330:
 26366              	.L1786:
12124:Core/Src/bno055.c ****                     }
 26367              		.loc 1 12124 34 view .LVU7455
ARM GAS  /tmp/ccO72alg.s 			page 733


 26368 00a8 6FF00104 		mvn	r4, #1
 26369              	.LVL3331:
12124:Core/Src/bno055.c ****                     }
 26370              		.loc 1 12124 34 view .LVU7456
 26371 00ac F3E7     		b	.L1780
 26372              	.LVL3332:
 26373              	.L1790:
12146:Core/Src/bno055.c ****     }
 26374              		.loc 1 12146 9 is_stmt 1 view .LVU7457
12146:Core/Src/bno055.c ****     }
 26375              		.loc 1 12146 21 is_stmt 0 view .LVU7458
 26376 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 26377              	.LVL3333:
12146:Core/Src/bno055.c ****     }
 26378              		.loc 1 12146 18 view .LVU7459
 26379 00b2 54FA80F4 		uxtab	r4, r4, r0
 26380              	.LVL3334:
12146:Core/Src/bno055.c ****     }
 26381              		.loc 1 12146 18 view .LVU7460
 26382 00b6 64B2     		sxtb	r4, r4
 26383              	.LVL3335:
12146:Core/Src/bno055.c ****     }
 26384              		.loc 1 12146 18 view .LVU7461
 26385 00b8 F0E7     		b	.L1779
 26386              	.LVL3336:
 26387              	.L1782:
12086:Core/Src/bno055.c ****     }
 26388              		.loc 1 12086 16 view .LVU7462
 26389 00ba 6FF07E04 		mvn	r4, #126
 26390 00be EDE7     		b	.L1779
 26391              	.L1792:
 26392              		.align	2
 26393              	.L1791:
 26394 00c0 00000000 		.word	.LANCHOR0
 26395              		.cfi_endproc
 26396              	.LFE186:
 26398              		.section	.text.bno055_get_gyro_range,"ax",%progbits
 26399              		.align	1
 26400              		.global	bno055_get_gyro_range
 26401              		.syntax unified
 26402              		.thumb
 26403              		.thumb_func
 26405              	bno055_get_gyro_range:
 26406              	.LVL3337:
 26407              	.LFB187:
12151:Core/Src/bno055.c **** 
12152:Core/Src/bno055.c **** /*!
12153:Core/Src/bno055.c ****  *  @brief This API used to read the gyro range
12154:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12155:Core/Src/bno055.c ****  *
12156:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12157:Core/Src/bno055.c ****  *
12158:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12159:Core/Src/bno055.c ****  * --------------------|-----------------
12160:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12161:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12162:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
ARM GAS  /tmp/ccO72alg.s 			page 734


12163:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12164:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12165:Core/Src/bno055.c ****  *
12166:Core/Src/bno055.c ****  *  @return results of bus communication function
12167:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12168:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12169:Core/Src/bno055.c ****  *
12170:Core/Src/bno055.c ****  *
12171:Core/Src/bno055.c ****  */
12172:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_range(u8 *gyro_range_u8)
12173:Core/Src/bno055.c **** {
 26408              		.loc 1 12173 1 is_stmt 1 view -0
 26409              		.cfi_startproc
 26410              		@ args = 0, pretend = 0, frame = 8
 26411              		@ frame_needed = 0, uses_anonymous_args = 0
 26412              		.loc 1 12173 1 is_stmt 0 view .LVU7464
 26413 0000 30B5     		push	{r4, r5, lr}
 26414              	.LCFI741:
 26415              		.cfi_def_cfa_offset 12
 26416              		.cfi_offset 4, -12
 26417              		.cfi_offset 5, -8
 26418              		.cfi_offset 14, -4
 26419 0002 83B0     		sub	sp, sp, #12
 26420              	.LCFI742:
 26421              		.cfi_def_cfa_offset 24
12174:Core/Src/bno055.c ****     /* Variable used to return value of
12175:Core/Src/bno055.c ****      * communication routine*/
12176:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26422              		.loc 1 12176 5 is_stmt 1 view .LVU7465
 26423              	.LVL3338:
12177:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26424              		.loc 1 12177 5 view .LVU7466
 26425              		.loc 1 12177 8 is_stmt 0 view .LVU7467
 26426 0004 0023     		movs	r3, #0
 26427 0006 8DF80730 		strb	r3, [sp, #7]
12178:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26428              		.loc 1 12178 5 is_stmt 1 view .LVU7468
 26429              	.LVL3339:
12179:Core/Src/bno055.c **** 
12180:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12181:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26430              		.loc 1 12181 5 view .LVU7469
 26431              		.loc 1 12181 18 is_stmt 0 view .LVU7470
 26432 000a 144B     		ldr	r3, .L1801
 26433 000c 1B68     		ldr	r3, [r3]
 26434              		.loc 1 12181 8 view .LVU7471
 26435 000e F3B1     		cbz	r3, .L1797
 26436 0010 0446     		mov	r4, r0
12182:Core/Src/bno055.c ****     {
12183:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12184:Core/Src/bno055.c ****     }
12185:Core/Src/bno055.c ****     else
12186:Core/Src/bno055.c ****     {
12187:Core/Src/bno055.c ****         /*condition check for page, gyro range is
12188:Core/Src/bno055.c ****          * available in the page one*/
12189:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26437              		.loc 1 12189 9 is_stmt 1 view .LVU7472
ARM GAS  /tmp/ccO72alg.s 			page 735


 26438              		.loc 1 12189 21 is_stmt 0 view .LVU7473
 26439 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26440              		.loc 1 12189 12 view .LVU7474
 26441 0014 012B     		cmp	r3, #1
 26442 0016 14D1     		bne	.L1800
 26443              	.LVL3340:
 26444              	.L1795:
12190:Core/Src/bno055.c ****         {
12191:Core/Src/bno055.c ****             /* Write page as one */
12192:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12193:Core/Src/bno055.c ****         }
12194:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26445              		.loc 1 12194 53 discriminator 1 view .LVU7475
 26446 0018 104B     		ldr	r3, .L1801
 26447 001a 1B68     		ldr	r3, [r3]
 26448 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26449              		.loc 1 12194 41 discriminator 1 view .LVU7476
 26450 001e 012B     		cmp	r3, #1
 26451 0020 18D1     		bne	.L1798
 26452              	.L1796:
12195:Core/Src/bno055.c ****         {
12196:Core/Src/bno055.c ****             /* Read the value of gyro range */
12197:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26453              		.loc 1 12197 13 is_stmt 1 view .LVU7477
 26454              		.loc 1 12197 32 is_stmt 0 view .LVU7478
 26455 0022 0E4B     		ldr	r3, .L1801
 26456 0024 1868     		ldr	r0, [r3]
 26457 0026 0569     		ldr	r5, [r0, #16]
 26458              		.loc 1 12197 24 view .LVU7479
 26459 0028 0123     		movs	r3, #1
 26460 002a 0DF10702 		add	r2, sp, #7
 26461 002e 0A21     		movs	r1, #10
 26462 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26463 0032 A847     		blx	r5
 26464              	.LVL3341:
12198:Core/Src/bno055.c ****                                                       BNO055_GYRO_RANGE_REG,
12199:Core/Src/bno055.c ****                                                       &data_u8r,
12200:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12201:Core/Src/bno055.c ****             *gyro_range_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_RANGE);
 26465              		.loc 1 12201 13 is_stmt 1 view .LVU7480
 26466              		.loc 1 12201 30 is_stmt 0 view .LVU7481
 26467 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26468 0038 03F00703 		and	r3, r3, #7
 26469              		.loc 1 12201 28 view .LVU7482
 26470 003c 2370     		strb	r3, [r4]
 26471              	.LVL3342:
 26472              	.L1794:
12202:Core/Src/bno055.c ****         }
12203:Core/Src/bno055.c ****         else
12204:Core/Src/bno055.c ****         {
12205:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12206:Core/Src/bno055.c ****         }
12207:Core/Src/bno055.c ****     }
12208:Core/Src/bno055.c **** 
12209:Core/Src/bno055.c ****     return com_rslt;
12210:Core/Src/bno055.c **** }
 26473              		.loc 1 12210 1 view .LVU7483
ARM GAS  /tmp/ccO72alg.s 			page 736


 26474 003e 03B0     		add	sp, sp, #12
 26475              	.LCFI743:
 26476              		.cfi_remember_state
 26477              		.cfi_def_cfa_offset 12
 26478              		@ sp needed
 26479 0040 30BD     		pop	{r4, r5, pc}
 26480              	.LVL3343:
 26481              	.L1800:
 26482              	.LCFI744:
 26483              		.cfi_restore_state
12192:Core/Src/bno055.c ****         }
 26484              		.loc 1 12192 13 is_stmt 1 view .LVU7484
12192:Core/Src/bno055.c ****         }
 26485              		.loc 1 12192 23 is_stmt 0 view .LVU7485
 26486 0042 0120     		movs	r0, #1
 26487              	.LVL3344:
12192:Core/Src/bno055.c ****         }
 26488              		.loc 1 12192 23 view .LVU7486
 26489 0044 FFF7FEFF 		bl	bno055_write_page_id
 26490              	.LVL3345:
12194:Core/Src/bno055.c ****         {
 26491              		.loc 1 12194 9 is_stmt 1 view .LVU7487
12194:Core/Src/bno055.c ****         {
 26492              		.loc 1 12194 12 is_stmt 0 view .LVU7488
 26493 0048 0028     		cmp	r0, #0
 26494 004a EAD0     		beq	.L1796
 26495 004c E4E7     		b	.L1795
 26496              	.LVL3346:
 26497              	.L1797:
12183:Core/Src/bno055.c ****     }
 26498              		.loc 1 12183 16 view .LVU7489
 26499 004e 6FF07E00 		mvn	r0, #126
 26500              	.LVL3347:
12183:Core/Src/bno055.c ****     }
 26501              		.loc 1 12183 16 view .LVU7490
 26502 0052 F4E7     		b	.L1794
 26503              	.LVL3348:
 26504              	.L1798:
12205:Core/Src/bno055.c ****         }
 26505              		.loc 1 12205 22 view .LVU7491
 26506 0054 4FF0FF30 		mov	r0, #-1
 26507 0058 F1E7     		b	.L1794
 26508              	.L1802:
 26509 005a 00BF     		.align	2
 26510              	.L1801:
 26511 005c 00000000 		.word	.LANCHOR0
 26512              		.cfi_endproc
 26513              	.LFE187:
 26515              		.section	.text.bno055_set_gyro_range,"ax",%progbits
 26516              		.align	1
 26517              		.global	bno055_set_gyro_range
 26518              		.syntax unified
 26519              		.thumb
 26520              		.thumb_func
 26522              	bno055_set_gyro_range:
 26523              	.LVL3349:
 26524              	.LFB188:
ARM GAS  /tmp/ccO72alg.s 			page 737


12211:Core/Src/bno055.c **** 
12212:Core/Src/bno055.c **** /*!
12213:Core/Src/bno055.c ****  *  @brief This API used to write the gyro range
12214:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 0 to 3
12215:Core/Src/bno055.c ****  *
12216:Core/Src/bno055.c ****  *  @param gyro_range_u8 : The value of gyro range
12217:Core/Src/bno055.c ****  *
12218:Core/Src/bno055.c ****  *     gyro_range_u8 |   result
12219:Core/Src/bno055.c ****  * --------------------|-----------------
12220:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_RANGE_2000DPS
12221:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_RANGE_1000DPS
12222:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_RANGE_500DPS
12223:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_RANGE_250DPS
12224:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_RANGE_125DPS
12225:Core/Src/bno055.c ****  *
12226:Core/Src/bno055.c ****  *  @return results of bus communication function
12227:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12228:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12229:Core/Src/bno055.c ****  *
12230:Core/Src/bno055.c ****  *
12231:Core/Src/bno055.c ****  */
12232:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_range(u8 gyro_range_u8)
12233:Core/Src/bno055.c **** {
 26525              		.loc 1 12233 1 is_stmt 1 view -0
 26526              		.cfi_startproc
 26527              		@ args = 0, pretend = 0, frame = 8
 26528              		@ frame_needed = 0, uses_anonymous_args = 0
 26529              		.loc 1 12233 1 is_stmt 0 view .LVU7493
 26530 0000 30B5     		push	{r4, r5, lr}
 26531              	.LCFI745:
 26532              		.cfi_def_cfa_offset 12
 26533              		.cfi_offset 4, -12
 26534              		.cfi_offset 5, -8
 26535              		.cfi_offset 14, -4
 26536 0002 83B0     		sub	sp, sp, #12
 26537              	.LCFI746:
 26538              		.cfi_def_cfa_offset 24
12234:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26539              		.loc 1 12234 5 is_stmt 1 view .LVU7494
 26540              	.LVL3350:
12235:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26541              		.loc 1 12235 5 view .LVU7495
 26542              		.loc 1 12235 8 is_stmt 0 view .LVU7496
 26543 0004 0023     		movs	r3, #0
 26544 0006 8DF80730 		strb	r3, [sp, #7]
12236:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26545              		.loc 1 12236 5 is_stmt 1 view .LVU7497
 26546              	.LVL3351:
12237:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 26547              		.loc 1 12237 5 view .LVU7498
12238:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 26548              		.loc 1 12238 5 view .LVU7499
 26549              		.loc 1 12238 8 is_stmt 0 view .LVU7500
 26550 000a 8DF80630 		strb	r3, [sp, #6]
12239:Core/Src/bno055.c **** 
12240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccO72alg.s 			page 738


 26551              		.loc 1 12241 5 is_stmt 1 view .LVU7501
 26552              		.loc 1 12241 18 is_stmt 0 view .LVU7502
 26553 000e 2C4B     		ldr	r3, .L1816
 26554 0010 1B68     		ldr	r3, [r3]
 26555              		.loc 1 12241 8 view .LVU7503
 26556 0012 002B     		cmp	r3, #0
 26557 0014 50D0     		beq	.L1807
 26558 0016 0546     		mov	r5, r0
12242:Core/Src/bno055.c ****     {
12243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12244:Core/Src/bno055.c ****     }
12245:Core/Src/bno055.c ****     else
12246:Core/Src/bno055.c ****     {
12247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 26559              		.loc 1 12250 9 is_stmt 1 view .LVU7504
 26560              		.loc 1 12250 19 is_stmt 0 view .LVU7505
 26561 0018 0DF10600 		add	r0, sp, #6
 26562              	.LVL3352:
 26563              		.loc 1 12250 19 view .LVU7506
 26564 001c FFF7FEFF 		bl	bno055_get_operation_mode
 26565              	.LVL3353:
12251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 26566              		.loc 1 12251 9 is_stmt 1 view .LVU7507
 26567              		.loc 1 12251 12 is_stmt 0 view .LVU7508
 26568 0020 0446     		mov	r4, r0
 26569 0022 0028     		cmp	r0, #0
 26570 0024 34D1     		bne	.L1808
12252:Core/Src/bno055.c ****         {
12253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26571              		.loc 1 12253 13 is_stmt 1 view .LVU7509
 26572              		.loc 1 12253 32 is_stmt 0 view .LVU7510
 26573 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 26574              		.loc 1 12253 16 view .LVU7511
 26575 002a 1BB9     		cbnz	r3, .L1813
 26576              	.LVL3354:
 26577              	.L1806:
12254:Core/Src/bno055.c ****             {
12255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12256:Core/Src/bno055.c ****             }
12257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 26578              		.loc 1 12257 13 is_stmt 1 view .LVU7512
 26579              		.loc 1 12257 16 is_stmt 0 view .LVU7513
 26580 002c 44B1     		cbz	r4, .L1814
12258:Core/Src/bno055.c ****             {
12259:Core/Src/bno055.c ****                 /* Write page as one */
12260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12262:Core/Src/bno055.c ****                 {
12263:Core/Src/bno055.c ****                     if (gyro_range_u8 < BNO055_GYRO_RANGE)
12264:Core/Src/bno055.c ****                     {
12265:Core/Src/bno055.c ****                         /* Write the value of gyro range*/
12266:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12267:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
12268:Core/Src/bno055.c ****                                                                   &data_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 739


12269:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12270:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12271:Core/Src/bno055.c ****                         {
12272:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_RANGE, gyro_range_
12273:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12274:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
12275:Core/Src/bno055.c ****                                                                         &data_u8r,
12276:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12277:Core/Src/bno055.c ****                         }
12278:Core/Src/bno055.c ****                     }
12279:Core/Src/bno055.c ****                     else
12280:Core/Src/bno055.c ****                     {
12281:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12282:Core/Src/bno055.c ****                     }
12283:Core/Src/bno055.c ****                 }
12284:Core/Src/bno055.c ****                 else
12285:Core/Src/bno055.c ****                 {
12286:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12287:Core/Src/bno055.c ****                 }
12288:Core/Src/bno055.c ****             }
12289:Core/Src/bno055.c ****             else
12290:Core/Src/bno055.c ****             {
12291:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 26581              		.loc 1 12291 26 view .LVU7514
 26582 002e 4FF0FF34 		mov	r4, #-1
 26583              	.LVL3355:
 26584              		.loc 1 12291 26 view .LVU7515
 26585 0032 2FE0     		b	.L1805
 26586              	.LVL3356:
 26587              	.L1813:
12255:Core/Src/bno055.c ****             }
 26588              		.loc 1 12255 17 is_stmt 1 view .LVU7516
12255:Core/Src/bno055.c ****             }
 26589              		.loc 1 12255 28 is_stmt 0 view .LVU7517
 26590 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 26591              	.LVL3357:
12255:Core/Src/bno055.c ****             }
 26592              		.loc 1 12255 25 view .LVU7518
 26593 0038 54FA80F4 		uxtab	r4, r4, r0
 26594 003c 64B2     		sxtb	r4, r4
 26595              	.LVL3358:
12255:Core/Src/bno055.c ****             }
 26596              		.loc 1 12255 25 view .LVU7519
 26597 003e F5E7     		b	.L1806
 26598              	.L1814:
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26599              		.loc 1 12260 17 is_stmt 1 view .LVU7520
12260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 26600              		.loc 1 12260 30 is_stmt 0 view .LVU7521
 26601 0040 0120     		movs	r0, #1
 26602 0042 FFF7FEFF 		bl	bno055_write_page_id
 26603              	.LVL3359:
12261:Core/Src/bno055.c ****                 {
 26604              		.loc 1 12261 17 is_stmt 1 view .LVU7522
12261:Core/Src/bno055.c ****                 {
 26605              		.loc 1 12261 20 is_stmt 0 view .LVU7523
 26606 0046 58BB     		cbnz	r0, .L1810
ARM GAS  /tmp/ccO72alg.s 			page 740


12263:Core/Src/bno055.c ****                     {
 26607              		.loc 1 12263 21 is_stmt 1 view .LVU7524
12263:Core/Src/bno055.c ****                     {
 26608              		.loc 1 12263 24 is_stmt 0 view .LVU7525
 26609 0048 042D     		cmp	r5, #4
 26610 004a 2CD8     		bhi	.L1811
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26611              		.loc 1 12266 25 is_stmt 1 view .LVU7526
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26612              		.loc 1 12266 44 is_stmt 0 view .LVU7527
 26613 004c 1C4B     		ldr	r3, .L1816
 26614 004e 1868     		ldr	r0, [r3]
 26615              	.LVL3360:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26616              		.loc 1 12266 44 view .LVU7528
 26617 0050 0469     		ldr	r4, [r0, #16]
 26618              	.LVL3361:
12266:Core/Src/bno055.c ****                                                                   BNO055_GYRO_RANGE_REG,
 26619              		.loc 1 12266 36 view .LVU7529
 26620 0052 0123     		movs	r3, #1
 26621 0054 0DF10702 		add	r2, sp, #7
 26622 0058 0A21     		movs	r1, #10
 26623 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26624 005c A047     		blx	r4
 26625              	.LVL3362:
12270:Core/Src/bno055.c ****                         {
 26626              		.loc 1 12270 25 is_stmt 1 view .LVU7530
12270:Core/Src/bno055.c ****                         {
 26627              		.loc 1 12270 28 is_stmt 0 view .LVU7531
 26628 005e 0446     		mov	r4, r0
 26629 0060 C0B9     		cbnz	r0, .L1805
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26630              		.loc 1 12272 29 is_stmt 1 view .LVU7532
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26631              		.loc 1 12272 40 is_stmt 0 view .LVU7533
 26632 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 26633              	.LVL3363:
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26634              		.loc 1 12272 40 view .LVU7534
 26635 0066 20F00700 		bic	r0, r0, #7
 26636 006a 43B2     		sxtb	r3, r0
 26637 006c 05F00700 		and	r0, r5, #7
 26638 0070 1843     		orrs	r0, r0, r3
12272:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 26639              		.loc 1 12272 38 view .LVU7535
 26640 0072 8DF80700 		strb	r0, [sp, #7]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26641              		.loc 1 12273 29 is_stmt 1 view .LVU7536
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26642              		.loc 1 12273 49 is_stmt 0 view .LVU7537
 26643 0076 124B     		ldr	r3, .L1816
 26644 0078 1868     		ldr	r0, [r3]
 26645 007a C568     		ldr	r5, [r0, #12]
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26646              		.loc 1 12273 41 view .LVU7538
 26647 007c 0123     		movs	r3, #1
 26648 007e 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccO72alg.s 			page 741


 26649 0082 0A21     		movs	r1, #10
 26650 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26651 0086 A847     		blx	r5
 26652              	.LVL3364:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26653              		.loc 1 12273 38 view .LVU7539
 26654 0088 54FA80F4 		uxtab	r4, r4, r0
 26655 008c 64B2     		sxtb	r4, r4
 26656              	.LVL3365:
12273:Core/Src/bno055.c ****                                                                         BNO055_GYRO_RANGE_REG,
 26657              		.loc 1 12273 38 view .LVU7540
 26658 008e 01E0     		b	.L1805
 26659              	.LVL3366:
 26660              	.L1808:
12292:Core/Src/bno055.c ****             }
12293:Core/Src/bno055.c ****         }
12294:Core/Src/bno055.c ****         else
12295:Core/Src/bno055.c ****         {
12296:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 26661              		.loc 1 12296 22 view .LVU7541
 26662 0090 4FF0FF34 		mov	r4, #-1
 26663              	.LVL3367:
 26664              	.L1805:
12297:Core/Src/bno055.c ****         }
12298:Core/Src/bno055.c ****     }
12299:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 26665              		.loc 1 12299 5 is_stmt 1 view .LVU7542
 26666              		.loc 1 12299 24 is_stmt 0 view .LVU7543
 26667 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 26668              		.loc 1 12299 8 view .LVU7544
 26669 0098 40B9     		cbnz	r0, .L1815
 26670              	.LVL3368:
 26671              	.L1804:
12300:Core/Src/bno055.c ****     {
12301:Core/Src/bno055.c ****         /* set the operation mode of
12302:Core/Src/bno055.c ****          * previous operation mode*/
12303:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12304:Core/Src/bno055.c ****     }
12305:Core/Src/bno055.c **** 
12306:Core/Src/bno055.c ****     return com_rslt;
12307:Core/Src/bno055.c **** }
 26672              		.loc 1 12307 1 view .LVU7545
 26673 009a 2046     		mov	r0, r4
 26674 009c 03B0     		add	sp, sp, #12
 26675              	.LCFI747:
 26676              		.cfi_remember_state
 26677              		.cfi_def_cfa_offset 12
 26678              		@ sp needed
 26679 009e 30BD     		pop	{r4, r5, pc}
 26680              	.LVL3369:
 26681              	.L1810:
 26682              	.LCFI748:
 26683              		.cfi_restore_state
12286:Core/Src/bno055.c ****                 }
 26684              		.loc 1 12286 30 view .LVU7546
 26685 00a0 4FF0FF34 		mov	r4, #-1
 26686              	.LVL3370:
ARM GAS  /tmp/ccO72alg.s 			page 742


12286:Core/Src/bno055.c ****                 }
 26687              		.loc 1 12286 30 view .LVU7547
 26688 00a4 F6E7     		b	.L1805
 26689              	.LVL3371:
 26690              	.L1811:
12281:Core/Src/bno055.c ****                     }
 26691              		.loc 1 12281 34 view .LVU7548
 26692 00a6 6FF00104 		mvn	r4, #1
 26693              	.LVL3372:
12281:Core/Src/bno055.c ****                     }
 26694              		.loc 1 12281 34 view .LVU7549
 26695 00aa F3E7     		b	.L1805
 26696              	.LVL3373:
 26697              	.L1815:
12303:Core/Src/bno055.c ****     }
 26698              		.loc 1 12303 9 is_stmt 1 view .LVU7550
12303:Core/Src/bno055.c ****     }
 26699              		.loc 1 12303 21 is_stmt 0 view .LVU7551
 26700 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 26701              	.LVL3374:
12303:Core/Src/bno055.c ****     }
 26702              		.loc 1 12303 18 view .LVU7552
 26703 00b0 54FA80F4 		uxtab	r4, r4, r0
 26704              	.LVL3375:
12303:Core/Src/bno055.c ****     }
 26705              		.loc 1 12303 18 view .LVU7553
 26706 00b4 64B2     		sxtb	r4, r4
 26707              	.LVL3376:
12303:Core/Src/bno055.c ****     }
 26708              		.loc 1 12303 18 view .LVU7554
 26709 00b6 F0E7     		b	.L1804
 26710              	.LVL3377:
 26711              	.L1807:
12243:Core/Src/bno055.c ****     }
 26712              		.loc 1 12243 16 view .LVU7555
 26713 00b8 6FF07E04 		mvn	r4, #126
 26714 00bc EDE7     		b	.L1804
 26715              	.L1817:
 26716 00be 00BF     		.align	2
 26717              	.L1816:
 26718 00c0 00000000 		.word	.LANCHOR0
 26719              		.cfi_endproc
 26720              	.LFE188:
 26722              		.section	.text.bno055_get_gyro_bw,"ax",%progbits
 26723              		.align	1
 26724              		.global	bno055_get_gyro_bw
 26725              		.syntax unified
 26726              		.thumb
 26727              		.thumb_func
 26729              	bno055_get_gyro_bw:
 26730              	.LVL3378:
 26731              	.LFB189:
12308:Core/Src/bno055.c **** 
12309:Core/Src/bno055.c **** /*!
12310:Core/Src/bno055.c ****  *  @brief This API used to read the gyro bandwidth
12311:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12312:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 743


12313:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12314:Core/Src/bno055.c ****  *
12315:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12316:Core/Src/bno055.c ****  * --------------------|-----------------
12317:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12318:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12319:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12320:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12321:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12322:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12323:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12324:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12325:Core/Src/bno055.c ****  *
12326:Core/Src/bno055.c ****  *  @return results of bus communication function
12327:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12328:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12329:Core/Src/bno055.c ****  *
12330:Core/Src/bno055.c ****  *
12331:Core/Src/bno055.c ****  */
12332:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_bw(u8 *gyro_bw_u8)
12333:Core/Src/bno055.c **** {
 26732              		.loc 1 12333 1 is_stmt 1 view -0
 26733              		.cfi_startproc
 26734              		@ args = 0, pretend = 0, frame = 8
 26735              		@ frame_needed = 0, uses_anonymous_args = 0
 26736              		.loc 1 12333 1 is_stmt 0 view .LVU7557
 26737 0000 30B5     		push	{r4, r5, lr}
 26738              	.LCFI749:
 26739              		.cfi_def_cfa_offset 12
 26740              		.cfi_offset 4, -12
 26741              		.cfi_offset 5, -8
 26742              		.cfi_offset 14, -4
 26743 0002 83B0     		sub	sp, sp, #12
 26744              	.LCFI750:
 26745              		.cfi_def_cfa_offset 24
12334:Core/Src/bno055.c ****     /* Variable used to return value of
12335:Core/Src/bno055.c ****      * communication routine*/
12336:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26746              		.loc 1 12336 5 is_stmt 1 view .LVU7558
 26747              	.LVL3379:
12337:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26748              		.loc 1 12337 5 view .LVU7559
 26749              		.loc 1 12337 8 is_stmt 0 view .LVU7560
 26750 0004 0023     		movs	r3, #0
 26751 0006 8DF80730 		strb	r3, [sp, #7]
12338:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26752              		.loc 1 12338 5 is_stmt 1 view .LVU7561
 26753              	.LVL3380:
12339:Core/Src/bno055.c **** 
12340:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12341:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26754              		.loc 1 12341 5 view .LVU7562
 26755              		.loc 1 12341 18 is_stmt 0 view .LVU7563
 26756 000a 144B     		ldr	r3, .L1826
 26757 000c 1B68     		ldr	r3, [r3]
 26758              		.loc 1 12341 8 view .LVU7564
 26759 000e F3B1     		cbz	r3, .L1822
ARM GAS  /tmp/ccO72alg.s 			page 744


 26760 0010 0446     		mov	r4, r0
12342:Core/Src/bno055.c ****     {
12343:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12344:Core/Src/bno055.c ****     }
12345:Core/Src/bno055.c ****     else
12346:Core/Src/bno055.c ****     {
12347:Core/Src/bno055.c ****         /*condition check for page, gyro bandwidth is
12348:Core/Src/bno055.c ****          * available in the page one*/
12349:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26761              		.loc 1 12349 9 is_stmt 1 view .LVU7565
 26762              		.loc 1 12349 21 is_stmt 0 view .LVU7566
 26763 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26764              		.loc 1 12349 12 view .LVU7567
 26765 0014 012B     		cmp	r3, #1
 26766 0016 14D1     		bne	.L1825
 26767              	.LVL3381:
 26768              	.L1820:
12350:Core/Src/bno055.c ****         {
12351:Core/Src/bno055.c ****             /* Write page as one */
12352:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12353:Core/Src/bno055.c ****         }
12354:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26769              		.loc 1 12354 53 discriminator 1 view .LVU7568
 26770 0018 104B     		ldr	r3, .L1826
 26771 001a 1B68     		ldr	r3, [r3]
 26772 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26773              		.loc 1 12354 41 discriminator 1 view .LVU7569
 26774 001e 012B     		cmp	r3, #1
 26775 0020 18D1     		bne	.L1823
 26776              	.L1821:
12355:Core/Src/bno055.c ****         {
12356:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26777              		.loc 1 12356 13 is_stmt 1 view .LVU7570
 26778              		.loc 1 12356 32 is_stmt 0 view .LVU7571
 26779 0022 0E4B     		ldr	r3, .L1826
 26780 0024 1868     		ldr	r0, [r3]
 26781 0026 0569     		ldr	r5, [r0, #16]
 26782              		.loc 1 12356 24 view .LVU7572
 26783 0028 0123     		movs	r3, #1
 26784 002a 0DF10702 		add	r2, sp, #7
 26785 002e 0A21     		movs	r1, #10
 26786 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26787 0032 A847     		blx	r5
 26788              	.LVL3382:
12357:Core/Src/bno055.c ****                                                       BNO055_GYRO_BW_REG,
12358:Core/Src/bno055.c ****                                                       &data_u8r,
12359:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12360:Core/Src/bno055.c ****             *gyro_bw_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_BW);
 26789              		.loc 1 12360 13 is_stmt 1 view .LVU7573
 26790              		.loc 1 12360 27 is_stmt 0 view .LVU7574
 26791 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26792 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 26793              		.loc 1 12360 25 view .LVU7575
 26794 003c 2370     		strb	r3, [r4]
 26795              	.LVL3383:
 26796              	.L1819:
12361:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 745


12362:Core/Src/bno055.c ****         else
12363:Core/Src/bno055.c ****         {
12364:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12365:Core/Src/bno055.c ****         }
12366:Core/Src/bno055.c ****     }
12367:Core/Src/bno055.c **** 
12368:Core/Src/bno055.c ****     return com_rslt;
12369:Core/Src/bno055.c **** }
 26797              		.loc 1 12369 1 view .LVU7576
 26798 003e 03B0     		add	sp, sp, #12
 26799              	.LCFI751:
 26800              		.cfi_remember_state
 26801              		.cfi_def_cfa_offset 12
 26802              		@ sp needed
 26803 0040 30BD     		pop	{r4, r5, pc}
 26804              	.LVL3384:
 26805              	.L1825:
 26806              	.LCFI752:
 26807              		.cfi_restore_state
12352:Core/Src/bno055.c ****         }
 26808              		.loc 1 12352 13 is_stmt 1 view .LVU7577
12352:Core/Src/bno055.c ****         }
 26809              		.loc 1 12352 23 is_stmt 0 view .LVU7578
 26810 0042 0120     		movs	r0, #1
 26811              	.LVL3385:
12352:Core/Src/bno055.c ****         }
 26812              		.loc 1 12352 23 view .LVU7579
 26813 0044 FFF7FEFF 		bl	bno055_write_page_id
 26814              	.LVL3386:
12354:Core/Src/bno055.c ****         {
 26815              		.loc 1 12354 9 is_stmt 1 view .LVU7580
12354:Core/Src/bno055.c ****         {
 26816              		.loc 1 12354 12 is_stmt 0 view .LVU7581
 26817 0048 0028     		cmp	r0, #0
 26818 004a EAD0     		beq	.L1821
 26819 004c E4E7     		b	.L1820
 26820              	.LVL3387:
 26821              	.L1822:
12343:Core/Src/bno055.c ****     }
 26822              		.loc 1 12343 16 view .LVU7582
 26823 004e 6FF07E00 		mvn	r0, #126
 26824              	.LVL3388:
12343:Core/Src/bno055.c ****     }
 26825              		.loc 1 12343 16 view .LVU7583
 26826 0052 F4E7     		b	.L1819
 26827              	.LVL3389:
 26828              	.L1823:
12364:Core/Src/bno055.c ****         }
 26829              		.loc 1 12364 22 view .LVU7584
 26830 0054 4FF0FF30 		mov	r0, #-1
 26831 0058 F1E7     		b	.L1819
 26832              	.L1827:
 26833 005a 00BF     		.align	2
 26834              	.L1826:
 26835 005c 00000000 		.word	.LANCHOR0
 26836              		.cfi_endproc
 26837              	.LFE189:
ARM GAS  /tmp/ccO72alg.s 			page 746


 26839              		.section	.text.bno055_get_gyro_power_mode,"ax",%progbits
 26840              		.align	1
 26841              		.global	bno055_get_gyro_power_mode
 26842              		.syntax unified
 26843              		.thumb
 26844              		.thumb_func
 26846              	bno055_get_gyro_power_mode:
 26847              	.LVL3390:
 26848              	.LFB191:
12370:Core/Src/bno055.c **** 
12371:Core/Src/bno055.c **** /*!
12372:Core/Src/bno055.c ****  *  @brief This API used to write the gyro bandwidth
12373:Core/Src/bno055.c ****  *  from page one register from 0x0A bit 3 to 5
12374:Core/Src/bno055.c ****  *
12375:Core/Src/bno055.c ****  *  @param gyro_bw_u8 : The value of gyro bandwidth
12376:Core/Src/bno055.c ****  *
12377:Core/Src/bno055.c ****  *     gyro_bw_u8    |   result
12378:Core/Src/bno055.c ****  * --------------------|-----------------
12379:Core/Src/bno055.c ****  *     0x00            | BNO055_GYRO_BW_523HZ
12380:Core/Src/bno055.c ****  *     0x01            | BNO055_GYRO_BW_230HZ
12381:Core/Src/bno055.c ****  *     0x02            | BNO055_GYRO_BW_116HZ
12382:Core/Src/bno055.c ****  *     0x03            | BNO055_GYRO_BW_47HZ
12383:Core/Src/bno055.c ****  *     0x04            | BNO055_GYRO_BW_23HZ
12384:Core/Src/bno055.c ****  *     0x05            | BNO055_GYRO_BW_12HZ
12385:Core/Src/bno055.c ****  *     0x06            | BNO055_GYRO_BW_64HZ
12386:Core/Src/bno055.c ****  *     0x07            | BNO055_GYRO_BW_32HZ
12387:Core/Src/bno055.c ****  *
12388:Core/Src/bno055.c ****  *  @return results of bus communication function
12389:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12390:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12391:Core/Src/bno055.c ****  *
12392:Core/Src/bno055.c ****  *
12393:Core/Src/bno055.c ****  */
12394:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_bw(u8 gyro_bw_u8)
12395:Core/Src/bno055.c **** {
12396:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12397:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12398:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12399:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
12400:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12401:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12402:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12403:Core/Src/bno055.c **** 
12404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12406:Core/Src/bno055.c ****     {
12407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12408:Core/Src/bno055.c ****     }
12409:Core/Src/bno055.c ****     else
12410:Core/Src/bno055.c ****     {
12411:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12412:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12413:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12414:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12415:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12416:Core/Src/bno055.c ****         {
12417:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccO72alg.s 			page 747


12418:Core/Src/bno055.c ****             {
12419:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12420:Core/Src/bno055.c ****             }
12421:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12422:Core/Src/bno055.c ****             {
12423:Core/Src/bno055.c ****                 /* Write page as one */
12424:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12425:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12426:Core/Src/bno055.c ****                 {
12427:Core/Src/bno055.c ****                     /* Write the value of gyro bandwidth */
12428:Core/Src/bno055.c ****                     if ((gyro_bw_u8 == BNO055_INIT_VALUE || gyro_bw_u8 > BNO055_INIT_VALUE) &&
12429:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
12430:Core/Src/bno055.c ****                     {
12431:Core/Src/bno055.c ****                         switch (gyro_bw_u8)
12432:Core/Src/bno055.c ****                         {
12433:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
12434:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_523HZ;
12435:Core/Src/bno055.c ****                                 break;
12436:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
12437:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_230HZ;
12438:Core/Src/bno055.c ****                                 break;
12439:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
12440:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_116HZ;
12441:Core/Src/bno055.c ****                                 break;
12442:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
12443:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_47HZ;
12444:Core/Src/bno055.c ****                                 break;
12445:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
12446:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_23HZ;
12447:Core/Src/bno055.c ****                                 break;
12448:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
12449:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_12HZ;
12450:Core/Src/bno055.c ****                                 break;
12451:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
12452:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_64HZ;
12453:Core/Src/bno055.c ****                                 break;
12454:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
12455:Core/Src/bno055.c ****                                 gyro_bw_u8 = BNO055_GYRO_BW_32HZ;
12456:Core/Src/bno055.c ****                                 break;
12457:Core/Src/bno055.c ****                             default:
12458:Core/Src/bno055.c ****                                 break;
12459:Core/Src/bno055.c ****                         }
12460:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12461:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
12462:Core/Src/bno055.c ****                                                                   &data_u8r,
12463:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12464:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12465:Core/Src/bno055.c ****                         {
12466:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_BW, gyro_bw_u8);
12467:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12468:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
12469:Core/Src/bno055.c ****                                                                         &data_u8r,
12470:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12471:Core/Src/bno055.c ****                         }
12472:Core/Src/bno055.c ****                         com_rslt = bno055_get_gyro_power_mode(&gyro_opmode);
12473:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12474:Core/Src/bno055.c ****                         {
ARM GAS  /tmp/ccO72alg.s 			page 748


12475:Core/Src/bno055.c ****                             if (gyro_opmode == BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE)
12476:Core/Src/bno055.c ****                             {
12477:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12478:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12479:Core/Src/bno055.c ****                                 {
12480:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12481:Core/Src/bno055.c ****                                 }
12482:Core/Src/bno055.c ****                             }
12483:Core/Src/bno055.c ****                         }
12484:Core/Src/bno055.c ****                     }
12485:Core/Src/bno055.c ****                     else
12486:Core/Src/bno055.c ****                     {
12487:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12488:Core/Src/bno055.c ****                     }
12489:Core/Src/bno055.c ****                 }
12490:Core/Src/bno055.c ****                 else
12491:Core/Src/bno055.c ****                 {
12492:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12493:Core/Src/bno055.c ****                 }
12494:Core/Src/bno055.c ****             }
12495:Core/Src/bno055.c ****             else
12496:Core/Src/bno055.c ****             {
12497:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12498:Core/Src/bno055.c ****             }
12499:Core/Src/bno055.c ****         }
12500:Core/Src/bno055.c ****         else
12501:Core/Src/bno055.c ****         {
12502:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12503:Core/Src/bno055.c ****         }
12504:Core/Src/bno055.c ****     }
12505:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12506:Core/Src/bno055.c ****     {
12507:Core/Src/bno055.c ****         /* set the operation mode of
12508:Core/Src/bno055.c ****          * previous operation mode*/
12509:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12510:Core/Src/bno055.c ****     }
12511:Core/Src/bno055.c **** 
12512:Core/Src/bno055.c ****     return com_rslt;
12513:Core/Src/bno055.c **** }
12514:Core/Src/bno055.c **** 
12515:Core/Src/bno055.c **** /*!
12516:Core/Src/bno055.c ****  *  @brief This API used to read the gyro power mode
12517:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12518:Core/Src/bno055.c ****  *
12519:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
12520:Core/Src/bno055.c ****  *
12521:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12522:Core/Src/bno055.c ****  * ----------------------|----------------------------
12523:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12524:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12525:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12526:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12527:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12528:Core/Src/bno055.c ****  *
12529:Core/Src/bno055.c ****  *  @return results of bus communication function
12530:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12531:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
ARM GAS  /tmp/ccO72alg.s 			page 749


12532:Core/Src/bno055.c ****  *
12533:Core/Src/bno055.c ****  *
12534:Core/Src/bno055.c ****  */
12535:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_power_mode(u8 *gyro_power_mode_u8)
12536:Core/Src/bno055.c **** {
 26849              		.loc 1 12536 1 is_stmt 1 view -0
 26850              		.cfi_startproc
 26851              		@ args = 0, pretend = 0, frame = 8
 26852              		@ frame_needed = 0, uses_anonymous_args = 0
 26853              		.loc 1 12536 1 is_stmt 0 view .LVU7586
 26854 0000 30B5     		push	{r4, r5, lr}
 26855              	.LCFI753:
 26856              		.cfi_def_cfa_offset 12
 26857              		.cfi_offset 4, -12
 26858              		.cfi_offset 5, -8
 26859              		.cfi_offset 14, -4
 26860 0002 83B0     		sub	sp, sp, #12
 26861              	.LCFI754:
 26862              		.cfi_def_cfa_offset 24
12537:Core/Src/bno055.c ****     /* Variable used to return value of
12538:Core/Src/bno055.c ****      * communication routine*/
12539:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26863              		.loc 1 12539 5 is_stmt 1 view .LVU7587
 26864              	.LVL3391:
12540:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26865              		.loc 1 12540 5 view .LVU7588
 26866              		.loc 1 12540 8 is_stmt 0 view .LVU7589
 26867 0004 0023     		movs	r3, #0
 26868 0006 8DF80730 		strb	r3, [sp, #7]
12541:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26869              		.loc 1 12541 5 is_stmt 1 view .LVU7590
 26870              	.LVL3392:
12542:Core/Src/bno055.c **** 
12543:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12544:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 26871              		.loc 1 12544 5 view .LVU7591
 26872              		.loc 1 12544 18 is_stmt 0 view .LVU7592
 26873 000a 144B     		ldr	r3, .L1836
 26874 000c 1B68     		ldr	r3, [r3]
 26875              		.loc 1 12544 8 view .LVU7593
 26876 000e F3B1     		cbz	r3, .L1832
 26877 0010 0446     		mov	r4, r0
12545:Core/Src/bno055.c ****     {
12546:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12547:Core/Src/bno055.c ****     }
12548:Core/Src/bno055.c ****     else
12549:Core/Src/bno055.c ****     {
12550:Core/Src/bno055.c ****         /*condition check for page, gyro power mode is
12551:Core/Src/bno055.c ****          * available in the page one*/
12552:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26878              		.loc 1 12552 9 is_stmt 1 view .LVU7594
 26879              		.loc 1 12552 21 is_stmt 0 view .LVU7595
 26880 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26881              		.loc 1 12552 12 view .LVU7596
 26882 0014 012B     		cmp	r3, #1
 26883 0016 14D1     		bne	.L1835
 26884              	.LVL3393:
ARM GAS  /tmp/ccO72alg.s 			page 750


 26885              	.L1830:
12553:Core/Src/bno055.c ****         {
12554:Core/Src/bno055.c ****             /* Write page as one */
12555:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12556:Core/Src/bno055.c ****         }
12557:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 26886              		.loc 1 12557 53 discriminator 1 view .LVU7597
 26887 0018 104B     		ldr	r3, .L1836
 26888 001a 1B68     		ldr	r3, [r3]
 26889 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26890              		.loc 1 12557 41 discriminator 1 view .LVU7598
 26891 001e 012B     		cmp	r3, #1
 26892 0020 18D1     		bne	.L1833
 26893              	.L1831:
12558:Core/Src/bno055.c ****         {
12559:Core/Src/bno055.c ****             /* Write the value of gyro power mode*/
12560:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 26894              		.loc 1 12560 13 is_stmt 1 view .LVU7599
 26895              		.loc 1 12560 32 is_stmt 0 view .LVU7600
 26896 0022 0E4B     		ldr	r3, .L1836
 26897 0024 1868     		ldr	r0, [r3]
 26898 0026 0569     		ldr	r5, [r0, #16]
 26899              		.loc 1 12560 24 view .LVU7601
 26900 0028 0123     		movs	r3, #1
 26901 002a 0DF10702 		add	r2, sp, #7
 26902 002e 0B21     		movs	r1, #11
 26903 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 26904 0032 A847     		blx	r5
 26905              	.LVL3394:
12561:Core/Src/bno055.c ****                                                       BNO055_GYRO_POWER_MODE_REG,
12562:Core/Src/bno055.c ****                                                       &data_u8r,
12563:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12564:Core/Src/bno055.c ****             *gyro_power_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE);
 26906              		.loc 1 12564 13 is_stmt 1 view .LVU7602
 26907              		.loc 1 12564 35 is_stmt 0 view .LVU7603
 26908 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 26909 0038 03F00703 		and	r3, r3, #7
 26910              		.loc 1 12564 33 view .LVU7604
 26911 003c 2370     		strb	r3, [r4]
 26912              	.LVL3395:
 26913              	.L1829:
12565:Core/Src/bno055.c ****         }
12566:Core/Src/bno055.c ****         else
12567:Core/Src/bno055.c ****         {
12568:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12569:Core/Src/bno055.c ****         }
12570:Core/Src/bno055.c ****     }
12571:Core/Src/bno055.c **** 
12572:Core/Src/bno055.c ****     return com_rslt;
12573:Core/Src/bno055.c **** }
 26914              		.loc 1 12573 1 view .LVU7605
 26915 003e 03B0     		add	sp, sp, #12
 26916              	.LCFI755:
 26917              		.cfi_remember_state
 26918              		.cfi_def_cfa_offset 12
 26919              		@ sp needed
 26920 0040 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 751


 26921              	.LVL3396:
 26922              	.L1835:
 26923              	.LCFI756:
 26924              		.cfi_restore_state
12555:Core/Src/bno055.c ****         }
 26925              		.loc 1 12555 13 is_stmt 1 view .LVU7606
12555:Core/Src/bno055.c ****         }
 26926              		.loc 1 12555 23 is_stmt 0 view .LVU7607
 26927 0042 0120     		movs	r0, #1
 26928              	.LVL3397:
12555:Core/Src/bno055.c ****         }
 26929              		.loc 1 12555 23 view .LVU7608
 26930 0044 FFF7FEFF 		bl	bno055_write_page_id
 26931              	.LVL3398:
12557:Core/Src/bno055.c ****         {
 26932              		.loc 1 12557 9 is_stmt 1 view .LVU7609
12557:Core/Src/bno055.c ****         {
 26933              		.loc 1 12557 12 is_stmt 0 view .LVU7610
 26934 0048 0028     		cmp	r0, #0
 26935 004a EAD0     		beq	.L1831
 26936 004c E4E7     		b	.L1830
 26937              	.LVL3399:
 26938              	.L1832:
12546:Core/Src/bno055.c ****     }
 26939              		.loc 1 12546 16 view .LVU7611
 26940 004e 6FF07E00 		mvn	r0, #126
 26941              	.LVL3400:
12546:Core/Src/bno055.c ****     }
 26942              		.loc 1 12546 16 view .LVU7612
 26943 0052 F4E7     		b	.L1829
 26944              	.LVL3401:
 26945              	.L1833:
12568:Core/Src/bno055.c ****         }
 26946              		.loc 1 12568 22 view .LVU7613
 26947 0054 4FF0FF30 		mov	r0, #-1
 26948 0058 F1E7     		b	.L1829
 26949              	.L1837:
 26950 005a 00BF     		.align	2
 26951              	.L1836:
 26952 005c 00000000 		.word	.LANCHOR0
 26953              		.cfi_endproc
 26954              	.LFE191:
 26956              		.section	.text.bno055_get_accel_sleep_tmr_mode,"ax",%progbits
 26957              		.align	1
 26958              		.global	bno055_get_accel_sleep_tmr_mode
 26959              		.syntax unified
 26960              		.thumb
 26961              		.thumb_func
 26963              	bno055_get_accel_sleep_tmr_mode:
 26964              	.LVL3402:
 26965              	.LFB193:
12574:Core/Src/bno055.c **** 
12575:Core/Src/bno055.c **** /*!
12576:Core/Src/bno055.c ****  *  @brief This API used to write the gyro power mode
12577:Core/Src/bno055.c ****  *  from page one register from 0x0B bit 0 to 2
12578:Core/Src/bno055.c ****  *
12579:Core/Src/bno055.c ****  *  @param gyro_power_mode_u8 : The value of gyro power mode
ARM GAS  /tmp/ccO72alg.s 			page 752


12580:Core/Src/bno055.c ****  *
12581:Core/Src/bno055.c ****  *  gyro_power_mode_u8 |          result
12582:Core/Src/bno055.c ****  * ----------------------|----------------------------
12583:Core/Src/bno055.c ****  *     0x00              | GYRO_OPR_MODE_NORMAL
12584:Core/Src/bno055.c ****  *     0x01              | GYRO_OPR_MODE_FASTPOWERUP
12585:Core/Src/bno055.c ****  *     0x02              | GYRO_OPR_MODE_DEEPSUSPEND
12586:Core/Src/bno055.c ****  *     0x03              | GYRO_OPR_MODE_SUSPEND
12587:Core/Src/bno055.c ****  *     0x04              | GYRO_OPR_MODE_ADVANCE_POWERSAVE
12588:Core/Src/bno055.c ****  *
12589:Core/Src/bno055.c ****  *  @return results of bus communication function
12590:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12591:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12592:Core/Src/bno055.c ****  *
12593:Core/Src/bno055.c ****  *
12594:Core/Src/bno055.c ****  */
12595:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_power_mode(u8 gyro_power_mode_u8)
12596:Core/Src/bno055.c **** {
12597:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
12598:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
12599:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
12600:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
12601:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
12602:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
12603:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
12604:Core/Src/bno055.c **** 
12605:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12606:Core/Src/bno055.c ****     if (p_bno055 == NULL)
12607:Core/Src/bno055.c ****     {
12608:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12609:Core/Src/bno055.c ****     }
12610:Core/Src/bno055.c ****     else
12611:Core/Src/bno055.c ****     {
12612:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12613:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12614:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12615:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
12616:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
12617:Core/Src/bno055.c ****         {
12618:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12619:Core/Src/bno055.c ****             {
12620:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12621:Core/Src/bno055.c ****             }
12622:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
12623:Core/Src/bno055.c ****             {
12624:Core/Src/bno055.c ****                 /* Write page as one */
12625:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12626:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12627:Core/Src/bno055.c ****                 {
12628:Core/Src/bno055.c ****                     /* Write the value of power mode*/
12629:Core/Src/bno055.c ****                     if ((gyro_power_mode_u8 == BNO055_INIT_VALUE || gyro_power_mode_u8 > BNO055_INI
12630:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
12631:Core/Src/bno055.c ****                     {
12632:Core/Src/bno055.c ****                         switch (gyro_power_mode_u8)
12633:Core/Src/bno055.c ****                         {
12634:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_NORMAL:
12635:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_NORMAL;
12636:Core/Src/bno055.c ****                                 break;
ARM GAS  /tmp/ccO72alg.s 			page 753


12637:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_FASTPOWERUP:
12638:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_FASTPOWERUP;
12639:Core/Src/bno055.c ****                                 break;
12640:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_DEEPSUSPEND:
12641:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_DEEPSUSPEND;
12642:Core/Src/bno055.c ****                                 break;
12643:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_SUSPEND:
12644:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_SUSPEND;
12645:Core/Src/bno055.c ****                                 break;
12646:Core/Src/bno055.c ****                             case BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE:
12647:Core/Src/bno055.c ****                                 com_rslt = bno055_get_gyro_bw(&gyro_bw_u8);
12648:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
12649:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
12650:Core/Src/bno055.c ****                                 {
12651:Core/Src/bno055.c ****                                     com_rslt += bno055_gyro_set_auto_sleep_durn(gyro_auto_sleep_dur
12652:Core/Src/bno055.c ****                                 }
12653:Core/Src/bno055.c ****                                 com_rslt += bno055_write_page_id(BNO055_PAGE_ONE);
12654:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
12655:Core/Src/bno055.c ****                                 break;
12656:Core/Src/bno055.c ****                             default:
12657:Core/Src/bno055.c ****                                 break;
12658:Core/Src/bno055.c ****                         }
12659:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12660:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
12661:Core/Src/bno055.c ****                                                                   &data_u8r,
12662:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12663:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12664:Core/Src/bno055.c ****                         {
12665:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_POWER_MODE, gyro_p
12666:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12667:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
12668:Core/Src/bno055.c ****                                                                         &data_u8r,
12669:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12670:Core/Src/bno055.c ****                         }
12671:Core/Src/bno055.c ****                     }
12672:Core/Src/bno055.c ****                     else
12673:Core/Src/bno055.c ****                     {
12674:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12675:Core/Src/bno055.c ****                     }
12676:Core/Src/bno055.c ****                 }
12677:Core/Src/bno055.c ****                 else
12678:Core/Src/bno055.c ****                 {
12679:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12680:Core/Src/bno055.c ****                 }
12681:Core/Src/bno055.c ****             }
12682:Core/Src/bno055.c ****             else
12683:Core/Src/bno055.c ****             {
12684:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
12685:Core/Src/bno055.c ****             }
12686:Core/Src/bno055.c ****         }
12687:Core/Src/bno055.c ****         else
12688:Core/Src/bno055.c ****         {
12689:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12690:Core/Src/bno055.c ****         }
12691:Core/Src/bno055.c ****     }
12692:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
12693:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 754


12694:Core/Src/bno055.c ****         /* set the operation mode of
12695:Core/Src/bno055.c ****          * previous operation mode*/
12696:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12697:Core/Src/bno055.c ****     }
12698:Core/Src/bno055.c **** 
12699:Core/Src/bno055.c ****     return com_rslt;
12700:Core/Src/bno055.c **** }
12701:Core/Src/bno055.c **** 
12702:Core/Src/bno055.c **** /*!
12703:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep mode
12704:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12705:Core/Src/bno055.c ****  *
12706:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12707:Core/Src/bno055.c ****  *
12708:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12709:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12710:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12711:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12712:Core/Src/bno055.c ****  *
12713:Core/Src/bno055.c ****  *  @return results of bus communication function
12714:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12715:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12716:Core/Src/bno055.c ****  *
12717:Core/Src/bno055.c ****  *
12718:Core/Src/bno055.c ****  */
12719:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_tmr_mode(u8 *sleep_tmr_u8)
12720:Core/Src/bno055.c **** {
 26966              		.loc 1 12720 1 is_stmt 1 view -0
 26967              		.cfi_startproc
 26968              		@ args = 0, pretend = 0, frame = 8
 26969              		@ frame_needed = 0, uses_anonymous_args = 0
 26970              		.loc 1 12720 1 is_stmt 0 view .LVU7615
 26971 0000 30B5     		push	{r4, r5, lr}
 26972              	.LCFI757:
 26973              		.cfi_def_cfa_offset 12
 26974              		.cfi_offset 4, -12
 26975              		.cfi_offset 5, -8
 26976              		.cfi_offset 14, -4
 26977 0002 83B0     		sub	sp, sp, #12
 26978              	.LCFI758:
 26979              		.cfi_def_cfa_offset 24
12721:Core/Src/bno055.c ****     /* Variable used to return value of
12722:Core/Src/bno055.c ****      * communication routine*/
12723:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 26980              		.loc 1 12723 5 is_stmt 1 view .LVU7616
 26981              	.LVL3403:
12724:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 26982              		.loc 1 12724 5 view .LVU7617
 26983              		.loc 1 12724 8 is_stmt 0 view .LVU7618
 26984 0004 0023     		movs	r3, #0
 26985 0006 8DF80730 		strb	r3, [sp, #7]
12725:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 26986              		.loc 1 12725 5 is_stmt 1 view .LVU7619
 26987              	.LVL3404:
12726:Core/Src/bno055.c **** 
12727:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12728:Core/Src/bno055.c ****     if (p_bno055 == NULL)
ARM GAS  /tmp/ccO72alg.s 			page 755


 26988              		.loc 1 12728 5 view .LVU7620
 26989              		.loc 1 12728 18 is_stmt 0 view .LVU7621
 26990 000a 144B     		ldr	r3, .L1846
 26991 000c 1B68     		ldr	r3, [r3]
 26992              		.loc 1 12728 8 view .LVU7622
 26993 000e F3B1     		cbz	r3, .L1842
 26994 0010 0446     		mov	r4, r0
12729:Core/Src/bno055.c ****     {
12730:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12731:Core/Src/bno055.c ****     }
12732:Core/Src/bno055.c ****     else
12733:Core/Src/bno055.c ****     {
12734:Core/Src/bno055.c ****         /*condition check for page, accel sleep mode is
12735:Core/Src/bno055.c ****          * available in the page one*/
12736:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 26995              		.loc 1 12736 9 is_stmt 1 view .LVU7623
 26996              		.loc 1 12736 21 is_stmt 0 view .LVU7624
 26997 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 26998              		.loc 1 12736 12 view .LVU7625
 26999 0014 012B     		cmp	r3, #1
 27000 0016 14D1     		bne	.L1845
 27001              	.LVL3405:
 27002              	.L1840:
12737:Core/Src/bno055.c ****         {
12738:Core/Src/bno055.c ****             /* Write page as one */
12739:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12740:Core/Src/bno055.c ****         }
12741:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27003              		.loc 1 12741 53 discriminator 1 view .LVU7626
 27004 0018 104B     		ldr	r3, .L1846
 27005 001a 1B68     		ldr	r3, [r3]
 27006 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27007              		.loc 1 12741 41 discriminator 1 view .LVU7627
 27008 001e 012B     		cmp	r3, #1
 27009 0020 18D1     		bne	.L1843
 27010              	.L1841:
12742:Core/Src/bno055.c ****         {
12743:Core/Src/bno055.c ****             /* read the value of accel sleep mode */
12744:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27011              		.loc 1 12744 13 is_stmt 1 view .LVU7628
 27012              		.loc 1 12744 32 is_stmt 0 view .LVU7629
 27013 0022 0E4B     		ldr	r3, .L1846
 27014 0024 1868     		ldr	r0, [r3]
 27015 0026 0569     		ldr	r5, [r0, #16]
 27016              		.loc 1 12744 24 view .LVU7630
 27017 0028 0123     		movs	r3, #1
 27018 002a 0DF10702 		add	r2, sp, #7
 27019 002e 0C21     		movs	r1, #12
 27020 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27021 0032 A847     		blx	r5
 27022              	.LVL3406:
12745:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_MODE_REG,
12746:Core/Src/bno055.c ****                                                       &data_u8r,
12747:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12748:Core/Src/bno055.c ****             *sleep_tmr_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE);
 27023              		.loc 1 12748 13 is_stmt 1 view .LVU7631
 27024              		.loc 1 12748 29 is_stmt 0 view .LVU7632
ARM GAS  /tmp/ccO72alg.s 			page 756


 27025 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27026 0038 03F00103 		and	r3, r3, #1
 27027              		.loc 1 12748 27 view .LVU7633
 27028 003c 2370     		strb	r3, [r4]
 27029              	.LVL3407:
 27030              	.L1839:
12749:Core/Src/bno055.c ****         }
12750:Core/Src/bno055.c ****         else
12751:Core/Src/bno055.c ****         {
12752:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12753:Core/Src/bno055.c ****         }
12754:Core/Src/bno055.c ****     }
12755:Core/Src/bno055.c **** 
12756:Core/Src/bno055.c ****     return com_rslt;
12757:Core/Src/bno055.c **** }
 27031              		.loc 1 12757 1 view .LVU7634
 27032 003e 03B0     		add	sp, sp, #12
 27033              	.LCFI759:
 27034              		.cfi_remember_state
 27035              		.cfi_def_cfa_offset 12
 27036              		@ sp needed
 27037 0040 30BD     		pop	{r4, r5, pc}
 27038              	.LVL3408:
 27039              	.L1845:
 27040              	.LCFI760:
 27041              		.cfi_restore_state
12739:Core/Src/bno055.c ****         }
 27042              		.loc 1 12739 13 is_stmt 1 view .LVU7635
12739:Core/Src/bno055.c ****         }
 27043              		.loc 1 12739 23 is_stmt 0 view .LVU7636
 27044 0042 0120     		movs	r0, #1
 27045              	.LVL3409:
12739:Core/Src/bno055.c ****         }
 27046              		.loc 1 12739 23 view .LVU7637
 27047 0044 FFF7FEFF 		bl	bno055_write_page_id
 27048              	.LVL3410:
12741:Core/Src/bno055.c ****         {
 27049              		.loc 1 12741 9 is_stmt 1 view .LVU7638
12741:Core/Src/bno055.c ****         {
 27050              		.loc 1 12741 12 is_stmt 0 view .LVU7639
 27051 0048 0028     		cmp	r0, #0
 27052 004a EAD0     		beq	.L1841
 27053 004c E4E7     		b	.L1840
 27054              	.LVL3411:
 27055              	.L1842:
12730:Core/Src/bno055.c ****     }
 27056              		.loc 1 12730 16 view .LVU7640
 27057 004e 6FF07E00 		mvn	r0, #126
 27058              	.LVL3412:
12730:Core/Src/bno055.c ****     }
 27059              		.loc 1 12730 16 view .LVU7641
 27060 0052 F4E7     		b	.L1839
 27061              	.LVL3413:
 27062              	.L1843:
12752:Core/Src/bno055.c ****         }
 27063              		.loc 1 12752 22 view .LVU7642
 27064 0054 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccO72alg.s 			page 757


 27065 0058 F1E7     		b	.L1839
 27066              	.L1847:
 27067 005a 00BF     		.align	2
 27068              	.L1846:
 27069 005c 00000000 		.word	.LANCHOR0
 27070              		.cfi_endproc
 27071              	.LFE193:
 27073              		.section	.text.bno055_set_accel_sleep_tmr_mode,"ax",%progbits
 27074              		.align	1
 27075              		.global	bno055_set_accel_sleep_tmr_mode
 27076              		.syntax unified
 27077              		.thumb
 27078              		.thumb_func
 27080              	bno055_set_accel_sleep_tmr_mode:
 27081              	.LVL3414:
 27082              	.LFB194:
12758:Core/Src/bno055.c **** 
12759:Core/Src/bno055.c **** /*!
12760:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep mode
12761:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 0
12762:Core/Src/bno055.c ****  *
12763:Core/Src/bno055.c ****  *  @param sleep_tmr_u8 : The value of accel sleep mode
12764:Core/Src/bno055.c ****  *
12765:Core/Src/bno055.c ****  *  sleep_tmr_u8   |   result
12766:Core/Src/bno055.c ****  * ----------------- |------------------------------------
12767:Core/Src/bno055.c ****  *     0x00          | enable EventDrivenSampling(EDT)
12768:Core/Src/bno055.c ****  *     0x01          | enable Equidistant sampling mode(EST)
12769:Core/Src/bno055.c ****  *
12770:Core/Src/bno055.c ****  *  @return results of bus communication function
12771:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12772:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12773:Core/Src/bno055.c ****  *
12774:Core/Src/bno055.c ****  *
12775:Core/Src/bno055.c ****  */
12776:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_tmr_mode(u8 sleep_tmr_u8)
12777:Core/Src/bno055.c **** {
 27083              		.loc 1 12777 1 is_stmt 1 view -0
 27084              		.cfi_startproc
 27085              		@ args = 0, pretend = 0, frame = 8
 27086              		@ frame_needed = 0, uses_anonymous_args = 0
 27087              		.loc 1 12777 1 is_stmt 0 view .LVU7644
 27088 0000 30B5     		push	{r4, r5, lr}
 27089              	.LCFI761:
 27090              		.cfi_def_cfa_offset 12
 27091              		.cfi_offset 4, -12
 27092              		.cfi_offset 5, -8
 27093              		.cfi_offset 14, -4
 27094 0002 83B0     		sub	sp, sp, #12
 27095              	.LCFI762:
 27096              		.cfi_def_cfa_offset 24
12778:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27097              		.loc 1 12778 5 is_stmt 1 view .LVU7645
 27098              	.LVL3415:
12779:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27099              		.loc 1 12779 5 view .LVU7646
 27100              		.loc 1 12779 8 is_stmt 0 view .LVU7647
 27101 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 758


 27102 0006 8DF80730 		strb	r3, [sp, #7]
12780:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27103              		.loc 1 12780 5 is_stmt 1 view .LVU7648
 27104              	.LVL3416:
12781:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27105              		.loc 1 12781 5 view .LVU7649
 27106              		.loc 1 12781 8 is_stmt 0 view .LVU7650
 27107 000a 8DF80630 		strb	r3, [sp, #6]
12782:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27108              		.loc 1 12782 5 is_stmt 1 view .LVU7651
 27109              	.LVL3417:
12783:Core/Src/bno055.c **** 
12784:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12785:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27110              		.loc 1 12785 5 view .LVU7652
 27111              		.loc 1 12785 18 is_stmt 0 view .LVU7653
 27112 000e 2C4B     		ldr	r3, .L1862
 27113 0010 1B68     		ldr	r3, [r3]
 27114              		.loc 1 12785 8 view .LVU7654
 27115 0012 002B     		cmp	r3, #0
 27116 0014 50D0     		beq	.L1852
 27117 0016 0546     		mov	r5, r0
12786:Core/Src/bno055.c ****     {
12787:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12788:Core/Src/bno055.c ****     }
12789:Core/Src/bno055.c ****     else
12790:Core/Src/bno055.c ****     {
12791:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12792:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12793:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12794:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27118              		.loc 1 12794 9 is_stmt 1 view .LVU7655
 27119              		.loc 1 12794 19 is_stmt 0 view .LVU7656
 27120 0018 0DF10600 		add	r0, sp, #6
 27121              	.LVL3418:
 27122              		.loc 1 12794 19 view .LVU7657
 27123 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27124              	.LVL3419:
12795:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27125              		.loc 1 12795 9 is_stmt 1 view .LVU7658
 27126              		.loc 1 12795 12 is_stmt 0 view .LVU7659
 27127 0020 0446     		mov	r4, r0
 27128 0022 0028     		cmp	r0, #0
 27129 0024 37D1     		bne	.L1853
12796:Core/Src/bno055.c ****         {
12797:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27130              		.loc 1 12797 13 is_stmt 1 view .LVU7660
 27131              		.loc 1 12797 32 is_stmt 0 view .LVU7661
 27132 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27133              		.loc 1 12797 16 view .LVU7662
 27134 002a 1BB9     		cbnz	r3, .L1858
 27135              	.LVL3420:
 27136              	.L1851:
12798:Core/Src/bno055.c ****             {
12799:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12800:Core/Src/bno055.c ****             }
12801:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 759


 27137              		.loc 1 12801 13 is_stmt 1 view .LVU7663
 27138              		.loc 1 12801 16 is_stmt 0 view .LVU7664
 27139 002c 44B1     		cbz	r4, .L1859
12802:Core/Src/bno055.c ****             {
12803:Core/Src/bno055.c ****                 /* Write page as one */
12804:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12805:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12806:Core/Src/bno055.c ****                 {
12807:Core/Src/bno055.c ****                     if (sleep_tmr_u8 < BNO055_ACCEL_SLEEP_MODE_RANGE)
12808:Core/Src/bno055.c ****                     {
12809:Core/Src/bno055.c ****                         /*Write the value
12810:Core/Src/bno055.c ****                          * of accel sleep mode*/
12811:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12812:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
12813:Core/Src/bno055.c ****                                                                   &data_u8r,
12814:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12815:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12816:Core/Src/bno055.c ****                         {
12817:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_MODE, sleep
12818:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12819:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
12820:Core/Src/bno055.c ****                                                                         &data_u8r,
12821:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12822:Core/Src/bno055.c ****                         }
12823:Core/Src/bno055.c ****                     }
12824:Core/Src/bno055.c ****                     else
12825:Core/Src/bno055.c ****                     {
12826:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12827:Core/Src/bno055.c ****                     }
12828:Core/Src/bno055.c ****                 }
12829:Core/Src/bno055.c ****                 else
12830:Core/Src/bno055.c ****                 {
12831:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
12832:Core/Src/bno055.c ****                 }
12833:Core/Src/bno055.c ****             }
12834:Core/Src/bno055.c ****             else
12835:Core/Src/bno055.c ****             {
12836:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27140              		.loc 1 12836 26 view .LVU7665
 27141 002e 4FF0FF34 		mov	r4, #-1
 27142              	.LVL3421:
 27143              		.loc 1 12836 26 view .LVU7666
 27144 0032 32E0     		b	.L1850
 27145              	.LVL3422:
 27146              	.L1858:
12799:Core/Src/bno055.c ****             }
 27147              		.loc 1 12799 17 is_stmt 1 view .LVU7667
12799:Core/Src/bno055.c ****             }
 27148              		.loc 1 12799 28 is_stmt 0 view .LVU7668
 27149 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27150              	.LVL3423:
12799:Core/Src/bno055.c ****             }
 27151              		.loc 1 12799 25 view .LVU7669
 27152 0038 54FA80F4 		uxtab	r4, r4, r0
 27153 003c 64B2     		sxtb	r4, r4
 27154              	.LVL3424:
12799:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 760


 27155              		.loc 1 12799 25 view .LVU7670
 27156 003e F5E7     		b	.L1851
 27157              	.L1859:
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27158              		.loc 1 12804 17 is_stmt 1 view .LVU7671
12804:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27159              		.loc 1 12804 30 is_stmt 0 view .LVU7672
 27160 0040 0120     		movs	r0, #1
 27161 0042 FFF7FEFF 		bl	bno055_write_page_id
 27162              	.LVL3425:
12805:Core/Src/bno055.c ****                 {
 27163              		.loc 1 12805 17 is_stmt 1 view .LVU7673
12805:Core/Src/bno055.c ****                 {
 27164              		.loc 1 12805 20 is_stmt 0 view .LVU7674
 27165 0046 70BB     		cbnz	r0, .L1855
12807:Core/Src/bno055.c ****                     {
 27166              		.loc 1 12807 21 is_stmt 1 view .LVU7675
12807:Core/Src/bno055.c ****                     {
 27167              		.loc 1 12807 24 is_stmt 0 view .LVU7676
 27168 0048 012D     		cmp	r5, #1
 27169 004a 02D9     		bls	.L1860
12826:Core/Src/bno055.c ****                     }
 27170              		.loc 1 12826 34 view .LVU7677
 27171 004c 6FF00104 		mvn	r4, #1
 27172              	.LVL3426:
12826:Core/Src/bno055.c ****                     }
 27173              		.loc 1 12826 34 view .LVU7678
 27174 0050 23E0     		b	.L1850
 27175              	.LVL3427:
 27176              	.L1860:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27177              		.loc 1 12811 25 is_stmt 1 view .LVU7679
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27178              		.loc 1 12811 44 is_stmt 0 view .LVU7680
 27179 0052 1B4B     		ldr	r3, .L1862
 27180 0054 1868     		ldr	r0, [r3]
 27181              	.LVL3428:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27182              		.loc 1 12811 44 view .LVU7681
 27183 0056 0469     		ldr	r4, [r0, #16]
 27184              	.LVL3429:
12811:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_MODE_REG,
 27185              		.loc 1 12811 36 view .LVU7682
 27186 0058 0123     		movs	r3, #1
 27187 005a 0DF10702 		add	r2, sp, #7
 27188 005e 0C21     		movs	r1, #12
 27189 0060 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27190 0062 A047     		blx	r4
 27191              	.LVL3430:
12815:Core/Src/bno055.c ****                         {
 27192              		.loc 1 12815 25 is_stmt 1 view .LVU7683
12815:Core/Src/bno055.c ****                         {
 27193              		.loc 1 12815 28 is_stmt 0 view .LVU7684
 27194 0064 0446     		mov	r4, r0
 27195 0066 C0B9     		cbnz	r0, .L1850
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27196              		.loc 1 12817 29 is_stmt 1 view .LVU7685
ARM GAS  /tmp/ccO72alg.s 			page 761


12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27197              		.loc 1 12817 40 is_stmt 0 view .LVU7686
 27198 0068 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 27199              	.LVL3431:
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27200              		.loc 1 12817 40 view .LVU7687
 27201 006c 20F00100 		bic	r0, r0, #1
 27202 0070 43B2     		sxtb	r3, r0
 27203 0072 05F00100 		and	r0, r5, #1
 27204 0076 1843     		orrs	r0, r0, r3
12817:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27205              		.loc 1 12817 38 view .LVU7688
 27206 0078 8DF80700 		strb	r0, [sp, #7]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27207              		.loc 1 12818 29 is_stmt 1 view .LVU7689
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27208              		.loc 1 12818 49 is_stmt 0 view .LVU7690
 27209 007c 104B     		ldr	r3, .L1862
 27210 007e 1868     		ldr	r0, [r3]
 27211 0080 C568     		ldr	r5, [r0, #12]
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27212              		.loc 1 12818 41 view .LVU7691
 27213 0082 0123     		movs	r3, #1
 27214 0084 0DF10702 		add	r2, sp, #7
 27215 0088 0C21     		movs	r1, #12
 27216 008a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27217 008c A847     		blx	r5
 27218              	.LVL3432:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27219              		.loc 1 12818 38 view .LVU7692
 27220 008e 54FA80F4 		uxtab	r4, r4, r0
 27221 0092 64B2     		sxtb	r4, r4
 27222              	.LVL3433:
12818:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_MODE_REG
 27223              		.loc 1 12818 38 view .LVU7693
 27224 0094 01E0     		b	.L1850
 27225              	.LVL3434:
 27226              	.L1853:
12837:Core/Src/bno055.c ****             }
12838:Core/Src/bno055.c ****         }
12839:Core/Src/bno055.c ****         else
12840:Core/Src/bno055.c ****         {
12841:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27227              		.loc 1 12841 22 view .LVU7694
 27228 0096 4FF0FF34 		mov	r4, #-1
 27229              	.LVL3435:
 27230              	.L1850:
12842:Core/Src/bno055.c ****         }
12843:Core/Src/bno055.c ****     }
12844:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27231              		.loc 1 12844 5 is_stmt 1 view .LVU7695
 27232              		.loc 1 12844 24 is_stmt 0 view .LVU7696
 27233 009a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27234              		.loc 1 12844 8 view .LVU7697
 27235 009e 28B9     		cbnz	r0, .L1861
 27236              	.LVL3436:
 27237              	.L1849:
ARM GAS  /tmp/ccO72alg.s 			page 762


12845:Core/Src/bno055.c ****     {
12846:Core/Src/bno055.c ****         /* set the operation mode of
12847:Core/Src/bno055.c ****          * previous operation mode*/
12848:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
12849:Core/Src/bno055.c ****     }
12850:Core/Src/bno055.c **** 
12851:Core/Src/bno055.c ****     return com_rslt;
12852:Core/Src/bno055.c **** }
 27238              		.loc 1 12852 1 view .LVU7698
 27239 00a0 2046     		mov	r0, r4
 27240 00a2 03B0     		add	sp, sp, #12
 27241              	.LCFI763:
 27242              		.cfi_remember_state
 27243              		.cfi_def_cfa_offset 12
 27244              		@ sp needed
 27245 00a4 30BD     		pop	{r4, r5, pc}
 27246              	.LVL3437:
 27247              	.L1855:
 27248              	.LCFI764:
 27249              		.cfi_restore_state
12831:Core/Src/bno055.c ****                 }
 27250              		.loc 1 12831 30 view .LVU7699
 27251 00a6 4FF0FF34 		mov	r4, #-1
 27252              	.LVL3438:
12831:Core/Src/bno055.c ****                 }
 27253              		.loc 1 12831 30 view .LVU7700
 27254 00aa F6E7     		b	.L1850
 27255              	.LVL3439:
 27256              	.L1861:
12848:Core/Src/bno055.c ****     }
 27257              		.loc 1 12848 9 is_stmt 1 view .LVU7701
12848:Core/Src/bno055.c ****     }
 27258              		.loc 1 12848 21 is_stmt 0 view .LVU7702
 27259 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 27260              	.LVL3440:
12848:Core/Src/bno055.c ****     }
 27261              		.loc 1 12848 18 view .LVU7703
 27262 00b0 54FA80F4 		uxtab	r4, r4, r0
 27263              	.LVL3441:
12848:Core/Src/bno055.c ****     }
 27264              		.loc 1 12848 18 view .LVU7704
 27265 00b4 64B2     		sxtb	r4, r4
 27266              	.LVL3442:
12848:Core/Src/bno055.c ****     }
 27267              		.loc 1 12848 18 view .LVU7705
 27268 00b6 F3E7     		b	.L1849
 27269              	.LVL3443:
 27270              	.L1852:
12787:Core/Src/bno055.c ****     }
 27271              		.loc 1 12787 16 view .LVU7706
 27272 00b8 6FF07E04 		mvn	r4, #126
 27273 00bc F0E7     		b	.L1849
 27274              	.L1863:
 27275 00be 00BF     		.align	2
 27276              	.L1862:
 27277 00c0 00000000 		.word	.LANCHOR0
 27278              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 763


 27279              	.LFE194:
 27281              		.section	.text.bno055_get_accel_sleep_durn,"ax",%progbits
 27282              		.align	1
 27283              		.global	bno055_get_accel_sleep_durn
 27284              		.syntax unified
 27285              		.thumb
 27286              		.thumb_func
 27288              	bno055_get_accel_sleep_durn:
 27289              	.LVL3444:
 27290              	.LFB195:
12853:Core/Src/bno055.c **** 
12854:Core/Src/bno055.c **** /*!
12855:Core/Src/bno055.c ****  *  @brief This API used to read the accel sleep duration
12856:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
12857:Core/Src/bno055.c ****  *
12858:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12859:Core/Src/bno055.c ****  *
12860:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12861:Core/Src/bno055.c ****  * ---------------- |-----------------------------
12862:Core/Src/bno055.c ****  *     0x05         | BNO055_ACCEL_SLEEP_DURN_0_5MS
12863:Core/Src/bno055.c ****  *     0x06         | BNO055_ACCEL_SLEEP_DURN_1MS
12864:Core/Src/bno055.c ****  *     0x07         | BNO055_ACCEL_SLEEP_DURN_2MS
12865:Core/Src/bno055.c ****  *     0x08         | BNO055_ACCEL_SLEEP_DURN_4MS
12866:Core/Src/bno055.c ****  *     0x09         | BNO055_ACCEL_SLEEP_DURN_6MS
12867:Core/Src/bno055.c ****  *     0x0A         | BNO055_ACCEL_SLEEP_DURN_10MS
12868:Core/Src/bno055.c ****  *     0x0B         | BNO055_ACCEL_SLEEP_DURN_25MS
12869:Core/Src/bno055.c ****  *     0x0C         | BNO055_ACCEL_SLEEP_DURN_50MS
12870:Core/Src/bno055.c ****  *     0x0D         | BNO055_ACCEL_SLEEP_DURN_100MS
12871:Core/Src/bno055.c ****  *     0x0E         | BNO055_ACCEL_SLEEP_DURN_500MS
12872:Core/Src/bno055.c ****  *     0x0F         | BNO055_ACCEL_SLEEP_DURN_1S
12873:Core/Src/bno055.c ****  *
12874:Core/Src/bno055.c ****  *  @return results of bus communication function
12875:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12876:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12877:Core/Src/bno055.c ****  *
12878:Core/Src/bno055.c ****  *
12879:Core/Src/bno055.c ****  */
12880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_sleep_durn(u8 *sleep_durn_u8)
12881:Core/Src/bno055.c **** {
 27291              		.loc 1 12881 1 is_stmt 1 view -0
 27292              		.cfi_startproc
 27293              		@ args = 0, pretend = 0, frame = 8
 27294              		@ frame_needed = 0, uses_anonymous_args = 0
 27295              		.loc 1 12881 1 is_stmt 0 view .LVU7708
 27296 0000 30B5     		push	{r4, r5, lr}
 27297              	.LCFI765:
 27298              		.cfi_def_cfa_offset 12
 27299              		.cfi_offset 4, -12
 27300              		.cfi_offset 5, -8
 27301              		.cfi_offset 14, -4
 27302 0002 83B0     		sub	sp, sp, #12
 27303              	.LCFI766:
 27304              		.cfi_def_cfa_offset 24
12882:Core/Src/bno055.c ****     /* Variable used to return value of
12883:Core/Src/bno055.c ****      * communication routine*/
12884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27305              		.loc 1 12884 5 is_stmt 1 view .LVU7709
ARM GAS  /tmp/ccO72alg.s 			page 764


 27306              	.LVL3445:
12885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27307              		.loc 1 12885 5 view .LVU7710
 27308              		.loc 1 12885 8 is_stmt 0 view .LVU7711
 27309 0004 0023     		movs	r3, #0
 27310 0006 8DF80730 		strb	r3, [sp, #7]
12886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27311              		.loc 1 12886 5 is_stmt 1 view .LVU7712
 27312              	.LVL3446:
12887:Core/Src/bno055.c **** 
12888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27313              		.loc 1 12889 5 view .LVU7713
 27314              		.loc 1 12889 18 is_stmt 0 view .LVU7714
 27315 000a 144B     		ldr	r3, .L1872
 27316 000c 1B68     		ldr	r3, [r3]
 27317              		.loc 1 12889 8 view .LVU7715
 27318 000e F3B1     		cbz	r3, .L1868
 27319 0010 0446     		mov	r4, r0
12890:Core/Src/bno055.c ****     {
12891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12892:Core/Src/bno055.c ****     }
12893:Core/Src/bno055.c ****     else
12894:Core/Src/bno055.c ****     {
12895:Core/Src/bno055.c ****         /*condition check for page, accel sleep duration
12896:Core/Src/bno055.c ****          * available in the page one*/
12897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27320              		.loc 1 12897 9 is_stmt 1 view .LVU7716
 27321              		.loc 1 12897 21 is_stmt 0 view .LVU7717
 27322 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27323              		.loc 1 12897 12 view .LVU7718
 27324 0014 012B     		cmp	r3, #1
 27325 0016 14D1     		bne	.L1871
 27326              	.LVL3447:
 27327              	.L1866:
12898:Core/Src/bno055.c ****         {
12899:Core/Src/bno055.c ****             /* Write page as one */
12900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12901:Core/Src/bno055.c ****         }
12902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27328              		.loc 1 12902 53 discriminator 1 view .LVU7719
 27329 0018 104B     		ldr	r3, .L1872
 27330 001a 1B68     		ldr	r3, [r3]
 27331 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27332              		.loc 1 12902 41 discriminator 1 view .LVU7720
 27333 001e 012B     		cmp	r3, #1
 27334 0020 18D1     		bne	.L1869
 27335              	.L1867:
12903:Core/Src/bno055.c ****         {
12904:Core/Src/bno055.c ****             /* Read the value of accel sleep duration */
12905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27336              		.loc 1 12905 13 is_stmt 1 view .LVU7721
 27337              		.loc 1 12905 32 is_stmt 0 view .LVU7722
 27338 0022 0E4B     		ldr	r3, .L1872
 27339 0024 1868     		ldr	r0, [r3]
 27340 0026 0569     		ldr	r5, [r0, #16]
 27341              		.loc 1 12905 24 view .LVU7723
ARM GAS  /tmp/ccO72alg.s 			page 765


 27342 0028 0123     		movs	r3, #1
 27343 002a 0DF10702 		add	r2, sp, #7
 27344 002e 0C21     		movs	r1, #12
 27345 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27346 0032 A847     		blx	r5
 27347              	.LVL3448:
12906:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLEEP_DURN_REG,
12907:Core/Src/bno055.c ****                                                       &data_u8r,
12908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
12909:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN);
 27348              		.loc 1 12909 13 is_stmt 1 view .LVU7724
 27349              		.loc 1 12909 30 is_stmt 0 view .LVU7725
 27350 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27351 0038 C3F34303 		ubfx	r3, r3, #1, #4
 27352              		.loc 1 12909 28 view .LVU7726
 27353 003c 2370     		strb	r3, [r4]
 27354              	.LVL3449:
 27355              	.L1865:
12910:Core/Src/bno055.c ****         }
12911:Core/Src/bno055.c ****         else
12912:Core/Src/bno055.c ****         {
12913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
12914:Core/Src/bno055.c ****         }
12915:Core/Src/bno055.c ****     }
12916:Core/Src/bno055.c **** 
12917:Core/Src/bno055.c ****     return com_rslt;
12918:Core/Src/bno055.c **** }
 27356              		.loc 1 12918 1 view .LVU7727
 27357 003e 03B0     		add	sp, sp, #12
 27358              	.LCFI767:
 27359              		.cfi_remember_state
 27360              		.cfi_def_cfa_offset 12
 27361              		@ sp needed
 27362 0040 30BD     		pop	{r4, r5, pc}
 27363              	.LVL3450:
 27364              	.L1871:
 27365              	.LCFI768:
 27366              		.cfi_restore_state
12900:Core/Src/bno055.c ****         }
 27367              		.loc 1 12900 13 is_stmt 1 view .LVU7728
12900:Core/Src/bno055.c ****         }
 27368              		.loc 1 12900 23 is_stmt 0 view .LVU7729
 27369 0042 0120     		movs	r0, #1
 27370              	.LVL3451:
12900:Core/Src/bno055.c ****         }
 27371              		.loc 1 12900 23 view .LVU7730
 27372 0044 FFF7FEFF 		bl	bno055_write_page_id
 27373              	.LVL3452:
12902:Core/Src/bno055.c ****         {
 27374              		.loc 1 12902 9 is_stmt 1 view .LVU7731
12902:Core/Src/bno055.c ****         {
 27375              		.loc 1 12902 12 is_stmt 0 view .LVU7732
 27376 0048 0028     		cmp	r0, #0
 27377 004a EAD0     		beq	.L1867
 27378 004c E4E7     		b	.L1866
 27379              	.LVL3453:
 27380              	.L1868:
ARM GAS  /tmp/ccO72alg.s 			page 766


12891:Core/Src/bno055.c ****     }
 27381              		.loc 1 12891 16 view .LVU7733
 27382 004e 6FF07E00 		mvn	r0, #126
 27383              	.LVL3454:
12891:Core/Src/bno055.c ****     }
 27384              		.loc 1 12891 16 view .LVU7734
 27385 0052 F4E7     		b	.L1865
 27386              	.LVL3455:
 27387              	.L1869:
12913:Core/Src/bno055.c ****         }
 27388              		.loc 1 12913 22 view .LVU7735
 27389 0054 4FF0FF30 		mov	r0, #-1
 27390 0058 F1E7     		b	.L1865
 27391              	.L1873:
 27392 005a 00BF     		.align	2
 27393              	.L1872:
 27394 005c 00000000 		.word	.LANCHOR0
 27395              		.cfi_endproc
 27396              	.LFE195:
 27398              		.section	.text.bno055_set_accel_sleep_durn,"ax",%progbits
 27399              		.align	1
 27400              		.global	bno055_set_accel_sleep_durn
 27401              		.syntax unified
 27402              		.thumb
 27403              		.thumb_func
 27405              	bno055_set_accel_sleep_durn:
 27406              	.LVL3456:
 27407              	.LFB196:
12919:Core/Src/bno055.c **** 
12920:Core/Src/bno055.c **** /*!
12921:Core/Src/bno055.c ****  *  @brief This API used to write the accel sleep duration
12922:Core/Src/bno055.c ****  *  from page one register from 0x0C bit 1 to 4
12923:Core/Src/bno055.c ****  *
12924:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of accel sleep duration
12925:Core/Src/bno055.c ****  *
12926:Core/Src/bno055.c ****  * sleep_durn_u8  |      result
12927:Core/Src/bno055.c ****  * ---------------|-----------------------------
12928:Core/Src/bno055.c ****  *     0x05       | BNO055_ACCEL_SLEEP_DURN_0_5MS
12929:Core/Src/bno055.c ****  *     0x06       | BNO055_ACCEL_SLEEP_DURN_1MS
12930:Core/Src/bno055.c ****  *     0x07       | BNO055_ACCEL_SLEEP_DURN_2MS
12931:Core/Src/bno055.c ****  *     0x08       | BNO055_ACCEL_SLEEP_DURN_4MS
12932:Core/Src/bno055.c ****  *     0x09       | BNO055_ACCEL_SLEEP_DURN_6MS
12933:Core/Src/bno055.c ****  *     0x0A       | BNO055_ACCEL_SLEEP_DURN_10MS
12934:Core/Src/bno055.c ****  *     0x0B       | BNO055_ACCEL_SLEEP_DURN_25MS
12935:Core/Src/bno055.c ****  *     0x0C       | BNO055_ACCEL_SLEEP_DURN_50MS
12936:Core/Src/bno055.c ****  *     0x0D       | BNO055_ACCEL_SLEEP_DURN_100MS
12937:Core/Src/bno055.c ****  *     0x0E       | BNO055_ACCEL_SLEEP_DURN_500MS
12938:Core/Src/bno055.c ****  *     0x0F       | BNO055_ACCEL_SLEEP_DURN_1S
12939:Core/Src/bno055.c ****  *
12940:Core/Src/bno055.c ****  *  @return results of bus communication function
12941:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
12942:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
12943:Core/Src/bno055.c ****  *
12944:Core/Src/bno055.c ****  *
12945:Core/Src/bno055.c ****  */
12946:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_sleep_durn(u8 sleep_durn_u8)
12947:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 767


 27408              		.loc 1 12947 1 is_stmt 1 view -0
 27409              		.cfi_startproc
 27410              		@ args = 0, pretend = 0, frame = 8
 27411              		@ frame_needed = 0, uses_anonymous_args = 0
 27412              		.loc 1 12947 1 is_stmt 0 view .LVU7737
 27413 0000 30B5     		push	{r4, r5, lr}
 27414              	.LCFI769:
 27415              		.cfi_def_cfa_offset 12
 27416              		.cfi_offset 4, -12
 27417              		.cfi_offset 5, -8
 27418              		.cfi_offset 14, -4
 27419 0002 83B0     		sub	sp, sp, #12
 27420              	.LCFI770:
 27421              		.cfi_def_cfa_offset 24
12948:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27422              		.loc 1 12948 5 is_stmt 1 view .LVU7738
 27423              	.LVL3457:
12949:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27424              		.loc 1 12949 5 view .LVU7739
 27425              		.loc 1 12949 8 is_stmt 0 view .LVU7740
 27426 0004 0023     		movs	r3, #0
 27427 0006 8DF80730 		strb	r3, [sp, #7]
12950:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27428              		.loc 1 12950 5 is_stmt 1 view .LVU7741
 27429              	.LVL3458:
12951:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27430              		.loc 1 12951 5 view .LVU7742
 27431              		.loc 1 12951 8 is_stmt 0 view .LVU7743
 27432 000a 8DF80630 		strb	r3, [sp, #6]
12952:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27433              		.loc 1 12952 5 is_stmt 1 view .LVU7744
 27434              	.LVL3459:
12953:Core/Src/bno055.c **** 
12954:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
12955:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27435              		.loc 1 12955 5 view .LVU7745
 27436              		.loc 1 12955 18 is_stmt 0 view .LVU7746
 27437 000e 2C4B     		ldr	r3, .L1887
 27438 0010 1B68     		ldr	r3, [r3]
 27439              		.loc 1 12955 8 view .LVU7747
 27440 0012 002B     		cmp	r3, #0
 27441 0014 51D0     		beq	.L1878
 27442 0016 0546     		mov	r5, r0
12956:Core/Src/bno055.c ****     {
12957:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
12958:Core/Src/bno055.c ****     }
12959:Core/Src/bno055.c ****     else
12960:Core/Src/bno055.c ****     {
12961:Core/Src/bno055.c ****         /* The write operation effective only if the operation
12962:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
12963:Core/Src/bno055.c ****          * current operation mode and set the config mode */
12964:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27443              		.loc 1 12964 9 is_stmt 1 view .LVU7748
 27444              		.loc 1 12964 19 is_stmt 0 view .LVU7749
 27445 0018 0DF10600 		add	r0, sp, #6
 27446              	.LVL3460:
 27447              		.loc 1 12964 19 view .LVU7750
ARM GAS  /tmp/ccO72alg.s 			page 768


 27448 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27449              	.LVL3461:
12965:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27450              		.loc 1 12965 9 is_stmt 1 view .LVU7751
 27451              		.loc 1 12965 12 is_stmt 0 view .LVU7752
 27452 0020 0446     		mov	r4, r0
 27453 0022 0028     		cmp	r0, #0
 27454 0024 35D1     		bne	.L1879
12966:Core/Src/bno055.c ****         {
12967:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27455              		.loc 1 12967 13 is_stmt 1 view .LVU7753
 27456              		.loc 1 12967 32 is_stmt 0 view .LVU7754
 27457 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27458              		.loc 1 12967 16 view .LVU7755
 27459 002a 1BB9     		cbnz	r3, .L1884
 27460              	.LVL3462:
 27461              	.L1877:
12968:Core/Src/bno055.c ****             {
12969:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
12970:Core/Src/bno055.c ****             }
12971:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27462              		.loc 1 12971 13 is_stmt 1 view .LVU7756
 27463              		.loc 1 12971 16 is_stmt 0 view .LVU7757
 27464 002c 44B1     		cbz	r4, .L1885
12972:Core/Src/bno055.c ****             {
12973:Core/Src/bno055.c ****                 /* Write page as one */
12974:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
12975:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
12976:Core/Src/bno055.c ****                 {
12977:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_ACCEL_SLEEP_DURATION_RANGE)
12978:Core/Src/bno055.c ****                     {
12979:Core/Src/bno055.c ****                         /* Write the accel
12980:Core/Src/bno055.c ****                         * sleep duration*/
12981:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
12982:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
12983:Core/Src/bno055.c ****                                                                   &data_u8r,
12984:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
12985:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
12986:Core/Src/bno055.c ****                         {
12987:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_SLEEP_DURN, sleep
12988:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
12989:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
12990:Core/Src/bno055.c ****                                                                         &data_u8r,
12991:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
12992:Core/Src/bno055.c ****                         }
12993:Core/Src/bno055.c ****                     }
12994:Core/Src/bno055.c ****                     else
12995:Core/Src/bno055.c ****                     {
12996:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
12997:Core/Src/bno055.c ****                     }
12998:Core/Src/bno055.c ****                 }
12999:Core/Src/bno055.c ****                 else
13000:Core/Src/bno055.c ****                 {
13001:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13002:Core/Src/bno055.c ****                 }
13003:Core/Src/bno055.c ****             }
13004:Core/Src/bno055.c ****             else
ARM GAS  /tmp/ccO72alg.s 			page 769


13005:Core/Src/bno055.c ****             {
13006:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27465              		.loc 1 13006 26 view .LVU7758
 27466 002e 4FF0FF34 		mov	r4, #-1
 27467              	.LVL3463:
 27468              		.loc 1 13006 26 view .LVU7759
 27469 0032 30E0     		b	.L1876
 27470              	.LVL3464:
 27471              	.L1884:
12969:Core/Src/bno055.c ****             }
 27472              		.loc 1 12969 17 is_stmt 1 view .LVU7760
12969:Core/Src/bno055.c ****             }
 27473              		.loc 1 12969 28 is_stmt 0 view .LVU7761
 27474 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27475              	.LVL3465:
12969:Core/Src/bno055.c ****             }
 27476              		.loc 1 12969 25 view .LVU7762
 27477 0038 54FA80F4 		uxtab	r4, r4, r0
 27478 003c 64B2     		sxtb	r4, r4
 27479              	.LVL3466:
12969:Core/Src/bno055.c ****             }
 27480              		.loc 1 12969 25 view .LVU7763
 27481 003e F5E7     		b	.L1877
 27482              	.L1885:
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27483              		.loc 1 12974 17 is_stmt 1 view .LVU7764
12974:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27484              		.loc 1 12974 30 is_stmt 0 view .LVU7765
 27485 0040 0120     		movs	r0, #1
 27486 0042 FFF7FEFF 		bl	bno055_write_page_id
 27487              	.LVL3467:
12975:Core/Src/bno055.c ****                 {
 27488              		.loc 1 12975 17 is_stmt 1 view .LVU7766
12975:Core/Src/bno055.c ****                 {
 27489              		.loc 1 12975 20 is_stmt 0 view .LVU7767
 27490 0046 60BB     		cbnz	r0, .L1881
12977:Core/Src/bno055.c ****                     {
 27491              		.loc 1 12977 21 is_stmt 1 view .LVU7768
12977:Core/Src/bno055.c ****                     {
 27492              		.loc 1 12977 24 is_stmt 0 view .LVU7769
 27493 0048 0F2D     		cmp	r5, #15
 27494 004a 2DD8     		bhi	.L1882
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27495              		.loc 1 12981 25 is_stmt 1 view .LVU7770
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27496              		.loc 1 12981 44 is_stmt 0 view .LVU7771
 27497 004c 1C4B     		ldr	r3, .L1887
 27498 004e 1868     		ldr	r0, [r3]
 27499              	.LVL3468:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27500              		.loc 1 12981 44 view .LVU7772
 27501 0050 0469     		ldr	r4, [r0, #16]
 27502              	.LVL3469:
12981:Core/Src/bno055.c ****                                                                   BNO055_ACCEL_SLEEP_DURN_REG,
 27503              		.loc 1 12981 36 view .LVU7773
 27504 0052 0123     		movs	r3, #1
 27505 0054 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccO72alg.s 			page 770


 27506 0058 0C21     		movs	r1, #12
 27507 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27508 005c A047     		blx	r4
 27509              	.LVL3470:
12985:Core/Src/bno055.c ****                         {
 27510              		.loc 1 12985 25 is_stmt 1 view .LVU7774
12985:Core/Src/bno055.c ****                         {
 27511              		.loc 1 12985 28 is_stmt 0 view .LVU7775
 27512 005e 0446     		mov	r4, r0
 27513 0060 C8B9     		cbnz	r0, .L1876
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27514              		.loc 1 12987 29 is_stmt 1 view .LVU7776
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27515              		.loc 1 12987 40 is_stmt 0 view .LVU7777
 27516 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 27517              	.LVL3471:
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27518              		.loc 1 12987 40 view .LVU7778
 27519 0066 20F01E00 		bic	r0, r0, #30
 27520 006a 43B2     		sxtb	r3, r0
 27521 006c 6800     		lsls	r0, r5, #1
 27522 006e 00F01E00 		and	r0, r0, #30
 27523 0072 1843     		orrs	r0, r0, r3
12987:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27524              		.loc 1 12987 38 view .LVU7779
 27525 0074 8DF80700 		strb	r0, [sp, #7]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27526              		.loc 1 12988 29 is_stmt 1 view .LVU7780
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27527              		.loc 1 12988 49 is_stmt 0 view .LVU7781
 27528 0078 114B     		ldr	r3, .L1887
 27529 007a 1868     		ldr	r0, [r3]
 27530 007c C568     		ldr	r5, [r0, #12]
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27531              		.loc 1 12988 41 view .LVU7782
 27532 007e 0123     		movs	r3, #1
 27533 0080 0DF10702 		add	r2, sp, #7
 27534 0084 0C21     		movs	r1, #12
 27535 0086 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27536 0088 A847     		blx	r5
 27537              	.LVL3472:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27538              		.loc 1 12988 38 view .LVU7783
 27539 008a 54FA80F4 		uxtab	r4, r4, r0
 27540 008e 64B2     		sxtb	r4, r4
 27541              	.LVL3473:
12988:Core/Src/bno055.c ****                                                                         BNO055_ACCEL_SLEEP_DURN_REG
 27542              		.loc 1 12988 38 view .LVU7784
 27543 0090 01E0     		b	.L1876
 27544              	.LVL3474:
 27545              	.L1879:
13007:Core/Src/bno055.c ****             }
13008:Core/Src/bno055.c ****         }
13009:Core/Src/bno055.c ****         else
13010:Core/Src/bno055.c ****         {
13011:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27546              		.loc 1 13011 22 view .LVU7785
ARM GAS  /tmp/ccO72alg.s 			page 771


 27547 0092 4FF0FF34 		mov	r4, #-1
 27548              	.LVL3475:
 27549              	.L1876:
13012:Core/Src/bno055.c ****         }
13013:Core/Src/bno055.c ****     }
13014:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27550              		.loc 1 13014 5 is_stmt 1 view .LVU7786
 27551              		.loc 1 13014 24 is_stmt 0 view .LVU7787
 27552 0096 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27553              		.loc 1 13014 8 view .LVU7788
 27554 009a 40B9     		cbnz	r0, .L1886
 27555              	.LVL3476:
 27556              	.L1875:
13015:Core/Src/bno055.c ****     {
13016:Core/Src/bno055.c ****         /* set the operation mode of
13017:Core/Src/bno055.c ****          * previous operation mode*/
13018:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13019:Core/Src/bno055.c ****     }
13020:Core/Src/bno055.c **** 
13021:Core/Src/bno055.c ****     return com_rslt;
13022:Core/Src/bno055.c **** }
 27557              		.loc 1 13022 1 view .LVU7789
 27558 009c 2046     		mov	r0, r4
 27559 009e 03B0     		add	sp, sp, #12
 27560              	.LCFI771:
 27561              		.cfi_remember_state
 27562              		.cfi_def_cfa_offset 12
 27563              		@ sp needed
 27564 00a0 30BD     		pop	{r4, r5, pc}
 27565              	.LVL3477:
 27566              	.L1881:
 27567              	.LCFI772:
 27568              		.cfi_restore_state
13001:Core/Src/bno055.c ****                 }
 27569              		.loc 1 13001 30 view .LVU7790
 27570 00a2 4FF0FF34 		mov	r4, #-1
 27571              	.LVL3478:
13001:Core/Src/bno055.c ****                 }
 27572              		.loc 1 13001 30 view .LVU7791
 27573 00a6 F6E7     		b	.L1876
 27574              	.LVL3479:
 27575              	.L1882:
12996:Core/Src/bno055.c ****                     }
 27576              		.loc 1 12996 34 view .LVU7792
 27577 00a8 6FF00104 		mvn	r4, #1
 27578              	.LVL3480:
12996:Core/Src/bno055.c ****                     }
 27579              		.loc 1 12996 34 view .LVU7793
 27580 00ac F3E7     		b	.L1876
 27581              	.LVL3481:
 27582              	.L1886:
13018:Core/Src/bno055.c ****     }
 27583              		.loc 1 13018 9 is_stmt 1 view .LVU7794
13018:Core/Src/bno055.c ****     }
 27584              		.loc 1 13018 21 is_stmt 0 view .LVU7795
 27585 00ae FFF7FEFF 		bl	bno055_set_operation_mode
 27586              	.LVL3482:
ARM GAS  /tmp/ccO72alg.s 			page 772


13018:Core/Src/bno055.c ****     }
 27587              		.loc 1 13018 18 view .LVU7796
 27588 00b2 54FA80F4 		uxtab	r4, r4, r0
 27589              	.LVL3483:
13018:Core/Src/bno055.c ****     }
 27590              		.loc 1 13018 18 view .LVU7797
 27591 00b6 64B2     		sxtb	r4, r4
 27592              	.LVL3484:
13018:Core/Src/bno055.c ****     }
 27593              		.loc 1 13018 18 view .LVU7798
 27594 00b8 F0E7     		b	.L1875
 27595              	.LVL3485:
 27596              	.L1878:
12957:Core/Src/bno055.c ****     }
 27597              		.loc 1 12957 16 view .LVU7799
 27598 00ba 6FF07E04 		mvn	r4, #126
 27599 00be EDE7     		b	.L1875
 27600              	.L1888:
 27601              		.align	2
 27602              	.L1887:
 27603 00c0 00000000 		.word	.LANCHOR0
 27604              		.cfi_endproc
 27605              	.LFE196:
 27607              		.section	.text.bno055_get_gyro_sleep_durn,"ax",%progbits
 27608              		.align	1
 27609              		.global	bno055_get_gyro_sleep_durn
 27610              		.syntax unified
 27611              		.thumb
 27612              		.thumb_func
 27614              	bno055_get_gyro_sleep_durn:
 27615              	.LVL3486:
 27616              	.LFB197:
13023:Core/Src/bno055.c **** 
13024:Core/Src/bno055.c **** /*!
13025:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13026:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13027:Core/Src/bno055.c ****  *
13028:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13029:Core/Src/bno055.c ****  *
13030:Core/Src/bno055.c ****  *  @return results of bus communication function
13031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13033:Core/Src/bno055.c ****  *
13034:Core/Src/bno055.c ****  *
13035:Core/Src/bno055.c ****  */
13036:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_sleep_durn(u8 *sleep_durn_u8)
13037:Core/Src/bno055.c **** {
 27617              		.loc 1 13037 1 is_stmt 1 view -0
 27618              		.cfi_startproc
 27619              		@ args = 0, pretend = 0, frame = 8
 27620              		@ frame_needed = 0, uses_anonymous_args = 0
 27621              		.loc 1 13037 1 is_stmt 0 view .LVU7801
 27622 0000 30B5     		push	{r4, r5, lr}
 27623              	.LCFI773:
 27624              		.cfi_def_cfa_offset 12
 27625              		.cfi_offset 4, -12
 27626              		.cfi_offset 5, -8
ARM GAS  /tmp/ccO72alg.s 			page 773


 27627              		.cfi_offset 14, -4
 27628 0002 83B0     		sub	sp, sp, #12
 27629              	.LCFI774:
 27630              		.cfi_def_cfa_offset 24
13038:Core/Src/bno055.c ****     /* Variable used to return value of
13039:Core/Src/bno055.c ****      * communication routine*/
13040:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27631              		.loc 1 13040 5 is_stmt 1 view .LVU7802
 27632              	.LVL3487:
13041:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27633              		.loc 1 13041 5 view .LVU7803
 27634              		.loc 1 13041 8 is_stmt 0 view .LVU7804
 27635 0004 0023     		movs	r3, #0
 27636 0006 8DF80730 		strb	r3, [sp, #7]
13042:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27637              		.loc 1 13042 5 is_stmt 1 view .LVU7805
 27638              	.LVL3488:
13043:Core/Src/bno055.c **** 
13044:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13045:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27639              		.loc 1 13045 5 view .LVU7806
 27640              		.loc 1 13045 18 is_stmt 0 view .LVU7807
 27641 000a 144B     		ldr	r3, .L1897
 27642 000c 1B68     		ldr	r3, [r3]
 27643              		.loc 1 13045 8 view .LVU7808
 27644 000e F3B1     		cbz	r3, .L1893
 27645 0010 0446     		mov	r4, r0
13046:Core/Src/bno055.c ****     {
13047:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13048:Core/Src/bno055.c ****     }
13049:Core/Src/bno055.c ****     else
13050:Core/Src/bno055.c ****     {
13051:Core/Src/bno055.c ****         /*condition check for page, accel range is
13052:Core/Src/bno055.c ****          * available in the page one*/
13053:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27646              		.loc 1 13053 9 is_stmt 1 view .LVU7809
 27647              		.loc 1 13053 21 is_stmt 0 view .LVU7810
 27648 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27649              		.loc 1 13053 12 view .LVU7811
 27650 0014 012B     		cmp	r3, #1
 27651 0016 14D1     		bne	.L1896
 27652              	.LVL3489:
 27653              	.L1891:
13054:Core/Src/bno055.c ****         {
13055:Core/Src/bno055.c ****             /* Write page as one */
13056:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13057:Core/Src/bno055.c ****         }
13058:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27654              		.loc 1 13058 53 discriminator 1 view .LVU7812
 27655 0018 104B     		ldr	r3, .L1897
 27656 001a 1B68     		ldr	r3, [r3]
 27657 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27658              		.loc 1 13058 41 discriminator 1 view .LVU7813
 27659 001e 012B     		cmp	r3, #1
 27660 0020 18D1     		bne	.L1894
 27661              	.L1892:
13059:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 774


13060:Core/Src/bno055.c ****             /* Read the gyro sleep duration */
13061:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27662              		.loc 1 13061 13 is_stmt 1 view .LVU7814
 27663              		.loc 1 13061 32 is_stmt 0 view .LVU7815
 27664 0022 0E4B     		ldr	r3, .L1897
 27665 0024 1868     		ldr	r0, [r3]
 27666 0026 0569     		ldr	r5, [r0, #16]
 27667              		.loc 1 13061 24 view .LVU7816
 27668 0028 0123     		movs	r3, #1
 27669 002a 0DF10702 		add	r2, sp, #7
 27670 002e 0D21     		movs	r1, #13
 27671 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27672 0032 A847     		blx	r5
 27673              	.LVL3490:
13062:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLEEP_DURN_REG,
13063:Core/Src/bno055.c ****                                                       &data_u8r,
13064:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13065:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN);
 27674              		.loc 1 13065 13 is_stmt 1 view .LVU7817
 27675              		.loc 1 13065 30 is_stmt 0 view .LVU7818
 27676 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 27677 0038 03F00703 		and	r3, r3, #7
 27678              		.loc 1 13065 28 view .LVU7819
 27679 003c 2370     		strb	r3, [r4]
 27680              	.LVL3491:
 27681              	.L1890:
13066:Core/Src/bno055.c ****         }
13067:Core/Src/bno055.c ****         else
13068:Core/Src/bno055.c ****         {
13069:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13070:Core/Src/bno055.c ****         }
13071:Core/Src/bno055.c ****     }
13072:Core/Src/bno055.c **** 
13073:Core/Src/bno055.c ****     return com_rslt;
13074:Core/Src/bno055.c **** }
 27682              		.loc 1 13074 1 view .LVU7820
 27683 003e 03B0     		add	sp, sp, #12
 27684              	.LCFI775:
 27685              		.cfi_remember_state
 27686              		.cfi_def_cfa_offset 12
 27687              		@ sp needed
 27688 0040 30BD     		pop	{r4, r5, pc}
 27689              	.LVL3492:
 27690              	.L1896:
 27691              	.LCFI776:
 27692              		.cfi_restore_state
13056:Core/Src/bno055.c ****         }
 27693              		.loc 1 13056 13 is_stmt 1 view .LVU7821
13056:Core/Src/bno055.c ****         }
 27694              		.loc 1 13056 23 is_stmt 0 view .LVU7822
 27695 0042 0120     		movs	r0, #1
 27696              	.LVL3493:
13056:Core/Src/bno055.c ****         }
 27697              		.loc 1 13056 23 view .LVU7823
 27698 0044 FFF7FEFF 		bl	bno055_write_page_id
 27699              	.LVL3494:
13058:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 775


 27700              		.loc 1 13058 9 is_stmt 1 view .LVU7824
13058:Core/Src/bno055.c ****         {
 27701              		.loc 1 13058 12 is_stmt 0 view .LVU7825
 27702 0048 0028     		cmp	r0, #0
 27703 004a EAD0     		beq	.L1892
 27704 004c E4E7     		b	.L1891
 27705              	.LVL3495:
 27706              	.L1893:
13047:Core/Src/bno055.c ****     }
 27707              		.loc 1 13047 16 view .LVU7826
 27708 004e 6FF07E00 		mvn	r0, #126
 27709              	.LVL3496:
13047:Core/Src/bno055.c ****     }
 27710              		.loc 1 13047 16 view .LVU7827
 27711 0052 F4E7     		b	.L1890
 27712              	.LVL3497:
 27713              	.L1894:
13069:Core/Src/bno055.c ****         }
 27714              		.loc 1 13069 22 view .LVU7828
 27715 0054 4FF0FF30 		mov	r0, #-1
 27716 0058 F1E7     		b	.L1890
 27717              	.L1898:
 27718 005a 00BF     		.align	2
 27719              	.L1897:
 27720 005c 00000000 		.word	.LANCHOR0
 27721              		.cfi_endproc
 27722              	.LFE197:
 27724              		.section	.text.bno055_set_gyro_sleep_durn,"ax",%progbits
 27725              		.align	1
 27726              		.global	bno055_set_gyro_sleep_durn
 27727              		.syntax unified
 27728              		.thumb
 27729              		.thumb_func
 27731              	bno055_set_gyro_sleep_durn:
 27732              	.LVL3498:
 27733              	.LFB198:
13075:Core/Src/bno055.c **** 
13076:Core/Src/bno055.c **** /*!
13077:Core/Src/bno055.c ****  *  @brief This API used to write the gyro sleep duration
13078:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 0 to 2
13079:Core/Src/bno055.c ****  *
13080:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of gyro sleep duration
13081:Core/Src/bno055.c ****  *
13082:Core/Src/bno055.c ****  *  @return results of bus communication function
13083:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13084:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13085:Core/Src/bno055.c ****  *
13086:Core/Src/bno055.c ****  *
13087:Core/Src/bno055.c ****  */
13088:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_sleep_durn(u8 sleep_durn_u8)
13089:Core/Src/bno055.c **** {
 27734              		.loc 1 13089 1 is_stmt 1 view -0
 27735              		.cfi_startproc
 27736              		@ args = 0, pretend = 0, frame = 8
 27737              		@ frame_needed = 0, uses_anonymous_args = 0
 27738              		.loc 1 13089 1 is_stmt 0 view .LVU7830
 27739 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccO72alg.s 			page 776


 27740              	.LCFI777:
 27741              		.cfi_def_cfa_offset 12
 27742              		.cfi_offset 4, -12
 27743              		.cfi_offset 5, -8
 27744              		.cfi_offset 14, -4
 27745 0002 83B0     		sub	sp, sp, #12
 27746              	.LCFI778:
 27747              		.cfi_def_cfa_offset 24
13090:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27748              		.loc 1 13090 5 is_stmt 1 view .LVU7831
 27749              	.LVL3499:
13091:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27750              		.loc 1 13091 5 view .LVU7832
 27751              		.loc 1 13091 8 is_stmt 0 view .LVU7833
 27752 0004 0023     		movs	r3, #0
 27753 0006 8DF80730 		strb	r3, [sp, #7]
13092:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27754              		.loc 1 13092 5 is_stmt 1 view .LVU7834
 27755              	.LVL3500:
13093:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 27756              		.loc 1 13093 5 view .LVU7835
13094:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 27757              		.loc 1 13094 5 view .LVU7836
 27758              		.loc 1 13094 8 is_stmt 0 view .LVU7837
 27759 000a 8DF80630 		strb	r3, [sp, #6]
13095:Core/Src/bno055.c **** 
13096:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13097:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27760              		.loc 1 13097 5 is_stmt 1 view .LVU7838
 27761              		.loc 1 13097 18 is_stmt 0 view .LVU7839
 27762 000e 2C4B     		ldr	r3, .L1912
 27763 0010 1B68     		ldr	r3, [r3]
 27764              		.loc 1 13097 8 view .LVU7840
 27765 0012 002B     		cmp	r3, #0
 27766 0014 50D0     		beq	.L1903
 27767 0016 0546     		mov	r5, r0
13098:Core/Src/bno055.c ****     {
13099:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13100:Core/Src/bno055.c ****     }
13101:Core/Src/bno055.c ****     else
13102:Core/Src/bno055.c ****     {
13103:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13104:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13105:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13106:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 27768              		.loc 1 13106 9 is_stmt 1 view .LVU7841
 27769              		.loc 1 13106 19 is_stmt 0 view .LVU7842
 27770 0018 0DF10600 		add	r0, sp, #6
 27771              	.LVL3501:
 27772              		.loc 1 13106 19 view .LVU7843
 27773 001c FFF7FEFF 		bl	bno055_get_operation_mode
 27774              	.LVL3502:
13107:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 27775              		.loc 1 13107 9 is_stmt 1 view .LVU7844
 27776              		.loc 1 13107 12 is_stmt 0 view .LVU7845
 27777 0020 0446     		mov	r4, r0
 27778 0022 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 777


 27779 0024 34D1     		bne	.L1904
13108:Core/Src/bno055.c ****         {
13109:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27780              		.loc 1 13109 13 is_stmt 1 view .LVU7846
 27781              		.loc 1 13109 32 is_stmt 0 view .LVU7847
 27782 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 27783              		.loc 1 13109 16 view .LVU7848
 27784 002a 1BB9     		cbnz	r3, .L1909
 27785              	.LVL3503:
 27786              	.L1902:
13110:Core/Src/bno055.c ****             {
13111:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13112:Core/Src/bno055.c ****             }
13113:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 27787              		.loc 1 13113 13 is_stmt 1 view .LVU7849
 27788              		.loc 1 13113 16 is_stmt 0 view .LVU7850
 27789 002c 44B1     		cbz	r4, .L1910
13114:Core/Src/bno055.c ****             {
13115:Core/Src/bno055.c ****                 /* Write page as one */
13116:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13117:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13118:Core/Src/bno055.c ****                 {
13119:Core/Src/bno055.c ****                     if (sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13120:Core/Src/bno055.c ****                     {
13121:Core/Src/bno055.c ****                         com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13122:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
13123:Core/Src/bno055.c ****                                                                   &data_u8r,
13124:Core/Src/bno055.c ****                                                                   BNO055_GEN_READ_WRITE_LENGTH);
13125:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13126:Core/Src/bno055.c ****                         {
13127:Core/Src/bno055.c ****                             /* Write the gyro
13128:Core/Src/bno055.c ****                              *  sleep duration */
13129:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_SLEEP_DURN, sleep_
13130:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13131:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
13132:Core/Src/bno055.c ****                                                                         &data_u8r,
13133:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13134:Core/Src/bno055.c ****                         }
13135:Core/Src/bno055.c ****                     }
13136:Core/Src/bno055.c ****                     else
13137:Core/Src/bno055.c ****                     {
13138:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13139:Core/Src/bno055.c ****                     }
13140:Core/Src/bno055.c ****                 }
13141:Core/Src/bno055.c ****                 else
13142:Core/Src/bno055.c ****                 {
13143:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13144:Core/Src/bno055.c ****                 }
13145:Core/Src/bno055.c ****             }
13146:Core/Src/bno055.c ****             else
13147:Core/Src/bno055.c ****             {
13148:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 27790              		.loc 1 13148 26 view .LVU7851
 27791 002e 4FF0FF34 		mov	r4, #-1
 27792              	.LVL3504:
 27793              		.loc 1 13148 26 view .LVU7852
 27794 0032 2FE0     		b	.L1901
ARM GAS  /tmp/ccO72alg.s 			page 778


 27795              	.LVL3505:
 27796              	.L1909:
13111:Core/Src/bno055.c ****             }
 27797              		.loc 1 13111 17 is_stmt 1 view .LVU7853
13111:Core/Src/bno055.c ****             }
 27798              		.loc 1 13111 28 is_stmt 0 view .LVU7854
 27799 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 27800              	.LVL3506:
13111:Core/Src/bno055.c ****             }
 27801              		.loc 1 13111 25 view .LVU7855
 27802 0038 54FA80F4 		uxtab	r4, r4, r0
 27803 003c 64B2     		sxtb	r4, r4
 27804              	.LVL3507:
13111:Core/Src/bno055.c ****             }
 27805              		.loc 1 13111 25 view .LVU7856
 27806 003e F5E7     		b	.L1902
 27807              	.L1910:
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27808              		.loc 1 13116 17 is_stmt 1 view .LVU7857
13116:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 27809              		.loc 1 13116 30 is_stmt 0 view .LVU7858
 27810 0040 0120     		movs	r0, #1
 27811 0042 FFF7FEFF 		bl	bno055_write_page_id
 27812              	.LVL3508:
13117:Core/Src/bno055.c ****                 {
 27813              		.loc 1 13117 17 is_stmt 1 view .LVU7859
13117:Core/Src/bno055.c ****                 {
 27814              		.loc 1 13117 20 is_stmt 0 view .LVU7860
 27815 0046 58BB     		cbnz	r0, .L1906
13119:Core/Src/bno055.c ****                     {
 27816              		.loc 1 13119 21 is_stmt 1 view .LVU7861
13119:Core/Src/bno055.c ****                     {
 27817              		.loc 1 13119 24 is_stmt 0 view .LVU7862
 27818 0048 072D     		cmp	r5, #7
 27819 004a 2CD8     		bhi	.L1907
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27820              		.loc 1 13121 25 is_stmt 1 view .LVU7863
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27821              		.loc 1 13121 44 is_stmt 0 view .LVU7864
 27822 004c 1C4B     		ldr	r3, .L1912
 27823 004e 1868     		ldr	r0, [r3]
 27824              	.LVL3509:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27825              		.loc 1 13121 44 view .LVU7865
 27826 0050 0469     		ldr	r4, [r0, #16]
 27827              	.LVL3510:
13121:Core/Src/bno055.c ****                                                                   BNO055_GYRO_SLEEP_DURN_REG,
 27828              		.loc 1 13121 36 view .LVU7866
 27829 0052 0123     		movs	r3, #1
 27830 0054 0DF10702 		add	r2, sp, #7
 27831 0058 0D21     		movs	r1, #13
 27832 005a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27833 005c A047     		blx	r4
 27834              	.LVL3511:
13125:Core/Src/bno055.c ****                         {
 27835              		.loc 1 13125 25 is_stmt 1 view .LVU7867
13125:Core/Src/bno055.c ****                         {
ARM GAS  /tmp/ccO72alg.s 			page 779


 27836              		.loc 1 13125 28 is_stmt 0 view .LVU7868
 27837 005e 0446     		mov	r4, r0
 27838 0060 C0B9     		cbnz	r0, .L1901
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27839              		.loc 1 13129 29 is_stmt 1 view .LVU7869
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27840              		.loc 1 13129 40 is_stmt 0 view .LVU7870
 27841 0062 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 27842              	.LVL3512:
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27843              		.loc 1 13129 40 view .LVU7871
 27844 0066 20F00700 		bic	r0, r0, #7
 27845 006a 43B2     		sxtb	r3, r0
 27846 006c 05F00700 		and	r0, r5, #7
 27847 0070 1843     		orrs	r0, r0, r3
13129:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 27848              		.loc 1 13129 38 view .LVU7872
 27849 0072 8DF80700 		strb	r0, [sp, #7]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27850              		.loc 1 13130 29 is_stmt 1 view .LVU7873
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27851              		.loc 1 13130 49 is_stmt 0 view .LVU7874
 27852 0076 124B     		ldr	r3, .L1912
 27853 0078 1868     		ldr	r0, [r3]
 27854 007a C568     		ldr	r5, [r0, #12]
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27855              		.loc 1 13130 41 view .LVU7875
 27856 007c 0123     		movs	r3, #1
 27857 007e 0DF10702 		add	r2, sp, #7
 27858 0082 0D21     		movs	r1, #13
 27859 0084 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27860 0086 A847     		blx	r5
 27861              	.LVL3513:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27862              		.loc 1 13130 38 view .LVU7876
 27863 0088 54FA80F4 		uxtab	r4, r4, r0
 27864 008c 64B2     		sxtb	r4, r4
 27865              	.LVL3514:
13130:Core/Src/bno055.c ****                                                                         BNO055_GYRO_SLEEP_DURN_REG,
 27866              		.loc 1 13130 38 view .LVU7877
 27867 008e 01E0     		b	.L1901
 27868              	.LVL3515:
 27869              	.L1904:
13149:Core/Src/bno055.c ****             }
13150:Core/Src/bno055.c ****         }
13151:Core/Src/bno055.c ****         else
13152:Core/Src/bno055.c ****         {
13153:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 27870              		.loc 1 13153 22 view .LVU7878
 27871 0090 4FF0FF34 		mov	r4, #-1
 27872              	.LVL3516:
 27873              	.L1901:
13154:Core/Src/bno055.c ****         }
13155:Core/Src/bno055.c ****     }
13156:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 27874              		.loc 1 13156 5 is_stmt 1 view .LVU7879
 27875              		.loc 1 13156 24 is_stmt 0 view .LVU7880
ARM GAS  /tmp/ccO72alg.s 			page 780


 27876 0094 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 27877              		.loc 1 13156 8 view .LVU7881
 27878 0098 40B9     		cbnz	r0, .L1911
 27879              	.LVL3517:
 27880              	.L1900:
13157:Core/Src/bno055.c ****     {
13158:Core/Src/bno055.c ****         /* set the operation mode of
13159:Core/Src/bno055.c ****          * previous operation mode*/
13160:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13161:Core/Src/bno055.c ****     }
13162:Core/Src/bno055.c **** 
13163:Core/Src/bno055.c ****     return com_rslt;
13164:Core/Src/bno055.c **** }
 27881              		.loc 1 13164 1 view .LVU7882
 27882 009a 2046     		mov	r0, r4
 27883 009c 03B0     		add	sp, sp, #12
 27884              	.LCFI779:
 27885              		.cfi_remember_state
 27886              		.cfi_def_cfa_offset 12
 27887              		@ sp needed
 27888 009e 30BD     		pop	{r4, r5, pc}
 27889              	.LVL3518:
 27890              	.L1906:
 27891              	.LCFI780:
 27892              		.cfi_restore_state
13143:Core/Src/bno055.c ****                 }
 27893              		.loc 1 13143 30 view .LVU7883
 27894 00a0 4FF0FF34 		mov	r4, #-1
 27895              	.LVL3519:
13143:Core/Src/bno055.c ****                 }
 27896              		.loc 1 13143 30 view .LVU7884
 27897 00a4 F6E7     		b	.L1901
 27898              	.LVL3520:
 27899              	.L1907:
13138:Core/Src/bno055.c ****                     }
 27900              		.loc 1 13138 34 view .LVU7885
 27901 00a6 6FF00104 		mvn	r4, #1
 27902              	.LVL3521:
13138:Core/Src/bno055.c ****                     }
 27903              		.loc 1 13138 34 view .LVU7886
 27904 00aa F3E7     		b	.L1901
 27905              	.LVL3522:
 27906              	.L1911:
13160:Core/Src/bno055.c ****     }
 27907              		.loc 1 13160 9 is_stmt 1 view .LVU7887
13160:Core/Src/bno055.c ****     }
 27908              		.loc 1 13160 21 is_stmt 0 view .LVU7888
 27909 00ac FFF7FEFF 		bl	bno055_set_operation_mode
 27910              	.LVL3523:
13160:Core/Src/bno055.c ****     }
 27911              		.loc 1 13160 18 view .LVU7889
 27912 00b0 54FA80F4 		uxtab	r4, r4, r0
 27913              	.LVL3524:
13160:Core/Src/bno055.c ****     }
 27914              		.loc 1 13160 18 view .LVU7890
 27915 00b4 64B2     		sxtb	r4, r4
 27916              	.LVL3525:
ARM GAS  /tmp/ccO72alg.s 			page 781


13160:Core/Src/bno055.c ****     }
 27917              		.loc 1 13160 18 view .LVU7891
 27918 00b6 F0E7     		b	.L1900
 27919              	.LVL3526:
 27920              	.L1903:
13099:Core/Src/bno055.c ****     }
 27921              		.loc 1 13099 16 view .LVU7892
 27922 00b8 6FF07E04 		mvn	r4, #126
 27923 00bc EDE7     		b	.L1900
 27924              	.L1913:
 27925 00be 00BF     		.align	2
 27926              	.L1912:
 27927 00c0 00000000 		.word	.LANCHOR0
 27928              		.cfi_endproc
 27929              	.LFE198:
 27931              		.section	.text.bno055_get_gyro_auto_sleep_durn,"ax",%progbits
 27932              		.align	1
 27933              		.global	bno055_get_gyro_auto_sleep_durn
 27934              		.syntax unified
 27935              		.thumb
 27936              		.thumb_func
 27938              	bno055_get_gyro_auto_sleep_durn:
 27939              	.LVL3527:
 27940              	.LFB199:
13165:Core/Src/bno055.c **** 
13166:Core/Src/bno055.c **** /*!
13167:Core/Src/bno055.c ****  *  @brief This API used to read the gyro auto sleep duration
13168:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13169:Core/Src/bno055.c ****  *
13170:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13171:Core/Src/bno055.c ****  *
13172:Core/Src/bno055.c ****  *  @return results of bus communication function
13173:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13174:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13175:Core/Src/bno055.c ****  *
13176:Core/Src/bno055.c ****  *
13177:Core/Src/bno055.c ****  */
13178:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_auto_sleep_durn(u8 *auto_sleep_durn_u8)
13179:Core/Src/bno055.c **** {
 27941              		.loc 1 13179 1 is_stmt 1 view -0
 27942              		.cfi_startproc
 27943              		@ args = 0, pretend = 0, frame = 8
 27944              		@ frame_needed = 0, uses_anonymous_args = 0
 27945              		.loc 1 13179 1 is_stmt 0 view .LVU7894
 27946 0000 30B5     		push	{r4, r5, lr}
 27947              	.LCFI781:
 27948              		.cfi_def_cfa_offset 12
 27949              		.cfi_offset 4, -12
 27950              		.cfi_offset 5, -8
 27951              		.cfi_offset 14, -4
 27952 0002 83B0     		sub	sp, sp, #12
 27953              	.LCFI782:
 27954              		.cfi_def_cfa_offset 24
13180:Core/Src/bno055.c ****     /* Variable used to return value of
13181:Core/Src/bno055.c ****      * communication routine*/
13182:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 27955              		.loc 1 13182 5 is_stmt 1 view .LVU7895
ARM GAS  /tmp/ccO72alg.s 			page 782


 27956              	.LVL3528:
13183:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 27957              		.loc 1 13183 5 view .LVU7896
 27958              		.loc 1 13183 8 is_stmt 0 view .LVU7897
 27959 0004 0023     		movs	r3, #0
 27960 0006 8DF80730 		strb	r3, [sp, #7]
13184:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 27961              		.loc 1 13184 5 is_stmt 1 view .LVU7898
 27962              	.LVL3529:
13185:Core/Src/bno055.c **** 
13186:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13187:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 27963              		.loc 1 13187 5 view .LVU7899
 27964              		.loc 1 13187 18 is_stmt 0 view .LVU7900
 27965 000a 144B     		ldr	r3, .L1922
 27966 000c 1B68     		ldr	r3, [r3]
 27967              		.loc 1 13187 8 view .LVU7901
 27968 000e F3B1     		cbz	r3, .L1918
 27969 0010 0446     		mov	r4, r0
13188:Core/Src/bno055.c ****     {
13189:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13190:Core/Src/bno055.c ****     }
13191:Core/Src/bno055.c ****     else
13192:Core/Src/bno055.c ****     {
13193:Core/Src/bno055.c ****         /*condition check for page, accel range is
13194:Core/Src/bno055.c ****          * available in the page one*/
13195:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 27970              		.loc 1 13195 9 is_stmt 1 view .LVU7902
 27971              		.loc 1 13195 21 is_stmt 0 view .LVU7903
 27972 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27973              		.loc 1 13195 12 view .LVU7904
 27974 0014 012B     		cmp	r3, #1
 27975 0016 14D1     		bne	.L1921
 27976              	.LVL3530:
 27977              	.L1916:
13196:Core/Src/bno055.c ****         {
13197:Core/Src/bno055.c ****             /* Write page as one */
13198:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13199:Core/Src/bno055.c ****         }
13200:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 27978              		.loc 1 13200 53 discriminator 1 view .LVU7905
 27979 0018 104B     		ldr	r3, .L1922
 27980 001a 1B68     		ldr	r3, [r3]
 27981 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 27982              		.loc 1 13200 41 discriminator 1 view .LVU7906
 27983 001e 012B     		cmp	r3, #1
 27984 0020 18D1     		bne	.L1919
 27985              	.L1917:
13201:Core/Src/bno055.c ****         {
13202:Core/Src/bno055.c ****             /* Read the value of gyro auto sleep duration */
13203:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 27986              		.loc 1 13203 13 is_stmt 1 view .LVU7907
 27987              		.loc 1 13203 32 is_stmt 0 view .LVU7908
 27988 0022 0E4B     		ldr	r3, .L1922
 27989 0024 1868     		ldr	r0, [r3]
 27990 0026 0569     		ldr	r5, [r0, #16]
 27991              		.loc 1 13203 24 view .LVU7909
ARM GAS  /tmp/ccO72alg.s 			page 783


 27992 0028 0123     		movs	r3, #1
 27993 002a 0DF10702 		add	r2, sp, #7
 27994 002e 0D21     		movs	r1, #13
 27995 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 27996 0032 A847     		blx	r5
 27997              	.LVL3531:
13204:Core/Src/bno055.c ****                                                       BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13205:Core/Src/bno055.c ****                                                       &data_u8r,
13206:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13207:Core/Src/bno055.c ****             *auto_sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN);
 27998              		.loc 1 13207 13 is_stmt 1 view .LVU7910
 27999              		.loc 1 13207 35 is_stmt 0 view .LVU7911
 28000 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28001 0038 C3F3C203 		ubfx	r3, r3, #3, #3
 28002              		.loc 1 13207 33 view .LVU7912
 28003 003c 2370     		strb	r3, [r4]
 28004              	.LVL3532:
 28005              	.L1915:
13208:Core/Src/bno055.c ****         }
13209:Core/Src/bno055.c ****         else
13210:Core/Src/bno055.c ****         {
13211:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13212:Core/Src/bno055.c ****         }
13213:Core/Src/bno055.c ****     }
13214:Core/Src/bno055.c **** 
13215:Core/Src/bno055.c ****     return com_rslt;
13216:Core/Src/bno055.c **** }
 28006              		.loc 1 13216 1 view .LVU7913
 28007 003e 03B0     		add	sp, sp, #12
 28008              	.LCFI783:
 28009              		.cfi_remember_state
 28010              		.cfi_def_cfa_offset 12
 28011              		@ sp needed
 28012 0040 30BD     		pop	{r4, r5, pc}
 28013              	.LVL3533:
 28014              	.L1921:
 28015              	.LCFI784:
 28016              		.cfi_restore_state
13198:Core/Src/bno055.c ****         }
 28017              		.loc 1 13198 13 is_stmt 1 view .LVU7914
13198:Core/Src/bno055.c ****         }
 28018              		.loc 1 13198 23 is_stmt 0 view .LVU7915
 28019 0042 0120     		movs	r0, #1
 28020              	.LVL3534:
13198:Core/Src/bno055.c ****         }
 28021              		.loc 1 13198 23 view .LVU7916
 28022 0044 FFF7FEFF 		bl	bno055_write_page_id
 28023              	.LVL3535:
13200:Core/Src/bno055.c ****         {
 28024              		.loc 1 13200 9 is_stmt 1 view .LVU7917
13200:Core/Src/bno055.c ****         {
 28025              		.loc 1 13200 12 is_stmt 0 view .LVU7918
 28026 0048 0028     		cmp	r0, #0
 28027 004a EAD0     		beq	.L1917
 28028 004c E4E7     		b	.L1916
 28029              	.LVL3536:
 28030              	.L1918:
ARM GAS  /tmp/ccO72alg.s 			page 784


13189:Core/Src/bno055.c ****     }
 28031              		.loc 1 13189 16 view .LVU7919
 28032 004e 6FF07E00 		mvn	r0, #126
 28033              	.LVL3537:
13189:Core/Src/bno055.c ****     }
 28034              		.loc 1 13189 16 view .LVU7920
 28035 0052 F4E7     		b	.L1915
 28036              	.LVL3538:
 28037              	.L1919:
13211:Core/Src/bno055.c ****         }
 28038              		.loc 1 13211 22 view .LVU7921
 28039 0054 4FF0FF30 		mov	r0, #-1
 28040 0058 F1E7     		b	.L1915
 28041              	.L1923:
 28042 005a 00BF     		.align	2
 28043              	.L1922:
 28044 005c 00000000 		.word	.LANCHOR0
 28045              		.cfi_endproc
 28046              	.LFE199:
 28048              		.section	.text.bno055_gyro_set_auto_sleep_durn,"ax",%progbits
 28049              		.align	1
 28050              		.global	bno055_gyro_set_auto_sleep_durn
 28051              		.syntax unified
 28052              		.thumb
 28053              		.thumb_func
 28055              	bno055_gyro_set_auto_sleep_durn:
 28056              	.LVL3539:
 28057              	.LFB200:
13217:Core/Src/bno055.c **** 
13218:Core/Src/bno055.c **** /*!
13219:Core/Src/bno055.c ****  *  @brief This API used to write the gyro auto sleep duration
13220:Core/Src/bno055.c ****  *  from page one register from 0x0D bit 3 to 5
13221:Core/Src/bno055.c ****  *
13222:Core/Src/bno055.c ****  *  @param auto_sleep_durn_u8 : The value of gyro auto sleep duration
13223:Core/Src/bno055.c ****  *  @param bw : The value of gyro bandwidth
13224:Core/Src/bno055.c ****  *
13225:Core/Src/bno055.c ****  *  @return results of bus communication function
13226:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13227:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13228:Core/Src/bno055.c ****  *
13229:Core/Src/bno055.c ****  *
13230:Core/Src/bno055.c ****  */
13231:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_gyro_set_auto_sleep_durn(u8 auto_sleep_durn_u8, u8 bw)
13232:Core/Src/bno055.c **** {
 28058              		.loc 1 13232 1 is_stmt 1 view -0
 28059              		.cfi_startproc
 28060              		@ args = 0, pretend = 0, frame = 8
 28061              		@ frame_needed = 0, uses_anonymous_args = 0
 28062              		.loc 1 13232 1 is_stmt 0 view .LVU7923
 28063 0000 70B5     		push	{r4, r5, r6, lr}
 28064              	.LCFI785:
 28065              		.cfi_def_cfa_offset 16
 28066              		.cfi_offset 4, -16
 28067              		.cfi_offset 5, -12
 28068              		.cfi_offset 6, -8
 28069              		.cfi_offset 14, -4
 28070 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccO72alg.s 			page 785


 28071              	.LCFI786:
 28072              		.cfi_def_cfa_offset 24
13233:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28073              		.loc 1 13233 5 is_stmt 1 view .LVU7924
 28074              	.LVL3540:
13234:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28075              		.loc 1 13234 5 view .LVU7925
 28076              		.loc 1 13234 8 is_stmt 0 view .LVU7926
 28077 0004 0023     		movs	r3, #0
 28078 0006 8DF80730 		strb	r3, [sp, #7]
13235:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28079              		.loc 1 13235 5 is_stmt 1 view .LVU7927
 28080              	.LVL3541:
13236:Core/Src/bno055.c ****     u8 auto_sleep_durn_u8r;
 28081              		.loc 1 13236 5 view .LVU7928
13237:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28082              		.loc 1 13237 5 view .LVU7929
 28083              		.loc 1 13237 8 is_stmt 0 view .LVU7930
 28084 000a 8DF80630 		strb	r3, [sp, #6]
13238:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28085              		.loc 1 13238 5 is_stmt 1 view .LVU7931
 28086              	.LVL3542:
13239:Core/Src/bno055.c **** 
13240:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13241:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28087              		.loc 1 13241 5 view .LVU7932
 28088              		.loc 1 13241 18 is_stmt 0 view .LVU7933
 28089 000e 444B     		ldr	r3, .L1958
 28090 0010 1B68     		ldr	r3, [r3]
 28091              		.loc 1 13241 8 view .LVU7934
 28092 0012 002B     		cmp	r3, #0
 28093 0014 00F08180 		beq	.L1939
 28094 0018 0446     		mov	r4, r0
 28095 001a 0D46     		mov	r5, r1
13242:Core/Src/bno055.c ****     {
13243:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13244:Core/Src/bno055.c ****     }
13245:Core/Src/bno055.c ****     else
13246:Core/Src/bno055.c ****     {
13247:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13248:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13249:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13250:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 28096              		.loc 1 13250 9 is_stmt 1 view .LVU7935
 28097              		.loc 1 13250 19 is_stmt 0 view .LVU7936
 28098 001c 0DF10600 		add	r0, sp, #6
 28099              	.LVL3543:
 28100              		.loc 1 13250 19 view .LVU7937
 28101 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 28102              	.LVL3544:
13251:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28103              		.loc 1 13251 9 is_stmt 1 view .LVU7938
 28104              		.loc 1 13251 12 is_stmt 0 view .LVU7939
 28105 0024 0646     		mov	r6, r0
 28106 0026 0028     		cmp	r0, #0
 28107 0028 63D1     		bne	.L1940
13252:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 786


13253:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28108              		.loc 1 13253 13 is_stmt 1 view .LVU7940
 28109              		.loc 1 13253 32 is_stmt 0 view .LVU7941
 28110 002a 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 28111              		.loc 1 13253 16 view .LVU7942
 28112 002e 1BB9     		cbnz	r3, .L1954
 28113              	.LVL3545:
 28114              	.L1927:
13254:Core/Src/bno055.c ****             {
13255:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13256:Core/Src/bno055.c ****             }
13257:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 28115              		.loc 1 13257 13 is_stmt 1 view .LVU7943
 28116              		.loc 1 13257 16 is_stmt 0 view .LVU7944
 28117 0030 46B1     		cbz	r6, .L1955
13258:Core/Src/bno055.c ****             {
13259:Core/Src/bno055.c ****                 /* Write page as one */
13260:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13261:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13262:Core/Src/bno055.c ****                 {
13263:Core/Src/bno055.c ****                     /* Write the value of gyro sleep duration */
13264:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13265:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
13266:Core/Src/bno055.c ****                                                               &data_u8r,
13267:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13268:Core/Src/bno055.c ****                     if (auto_sleep_durn_u8 < BNO055_GYRO_AUTO_SLEEP_DURATION_RANGE)
13269:Core/Src/bno055.c ****                     {
13270:Core/Src/bno055.c ****                         switch (bw)
13271:Core/Src/bno055.c ****                         {
13272:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_523HZ:
13273:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13274:Core/Src/bno055.c ****                                 {
13275:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13276:Core/Src/bno055.c ****                                 }
13277:Core/Src/bno055.c ****                                 else
13278:Core/Src/bno055.c ****                                 {
13279:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13280:Core/Src/bno055.c ****                                 }
13281:Core/Src/bno055.c ****                                 break;
13282:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_230HZ:
13283:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13284:Core/Src/bno055.c ****                                 {
13285:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13286:Core/Src/bno055.c ****                                 }
13287:Core/Src/bno055.c ****                                 else
13288:Core/Src/bno055.c ****                                 {
13289:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13290:Core/Src/bno055.c ****                                 }
13291:Core/Src/bno055.c ****                                 break;
13292:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_116HZ:
13293:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13294:Core/Src/bno055.c ****                                 {
13295:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13296:Core/Src/bno055.c ****                                 }
13297:Core/Src/bno055.c ****                                 else
13298:Core/Src/bno055.c ****                                 {
13299:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
ARM GAS  /tmp/ccO72alg.s 			page 787


13300:Core/Src/bno055.c ****                                 }
13301:Core/Src/bno055.c ****                                 break;
13302:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_47HZ:
13303:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_5MS_AUTOSLPDUR)
13304:Core/Src/bno055.c ****                                 {
13305:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13306:Core/Src/bno055.c ****                                 }
13307:Core/Src/bno055.c ****                                 else
13308:Core/Src/bno055.c ****                                 {
13309:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_5MS_AUTOSLPDUR;
13310:Core/Src/bno055.c ****                                 }
13311:Core/Src/bno055.c ****                                 break;
13312:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_23HZ:
13313:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13314:Core/Src/bno055.c ****                                 {
13315:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13316:Core/Src/bno055.c ****                                 }
13317:Core/Src/bno055.c ****                                 else
13318:Core/Src/bno055.c ****                                 {
13319:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13320:Core/Src/bno055.c ****                                 }
13321:Core/Src/bno055.c ****                                 break;
13322:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_12HZ:
13323:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13324:Core/Src/bno055.c ****                                 {
13325:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13326:Core/Src/bno055.c ****                                 }
13327:Core/Src/bno055.c ****                                 else
13328:Core/Src/bno055.c ****                                 {
13329:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13330:Core/Src/bno055.c ****                                 }
13331:Core/Src/bno055.c ****                                 break;
13332:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_64HZ:
13333:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_10MS_AUTOSLPDUR)
13334:Core/Src/bno055.c ****                                 {
13335:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13336:Core/Src/bno055.c ****                                 }
13337:Core/Src/bno055.c ****                                 else
13338:Core/Src/bno055.c ****                                 {
13339:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_10MS_AUTOSLPDUR;
13340:Core/Src/bno055.c ****                                 }
13341:Core/Src/bno055.c ****                                 break;
13342:Core/Src/bno055.c ****                             case BNO055_GYRO_BW_32HZ:
13343:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_20MS_AUTOSLPDUR)
13344:Core/Src/bno055.c ****                                 {
13345:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13346:Core/Src/bno055.c ****                                 }
13347:Core/Src/bno055.c ****                                 else
13348:Core/Src/bno055.c ****                                 {
13349:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_20MS_AUTOSLPDUR;
13350:Core/Src/bno055.c ****                                 }
13351:Core/Src/bno055.c ****                                 break;
13352:Core/Src/bno055.c ****                             default:
13353:Core/Src/bno055.c ****                                 if (auto_sleep_durn_u8 > BNO055_GYRO_4MS_AUTOSLPDUR)
13354:Core/Src/bno055.c ****                                 {
13355:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = auto_sleep_durn_u8;
13356:Core/Src/bno055.c ****                                 }
ARM GAS  /tmp/ccO72alg.s 			page 788


13357:Core/Src/bno055.c ****                                 else
13358:Core/Src/bno055.c ****                                 {
13359:Core/Src/bno055.c ****                                     auto_sleep_durn_u8r = BNO055_GYRO_4MS_AUTOSLPDUR;
13360:Core/Src/bno055.c ****                                 }
13361:Core/Src/bno055.c ****                                 break;
13362:Core/Src/bno055.c ****                         }
13363:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
13364:Core/Src/bno055.c ****                         {
13365:Core/Src/bno055.c ****                             data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AUTO_SLEEP_DURN, a
13366:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13367:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
13368:Core/Src/bno055.c ****                                                                         &data_u8r,
13369:Core/Src/bno055.c ****                                                                         BNO055_GEN_READ_WRITE_LENGT
13370:Core/Src/bno055.c ****                         }
13371:Core/Src/bno055.c ****                     }
13372:Core/Src/bno055.c ****                     else
13373:Core/Src/bno055.c ****                     {
13374:Core/Src/bno055.c ****                         com_rslt = BNO055_OUT_OF_RANGE;
13375:Core/Src/bno055.c ****                     }
13376:Core/Src/bno055.c ****                 }
13377:Core/Src/bno055.c ****                 else
13378:Core/Src/bno055.c ****                 {
13379:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13380:Core/Src/bno055.c ****                 }
13381:Core/Src/bno055.c ****             }
13382:Core/Src/bno055.c ****             else
13383:Core/Src/bno055.c ****             {
13384:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 28118              		.loc 1 13384 26 view .LVU7945
 28119 0032 4FF0FF36 		mov	r6, #-1
 28120              	.LVL3546:
 28121              		.loc 1 13384 26 view .LVU7946
 28122 0036 5EE0     		b	.L1926
 28123              	.LVL3547:
 28124              	.L1954:
13255:Core/Src/bno055.c ****             }
 28125              		.loc 1 13255 17 is_stmt 1 view .LVU7947
13255:Core/Src/bno055.c ****             }
 28126              		.loc 1 13255 28 is_stmt 0 view .LVU7948
 28127 0038 FFF7FEFF 		bl	bno055_set_operation_mode
 28128              	.LVL3548:
13255:Core/Src/bno055.c ****             }
 28129              		.loc 1 13255 25 view .LVU7949
 28130 003c 56FA80F6 		uxtab	r6, r6, r0
 28131 0040 76B2     		sxtb	r6, r6
 28132              	.LVL3549:
13255:Core/Src/bno055.c ****             }
 28133              		.loc 1 13255 25 view .LVU7950
 28134 0042 F5E7     		b	.L1927
 28135              	.L1955:
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28136              		.loc 1 13260 17 is_stmt 1 view .LVU7951
13260:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28137              		.loc 1 13260 30 is_stmt 0 view .LVU7952
 28138 0044 0120     		movs	r0, #1
 28139 0046 FFF7FEFF 		bl	bno055_write_page_id
 28140              	.LVL3550:
ARM GAS  /tmp/ccO72alg.s 			page 789


13261:Core/Src/bno055.c ****                 {
 28141              		.loc 1 13261 17 is_stmt 1 view .LVU7953
13261:Core/Src/bno055.c ****                 {
 28142              		.loc 1 13261 20 is_stmt 0 view .LVU7954
 28143 004a 0028     		cmp	r0, #0
 28144 004c 59D1     		bne	.L1942
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28145              		.loc 1 13264 21 is_stmt 1 view .LVU7955
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28146              		.loc 1 13264 40 is_stmt 0 view .LVU7956
 28147 004e 344B     		ldr	r3, .L1958
 28148 0050 1868     		ldr	r0, [r3]
 28149              	.LVL3551:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28150              		.loc 1 13264 40 view .LVU7957
 28151 0052 0669     		ldr	r6, [r0, #16]
 28152              	.LVL3552:
13264:Core/Src/bno055.c ****                                                               BNO055_GYRO_AUTO_SLEEP_DURN_REG,
 28153              		.loc 1 13264 32 view .LVU7958
 28154 0054 0123     		movs	r3, #1
 28155 0056 0DF10702 		add	r2, sp, #7
 28156 005a 0D21     		movs	r1, #13
 28157 005c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28158 005e B047     		blx	r6
 28159              	.LVL3553:
 28160 0060 0646     		mov	r6, r0
 28161              	.LVL3554:
13268:Core/Src/bno055.c ****                     {
 28162              		.loc 1 13268 21 is_stmt 1 view .LVU7959
13268:Core/Src/bno055.c ****                     {
 28163              		.loc 1 13268 24 is_stmt 0 view .LVU7960
 28164 0062 072C     		cmp	r4, #7
 28165 0064 50D8     		bhi	.L1943
13270:Core/Src/bno055.c ****                         {
 28166              		.loc 1 13270 25 is_stmt 1 view .LVU7961
 28167 0066 072D     		cmp	r5, #7
 28168 0068 3DD8     		bhi	.L1928
 28169 006a DFE805F0 		tbb	[pc, r5]
 28170              	.L1930:
 28171 006e 04       		.byte	(.L1937-.L1930)/2
 28172 006f 20       		.byte	(.L1936-.L1930)/2
 28173 0070 24       		.byte	(.L1935-.L1930)/2
 28174 0071 28       		.byte	(.L1934-.L1930)/2
 28175 0072 2C       		.byte	(.L1933-.L1930)/2
 28176 0073 30       		.byte	(.L1932-.L1930)/2
 28177 0074 34       		.byte	(.L1931-.L1930)/2
 28178 0075 38       		.byte	(.L1929-.L1930)/2
 28179              		.p2align 1
 28180              	.L1937:
13273:Core/Src/bno055.c ****                                 {
 28181              		.loc 1 13273 33 view .LVU7962
13273:Core/Src/bno055.c ****                                 {
 28182              		.loc 1 13273 36 is_stmt 0 view .LVU7963
 28183 0076 012C     		cmp	r4, #1
 28184 0078 39D9     		bls	.L1956
 28185              	.L1938:
 28186              	.LVL3555:
ARM GAS  /tmp/ccO72alg.s 			page 790


13363:Core/Src/bno055.c ****                         {
 28187              		.loc 1 13363 25 is_stmt 1 view .LVU7964
13363:Core/Src/bno055.c ****                         {
 28188              		.loc 1 13363 28 is_stmt 0 view .LVU7965
 28189 007a 002E     		cmp	r6, #0
 28190 007c 3BD1     		bne	.L1926
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28191              		.loc 1 13365 29 is_stmt 1 view .LVU7966
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28192              		.loc 1 13365 40 is_stmt 0 view .LVU7967
 28193 007e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28194 0082 23F03803 		bic	r3, r3, #56
 28195 0086 5BB2     		sxtb	r3, r3
 28196 0088 E400     		lsls	r4, r4, #3
 28197              	.LVL3556:
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28198              		.loc 1 13365 40 view .LVU7968
 28199 008a 04F03804 		and	r4, r4, #56
 28200 008e 1C43     		orrs	r4, r4, r3
13365:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28201              		.loc 1 13365 38 view .LVU7969
 28202 0090 8DF80740 		strb	r4, [sp, #7]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28203              		.loc 1 13366 29 is_stmt 1 view .LVU7970
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28204              		.loc 1 13366 49 is_stmt 0 view .LVU7971
 28205 0094 224B     		ldr	r3, .L1958
 28206 0096 1868     		ldr	r0, [r3]
 28207 0098 C468     		ldr	r4, [r0, #12]
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28208              		.loc 1 13366 41 view .LVU7972
 28209 009a 0123     		movs	r3, #1
 28210 009c 0DF10702 		add	r2, sp, #7
 28211 00a0 0D21     		movs	r1, #13
 28212 00a2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28213 00a4 A047     		blx	r4
 28214              	.LVL3557:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28215              		.loc 1 13366 38 view .LVU7973
 28216 00a6 56FA80F6 		uxtab	r6, r6, r0
 28217              	.LVL3558:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28218              		.loc 1 13366 38 view .LVU7974
 28219 00aa 76B2     		sxtb	r6, r6
 28220              	.LVL3559:
13366:Core/Src/bno055.c ****                                                                         BNO055_GYRO_AUTO_SLEEP_DURN
 28221              		.loc 1 13366 38 view .LVU7975
 28222 00ac 23E0     		b	.L1926
 28223              	.L1936:
13283:Core/Src/bno055.c ****                                 {
 28224              		.loc 1 13283 33 is_stmt 1 view .LVU7976
13283:Core/Src/bno055.c ****                                 {
 28225              		.loc 1 13283 36 is_stmt 0 view .LVU7977
 28226 00ae 012C     		cmp	r4, #1
 28227 00b0 E3D8     		bhi	.L1938
13289:Core/Src/bno055.c ****                                 }
 28228              		.loc 1 13289 57 view .LVU7978
ARM GAS  /tmp/ccO72alg.s 			page 791


 28229 00b2 2C46     		mov	r4, r5
 28230 00b4 E1E7     		b	.L1938
 28231              	.L1935:
13293:Core/Src/bno055.c ****                                 {
 28232              		.loc 1 13293 33 is_stmt 1 view .LVU7979
13293:Core/Src/bno055.c ****                                 {
 28233              		.loc 1 13293 36 is_stmt 0 view .LVU7980
 28234 00b6 012C     		cmp	r4, #1
 28235 00b8 DFD8     		bhi	.L1938
13299:Core/Src/bno055.c ****                                 }
 28236              		.loc 1 13299 57 view .LVU7981
 28237 00ba 0124     		movs	r4, #1
 28238 00bc DDE7     		b	.L1938
 28239              	.L1934:
13303:Core/Src/bno055.c ****                                 {
 28240              		.loc 1 13303 33 is_stmt 1 view .LVU7982
13303:Core/Src/bno055.c ****                                 {
 28241              		.loc 1 13303 36 is_stmt 0 view .LVU7983
 28242 00be 022C     		cmp	r4, #2
 28243 00c0 DBD8     		bhi	.L1938
13309:Core/Src/bno055.c ****                                 }
 28244              		.loc 1 13309 57 view .LVU7984
 28245 00c2 0224     		movs	r4, #2
 28246 00c4 D9E7     		b	.L1938
 28247              	.L1933:
13313:Core/Src/bno055.c ****                                 {
 28248              		.loc 1 13313 33 is_stmt 1 view .LVU7985
13313:Core/Src/bno055.c ****                                 {
 28249              		.loc 1 13313 36 is_stmt 0 view .LVU7986
 28250 00c6 042C     		cmp	r4, #4
 28251 00c8 D7D8     		bhi	.L1938
13319:Core/Src/bno055.c ****                                 }
 28252              		.loc 1 13319 57 view .LVU7987
 28253 00ca 2C46     		mov	r4, r5
 28254 00cc D5E7     		b	.L1938
 28255              	.L1932:
13323:Core/Src/bno055.c ****                                 {
 28256              		.loc 1 13323 33 is_stmt 1 view .LVU7988
13323:Core/Src/bno055.c ****                                 {
 28257              		.loc 1 13323 36 is_stmt 0 view .LVU7989
 28258 00ce 062C     		cmp	r4, #6
 28259 00d0 D3D8     		bhi	.L1938
13329:Core/Src/bno055.c ****                                 }
 28260              		.loc 1 13329 57 view .LVU7990
 28261 00d2 0624     		movs	r4, #6
 28262 00d4 D1E7     		b	.L1938
 28263              	.L1931:
13333:Core/Src/bno055.c ****                                 {
 28264              		.loc 1 13333 33 is_stmt 1 view .LVU7991
13333:Core/Src/bno055.c ****                                 {
 28265              		.loc 1 13333 36 is_stmt 0 view .LVU7992
 28266 00d6 042C     		cmp	r4, #4
 28267 00d8 CFD8     		bhi	.L1938
13339:Core/Src/bno055.c ****                                 }
 28268              		.loc 1 13339 57 view .LVU7993
 28269 00da 0424     		movs	r4, #4
 28270 00dc CDE7     		b	.L1938
ARM GAS  /tmp/ccO72alg.s 			page 792


 28271              	.L1929:
13343:Core/Src/bno055.c ****                                 {
 28272              		.loc 1 13343 33 is_stmt 1 view .LVU7994
13343:Core/Src/bno055.c ****                                 {
 28273              		.loc 1 13343 36 is_stmt 0 view .LVU7995
 28274 00de 062C     		cmp	r4, #6
 28275 00e0 CBD8     		bhi	.L1938
13349:Core/Src/bno055.c ****                                 }
 28276              		.loc 1 13349 57 view .LVU7996
 28277 00e2 0624     		movs	r4, #6
 28278 00e4 C9E7     		b	.L1938
 28279              	.L1928:
13353:Core/Src/bno055.c ****                                 {
 28280              		.loc 1 13353 33 is_stmt 1 view .LVU7997
13353:Core/Src/bno055.c ****                                 {
 28281              		.loc 1 13353 36 is_stmt 0 view .LVU7998
 28282 00e6 012C     		cmp	r4, #1
 28283 00e8 C7D8     		bhi	.L1938
13359:Core/Src/bno055.c ****                                 }
 28284              		.loc 1 13359 57 view .LVU7999
 28285 00ea 0124     		movs	r4, #1
 28286 00ec C5E7     		b	.L1938
 28287              	.L1956:
13279:Core/Src/bno055.c ****                                 }
 28288              		.loc 1 13279 57 view .LVU8000
 28289 00ee 0124     		movs	r4, #1
 28290 00f0 C3E7     		b	.L1938
 28291              	.LVL3560:
 28292              	.L1940:
13385:Core/Src/bno055.c ****             }
13386:Core/Src/bno055.c ****         }
13387:Core/Src/bno055.c ****         else
13388:Core/Src/bno055.c ****         {
13389:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 28293              		.loc 1 13389 22 view .LVU8001
 28294 00f2 4FF0FF36 		mov	r6, #-1
 28295              	.LVL3561:
 28296              	.L1926:
13390:Core/Src/bno055.c ****         }
13391:Core/Src/bno055.c ****     }
13392:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 28297              		.loc 1 13392 5 is_stmt 1 view .LVU8002
 28298              		.loc 1 13392 24 is_stmt 0 view .LVU8003
 28299 00f6 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28300              		.loc 1 13392 8 view .LVU8004
 28301 00fa 40B9     		cbnz	r0, .L1957
 28302              	.LVL3562:
 28303              	.L1925:
13393:Core/Src/bno055.c ****     {
13394:Core/Src/bno055.c ****         /* set the operation mode of
13395:Core/Src/bno055.c ****          * previous operation mode*/
13396:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13397:Core/Src/bno055.c ****     }
13398:Core/Src/bno055.c **** 
13399:Core/Src/bno055.c ****     return com_rslt;
13400:Core/Src/bno055.c **** }
 28304              		.loc 1 13400 1 view .LVU8005
ARM GAS  /tmp/ccO72alg.s 			page 793


 28305 00fc 3046     		mov	r0, r6
 28306 00fe 02B0     		add	sp, sp, #8
 28307              	.LCFI787:
 28308              		.cfi_remember_state
 28309              		.cfi_def_cfa_offset 16
 28310              		@ sp needed
 28311 0100 70BD     		pop	{r4, r5, r6, pc}
 28312              	.LVL3563:
 28313              	.L1942:
 28314              	.LCFI788:
 28315              		.cfi_restore_state
13379:Core/Src/bno055.c ****                 }
 28316              		.loc 1 13379 30 view .LVU8006
 28317 0102 4FF0FF36 		mov	r6, #-1
 28318              	.LVL3564:
13379:Core/Src/bno055.c ****                 }
 28319              		.loc 1 13379 30 view .LVU8007
 28320 0106 F6E7     		b	.L1926
 28321              	.LVL3565:
 28322              	.L1943:
13374:Core/Src/bno055.c ****                     }
 28323              		.loc 1 13374 34 view .LVU8008
 28324 0108 6FF00106 		mvn	r6, #1
 28325              	.LVL3566:
13374:Core/Src/bno055.c ****                     }
 28326              		.loc 1 13374 34 view .LVU8009
 28327 010c F3E7     		b	.L1926
 28328              	.LVL3567:
 28329              	.L1957:
13396:Core/Src/bno055.c ****     }
 28330              		.loc 1 13396 9 is_stmt 1 view .LVU8010
13396:Core/Src/bno055.c ****     }
 28331              		.loc 1 13396 21 is_stmt 0 view .LVU8011
 28332 010e FFF7FEFF 		bl	bno055_set_operation_mode
 28333              	.LVL3568:
13396:Core/Src/bno055.c ****     }
 28334              		.loc 1 13396 18 view .LVU8012
 28335 0112 56FA80F6 		uxtab	r6, r6, r0
 28336              	.LVL3569:
13396:Core/Src/bno055.c ****     }
 28337              		.loc 1 13396 18 view .LVU8013
 28338 0116 76B2     		sxtb	r6, r6
 28339              	.LVL3570:
13396:Core/Src/bno055.c ****     }
 28340              		.loc 1 13396 18 view .LVU8014
 28341 0118 F0E7     		b	.L1925
 28342              	.LVL3571:
 28343              	.L1939:
13243:Core/Src/bno055.c ****     }
 28344              		.loc 1 13243 16 view .LVU8015
 28345 011a 6FF07E06 		mvn	r6, #126
 28346 011e EDE7     		b	.L1925
 28347              	.L1959:
 28348              		.align	2
 28349              	.L1958:
 28350 0120 00000000 		.word	.LANCHOR0
 28351              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 794


 28352              	.LFE200:
 28354              		.section	.text.bno055_set_gyro_bw,"ax",%progbits
 28355              		.align	1
 28356              		.global	bno055_set_gyro_bw
 28357              		.syntax unified
 28358              		.thumb
 28359              		.thumb_func
 28361              	bno055_set_gyro_bw:
 28362              	.LVL3572:
 28363              	.LFB190:
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28364              		.loc 1 12395 1 is_stmt 1 view -0
 28365              		.cfi_startproc
 28366              		@ args = 0, pretend = 0, frame = 8
 28367              		@ frame_needed = 0, uses_anonymous_args = 0
12395:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28368              		.loc 1 12395 1 is_stmt 0 view .LVU8017
 28369 0000 70B5     		push	{r4, r5, r6, lr}
 28370              	.LCFI789:
 28371              		.cfi_def_cfa_offset 16
 28372              		.cfi_offset 4, -16
 28373              		.cfi_offset 5, -12
 28374              		.cfi_offset 6, -8
 28375              		.cfi_offset 14, -4
 28376 0002 82B0     		sub	sp, sp, #8
 28377              	.LCFI790:
 28378              		.cfi_def_cfa_offset 24
12396:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28379              		.loc 1 12396 5 is_stmt 1 view .LVU8018
 28380              	.LVL3573:
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28381              		.loc 1 12397 5 view .LVU8019
12397:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28382              		.loc 1 12397 8 is_stmt 0 view .LVU8020
 28383 0004 0023     		movs	r3, #0
 28384 0006 8DF80730 		strb	r3, [sp, #7]
12398:Core/Src/bno055.c ****     u8 gyro_opmode = BNO055_INIT_VALUE;
 28385              		.loc 1 12398 5 is_stmt 1 view .LVU8021
 28386              	.LVL3574:
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28387              		.loc 1 12399 5 view .LVU8022
12399:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28388              		.loc 1 12399 8 is_stmt 0 view .LVU8023
 28389 000a 8DF80630 		strb	r3, [sp, #6]
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28390              		.loc 1 12400 5 is_stmt 1 view .LVU8024
12400:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28391              		.loc 1 12400 8 is_stmt 0 view .LVU8025
 28392 000e 8DF80530 		strb	r3, [sp, #5]
12401:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28393              		.loc 1 12401 5 is_stmt 1 view .LVU8026
 28394              	.LVL3575:
12402:Core/Src/bno055.c **** 
 28395              		.loc 1 12402 5 view .LVU8027
12402:Core/Src/bno055.c **** 
 28396              		.loc 1 12402 8 is_stmt 0 view .LVU8028
 28397 0012 8DF80430 		strb	r3, [sp, #4]
ARM GAS  /tmp/ccO72alg.s 			page 795


12405:Core/Src/bno055.c ****     {
 28398              		.loc 1 12405 5 is_stmt 1 view .LVU8029
12405:Core/Src/bno055.c ****     {
 28399              		.loc 1 12405 18 is_stmt 0 view .LVU8030
 28400 0016 384B     		ldr	r3, .L1974
 28401 0018 1B68     		ldr	r3, [r3]
12405:Core/Src/bno055.c ****     {
 28402              		.loc 1 12405 8 view .LVU8031
 28403 001a 002B     		cmp	r3, #0
 28404 001c 68D0     		beq	.L1965
 28405 001e 0546     		mov	r5, r0
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28406              		.loc 1 12414 9 is_stmt 1 view .LVU8032
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28407              		.loc 1 12414 19 is_stmt 0 view .LVU8033
 28408 0020 01A8     		add	r0, sp, #4
 28409              	.LVL3576:
12414:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28410              		.loc 1 12414 19 view .LVU8034
 28411 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 28412              	.LVL3577:
12415:Core/Src/bno055.c ****         {
 28413              		.loc 1 12415 9 is_stmt 1 view .LVU8035
12415:Core/Src/bno055.c ****         {
 28414              		.loc 1 12415 12 is_stmt 0 view .LVU8036
 28415 0026 0446     		mov	r4, r0
 28416 0028 0028     		cmp	r0, #0
 28417 002a 4DD1     		bne	.L1966
12417:Core/Src/bno055.c ****             {
 28418              		.loc 1 12417 13 is_stmt 1 view .LVU8037
12417:Core/Src/bno055.c ****             {
 28419              		.loc 1 12417 32 is_stmt 0 view .LVU8038
 28420 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12417:Core/Src/bno055.c ****             {
 28421              		.loc 1 12417 16 view .LVU8039
 28422 0030 1BB9     		cbnz	r3, .L1971
 28423              	.LVL3578:
 28424              	.L1963:
12421:Core/Src/bno055.c ****             {
 28425              		.loc 1 12421 13 is_stmt 1 view .LVU8040
12421:Core/Src/bno055.c ****             {
 28426              		.loc 1 12421 16 is_stmt 0 view .LVU8041
 28427 0032 44B1     		cbz	r4, .L1972
12497:Core/Src/bno055.c ****             }
 28428              		.loc 1 12497 26 view .LVU8042
 28429 0034 4FF0FF34 		mov	r4, #-1
 28430              	.LVL3579:
12497:Core/Src/bno055.c ****             }
 28431              		.loc 1 12497 26 view .LVU8043
 28432 0038 48E0     		b	.L1962
 28433              	.LVL3580:
 28434              	.L1971:
12419:Core/Src/bno055.c ****             }
 28435              		.loc 1 12419 17 is_stmt 1 view .LVU8044
12419:Core/Src/bno055.c ****             }
 28436              		.loc 1 12419 28 is_stmt 0 view .LVU8045
 28437 003a FFF7FEFF 		bl	bno055_set_operation_mode
ARM GAS  /tmp/ccO72alg.s 			page 796


 28438              	.LVL3581:
12419:Core/Src/bno055.c ****             }
 28439              		.loc 1 12419 25 view .LVU8046
 28440 003e 54FA80F4 		uxtab	r4, r4, r0
 28441 0042 64B2     		sxtb	r4, r4
 28442              	.LVL3582:
12419:Core/Src/bno055.c ****             }
 28443              		.loc 1 12419 25 view .LVU8047
 28444 0044 F5E7     		b	.L1963
 28445              	.L1972:
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28446              		.loc 1 12424 17 is_stmt 1 view .LVU8048
12424:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28447              		.loc 1 12424 30 is_stmt 0 view .LVU8049
 28448 0046 0120     		movs	r0, #1
 28449 0048 FFF7FEFF 		bl	bno055_write_page_id
 28450              	.LVL3583:
12425:Core/Src/bno055.c ****                 {
 28451              		.loc 1 12425 17 is_stmt 1 view .LVU8050
12425:Core/Src/bno055.c ****                 {
 28452              		.loc 1 12425 20 is_stmt 0 view .LVU8051
 28453 004c 0028     		cmp	r0, #0
 28454 004e 43D1     		bne	.L1968
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 28455              		.loc 1 12428 21 is_stmt 1 view .LVU8052
12428:Core/Src/bno055.c ****                         gyro_bw_u8 < BNO055_ACCEL_GYRO_BW_RANGE)
 28456              		.loc 1 12428 24 is_stmt 0 view .LVU8053
 28457 0050 072D     		cmp	r5, #7
 28458 0052 44D8     		bhi	.L1969
12431:Core/Src/bno055.c ****                         {
 28459              		.loc 1 12431 25 is_stmt 1 view .LVU8054
 28460              	.LVL3584:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28461              		.loc 1 12460 25 view .LVU8055
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28462              		.loc 1 12460 44 is_stmt 0 view .LVU8056
 28463 0054 284B     		ldr	r3, .L1974
 28464 0056 1868     		ldr	r0, [r3]
 28465              	.LVL3585:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28466              		.loc 1 12460 44 view .LVU8057
 28467 0058 0469     		ldr	r4, [r0, #16]
 28468              	.LVL3586:
12460:Core/Src/bno055.c ****                                                                   BNO055_GYRO_BW_REG,
 28469              		.loc 1 12460 36 view .LVU8058
 28470 005a 0123     		movs	r3, #1
 28471 005c 0DF10702 		add	r2, sp, #7
 28472 0060 0A21     		movs	r1, #10
 28473 0062 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28474 0064 A047     		blx	r4
 28475              	.LVL3587:
12464:Core/Src/bno055.c ****                         {
 28476              		.loc 1 12464 25 is_stmt 1 view .LVU8059
12464:Core/Src/bno055.c ****                         {
 28477              		.loc 1 12464 28 is_stmt 0 view .LVU8060
 28478 0066 98B9     		cbnz	r0, .L1964
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 797


 28479              		.loc 1 12466 29 is_stmt 1 view .LVU8061
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28480              		.loc 1 12466 40 is_stmt 0 view .LVU8062
 28481 0068 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28482 006c 23F03803 		bic	r3, r3, #56
 28483 0070 5BB2     		sxtb	r3, r3
 28484 0072 EA00     		lsls	r2, r5, #3
 28485 0074 02F03802 		and	r2, r2, #56
 28486 0078 1343     		orrs	r3, r3, r2
12466:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28487              		.loc 1 12466 38 view .LVU8063
 28488 007a 8DF80730 		strb	r3, [sp, #7]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28489              		.loc 1 12467 29 is_stmt 1 view .LVU8064
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28490              		.loc 1 12467 49 is_stmt 0 view .LVU8065
 28491 007e 1E4B     		ldr	r3, .L1974
 28492 0080 1868     		ldr	r0, [r3]
 28493              	.LVL3588:
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28494              		.loc 1 12467 49 view .LVU8066
 28495 0082 C468     		ldr	r4, [r0, #12]
12467:Core/Src/bno055.c ****                                                                         BNO055_GYRO_BW_REG,
 28496              		.loc 1 12467 41 view .LVU8067
 28497 0084 0123     		movs	r3, #1
 28498 0086 0DF10702 		add	r2, sp, #7
 28499 008a 0A21     		movs	r1, #10
 28500 008c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28501 008e A047     		blx	r4
 28502              	.LVL3589:
 28503              	.L1964:
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 28504              		.loc 1 12472 25 is_stmt 1 view .LVU8068
12472:Core/Src/bno055.c ****                         if (com_rslt == BNO055_SUCCESS)
 28505              		.loc 1 12472 36 is_stmt 0 view .LVU8069
 28506 0090 0DF10600 		add	r0, sp, #6
 28507 0094 FFF7FEFF 		bl	bno055_get_gyro_power_mode
 28508              	.LVL3590:
12473:Core/Src/bno055.c ****                         {
 28509              		.loc 1 12473 25 is_stmt 1 view .LVU8070
12473:Core/Src/bno055.c ****                         {
 28510              		.loc 1 12473 28 is_stmt 0 view .LVU8071
 28511 0098 0446     		mov	r4, r0
 28512 009a B8B9     		cbnz	r0, .L1962
12475:Core/Src/bno055.c ****                             {
 28513              		.loc 1 12475 29 is_stmt 1 view .LVU8072
12475:Core/Src/bno055.c ****                             {
 28514              		.loc 1 12475 45 is_stmt 0 view .LVU8073
 28515 009c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
12475:Core/Src/bno055.c ****                             {
 28516              		.loc 1 12475 32 view .LVU8074
 28517 00a0 042B     		cmp	r3, #4
 28518 00a2 13D1     		bne	.L1962
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28519              		.loc 1 12477 33 is_stmt 1 view .LVU8075
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28520              		.loc 1 12477 45 is_stmt 0 view .LVU8076
ARM GAS  /tmp/ccO72alg.s 			page 798


 28521 00a4 0DF10500 		add	r0, sp, #5
 28522              	.LVL3591:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28523              		.loc 1 12477 45 view .LVU8077
 28524 00a8 FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 28525              	.LVL3592:
12477:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28526              		.loc 1 12477 42 view .LVU8078
 28527 00ac 54FA80F4 		uxtab	r4, r4, r0
 28528 00b0 E6B2     		uxtb	r6, r4
 28529 00b2 64B2     		sxtb	r4, r4
 28530              	.LVL3593:
12478:Core/Src/bno055.c ****                                 {
 28531              		.loc 1 12478 33 is_stmt 1 view .LVU8079
12478:Core/Src/bno055.c ****                                 {
 28532              		.loc 1 12478 36 is_stmt 0 view .LVU8080
 28533 00b4 54B9     		cbnz	r4, .L1962
12480:Core/Src/bno055.c ****                                 }
 28534              		.loc 1 12480 37 is_stmt 1 view .LVU8081
12480:Core/Src/bno055.c ****                                 }
 28535              		.loc 1 12480 49 is_stmt 0 view .LVU8082
 28536 00b6 2946     		mov	r1, r5
 28537 00b8 9DF80500 		ldrb	r0, [sp, #5]	@ zero_extendqisi2
 28538 00bc FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 28539              	.LVL3594:
12480:Core/Src/bno055.c ****                                 }
 28540              		.loc 1 12480 46 view .LVU8083
 28541 00c0 56FA80F4 		uxtab	r4, r6, r0
 28542              	.LVL3595:
12480:Core/Src/bno055.c ****                                 }
 28543              		.loc 1 12480 46 view .LVU8084
 28544 00c4 64B2     		sxtb	r4, r4
 28545              	.LVL3596:
12480:Core/Src/bno055.c ****                                 }
 28546              		.loc 1 12480 46 view .LVU8085
 28547 00c6 01E0     		b	.L1962
 28548              	.LVL3597:
 28549              	.L1966:
12502:Core/Src/bno055.c ****         }
 28550              		.loc 1 12502 22 view .LVU8086
 28551 00c8 4FF0FF34 		mov	r4, #-1
 28552              	.LVL3598:
 28553              	.L1962:
12505:Core/Src/bno055.c ****     {
 28554              		.loc 1 12505 5 is_stmt 1 view .LVU8087
12505:Core/Src/bno055.c ****     {
 28555              		.loc 1 12505 24 is_stmt 0 view .LVU8088
 28556 00cc 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12505:Core/Src/bno055.c ****     {
 28557              		.loc 1 12505 8 view .LVU8089
 28558 00d0 40B9     		cbnz	r0, .L1973
 28559              	.LVL3599:
 28560              	.L1961:
12513:Core/Src/bno055.c **** 
 28561              		.loc 1 12513 1 view .LVU8090
 28562 00d2 2046     		mov	r0, r4
 28563 00d4 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccO72alg.s 			page 799


 28564              	.LCFI791:
 28565              		.cfi_remember_state
 28566              		.cfi_def_cfa_offset 16
 28567              		@ sp needed
 28568 00d6 70BD     		pop	{r4, r5, r6, pc}
 28569              	.LVL3600:
 28570              	.L1968:
 28571              	.LCFI792:
 28572              		.cfi_restore_state
12492:Core/Src/bno055.c ****                 }
 28573              		.loc 1 12492 30 view .LVU8091
 28574 00d8 4FF0FF34 		mov	r4, #-1
 28575              	.LVL3601:
12492:Core/Src/bno055.c ****                 }
 28576              		.loc 1 12492 30 view .LVU8092
 28577 00dc F6E7     		b	.L1962
 28578              	.LVL3602:
 28579              	.L1969:
12487:Core/Src/bno055.c ****                     }
 28580              		.loc 1 12487 34 view .LVU8093
 28581 00de 6FF00104 		mvn	r4, #1
 28582              	.LVL3603:
12487:Core/Src/bno055.c ****                     }
 28583              		.loc 1 12487 34 view .LVU8094
 28584 00e2 F3E7     		b	.L1962
 28585              	.LVL3604:
 28586              	.L1973:
12509:Core/Src/bno055.c ****     }
 28587              		.loc 1 12509 9 is_stmt 1 view .LVU8095
12509:Core/Src/bno055.c ****     }
 28588              		.loc 1 12509 21 is_stmt 0 view .LVU8096
 28589 00e4 FFF7FEFF 		bl	bno055_set_operation_mode
 28590              	.LVL3605:
12509:Core/Src/bno055.c ****     }
 28591              		.loc 1 12509 18 view .LVU8097
 28592 00e8 54FA80F4 		uxtab	r4, r4, r0
 28593              	.LVL3606:
12509:Core/Src/bno055.c ****     }
 28594              		.loc 1 12509 18 view .LVU8098
 28595 00ec 64B2     		sxtb	r4, r4
 28596              	.LVL3607:
12509:Core/Src/bno055.c ****     }
 28597              		.loc 1 12509 18 view .LVU8099
 28598 00ee F0E7     		b	.L1961
 28599              	.LVL3608:
 28600              	.L1965:
12407:Core/Src/bno055.c ****     }
 28601              		.loc 1 12407 16 view .LVU8100
 28602 00f0 6FF07E04 		mvn	r4, #126
 28603 00f4 EDE7     		b	.L1961
 28604              	.L1975:
 28605 00f6 00BF     		.align	2
 28606              	.L1974:
 28607 00f8 00000000 		.word	.LANCHOR0
 28608              		.cfi_endproc
 28609              	.LFE190:
 28611              		.section	.text.bno055_set_gyro_power_mode,"ax",%progbits
ARM GAS  /tmp/ccO72alg.s 			page 800


 28612              		.align	1
 28613              		.global	bno055_set_gyro_power_mode
 28614              		.syntax unified
 28615              		.thumb
 28616              		.thumb_func
 28618              	bno055_set_gyro_power_mode:
 28619              	.LVL3609:
 28620              	.LFB192:
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28621              		.loc 1 12596 1 is_stmt 1 view -0
 28622              		.cfi_startproc
 28623              		@ args = 0, pretend = 0, frame = 8
 28624              		@ frame_needed = 0, uses_anonymous_args = 0
12596:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28625              		.loc 1 12596 1 is_stmt 0 view .LVU8102
 28626 0000 30B5     		push	{r4, r5, lr}
 28627              	.LCFI793:
 28628              		.cfi_def_cfa_offset 12
 28629              		.cfi_offset 4, -12
 28630              		.cfi_offset 5, -8
 28631              		.cfi_offset 14, -4
 28632 0002 83B0     		sub	sp, sp, #12
 28633              	.LCFI794:
 28634              		.cfi_def_cfa_offset 24
12597:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28635              		.loc 1 12597 5 is_stmt 1 view .LVU8103
 28636              	.LVL3610:
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28637              		.loc 1 12598 5 view .LVU8104
12598:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28638              		.loc 1 12598 8 is_stmt 0 view .LVU8105
 28639 0004 0023     		movs	r3, #0
 28640 0006 8DF80730 		strb	r3, [sp, #7]
12599:Core/Src/bno055.c ****     u8 gyro_auto_sleep_durn = BNO055_INIT_VALUE;
 28641              		.loc 1 12599 5 is_stmt 1 view .LVU8106
 28642              	.LVL3611:
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 28643              		.loc 1 12600 5 view .LVU8107
12600:Core/Src/bno055.c ****     u8 gyro_bw_u8 = BNO055_INIT_VALUE;
 28644              		.loc 1 12600 8 is_stmt 0 view .LVU8108
 28645 000a 8DF80630 		strb	r3, [sp, #6]
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28646              		.loc 1 12601 5 is_stmt 1 view .LVU8109
12601:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 28647              		.loc 1 12601 8 is_stmt 0 view .LVU8110
 28648 000e 8DF80530 		strb	r3, [sp, #5]
12602:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 28649              		.loc 1 12602 5 is_stmt 1 view .LVU8111
 28650              	.LVL3612:
12603:Core/Src/bno055.c **** 
 28651              		.loc 1 12603 5 view .LVU8112
12603:Core/Src/bno055.c **** 
 28652              		.loc 1 12603 8 is_stmt 0 view .LVU8113
 28653 0012 8DF80430 		strb	r3, [sp, #4]
12606:Core/Src/bno055.c ****     {
 28654              		.loc 1 12606 5 is_stmt 1 view .LVU8114
12606:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 801


 28655              		.loc 1 12606 18 is_stmt 0 view .LVU8115
 28656 0016 3A4B     		ldr	r3, .L1994
 28657 0018 1B68     		ldr	r3, [r3]
12606:Core/Src/bno055.c ****     {
 28658              		.loc 1 12606 8 view .LVU8116
 28659 001a 002B     		cmp	r3, #0
 28660 001c 6DD0     		beq	.L1984
 28661 001e 0546     		mov	r5, r0
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28662              		.loc 1 12615 9 is_stmt 1 view .LVU8117
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28663              		.loc 1 12615 19 is_stmt 0 view .LVU8118
 28664 0020 01A8     		add	r0, sp, #4
 28665              	.LVL3613:
12615:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 28666              		.loc 1 12615 19 view .LVU8119
 28667 0022 FFF7FEFF 		bl	bno055_get_operation_mode
 28668              	.LVL3614:
12616:Core/Src/bno055.c ****         {
 28669              		.loc 1 12616 9 is_stmt 1 view .LVU8120
12616:Core/Src/bno055.c ****         {
 28670              		.loc 1 12616 12 is_stmt 0 view .LVU8121
 28671 0026 0446     		mov	r4, r0
 28672 0028 0028     		cmp	r0, #0
 28673 002a 52D1     		bne	.L1985
12618:Core/Src/bno055.c ****             {
 28674              		.loc 1 12618 13 is_stmt 1 view .LVU8122
12618:Core/Src/bno055.c ****             {
 28675              		.loc 1 12618 32 is_stmt 0 view .LVU8123
 28676 002c 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
12618:Core/Src/bno055.c ****             {
 28677              		.loc 1 12618 16 view .LVU8124
 28678 0030 1BB9     		cbnz	r3, .L1990
 28679              	.LVL3615:
 28680              	.L1979:
12622:Core/Src/bno055.c ****             {
 28681              		.loc 1 12622 13 is_stmt 1 view .LVU8125
12622:Core/Src/bno055.c ****             {
 28682              		.loc 1 12622 16 is_stmt 0 view .LVU8126
 28683 0032 44B1     		cbz	r4, .L1991
12684:Core/Src/bno055.c ****             }
 28684              		.loc 1 12684 26 view .LVU8127
 28685 0034 4FF0FF34 		mov	r4, #-1
 28686              	.LVL3616:
12684:Core/Src/bno055.c ****             }
 28687              		.loc 1 12684 26 view .LVU8128
 28688 0038 4DE0     		b	.L1978
 28689              	.LVL3617:
 28690              	.L1990:
12620:Core/Src/bno055.c ****             }
 28691              		.loc 1 12620 17 is_stmt 1 view .LVU8129
12620:Core/Src/bno055.c ****             }
 28692              		.loc 1 12620 28 is_stmt 0 view .LVU8130
 28693 003a FFF7FEFF 		bl	bno055_set_operation_mode
 28694              	.LVL3618:
12620:Core/Src/bno055.c ****             }
 28695              		.loc 1 12620 25 view .LVU8131
ARM GAS  /tmp/ccO72alg.s 			page 802


 28696 003e 54FA80F4 		uxtab	r4, r4, r0
 28697 0042 64B2     		sxtb	r4, r4
 28698              	.LVL3619:
12620:Core/Src/bno055.c ****             }
 28699              		.loc 1 12620 25 view .LVU8132
 28700 0044 F5E7     		b	.L1979
 28701              	.L1991:
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28702              		.loc 1 12625 17 is_stmt 1 view .LVU8133
12625:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 28703              		.loc 1 12625 30 is_stmt 0 view .LVU8134
 28704 0046 0120     		movs	r0, #1
 28705 0048 FFF7FEFF 		bl	bno055_write_page_id
 28706              	.LVL3620:
12626:Core/Src/bno055.c ****                 {
 28707              		.loc 1 12626 17 is_stmt 1 view .LVU8135
12626:Core/Src/bno055.c ****                 {
 28708              		.loc 1 12626 20 is_stmt 0 view .LVU8136
 28709 004c 0028     		cmp	r0, #0
 28710 004e 48D1     		bne	.L1987
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 28711              		.loc 1 12629 21 is_stmt 1 view .LVU8137
12629:Core/Src/bno055.c ****                         gyro_power_mode_u8 < BNO055_GYRO_RANGE)
 28712              		.loc 1 12629 24 is_stmt 0 view .LVU8138
 28713 0050 042D     		cmp	r5, #4
 28714 0052 49D8     		bhi	.L1988
12632:Core/Src/bno055.c ****                         {
 28715              		.loc 1 12632 25 is_stmt 1 view .LVU8139
 28716 0054 2B1F     		subs	r3, r5, #4
 28717 0056 002B     		cmp	r3, #0
 28718 0058 12D8     		bhi	.L1980
 28719 005a DFE803F0 		tbb	[pc, r3]
 28720              	.L1982:
 28721 005e 01       		.byte	(.L1981-.L1982)/2
 28722 005f 00       		.p2align 1
 28723              	.L1981:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28724              		.loc 1 12647 33 view .LVU8140
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28725              		.loc 1 12647 44 is_stmt 0 view .LVU8141
 28726 0060 0DF10500 		add	r0, sp, #5
 28727              	.LVL3621:
12647:Core/Src/bno055.c ****                                 com_rslt += bno055_get_gyro_auto_sleep_durn(&gyro_auto_sleep_durn);
 28728              		.loc 1 12647 44 view .LVU8142
 28729 0064 FFF7FEFF 		bl	bno055_get_gyro_bw
 28730              	.LVL3622:
 28731 0068 0446     		mov	r4, r0
 28732              	.LVL3623:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28733              		.loc 1 12648 33 is_stmt 1 view .LVU8143
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28734              		.loc 1 12648 45 is_stmt 0 view .LVU8144
 28735 006a 0DF10600 		add	r0, sp, #6
 28736 006e FFF7FEFF 		bl	bno055_get_gyro_auto_sleep_durn
 28737              	.LVL3624:
12648:Core/Src/bno055.c ****                                 if (com_rslt == BNO055_SUCCESS)
 28738              		.loc 1 12648 42 view .LVU8145
ARM GAS  /tmp/ccO72alg.s 			page 803


 28739 0072 54FA80F3 		uxtab	r3, r4, r0
 28740 0076 5BB2     		sxtb	r3, r3
 28741              	.LVL3625:
12649:Core/Src/bno055.c ****                                 {
 28742              		.loc 1 12649 33 is_stmt 1 view .LVU8146
12649:Core/Src/bno055.c ****                                 {
 28743              		.loc 1 12649 36 is_stmt 0 view .LVU8147
 28744 0078 23B3     		cbz	r3, .L1992
 28745              	.LVL3626:
 28746              	.L1983:
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 28747              		.loc 1 12653 33 is_stmt 1 view .LVU8148
12653:Core/Src/bno055.c ****                                 gyro_power_mode_u8 = BNO055_GYRO_POWER_MODE_ADVANCE_POWERSAVE;
 28748              		.loc 1 12653 45 is_stmt 0 view .LVU8149
 28749 007a 0120     		movs	r0, #1
 28750 007c FFF7FEFF 		bl	bno055_write_page_id
 28751              	.LVL3627:
12654:Core/Src/bno055.c ****                                 break;
 28752              		.loc 1 12654 33 is_stmt 1 view .LVU8150
12655:Core/Src/bno055.c ****                             default:
 28753              		.loc 1 12655 33 view .LVU8151
 28754              	.L1980:
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28755              		.loc 1 12659 25 view .LVU8152
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28756              		.loc 1 12659 44 is_stmt 0 view .LVU8153
 28757 0080 1F4B     		ldr	r3, .L1994
 28758 0082 1868     		ldr	r0, [r3]
 28759 0084 0469     		ldr	r4, [r0, #16]
12659:Core/Src/bno055.c ****                                                                   BNO055_GYRO_POWER_MODE_REG,
 28760              		.loc 1 12659 36 view .LVU8154
 28761 0086 0123     		movs	r3, #1
 28762 0088 0DF10702 		add	r2, sp, #7
 28763 008c 0B21     		movs	r1, #11
 28764 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28765 0090 A047     		blx	r4
 28766              	.LVL3628:
12663:Core/Src/bno055.c ****                         {
 28767              		.loc 1 12663 25 is_stmt 1 view .LVU8155
12663:Core/Src/bno055.c ****                         {
 28768              		.loc 1 12663 28 is_stmt 0 view .LVU8156
 28769 0092 0446     		mov	r4, r0
 28770 0094 F8B9     		cbnz	r0, .L1978
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28771              		.loc 1 12665 29 is_stmt 1 view .LVU8157
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28772              		.loc 1 12665 40 is_stmt 0 view .LVU8158
 28773 0096 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 28774              	.LVL3629:
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28775              		.loc 1 12665 40 view .LVU8159
 28776 009a 20F00700 		bic	r0, r0, #7
 28777 009e 43B2     		sxtb	r3, r0
 28778 00a0 05F00700 		and	r0, r5, #7
 28779 00a4 1843     		orrs	r0, r0, r3
12665:Core/Src/bno055.c ****                             com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 28780              		.loc 1 12665 38 view .LVU8160
ARM GAS  /tmp/ccO72alg.s 			page 804


 28781 00a6 8DF80700 		strb	r0, [sp, #7]
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28782              		.loc 1 12666 29 is_stmt 1 view .LVU8161
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28783              		.loc 1 12666 49 is_stmt 0 view .LVU8162
 28784 00aa 154B     		ldr	r3, .L1994
 28785 00ac 1868     		ldr	r0, [r3]
 28786 00ae C568     		ldr	r5, [r0, #12]
 28787              	.LVL3630:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28788              		.loc 1 12666 41 view .LVU8163
 28789 00b0 0123     		movs	r3, #1
 28790 00b2 0DF10702 		add	r2, sp, #7
 28791 00b6 0B21     		movs	r1, #11
 28792 00b8 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28793 00ba A847     		blx	r5
 28794              	.LVL3631:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28795              		.loc 1 12666 38 view .LVU8164
 28796 00bc 54FA80F4 		uxtab	r4, r4, r0
 28797 00c0 64B2     		sxtb	r4, r4
 28798              	.LVL3632:
12666:Core/Src/bno055.c ****                                                                         BNO055_GYRO_POWER_MODE_REG,
 28799              		.loc 1 12666 38 view .LVU8165
 28800 00c2 08E0     		b	.L1978
 28801              	.LVL3633:
 28802              	.L1992:
12651:Core/Src/bno055.c ****                                 }
 28803              		.loc 1 12651 37 is_stmt 1 view .LVU8166
12651:Core/Src/bno055.c ****                                 }
 28804              		.loc 1 12651 49 is_stmt 0 view .LVU8167
 28805 00c4 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 28806 00c8 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 28807 00cc FFF7FEFF 		bl	bno055_gyro_set_auto_sleep_durn
 28808              	.LVL3634:
12651:Core/Src/bno055.c ****                                 }
 28809              		.loc 1 12651 49 view .LVU8168
 28810 00d0 D3E7     		b	.L1983
 28811              	.LVL3635:
 28812              	.L1985:
12689:Core/Src/bno055.c ****         }
 28813              		.loc 1 12689 22 view .LVU8169
 28814 00d2 4FF0FF34 		mov	r4, #-1
 28815              	.LVL3636:
 28816              	.L1978:
12692:Core/Src/bno055.c ****     {
 28817              		.loc 1 12692 5 is_stmt 1 view .LVU8170
12692:Core/Src/bno055.c ****     {
 28818              		.loc 1 12692 24 is_stmt 0 view .LVU8171
 28819 00d6 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
12692:Core/Src/bno055.c ****     {
 28820              		.loc 1 12692 8 view .LVU8172
 28821 00da 40B9     		cbnz	r0, .L1993
 28822              	.LVL3637:
 28823              	.L1977:
12700:Core/Src/bno055.c **** 
 28824              		.loc 1 12700 1 view .LVU8173
ARM GAS  /tmp/ccO72alg.s 			page 805


 28825 00dc 2046     		mov	r0, r4
 28826 00de 03B0     		add	sp, sp, #12
 28827              	.LCFI795:
 28828              		.cfi_remember_state
 28829              		.cfi_def_cfa_offset 12
 28830              		@ sp needed
 28831 00e0 30BD     		pop	{r4, r5, pc}
 28832              	.LVL3638:
 28833              	.L1987:
 28834              	.LCFI796:
 28835              		.cfi_restore_state
12679:Core/Src/bno055.c ****                 }
 28836              		.loc 1 12679 30 view .LVU8174
 28837 00e2 4FF0FF34 		mov	r4, #-1
 28838              	.LVL3639:
12679:Core/Src/bno055.c ****                 }
 28839              		.loc 1 12679 30 view .LVU8175
 28840 00e6 F6E7     		b	.L1978
 28841              	.LVL3640:
 28842              	.L1988:
12674:Core/Src/bno055.c ****                     }
 28843              		.loc 1 12674 34 view .LVU8176
 28844 00e8 6FF00104 		mvn	r4, #1
 28845              	.LVL3641:
12674:Core/Src/bno055.c ****                     }
 28846              		.loc 1 12674 34 view .LVU8177
 28847 00ec F3E7     		b	.L1978
 28848              	.LVL3642:
 28849              	.L1993:
12696:Core/Src/bno055.c ****     }
 28850              		.loc 1 12696 9 is_stmt 1 view .LVU8178
12696:Core/Src/bno055.c ****     }
 28851              		.loc 1 12696 21 is_stmt 0 view .LVU8179
 28852 00ee FFF7FEFF 		bl	bno055_set_operation_mode
 28853              	.LVL3643:
12696:Core/Src/bno055.c ****     }
 28854              		.loc 1 12696 18 view .LVU8180
 28855 00f2 54FA80F4 		uxtab	r4, r4, r0
 28856              	.LVL3644:
12696:Core/Src/bno055.c ****     }
 28857              		.loc 1 12696 18 view .LVU8181
 28858 00f6 64B2     		sxtb	r4, r4
 28859              	.LVL3645:
12696:Core/Src/bno055.c ****     }
 28860              		.loc 1 12696 18 view .LVU8182
 28861 00f8 F0E7     		b	.L1977
 28862              	.LVL3646:
 28863              	.L1984:
12608:Core/Src/bno055.c ****     }
 28864              		.loc 1 12608 16 view .LVU8183
 28865 00fa 6FF07E04 		mvn	r4, #126
 28866 00fe EDE7     		b	.L1977
 28867              	.L1995:
 28868              		.align	2
 28869              	.L1994:
 28870 0100 00000000 		.word	.LANCHOR0
 28871              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 806


 28872              	.LFE192:
 28874              		.section	.text.bno055_get_mag_sleep_mode,"ax",%progbits
 28875              		.align	1
 28876              		.global	bno055_get_mag_sleep_mode
 28877              		.syntax unified
 28878              		.thumb
 28879              		.thumb_func
 28881              	bno055_get_mag_sleep_mode:
 28882              	.LVL3647:
 28883              	.LFB201:
13401:Core/Src/bno055.c **** 
13402:Core/Src/bno055.c **** /*!
13403:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep mode
13404:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13405:Core/Src/bno055.c ****  *
13406:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13407:Core/Src/bno055.c ****  *
13408:Core/Src/bno055.c ****  *  @return results of bus communication function
13409:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13410:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13411:Core/Src/bno055.c ****  *
13412:Core/Src/bno055.c ****  *
13413:Core/Src/bno055.c ****  */
13414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_mode(u8 *sleep_mode_u8)
13415:Core/Src/bno055.c **** {
 28884              		.loc 1 13415 1 is_stmt 1 view -0
 28885              		.cfi_startproc
 28886              		@ args = 0, pretend = 0, frame = 8
 28887              		@ frame_needed = 0, uses_anonymous_args = 0
 28888              		.loc 1 13415 1 is_stmt 0 view .LVU8185
 28889 0000 30B5     		push	{r4, r5, lr}
 28890              	.LCFI797:
 28891              		.cfi_def_cfa_offset 12
 28892              		.cfi_offset 4, -12
 28893              		.cfi_offset 5, -8
 28894              		.cfi_offset 14, -4
 28895 0002 83B0     		sub	sp, sp, #12
 28896              	.LCFI798:
 28897              		.cfi_def_cfa_offset 24
13416:Core/Src/bno055.c ****     /* Variable used to return value of
13417:Core/Src/bno055.c ****      * communication routine*/
13418:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 28898              		.loc 1 13418 5 is_stmt 1 view .LVU8186
 28899              	.LVL3648:
13419:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 28900              		.loc 1 13419 5 view .LVU8187
 28901              		.loc 1 13419 8 is_stmt 0 view .LVU8188
 28902 0004 0023     		movs	r3, #0
 28903 0006 8DF80730 		strb	r3, [sp, #7]
13420:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 28904              		.loc 1 13420 5 is_stmt 1 view .LVU8189
 28905              	.LVL3649:
13421:Core/Src/bno055.c **** 
13422:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13423:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 28906              		.loc 1 13423 5 view .LVU8190
 28907              		.loc 1 13423 18 is_stmt 0 view .LVU8191
ARM GAS  /tmp/ccO72alg.s 			page 807


 28908 000a 144B     		ldr	r3, .L2004
 28909 000c 1B68     		ldr	r3, [r3]
 28910              		.loc 1 13423 8 view .LVU8192
 28911 000e F3B1     		cbz	r3, .L2000
 28912 0010 0446     		mov	r4, r0
13424:Core/Src/bno055.c ****     {
13425:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13426:Core/Src/bno055.c ****     }
13427:Core/Src/bno055.c ****     else
13428:Core/Src/bno055.c ****     {
13429:Core/Src/bno055.c ****         /*condition check for page,mag sleep mode is
13430:Core/Src/bno055.c ****          * available in the page one*/
13431:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 28913              		.loc 1 13431 9 is_stmt 1 view .LVU8193
 28914              		.loc 1 13431 21 is_stmt 0 view .LVU8194
 28915 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28916              		.loc 1 13431 12 view .LVU8195
 28917 0014 012B     		cmp	r3, #1
 28918 0016 14D1     		bne	.L2003
 28919              	.LVL3650:
 28920              	.L1998:
13432:Core/Src/bno055.c ****         {
13433:Core/Src/bno055.c ****             /* Write page as one */
13434:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13435:Core/Src/bno055.c ****         }
13436:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 28921              		.loc 1 13436 53 discriminator 1 view .LVU8196
 28922 0018 104B     		ldr	r3, .L2004
 28923 001a 1B68     		ldr	r3, [r3]
 28924 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 28925              		.loc 1 13436 41 discriminator 1 view .LVU8197
 28926 001e 012B     		cmp	r3, #1
 28927 0020 18D1     		bne	.L2001
 28928              	.L1999:
13437:Core/Src/bno055.c ****         {
13438:Core/Src/bno055.c ****             /* Read the value of mag sleep mode*/
13439:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 28929              		.loc 1 13439 13 is_stmt 1 view .LVU8198
 28930              		.loc 1 13439 32 is_stmt 0 view .LVU8199
 28931 0022 0E4B     		ldr	r3, .L2004
 28932 0024 1868     		ldr	r0, [r3]
 28933 0026 0569     		ldr	r5, [r0, #16]
 28934              		.loc 1 13439 24 view .LVU8200
 28935 0028 0123     		movs	r3, #1
 28936 002a 0DF10702 		add	r2, sp, #7
 28937 002e 0E21     		movs	r1, #14
 28938 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 28939 0032 A847     		blx	r5
 28940              	.LVL3651:
13440:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_MODE_REG,
13441:Core/Src/bno055.c ****                                                       &data_u8r,
13442:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13443:Core/Src/bno055.c ****             *sleep_mode_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE);
 28941              		.loc 1 13443 13 is_stmt 1 view .LVU8201
 28942              		.loc 1 13443 30 is_stmt 0 view .LVU8202
 28943 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 28944 0038 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 808


 28945              		.loc 1 13443 28 view .LVU8203
 28946 003c 2370     		strb	r3, [r4]
 28947              	.LVL3652:
 28948              	.L1997:
13444:Core/Src/bno055.c ****         }
13445:Core/Src/bno055.c ****         else
13446:Core/Src/bno055.c ****         {
13447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13448:Core/Src/bno055.c ****         }
13449:Core/Src/bno055.c ****     }
13450:Core/Src/bno055.c **** 
13451:Core/Src/bno055.c ****     return com_rslt;
13452:Core/Src/bno055.c **** }
 28949              		.loc 1 13452 1 view .LVU8204
 28950 003e 03B0     		add	sp, sp, #12
 28951              	.LCFI799:
 28952              		.cfi_remember_state
 28953              		.cfi_def_cfa_offset 12
 28954              		@ sp needed
 28955 0040 30BD     		pop	{r4, r5, pc}
 28956              	.LVL3653:
 28957              	.L2003:
 28958              	.LCFI800:
 28959              		.cfi_restore_state
13434:Core/Src/bno055.c ****         }
 28960              		.loc 1 13434 13 is_stmt 1 view .LVU8205
13434:Core/Src/bno055.c ****         }
 28961              		.loc 1 13434 23 is_stmt 0 view .LVU8206
 28962 0042 0120     		movs	r0, #1
 28963              	.LVL3654:
13434:Core/Src/bno055.c ****         }
 28964              		.loc 1 13434 23 view .LVU8207
 28965 0044 FFF7FEFF 		bl	bno055_write_page_id
 28966              	.LVL3655:
13436:Core/Src/bno055.c ****         {
 28967              		.loc 1 13436 9 is_stmt 1 view .LVU8208
13436:Core/Src/bno055.c ****         {
 28968              		.loc 1 13436 12 is_stmt 0 view .LVU8209
 28969 0048 0028     		cmp	r0, #0
 28970 004a EAD0     		beq	.L1999
 28971 004c E4E7     		b	.L1998
 28972              	.LVL3656:
 28973              	.L2000:
13425:Core/Src/bno055.c ****     }
 28974              		.loc 1 13425 16 view .LVU8210
 28975 004e 6FF07E00 		mvn	r0, #126
 28976              	.LVL3657:
13425:Core/Src/bno055.c ****     }
 28977              		.loc 1 13425 16 view .LVU8211
 28978 0052 F4E7     		b	.L1997
 28979              	.LVL3658:
 28980              	.L2001:
13447:Core/Src/bno055.c ****         }
 28981              		.loc 1 13447 22 view .LVU8212
 28982 0054 4FF0FF30 		mov	r0, #-1
 28983 0058 F1E7     		b	.L1997
 28984              	.L2005:
ARM GAS  /tmp/ccO72alg.s 			page 809


 28985 005a 00BF     		.align	2
 28986              	.L2004:
 28987 005c 00000000 		.word	.LANCHOR0
 28988              		.cfi_endproc
 28989              	.LFE201:
 28991              		.section	.text.bno055_set_mag_sleep_mode,"ax",%progbits
 28992              		.align	1
 28993              		.global	bno055_set_mag_sleep_mode
 28994              		.syntax unified
 28995              		.thumb
 28996              		.thumb_func
 28998              	bno055_set_mag_sleep_mode:
 28999              	.LVL3659:
 29000              	.LFB202:
13453:Core/Src/bno055.c **** 
13454:Core/Src/bno055.c **** /*!
13455:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep mode
13456:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 0
13457:Core/Src/bno055.c ****  *
13458:Core/Src/bno055.c ****  *  @param sleep_mode_u8 : The value of mag sleep mode
13459:Core/Src/bno055.c ****  *
13460:Core/Src/bno055.c ****  *  @return results of bus communication function
13461:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13462:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13463:Core/Src/bno055.c ****  *
13464:Core/Src/bno055.c ****  *
13465:Core/Src/bno055.c ****  */
13466:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_mode(u8 sleep_mode_u8)
13467:Core/Src/bno055.c **** {
 29001              		.loc 1 13467 1 is_stmt 1 view -0
 29002              		.cfi_startproc
 29003              		@ args = 0, pretend = 0, frame = 8
 29004              		@ frame_needed = 0, uses_anonymous_args = 0
 29005              		.loc 1 13467 1 is_stmt 0 view .LVU8214
 29006 0000 30B5     		push	{r4, r5, lr}
 29007              	.LCFI801:
 29008              		.cfi_def_cfa_offset 12
 29009              		.cfi_offset 4, -12
 29010              		.cfi_offset 5, -8
 29011              		.cfi_offset 14, -4
 29012 0002 83B0     		sub	sp, sp, #12
 29013              	.LCFI802:
 29014              		.cfi_def_cfa_offset 24
13468:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29015              		.loc 1 13468 5 is_stmt 1 view .LVU8215
 29016              	.LVL3660:
13469:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29017              		.loc 1 13469 5 view .LVU8216
 29018              		.loc 1 13469 8 is_stmt 0 view .LVU8217
 29019 0004 0023     		movs	r3, #0
 29020 0006 8DF80730 		strb	r3, [sp, #7]
13470:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29021              		.loc 1 13470 5 is_stmt 1 view .LVU8218
 29022              	.LVL3661:
13471:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 29023              		.loc 1 13471 5 view .LVU8219
13472:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
ARM GAS  /tmp/ccO72alg.s 			page 810


 29024              		.loc 1 13472 5 view .LVU8220
 29025              		.loc 1 13472 8 is_stmt 0 view .LVU8221
 29026 000a 8DF80630 		strb	r3, [sp, #6]
13473:Core/Src/bno055.c **** 
13474:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13475:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29027              		.loc 1 13475 5 is_stmt 1 view .LVU8222
 29028              		.loc 1 13475 18 is_stmt 0 view .LVU8223
 29029 000e 294B     		ldr	r3, .L2018
 29030 0010 1B68     		ldr	r3, [r3]
 29031              		.loc 1 13475 8 view .LVU8224
 29032 0012 002B     		cmp	r3, #0
 29033 0014 4AD0     		beq	.L2010
 29034 0016 0546     		mov	r5, r0
13476:Core/Src/bno055.c ****     {
13477:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13478:Core/Src/bno055.c ****     }
13479:Core/Src/bno055.c ****     else
13480:Core/Src/bno055.c ****     {
13481:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13482:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13483:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13484:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 29035              		.loc 1 13484 9 is_stmt 1 view .LVU8225
 29036              		.loc 1 13484 19 is_stmt 0 view .LVU8226
 29037 0018 0DF10600 		add	r0, sp, #6
 29038              	.LVL3662:
 29039              		.loc 1 13484 19 view .LVU8227
 29040 001c FFF7FEFF 		bl	bno055_get_operation_mode
 29041              	.LVL3663:
13485:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 29042              		.loc 1 13485 9 is_stmt 1 view .LVU8228
 29043              		.loc 1 13485 12 is_stmt 0 view .LVU8229
 29044 0020 0446     		mov	r4, r0
 29045 0022 90BB     		cbnz	r0, .L2011
13486:Core/Src/bno055.c ****         {
13487:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29046              		.loc 1 13487 13 is_stmt 1 view .LVU8230
 29047              		.loc 1 13487 32 is_stmt 0 view .LVU8231
 29048 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 29049              		.loc 1 13487 16 view .LVU8232
 29050 0028 1BB9     		cbnz	r3, .L2015
 29051              	.LVL3664:
 29052              	.L2009:
13488:Core/Src/bno055.c ****             {
13489:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13490:Core/Src/bno055.c ****             }
13491:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 29053              		.loc 1 13491 13 is_stmt 1 view .LVU8233
 29054              		.loc 1 13491 16 is_stmt 0 view .LVU8234
 29055 002a 44B1     		cbz	r4, .L2016
13492:Core/Src/bno055.c ****             {
13493:Core/Src/bno055.c ****                 /* Write page as one */
13494:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13495:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13496:Core/Src/bno055.c ****                 {
13497:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 811


13498:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
13499:Core/Src/bno055.c ****                                                               &data_u8r,
13500:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13501:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13502:Core/Src/bno055.c ****                     {
13503:Core/Src/bno055.c ****                         /* Write the value
13504:Core/Src/bno055.c ****                          * of mag sleep mode*/
13505:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_MODE, sleep_mode_
13506:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13507:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
13508:Core/Src/bno055.c ****                                                                     &data_u8r,
13509:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13510:Core/Src/bno055.c ****                     }
13511:Core/Src/bno055.c ****                 }
13512:Core/Src/bno055.c ****                 else
13513:Core/Src/bno055.c ****                 {
13514:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13515:Core/Src/bno055.c ****                 }
13516:Core/Src/bno055.c ****             }
13517:Core/Src/bno055.c ****             else
13518:Core/Src/bno055.c ****             {
13519:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 29056              		.loc 1 13519 26 view .LVU8235
 29057 002c 4FF0FF34 		mov	r4, #-1
 29058              	.LVL3665:
 29059              		.loc 1 13519 26 view .LVU8236
 29060 0030 2DE0     		b	.L2008
 29061              	.LVL3666:
 29062              	.L2015:
13489:Core/Src/bno055.c ****             }
 29063              		.loc 1 13489 17 is_stmt 1 view .LVU8237
13489:Core/Src/bno055.c ****             }
 29064              		.loc 1 13489 28 is_stmt 0 view .LVU8238
 29065 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 29066              	.LVL3667:
13489:Core/Src/bno055.c ****             }
 29067              		.loc 1 13489 25 view .LVU8239
 29068 0036 54FA80F4 		uxtab	r4, r4, r0
 29069 003a 64B2     		sxtb	r4, r4
 29070              	.LVL3668:
13489:Core/Src/bno055.c ****             }
 29071              		.loc 1 13489 25 view .LVU8240
 29072 003c F5E7     		b	.L2009
 29073              	.L2016:
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29074              		.loc 1 13494 17 is_stmt 1 view .LVU8241
13494:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29075              		.loc 1 13494 30 is_stmt 0 view .LVU8242
 29076 003e 0120     		movs	r0, #1
 29077 0040 FFF7FEFF 		bl	bno055_write_page_id
 29078              	.LVL3669:
13495:Core/Src/bno055.c ****                 {
 29079              		.loc 1 13495 17 is_stmt 1 view .LVU8243
13495:Core/Src/bno055.c ****                 {
 29080              		.loc 1 13495 20 is_stmt 0 view .LVU8244
 29081 0044 48BB     		cbnz	r0, .L2013
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
ARM GAS  /tmp/ccO72alg.s 			page 812


 29082              		.loc 1 13497 21 is_stmt 1 view .LVU8245
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29083              		.loc 1 13497 40 is_stmt 0 view .LVU8246
 29084 0046 1B4B     		ldr	r3, .L2018
 29085 0048 1868     		ldr	r0, [r3]
 29086              	.LVL3670:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29087              		.loc 1 13497 40 view .LVU8247
 29088 004a 0469     		ldr	r4, [r0, #16]
 29089              	.LVL3671:
13497:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_MODE_REG,
 29090              		.loc 1 13497 32 view .LVU8248
 29091 004c 0123     		movs	r3, #1
 29092 004e 0DF10702 		add	r2, sp, #7
 29093 0052 0E21     		movs	r1, #14
 29094 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29095 0056 A047     		blx	r4
 29096              	.LVL3672:
13501:Core/Src/bno055.c ****                     {
 29097              		.loc 1 13501 21 is_stmt 1 view .LVU8249
13501:Core/Src/bno055.c ****                     {
 29098              		.loc 1 13501 24 is_stmt 0 view .LVU8250
 29099 0058 0446     		mov	r4, r0
 29100 005a C0B9     		cbnz	r0, .L2008
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29101              		.loc 1 13505 25 is_stmt 1 view .LVU8251
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29102              		.loc 1 13505 36 is_stmt 0 view .LVU8252
 29103 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 29104              	.LVL3673:
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29105              		.loc 1 13505 36 view .LVU8253
 29106 0060 20F00100 		bic	r0, r0, #1
 29107 0064 43B2     		sxtb	r3, r0
 29108 0066 05F00100 		and	r0, r5, #1
 29109 006a 1843     		orrs	r0, r0, r3
13505:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29110              		.loc 1 13505 34 view .LVU8254
 29111 006c 8DF80700 		strb	r0, [sp, #7]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29112              		.loc 1 13506 25 is_stmt 1 view .LVU8255
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29113              		.loc 1 13506 45 is_stmt 0 view .LVU8256
 29114 0070 104B     		ldr	r3, .L2018
 29115 0072 1868     		ldr	r0, [r3]
 29116 0074 C568     		ldr	r5, [r0, #12]
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29117              		.loc 1 13506 37 view .LVU8257
 29118 0076 0123     		movs	r3, #1
 29119 0078 0DF10702 		add	r2, sp, #7
 29120 007c 0E21     		movs	r1, #14
 29121 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29122 0080 A847     		blx	r5
 29123              	.LVL3674:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29124              		.loc 1 13506 34 view .LVU8258
 29125 0082 54FA80F4 		uxtab	r4, r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 813


 29126 0086 64B2     		sxtb	r4, r4
 29127              	.LVL3675:
13506:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_MODE_REG,
 29128              		.loc 1 13506 34 view .LVU8259
 29129 0088 01E0     		b	.L2008
 29130              	.LVL3676:
 29131              	.L2011:
13520:Core/Src/bno055.c ****             }
13521:Core/Src/bno055.c ****         }
13522:Core/Src/bno055.c ****         else
13523:Core/Src/bno055.c ****         {
13524:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 29132              		.loc 1 13524 22 view .LVU8260
 29133 008a 4FF0FF34 		mov	r4, #-1
 29134              	.LVL3677:
 29135              	.L2008:
13525:Core/Src/bno055.c ****         }
13526:Core/Src/bno055.c ****     }
13527:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29136              		.loc 1 13527 5 is_stmt 1 view .LVU8261
 29137              		.loc 1 13527 24 is_stmt 0 view .LVU8262
 29138 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 29139              		.loc 1 13527 8 view .LVU8263
 29140 0092 28B9     		cbnz	r0, .L2017
 29141              	.LVL3678:
 29142              	.L2007:
13528:Core/Src/bno055.c ****     {
13529:Core/Src/bno055.c ****         /* set the operation mode of
13530:Core/Src/bno055.c ****          * previous operation mode*/
13531:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13532:Core/Src/bno055.c ****     }
13533:Core/Src/bno055.c **** 
13534:Core/Src/bno055.c ****     return com_rslt;
13535:Core/Src/bno055.c **** }
 29143              		.loc 1 13535 1 view .LVU8264
 29144 0094 2046     		mov	r0, r4
 29145 0096 03B0     		add	sp, sp, #12
 29146              	.LCFI803:
 29147              		.cfi_remember_state
 29148              		.cfi_def_cfa_offset 12
 29149              		@ sp needed
 29150 0098 30BD     		pop	{r4, r5, pc}
 29151              	.LVL3679:
 29152              	.L2013:
 29153              	.LCFI804:
 29154              		.cfi_restore_state
13514:Core/Src/bno055.c ****                 }
 29155              		.loc 1 13514 30 view .LVU8265
 29156 009a 4FF0FF34 		mov	r4, #-1
 29157              	.LVL3680:
13514:Core/Src/bno055.c ****                 }
 29158              		.loc 1 13514 30 view .LVU8266
 29159 009e F6E7     		b	.L2008
 29160              	.LVL3681:
 29161              	.L2017:
13531:Core/Src/bno055.c ****     }
 29162              		.loc 1 13531 9 is_stmt 1 view .LVU8267
ARM GAS  /tmp/ccO72alg.s 			page 814


13531:Core/Src/bno055.c ****     }
 29163              		.loc 1 13531 21 is_stmt 0 view .LVU8268
 29164 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 29165              	.LVL3682:
13531:Core/Src/bno055.c ****     }
 29166              		.loc 1 13531 18 view .LVU8269
 29167 00a4 54FA80F4 		uxtab	r4, r4, r0
 29168              	.LVL3683:
13531:Core/Src/bno055.c ****     }
 29169              		.loc 1 13531 18 view .LVU8270
 29170 00a8 64B2     		sxtb	r4, r4
 29171              	.LVL3684:
13531:Core/Src/bno055.c ****     }
 29172              		.loc 1 13531 18 view .LVU8271
 29173 00aa F3E7     		b	.L2007
 29174              	.LVL3685:
 29175              	.L2010:
13477:Core/Src/bno055.c ****     }
 29176              		.loc 1 13477 16 view .LVU8272
 29177 00ac 6FF07E04 		mvn	r4, #126
 29178 00b0 F0E7     		b	.L2007
 29179              	.L2019:
 29180 00b2 00BF     		.align	2
 29181              	.L2018:
 29182 00b4 00000000 		.word	.LANCHOR0
 29183              		.cfi_endproc
 29184              	.LFE202:
 29186              		.section	.text.bno055_get_mag_sleep_durn,"ax",%progbits
 29187              		.align	1
 29188              		.global	bno055_get_mag_sleep_durn
 29189              		.syntax unified
 29190              		.thumb
 29191              		.thumb_func
 29193              	bno055_get_mag_sleep_durn:
 29194              	.LVL3686:
 29195              	.LFB203:
13536:Core/Src/bno055.c **** 
13537:Core/Src/bno055.c **** /*!
13538:Core/Src/bno055.c ****  *  @brief This API used to read the mag sleep duration
13539:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13540:Core/Src/bno055.c ****  *
13541:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13542:Core/Src/bno055.c ****  *
13543:Core/Src/bno055.c ****  *  @return results of bus communication function
13544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13546:Core/Src/bno055.c ****  *
13547:Core/Src/bno055.c ****  *
13548:Core/Src/bno055.c ****  */
13549:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_mag_sleep_durn(u8 *sleep_durn_u8)
13550:Core/Src/bno055.c **** {
 29196              		.loc 1 13550 1 is_stmt 1 view -0
 29197              		.cfi_startproc
 29198              		@ args = 0, pretend = 0, frame = 8
 29199              		@ frame_needed = 0, uses_anonymous_args = 0
 29200              		.loc 1 13550 1 is_stmt 0 view .LVU8274
 29201 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccO72alg.s 			page 815


 29202              	.LCFI805:
 29203              		.cfi_def_cfa_offset 12
 29204              		.cfi_offset 4, -12
 29205              		.cfi_offset 5, -8
 29206              		.cfi_offset 14, -4
 29207 0002 83B0     		sub	sp, sp, #12
 29208              	.LCFI806:
 29209              		.cfi_def_cfa_offset 24
13551:Core/Src/bno055.c ****     /* Variable used to return value of
13552:Core/Src/bno055.c ****      * communication routine*/
13553:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29210              		.loc 1 13553 5 is_stmt 1 view .LVU8275
 29211              	.LVL3687:
13554:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29212              		.loc 1 13554 5 view .LVU8276
 29213              		.loc 1 13554 8 is_stmt 0 view .LVU8277
 29214 0004 0023     		movs	r3, #0
 29215 0006 8DF80730 		strb	r3, [sp, #7]
13555:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29216              		.loc 1 13555 5 is_stmt 1 view .LVU8278
 29217              	.LVL3688:
13556:Core/Src/bno055.c **** 
13557:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13558:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29218              		.loc 1 13558 5 view .LVU8279
 29219              		.loc 1 13558 18 is_stmt 0 view .LVU8280
 29220 000a 144B     		ldr	r3, .L2028
 29221 000c 1B68     		ldr	r3, [r3]
 29222              		.loc 1 13558 8 view .LVU8281
 29223 000e F3B1     		cbz	r3, .L2024
 29224 0010 0446     		mov	r4, r0
13559:Core/Src/bno055.c ****     {
13560:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13561:Core/Src/bno055.c ****     }
13562:Core/Src/bno055.c ****     else
13563:Core/Src/bno055.c ****     {
13564:Core/Src/bno055.c ****         /*condition check for page,mag sleep duration is
13565:Core/Src/bno055.c ****          * available in the page one*/
13566:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29225              		.loc 1 13566 9 is_stmt 1 view .LVU8282
 29226              		.loc 1 13566 21 is_stmt 0 view .LVU8283
 29227 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29228              		.loc 1 13566 12 view .LVU8284
 29229 0014 012B     		cmp	r3, #1
 29230 0016 14D1     		bne	.L2027
 29231              	.LVL3689:
 29232              	.L2022:
13567:Core/Src/bno055.c ****         {
13568:Core/Src/bno055.c ****             /* Write page as one */
13569:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13570:Core/Src/bno055.c ****         }
13571:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29233              		.loc 1 13571 53 discriminator 1 view .LVU8285
 29234 0018 104B     		ldr	r3, .L2028
 29235 001a 1B68     		ldr	r3, [r3]
 29236 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29237              		.loc 1 13571 41 discriminator 1 view .LVU8286
ARM GAS  /tmp/ccO72alg.s 			page 816


 29238 001e 012B     		cmp	r3, #1
 29239 0020 18D1     		bne	.L2025
 29240              	.L2023:
13572:Core/Src/bno055.c ****         {
13573:Core/Src/bno055.c ****             /* Read the value of mag sleep duration*/
13574:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29241              		.loc 1 13574 13 is_stmt 1 view .LVU8287
 29242              		.loc 1 13574 32 is_stmt 0 view .LVU8288
 29243 0022 0E4B     		ldr	r3, .L2028
 29244 0024 1868     		ldr	r0, [r3]
 29245 0026 0569     		ldr	r5, [r0, #16]
 29246              		.loc 1 13574 24 view .LVU8289
 29247 0028 0123     		movs	r3, #1
 29248 002a 0DF10702 		add	r2, sp, #7
 29249 002e 0E21     		movs	r1, #14
 29250 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29251 0032 A847     		blx	r5
 29252              	.LVL3690:
13575:Core/Src/bno055.c ****                                                       BNO055_MAG_SLEEP_DURN_REG,
13576:Core/Src/bno055.c ****                                                       &data_u8r,
13577:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13578:Core/Src/bno055.c ****             *sleep_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN);
 29253              		.loc 1 13578 13 is_stmt 1 view .LVU8290
 29254              		.loc 1 13578 30 is_stmt 0 view .LVU8291
 29255 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29256 0038 C3F34303 		ubfx	r3, r3, #1, #4
 29257              		.loc 1 13578 28 view .LVU8292
 29258 003c 2370     		strb	r3, [r4]
 29259              	.LVL3691:
 29260              	.L2021:
13579:Core/Src/bno055.c ****         }
13580:Core/Src/bno055.c ****         else
13581:Core/Src/bno055.c ****         {
13582:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13583:Core/Src/bno055.c ****         }
13584:Core/Src/bno055.c ****     }
13585:Core/Src/bno055.c **** 
13586:Core/Src/bno055.c ****     return com_rslt;
13587:Core/Src/bno055.c **** }
 29261              		.loc 1 13587 1 view .LVU8293
 29262 003e 03B0     		add	sp, sp, #12
 29263              	.LCFI807:
 29264              		.cfi_remember_state
 29265              		.cfi_def_cfa_offset 12
 29266              		@ sp needed
 29267 0040 30BD     		pop	{r4, r5, pc}
 29268              	.LVL3692:
 29269              	.L2027:
 29270              	.LCFI808:
 29271              		.cfi_restore_state
13569:Core/Src/bno055.c ****         }
 29272              		.loc 1 13569 13 is_stmt 1 view .LVU8294
13569:Core/Src/bno055.c ****         }
 29273              		.loc 1 13569 23 is_stmt 0 view .LVU8295
 29274 0042 0120     		movs	r0, #1
 29275              	.LVL3693:
13569:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 817


 29276              		.loc 1 13569 23 view .LVU8296
 29277 0044 FFF7FEFF 		bl	bno055_write_page_id
 29278              	.LVL3694:
13571:Core/Src/bno055.c ****         {
 29279              		.loc 1 13571 9 is_stmt 1 view .LVU8297
13571:Core/Src/bno055.c ****         {
 29280              		.loc 1 13571 12 is_stmt 0 view .LVU8298
 29281 0048 0028     		cmp	r0, #0
 29282 004a EAD0     		beq	.L2023
 29283 004c E4E7     		b	.L2022
 29284              	.LVL3695:
 29285              	.L2024:
13560:Core/Src/bno055.c ****     }
 29286              		.loc 1 13560 16 view .LVU8299
 29287 004e 6FF07E00 		mvn	r0, #126
 29288              	.LVL3696:
13560:Core/Src/bno055.c ****     }
 29289              		.loc 1 13560 16 view .LVU8300
 29290 0052 F4E7     		b	.L2021
 29291              	.LVL3697:
 29292              	.L2025:
13582:Core/Src/bno055.c ****         }
 29293              		.loc 1 13582 22 view .LVU8301
 29294 0054 4FF0FF30 		mov	r0, #-1
 29295 0058 F1E7     		b	.L2021
 29296              	.L2029:
 29297 005a 00BF     		.align	2
 29298              	.L2028:
 29299 005c 00000000 		.word	.LANCHOR0
 29300              		.cfi_endproc
 29301              	.LFE203:
 29303              		.section	.text.bno055_set_mag_sleep_durn,"ax",%progbits
 29304              		.align	1
 29305              		.global	bno055_set_mag_sleep_durn
 29306              		.syntax unified
 29307              		.thumb
 29308              		.thumb_func
 29310              	bno055_set_mag_sleep_durn:
 29311              	.LVL3698:
 29312              	.LFB204:
13588:Core/Src/bno055.c **** 
13589:Core/Src/bno055.c **** /*!
13590:Core/Src/bno055.c ****  *  @brief This API used to write the mag sleep duration
13591:Core/Src/bno055.c ****  *  from page one register from 0x0E bit 1 to 4
13592:Core/Src/bno055.c ****  *
13593:Core/Src/bno055.c ****  *  @param sleep_durn_u8 : The value of mag sleep duration
13594:Core/Src/bno055.c ****  *
13595:Core/Src/bno055.c ****  *  @return results of bus communication function
13596:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13597:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13598:Core/Src/bno055.c ****  *
13599:Core/Src/bno055.c ****  *
13600:Core/Src/bno055.c ****  */
13601:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_mag_sleep_durn(u8 sleep_durn_u8)
13602:Core/Src/bno055.c **** {
 29313              		.loc 1 13602 1 is_stmt 1 view -0
 29314              		.cfi_startproc
ARM GAS  /tmp/ccO72alg.s 			page 818


 29315              		@ args = 0, pretend = 0, frame = 8
 29316              		@ frame_needed = 0, uses_anonymous_args = 0
 29317              		.loc 1 13602 1 is_stmt 0 view .LVU8303
 29318 0000 30B5     		push	{r4, r5, lr}
 29319              	.LCFI809:
 29320              		.cfi_def_cfa_offset 12
 29321              		.cfi_offset 4, -12
 29322              		.cfi_offset 5, -8
 29323              		.cfi_offset 14, -4
 29324 0002 83B0     		sub	sp, sp, #12
 29325              	.LCFI810:
 29326              		.cfi_def_cfa_offset 24
13603:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29327              		.loc 1 13603 5 is_stmt 1 view .LVU8304
 29328              	.LVL3699:
13604:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29329              		.loc 1 13604 5 view .LVU8305
 29330              		.loc 1 13604 8 is_stmt 0 view .LVU8306
 29331 0004 0023     		movs	r3, #0
 29332 0006 8DF80730 		strb	r3, [sp, #7]
13605:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29333              		.loc 1 13605 5 is_stmt 1 view .LVU8307
 29334              	.LVL3700:
13606:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 29335              		.loc 1 13606 5 view .LVU8308
13607:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 29336              		.loc 1 13607 5 view .LVU8309
 29337              		.loc 1 13607 8 is_stmt 0 view .LVU8310
 29338 000a 8DF80630 		strb	r3, [sp, #6]
13608:Core/Src/bno055.c **** 
13609:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13610:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29339              		.loc 1 13610 5 is_stmt 1 view .LVU8311
 29340              		.loc 1 13610 18 is_stmt 0 view .LVU8312
 29341 000e 2A4B     		ldr	r3, .L2042
 29342 0010 1B68     		ldr	r3, [r3]
 29343              		.loc 1 13610 8 view .LVU8313
 29344 0012 002B     		cmp	r3, #0
 29345 0014 4CD0     		beq	.L2034
 29346 0016 0546     		mov	r5, r0
13611:Core/Src/bno055.c ****     {
13612:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13613:Core/Src/bno055.c ****     }
13614:Core/Src/bno055.c ****     else
13615:Core/Src/bno055.c ****     {
13616:Core/Src/bno055.c ****         /* The write operation effective only if the operation
13617:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
13618:Core/Src/bno055.c ****          * current operation mode and set the config mode */
13619:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 29347              		.loc 1 13619 9 is_stmt 1 view .LVU8314
 29348              		.loc 1 13619 19 is_stmt 0 view .LVU8315
 29349 0018 0DF10600 		add	r0, sp, #6
 29350              	.LVL3701:
 29351              		.loc 1 13619 19 view .LVU8316
 29352 001c FFF7FEFF 		bl	bno055_get_operation_mode
 29353              	.LVL3702:
13620:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 819


 29354              		.loc 1 13620 9 is_stmt 1 view .LVU8317
 29355              		.loc 1 13620 12 is_stmt 0 view .LVU8318
 29356 0020 0446     		mov	r4, r0
 29357 0022 0028     		cmp	r0, #0
 29358 0024 33D1     		bne	.L2035
13621:Core/Src/bno055.c ****         {
13622:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29359              		.loc 1 13622 13 is_stmt 1 view .LVU8319
 29360              		.loc 1 13622 32 is_stmt 0 view .LVU8320
 29361 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 29362              		.loc 1 13622 16 view .LVU8321
 29363 002a 1BB9     		cbnz	r3, .L2039
 29364              	.LVL3703:
 29365              	.L2033:
13623:Core/Src/bno055.c ****             {
13624:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
13625:Core/Src/bno055.c ****             }
13626:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 29366              		.loc 1 13626 13 is_stmt 1 view .LVU8322
 29367              		.loc 1 13626 16 is_stmt 0 view .LVU8323
 29368 002c 44B1     		cbz	r4, .L2040
13627:Core/Src/bno055.c ****             {
13628:Core/Src/bno055.c ****                 /* Write page as one */
13629:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13630:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
13631:Core/Src/bno055.c ****                 {
13632:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
13633:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
13634:Core/Src/bno055.c ****                                                               &data_u8r,
13635:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
13636:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
13637:Core/Src/bno055.c ****                     {
13638:Core/Src/bno055.c ****                         /* Write the value of
13639:Core/Src/bno055.c ****                          *  mag sleep duration */
13640:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_MAG_SLEEP_DURN, sleep_durn_
13641:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
13642:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
13643:Core/Src/bno055.c ****                                                                     &data_u8r,
13644:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
13645:Core/Src/bno055.c ****                     }
13646:Core/Src/bno055.c ****                 }
13647:Core/Src/bno055.c ****                 else
13648:Core/Src/bno055.c ****                 {
13649:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
13650:Core/Src/bno055.c ****                 }
13651:Core/Src/bno055.c ****             }
13652:Core/Src/bno055.c ****             else
13653:Core/Src/bno055.c ****             {
13654:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 29369              		.loc 1 13654 26 view .LVU8324
 29370 002e 4FF0FF34 		mov	r4, #-1
 29371              	.LVL3704:
 29372              		.loc 1 13654 26 view .LVU8325
 29373 0032 2EE0     		b	.L2032
 29374              	.LVL3705:
 29375              	.L2039:
13624:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 820


 29376              		.loc 1 13624 17 is_stmt 1 view .LVU8326
13624:Core/Src/bno055.c ****             }
 29377              		.loc 1 13624 28 is_stmt 0 view .LVU8327
 29378 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 29379              	.LVL3706:
13624:Core/Src/bno055.c ****             }
 29380              		.loc 1 13624 25 view .LVU8328
 29381 0038 54FA80F4 		uxtab	r4, r4, r0
 29382 003c 64B2     		sxtb	r4, r4
 29383              	.LVL3707:
13624:Core/Src/bno055.c ****             }
 29384              		.loc 1 13624 25 view .LVU8329
 29385 003e F5E7     		b	.L2033
 29386              	.L2040:
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29387              		.loc 1 13629 17 is_stmt 1 view .LVU8330
13629:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 29388              		.loc 1 13629 30 is_stmt 0 view .LVU8331
 29389 0040 0120     		movs	r0, #1
 29390 0042 FFF7FEFF 		bl	bno055_write_page_id
 29391              	.LVL3708:
13630:Core/Src/bno055.c ****                 {
 29392              		.loc 1 13630 17 is_stmt 1 view .LVU8332
13630:Core/Src/bno055.c ****                 {
 29393              		.loc 1 13630 20 is_stmt 0 view .LVU8333
 29394 0046 50BB     		cbnz	r0, .L2037
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29395              		.loc 1 13632 21 is_stmt 1 view .LVU8334
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29396              		.loc 1 13632 40 is_stmt 0 view .LVU8335
 29397 0048 1B4B     		ldr	r3, .L2042
 29398 004a 1868     		ldr	r0, [r3]
 29399              	.LVL3709:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29400              		.loc 1 13632 40 view .LVU8336
 29401 004c 0469     		ldr	r4, [r0, #16]
 29402              	.LVL3710:
13632:Core/Src/bno055.c ****                                                               BNO055_MAG_SLEEP_DURN_REG,
 29403              		.loc 1 13632 32 view .LVU8337
 29404 004e 0123     		movs	r3, #1
 29405 0050 0DF10702 		add	r2, sp, #7
 29406 0054 0E21     		movs	r1, #14
 29407 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29408 0058 A047     		blx	r4
 29409              	.LVL3711:
13636:Core/Src/bno055.c ****                     {
 29410              		.loc 1 13636 21 is_stmt 1 view .LVU8338
13636:Core/Src/bno055.c ****                     {
 29411              		.loc 1 13636 24 is_stmt 0 view .LVU8339
 29412 005a 0446     		mov	r4, r0
 29413 005c C8B9     		cbnz	r0, .L2032
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29414              		.loc 1 13640 25 is_stmt 1 view .LVU8340
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29415              		.loc 1 13640 36 is_stmt 0 view .LVU8341
 29416 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 29417              	.LVL3712:
ARM GAS  /tmp/ccO72alg.s 			page 821


13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29418              		.loc 1 13640 36 view .LVU8342
 29419 0062 20F01E00 		bic	r0, r0, #30
 29420 0066 43B2     		sxtb	r3, r0
 29421 0068 6800     		lsls	r0, r5, #1
 29422 006a 00F01E00 		and	r0, r0, #30
 29423 006e 1843     		orrs	r0, r0, r3
13640:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29424              		.loc 1 13640 34 view .LVU8343
 29425 0070 8DF80700 		strb	r0, [sp, #7]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29426              		.loc 1 13641 25 is_stmt 1 view .LVU8344
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29427              		.loc 1 13641 45 is_stmt 0 view .LVU8345
 29428 0074 104B     		ldr	r3, .L2042
 29429 0076 1868     		ldr	r0, [r3]
 29430 0078 C568     		ldr	r5, [r0, #12]
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29431              		.loc 1 13641 37 view .LVU8346
 29432 007a 0123     		movs	r3, #1
 29433 007c 0DF10702 		add	r2, sp, #7
 29434 0080 0E21     		movs	r1, #14
 29435 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29436 0084 A847     		blx	r5
 29437              	.LVL3713:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29438              		.loc 1 13641 34 view .LVU8347
 29439 0086 54FA80F4 		uxtab	r4, r4, r0
 29440 008a 64B2     		sxtb	r4, r4
 29441              	.LVL3714:
13641:Core/Src/bno055.c ****                                                                     BNO055_MAG_SLEEP_DURN_REG,
 29442              		.loc 1 13641 34 view .LVU8348
 29443 008c 01E0     		b	.L2032
 29444              	.LVL3715:
 29445              	.L2035:
13655:Core/Src/bno055.c ****             }
13656:Core/Src/bno055.c ****         }
13657:Core/Src/bno055.c ****         else
13658:Core/Src/bno055.c ****         {
13659:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 29446              		.loc 1 13659 22 view .LVU8349
 29447 008e 4FF0FF34 		mov	r4, #-1
 29448              	.LVL3716:
 29449              	.L2032:
13660:Core/Src/bno055.c ****         }
13661:Core/Src/bno055.c ****     }
13662:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 29450              		.loc 1 13662 5 is_stmt 1 view .LVU8350
 29451              		.loc 1 13662 24 is_stmt 0 view .LVU8351
 29452 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 29453              		.loc 1 13662 8 view .LVU8352
 29454 0096 28B9     		cbnz	r0, .L2041
 29455              	.LVL3717:
 29456              	.L2031:
13663:Core/Src/bno055.c ****     {
13664:Core/Src/bno055.c ****         /* set the operation mode of
13665:Core/Src/bno055.c ****          * previous operation mode*/
ARM GAS  /tmp/ccO72alg.s 			page 822


13666:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
13667:Core/Src/bno055.c ****     }
13668:Core/Src/bno055.c **** 
13669:Core/Src/bno055.c ****     return com_rslt;
13670:Core/Src/bno055.c **** }
 29457              		.loc 1 13670 1 view .LVU8353
 29458 0098 2046     		mov	r0, r4
 29459 009a 03B0     		add	sp, sp, #12
 29460              	.LCFI811:
 29461              		.cfi_remember_state
 29462              		.cfi_def_cfa_offset 12
 29463              		@ sp needed
 29464 009c 30BD     		pop	{r4, r5, pc}
 29465              	.LVL3718:
 29466              	.L2037:
 29467              	.LCFI812:
 29468              		.cfi_restore_state
13649:Core/Src/bno055.c ****                 }
 29469              		.loc 1 13649 30 view .LVU8354
 29470 009e 4FF0FF34 		mov	r4, #-1
 29471              	.LVL3719:
13649:Core/Src/bno055.c ****                 }
 29472              		.loc 1 13649 30 view .LVU8355
 29473 00a2 F6E7     		b	.L2032
 29474              	.LVL3720:
 29475              	.L2041:
13666:Core/Src/bno055.c ****     }
 29476              		.loc 1 13666 9 is_stmt 1 view .LVU8356
13666:Core/Src/bno055.c ****     }
 29477              		.loc 1 13666 21 is_stmt 0 view .LVU8357
 29478 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 29479              	.LVL3721:
13666:Core/Src/bno055.c ****     }
 29480              		.loc 1 13666 18 view .LVU8358
 29481 00a8 54FA80F4 		uxtab	r4, r4, r0
 29482              	.LVL3722:
13666:Core/Src/bno055.c ****     }
 29483              		.loc 1 13666 18 view .LVU8359
 29484 00ac 64B2     		sxtb	r4, r4
 29485              	.LVL3723:
13666:Core/Src/bno055.c ****     }
 29486              		.loc 1 13666 18 view .LVU8360
 29487 00ae F3E7     		b	.L2031
 29488              	.LVL3724:
 29489              	.L2034:
13612:Core/Src/bno055.c ****     }
 29490              		.loc 1 13612 16 view .LVU8361
 29491 00b0 6FF07E04 		mvn	r4, #126
 29492 00b4 F0E7     		b	.L2031
 29493              	.L2043:
 29494 00b6 00BF     		.align	2
 29495              	.L2042:
 29496 00b8 00000000 		.word	.LANCHOR0
 29497              		.cfi_endproc
 29498              	.LFE204:
 29500              		.section	.text.bno055_get_intr_mask_gyro_any_motion,"ax",%progbits
 29501              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 823


 29502              		.global	bno055_get_intr_mask_gyro_any_motion
 29503              		.syntax unified
 29504              		.thumb
 29505              		.thumb_func
 29507              	bno055_get_intr_mask_gyro_any_motion:
 29508              	.LVL3725:
 29509              	.LFB205:
13671:Core/Src/bno055.c **** 
13672:Core/Src/bno055.c **** /*!
13673:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt mask
13674:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13675:Core/Src/bno055.c ****  *
13676:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13677:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13678:Core/Src/bno055.c ****  *     --------------------  |------------
13679:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13680:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13681:Core/Src/bno055.c ****  *
13682:Core/Src/bno055.c ****  *  @return results of bus communication function
13683:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13684:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13685:Core/Src/bno055.c ****  *
13686:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13687:Core/Src/bno055.c ****  *  configure the following settings
13688:Core/Src/bno055.c ****  *
13689:Core/Src/bno055.c ****  *  Axis:
13690:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13691:Core/Src/bno055.c ****  *
13692:Core/Src/bno055.c ****  *  Filter setting:
13693:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13694:Core/Src/bno055.c ****  *
13695:Core/Src/bno055.c ****  *  Threshold :
13696:Core/Src/bno055.c ****  *
13697:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13698:Core/Src/bno055.c ****  *
13699:Core/Src/bno055.c ****  *  Slope samples :
13700:Core/Src/bno055.c ****  *
13701:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13702:Core/Src/bno055.c ****  *
13703:Core/Src/bno055.c ****  *  Awake duration :
13704:Core/Src/bno055.c ****  *
13705:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13706:Core/Src/bno055.c ****  *
13707:Core/Src/bno055.c ****  */
13708:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_any_motion(u8 *gyro_any_motion_u8)
13709:Core/Src/bno055.c **** {
 29510              		.loc 1 13709 1 is_stmt 1 view -0
 29511              		.cfi_startproc
 29512              		@ args = 0, pretend = 0, frame = 8
 29513              		@ frame_needed = 0, uses_anonymous_args = 0
 29514              		.loc 1 13709 1 is_stmt 0 view .LVU8363
 29515 0000 30B5     		push	{r4, r5, lr}
 29516              	.LCFI813:
 29517              		.cfi_def_cfa_offset 12
 29518              		.cfi_offset 4, -12
 29519              		.cfi_offset 5, -8
 29520              		.cfi_offset 14, -4
ARM GAS  /tmp/ccO72alg.s 			page 824


 29521 0002 83B0     		sub	sp, sp, #12
 29522              	.LCFI814:
 29523              		.cfi_def_cfa_offset 24
13710:Core/Src/bno055.c ****     /* Variable used to return value of
13711:Core/Src/bno055.c ****      * communication routine*/
13712:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29524              		.loc 1 13712 5 is_stmt 1 view .LVU8364
 29525              	.LVL3726:
13713:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29526              		.loc 1 13713 5 view .LVU8365
 29527              		.loc 1 13713 8 is_stmt 0 view .LVU8366
 29528 0004 0023     		movs	r3, #0
 29529 0006 8DF80730 		strb	r3, [sp, #7]
13714:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29530              		.loc 1 13714 5 is_stmt 1 view .LVU8367
 29531              	.LVL3727:
13715:Core/Src/bno055.c **** 
13716:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13717:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29532              		.loc 1 13717 5 view .LVU8368
 29533              		.loc 1 13717 18 is_stmt 0 view .LVU8369
 29534 000a 144B     		ldr	r3, .L2052
 29535 000c 1B68     		ldr	r3, [r3]
 29536              		.loc 1 13717 8 view .LVU8370
 29537 000e F3B1     		cbz	r3, .L2048
 29538 0010 0446     		mov	r4, r0
13718:Core/Src/bno055.c ****     {
13719:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13720:Core/Src/bno055.c ****     }
13721:Core/Src/bno055.c ****     else
13722:Core/Src/bno055.c ****     {
13723:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt mask is
13724:Core/Src/bno055.c ****          * available in the page one*/
13725:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29539              		.loc 1 13725 9 is_stmt 1 view .LVU8371
 29540              		.loc 1 13725 21 is_stmt 0 view .LVU8372
 29541 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29542              		.loc 1 13725 12 view .LVU8373
 29543 0014 012B     		cmp	r3, #1
 29544 0016 14D1     		bne	.L2051
 29545              	.LVL3728:
 29546              	.L2046:
13726:Core/Src/bno055.c ****         {
13727:Core/Src/bno055.c ****             /* Write page as one */
13728:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13729:Core/Src/bno055.c ****         }
13730:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29547              		.loc 1 13730 53 discriminator 1 view .LVU8374
 29548 0018 104B     		ldr	r3, .L2052
 29549 001a 1B68     		ldr	r3, [r3]
 29550 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29551              		.loc 1 13730 41 discriminator 1 view .LVU8375
 29552 001e 012B     		cmp	r3, #1
 29553 0020 18D1     		bne	.L2049
 29554              	.L2047:
13731:Core/Src/bno055.c ****         {
13732:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt mask*/
ARM GAS  /tmp/ccO72alg.s 			page 825


13733:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29555              		.loc 1 13733 13 is_stmt 1 view .LVU8376
 29556              		.loc 1 13733 32 is_stmt 0 view .LVU8377
 29557 0022 0E4B     		ldr	r3, .L2052
 29558 0024 1868     		ldr	r0, [r3]
 29559 0026 0569     		ldr	r5, [r0, #16]
 29560              		.loc 1 13733 24 view .LVU8378
 29561 0028 0123     		movs	r3, #1
 29562 002a 0DF10702 		add	r2, sp, #7
 29563 002e 0F21     		movs	r1, #15
 29564 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29565 0032 A847     		blx	r5
 29566              	.LVL3729:
13734:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13735:Core/Src/bno055.c ****                                                       &data_u8r,
13736:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13737:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK);
 29567              		.loc 1 13737 13 is_stmt 1 view .LVU8379
 29568              		.loc 1 13737 35 is_stmt 0 view .LVU8380
 29569 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29570 0038 C3F38003 		ubfx	r3, r3, #2, #1
 29571              		.loc 1 13737 33 view .LVU8381
 29572 003c 2370     		strb	r3, [r4]
 29573              	.LVL3730:
 29574              	.L2045:
13738:Core/Src/bno055.c ****         }
13739:Core/Src/bno055.c ****         else
13740:Core/Src/bno055.c ****         {
13741:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13742:Core/Src/bno055.c ****         }
13743:Core/Src/bno055.c ****     }
13744:Core/Src/bno055.c **** 
13745:Core/Src/bno055.c ****     return com_rslt;
13746:Core/Src/bno055.c **** }
 29575              		.loc 1 13746 1 view .LVU8382
 29576 003e 03B0     		add	sp, sp, #12
 29577              	.LCFI815:
 29578              		.cfi_remember_state
 29579              		.cfi_def_cfa_offset 12
 29580              		@ sp needed
 29581 0040 30BD     		pop	{r4, r5, pc}
 29582              	.LVL3731:
 29583              	.L2051:
 29584              	.LCFI816:
 29585              		.cfi_restore_state
13728:Core/Src/bno055.c ****         }
 29586              		.loc 1 13728 13 is_stmt 1 view .LVU8383
13728:Core/Src/bno055.c ****         }
 29587              		.loc 1 13728 23 is_stmt 0 view .LVU8384
 29588 0042 0120     		movs	r0, #1
 29589              	.LVL3732:
13728:Core/Src/bno055.c ****         }
 29590              		.loc 1 13728 23 view .LVU8385
 29591 0044 FFF7FEFF 		bl	bno055_write_page_id
 29592              	.LVL3733:
13730:Core/Src/bno055.c ****         {
 29593              		.loc 1 13730 9 is_stmt 1 view .LVU8386
ARM GAS  /tmp/ccO72alg.s 			page 826


13730:Core/Src/bno055.c ****         {
 29594              		.loc 1 13730 12 is_stmt 0 view .LVU8387
 29595 0048 0028     		cmp	r0, #0
 29596 004a EAD0     		beq	.L2047
 29597 004c E4E7     		b	.L2046
 29598              	.LVL3734:
 29599              	.L2048:
13719:Core/Src/bno055.c ****     }
 29600              		.loc 1 13719 16 view .LVU8388
 29601 004e 6FF07E00 		mvn	r0, #126
 29602              	.LVL3735:
13719:Core/Src/bno055.c ****     }
 29603              		.loc 1 13719 16 view .LVU8389
 29604 0052 F4E7     		b	.L2045
 29605              	.LVL3736:
 29606              	.L2049:
13741:Core/Src/bno055.c ****         }
 29607              		.loc 1 13741 22 view .LVU8390
 29608 0054 4FF0FF30 		mov	r0, #-1
 29609 0058 F1E7     		b	.L2045
 29610              	.L2053:
 29611 005a 00BF     		.align	2
 29612              	.L2052:
 29613 005c 00000000 		.word	.LANCHOR0
 29614              		.cfi_endproc
 29615              	.LFE205:
 29617              		.section	.text.bno055_set_intr_mask_gyro_any_motion,"ax",%progbits
 29618              		.align	1
 29619              		.global	bno055_set_intr_mask_gyro_any_motion
 29620              		.syntax unified
 29621              		.thumb
 29622              		.thumb_func
 29624              	bno055_set_intr_mask_gyro_any_motion:
 29625              	.LVL3737:
 29626              	.LFB206:
13747:Core/Src/bno055.c **** 
13748:Core/Src/bno055.c **** /*!
13749:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt mask
13750:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 2
13751:Core/Src/bno055.c ****  *
13752:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt mask
13753:Core/Src/bno055.c ****  *      gyro_any_motion_u8 |   result
13754:Core/Src/bno055.c ****  *     --------------------  |------------
13755:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13756:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13757:Core/Src/bno055.c ****  *
13758:Core/Src/bno055.c ****  *  @return results of bus communication function
13759:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13760:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13761:Core/Src/bno055.c ****  *
13762:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
13763:Core/Src/bno055.c ****  *  configure the following settings
13764:Core/Src/bno055.c ****  *
13765:Core/Src/bno055.c ****  *  Axis:
13766:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
13767:Core/Src/bno055.c ****  *
13768:Core/Src/bno055.c ****  *  Filter setting:
ARM GAS  /tmp/ccO72alg.s 			page 827


13769:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
13770:Core/Src/bno055.c ****  *
13771:Core/Src/bno055.c ****  *  Threshold :
13772:Core/Src/bno055.c ****  *
13773:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
13774:Core/Src/bno055.c ****  *
13775:Core/Src/bno055.c ****  *  Slope samples :
13776:Core/Src/bno055.c ****  *
13777:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
13778:Core/Src/bno055.c ****  *
13779:Core/Src/bno055.c ****  *  Awake duration :
13780:Core/Src/bno055.c ****  *
13781:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
13782:Core/Src/bno055.c ****  *
13783:Core/Src/bno055.c ****  */
13784:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_any_motion(u8 gyro_any_motion_u8)
13785:Core/Src/bno055.c **** {
 29627              		.loc 1 13785 1 is_stmt 1 view -0
 29628              		.cfi_startproc
 29629              		@ args = 0, pretend = 0, frame = 8
 29630              		@ frame_needed = 0, uses_anonymous_args = 0
 29631              		.loc 1 13785 1 is_stmt 0 view .LVU8392
 29632 0000 30B5     		push	{r4, r5, lr}
 29633              	.LCFI817:
 29634              		.cfi_def_cfa_offset 12
 29635              		.cfi_offset 4, -12
 29636              		.cfi_offset 5, -8
 29637              		.cfi_offset 14, -4
 29638 0002 83B0     		sub	sp, sp, #12
 29639              	.LCFI818:
 29640              		.cfi_def_cfa_offset 24
13786:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29641              		.loc 1 13786 5 is_stmt 1 view .LVU8393
 29642              	.LVL3738:
13787:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29643              		.loc 1 13787 5 view .LVU8394
 29644              		.loc 1 13787 8 is_stmt 0 view .LVU8395
 29645 0004 0023     		movs	r3, #0
 29646 0006 8DF80730 		strb	r3, [sp, #7]
13788:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29647              		.loc 1 13788 5 is_stmt 1 view .LVU8396
 29648              	.LVL3739:
13789:Core/Src/bno055.c **** 
13790:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13791:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29649              		.loc 1 13791 5 view .LVU8397
 29650              		.loc 1 13791 18 is_stmt 0 view .LVU8398
 29651 000a 1F4B     		ldr	r3, .L2062
 29652 000c 1B68     		ldr	r3, [r3]
 29653              		.loc 1 13791 8 view .LVU8399
 29654 000e 002B     		cmp	r3, #0
 29655 0010 33D0     		beq	.L2058
 29656 0012 0446     		mov	r4, r0
13792:Core/Src/bno055.c ****     {
13793:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13794:Core/Src/bno055.c ****     }
13795:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccO72alg.s 			page 828


13796:Core/Src/bno055.c ****     {
13797:Core/Src/bno055.c ****         /*condition check for page, accel range is
13798:Core/Src/bno055.c ****          * available in the page one*/
13799:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29657              		.loc 1 13799 9 is_stmt 1 view .LVU8400
 29658              		.loc 1 13799 21 is_stmt 0 view .LVU8401
 29659 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29660              		.loc 1 13799 12 view .LVU8402
 29661 0016 012B     		cmp	r3, #1
 29662 0018 29D1     		bne	.L2061
 29663              	.LVL3740:
 29664              	.L2056:
13800:Core/Src/bno055.c ****         {
13801:Core/Src/bno055.c ****             /* Write page as one */
13802:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13803:Core/Src/bno055.c ****         }
13804:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29665              		.loc 1 13804 53 discriminator 1 view .LVU8403
 29666 001a 1B4B     		ldr	r3, .L2062
 29667 001c 1B68     		ldr	r3, [r3]
 29668 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29669              		.loc 1 13804 41 discriminator 1 view .LVU8404
 29670 0020 012B     		cmp	r3, #1
 29671 0022 2DD1     		bne	.L2059
 29672              	.L2057:
13805:Core/Src/bno055.c ****         {
13806:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt mask*/
13807:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29673              		.loc 1 13807 13 is_stmt 1 view .LVU8405
 29674              		.loc 1 13807 32 is_stmt 0 view .LVU8406
 29675 0024 184B     		ldr	r3, .L2062
 29676 0026 1868     		ldr	r0, [r3]
 29677 0028 0569     		ldr	r5, [r0, #16]
 29678              		.loc 1 13807 24 view .LVU8407
 29679 002a 0123     		movs	r3, #1
 29680 002c 0DF10702 		add	r2, sp, #7
 29681 0030 0F21     		movs	r1, #15
 29682 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29683 0034 A847     		blx	r5
 29684              	.LVL3741:
13808:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13809:Core/Src/bno055.c ****                                                       &data_u8r,
13810:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13811:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29685              		.loc 1 13811 13 is_stmt 1 view .LVU8408
 29686              		.loc 1 13811 16 is_stmt 0 view .LVU8409
 29687 0036 0546     		mov	r5, r0
 29688 0038 B0B9     		cbnz	r0, .L2055
13812:Core/Src/bno055.c ****             {
13813:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR_MASK, gyro_any
 29689              		.loc 1 13813 17 is_stmt 1 view .LVU8410
 29690              		.loc 1 13813 28 is_stmt 0 view .LVU8411
 29691 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29692 003e 23F00403 		bic	r3, r3, #4
 29693 0042 5BB2     		sxtb	r3, r3
 29694 0044 A400     		lsls	r4, r4, #2
 29695 0046 04F00404 		and	r4, r4, #4
ARM GAS  /tmp/ccO72alg.s 			page 829


 29696 004a 1C43     		orrs	r4, r4, r3
 29697              		.loc 1 13813 26 view .LVU8412
 29698 004c 8DF80740 		strb	r4, [sp, #7]
13814:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29699              		.loc 1 13814 17 is_stmt 1 view .LVU8413
 29700              		.loc 1 13814 37 is_stmt 0 view .LVU8414
 29701 0050 0D4B     		ldr	r3, .L2062
 29702 0052 1868     		ldr	r0, [r3]
 29703              	.LVL3742:
 29704              		.loc 1 13814 37 view .LVU8415
 29705 0054 C468     		ldr	r4, [r0, #12]
 29706              		.loc 1 13814 29 view .LVU8416
 29707 0056 0123     		movs	r3, #1
 29708 0058 0DF10702 		add	r2, sp, #7
 29709 005c 0F21     		movs	r1, #15
 29710 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29711 0060 A047     		blx	r4
 29712              	.LVL3743:
 29713              		.loc 1 13814 26 view .LVU8417
 29714 0062 55FA80F5 		uxtab	r5, r5, r0
 29715 0066 6DB2     		sxtb	r5, r5
 29716              	.LVL3744:
 29717              	.L2055:
13815:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_MASK_REG,
13816:Core/Src/bno055.c ****                                                             &data_u8r,
13817:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
13818:Core/Src/bno055.c ****             }
13819:Core/Src/bno055.c ****         }
13820:Core/Src/bno055.c ****         else
13821:Core/Src/bno055.c ****         {
13822:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13823:Core/Src/bno055.c ****         }
13824:Core/Src/bno055.c ****     }
13825:Core/Src/bno055.c **** 
13826:Core/Src/bno055.c ****     return com_rslt;
13827:Core/Src/bno055.c **** }
 29718              		.loc 1 13827 1 view .LVU8418
 29719 0068 2846     		mov	r0, r5
 29720 006a 03B0     		add	sp, sp, #12
 29721              	.LCFI819:
 29722              		.cfi_remember_state
 29723              		.cfi_def_cfa_offset 12
 29724              		@ sp needed
 29725 006c 30BD     		pop	{r4, r5, pc}
 29726              	.LVL3745:
 29727              	.L2061:
 29728              	.LCFI820:
 29729              		.cfi_restore_state
13802:Core/Src/bno055.c ****         }
 29730              		.loc 1 13802 13 is_stmt 1 view .LVU8419
13802:Core/Src/bno055.c ****         }
 29731              		.loc 1 13802 23 is_stmt 0 view .LVU8420
 29732 006e 0120     		movs	r0, #1
 29733              	.LVL3746:
13802:Core/Src/bno055.c ****         }
 29734              		.loc 1 13802 23 view .LVU8421
 29735 0070 FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccO72alg.s 			page 830


 29736              	.LVL3747:
13804:Core/Src/bno055.c ****         {
 29737              		.loc 1 13804 9 is_stmt 1 view .LVU8422
13804:Core/Src/bno055.c ****         {
 29738              		.loc 1 13804 12 is_stmt 0 view .LVU8423
 29739 0074 0028     		cmp	r0, #0
 29740 0076 D5D0     		beq	.L2057
 29741 0078 CFE7     		b	.L2056
 29742              	.LVL3748:
 29743              	.L2058:
13793:Core/Src/bno055.c ****     }
 29744              		.loc 1 13793 16 view .LVU8424
 29745 007a 6FF07E05 		mvn	r5, #126
 29746 007e F3E7     		b	.L2055
 29747              	.LVL3749:
 29748              	.L2059:
13822:Core/Src/bno055.c ****         }
 29749              		.loc 1 13822 22 view .LVU8425
 29750 0080 4FF0FF35 		mov	r5, #-1
 29751 0084 F0E7     		b	.L2055
 29752              	.L2063:
 29753 0086 00BF     		.align	2
 29754              	.L2062:
 29755 0088 00000000 		.word	.LANCHOR0
 29756              		.cfi_endproc
 29757              	.LFE206:
 29759              		.section	.text.bno055_get_intr_mask_gyro_highrate,"ax",%progbits
 29760              		.align	1
 29761              		.global	bno055_get_intr_mask_gyro_highrate
 29762              		.syntax unified
 29763              		.thumb
 29764              		.thumb_func
 29766              	bno055_get_intr_mask_gyro_highrate:
 29767              	.LVL3750:
 29768              	.LFB207:
13828:Core/Src/bno055.c **** 
13829:Core/Src/bno055.c **** /*!
13830:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt mask
13831:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13832:Core/Src/bno055.c ****  *
13833:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13834:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13835:Core/Src/bno055.c ****  *     --------------------  |------------
13836:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13837:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13838:Core/Src/bno055.c ****  *
13839:Core/Src/bno055.c ****  *  @return results of bus communication function
13840:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13841:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13842:Core/Src/bno055.c ****  *
13843:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13844:Core/Src/bno055.c ****  *  configure the below settings by using
13845:Core/Src/bno055.c ****  *  the following API
13846:Core/Src/bno055.c ****  *
13847:Core/Src/bno055.c ****  *  Axis :
13848:Core/Src/bno055.c ****  *
13849:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
ARM GAS  /tmp/ccO72alg.s 			page 831


13850:Core/Src/bno055.c ****  *
13851:Core/Src/bno055.c ****  *  Filter :
13852:Core/Src/bno055.c ****  *
13853:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13854:Core/Src/bno055.c ****  *
13855:Core/Src/bno055.c ****  *  Threshold :
13856:Core/Src/bno055.c ****  *
13857:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13858:Core/Src/bno055.c ****  *
13859:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13860:Core/Src/bno055.c ****  *
13861:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13862:Core/Src/bno055.c ****  *
13863:Core/Src/bno055.c ****  *  Hysteresis :
13864:Core/Src/bno055.c ****  *
13865:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13866:Core/Src/bno055.c ****  *
13867:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13868:Core/Src/bno055.c ****  *
13869:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13870:Core/Src/bno055.c ****  *
13871:Core/Src/bno055.c ****  *  Duration :
13872:Core/Src/bno055.c ****  *
13873:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13874:Core/Src/bno055.c ****  *
13875:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13876:Core/Src/bno055.c ****  *
13877:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13878:Core/Src/bno055.c ****  *
13879:Core/Src/bno055.c ****  */
13880:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_gyro_highrate(u8 *gyro_highrate_u8)
13881:Core/Src/bno055.c **** {
 29769              		.loc 1 13881 1 is_stmt 1 view -0
 29770              		.cfi_startproc
 29771              		@ args = 0, pretend = 0, frame = 8
 29772              		@ frame_needed = 0, uses_anonymous_args = 0
 29773              		.loc 1 13881 1 is_stmt 0 view .LVU8427
 29774 0000 30B5     		push	{r4, r5, lr}
 29775              	.LCFI821:
 29776              		.cfi_def_cfa_offset 12
 29777              		.cfi_offset 4, -12
 29778              		.cfi_offset 5, -8
 29779              		.cfi_offset 14, -4
 29780 0002 83B0     		sub	sp, sp, #12
 29781              	.LCFI822:
 29782              		.cfi_def_cfa_offset 24
13882:Core/Src/bno055.c ****     /* Variable used to return value of
13883:Core/Src/bno055.c ****      * communication routine*/
13884:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29783              		.loc 1 13884 5 is_stmt 1 view .LVU8428
 29784              	.LVL3751:
13885:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29785              		.loc 1 13885 5 view .LVU8429
 29786              		.loc 1 13885 8 is_stmt 0 view .LVU8430
 29787 0004 0023     		movs	r3, #0
 29788 0006 8DF80730 		strb	r3, [sp, #7]
13886:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 832


 29789              		.loc 1 13886 5 is_stmt 1 view .LVU8431
 29790              	.LVL3752:
13887:Core/Src/bno055.c **** 
13888:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13889:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29791              		.loc 1 13889 5 view .LVU8432
 29792              		.loc 1 13889 18 is_stmt 0 view .LVU8433
 29793 000a 144B     		ldr	r3, .L2072
 29794 000c 1B68     		ldr	r3, [r3]
 29795              		.loc 1 13889 8 view .LVU8434
 29796 000e F3B1     		cbz	r3, .L2068
 29797 0010 0446     		mov	r4, r0
13890:Core/Src/bno055.c ****     {
13891:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13892:Core/Src/bno055.c ****     }
13893:Core/Src/bno055.c ****     else
13894:Core/Src/bno055.c ****     {
13895:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13896:Core/Src/bno055.c ****          * available in the page one*/
13897:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29798              		.loc 1 13897 9 is_stmt 1 view .LVU8435
 29799              		.loc 1 13897 21 is_stmt 0 view .LVU8436
 29800 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29801              		.loc 1 13897 12 view .LVU8437
 29802 0014 012B     		cmp	r3, #1
 29803 0016 14D1     		bne	.L2071
 29804              	.LVL3753:
 29805              	.L2066:
13898:Core/Src/bno055.c ****         {
13899:Core/Src/bno055.c ****             /* Write page as one */
13900:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13901:Core/Src/bno055.c ****         }
13902:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29806              		.loc 1 13902 53 discriminator 1 view .LVU8438
 29807 0018 104B     		ldr	r3, .L2072
 29808 001a 1B68     		ldr	r3, [r3]
 29809 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29810              		.loc 1 13902 41 discriminator 1 view .LVU8439
 29811 001e 012B     		cmp	r3, #1
 29812 0020 18D1     		bne	.L2069
 29813              	.L2067:
13903:Core/Src/bno055.c ****         {
13904:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt mask*/
13905:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29814              		.loc 1 13905 13 is_stmt 1 view .LVU8440
 29815              		.loc 1 13905 32 is_stmt 0 view .LVU8441
 29816 0022 0E4B     		ldr	r3, .L2072
 29817 0024 1868     		ldr	r0, [r3]
 29818 0026 0569     		ldr	r5, [r0, #16]
 29819              		.loc 1 13905 24 view .LVU8442
 29820 0028 0123     		movs	r3, #1
 29821 002a 0DF10702 		add	r2, sp, #7
 29822 002e 0F21     		movs	r1, #15
 29823 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29824 0032 A847     		blx	r5
 29825              	.LVL3754:
13906:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
ARM GAS  /tmp/ccO72alg.s 			page 833


13907:Core/Src/bno055.c ****                                                       &data_u8r,
13908:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13909:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK);
 29826              		.loc 1 13909 13 is_stmt 1 view .LVU8443
 29827              		.loc 1 13909 33 is_stmt 0 view .LVU8444
 29828 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29829 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 29830              		.loc 1 13909 31 view .LVU8445
 29831 003c 2370     		strb	r3, [r4]
 29832              	.LVL3755:
 29833              	.L2065:
13910:Core/Src/bno055.c ****         }
13911:Core/Src/bno055.c ****         else
13912:Core/Src/bno055.c ****         {
13913:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
13914:Core/Src/bno055.c ****         }
13915:Core/Src/bno055.c ****     }
13916:Core/Src/bno055.c **** 
13917:Core/Src/bno055.c ****     return com_rslt;
13918:Core/Src/bno055.c **** }
 29834              		.loc 1 13918 1 view .LVU8446
 29835 003e 03B0     		add	sp, sp, #12
 29836              	.LCFI823:
 29837              		.cfi_remember_state
 29838              		.cfi_def_cfa_offset 12
 29839              		@ sp needed
 29840 0040 30BD     		pop	{r4, r5, pc}
 29841              	.LVL3756:
 29842              	.L2071:
 29843              	.LCFI824:
 29844              		.cfi_restore_state
13900:Core/Src/bno055.c ****         }
 29845              		.loc 1 13900 13 is_stmt 1 view .LVU8447
13900:Core/Src/bno055.c ****         }
 29846              		.loc 1 13900 23 is_stmt 0 view .LVU8448
 29847 0042 0120     		movs	r0, #1
 29848              	.LVL3757:
13900:Core/Src/bno055.c ****         }
 29849              		.loc 1 13900 23 view .LVU8449
 29850 0044 FFF7FEFF 		bl	bno055_write_page_id
 29851              	.LVL3758:
13902:Core/Src/bno055.c ****         {
 29852              		.loc 1 13902 9 is_stmt 1 view .LVU8450
13902:Core/Src/bno055.c ****         {
 29853              		.loc 1 13902 12 is_stmt 0 view .LVU8451
 29854 0048 0028     		cmp	r0, #0
 29855 004a EAD0     		beq	.L2067
 29856 004c E4E7     		b	.L2066
 29857              	.LVL3759:
 29858              	.L2068:
13891:Core/Src/bno055.c ****     }
 29859              		.loc 1 13891 16 view .LVU8452
 29860 004e 6FF07E00 		mvn	r0, #126
 29861              	.LVL3760:
13891:Core/Src/bno055.c ****     }
 29862              		.loc 1 13891 16 view .LVU8453
 29863 0052 F4E7     		b	.L2065
ARM GAS  /tmp/ccO72alg.s 			page 834


 29864              	.LVL3761:
 29865              	.L2069:
13913:Core/Src/bno055.c ****         }
 29866              		.loc 1 13913 22 view .LVU8454
 29867 0054 4FF0FF30 		mov	r0, #-1
 29868 0058 F1E7     		b	.L2065
 29869              	.L2073:
 29870 005a 00BF     		.align	2
 29871              	.L2072:
 29872 005c 00000000 		.word	.LANCHOR0
 29873              		.cfi_endproc
 29874              	.LFE207:
 29876              		.section	.text.bno055_set_intr_mask_gyro_highrate,"ax",%progbits
 29877              		.align	1
 29878              		.global	bno055_set_intr_mask_gyro_highrate
 29879              		.syntax unified
 29880              		.thumb
 29881              		.thumb_func
 29883              	bno055_set_intr_mask_gyro_highrate:
 29884              	.LVL3762:
 29885              	.LFB208:
13919:Core/Src/bno055.c **** 
13920:Core/Src/bno055.c **** /*!
13921:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt mask
13922:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 3
13923:Core/Src/bno055.c ****  *
13924:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt mask
13925:Core/Src/bno055.c ****  *        gyro_highrate_u8 |  result
13926:Core/Src/bno055.c ****  *     --------------------  |------------
13927:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
13928:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
13929:Core/Src/bno055.c ****  *
13930:Core/Src/bno055.c ****  *  @return results of bus communication function
13931:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
13932:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
13933:Core/Src/bno055.c ****  *
13934:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
13935:Core/Src/bno055.c ****  *  configure the below settings by using
13936:Core/Src/bno055.c ****  *  the following APIs
13937:Core/Src/bno055.c ****  *
13938:Core/Src/bno055.c ****  *  Axis :
13939:Core/Src/bno055.c ****  *
13940:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
13941:Core/Src/bno055.c ****  *
13942:Core/Src/bno055.c ****  *  Filter :
13943:Core/Src/bno055.c ****  *
13944:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
13945:Core/Src/bno055.c ****  *
13946:Core/Src/bno055.c ****  *  Threshold :
13947:Core/Src/bno055.c ****  *
13948:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
13949:Core/Src/bno055.c ****  *
13950:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
13951:Core/Src/bno055.c ****  *
13952:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
13953:Core/Src/bno055.c ****  *
13954:Core/Src/bno055.c ****  *  Hysteresis :
ARM GAS  /tmp/ccO72alg.s 			page 835


13955:Core/Src/bno055.c ****  *
13956:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
13957:Core/Src/bno055.c ****  *
13958:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
13959:Core/Src/bno055.c ****  *
13960:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
13961:Core/Src/bno055.c ****  *
13962:Core/Src/bno055.c ****  *  Duration :
13963:Core/Src/bno055.c ****  *
13964:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
13965:Core/Src/bno055.c ****  *
13966:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
13967:Core/Src/bno055.c ****  *
13968:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
13969:Core/Src/bno055.c ****  *
13970:Core/Src/bno055.c ****  */
13971:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_gyro_highrate(u8 gyro_highrate_u8)
13972:Core/Src/bno055.c **** {
 29886              		.loc 1 13972 1 is_stmt 1 view -0
 29887              		.cfi_startproc
 29888              		@ args = 0, pretend = 0, frame = 8
 29889              		@ frame_needed = 0, uses_anonymous_args = 0
 29890              		.loc 1 13972 1 is_stmt 0 view .LVU8456
 29891 0000 30B5     		push	{r4, r5, lr}
 29892              	.LCFI825:
 29893              		.cfi_def_cfa_offset 12
 29894              		.cfi_offset 4, -12
 29895              		.cfi_offset 5, -8
 29896              		.cfi_offset 14, -4
 29897 0002 83B0     		sub	sp, sp, #12
 29898              	.LCFI826:
 29899              		.cfi_def_cfa_offset 24
13973:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 29900              		.loc 1 13973 5 is_stmt 1 view .LVU8457
 29901              	.LVL3763:
13974:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 29902              		.loc 1 13974 5 view .LVU8458
 29903              		.loc 1 13974 8 is_stmt 0 view .LVU8459
 29904 0004 0023     		movs	r3, #0
 29905 0006 8DF80730 		strb	r3, [sp, #7]
13975:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 29906              		.loc 1 13975 5 is_stmt 1 view .LVU8460
 29907              	.LVL3764:
13976:Core/Src/bno055.c **** 
13977:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
13978:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 29908              		.loc 1 13978 5 view .LVU8461
 29909              		.loc 1 13978 18 is_stmt 0 view .LVU8462
 29910 000a 1F4B     		ldr	r3, .L2082
 29911 000c 1B68     		ldr	r3, [r3]
 29912              		.loc 1 13978 8 view .LVU8463
 29913 000e 002B     		cmp	r3, #0
 29914 0010 33D0     		beq	.L2078
 29915 0012 0446     		mov	r4, r0
13979:Core/Src/bno055.c ****     {
13980:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
13981:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 836


13982:Core/Src/bno055.c ****     else
13983:Core/Src/bno055.c ****     {
13984:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt mask is
13985:Core/Src/bno055.c ****          * available in the page one*/
13986:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 29916              		.loc 1 13986 9 is_stmt 1 view .LVU8464
 29917              		.loc 1 13986 21 is_stmt 0 view .LVU8465
 29918 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29919              		.loc 1 13986 12 view .LVU8466
 29920 0016 012B     		cmp	r3, #1
 29921 0018 29D1     		bne	.L2081
 29922              	.LVL3765:
 29923              	.L2076:
13987:Core/Src/bno055.c ****         {
13988:Core/Src/bno055.c ****             /* Write page as one */
13989:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
13990:Core/Src/bno055.c ****         }
13991:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 29924              		.loc 1 13991 53 discriminator 1 view .LVU8467
 29925 001a 1B4B     		ldr	r3, .L2082
 29926 001c 1B68     		ldr	r3, [r3]
 29927 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 29928              		.loc 1 13991 41 discriminator 1 view .LVU8468
 29929 0020 012B     		cmp	r3, #1
 29930 0022 2DD1     		bne	.L2079
 29931              	.L2077:
13992:Core/Src/bno055.c ****         {
13993:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 29932              		.loc 1 13993 13 is_stmt 1 view .LVU8469
 29933              		.loc 1 13993 32 is_stmt 0 view .LVU8470
 29934 0024 184B     		ldr	r3, .L2082
 29935 0026 1868     		ldr	r0, [r3]
 29936 0028 0569     		ldr	r5, [r0, #16]
 29937              		.loc 1 13993 24 view .LVU8471
 29938 002a 0123     		movs	r3, #1
 29939 002c 0DF10702 		add	r2, sp, #7
 29940 0030 0F21     		movs	r1, #15
 29941 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29942 0034 A847     		blx	r5
 29943              	.LVL3766:
13994:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
13995:Core/Src/bno055.c ****                                                       &data_u8r,
13996:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
13997:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 29944              		.loc 1 13997 13 is_stmt 1 view .LVU8472
 29945              		.loc 1 13997 16 is_stmt 0 view .LVU8473
 29946 0036 0546     		mov	r5, r0
 29947 0038 B0B9     		cbnz	r0, .L2075
13998:Core/Src/bno055.c ****             {
13999:Core/Src/bno055.c ****                 /* Write the value of gyro
14000:Core/Src/bno055.c ****                  * highrate interrupt mask*/
14001:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR_MASK, gyro_highr
 29948              		.loc 1 14001 17 is_stmt 1 view .LVU8474
 29949              		.loc 1 14001 28 is_stmt 0 view .LVU8475
 29950 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 29951 003e 23F00803 		bic	r3, r3, #8
 29952 0042 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/ccO72alg.s 			page 837


 29953 0044 E400     		lsls	r4, r4, #3
 29954 0046 04F00804 		and	r4, r4, #8
 29955 004a 1C43     		orrs	r4, r4, r3
 29956              		.loc 1 14001 26 view .LVU8476
 29957 004c 8DF80740 		strb	r4, [sp, #7]
14002:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 29958              		.loc 1 14002 17 is_stmt 1 view .LVU8477
 29959              		.loc 1 14002 37 is_stmt 0 view .LVU8478
 29960 0050 0D4B     		ldr	r3, .L2082
 29961 0052 1868     		ldr	r0, [r3]
 29962              	.LVL3767:
 29963              		.loc 1 14002 37 view .LVU8479
 29964 0054 C468     		ldr	r4, [r0, #12]
 29965              		.loc 1 14002 29 view .LVU8480
 29966 0056 0123     		movs	r3, #1
 29967 0058 0DF10702 		add	r2, sp, #7
 29968 005c 0F21     		movs	r1, #15
 29969 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 29970 0060 A047     		blx	r4
 29971              	.LVL3768:
 29972              		.loc 1 14002 26 view .LVU8481
 29973 0062 55FA80F5 		uxtab	r5, r5, r0
 29974 0066 6DB2     		sxtb	r5, r5
 29975              	.LVL3769:
 29976              	.L2075:
14003:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_MASK_REG,
14004:Core/Src/bno055.c ****                                                             &data_u8r,
14005:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14006:Core/Src/bno055.c ****             }
14007:Core/Src/bno055.c ****         }
14008:Core/Src/bno055.c ****         else
14009:Core/Src/bno055.c ****         {
14010:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14011:Core/Src/bno055.c ****         }
14012:Core/Src/bno055.c ****     }
14013:Core/Src/bno055.c **** 
14014:Core/Src/bno055.c ****     return com_rslt;
14015:Core/Src/bno055.c **** }
 29977              		.loc 1 14015 1 view .LVU8482
 29978 0068 2846     		mov	r0, r5
 29979 006a 03B0     		add	sp, sp, #12
 29980              	.LCFI827:
 29981              		.cfi_remember_state
 29982              		.cfi_def_cfa_offset 12
 29983              		@ sp needed
 29984 006c 30BD     		pop	{r4, r5, pc}
 29985              	.LVL3770:
 29986              	.L2081:
 29987              	.LCFI828:
 29988              		.cfi_restore_state
13989:Core/Src/bno055.c ****         }
 29989              		.loc 1 13989 13 is_stmt 1 view .LVU8483
13989:Core/Src/bno055.c ****         }
 29990              		.loc 1 13989 23 is_stmt 0 view .LVU8484
 29991 006e 0120     		movs	r0, #1
 29992              	.LVL3771:
13989:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 838


 29993              		.loc 1 13989 23 view .LVU8485
 29994 0070 FFF7FEFF 		bl	bno055_write_page_id
 29995              	.LVL3772:
13991:Core/Src/bno055.c ****         {
 29996              		.loc 1 13991 9 is_stmt 1 view .LVU8486
13991:Core/Src/bno055.c ****         {
 29997              		.loc 1 13991 12 is_stmt 0 view .LVU8487
 29998 0074 0028     		cmp	r0, #0
 29999 0076 D5D0     		beq	.L2077
 30000 0078 CFE7     		b	.L2076
 30001              	.LVL3773:
 30002              	.L2078:
13980:Core/Src/bno055.c ****     }
 30003              		.loc 1 13980 16 view .LVU8488
 30004 007a 6FF07E05 		mvn	r5, #126
 30005 007e F3E7     		b	.L2075
 30006              	.LVL3774:
 30007              	.L2079:
14010:Core/Src/bno055.c ****         }
 30008              		.loc 1 14010 22 view .LVU8489
 30009 0080 4FF0FF35 		mov	r5, #-1
 30010 0084 F0E7     		b	.L2075
 30011              	.L2083:
 30012 0086 00BF     		.align	2
 30013              	.L2082:
 30014 0088 00000000 		.word	.LANCHOR0
 30015              		.cfi_endproc
 30016              	.LFE208:
 30018              		.section	.text.bno055_get_intr_mask_accel_high_g,"ax",%progbits
 30019              		.align	1
 30020              		.global	bno055_get_intr_mask_accel_high_g
 30021              		.syntax unified
 30022              		.thumb
 30023              		.thumb_func
 30025              	bno055_get_intr_mask_accel_high_g:
 30026              	.LVL3775:
 30027              	.LFB209:
14016:Core/Src/bno055.c **** 
14017:Core/Src/bno055.c **** /*!
14018:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt mask
14019:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14020:Core/Src/bno055.c ****  *
14021:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14022:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14023:Core/Src/bno055.c ****  *     --------------------  |------------
14024:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14025:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14026:Core/Src/bno055.c ****  *
14027:Core/Src/bno055.c ****  *  @return results of bus communication function
14028:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14029:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14030:Core/Src/bno055.c ****  *
14031:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14032:Core/Src/bno055.c ****  *  configure the below settings by using
14033:Core/Src/bno055.c ****  *  the following APIs
14034:Core/Src/bno055.c ****  *
14035:Core/Src/bno055.c ****  *  Axis :
ARM GAS  /tmp/ccO72alg.s 			page 839


14036:Core/Src/bno055.c ****  *
14037:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14038:Core/Src/bno055.c ****  *
14039:Core/Src/bno055.c ****  *  Threshold :
14040:Core/Src/bno055.c ****  *
14041:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14042:Core/Src/bno055.c ****  *
14043:Core/Src/bno055.c ****  *  Duration :
14044:Core/Src/bno055.c ****  *
14045:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14046:Core/Src/bno055.c ****  *
14047:Core/Src/bno055.c ****  */
14048:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_high_g(u8 *accel_high_g_u8)
14049:Core/Src/bno055.c **** {
 30028              		.loc 1 14049 1 is_stmt 1 view -0
 30029              		.cfi_startproc
 30030              		@ args = 0, pretend = 0, frame = 8
 30031              		@ frame_needed = 0, uses_anonymous_args = 0
 30032              		.loc 1 14049 1 is_stmt 0 view .LVU8491
 30033 0000 30B5     		push	{r4, r5, lr}
 30034              	.LCFI829:
 30035              		.cfi_def_cfa_offset 12
 30036              		.cfi_offset 4, -12
 30037              		.cfi_offset 5, -8
 30038              		.cfi_offset 14, -4
 30039 0002 83B0     		sub	sp, sp, #12
 30040              	.LCFI830:
 30041              		.cfi_def_cfa_offset 24
14050:Core/Src/bno055.c ****     /* Variable used to return value of
14051:Core/Src/bno055.c ****      * communication routine*/
14052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30042              		.loc 1 14052 5 is_stmt 1 view .LVU8492
 30043              	.LVL3776:
14053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30044              		.loc 1 14053 5 view .LVU8493
 30045              		.loc 1 14053 8 is_stmt 0 view .LVU8494
 30046 0004 0023     		movs	r3, #0
 30047 0006 8DF80730 		strb	r3, [sp, #7]
14054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30048              		.loc 1 14054 5 is_stmt 1 view .LVU8495
 30049              	.LVL3777:
14055:Core/Src/bno055.c **** 
14056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30050              		.loc 1 14057 5 view .LVU8496
 30051              		.loc 1 14057 18 is_stmt 0 view .LVU8497
 30052 000a 144B     		ldr	r3, .L2092
 30053 000c 1B68     		ldr	r3, [r3]
 30054              		.loc 1 14057 8 view .LVU8498
 30055 000e F3B1     		cbz	r3, .L2088
 30056 0010 0446     		mov	r4, r0
14058:Core/Src/bno055.c ****     {
14059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14060:Core/Src/bno055.c ****     }
14061:Core/Src/bno055.c ****     else
14062:Core/Src/bno055.c ****     {
14063:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
ARM GAS  /tmp/ccO72alg.s 			page 840


14064:Core/Src/bno055.c ****          * available in the page one*/
14065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30057              		.loc 1 14065 9 is_stmt 1 view .LVU8499
 30058              		.loc 1 14065 21 is_stmt 0 view .LVU8500
 30059 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30060              		.loc 1 14065 12 view .LVU8501
 30061 0014 012B     		cmp	r3, #1
 30062 0016 14D1     		bne	.L2091
 30063              	.LVL3778:
 30064              	.L2086:
14066:Core/Src/bno055.c ****         {
14067:Core/Src/bno055.c ****             /* Write page as one */
14068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14069:Core/Src/bno055.c ****         }
14070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30065              		.loc 1 14070 53 discriminator 1 view .LVU8502
 30066 0018 104B     		ldr	r3, .L2092
 30067 001a 1B68     		ldr	r3, [r3]
 30068 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30069              		.loc 1 14070 41 discriminator 1 view .LVU8503
 30070 001e 012B     		cmp	r3, #1
 30071 0020 18D1     		bne	.L2089
 30072              	.L2087:
14071:Core/Src/bno055.c ****         {
14072:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt mask*/
14073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30073              		.loc 1 14073 13 is_stmt 1 view .LVU8504
 30074              		.loc 1 14073 32 is_stmt 0 view .LVU8505
 30075 0022 0E4B     		ldr	r3, .L2092
 30076 0024 1868     		ldr	r0, [r3]
 30077 0026 0569     		ldr	r5, [r0, #16]
 30078              		.loc 1 14073 24 view .LVU8506
 30079 0028 0123     		movs	r3, #1
 30080 002a 0DF10702 		add	r2, sp, #7
 30081 002e 0F21     		movs	r1, #15
 30082 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30083 0032 A847     		blx	r5
 30084              	.LVL3779:
14074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14075:Core/Src/bno055.c ****                                                       &data_u8r,
14076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14077:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK);
 30085              		.loc 1 14077 13 is_stmt 1 view .LVU8507
 30086              		.loc 1 14077 32 is_stmt 0 view .LVU8508
 30087 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30088 0038 C3F34013 		ubfx	r3, r3, #5, #1
 30089              		.loc 1 14077 30 view .LVU8509
 30090 003c 2370     		strb	r3, [r4]
 30091              	.LVL3780:
 30092              	.L2085:
14078:Core/Src/bno055.c ****         }
14079:Core/Src/bno055.c ****         else
14080:Core/Src/bno055.c ****         {
14081:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14082:Core/Src/bno055.c ****         }
14083:Core/Src/bno055.c ****     }
14084:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 841


14085:Core/Src/bno055.c ****     return com_rslt;
14086:Core/Src/bno055.c **** }
 30093              		.loc 1 14086 1 view .LVU8510
 30094 003e 03B0     		add	sp, sp, #12
 30095              	.LCFI831:
 30096              		.cfi_remember_state
 30097              		.cfi_def_cfa_offset 12
 30098              		@ sp needed
 30099 0040 30BD     		pop	{r4, r5, pc}
 30100              	.LVL3781:
 30101              	.L2091:
 30102              	.LCFI832:
 30103              		.cfi_restore_state
14068:Core/Src/bno055.c ****         }
 30104              		.loc 1 14068 13 is_stmt 1 view .LVU8511
14068:Core/Src/bno055.c ****         }
 30105              		.loc 1 14068 23 is_stmt 0 view .LVU8512
 30106 0042 0120     		movs	r0, #1
 30107              	.LVL3782:
14068:Core/Src/bno055.c ****         }
 30108              		.loc 1 14068 23 view .LVU8513
 30109 0044 FFF7FEFF 		bl	bno055_write_page_id
 30110              	.LVL3783:
14070:Core/Src/bno055.c ****         {
 30111              		.loc 1 14070 9 is_stmt 1 view .LVU8514
14070:Core/Src/bno055.c ****         {
 30112              		.loc 1 14070 12 is_stmt 0 view .LVU8515
 30113 0048 0028     		cmp	r0, #0
 30114 004a EAD0     		beq	.L2087
 30115 004c E4E7     		b	.L2086
 30116              	.LVL3784:
 30117              	.L2088:
14059:Core/Src/bno055.c ****     }
 30118              		.loc 1 14059 16 view .LVU8516
 30119 004e 6FF07E00 		mvn	r0, #126
 30120              	.LVL3785:
14059:Core/Src/bno055.c ****     }
 30121              		.loc 1 14059 16 view .LVU8517
 30122 0052 F4E7     		b	.L2085
 30123              	.LVL3786:
 30124              	.L2089:
14081:Core/Src/bno055.c ****         }
 30125              		.loc 1 14081 22 view .LVU8518
 30126 0054 4FF0FF30 		mov	r0, #-1
 30127 0058 F1E7     		b	.L2085
 30128              	.L2093:
 30129 005a 00BF     		.align	2
 30130              	.L2092:
 30131 005c 00000000 		.word	.LANCHOR0
 30132              		.cfi_endproc
 30133              	.LFE209:
 30135              		.section	.text.bno055_set_intr_mask_accel_high_g,"ax",%progbits
 30136              		.align	1
 30137              		.global	bno055_set_intr_mask_accel_high_g
 30138              		.syntax unified
 30139              		.thumb
 30140              		.thumb_func
ARM GAS  /tmp/ccO72alg.s 			page 842


 30142              	bno055_set_intr_mask_accel_high_g:
 30143              	.LVL3787:
 30144              	.LFB210:
14087:Core/Src/bno055.c **** 
14088:Core/Src/bno055.c **** /*!
14089:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt mask
14090:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 5
14091:Core/Src/bno055.c ****  *
14092:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt mask
14093:Core/Src/bno055.c ****  *         accel_high_g_u8 |   result
14094:Core/Src/bno055.c ****  *     --------------------  |------------
14095:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14096:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14097:Core/Src/bno055.c ****  *
14098:Core/Src/bno055.c ****  *  @return results of bus communication function
14099:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14100:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14101:Core/Src/bno055.c ****  *
14102:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14103:Core/Src/bno055.c ****  *  configure the below settings by using
14104:Core/Src/bno055.c ****  *  the following APIs
14105:Core/Src/bno055.c ****  *
14106:Core/Src/bno055.c ****  *  Axis :
14107:Core/Src/bno055.c ****  *
14108:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14109:Core/Src/bno055.c ****  *
14110:Core/Src/bno055.c ****  *  Threshold :
14111:Core/Src/bno055.c ****  *
14112:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14113:Core/Src/bno055.c ****  *
14114:Core/Src/bno055.c ****  *  Duration :
14115:Core/Src/bno055.c ****  *
14116:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14117:Core/Src/bno055.c ****  *
14118:Core/Src/bno055.c ****  */
14119:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_high_g(u8 accel_high_g_u8)
14120:Core/Src/bno055.c **** {
 30145              		.loc 1 14120 1 is_stmt 1 view -0
 30146              		.cfi_startproc
 30147              		@ args = 0, pretend = 0, frame = 8
 30148              		@ frame_needed = 0, uses_anonymous_args = 0
 30149              		.loc 1 14120 1 is_stmt 0 view .LVU8520
 30150 0000 30B5     		push	{r4, r5, lr}
 30151              	.LCFI833:
 30152              		.cfi_def_cfa_offset 12
 30153              		.cfi_offset 4, -12
 30154              		.cfi_offset 5, -8
 30155              		.cfi_offset 14, -4
 30156 0002 83B0     		sub	sp, sp, #12
 30157              	.LCFI834:
 30158              		.cfi_def_cfa_offset 24
14121:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30159              		.loc 1 14121 5 is_stmt 1 view .LVU8521
 30160              	.LVL3788:
14122:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30161              		.loc 1 14122 5 view .LVU8522
 30162              		.loc 1 14122 8 is_stmt 0 view .LVU8523
ARM GAS  /tmp/ccO72alg.s 			page 843


 30163 0004 0023     		movs	r3, #0
 30164 0006 8DF80730 		strb	r3, [sp, #7]
14123:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30165              		.loc 1 14123 5 is_stmt 1 view .LVU8524
 30166              	.LVL3789:
14124:Core/Src/bno055.c **** 
14125:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14126:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30167              		.loc 1 14126 5 view .LVU8525
 30168              		.loc 1 14126 18 is_stmt 0 view .LVU8526
 30169 000a 1F4B     		ldr	r3, .L2102
 30170 000c 1B68     		ldr	r3, [r3]
 30171              		.loc 1 14126 8 view .LVU8527
 30172 000e 002B     		cmp	r3, #0
 30173 0010 33D0     		beq	.L2098
 30174 0012 0446     		mov	r4, r0
14127:Core/Src/bno055.c ****     {
14128:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14129:Core/Src/bno055.c ****     }
14130:Core/Src/bno055.c ****     else
14131:Core/Src/bno055.c ****     {
14132:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt mask is
14133:Core/Src/bno055.c ****          * available in the page one*/
14134:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30175              		.loc 1 14134 9 is_stmt 1 view .LVU8528
 30176              		.loc 1 14134 21 is_stmt 0 view .LVU8529
 30177 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30178              		.loc 1 14134 12 view .LVU8530
 30179 0016 012B     		cmp	r3, #1
 30180 0018 29D1     		bne	.L2101
 30181              	.LVL3790:
 30182              	.L2096:
14135:Core/Src/bno055.c ****         {
14136:Core/Src/bno055.c ****             /* Write page as one */
14137:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14138:Core/Src/bno055.c ****         }
14139:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30183              		.loc 1 14139 53 discriminator 1 view .LVU8531
 30184 001a 1B4B     		ldr	r3, .L2102
 30185 001c 1B68     		ldr	r3, [r3]
 30186 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30187              		.loc 1 14139 41 discriminator 1 view .LVU8532
 30188 0020 012B     		cmp	r3, #1
 30189 0022 2DD1     		bne	.L2099
 30190              	.L2097:
14140:Core/Src/bno055.c ****         {
14141:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30191              		.loc 1 14141 13 is_stmt 1 view .LVU8533
 30192              		.loc 1 14141 32 is_stmt 0 view .LVU8534
 30193 0024 184B     		ldr	r3, .L2102
 30194 0026 1868     		ldr	r0, [r3]
 30195 0028 0569     		ldr	r5, [r0, #16]
 30196              		.loc 1 14141 24 view .LVU8535
 30197 002a 0123     		movs	r3, #1
 30198 002c 0DF10702 		add	r2, sp, #7
 30199 0030 0F21     		movs	r1, #15
 30200 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 844


 30201 0034 A847     		blx	r5
 30202              	.LVL3791:
14142:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14143:Core/Src/bno055.c ****                                                       &data_u8r,
14144:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14145:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30203              		.loc 1 14145 13 is_stmt 1 view .LVU8536
 30204              		.loc 1 14145 16 is_stmt 0 view .LVU8537
 30205 0036 0546     		mov	r5, r0
 30206 0038 B0B9     		cbnz	r0, .L2095
14146:Core/Src/bno055.c ****             {
14147:Core/Src/bno055.c ****                 /* Write the value of accel
14148:Core/Src/bno055.c ****                  * highg interrupt mask*/
14149:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR_MASK, accel_high_
 30207              		.loc 1 14149 17 is_stmt 1 view .LVU8538
 30208              		.loc 1 14149 28 is_stmt 0 view .LVU8539
 30209 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30210 003e 23F02003 		bic	r3, r3, #32
 30211 0042 5BB2     		sxtb	r3, r3
 30212 0044 6401     		lsls	r4, r4, #5
 30213 0046 04F02004 		and	r4, r4, #32
 30214 004a 1C43     		orrs	r4, r4, r3
 30215              		.loc 1 14149 26 view .LVU8540
 30216 004c 8DF80740 		strb	r4, [sp, #7]
14150:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30217              		.loc 1 14150 17 is_stmt 1 view .LVU8541
 30218              		.loc 1 14150 37 is_stmt 0 view .LVU8542
 30219 0050 0D4B     		ldr	r3, .L2102
 30220 0052 1868     		ldr	r0, [r3]
 30221              	.LVL3792:
 30222              		.loc 1 14150 37 view .LVU8543
 30223 0054 C468     		ldr	r4, [r0, #12]
 30224              		.loc 1 14150 29 view .LVU8544
 30225 0056 0123     		movs	r3, #1
 30226 0058 0DF10702 		add	r2, sp, #7
 30227 005c 0F21     		movs	r1, #15
 30228 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30229 0060 A047     		blx	r4
 30230              	.LVL3793:
 30231              		.loc 1 14150 26 view .LVU8545
 30232 0062 55FA80F5 		uxtab	r5, r5, r0
 30233 0066 6DB2     		sxtb	r5, r5
 30234              	.LVL3794:
 30235              	.L2095:
14151:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_MASK_REG,
14152:Core/Src/bno055.c ****                                                             &data_u8r,
14153:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14154:Core/Src/bno055.c ****             }
14155:Core/Src/bno055.c ****         }
14156:Core/Src/bno055.c ****         else
14157:Core/Src/bno055.c ****         {
14158:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14159:Core/Src/bno055.c ****         }
14160:Core/Src/bno055.c ****     }
14161:Core/Src/bno055.c **** 
14162:Core/Src/bno055.c ****     return com_rslt;
14163:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 845


 30236              		.loc 1 14163 1 view .LVU8546
 30237 0068 2846     		mov	r0, r5
 30238 006a 03B0     		add	sp, sp, #12
 30239              	.LCFI835:
 30240              		.cfi_remember_state
 30241              		.cfi_def_cfa_offset 12
 30242              		@ sp needed
 30243 006c 30BD     		pop	{r4, r5, pc}
 30244              	.LVL3795:
 30245              	.L2101:
 30246              	.LCFI836:
 30247              		.cfi_restore_state
14137:Core/Src/bno055.c ****         }
 30248              		.loc 1 14137 13 is_stmt 1 view .LVU8547
14137:Core/Src/bno055.c ****         }
 30249              		.loc 1 14137 23 is_stmt 0 view .LVU8548
 30250 006e 0120     		movs	r0, #1
 30251              	.LVL3796:
14137:Core/Src/bno055.c ****         }
 30252              		.loc 1 14137 23 view .LVU8549
 30253 0070 FFF7FEFF 		bl	bno055_write_page_id
 30254              	.LVL3797:
14139:Core/Src/bno055.c ****         {
 30255              		.loc 1 14139 9 is_stmt 1 view .LVU8550
14139:Core/Src/bno055.c ****         {
 30256              		.loc 1 14139 12 is_stmt 0 view .LVU8551
 30257 0074 0028     		cmp	r0, #0
 30258 0076 D5D0     		beq	.L2097
 30259 0078 CFE7     		b	.L2096
 30260              	.LVL3798:
 30261              	.L2098:
14128:Core/Src/bno055.c ****     }
 30262              		.loc 1 14128 16 view .LVU8552
 30263 007a 6FF07E05 		mvn	r5, #126
 30264 007e F3E7     		b	.L2095
 30265              	.LVL3799:
 30266              	.L2099:
14158:Core/Src/bno055.c ****         }
 30267              		.loc 1 14158 22 view .LVU8553
 30268 0080 4FF0FF35 		mov	r5, #-1
 30269 0084 F0E7     		b	.L2095
 30270              	.L2103:
 30271 0086 00BF     		.align	2
 30272              	.L2102:
 30273 0088 00000000 		.word	.LANCHOR0
 30274              		.cfi_endproc
 30275              	.LFE210:
 30277              		.section	.text.bno055_get_intr_mask_accel_any_motion,"ax",%progbits
 30278              		.align	1
 30279              		.global	bno055_get_intr_mask_accel_any_motion
 30280              		.syntax unified
 30281              		.thumb
 30282              		.thumb_func
 30284              	bno055_get_intr_mask_accel_any_motion:
 30285              	.LVL3800:
 30286              	.LFB211:
14164:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 846


14165:Core/Src/bno055.c **** /*!
14166:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt mask
14167:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14168:Core/Src/bno055.c ****  *
14169:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14170:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14171:Core/Src/bno055.c ****  *     --------------------  |------------
14172:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14173:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14174:Core/Src/bno055.c ****  *
14175:Core/Src/bno055.c ****  *  @return results of bus communication function
14176:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14177:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14178:Core/Src/bno055.c ****  *
14179:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14180:Core/Src/bno055.c ****  *  configure the below settings by using
14181:Core/Src/bno055.c ****  *  the following APIs
14182:Core/Src/bno055.c ****  *
14183:Core/Src/bno055.c ****  *  Axis :
14184:Core/Src/bno055.c ****  *
14185:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14186:Core/Src/bno055.c ****  *
14187:Core/Src/bno055.c ****  *  Threshold :
14188:Core/Src/bno055.c ****  *
14189:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14190:Core/Src/bno055.c ****  *
14191:Core/Src/bno055.c ****  *  Duration :
14192:Core/Src/bno055.c ****  *
14193:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14194:Core/Src/bno055.c ****  *
14195:Core/Src/bno055.c ****  */
14196:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_any_motion(u8 *accel_any_motion_u8)
14197:Core/Src/bno055.c **** {
 30287              		.loc 1 14197 1 is_stmt 1 view -0
 30288              		.cfi_startproc
 30289              		@ args = 0, pretend = 0, frame = 8
 30290              		@ frame_needed = 0, uses_anonymous_args = 0
 30291              		.loc 1 14197 1 is_stmt 0 view .LVU8555
 30292 0000 30B5     		push	{r4, r5, lr}
 30293              	.LCFI837:
 30294              		.cfi_def_cfa_offset 12
 30295              		.cfi_offset 4, -12
 30296              		.cfi_offset 5, -8
 30297              		.cfi_offset 14, -4
 30298 0002 83B0     		sub	sp, sp, #12
 30299              	.LCFI838:
 30300              		.cfi_def_cfa_offset 24
14198:Core/Src/bno055.c ****     /* Variable used to return value of
14199:Core/Src/bno055.c ****      * communication routine*/
14200:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30301              		.loc 1 14200 5 is_stmt 1 view .LVU8556
 30302              	.LVL3801:
14201:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30303              		.loc 1 14201 5 view .LVU8557
 30304              		.loc 1 14201 8 is_stmt 0 view .LVU8558
 30305 0004 0023     		movs	r3, #0
 30306 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccO72alg.s 			page 847


14202:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30307              		.loc 1 14202 5 is_stmt 1 view .LVU8559
 30308              	.LVL3802:
14203:Core/Src/bno055.c **** 
14204:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14205:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30309              		.loc 1 14205 5 view .LVU8560
 30310              		.loc 1 14205 18 is_stmt 0 view .LVU8561
 30311 000a 144B     		ldr	r3, .L2112
 30312 000c 1B68     		ldr	r3, [r3]
 30313              		.loc 1 14205 8 view .LVU8562
 30314 000e F3B1     		cbz	r3, .L2108
 30315 0010 0446     		mov	r4, r0
14206:Core/Src/bno055.c ****     {
14207:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14208:Core/Src/bno055.c ****     }
14209:Core/Src/bno055.c ****     else
14210:Core/Src/bno055.c ****     {
14211:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14212:Core/Src/bno055.c ****          * available in the page one*/
14213:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30316              		.loc 1 14213 9 is_stmt 1 view .LVU8563
 30317              		.loc 1 14213 21 is_stmt 0 view .LVU8564
 30318 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30319              		.loc 1 14213 12 view .LVU8565
 30320 0014 012B     		cmp	r3, #1
 30321 0016 14D1     		bne	.L2111
 30322              	.LVL3803:
 30323              	.L2106:
14214:Core/Src/bno055.c ****         {
14215:Core/Src/bno055.c ****             /* Write page as one */
14216:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14217:Core/Src/bno055.c ****         }
14218:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30324              		.loc 1 14218 53 discriminator 1 view .LVU8566
 30325 0018 104B     		ldr	r3, .L2112
 30326 001a 1B68     		ldr	r3, [r3]
 30327 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30328              		.loc 1 14218 41 discriminator 1 view .LVU8567
 30329 001e 012B     		cmp	r3, #1
 30330 0020 18D1     		bne	.L2109
 30331              	.L2107:
14219:Core/Src/bno055.c ****         {
14220:Core/Src/bno055.c ****             /* The value of accel anymotion interrupt mask*/
14221:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30332              		.loc 1 14221 13 is_stmt 1 view .LVU8568
 30333              		.loc 1 14221 32 is_stmt 0 view .LVU8569
 30334 0022 0E4B     		ldr	r3, .L2112
 30335 0024 1868     		ldr	r0, [r3]
 30336 0026 0569     		ldr	r5, [r0, #16]
 30337              		.loc 1 14221 24 view .LVU8570
 30338 0028 0123     		movs	r3, #1
 30339 002a 0DF10702 		add	r2, sp, #7
 30340 002e 0F21     		movs	r1, #15
 30341 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30342 0032 A847     		blx	r5
 30343              	.LVL3804:
ARM GAS  /tmp/ccO72alg.s 			page 848


14222:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14223:Core/Src/bno055.c ****                                                       &data_u8r,
14224:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14225:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK)
 30344              		.loc 1 14225 13 is_stmt 1 view .LVU8571
 30345              		.loc 1 14225 36 is_stmt 0 view .LVU8572
 30346 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30347 0038 C3F38013 		ubfx	r3, r3, #6, #1
 30348              		.loc 1 14225 34 view .LVU8573
 30349 003c 2370     		strb	r3, [r4]
 30350              	.LVL3805:
 30351              	.L2105:
14226:Core/Src/bno055.c ****         }
14227:Core/Src/bno055.c ****         else
14228:Core/Src/bno055.c ****         {
14229:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14230:Core/Src/bno055.c ****         }
14231:Core/Src/bno055.c ****     }
14232:Core/Src/bno055.c **** 
14233:Core/Src/bno055.c ****     return com_rslt;
14234:Core/Src/bno055.c **** }
 30352              		.loc 1 14234 1 view .LVU8574
 30353 003e 03B0     		add	sp, sp, #12
 30354              	.LCFI839:
 30355              		.cfi_remember_state
 30356              		.cfi_def_cfa_offset 12
 30357              		@ sp needed
 30358 0040 30BD     		pop	{r4, r5, pc}
 30359              	.LVL3806:
 30360              	.L2111:
 30361              	.LCFI840:
 30362              		.cfi_restore_state
14216:Core/Src/bno055.c ****         }
 30363              		.loc 1 14216 13 is_stmt 1 view .LVU8575
14216:Core/Src/bno055.c ****         }
 30364              		.loc 1 14216 23 is_stmt 0 view .LVU8576
 30365 0042 0120     		movs	r0, #1
 30366              	.LVL3807:
14216:Core/Src/bno055.c ****         }
 30367              		.loc 1 14216 23 view .LVU8577
 30368 0044 FFF7FEFF 		bl	bno055_write_page_id
 30369              	.LVL3808:
14218:Core/Src/bno055.c ****         {
 30370              		.loc 1 14218 9 is_stmt 1 view .LVU8578
14218:Core/Src/bno055.c ****         {
 30371              		.loc 1 14218 12 is_stmt 0 view .LVU8579
 30372 0048 0028     		cmp	r0, #0
 30373 004a EAD0     		beq	.L2107
 30374 004c E4E7     		b	.L2106
 30375              	.LVL3809:
 30376              	.L2108:
14207:Core/Src/bno055.c ****     }
 30377              		.loc 1 14207 16 view .LVU8580
 30378 004e 6FF07E00 		mvn	r0, #126
 30379              	.LVL3810:
14207:Core/Src/bno055.c ****     }
 30380              		.loc 1 14207 16 view .LVU8581
ARM GAS  /tmp/ccO72alg.s 			page 849


 30381 0052 F4E7     		b	.L2105
 30382              	.LVL3811:
 30383              	.L2109:
14229:Core/Src/bno055.c ****         }
 30384              		.loc 1 14229 22 view .LVU8582
 30385 0054 4FF0FF30 		mov	r0, #-1
 30386 0058 F1E7     		b	.L2105
 30387              	.L2113:
 30388 005a 00BF     		.align	2
 30389              	.L2112:
 30390 005c 00000000 		.word	.LANCHOR0
 30391              		.cfi_endproc
 30392              	.LFE211:
 30394              		.section	.text.bno055_set_intr_mask_accel_any_motion,"ax",%progbits
 30395              		.align	1
 30396              		.global	bno055_set_intr_mask_accel_any_motion
 30397              		.syntax unified
 30398              		.thumb
 30399              		.thumb_func
 30401              	bno055_set_intr_mask_accel_any_motion:
 30402              	.LVL3812:
 30403              	.LFB212:
14235:Core/Src/bno055.c **** 
14236:Core/Src/bno055.c **** /*!
14237:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt mask
14238:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 6
14239:Core/Src/bno055.c ****  *
14240:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt mask
14241:Core/Src/bno055.c ****  *     accel_any_motion_u8 | result
14242:Core/Src/bno055.c ****  *     --------------------  |------------
14243:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14244:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14245:Core/Src/bno055.c ****  *
14246:Core/Src/bno055.c ****  *  @return results of bus communication function
14247:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14248:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14249:Core/Src/bno055.c ****  *
14250:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14251:Core/Src/bno055.c ****  *  configure the following settings
14252:Core/Src/bno055.c ****  *
14253:Core/Src/bno055.c ****  *  Axis:
14254:Core/Src/bno055.c ****  *
14255:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14256:Core/Src/bno055.c ****  *
14257:Core/Src/bno055.c ****  *  Duration:
14258:Core/Src/bno055.c ****  *
14259:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14260:Core/Src/bno055.c ****  *
14261:Core/Src/bno055.c ****  * Threshold:
14262:Core/Src/bno055.c ****  *
14263:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14264:Core/Src/bno055.c ****  *
14265:Core/Src/bno055.c ****  */
14266:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_any_motion(u8 accel_any_motion_u8)
14267:Core/Src/bno055.c **** {
 30404              		.loc 1 14267 1 is_stmt 1 view -0
 30405              		.cfi_startproc
ARM GAS  /tmp/ccO72alg.s 			page 850


 30406              		@ args = 0, pretend = 0, frame = 8
 30407              		@ frame_needed = 0, uses_anonymous_args = 0
 30408              		.loc 1 14267 1 is_stmt 0 view .LVU8584
 30409 0000 30B5     		push	{r4, r5, lr}
 30410              	.LCFI841:
 30411              		.cfi_def_cfa_offset 12
 30412              		.cfi_offset 4, -12
 30413              		.cfi_offset 5, -8
 30414              		.cfi_offset 14, -4
 30415 0002 83B0     		sub	sp, sp, #12
 30416              	.LCFI842:
 30417              		.cfi_def_cfa_offset 24
14268:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30418              		.loc 1 14268 5 is_stmt 1 view .LVU8585
 30419              	.LVL3813:
14269:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30420              		.loc 1 14269 5 view .LVU8586
 30421              		.loc 1 14269 8 is_stmt 0 view .LVU8587
 30422 0004 0023     		movs	r3, #0
 30423 0006 8DF80730 		strb	r3, [sp, #7]
14270:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30424              		.loc 1 14270 5 is_stmt 1 view .LVU8588
 30425              	.LVL3814:
14271:Core/Src/bno055.c **** 
14272:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14273:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30426              		.loc 1 14273 5 view .LVU8589
 30427              		.loc 1 14273 18 is_stmt 0 view .LVU8590
 30428 000a 1F4B     		ldr	r3, .L2122
 30429 000c 1B68     		ldr	r3, [r3]
 30430              		.loc 1 14273 8 view .LVU8591
 30431 000e 002B     		cmp	r3, #0
 30432 0010 33D0     		beq	.L2118
 30433 0012 0446     		mov	r4, r0
14274:Core/Src/bno055.c ****     {
14275:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14276:Core/Src/bno055.c ****     }
14277:Core/Src/bno055.c ****     else
14278:Core/Src/bno055.c ****     {
14279:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt mask is
14280:Core/Src/bno055.c ****          * available in the page one*/
14281:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30434              		.loc 1 14281 9 is_stmt 1 view .LVU8592
 30435              		.loc 1 14281 21 is_stmt 0 view .LVU8593
 30436 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30437              		.loc 1 14281 12 view .LVU8594
 30438 0016 012B     		cmp	r3, #1
 30439 0018 29D1     		bne	.L2121
 30440              	.LVL3815:
 30441              	.L2116:
14282:Core/Src/bno055.c ****         {
14283:Core/Src/bno055.c ****             /* Write page as one */
14284:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14285:Core/Src/bno055.c ****         }
14286:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30442              		.loc 1 14286 53 discriminator 1 view .LVU8595
 30443 001a 1B4B     		ldr	r3, .L2122
ARM GAS  /tmp/ccO72alg.s 			page 851


 30444 001c 1B68     		ldr	r3, [r3]
 30445 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30446              		.loc 1 14286 41 discriminator 1 view .LVU8596
 30447 0020 012B     		cmp	r3, #1
 30448 0022 2DD1     		bne	.L2119
 30449              	.L2117:
14287:Core/Src/bno055.c ****         {
14288:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt mask*/
14289:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30450              		.loc 1 14289 13 is_stmt 1 view .LVU8597
 30451              		.loc 1 14289 32 is_stmt 0 view .LVU8598
 30452 0024 184B     		ldr	r3, .L2122
 30453 0026 1868     		ldr	r0, [r3]
 30454 0028 0569     		ldr	r5, [r0, #16]
 30455              		.loc 1 14289 24 view .LVU8599
 30456 002a 0123     		movs	r3, #1
 30457 002c 0DF10702 		add	r2, sp, #7
 30458 0030 0F21     		movs	r1, #15
 30459 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30460 0034 A847     		blx	r5
 30461              	.LVL3816:
14290:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14291:Core/Src/bno055.c ****                                                       &data_u8r,
14292:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14293:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30462              		.loc 1 14293 13 is_stmt 1 view .LVU8600
 30463              		.loc 1 14293 16 is_stmt 0 view .LVU8601
 30464 0036 0546     		mov	r5, r0
 30465 0038 B0B9     		cbnz	r0, .L2115
14294:Core/Src/bno055.c ****             {
14295:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR_MASK, accel_a
 30466              		.loc 1 14295 17 is_stmt 1 view .LVU8602
 30467              		.loc 1 14295 28 is_stmt 0 view .LVU8603
 30468 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30469 003e 23F04003 		bic	r3, r3, #64
 30470 0042 5BB2     		sxtb	r3, r3
 30471 0044 A401     		lsls	r4, r4, #6
 30472 0046 04F04004 		and	r4, r4, #64
 30473 004a 1C43     		orrs	r4, r4, r3
 30474              		.loc 1 14295 26 view .LVU8604
 30475 004c 8DF80740 		strb	r4, [sp, #7]
14296:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30476              		.loc 1 14296 17 is_stmt 1 view .LVU8605
 30477              		.loc 1 14296 37 is_stmt 0 view .LVU8606
 30478 0050 0D4B     		ldr	r3, .L2122
 30479 0052 1868     		ldr	r0, [r3]
 30480              	.LVL3817:
 30481              		.loc 1 14296 37 view .LVU8607
 30482 0054 C468     		ldr	r4, [r0, #12]
 30483              		.loc 1 14296 29 view .LVU8608
 30484 0056 0123     		movs	r3, #1
 30485 0058 0DF10702 		add	r2, sp, #7
 30486 005c 0F21     		movs	r1, #15
 30487 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30488 0060 A047     		blx	r4
 30489              	.LVL3818:
 30490              		.loc 1 14296 26 view .LVU8609
ARM GAS  /tmp/ccO72alg.s 			page 852


 30491 0062 55FA80F5 		uxtab	r5, r5, r0
 30492 0066 6DB2     		sxtb	r5, r5
 30493              	.LVL3819:
 30494              	.L2115:
14297:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_MASK_REG,
14298:Core/Src/bno055.c ****                                                             &data_u8r,
14299:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14300:Core/Src/bno055.c ****             }
14301:Core/Src/bno055.c ****         }
14302:Core/Src/bno055.c ****         else
14303:Core/Src/bno055.c ****         {
14304:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14305:Core/Src/bno055.c ****         }
14306:Core/Src/bno055.c ****     }
14307:Core/Src/bno055.c **** 
14308:Core/Src/bno055.c ****     return com_rslt;
14309:Core/Src/bno055.c **** }
 30495              		.loc 1 14309 1 view .LVU8610
 30496 0068 2846     		mov	r0, r5
 30497 006a 03B0     		add	sp, sp, #12
 30498              	.LCFI843:
 30499              		.cfi_remember_state
 30500              		.cfi_def_cfa_offset 12
 30501              		@ sp needed
 30502 006c 30BD     		pop	{r4, r5, pc}
 30503              	.LVL3820:
 30504              	.L2121:
 30505              	.LCFI844:
 30506              		.cfi_restore_state
14284:Core/Src/bno055.c ****         }
 30507              		.loc 1 14284 13 is_stmt 1 view .LVU8611
14284:Core/Src/bno055.c ****         }
 30508              		.loc 1 14284 23 is_stmt 0 view .LVU8612
 30509 006e 0120     		movs	r0, #1
 30510              	.LVL3821:
14284:Core/Src/bno055.c ****         }
 30511              		.loc 1 14284 23 view .LVU8613
 30512 0070 FFF7FEFF 		bl	bno055_write_page_id
 30513              	.LVL3822:
14286:Core/Src/bno055.c ****         {
 30514              		.loc 1 14286 9 is_stmt 1 view .LVU8614
14286:Core/Src/bno055.c ****         {
 30515              		.loc 1 14286 12 is_stmt 0 view .LVU8615
 30516 0074 0028     		cmp	r0, #0
 30517 0076 D5D0     		beq	.L2117
 30518 0078 CFE7     		b	.L2116
 30519              	.LVL3823:
 30520              	.L2118:
14275:Core/Src/bno055.c ****     }
 30521              		.loc 1 14275 16 view .LVU8616
 30522 007a 6FF07E05 		mvn	r5, #126
 30523 007e F3E7     		b	.L2115
 30524              	.LVL3824:
 30525              	.L2119:
14304:Core/Src/bno055.c ****         }
 30526              		.loc 1 14304 22 view .LVU8617
 30527 0080 4FF0FF35 		mov	r5, #-1
ARM GAS  /tmp/ccO72alg.s 			page 853


 30528 0084 F0E7     		b	.L2115
 30529              	.L2123:
 30530 0086 00BF     		.align	2
 30531              	.L2122:
 30532 0088 00000000 		.word	.LANCHOR0
 30533              		.cfi_endproc
 30534              	.LFE212:
 30536              		.section	.text.bno055_get_intr_mask_accel_no_motion,"ax",%progbits
 30537              		.align	1
 30538              		.global	bno055_get_intr_mask_accel_no_motion
 30539              		.syntax unified
 30540              		.thumb
 30541              		.thumb_func
 30543              	bno055_get_intr_mask_accel_no_motion:
 30544              	.LVL3825:
 30545              	.LFB213:
14310:Core/Src/bno055.c **** 
14311:Core/Src/bno055.c **** /*!
14312:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt mask
14313:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14314:Core/Src/bno055.c ****  *
14315:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14316:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14317:Core/Src/bno055.c ****  *     --------------------  |------------
14318:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14319:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14320:Core/Src/bno055.c ****  *
14321:Core/Src/bno055.c ****  *  @return results of bus communication function
14322:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14323:Core/Src/bno055.c ****  *
14324:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14325:Core/Src/bno055.c ****  *  configure the following settings
14326:Core/Src/bno055.c ****  *
14327:Core/Src/bno055.c ****  *  Axis:
14328:Core/Src/bno055.c ****  *
14329:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14330:Core/Src/bno055.c ****  *
14331:Core/Src/bno055.c ****  *  Duration:
14332:Core/Src/bno055.c ****  *
14333:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14334:Core/Src/bno055.c ****  *
14335:Core/Src/bno055.c ****  * Threshold:
14336:Core/Src/bno055.c ****  *
14337:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres())
14338:Core/Src/bno055.c ****  *
14339:Core/Src/bno055.c ****  */
14340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_mask_accel_no_motion(u8 *accel_nomotion_u8)
14341:Core/Src/bno055.c **** {
 30546              		.loc 1 14341 1 is_stmt 1 view -0
 30547              		.cfi_startproc
 30548              		@ args = 0, pretend = 0, frame = 8
 30549              		@ frame_needed = 0, uses_anonymous_args = 0
 30550              		.loc 1 14341 1 is_stmt 0 view .LVU8619
 30551 0000 30B5     		push	{r4, r5, lr}
 30552              	.LCFI845:
 30553              		.cfi_def_cfa_offset 12
 30554              		.cfi_offset 4, -12
ARM GAS  /tmp/ccO72alg.s 			page 854


 30555              		.cfi_offset 5, -8
 30556              		.cfi_offset 14, -4
 30557 0002 83B0     		sub	sp, sp, #12
 30558              	.LCFI846:
 30559              		.cfi_def_cfa_offset 24
14342:Core/Src/bno055.c ****     /* Variable used to return value of
14343:Core/Src/bno055.c ****      * communication routine*/
14344:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30560              		.loc 1 14344 5 is_stmt 1 view .LVU8620
 30561              	.LVL3826:
14345:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30562              		.loc 1 14345 5 view .LVU8621
 30563              		.loc 1 14345 8 is_stmt 0 view .LVU8622
 30564 0004 0023     		movs	r3, #0
 30565 0006 8DF80730 		strb	r3, [sp, #7]
14346:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30566              		.loc 1 14346 5 is_stmt 1 view .LVU8623
 30567              	.LVL3827:
14347:Core/Src/bno055.c **** 
14348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30568              		.loc 1 14349 5 view .LVU8624
 30569              		.loc 1 14349 18 is_stmt 0 view .LVU8625
 30570 000a 134B     		ldr	r3, .L2132
 30571 000c 1B68     		ldr	r3, [r3]
 30572              		.loc 1 14349 8 view .LVU8626
 30573 000e EBB1     		cbz	r3, .L2128
 30574 0010 0446     		mov	r4, r0
14350:Core/Src/bno055.c ****     {
14351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14352:Core/Src/bno055.c ****     }
14353:Core/Src/bno055.c ****     else
14354:Core/Src/bno055.c ****     {
14355:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt mask is
14356:Core/Src/bno055.c ****          * available in the page one*/
14357:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30575              		.loc 1 14357 9 is_stmt 1 view .LVU8627
 30576              		.loc 1 14357 21 is_stmt 0 view .LVU8628
 30577 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30578              		.loc 1 14357 12 view .LVU8629
 30579 0014 012B     		cmp	r3, #1
 30580 0016 13D1     		bne	.L2131
 30581              	.LVL3828:
 30582              	.L2126:
14358:Core/Src/bno055.c ****         {
14359:Core/Src/bno055.c ****             /* Write page as one */
14360:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14361:Core/Src/bno055.c ****         }
14362:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30583              		.loc 1 14362 53 discriminator 1 view .LVU8630
 30584 0018 0F4B     		ldr	r3, .L2132
 30585 001a 1B68     		ldr	r3, [r3]
 30586 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30587              		.loc 1 14362 41 discriminator 1 view .LVU8631
 30588 001e 012B     		cmp	r3, #1
 30589 0020 17D1     		bne	.L2129
 30590              	.L2127:
ARM GAS  /tmp/ccO72alg.s 			page 855


14363:Core/Src/bno055.c ****         {
14364:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt mask*/
14365:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30591              		.loc 1 14365 13 is_stmt 1 view .LVU8632
 30592              		.loc 1 14365 32 is_stmt 0 view .LVU8633
 30593 0022 0D4B     		ldr	r3, .L2132
 30594 0024 1868     		ldr	r0, [r3]
 30595 0026 0569     		ldr	r5, [r0, #16]
 30596              		.loc 1 14365 24 view .LVU8634
 30597 0028 0123     		movs	r3, #1
 30598 002a 0DF10702 		add	r2, sp, #7
 30599 002e 0F21     		movs	r1, #15
 30600 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30601 0032 A847     		blx	r5
 30602              	.LVL3829:
14366:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14367:Core/Src/bno055.c ****                                                       &data_u8r,
14368:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14369:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK);
 30603              		.loc 1 14369 13 is_stmt 1 view .LVU8635
 30604              		.loc 1 14369 34 is_stmt 0 view .LVU8636
 30605 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30606 0038 DB09     		lsrs	r3, r3, #7
 30607              		.loc 1 14369 32 view .LVU8637
 30608 003a 2370     		strb	r3, [r4]
 30609              	.LVL3830:
 30610              	.L2125:
14370:Core/Src/bno055.c ****         }
14371:Core/Src/bno055.c ****         else
14372:Core/Src/bno055.c ****         {
14373:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14374:Core/Src/bno055.c ****         }
14375:Core/Src/bno055.c ****     }
14376:Core/Src/bno055.c **** 
14377:Core/Src/bno055.c ****     return com_rslt;
14378:Core/Src/bno055.c **** }
 30611              		.loc 1 14378 1 view .LVU8638
 30612 003c 03B0     		add	sp, sp, #12
 30613              	.LCFI847:
 30614              		.cfi_remember_state
 30615              		.cfi_def_cfa_offset 12
 30616              		@ sp needed
 30617 003e 30BD     		pop	{r4, r5, pc}
 30618              	.LVL3831:
 30619              	.L2131:
 30620              	.LCFI848:
 30621              		.cfi_restore_state
14360:Core/Src/bno055.c ****         }
 30622              		.loc 1 14360 13 is_stmt 1 view .LVU8639
14360:Core/Src/bno055.c ****         }
 30623              		.loc 1 14360 23 is_stmt 0 view .LVU8640
 30624 0040 0120     		movs	r0, #1
 30625              	.LVL3832:
14360:Core/Src/bno055.c ****         }
 30626              		.loc 1 14360 23 view .LVU8641
 30627 0042 FFF7FEFF 		bl	bno055_write_page_id
 30628              	.LVL3833:
ARM GAS  /tmp/ccO72alg.s 			page 856


14362:Core/Src/bno055.c ****         {
 30629              		.loc 1 14362 9 is_stmt 1 view .LVU8642
14362:Core/Src/bno055.c ****         {
 30630              		.loc 1 14362 12 is_stmt 0 view .LVU8643
 30631 0046 0028     		cmp	r0, #0
 30632 0048 EBD0     		beq	.L2127
 30633 004a E5E7     		b	.L2126
 30634              	.LVL3834:
 30635              	.L2128:
14351:Core/Src/bno055.c ****     }
 30636              		.loc 1 14351 16 view .LVU8644
 30637 004c 6FF07E00 		mvn	r0, #126
 30638              	.LVL3835:
14351:Core/Src/bno055.c ****     }
 30639              		.loc 1 14351 16 view .LVU8645
 30640 0050 F4E7     		b	.L2125
 30641              	.LVL3836:
 30642              	.L2129:
14373:Core/Src/bno055.c ****         }
 30643              		.loc 1 14373 22 view .LVU8646
 30644 0052 4FF0FF30 		mov	r0, #-1
 30645 0056 F1E7     		b	.L2125
 30646              	.L2133:
 30647              		.align	2
 30648              	.L2132:
 30649 0058 00000000 		.word	.LANCHOR0
 30650              		.cfi_endproc
 30651              	.LFE213:
 30653              		.section	.text.bno055_set_intr_mask_accel_no_motion,"ax",%progbits
 30654              		.align	1
 30655              		.global	bno055_set_intr_mask_accel_no_motion
 30656              		.syntax unified
 30657              		.thumb
 30658              		.thumb_func
 30660              	bno055_set_intr_mask_accel_no_motion:
 30661              	.LVL3837:
 30662              	.LFB214:
14379:Core/Src/bno055.c **** 
14380:Core/Src/bno055.c **** /*!
14381:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt mask
14382:Core/Src/bno055.c ****  *  from page one register from 0x0F bit 7
14383:Core/Src/bno055.c ****  *
14384:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt mask
14385:Core/Src/bno055.c ****  *     accel_nomotion_u8   | result
14386:Core/Src/bno055.c ****  *     --------------------  |------------
14387:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14388:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14389:Core/Src/bno055.c ****  *
14390:Core/Src/bno055.c ****  *  @return results of bus communication function
14391:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14392:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14393:Core/Src/bno055.c ****  *
14394:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
14395:Core/Src/bno055.c ****  *  configure the following settings
14396:Core/Src/bno055.c ****  *
14397:Core/Src/bno055.c ****  *  Axis:
14398:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 857


14399:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14400:Core/Src/bno055.c ****  *
14401:Core/Src/bno055.c ****  *  Threshold :
14402:Core/Src/bno055.c ****  *
14403:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
14404:Core/Src/bno055.c ****  *
14405:Core/Src/bno055.c ****  *  Duration :
14406:Core/Src/bno055.c ****  *
14407:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
14408:Core/Src/bno055.c ****  *
14409:Core/Src/bno055.c ****  *  Slow/no motion enable:
14410:Core/Src/bno055.c ****  *
14411:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
14412:Core/Src/bno055.c ****  *
14413:Core/Src/bno055.c ****  */
14414:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_mask_accel_no_motion(u8 accel_nomotion_u8)
14415:Core/Src/bno055.c **** {
 30663              		.loc 1 14415 1 is_stmt 1 view -0
 30664              		.cfi_startproc
 30665              		@ args = 0, pretend = 0, frame = 8
 30666              		@ frame_needed = 0, uses_anonymous_args = 0
 30667              		.loc 1 14415 1 is_stmt 0 view .LVU8648
 30668 0000 30B5     		push	{r4, r5, lr}
 30669              	.LCFI849:
 30670              		.cfi_def_cfa_offset 12
 30671              		.cfi_offset 4, -12
 30672              		.cfi_offset 5, -8
 30673              		.cfi_offset 14, -4
 30674 0002 83B0     		sub	sp, sp, #12
 30675              	.LCFI850:
 30676              		.cfi_def_cfa_offset 24
14416:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30677              		.loc 1 14416 5 is_stmt 1 view .LVU8649
 30678              	.LVL3838:
14417:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30679              		.loc 1 14417 5 view .LVU8650
 30680              		.loc 1 14417 8 is_stmt 0 view .LVU8651
 30681 0004 0023     		movs	r3, #0
 30682 0006 8DF80730 		strb	r3, [sp, #7]
14418:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30683              		.loc 1 14418 5 is_stmt 1 view .LVU8652
 30684              	.LVL3839:
14419:Core/Src/bno055.c **** 
14420:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14421:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30685              		.loc 1 14421 5 view .LVU8653
 30686              		.loc 1 14421 18 is_stmt 0 view .LVU8654
 30687 000a 1D4B     		ldr	r3, .L2142
 30688 000c 1B68     		ldr	r3, [r3]
 30689              		.loc 1 14421 8 view .LVU8655
 30690 000e 002B     		cmp	r3, #0
 30691 0010 30D0     		beq	.L2138
 30692 0012 0446     		mov	r4, r0
14422:Core/Src/bno055.c ****     {
14423:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14424:Core/Src/bno055.c ****     }
14425:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccO72alg.s 			page 858


14426:Core/Src/bno055.c ****     {
14427:Core/Src/bno055.c ****         /*condition check for page, accel
14428:Core/Src/bno055.c ****          * nomotion interrupt mask is
14429:Core/Src/bno055.c ****          * available in the page one*/
14430:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30693              		.loc 1 14430 9 is_stmt 1 view .LVU8656
 30694              		.loc 1 14430 21 is_stmt 0 view .LVU8657
 30695 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30696              		.loc 1 14430 12 view .LVU8658
 30697 0016 012B     		cmp	r3, #1
 30698 0018 26D1     		bne	.L2141
 30699              	.LVL3840:
 30700              	.L2136:
14431:Core/Src/bno055.c ****         {
14432:Core/Src/bno055.c ****             /* Write page as one */
14433:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14434:Core/Src/bno055.c ****         }
14435:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30701              		.loc 1 14435 53 discriminator 1 view .LVU8659
 30702 001a 194B     		ldr	r3, .L2142
 30703 001c 1B68     		ldr	r3, [r3]
 30704 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30705              		.loc 1 14435 41 discriminator 1 view .LVU8660
 30706 0020 012B     		cmp	r3, #1
 30707 0022 2AD1     		bne	.L2139
 30708              	.L2137:
14436:Core/Src/bno055.c ****         {
14437:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30709              		.loc 1 14437 13 is_stmt 1 view .LVU8661
 30710              		.loc 1 14437 32 is_stmt 0 view .LVU8662
 30711 0024 164B     		ldr	r3, .L2142
 30712 0026 1868     		ldr	r0, [r3]
 30713 0028 0569     		ldr	r5, [r0, #16]
 30714              		.loc 1 14437 24 view .LVU8663
 30715 002a 0123     		movs	r3, #1
 30716 002c 0DF10702 		add	r2, sp, #7
 30717 0030 0F21     		movs	r1, #15
 30718 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30719 0034 A847     		blx	r5
 30720              	.LVL3841:
14438:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14439:Core/Src/bno055.c ****                                                       &data_u8r,
14440:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14441:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30721              		.loc 1 14441 13 is_stmt 1 view .LVU8664
 30722              		.loc 1 14441 16 is_stmt 0 view .LVU8665
 30723 0036 0546     		mov	r5, r0
 30724 0038 98B9     		cbnz	r0, .L2135
14442:Core/Src/bno055.c ****             {
14443:Core/Src/bno055.c ****                 /* Write the value of accel
14444:Core/Src/bno055.c ****                 * nomotion interrupt mask*/
14445:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR_MASK, accel_no
 30725              		.loc 1 14445 17 is_stmt 1 view .LVU8666
 30726              		.loc 1 14445 28 is_stmt 0 view .LVU8667
 30727 003a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 30728              	.LVL3842:
 30729              		.loc 1 14445 28 view .LVU8668
ARM GAS  /tmp/ccO72alg.s 			page 859


 30730 003e 00F07F00 		and	r0, r0, #127
 30731 0042 40EAC414 		orr	r4, r0, r4, lsl #7
 30732              		.loc 1 14445 26 view .LVU8669
 30733 0046 8DF80740 		strb	r4, [sp, #7]
14446:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30734              		.loc 1 14446 17 is_stmt 1 view .LVU8670
 30735              		.loc 1 14446 37 is_stmt 0 view .LVU8671
 30736 004a 0D4B     		ldr	r3, .L2142
 30737 004c 1868     		ldr	r0, [r3]
 30738 004e C468     		ldr	r4, [r0, #12]
 30739              		.loc 1 14446 29 view .LVU8672
 30740 0050 0123     		movs	r3, #1
 30741 0052 0DF10702 		add	r2, sp, #7
 30742 0056 0F21     		movs	r1, #15
 30743 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30744 005a A047     		blx	r4
 30745              	.LVL3843:
 30746              		.loc 1 14446 26 view .LVU8673
 30747 005c 55FA80F5 		uxtab	r5, r5, r0
 30748 0060 6DB2     		sxtb	r5, r5
 30749              	.LVL3844:
 30750              	.L2135:
14447:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_MASK_REG,
14448:Core/Src/bno055.c ****                                                             &data_u8r,
14449:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14450:Core/Src/bno055.c ****             }
14451:Core/Src/bno055.c ****         }
14452:Core/Src/bno055.c ****         else
14453:Core/Src/bno055.c ****         {
14454:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14455:Core/Src/bno055.c ****         }
14456:Core/Src/bno055.c ****     }
14457:Core/Src/bno055.c **** 
14458:Core/Src/bno055.c ****     return com_rslt;
14459:Core/Src/bno055.c **** }
 30751              		.loc 1 14459 1 view .LVU8674
 30752 0062 2846     		mov	r0, r5
 30753 0064 03B0     		add	sp, sp, #12
 30754              	.LCFI851:
 30755              		.cfi_remember_state
 30756              		.cfi_def_cfa_offset 12
 30757              		@ sp needed
 30758 0066 30BD     		pop	{r4, r5, pc}
 30759              	.LVL3845:
 30760              	.L2141:
 30761              	.LCFI852:
 30762              		.cfi_restore_state
14433:Core/Src/bno055.c ****         }
 30763              		.loc 1 14433 13 is_stmt 1 view .LVU8675
14433:Core/Src/bno055.c ****         }
 30764              		.loc 1 14433 23 is_stmt 0 view .LVU8676
 30765 0068 0120     		movs	r0, #1
 30766              	.LVL3846:
14433:Core/Src/bno055.c ****         }
 30767              		.loc 1 14433 23 view .LVU8677
 30768 006a FFF7FEFF 		bl	bno055_write_page_id
 30769              	.LVL3847:
ARM GAS  /tmp/ccO72alg.s 			page 860


14435:Core/Src/bno055.c ****         {
 30770              		.loc 1 14435 9 is_stmt 1 view .LVU8678
14435:Core/Src/bno055.c ****         {
 30771              		.loc 1 14435 12 is_stmt 0 view .LVU8679
 30772 006e 0028     		cmp	r0, #0
 30773 0070 D8D0     		beq	.L2137
 30774 0072 D2E7     		b	.L2136
 30775              	.LVL3848:
 30776              	.L2138:
14423:Core/Src/bno055.c ****     }
 30777              		.loc 1 14423 16 view .LVU8680
 30778 0074 6FF07E05 		mvn	r5, #126
 30779 0078 F3E7     		b	.L2135
 30780              	.LVL3849:
 30781              	.L2139:
14454:Core/Src/bno055.c ****         }
 30782              		.loc 1 14454 22 view .LVU8681
 30783 007a 4FF0FF35 		mov	r5, #-1
 30784 007e F0E7     		b	.L2135
 30785              	.L2143:
 30786              		.align	2
 30787              	.L2142:
 30788 0080 00000000 		.word	.LANCHOR0
 30789              		.cfi_endproc
 30790              	.LFE214:
 30792              		.section	.text.bno055_get_intr_gyro_any_motion,"ax",%progbits
 30793              		.align	1
 30794              		.global	bno055_get_intr_gyro_any_motion
 30795              		.syntax unified
 30796              		.thumb
 30797              		.thumb_func
 30799              	bno055_get_intr_gyro_any_motion:
 30800              	.LVL3850:
 30801              	.LFB215:
14460:Core/Src/bno055.c **** 
14461:Core/Src/bno055.c **** /*!
14462:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion interrupt
14463:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14464:Core/Src/bno055.c ****  *
14465:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14466:Core/Src/bno055.c ****  *      gyro_any_motion_u8 | result
14467:Core/Src/bno055.c ****  *     --------------------  |------------
14468:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14469:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14470:Core/Src/bno055.c ****  *
14471:Core/Src/bno055.c ****  *  @return results of bus communication function
14472:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14473:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14474:Core/Src/bno055.c ****  *
14475:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14476:Core/Src/bno055.c ****  *  configure the following settings
14477:Core/Src/bno055.c ****  *
14478:Core/Src/bno055.c ****  *  Axis:
14479:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14480:Core/Src/bno055.c ****  *
14481:Core/Src/bno055.c ****  *  Filter setting:
14482:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
ARM GAS  /tmp/ccO72alg.s 			page 861


14483:Core/Src/bno055.c ****  *
14484:Core/Src/bno055.c ****  *  Threshold :
14485:Core/Src/bno055.c ****  *
14486:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14487:Core/Src/bno055.c ****  *
14488:Core/Src/bno055.c ****  *  Slope samples :
14489:Core/Src/bno055.c ****  *
14490:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14491:Core/Src/bno055.c ****  *
14492:Core/Src/bno055.c ****  *  Awake duration :
14493:Core/Src/bno055.c ****  *
14494:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14495:Core/Src/bno055.c ****  */
14496:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_any_motion(u8 *gyro_any_motion_u8)
14497:Core/Src/bno055.c **** {
 30802              		.loc 1 14497 1 is_stmt 1 view -0
 30803              		.cfi_startproc
 30804              		@ args = 0, pretend = 0, frame = 8
 30805              		@ frame_needed = 0, uses_anonymous_args = 0
 30806              		.loc 1 14497 1 is_stmt 0 view .LVU8683
 30807 0000 30B5     		push	{r4, r5, lr}
 30808              	.LCFI853:
 30809              		.cfi_def_cfa_offset 12
 30810              		.cfi_offset 4, -12
 30811              		.cfi_offset 5, -8
 30812              		.cfi_offset 14, -4
 30813 0002 83B0     		sub	sp, sp, #12
 30814              	.LCFI854:
 30815              		.cfi_def_cfa_offset 24
14498:Core/Src/bno055.c ****     /* Variable used to return value of
14499:Core/Src/bno055.c ****      * communication routine*/
14500:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 30816              		.loc 1 14500 5 is_stmt 1 view .LVU8684
 30817              	.LVL3851:
14501:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30818              		.loc 1 14501 5 view .LVU8685
 30819              		.loc 1 14501 8 is_stmt 0 view .LVU8686
 30820 0004 0023     		movs	r3, #0
 30821 0006 8DF80730 		strb	r3, [sp, #7]
14502:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30822              		.loc 1 14502 5 is_stmt 1 view .LVU8687
 30823              	.LVL3852:
14503:Core/Src/bno055.c **** 
14504:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14505:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30824              		.loc 1 14505 5 view .LVU8688
 30825              		.loc 1 14505 18 is_stmt 0 view .LVU8689
 30826 000a 144B     		ldr	r3, .L2152
 30827 000c 1B68     		ldr	r3, [r3]
 30828              		.loc 1 14505 8 view .LVU8690
 30829 000e F3B1     		cbz	r3, .L2148
 30830 0010 0446     		mov	r4, r0
14506:Core/Src/bno055.c ****     {
14507:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14508:Core/Src/bno055.c ****     }
14509:Core/Src/bno055.c ****     else
14510:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 862


14511:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14512:Core/Src/bno055.c ****          * available in the page one*/
14513:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30831              		.loc 1 14513 9 is_stmt 1 view .LVU8691
 30832              		.loc 1 14513 21 is_stmt 0 view .LVU8692
 30833 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30834              		.loc 1 14513 12 view .LVU8693
 30835 0014 012B     		cmp	r3, #1
 30836 0016 14D1     		bne	.L2151
 30837              	.LVL3853:
 30838              	.L2146:
14514:Core/Src/bno055.c ****         {
14515:Core/Src/bno055.c ****             /* Write page as one */
14516:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14517:Core/Src/bno055.c ****         }
14518:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30839              		.loc 1 14518 53 discriminator 1 view .LVU8694
 30840 0018 104B     		ldr	r3, .L2152
 30841 001a 1B68     		ldr	r3, [r3]
 30842 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30843              		.loc 1 14518 41 discriminator 1 view .LVU8695
 30844 001e 012B     		cmp	r3, #1
 30845 0020 18D1     		bne	.L2149
 30846              	.L2147:
14519:Core/Src/bno055.c ****         {
14520:Core/Src/bno055.c ****             /* Read the value of gyro anymotion interrupt */
14521:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30847              		.loc 1 14521 13 is_stmt 1 view .LVU8696
 30848              		.loc 1 14521 32 is_stmt 0 view .LVU8697
 30849 0022 0E4B     		ldr	r3, .L2152
 30850 0024 1868     		ldr	r0, [r3]
 30851 0026 0569     		ldr	r5, [r0, #16]
 30852              		.loc 1 14521 24 view .LVU8698
 30853 0028 0123     		movs	r3, #1
 30854 002a 0DF10702 		add	r2, sp, #7
 30855 002e 1021     		movs	r1, #16
 30856 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30857 0032 A847     		blx	r5
 30858              	.LVL3854:
14522:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14523:Core/Src/bno055.c ****                                                       &data_u8r,
14524:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14525:Core/Src/bno055.c ****             *gyro_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR);
 30859              		.loc 1 14525 13 is_stmt 1 view .LVU8699
 30860              		.loc 1 14525 35 is_stmt 0 view .LVU8700
 30861 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30862 0038 C3F38003 		ubfx	r3, r3, #2, #1
 30863              		.loc 1 14525 33 view .LVU8701
 30864 003c 2370     		strb	r3, [r4]
 30865              	.LVL3855:
 30866              	.L2145:
14526:Core/Src/bno055.c ****         }
14527:Core/Src/bno055.c ****         else
14528:Core/Src/bno055.c ****         {
14529:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14530:Core/Src/bno055.c ****         }
14531:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 863


14532:Core/Src/bno055.c **** 
14533:Core/Src/bno055.c ****     return com_rslt;
14534:Core/Src/bno055.c **** }
 30867              		.loc 1 14534 1 view .LVU8702
 30868 003e 03B0     		add	sp, sp, #12
 30869              	.LCFI855:
 30870              		.cfi_remember_state
 30871              		.cfi_def_cfa_offset 12
 30872              		@ sp needed
 30873 0040 30BD     		pop	{r4, r5, pc}
 30874              	.LVL3856:
 30875              	.L2151:
 30876              	.LCFI856:
 30877              		.cfi_restore_state
14516:Core/Src/bno055.c ****         }
 30878              		.loc 1 14516 13 is_stmt 1 view .LVU8703
14516:Core/Src/bno055.c ****         }
 30879              		.loc 1 14516 23 is_stmt 0 view .LVU8704
 30880 0042 0120     		movs	r0, #1
 30881              	.LVL3857:
14516:Core/Src/bno055.c ****         }
 30882              		.loc 1 14516 23 view .LVU8705
 30883 0044 FFF7FEFF 		bl	bno055_write_page_id
 30884              	.LVL3858:
14518:Core/Src/bno055.c ****         {
 30885              		.loc 1 14518 9 is_stmt 1 view .LVU8706
14518:Core/Src/bno055.c ****         {
 30886              		.loc 1 14518 12 is_stmt 0 view .LVU8707
 30887 0048 0028     		cmp	r0, #0
 30888 004a EAD0     		beq	.L2147
 30889 004c E4E7     		b	.L2146
 30890              	.LVL3859:
 30891              	.L2148:
14507:Core/Src/bno055.c ****     }
 30892              		.loc 1 14507 16 view .LVU8708
 30893 004e 6FF07E00 		mvn	r0, #126
 30894              	.LVL3860:
14507:Core/Src/bno055.c ****     }
 30895              		.loc 1 14507 16 view .LVU8709
 30896 0052 F4E7     		b	.L2145
 30897              	.LVL3861:
 30898              	.L2149:
14529:Core/Src/bno055.c ****         }
 30899              		.loc 1 14529 22 view .LVU8710
 30900 0054 4FF0FF30 		mov	r0, #-1
 30901 0058 F1E7     		b	.L2145
 30902              	.L2153:
 30903 005a 00BF     		.align	2
 30904              	.L2152:
 30905 005c 00000000 		.word	.LANCHOR0
 30906              		.cfi_endproc
 30907              	.LFE215:
 30909              		.section	.text.bno055_set_intr_gyro_any_motion,"ax",%progbits
 30910              		.align	1
 30911              		.global	bno055_set_intr_gyro_any_motion
 30912              		.syntax unified
 30913              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 864


 30914              		.thumb_func
 30916              	bno055_set_intr_gyro_any_motion:
 30917              	.LVL3862:
 30918              	.LFB216:
14535:Core/Src/bno055.c **** 
14536:Core/Src/bno055.c **** /*!
14537:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion interrupt
14538:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 2
14539:Core/Src/bno055.c ****  *
14540:Core/Src/bno055.c ****  *  @param gyro_any_motion_u8 : The value of gyro anymotion interrupt
14541:Core/Src/bno055.c ****  *    gyro_any_motion_u8   | result
14542:Core/Src/bno055.c ****  *     --------------------  |------------
14543:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14544:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14545:Core/Src/bno055.c ****  *
14546:Core/Src/bno055.c ****  *  @return results of bus communication function
14547:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14548:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14549:Core/Src/bno055.c ****  *
14550:Core/Src/bno055.c ****  *  @note While enabling the gyro anymotion interrupt
14551:Core/Src/bno055.c ****  *  configure the following settings
14552:Core/Src/bno055.c ****  *
14553:Core/Src/bno055.c ****  *  Axis:
14554:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_axis_enable()
14555:Core/Src/bno055.c ****  *
14556:Core/Src/bno055.c ****  *  Filter setting:
14557:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_filter()
14558:Core/Src/bno055.c ****  *
14559:Core/Src/bno055.c ****  *  Threshold :
14560:Core/Src/bno055.c ****  *
14561:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_thres()
14562:Core/Src/bno055.c ****  *
14563:Core/Src/bno055.c ****  *  Slope samples :
14564:Core/Src/bno055.c ****  *
14565:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_slope_samples()
14566:Core/Src/bno055.c ****  *
14567:Core/Src/bno055.c ****  *  Awake duration :
14568:Core/Src/bno055.c ****  *
14569:Core/Src/bno055.c ****  *  bno055_set_gyro_any_motion_awake_durn()
14570:Core/Src/bno055.c ****  */
14571:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_any_motion(u8 gyro_any_motion_u8)
14572:Core/Src/bno055.c **** {
 30919              		.loc 1 14572 1 is_stmt 1 view -0
 30920              		.cfi_startproc
 30921              		@ args = 0, pretend = 0, frame = 8
 30922              		@ frame_needed = 0, uses_anonymous_args = 0
 30923              		.loc 1 14572 1 is_stmt 0 view .LVU8712
 30924 0000 30B5     		push	{r4, r5, lr}
 30925              	.LCFI857:
 30926              		.cfi_def_cfa_offset 12
 30927              		.cfi_offset 4, -12
 30928              		.cfi_offset 5, -8
 30929              		.cfi_offset 14, -4
 30930 0002 83B0     		sub	sp, sp, #12
 30931              	.LCFI858:
 30932              		.cfi_def_cfa_offset 24
14573:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 865


 30933              		.loc 1 14573 5 is_stmt 1 view .LVU8713
 30934              	.LVL3863:
14574:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 30935              		.loc 1 14574 5 view .LVU8714
 30936              		.loc 1 14574 8 is_stmt 0 view .LVU8715
 30937 0004 0023     		movs	r3, #0
 30938 0006 8DF80730 		strb	r3, [sp, #7]
14575:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 30939              		.loc 1 14575 5 is_stmt 1 view .LVU8716
 30940              	.LVL3864:
14576:Core/Src/bno055.c **** 
14577:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14578:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 30941              		.loc 1 14578 5 view .LVU8717
 30942              		.loc 1 14578 18 is_stmt 0 view .LVU8718
 30943 000a 1F4B     		ldr	r3, .L2162
 30944 000c 1B68     		ldr	r3, [r3]
 30945              		.loc 1 14578 8 view .LVU8719
 30946 000e 002B     		cmp	r3, #0
 30947 0010 33D0     		beq	.L2158
 30948 0012 0446     		mov	r4, r0
14579:Core/Src/bno055.c ****     {
14580:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14581:Core/Src/bno055.c ****     }
14582:Core/Src/bno055.c ****     else
14583:Core/Src/bno055.c ****     {
14584:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion interrupt  is
14585:Core/Src/bno055.c ****          * available in the page one*/
14586:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 30949              		.loc 1 14586 9 is_stmt 1 view .LVU8720
 30950              		.loc 1 14586 21 is_stmt 0 view .LVU8721
 30951 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30952              		.loc 1 14586 12 view .LVU8722
 30953 0016 012B     		cmp	r3, #1
 30954 0018 29D1     		bne	.L2161
 30955              	.LVL3865:
 30956              	.L2156:
14587:Core/Src/bno055.c ****         {
14588:Core/Src/bno055.c ****             /* Write page as one */
14589:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14590:Core/Src/bno055.c ****         }
14591:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 30957              		.loc 1 14591 53 discriminator 1 view .LVU8723
 30958 001a 1B4B     		ldr	r3, .L2162
 30959 001c 1B68     		ldr	r3, [r3]
 30960 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 30961              		.loc 1 14591 41 discriminator 1 view .LVU8724
 30962 0020 012B     		cmp	r3, #1
 30963 0022 2DD1     		bne	.L2159
 30964              	.L2157:
14592:Core/Src/bno055.c ****         {
14593:Core/Src/bno055.c ****             /* Write the value of gyro anymotion interrupt */
14594:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 30965              		.loc 1 14594 13 is_stmt 1 view .LVU8725
 30966              		.loc 1 14594 32 is_stmt 0 view .LVU8726
 30967 0024 184B     		ldr	r3, .L2162
 30968 0026 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 866


 30969 0028 0569     		ldr	r5, [r0, #16]
 30970              		.loc 1 14594 24 view .LVU8727
 30971 002a 0123     		movs	r3, #1
 30972 002c 0DF10702 		add	r2, sp, #7
 30973 0030 1021     		movs	r1, #16
 30974 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 30975 0034 A847     		blx	r5
 30976              	.LVL3866:
14595:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_INTR_REG,
14596:Core/Src/bno055.c ****                                                       &data_u8r,
14597:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14598:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 30977              		.loc 1 14598 13 is_stmt 1 view .LVU8728
 30978              		.loc 1 14598 16 is_stmt 0 view .LVU8729
 30979 0036 0546     		mov	r5, r0
 30980 0038 B0B9     		cbnz	r0, .L2155
14599:Core/Src/bno055.c ****             {
14600:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_INTR, gyro_any_moti
 30981              		.loc 1 14600 17 is_stmt 1 view .LVU8730
 30982              		.loc 1 14600 28 is_stmt 0 view .LVU8731
 30983 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 30984 003e 23F00403 		bic	r3, r3, #4
 30985 0042 5BB2     		sxtb	r3, r3
 30986 0044 A400     		lsls	r4, r4, #2
 30987 0046 04F00404 		and	r4, r4, #4
 30988 004a 1C43     		orrs	r4, r4, r3
 30989              		.loc 1 14600 26 view .LVU8732
 30990 004c 8DF80740 		strb	r4, [sp, #7]
14601:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 30991              		.loc 1 14601 17 is_stmt 1 view .LVU8733
 30992              		.loc 1 14601 37 is_stmt 0 view .LVU8734
 30993 0050 0D4B     		ldr	r3, .L2162
 30994 0052 1868     		ldr	r0, [r3]
 30995              	.LVL3867:
 30996              		.loc 1 14601 37 view .LVU8735
 30997 0054 C468     		ldr	r4, [r0, #12]
 30998              		.loc 1 14601 29 view .LVU8736
 30999 0056 0123     		movs	r3, #1
 31000 0058 0DF10702 		add	r2, sp, #7
 31001 005c 1021     		movs	r1, #16
 31002 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31003 0060 A047     		blx	r4
 31004              	.LVL3868:
 31005              		.loc 1 14601 26 view .LVU8737
 31006 0062 55FA80F5 		uxtab	r5, r5, r0
 31007 0066 6DB2     		sxtb	r5, r5
 31008              	.LVL3869:
 31009              	.L2155:
14602:Core/Src/bno055.c ****                                                             BNO055_GYRO_ANY_MOTION_INTR_REG,
14603:Core/Src/bno055.c ****                                                             &data_u8r,
14604:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14605:Core/Src/bno055.c ****             }
14606:Core/Src/bno055.c ****         }
14607:Core/Src/bno055.c ****         else
14608:Core/Src/bno055.c ****         {
14609:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14610:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 867


14611:Core/Src/bno055.c ****     }
14612:Core/Src/bno055.c **** 
14613:Core/Src/bno055.c ****     return com_rslt;
14614:Core/Src/bno055.c **** }
 31010              		.loc 1 14614 1 view .LVU8738
 31011 0068 2846     		mov	r0, r5
 31012 006a 03B0     		add	sp, sp, #12
 31013              	.LCFI859:
 31014              		.cfi_remember_state
 31015              		.cfi_def_cfa_offset 12
 31016              		@ sp needed
 31017 006c 30BD     		pop	{r4, r5, pc}
 31018              	.LVL3870:
 31019              	.L2161:
 31020              	.LCFI860:
 31021              		.cfi_restore_state
14589:Core/Src/bno055.c ****         }
 31022              		.loc 1 14589 13 is_stmt 1 view .LVU8739
14589:Core/Src/bno055.c ****         }
 31023              		.loc 1 14589 23 is_stmt 0 view .LVU8740
 31024 006e 0120     		movs	r0, #1
 31025              	.LVL3871:
14589:Core/Src/bno055.c ****         }
 31026              		.loc 1 14589 23 view .LVU8741
 31027 0070 FFF7FEFF 		bl	bno055_write_page_id
 31028              	.LVL3872:
14591:Core/Src/bno055.c ****         {
 31029              		.loc 1 14591 9 is_stmt 1 view .LVU8742
14591:Core/Src/bno055.c ****         {
 31030              		.loc 1 14591 12 is_stmt 0 view .LVU8743
 31031 0074 0028     		cmp	r0, #0
 31032 0076 D5D0     		beq	.L2157
 31033 0078 CFE7     		b	.L2156
 31034              	.LVL3873:
 31035              	.L2158:
14580:Core/Src/bno055.c ****     }
 31036              		.loc 1 14580 16 view .LVU8744
 31037 007a 6FF07E05 		mvn	r5, #126
 31038 007e F3E7     		b	.L2155
 31039              	.LVL3874:
 31040              	.L2159:
14609:Core/Src/bno055.c ****         }
 31041              		.loc 1 14609 22 view .LVU8745
 31042 0080 4FF0FF35 		mov	r5, #-1
 31043 0084 F0E7     		b	.L2155
 31044              	.L2163:
 31045 0086 00BF     		.align	2
 31046              	.L2162:
 31047 0088 00000000 		.word	.LANCHOR0
 31048              		.cfi_endproc
 31049              	.LFE216:
 31051              		.section	.text.bno055_get_intr_gyro_highrate,"ax",%progbits
 31052              		.align	1
 31053              		.global	bno055_get_intr_gyro_highrate
 31054              		.syntax unified
 31055              		.thumb
 31056              		.thumb_func
ARM GAS  /tmp/ccO72alg.s 			page 868


 31058              	bno055_get_intr_gyro_highrate:
 31059              	.LVL3875:
 31060              	.LFB217:
14615:Core/Src/bno055.c **** 
14616:Core/Src/bno055.c **** /*!
14617:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate interrupt
14618:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14619:Core/Src/bno055.c ****  *
14620:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14621:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14622:Core/Src/bno055.c ****  *     --------------------  |------------
14623:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14624:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14625:Core/Src/bno055.c ****  *
14626:Core/Src/bno055.c ****  *  @return results of bus communication function
14627:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14628:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14629:Core/Src/bno055.c ****  *
14630:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14631:Core/Src/bno055.c ****  *  configure the below settings by using
14632:Core/Src/bno055.c ****  *  the following APIs
14633:Core/Src/bno055.c ****  *
14634:Core/Src/bno055.c ****  *  Axis :
14635:Core/Src/bno055.c ****  *
14636:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14637:Core/Src/bno055.c ****  *
14638:Core/Src/bno055.c ****  *  Filter :
14639:Core/Src/bno055.c ****  *
14640:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14641:Core/Src/bno055.c ****  *
14642:Core/Src/bno055.c ****  *  Threshold :
14643:Core/Src/bno055.c ****  *
14644:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14645:Core/Src/bno055.c ****  *
14646:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14647:Core/Src/bno055.c ****  *
14648:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14649:Core/Src/bno055.c ****  *
14650:Core/Src/bno055.c ****  *  Hysteresis :
14651:Core/Src/bno055.c ****  *
14652:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14653:Core/Src/bno055.c ****  *
14654:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14655:Core/Src/bno055.c ****  *
14656:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14657:Core/Src/bno055.c ****  *
14658:Core/Src/bno055.c ****  *  Duration :
14659:Core/Src/bno055.c ****  *
14660:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14661:Core/Src/bno055.c ****  *
14662:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14663:Core/Src/bno055.c ****  *
14664:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14665:Core/Src/bno055.c ****  *
14666:Core/Src/bno055.c ****  */
14667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_gyro_highrate(u8 *gyro_highrate_u8)
14668:Core/Src/bno055.c **** {
ARM GAS  /tmp/ccO72alg.s 			page 869


 31061              		.loc 1 14668 1 is_stmt 1 view -0
 31062              		.cfi_startproc
 31063              		@ args = 0, pretend = 0, frame = 8
 31064              		@ frame_needed = 0, uses_anonymous_args = 0
 31065              		.loc 1 14668 1 is_stmt 0 view .LVU8747
 31066 0000 30B5     		push	{r4, r5, lr}
 31067              	.LCFI861:
 31068              		.cfi_def_cfa_offset 12
 31069              		.cfi_offset 4, -12
 31070              		.cfi_offset 5, -8
 31071              		.cfi_offset 14, -4
 31072 0002 83B0     		sub	sp, sp, #12
 31073              	.LCFI862:
 31074              		.cfi_def_cfa_offset 24
14669:Core/Src/bno055.c ****     /* Variable used to return value of
14670:Core/Src/bno055.c ****      * communication routine*/
14671:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31075              		.loc 1 14671 5 is_stmt 1 view .LVU8748
 31076              	.LVL3876:
14672:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31077              		.loc 1 14672 5 view .LVU8749
 31078              		.loc 1 14672 8 is_stmt 0 view .LVU8750
 31079 0004 0023     		movs	r3, #0
 31080 0006 8DF80730 		strb	r3, [sp, #7]
14673:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31081              		.loc 1 14673 5 is_stmt 1 view .LVU8751
 31082              	.LVL3877:
14674:Core/Src/bno055.c **** 
14675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31083              		.loc 1 14676 5 view .LVU8752
 31084              		.loc 1 14676 18 is_stmt 0 view .LVU8753
 31085 000a 144B     		ldr	r3, .L2172
 31086 000c 1B68     		ldr	r3, [r3]
 31087              		.loc 1 14676 8 view .LVU8754
 31088 000e F3B1     		cbz	r3, .L2168
 31089 0010 0446     		mov	r4, r0
14677:Core/Src/bno055.c ****     {
14678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14679:Core/Src/bno055.c ****     }
14680:Core/Src/bno055.c ****     else
14681:Core/Src/bno055.c ****     {
14682:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14683:Core/Src/bno055.c ****          * available in the page one*/
14684:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31090              		.loc 1 14684 9 is_stmt 1 view .LVU8755
 31091              		.loc 1 14684 21 is_stmt 0 view .LVU8756
 31092 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31093              		.loc 1 14684 12 view .LVU8757
 31094 0014 012B     		cmp	r3, #1
 31095 0016 14D1     		bne	.L2171
 31096              	.LVL3878:
 31097              	.L2166:
14685:Core/Src/bno055.c ****         {
14686:Core/Src/bno055.c ****             /* Write page as one */
14687:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14688:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 870


14689:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31098              		.loc 1 14689 53 discriminator 1 view .LVU8758
 31099 0018 104B     		ldr	r3, .L2172
 31100 001a 1B68     		ldr	r3, [r3]
 31101 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31102              		.loc 1 14689 41 discriminator 1 view .LVU8759
 31103 001e 012B     		cmp	r3, #1
 31104 0020 18D1     		bne	.L2169
 31105              	.L2167:
14690:Core/Src/bno055.c ****         {
14691:Core/Src/bno055.c ****             /* Read the value of gyro highrate interrupt */
14692:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31106              		.loc 1 14692 13 is_stmt 1 view .LVU8760
 31107              		.loc 1 14692 32 is_stmt 0 view .LVU8761
 31108 0022 0E4B     		ldr	r3, .L2172
 31109 0024 1868     		ldr	r0, [r3]
 31110 0026 0569     		ldr	r5, [r0, #16]
 31111              		.loc 1 14692 24 view .LVU8762
 31112 0028 0123     		movs	r3, #1
 31113 002a 0DF10702 		add	r2, sp, #7
 31114 002e 1021     		movs	r1, #16
 31115 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31116 0032 A847     		blx	r5
 31117              	.LVL3879:
14693:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14694:Core/Src/bno055.c ****                                                       &data_u8r,
14695:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14696:Core/Src/bno055.c ****             *gyro_highrate_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR);
 31118              		.loc 1 14696 13 is_stmt 1 view .LVU8763
 31119              		.loc 1 14696 33 is_stmt 0 view .LVU8764
 31120 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31121 0038 C3F3C003 		ubfx	r3, r3, #3, #1
 31122              		.loc 1 14696 31 view .LVU8765
 31123 003c 2370     		strb	r3, [r4]
 31124              	.LVL3880:
 31125              	.L2165:
14697:Core/Src/bno055.c ****         }
14698:Core/Src/bno055.c ****         else
14699:Core/Src/bno055.c ****         {
14700:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14701:Core/Src/bno055.c ****         }
14702:Core/Src/bno055.c ****     }
14703:Core/Src/bno055.c **** 
14704:Core/Src/bno055.c ****     return com_rslt;
14705:Core/Src/bno055.c **** }
 31126              		.loc 1 14705 1 view .LVU8766
 31127 003e 03B0     		add	sp, sp, #12
 31128              	.LCFI863:
 31129              		.cfi_remember_state
 31130              		.cfi_def_cfa_offset 12
 31131              		@ sp needed
 31132 0040 30BD     		pop	{r4, r5, pc}
 31133              	.LVL3881:
 31134              	.L2171:
 31135              	.LCFI864:
 31136              		.cfi_restore_state
14687:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 871


 31137              		.loc 1 14687 13 is_stmt 1 view .LVU8767
14687:Core/Src/bno055.c ****         }
 31138              		.loc 1 14687 23 is_stmt 0 view .LVU8768
 31139 0042 0120     		movs	r0, #1
 31140              	.LVL3882:
14687:Core/Src/bno055.c ****         }
 31141              		.loc 1 14687 23 view .LVU8769
 31142 0044 FFF7FEFF 		bl	bno055_write_page_id
 31143              	.LVL3883:
14689:Core/Src/bno055.c ****         {
 31144              		.loc 1 14689 9 is_stmt 1 view .LVU8770
14689:Core/Src/bno055.c ****         {
 31145              		.loc 1 14689 12 is_stmt 0 view .LVU8771
 31146 0048 0028     		cmp	r0, #0
 31147 004a EAD0     		beq	.L2167
 31148 004c E4E7     		b	.L2166
 31149              	.LVL3884:
 31150              	.L2168:
14678:Core/Src/bno055.c ****     }
 31151              		.loc 1 14678 16 view .LVU8772
 31152 004e 6FF07E00 		mvn	r0, #126
 31153              	.LVL3885:
14678:Core/Src/bno055.c ****     }
 31154              		.loc 1 14678 16 view .LVU8773
 31155 0052 F4E7     		b	.L2165
 31156              	.LVL3886:
 31157              	.L2169:
14700:Core/Src/bno055.c ****         }
 31158              		.loc 1 14700 22 view .LVU8774
 31159 0054 4FF0FF30 		mov	r0, #-1
 31160 0058 F1E7     		b	.L2165
 31161              	.L2173:
 31162 005a 00BF     		.align	2
 31163              	.L2172:
 31164 005c 00000000 		.word	.LANCHOR0
 31165              		.cfi_endproc
 31166              	.LFE217:
 31168              		.section	.text.bno055_set_intr_gyro_highrate,"ax",%progbits
 31169              		.align	1
 31170              		.global	bno055_set_intr_gyro_highrate
 31171              		.syntax unified
 31172              		.thumb
 31173              		.thumb_func
 31175              	bno055_set_intr_gyro_highrate:
 31176              	.LVL3887:
 31177              	.LFB218:
14706:Core/Src/bno055.c **** 
14707:Core/Src/bno055.c **** /*!
14708:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate interrupt
14709:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 3
14710:Core/Src/bno055.c ****  *
14711:Core/Src/bno055.c ****  *  @param gyro_highrate_u8 : The value of gyro highrate interrupt
14712:Core/Src/bno055.c ****  *      gyro_highrate_u8   | result
14713:Core/Src/bno055.c ****  *     --------------------  |------------
14714:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14715:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14716:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 872


14717:Core/Src/bno055.c ****  *  @return results of bus communication function
14718:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14719:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14720:Core/Src/bno055.c ****  *
14721:Core/Src/bno055.c ****  *  @note While enabling the gyro highrate interrupt
14722:Core/Src/bno055.c ****  *  configure the below settings by using
14723:Core/Src/bno055.c ****  *  the following APIs
14724:Core/Src/bno055.c ****  *
14725:Core/Src/bno055.c ****  *  Axis :
14726:Core/Src/bno055.c ****  *
14727:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_axis_enable()
14728:Core/Src/bno055.c ****  *
14729:Core/Src/bno055.c ****  *  Filter :
14730:Core/Src/bno055.c ****  *
14731:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_filter()
14732:Core/Src/bno055.c ****  *
14733:Core/Src/bno055.c ****  *  Threshold :
14734:Core/Src/bno055.c ****  *
14735:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_x_thres()
14736:Core/Src/bno055.c ****  *
14737:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_y_thres()
14738:Core/Src/bno055.c ****  *
14739:Core/Src/bno055.c ****  *  bno055_get_gyro_highrate_z_thres()
14740:Core/Src/bno055.c ****  *
14741:Core/Src/bno055.c ****  *  Hysteresis :
14742:Core/Src/bno055.c ****  *
14743:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_hyst()
14744:Core/Src/bno055.c ****  *
14745:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_hyst()
14746:Core/Src/bno055.c ****  *
14747:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_hyst()
14748:Core/Src/bno055.c ****  *
14749:Core/Src/bno055.c ****  *  Duration :
14750:Core/Src/bno055.c ****  *
14751:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_x_durn()
14752:Core/Src/bno055.c ****  *
14753:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_y_durn()
14754:Core/Src/bno055.c ****  *
14755:Core/Src/bno055.c ****  *  bno055_set_gyro_highrate_z_durn()
14756:Core/Src/bno055.c ****  *
14757:Core/Src/bno055.c ****  */
14758:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_gyro_highrate(u8 gyro_highrate_u8)
14759:Core/Src/bno055.c **** {
 31178              		.loc 1 14759 1 is_stmt 1 view -0
 31179              		.cfi_startproc
 31180              		@ args = 0, pretend = 0, frame = 8
 31181              		@ frame_needed = 0, uses_anonymous_args = 0
 31182              		.loc 1 14759 1 is_stmt 0 view .LVU8776
 31183 0000 30B5     		push	{r4, r5, lr}
 31184              	.LCFI865:
 31185              		.cfi_def_cfa_offset 12
 31186              		.cfi_offset 4, -12
 31187              		.cfi_offset 5, -8
 31188              		.cfi_offset 14, -4
 31189 0002 83B0     		sub	sp, sp, #12
 31190              	.LCFI866:
 31191              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccO72alg.s 			page 873


14760:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31192              		.loc 1 14760 5 is_stmt 1 view .LVU8777
 31193              	.LVL3888:
14761:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31194              		.loc 1 14761 5 view .LVU8778
 31195              		.loc 1 14761 8 is_stmt 0 view .LVU8779
 31196 0004 0023     		movs	r3, #0
 31197 0006 8DF80730 		strb	r3, [sp, #7]
14762:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31198              		.loc 1 14762 5 is_stmt 1 view .LVU8780
 31199              	.LVL3889:
14763:Core/Src/bno055.c **** 
14764:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14765:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31200              		.loc 1 14765 5 view .LVU8781
 31201              		.loc 1 14765 18 is_stmt 0 view .LVU8782
 31202 000a 1F4B     		ldr	r3, .L2182
 31203 000c 1B68     		ldr	r3, [r3]
 31204              		.loc 1 14765 8 view .LVU8783
 31205 000e 002B     		cmp	r3, #0
 31206 0010 33D0     		beq	.L2178
 31207 0012 0446     		mov	r4, r0
14766:Core/Src/bno055.c ****     {
14767:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14768:Core/Src/bno055.c ****     }
14769:Core/Src/bno055.c ****     else
14770:Core/Src/bno055.c ****     {
14771:Core/Src/bno055.c ****         /*condition check for page, gyro highrate interrupt is
14772:Core/Src/bno055.c ****          * available in the page one*/
14773:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31208              		.loc 1 14773 9 is_stmt 1 view .LVU8784
 31209              		.loc 1 14773 21 is_stmt 0 view .LVU8785
 31210 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31211              		.loc 1 14773 12 view .LVU8786
 31212 0016 012B     		cmp	r3, #1
 31213 0018 29D1     		bne	.L2181
 31214              	.LVL3890:
 31215              	.L2176:
14774:Core/Src/bno055.c ****         {
14775:Core/Src/bno055.c ****             /* Write page as one */
14776:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14777:Core/Src/bno055.c ****         }
14778:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31216              		.loc 1 14778 53 discriminator 1 view .LVU8787
 31217 001a 1B4B     		ldr	r3, .L2182
 31218 001c 1B68     		ldr	r3, [r3]
 31219 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31220              		.loc 1 14778 41 discriminator 1 view .LVU8788
 31221 0020 012B     		cmp	r3, #1
 31222 0022 2DD1     		bne	.L2179
 31223              	.L2177:
14779:Core/Src/bno055.c ****         {
14780:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31224              		.loc 1 14780 13 is_stmt 1 view .LVU8789
 31225              		.loc 1 14780 32 is_stmt 0 view .LVU8790
 31226 0024 184B     		ldr	r3, .L2182
 31227 0026 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 874


 31228 0028 0569     		ldr	r5, [r0, #16]
 31229              		.loc 1 14780 24 view .LVU8791
 31230 002a 0123     		movs	r3, #1
 31231 002c 0DF10702 		add	r2, sp, #7
 31232 0030 1021     		movs	r1, #16
 31233 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31234 0034 A847     		blx	r5
 31235              	.LVL3891:
14781:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_INTR_REG,
14782:Core/Src/bno055.c ****                                                       &data_u8r,
14783:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14784:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31236              		.loc 1 14784 13 is_stmt 1 view .LVU8792
 31237              		.loc 1 14784 16 is_stmt 0 view .LVU8793
 31238 0036 0546     		mov	r5, r0
 31239 0038 B0B9     		cbnz	r0, .L2175
14785:Core/Src/bno055.c ****             {
14786:Core/Src/bno055.c ****                 /* Write the value of gyro highrate interrupt */
14787:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_INTR, gyro_highrate_u
 31240              		.loc 1 14787 17 is_stmt 1 view .LVU8794
 31241              		.loc 1 14787 28 is_stmt 0 view .LVU8795
 31242 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31243 003e 23F00803 		bic	r3, r3, #8
 31244 0042 5BB2     		sxtb	r3, r3
 31245 0044 E400     		lsls	r4, r4, #3
 31246 0046 04F00804 		and	r4, r4, #8
 31247 004a 1C43     		orrs	r4, r4, r3
 31248              		.loc 1 14787 26 view .LVU8796
 31249 004c 8DF80740 		strb	r4, [sp, #7]
14788:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31250              		.loc 1 14788 17 is_stmt 1 view .LVU8797
 31251              		.loc 1 14788 37 is_stmt 0 view .LVU8798
 31252 0050 0D4B     		ldr	r3, .L2182
 31253 0052 1868     		ldr	r0, [r3]
 31254              	.LVL3892:
 31255              		.loc 1 14788 37 view .LVU8799
 31256 0054 C468     		ldr	r4, [r0, #12]
 31257              		.loc 1 14788 29 view .LVU8800
 31258 0056 0123     		movs	r3, #1
 31259 0058 0DF10702 		add	r2, sp, #7
 31260 005c 1021     		movs	r1, #16
 31261 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31262 0060 A047     		blx	r4
 31263              	.LVL3893:
 31264              		.loc 1 14788 26 view .LVU8801
 31265 0062 55FA80F5 		uxtab	r5, r5, r0
 31266 0066 6DB2     		sxtb	r5, r5
 31267              	.LVL3894:
 31268              	.L2175:
14789:Core/Src/bno055.c ****                                                             BNO055_GYRO_HIGHRATE_INTR_REG,
14790:Core/Src/bno055.c ****                                                             &data_u8r,
14791:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14792:Core/Src/bno055.c ****             }
14793:Core/Src/bno055.c ****         }
14794:Core/Src/bno055.c ****         else
14795:Core/Src/bno055.c ****         {
14796:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 875


14797:Core/Src/bno055.c ****         }
14798:Core/Src/bno055.c ****     }
14799:Core/Src/bno055.c **** 
14800:Core/Src/bno055.c ****     return com_rslt;
14801:Core/Src/bno055.c **** }
 31269              		.loc 1 14801 1 view .LVU8802
 31270 0068 2846     		mov	r0, r5
 31271 006a 03B0     		add	sp, sp, #12
 31272              	.LCFI867:
 31273              		.cfi_remember_state
 31274              		.cfi_def_cfa_offset 12
 31275              		@ sp needed
 31276 006c 30BD     		pop	{r4, r5, pc}
 31277              	.LVL3895:
 31278              	.L2181:
 31279              	.LCFI868:
 31280              		.cfi_restore_state
14776:Core/Src/bno055.c ****         }
 31281              		.loc 1 14776 13 is_stmt 1 view .LVU8803
14776:Core/Src/bno055.c ****         }
 31282              		.loc 1 14776 23 is_stmt 0 view .LVU8804
 31283 006e 0120     		movs	r0, #1
 31284              	.LVL3896:
14776:Core/Src/bno055.c ****         }
 31285              		.loc 1 14776 23 view .LVU8805
 31286 0070 FFF7FEFF 		bl	bno055_write_page_id
 31287              	.LVL3897:
14778:Core/Src/bno055.c ****         {
 31288              		.loc 1 14778 9 is_stmt 1 view .LVU8806
14778:Core/Src/bno055.c ****         {
 31289              		.loc 1 14778 12 is_stmt 0 view .LVU8807
 31290 0074 0028     		cmp	r0, #0
 31291 0076 D5D0     		beq	.L2177
 31292 0078 CFE7     		b	.L2176
 31293              	.LVL3898:
 31294              	.L2178:
14767:Core/Src/bno055.c ****     }
 31295              		.loc 1 14767 16 view .LVU8808
 31296 007a 6FF07E05 		mvn	r5, #126
 31297 007e F3E7     		b	.L2175
 31298              	.LVL3899:
 31299              	.L2179:
14796:Core/Src/bno055.c ****         }
 31300              		.loc 1 14796 22 view .LVU8809
 31301 0080 4FF0FF35 		mov	r5, #-1
 31302 0084 F0E7     		b	.L2175
 31303              	.L2183:
 31304 0086 00BF     		.align	2
 31305              	.L2182:
 31306 0088 00000000 		.word	.LANCHOR0
 31307              		.cfi_endproc
 31308              	.LFE218:
 31310              		.section	.text.bno055_get_intr_accel_high_g,"ax",%progbits
 31311              		.align	1
 31312              		.global	bno055_get_intr_accel_high_g
 31313              		.syntax unified
 31314              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 876


 31315              		.thumb_func
 31317              	bno055_get_intr_accel_high_g:
 31318              	.LVL3900:
 31319              	.LFB219:
14802:Core/Src/bno055.c **** 
14803:Core/Src/bno055.c **** /*!
14804:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg interrupt
14805:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14806:Core/Src/bno055.c ****  *
14807:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14808:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14809:Core/Src/bno055.c ****  *     --------------------  |------------
14810:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14811:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14812:Core/Src/bno055.c ****  *
14813:Core/Src/bno055.c ****  *  @return results of bus communication function
14814:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14815:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14816:Core/Src/bno055.c ****  *
14817:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14818:Core/Src/bno055.c ****  *  configure the below settings by using
14819:Core/Src/bno055.c ****  *  the following APIs
14820:Core/Src/bno055.c ****  *
14821:Core/Src/bno055.c ****  *  Axis :
14822:Core/Src/bno055.c ****  *
14823:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14824:Core/Src/bno055.c ****  *
14825:Core/Src/bno055.c ****  *  Threshold :
14826:Core/Src/bno055.c ****  *
14827:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14828:Core/Src/bno055.c ****  *
14829:Core/Src/bno055.c ****  *  Duration :
14830:Core/Src/bno055.c ****  *
14831:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
14832:Core/Src/bno055.c ****  *
14833:Core/Src/bno055.c ****  */
14834:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_high_g(u8 *accel_high_g_u8)
14835:Core/Src/bno055.c **** {
 31320              		.loc 1 14835 1 is_stmt 1 view -0
 31321              		.cfi_startproc
 31322              		@ args = 0, pretend = 0, frame = 8
 31323              		@ frame_needed = 0, uses_anonymous_args = 0
 31324              		.loc 1 14835 1 is_stmt 0 view .LVU8811
 31325 0000 30B5     		push	{r4, r5, lr}
 31326              	.LCFI869:
 31327              		.cfi_def_cfa_offset 12
 31328              		.cfi_offset 4, -12
 31329              		.cfi_offset 5, -8
 31330              		.cfi_offset 14, -4
 31331 0002 83B0     		sub	sp, sp, #12
 31332              	.LCFI870:
 31333              		.cfi_def_cfa_offset 24
14836:Core/Src/bno055.c ****     /* Variable used to return value of
14837:Core/Src/bno055.c ****      * communication routine*/
14838:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31334              		.loc 1 14838 5 is_stmt 1 view .LVU8812
 31335              	.LVL3901:
ARM GAS  /tmp/ccO72alg.s 			page 877


14839:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31336              		.loc 1 14839 5 view .LVU8813
 31337              		.loc 1 14839 8 is_stmt 0 view .LVU8814
 31338 0004 0023     		movs	r3, #0
 31339 0006 8DF80730 		strb	r3, [sp, #7]
14840:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31340              		.loc 1 14840 5 is_stmt 1 view .LVU8815
 31341              	.LVL3902:
14841:Core/Src/bno055.c **** 
14842:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14843:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31342              		.loc 1 14843 5 view .LVU8816
 31343              		.loc 1 14843 18 is_stmt 0 view .LVU8817
 31344 000a 144B     		ldr	r3, .L2192
 31345 000c 1B68     		ldr	r3, [r3]
 31346              		.loc 1 14843 8 view .LVU8818
 31347 000e F3B1     		cbz	r3, .L2188
 31348 0010 0446     		mov	r4, r0
14844:Core/Src/bno055.c ****     {
14845:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14846:Core/Src/bno055.c ****     }
14847:Core/Src/bno055.c ****     else
14848:Core/Src/bno055.c ****     {
14849:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt  is
14850:Core/Src/bno055.c ****          * available in the page one*/
14851:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31349              		.loc 1 14851 9 is_stmt 1 view .LVU8819
 31350              		.loc 1 14851 21 is_stmt 0 view .LVU8820
 31351 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31352              		.loc 1 14851 12 view .LVU8821
 31353 0014 012B     		cmp	r3, #1
 31354 0016 14D1     		bne	.L2191
 31355              	.LVL3903:
 31356              	.L2186:
14852:Core/Src/bno055.c ****         {
14853:Core/Src/bno055.c ****             /* Write page as one */
14854:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14855:Core/Src/bno055.c ****         }
14856:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31357              		.loc 1 14856 53 discriminator 1 view .LVU8822
 31358 0018 104B     		ldr	r3, .L2192
 31359 001a 1B68     		ldr	r3, [r3]
 31360 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31361              		.loc 1 14856 41 discriminator 1 view .LVU8823
 31362 001e 012B     		cmp	r3, #1
 31363 0020 18D1     		bne	.L2189
 31364              	.L2187:
14857:Core/Src/bno055.c ****         {
14858:Core/Src/bno055.c ****             /* Read the value of accel highg interrupt*/
14859:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31365              		.loc 1 14859 13 is_stmt 1 view .LVU8824
 31366              		.loc 1 14859 32 is_stmt 0 view .LVU8825
 31367 0022 0E4B     		ldr	r3, .L2192
 31368 0024 1868     		ldr	r0, [r3]
 31369 0026 0569     		ldr	r5, [r0, #16]
 31370              		.loc 1 14859 24 view .LVU8826
 31371 0028 0123     		movs	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 878


 31372 002a 0DF10702 		add	r2, sp, #7
 31373 002e 1021     		movs	r1, #16
 31374 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31375 0032 A847     		blx	r5
 31376              	.LVL3904:
14860:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14861:Core/Src/bno055.c ****                                                       &data_u8r,
14862:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14863:Core/Src/bno055.c ****             *accel_high_g_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR);
 31377              		.loc 1 14863 13 is_stmt 1 view .LVU8827
 31378              		.loc 1 14863 32 is_stmt 0 view .LVU8828
 31379 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31380 0038 C3F34013 		ubfx	r3, r3, #5, #1
 31381              		.loc 1 14863 30 view .LVU8829
 31382 003c 2370     		strb	r3, [r4]
 31383              	.LVL3905:
 31384              	.L2185:
14864:Core/Src/bno055.c ****         }
14865:Core/Src/bno055.c ****         else
14866:Core/Src/bno055.c ****         {
14867:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14868:Core/Src/bno055.c ****         }
14869:Core/Src/bno055.c ****     }
14870:Core/Src/bno055.c **** 
14871:Core/Src/bno055.c ****     return com_rslt;
14872:Core/Src/bno055.c **** }
 31385              		.loc 1 14872 1 view .LVU8830
 31386 003e 03B0     		add	sp, sp, #12
 31387              	.LCFI871:
 31388              		.cfi_remember_state
 31389              		.cfi_def_cfa_offset 12
 31390              		@ sp needed
 31391 0040 30BD     		pop	{r4, r5, pc}
 31392              	.LVL3906:
 31393              	.L2191:
 31394              	.LCFI872:
 31395              		.cfi_restore_state
14854:Core/Src/bno055.c ****         }
 31396              		.loc 1 14854 13 is_stmt 1 view .LVU8831
14854:Core/Src/bno055.c ****         }
 31397              		.loc 1 14854 23 is_stmt 0 view .LVU8832
 31398 0042 0120     		movs	r0, #1
 31399              	.LVL3907:
14854:Core/Src/bno055.c ****         }
 31400              		.loc 1 14854 23 view .LVU8833
 31401 0044 FFF7FEFF 		bl	bno055_write_page_id
 31402              	.LVL3908:
14856:Core/Src/bno055.c ****         {
 31403              		.loc 1 14856 9 is_stmt 1 view .LVU8834
14856:Core/Src/bno055.c ****         {
 31404              		.loc 1 14856 12 is_stmt 0 view .LVU8835
 31405 0048 0028     		cmp	r0, #0
 31406 004a EAD0     		beq	.L2187
 31407 004c E4E7     		b	.L2186
 31408              	.LVL3909:
 31409              	.L2188:
14845:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 879


 31410              		.loc 1 14845 16 view .LVU8836
 31411 004e 6FF07E00 		mvn	r0, #126
 31412              	.LVL3910:
14845:Core/Src/bno055.c ****     }
 31413              		.loc 1 14845 16 view .LVU8837
 31414 0052 F4E7     		b	.L2185
 31415              	.LVL3911:
 31416              	.L2189:
14867:Core/Src/bno055.c ****         }
 31417              		.loc 1 14867 22 view .LVU8838
 31418 0054 4FF0FF30 		mov	r0, #-1
 31419 0058 F1E7     		b	.L2185
 31420              	.L2193:
 31421 005a 00BF     		.align	2
 31422              	.L2192:
 31423 005c 00000000 		.word	.LANCHOR0
 31424              		.cfi_endproc
 31425              	.LFE219:
 31427              		.section	.text.bno055_set_intr_accel_high_g,"ax",%progbits
 31428              		.align	1
 31429              		.global	bno055_set_intr_accel_high_g
 31430              		.syntax unified
 31431              		.thumb
 31432              		.thumb_func
 31434              	bno055_set_intr_accel_high_g:
 31435              	.LVL3912:
 31436              	.LFB220:
14873:Core/Src/bno055.c **** 
14874:Core/Src/bno055.c **** /*!
14875:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg interrupt
14876:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 5
14877:Core/Src/bno055.c ****  *
14878:Core/Src/bno055.c ****  *  @param accel_high_g_u8 : The value of accel highg interrupt
14879:Core/Src/bno055.c ****  *      accel_high_g_u8    | result
14880:Core/Src/bno055.c ****  *     --------------------  |------------
14881:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14882:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14883:Core/Src/bno055.c ****  *
14884:Core/Src/bno055.c ****  *  @return results of bus communication function
14885:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14886:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14887:Core/Src/bno055.c ****  *
14888:Core/Src/bno055.c ****  *  @note While enabling the accel highg interrupt
14889:Core/Src/bno055.c ****  *  configure the below settings by using
14890:Core/Src/bno055.c ****  *  the following APIs
14891:Core/Src/bno055.c ****  *
14892:Core/Src/bno055.c ****  *  Axis :
14893:Core/Src/bno055.c ****  *
14894:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_axis_enable()
14895:Core/Src/bno055.c ****  *
14896:Core/Src/bno055.c ****  *  Threshold :
14897:Core/Src/bno055.c ****  *
14898:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_thres()
14899:Core/Src/bno055.c ****  *
14900:Core/Src/bno055.c ****  *  Duration :
14901:Core/Src/bno055.c ****  *
14902:Core/Src/bno055.c ****  *  bno055_set_accel_high_g_durn()
ARM GAS  /tmp/ccO72alg.s 			page 880


14903:Core/Src/bno055.c ****  *
14904:Core/Src/bno055.c ****  */
14905:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_high_g(u8 accel_high_g_u8)
14906:Core/Src/bno055.c **** {
 31437              		.loc 1 14906 1 is_stmt 1 view -0
 31438              		.cfi_startproc
 31439              		@ args = 0, pretend = 0, frame = 8
 31440              		@ frame_needed = 0, uses_anonymous_args = 0
 31441              		.loc 1 14906 1 is_stmt 0 view .LVU8840
 31442 0000 30B5     		push	{r4, r5, lr}
 31443              	.LCFI873:
 31444              		.cfi_def_cfa_offset 12
 31445              		.cfi_offset 4, -12
 31446              		.cfi_offset 5, -8
 31447              		.cfi_offset 14, -4
 31448 0002 83B0     		sub	sp, sp, #12
 31449              	.LCFI874:
 31450              		.cfi_def_cfa_offset 24
14907:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31451              		.loc 1 14907 5 is_stmt 1 view .LVU8841
 31452              	.LVL3913:
14908:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31453              		.loc 1 14908 5 view .LVU8842
 31454              		.loc 1 14908 8 is_stmt 0 view .LVU8843
 31455 0004 0023     		movs	r3, #0
 31456 0006 8DF80730 		strb	r3, [sp, #7]
14909:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31457              		.loc 1 14909 5 is_stmt 1 view .LVU8844
 31458              	.LVL3914:
14910:Core/Src/bno055.c **** 
14911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31459              		.loc 1 14912 5 view .LVU8845
 31460              		.loc 1 14912 18 is_stmt 0 view .LVU8846
 31461 000a 1F4B     		ldr	r3, .L2202
 31462 000c 1B68     		ldr	r3, [r3]
 31463              		.loc 1 14912 8 view .LVU8847
 31464 000e 002B     		cmp	r3, #0
 31465 0010 33D0     		beq	.L2198
 31466 0012 0446     		mov	r4, r0
14913:Core/Src/bno055.c ****     {
14914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14915:Core/Src/bno055.c ****     }
14916:Core/Src/bno055.c ****     else
14917:Core/Src/bno055.c ****     {
14918:Core/Src/bno055.c ****         /*condition check for page, accel highg interrupt is
14919:Core/Src/bno055.c ****          * available in the page one*/
14920:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31467              		.loc 1 14920 9 is_stmt 1 view .LVU8848
 31468              		.loc 1 14920 21 is_stmt 0 view .LVU8849
 31469 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31470              		.loc 1 14920 12 view .LVU8850
 31471 0016 012B     		cmp	r3, #1
 31472 0018 29D1     		bne	.L2201
 31473              	.LVL3915:
 31474              	.L2196:
14921:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 881


14922:Core/Src/bno055.c ****             /* Write page as one */
14923:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
14924:Core/Src/bno055.c ****         }
14925:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31475              		.loc 1 14925 53 discriminator 1 view .LVU8851
 31476 001a 1B4B     		ldr	r3, .L2202
 31477 001c 1B68     		ldr	r3, [r3]
 31478 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31479              		.loc 1 14925 41 discriminator 1 view .LVU8852
 31480 0020 012B     		cmp	r3, #1
 31481 0022 2DD1     		bne	.L2199
 31482              	.L2197:
14926:Core/Src/bno055.c ****         {
14927:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31483              		.loc 1 14927 13 is_stmt 1 view .LVU8853
 31484              		.loc 1 14927 32 is_stmt 0 view .LVU8854
 31485 0024 184B     		ldr	r3, .L2202
 31486 0026 1868     		ldr	r0, [r3]
 31487 0028 0569     		ldr	r5, [r0, #16]
 31488              		.loc 1 14927 24 view .LVU8855
 31489 002a 0123     		movs	r3, #1
 31490 002c 0DF10702 		add	r2, sp, #7
 31491 0030 1021     		movs	r1, #16
 31492 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31493 0034 A847     		blx	r5
 31494              	.LVL3916:
14928:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_INTR_REG,
14929:Core/Src/bno055.c ****                                                       &data_u8r,
14930:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
14931:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31495              		.loc 1 14931 13 is_stmt 1 view .LVU8856
 31496              		.loc 1 14931 16 is_stmt 0 view .LVU8857
 31497 0036 0546     		mov	r5, r0
 31498 0038 B0B9     		cbnz	r0, .L2195
14932:Core/Src/bno055.c ****             {
14933:Core/Src/bno055.c ****                 /* Write the value of accel highg interrupt*/
14934:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_INTR, accel_high_g_u8)
 31499              		.loc 1 14934 17 is_stmt 1 view .LVU8858
 31500              		.loc 1 14934 28 is_stmt 0 view .LVU8859
 31501 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31502 003e 23F02003 		bic	r3, r3, #32
 31503 0042 5BB2     		sxtb	r3, r3
 31504 0044 6401     		lsls	r4, r4, #5
 31505 0046 04F02004 		and	r4, r4, #32
 31506 004a 1C43     		orrs	r4, r4, r3
 31507              		.loc 1 14934 26 view .LVU8860
 31508 004c 8DF80740 		strb	r4, [sp, #7]
14935:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31509              		.loc 1 14935 17 is_stmt 1 view .LVU8861
 31510              		.loc 1 14935 37 is_stmt 0 view .LVU8862
 31511 0050 0D4B     		ldr	r3, .L2202
 31512 0052 1868     		ldr	r0, [r3]
 31513              	.LVL3917:
 31514              		.loc 1 14935 37 view .LVU8863
 31515 0054 C468     		ldr	r4, [r0, #12]
 31516              		.loc 1 14935 29 view .LVU8864
 31517 0056 0123     		movs	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 882


 31518 0058 0DF10702 		add	r2, sp, #7
 31519 005c 1021     		movs	r1, #16
 31520 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31521 0060 A047     		blx	r4
 31522              	.LVL3918:
 31523              		.loc 1 14935 26 view .LVU8865
 31524 0062 55FA80F5 		uxtab	r5, r5, r0
 31525 0066 6DB2     		sxtb	r5, r5
 31526              	.LVL3919:
 31527              	.L2195:
14936:Core/Src/bno055.c ****                                                             BNO055_ACCEL_HIGH_G_INTR_REG,
14937:Core/Src/bno055.c ****                                                             &data_u8r,
14938:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
14939:Core/Src/bno055.c ****             }
14940:Core/Src/bno055.c ****         }
14941:Core/Src/bno055.c ****         else
14942:Core/Src/bno055.c ****         {
14943:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
14944:Core/Src/bno055.c ****         }
14945:Core/Src/bno055.c ****     }
14946:Core/Src/bno055.c **** 
14947:Core/Src/bno055.c ****     return com_rslt;
14948:Core/Src/bno055.c **** }
 31528              		.loc 1 14948 1 view .LVU8866
 31529 0068 2846     		mov	r0, r5
 31530 006a 03B0     		add	sp, sp, #12
 31531              	.LCFI875:
 31532              		.cfi_remember_state
 31533              		.cfi_def_cfa_offset 12
 31534              		@ sp needed
 31535 006c 30BD     		pop	{r4, r5, pc}
 31536              	.LVL3920:
 31537              	.L2201:
 31538              	.LCFI876:
 31539              		.cfi_restore_state
14923:Core/Src/bno055.c ****         }
 31540              		.loc 1 14923 13 is_stmt 1 view .LVU8867
14923:Core/Src/bno055.c ****         }
 31541              		.loc 1 14923 23 is_stmt 0 view .LVU8868
 31542 006e 0120     		movs	r0, #1
 31543              	.LVL3921:
14923:Core/Src/bno055.c ****         }
 31544              		.loc 1 14923 23 view .LVU8869
 31545 0070 FFF7FEFF 		bl	bno055_write_page_id
 31546              	.LVL3922:
14925:Core/Src/bno055.c ****         {
 31547              		.loc 1 14925 9 is_stmt 1 view .LVU8870
14925:Core/Src/bno055.c ****         {
 31548              		.loc 1 14925 12 is_stmt 0 view .LVU8871
 31549 0074 0028     		cmp	r0, #0
 31550 0076 D5D0     		beq	.L2197
 31551 0078 CFE7     		b	.L2196
 31552              	.LVL3923:
 31553              	.L2198:
14914:Core/Src/bno055.c ****     }
 31554              		.loc 1 14914 16 view .LVU8872
 31555 007a 6FF07E05 		mvn	r5, #126
ARM GAS  /tmp/ccO72alg.s 			page 883


 31556 007e F3E7     		b	.L2195
 31557              	.LVL3924:
 31558              	.L2199:
14943:Core/Src/bno055.c ****         }
 31559              		.loc 1 14943 22 view .LVU8873
 31560 0080 4FF0FF35 		mov	r5, #-1
 31561 0084 F0E7     		b	.L2195
 31562              	.L2203:
 31563 0086 00BF     		.align	2
 31564              	.L2202:
 31565 0088 00000000 		.word	.LANCHOR0
 31566              		.cfi_endproc
 31567              	.LFE220:
 31569              		.section	.text.bno055_get_intr_accel_any_motion,"ax",%progbits
 31570              		.align	1
 31571              		.global	bno055_get_intr_accel_any_motion
 31572              		.syntax unified
 31573              		.thumb
 31574              		.thumb_func
 31576              	bno055_get_intr_accel_any_motion:
 31577              	.LVL3925:
 31578              	.LFB221:
14949:Core/Src/bno055.c **** 
14950:Core/Src/bno055.c **** /*!
14951:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion interrupt
14952:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
14953:Core/Src/bno055.c ****  *
14954:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
14955:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
14956:Core/Src/bno055.c ****  *     --------------------  |------------
14957:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
14958:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
14959:Core/Src/bno055.c ****  *
14960:Core/Src/bno055.c ****  *  @return results of bus communication function
14961:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
14962:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
14963:Core/Src/bno055.c ****  *
14964:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
14965:Core/Src/bno055.c ****  *  configure the following settings
14966:Core/Src/bno055.c ****  *
14967:Core/Src/bno055.c ****  *  Axis:
14968:Core/Src/bno055.c ****  *
14969:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
14970:Core/Src/bno055.c ****  *
14971:Core/Src/bno055.c ****  *  Duration:
14972:Core/Src/bno055.c ****  *
14973:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
14974:Core/Src/bno055.c ****  *
14975:Core/Src/bno055.c ****  * Threshold:
14976:Core/Src/bno055.c ****  *
14977:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
14978:Core/Src/bno055.c ****  *
14979:Core/Src/bno055.c ****  */
14980:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_any_motion(u8 *accel_any_motion_u8)
14981:Core/Src/bno055.c **** {
 31579              		.loc 1 14981 1 is_stmt 1 view -0
 31580              		.cfi_startproc
ARM GAS  /tmp/ccO72alg.s 			page 884


 31581              		@ args = 0, pretend = 0, frame = 8
 31582              		@ frame_needed = 0, uses_anonymous_args = 0
 31583              		.loc 1 14981 1 is_stmt 0 view .LVU8875
 31584 0000 30B5     		push	{r4, r5, lr}
 31585              	.LCFI877:
 31586              		.cfi_def_cfa_offset 12
 31587              		.cfi_offset 4, -12
 31588              		.cfi_offset 5, -8
 31589              		.cfi_offset 14, -4
 31590 0002 83B0     		sub	sp, sp, #12
 31591              	.LCFI878:
 31592              		.cfi_def_cfa_offset 24
14982:Core/Src/bno055.c ****     /* Variable used to return value of
14983:Core/Src/bno055.c ****      * communication routine*/
14984:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31593              		.loc 1 14984 5 is_stmt 1 view .LVU8876
 31594              	.LVL3926:
14985:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31595              		.loc 1 14985 5 view .LVU8877
 31596              		.loc 1 14985 8 is_stmt 0 view .LVU8878
 31597 0004 0023     		movs	r3, #0
 31598 0006 8DF80730 		strb	r3, [sp, #7]
14986:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31599              		.loc 1 14986 5 is_stmt 1 view .LVU8879
 31600              	.LVL3927:
14987:Core/Src/bno055.c **** 
14988:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
14989:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31601              		.loc 1 14989 5 view .LVU8880
 31602              		.loc 1 14989 18 is_stmt 0 view .LVU8881
 31603 000a 144B     		ldr	r3, .L2212
 31604 000c 1B68     		ldr	r3, [r3]
 31605              		.loc 1 14989 8 view .LVU8882
 31606 000e F3B1     		cbz	r3, .L2208
 31607 0010 0446     		mov	r4, r0
14990:Core/Src/bno055.c ****     {
14991:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
14992:Core/Src/bno055.c ****     }
14993:Core/Src/bno055.c ****     else
14994:Core/Src/bno055.c ****     {
14995:Core/Src/bno055.c ****         /*condition check for page, accel anymotion interrupt  is
14996:Core/Src/bno055.c ****          * available in the page one*/
14997:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31608              		.loc 1 14997 9 is_stmt 1 view .LVU8883
 31609              		.loc 1 14997 21 is_stmt 0 view .LVU8884
 31610 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31611              		.loc 1 14997 12 view .LVU8885
 31612 0014 012B     		cmp	r3, #1
 31613 0016 14D1     		bne	.L2211
 31614              	.LVL3928:
 31615              	.L2206:
14998:Core/Src/bno055.c ****         {
14999:Core/Src/bno055.c ****             /* Write page as one */
15000:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15001:Core/Src/bno055.c ****         }
15002:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31616              		.loc 1 15002 53 discriminator 1 view .LVU8886
ARM GAS  /tmp/ccO72alg.s 			page 885


 31617 0018 104B     		ldr	r3, .L2212
 31618 001a 1B68     		ldr	r3, [r3]
 31619 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31620              		.loc 1 15002 41 discriminator 1 view .LVU8887
 31621 001e 012B     		cmp	r3, #1
 31622 0020 18D1     		bne	.L2209
 31623              	.L2207:
15003:Core/Src/bno055.c ****         {
15004:Core/Src/bno055.c ****             /* Read the value of accel anymotion interrupt */
15005:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31624              		.loc 1 15005 13 is_stmt 1 view .LVU8888
 31625              		.loc 1 15005 32 is_stmt 0 view .LVU8889
 31626 0022 0E4B     		ldr	r3, .L2212
 31627 0024 1868     		ldr	r0, [r3]
 31628 0026 0569     		ldr	r5, [r0, #16]
 31629              		.loc 1 15005 24 view .LVU8890
 31630 0028 0123     		movs	r3, #1
 31631 002a 0DF10702 		add	r2, sp, #7
 31632 002e 1021     		movs	r1, #16
 31633 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31634 0032 A847     		blx	r5
 31635              	.LVL3929:
15006:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15007:Core/Src/bno055.c ****                                                       &data_u8r,
15008:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15009:Core/Src/bno055.c ****             *accel_any_motion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR);
 31636              		.loc 1 15009 13 is_stmt 1 view .LVU8891
 31637              		.loc 1 15009 36 is_stmt 0 view .LVU8892
 31638 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31639 0038 C3F38013 		ubfx	r3, r3, #6, #1
 31640              		.loc 1 15009 34 view .LVU8893
 31641 003c 2370     		strb	r3, [r4]
 31642              	.LVL3930:
 31643              	.L2205:
15010:Core/Src/bno055.c ****         }
15011:Core/Src/bno055.c ****         else
15012:Core/Src/bno055.c ****         {
15013:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15014:Core/Src/bno055.c ****         }
15015:Core/Src/bno055.c ****     }
15016:Core/Src/bno055.c **** 
15017:Core/Src/bno055.c ****     return com_rslt;
15018:Core/Src/bno055.c **** }
 31644              		.loc 1 15018 1 view .LVU8894
 31645 003e 03B0     		add	sp, sp, #12
 31646              	.LCFI879:
 31647              		.cfi_remember_state
 31648              		.cfi_def_cfa_offset 12
 31649              		@ sp needed
 31650 0040 30BD     		pop	{r4, r5, pc}
 31651              	.LVL3931:
 31652              	.L2211:
 31653              	.LCFI880:
 31654              		.cfi_restore_state
15000:Core/Src/bno055.c ****         }
 31655              		.loc 1 15000 13 is_stmt 1 view .LVU8895
15000:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 886


 31656              		.loc 1 15000 23 is_stmt 0 view .LVU8896
 31657 0042 0120     		movs	r0, #1
 31658              	.LVL3932:
15000:Core/Src/bno055.c ****         }
 31659              		.loc 1 15000 23 view .LVU8897
 31660 0044 FFF7FEFF 		bl	bno055_write_page_id
 31661              	.LVL3933:
15002:Core/Src/bno055.c ****         {
 31662              		.loc 1 15002 9 is_stmt 1 view .LVU8898
15002:Core/Src/bno055.c ****         {
 31663              		.loc 1 15002 12 is_stmt 0 view .LVU8899
 31664 0048 0028     		cmp	r0, #0
 31665 004a EAD0     		beq	.L2207
 31666 004c E4E7     		b	.L2206
 31667              	.LVL3934:
 31668              	.L2208:
14991:Core/Src/bno055.c ****     }
 31669              		.loc 1 14991 16 view .LVU8900
 31670 004e 6FF07E00 		mvn	r0, #126
 31671              	.LVL3935:
14991:Core/Src/bno055.c ****     }
 31672              		.loc 1 14991 16 view .LVU8901
 31673 0052 F4E7     		b	.L2205
 31674              	.LVL3936:
 31675              	.L2209:
15013:Core/Src/bno055.c ****         }
 31676              		.loc 1 15013 22 view .LVU8902
 31677 0054 4FF0FF30 		mov	r0, #-1
 31678 0058 F1E7     		b	.L2205
 31679              	.L2213:
 31680 005a 00BF     		.align	2
 31681              	.L2212:
 31682 005c 00000000 		.word	.LANCHOR0
 31683              		.cfi_endproc
 31684              	.LFE221:
 31686              		.section	.text.bno055_set_intr_accel_any_motion,"ax",%progbits
 31687              		.align	1
 31688              		.global	bno055_set_intr_accel_any_motion
 31689              		.syntax unified
 31690              		.thumb
 31691              		.thumb_func
 31693              	bno055_set_intr_accel_any_motion:
 31694              	.LVL3937:
 31695              	.LFB222:
15019:Core/Src/bno055.c **** 
15020:Core/Src/bno055.c **** /*!
15021:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion interrupt
15022:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15023:Core/Src/bno055.c ****  *
15024:Core/Src/bno055.c ****  *  @param accel_any_motion_u8 : The value of accel anymotion interrupt
15025:Core/Src/bno055.c ****  *  accel_any_motion_u8    | result
15026:Core/Src/bno055.c ****  *     --------------------  |------------
15027:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15028:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15029:Core/Src/bno055.c ****  *
15030:Core/Src/bno055.c ****  *  @return results of bus communication function
15031:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccO72alg.s 			page 887


15032:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15033:Core/Src/bno055.c ****  *
15034:Core/Src/bno055.c ****  *  @note While enabling the accel anymotion interrupt
15035:Core/Src/bno055.c ****  *  configure the following settings
15036:Core/Src/bno055.c ****  *
15037:Core/Src/bno055.c ****  *  Axis:
15038:Core/Src/bno055.c ****  *
15039:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15040:Core/Src/bno055.c ****  *
15041:Core/Src/bno055.c ****  *  Duration:
15042:Core/Src/bno055.c ****  *
15043:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_durn()
15044:Core/Src/bno055.c ****  *
15045:Core/Src/bno055.c ****  *  Threshold:
15046:Core/Src/bno055.c ****  *
15047:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_thres()
15048:Core/Src/bno055.c ****  *
15049:Core/Src/bno055.c ****  */
15050:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_any_motion(u8 accel_any_motion_u8)
15051:Core/Src/bno055.c **** {
 31696              		.loc 1 15051 1 is_stmt 1 view -0
 31697              		.cfi_startproc
 31698              		@ args = 0, pretend = 0, frame = 8
 31699              		@ frame_needed = 0, uses_anonymous_args = 0
 31700              		.loc 1 15051 1 is_stmt 0 view .LVU8904
 31701 0000 30B5     		push	{r4, r5, lr}
 31702              	.LCFI881:
 31703              		.cfi_def_cfa_offset 12
 31704              		.cfi_offset 4, -12
 31705              		.cfi_offset 5, -8
 31706              		.cfi_offset 14, -4
 31707 0002 83B0     		sub	sp, sp, #12
 31708              	.LCFI882:
 31709              		.cfi_def_cfa_offset 24
15052:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31710              		.loc 1 15052 5 is_stmt 1 view .LVU8905
 31711              	.LVL3938:
15053:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31712              		.loc 1 15053 5 view .LVU8906
 31713              		.loc 1 15053 8 is_stmt 0 view .LVU8907
 31714 0004 0023     		movs	r3, #0
 31715 0006 8DF80730 		strb	r3, [sp, #7]
15054:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31716              		.loc 1 15054 5 is_stmt 1 view .LVU8908
 31717              	.LVL3939:
15055:Core/Src/bno055.c **** 
15056:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15057:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31718              		.loc 1 15057 5 view .LVU8909
 31719              		.loc 1 15057 18 is_stmt 0 view .LVU8910
 31720 000a 1F4B     		ldr	r3, .L2222
 31721 000c 1B68     		ldr	r3, [r3]
 31722              		.loc 1 15057 8 view .LVU8911
 31723 000e 002B     		cmp	r3, #0
 31724 0010 33D0     		beq	.L2218
 31725 0012 0446     		mov	r4, r0
15058:Core/Src/bno055.c ****     {
ARM GAS  /tmp/ccO72alg.s 			page 888


15059:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15060:Core/Src/bno055.c ****     }
15061:Core/Src/bno055.c ****     else
15062:Core/Src/bno055.c ****     {
15063:Core/Src/bno055.c ****         /*condition check for page, accel range is
15064:Core/Src/bno055.c ****          * available in the page one*/
15065:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31726              		.loc 1 15065 9 is_stmt 1 view .LVU8912
 31727              		.loc 1 15065 21 is_stmt 0 view .LVU8913
 31728 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31729              		.loc 1 15065 12 view .LVU8914
 31730 0016 012B     		cmp	r3, #1
 31731 0018 29D1     		bne	.L2221
 31732              	.LVL3940:
 31733              	.L2216:
15066:Core/Src/bno055.c ****         {
15067:Core/Src/bno055.c ****             /* Write page as one */
15068:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15069:Core/Src/bno055.c ****         }
15070:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31734              		.loc 1 15070 53 discriminator 1 view .LVU8915
 31735 001a 1B4B     		ldr	r3, .L2222
 31736 001c 1B68     		ldr	r3, [r3]
 31737 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31738              		.loc 1 15070 41 discriminator 1 view .LVU8916
 31739 0020 012B     		cmp	r3, #1
 31740 0022 2DD1     		bne	.L2219
 31741              	.L2217:
15071:Core/Src/bno055.c ****         {
15072:Core/Src/bno055.c ****             /* Write the value of accel anymotion interrupt */
15073:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31742              		.loc 1 15073 13 is_stmt 1 view .LVU8917
 31743              		.loc 1 15073 32 is_stmt 0 view .LVU8918
 31744 0024 184B     		ldr	r3, .L2222
 31745 0026 1868     		ldr	r0, [r3]
 31746 0028 0569     		ldr	r5, [r0, #16]
 31747              		.loc 1 15073 24 view .LVU8919
 31748 002a 0123     		movs	r3, #1
 31749 002c 0DF10702 		add	r2, sp, #7
 31750 0030 1021     		movs	r1, #16
 31751 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31752 0034 A847     		blx	r5
 31753              	.LVL3941:
15074:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_INTR_REG,
15075:Core/Src/bno055.c ****                                                       &data_u8r,
15076:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15077:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 31754              		.loc 1 15077 13 is_stmt 1 view .LVU8920
 31755              		.loc 1 15077 16 is_stmt 0 view .LVU8921
 31756 0036 0546     		mov	r5, r0
 31757 0038 B0B9     		cbnz	r0, .L2215
15078:Core/Src/bno055.c ****             {
15079:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_INTR, accel_any_mo
 31758              		.loc 1 15079 17 is_stmt 1 view .LVU8922
 31759              		.loc 1 15079 28 is_stmt 0 view .LVU8923
 31760 003a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31761 003e 23F04003 		bic	r3, r3, #64
ARM GAS  /tmp/ccO72alg.s 			page 889


 31762 0042 5BB2     		sxtb	r3, r3
 31763 0044 A401     		lsls	r4, r4, #6
 31764 0046 04F04004 		and	r4, r4, #64
 31765 004a 1C43     		orrs	r4, r4, r3
 31766              		.loc 1 15079 26 view .LVU8924
 31767 004c 8DF80740 		strb	r4, [sp, #7]
15080:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 31768              		.loc 1 15080 17 is_stmt 1 view .LVU8925
 31769              		.loc 1 15080 37 is_stmt 0 view .LVU8926
 31770 0050 0D4B     		ldr	r3, .L2222
 31771 0052 1868     		ldr	r0, [r3]
 31772              	.LVL3942:
 31773              		.loc 1 15080 37 view .LVU8927
 31774 0054 C468     		ldr	r4, [r0, #12]
 31775              		.loc 1 15080 29 view .LVU8928
 31776 0056 0123     		movs	r3, #1
 31777 0058 0DF10702 		add	r2, sp, #7
 31778 005c 1021     		movs	r1, #16
 31779 005e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31780 0060 A047     		blx	r4
 31781              	.LVL3943:
 31782              		.loc 1 15080 26 view .LVU8929
 31783 0062 55FA80F5 		uxtab	r5, r5, r0
 31784 0066 6DB2     		sxtb	r5, r5
 31785              	.LVL3944:
 31786              	.L2215:
15081:Core/Src/bno055.c ****                                                             BNO055_ACCEL_ANY_MOTION_INTR_REG,
15082:Core/Src/bno055.c ****                                                             &data_u8r,
15083:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15084:Core/Src/bno055.c ****             }
15085:Core/Src/bno055.c ****         }
15086:Core/Src/bno055.c ****         else
15087:Core/Src/bno055.c ****         {
15088:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15089:Core/Src/bno055.c ****         }
15090:Core/Src/bno055.c ****     }
15091:Core/Src/bno055.c **** 
15092:Core/Src/bno055.c ****     return com_rslt;
15093:Core/Src/bno055.c **** }
 31787              		.loc 1 15093 1 view .LVU8930
 31788 0068 2846     		mov	r0, r5
 31789 006a 03B0     		add	sp, sp, #12
 31790              	.LCFI883:
 31791              		.cfi_remember_state
 31792              		.cfi_def_cfa_offset 12
 31793              		@ sp needed
 31794 006c 30BD     		pop	{r4, r5, pc}
 31795              	.LVL3945:
 31796              	.L2221:
 31797              	.LCFI884:
 31798              		.cfi_restore_state
15068:Core/Src/bno055.c ****         }
 31799              		.loc 1 15068 13 is_stmt 1 view .LVU8931
15068:Core/Src/bno055.c ****         }
 31800              		.loc 1 15068 23 is_stmt 0 view .LVU8932
 31801 006e 0120     		movs	r0, #1
 31802              	.LVL3946:
ARM GAS  /tmp/ccO72alg.s 			page 890


15068:Core/Src/bno055.c ****         }
 31803              		.loc 1 15068 23 view .LVU8933
 31804 0070 FFF7FEFF 		bl	bno055_write_page_id
 31805              	.LVL3947:
15070:Core/Src/bno055.c ****         {
 31806              		.loc 1 15070 9 is_stmt 1 view .LVU8934
15070:Core/Src/bno055.c ****         {
 31807              		.loc 1 15070 12 is_stmt 0 view .LVU8935
 31808 0074 0028     		cmp	r0, #0
 31809 0076 D5D0     		beq	.L2217
 31810 0078 CFE7     		b	.L2216
 31811              	.LVL3948:
 31812              	.L2218:
15059:Core/Src/bno055.c ****     }
 31813              		.loc 1 15059 16 view .LVU8936
 31814 007a 6FF07E05 		mvn	r5, #126
 31815 007e F3E7     		b	.L2215
 31816              	.LVL3949:
 31817              	.L2219:
15088:Core/Src/bno055.c ****         }
 31818              		.loc 1 15088 22 view .LVU8937
 31819 0080 4FF0FF35 		mov	r5, #-1
 31820 0084 F0E7     		b	.L2215
 31821              	.L2223:
 31822 0086 00BF     		.align	2
 31823              	.L2222:
 31824 0088 00000000 		.word	.LANCHOR0
 31825              		.cfi_endproc
 31826              	.LFE222:
 31828              		.section	.text.bno055_get_intr_accel_no_motion,"ax",%progbits
 31829              		.align	1
 31830              		.global	bno055_get_intr_accel_no_motion
 31831              		.syntax unified
 31832              		.thumb
 31833              		.thumb_func
 31835              	bno055_get_intr_accel_no_motion:
 31836              	.LVL3950:
 31837              	.LFB223:
15094:Core/Src/bno055.c **** 
15095:Core/Src/bno055.c **** /*!
15096:Core/Src/bno055.c ****  *  @brief This API used to read the accel nomotion interrupt
15097:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15098:Core/Src/bno055.c ****  *
15099:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15100:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15101:Core/Src/bno055.c ****  *     --------------------  |------------
15102:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15103:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15104:Core/Src/bno055.c ****  *
15105:Core/Src/bno055.c ****  *  @return results of bus communication function
15106:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15107:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15108:Core/Src/bno055.c ****  *
15109:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15110:Core/Src/bno055.c ****  *  configure the following settings
15111:Core/Src/bno055.c ****  *
15112:Core/Src/bno055.c ****  *  Axis:
ARM GAS  /tmp/ccO72alg.s 			page 891


15113:Core/Src/bno055.c ****  *
15114:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15115:Core/Src/bno055.c ****  *
15116:Core/Src/bno055.c ****  *  Threshold :
15117:Core/Src/bno055.c ****  *
15118:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15119:Core/Src/bno055.c ****  *
15120:Core/Src/bno055.c ****  *  Duration :
15121:Core/Src/bno055.c ****  *
15122:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15123:Core/Src/bno055.c ****  *
15124:Core/Src/bno055.c ****  *  Slow/no motion enable:
15125:Core/Src/bno055.c ****  *
15126:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15127:Core/Src/bno055.c ****  *
15128:Core/Src/bno055.c ****  */
15129:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_intr_accel_no_motion(u8 *accel_nomotion_u8)
15130:Core/Src/bno055.c **** {
 31838              		.loc 1 15130 1 is_stmt 1 view -0
 31839              		.cfi_startproc
 31840              		@ args = 0, pretend = 0, frame = 8
 31841              		@ frame_needed = 0, uses_anonymous_args = 0
 31842              		.loc 1 15130 1 is_stmt 0 view .LVU8939
 31843 0000 30B5     		push	{r4, r5, lr}
 31844              	.LCFI885:
 31845              		.cfi_def_cfa_offset 12
 31846              		.cfi_offset 4, -12
 31847              		.cfi_offset 5, -8
 31848              		.cfi_offset 14, -4
 31849 0002 83B0     		sub	sp, sp, #12
 31850              	.LCFI886:
 31851              		.cfi_def_cfa_offset 24
15131:Core/Src/bno055.c ****     /* Variable used to return value of
15132:Core/Src/bno055.c ****      * communication routine*/
15133:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31852              		.loc 1 15133 5 is_stmt 1 view .LVU8940
 31853              	.LVL3951:
15134:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31854              		.loc 1 15134 5 view .LVU8941
 31855              		.loc 1 15134 8 is_stmt 0 view .LVU8942
 31856 0004 0023     		movs	r3, #0
 31857 0006 8DF80730 		strb	r3, [sp, #7]
15135:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31858              		.loc 1 15135 5 is_stmt 1 view .LVU8943
 31859              	.LVL3952:
15136:Core/Src/bno055.c **** 
15137:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15138:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31860              		.loc 1 15138 5 view .LVU8944
 31861              		.loc 1 15138 18 is_stmt 0 view .LVU8945
 31862 000a 134B     		ldr	r3, .L2232
 31863 000c 1B68     		ldr	r3, [r3]
 31864              		.loc 1 15138 8 view .LVU8946
 31865 000e EBB1     		cbz	r3, .L2228
 31866 0010 0446     		mov	r4, r0
15139:Core/Src/bno055.c ****     {
15140:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccO72alg.s 			page 892


15141:Core/Src/bno055.c ****     }
15142:Core/Src/bno055.c ****     else
15143:Core/Src/bno055.c ****     {
15144:Core/Src/bno055.c ****         /*condition check for page, accel nomotion interrupt is
15145:Core/Src/bno055.c ****          * available in the page one*/
15146:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31867              		.loc 1 15146 9 is_stmt 1 view .LVU8947
 31868              		.loc 1 15146 21 is_stmt 0 view .LVU8948
 31869 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31870              		.loc 1 15146 12 view .LVU8949
 31871 0014 012B     		cmp	r3, #1
 31872 0016 13D1     		bne	.L2231
 31873              	.LVL3953:
 31874              	.L2226:
15147:Core/Src/bno055.c ****         {
15148:Core/Src/bno055.c ****             /* Write page as one */
15149:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15150:Core/Src/bno055.c ****         }
15151:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31875              		.loc 1 15151 53 discriminator 1 view .LVU8950
 31876 0018 0F4B     		ldr	r3, .L2232
 31877 001a 1B68     		ldr	r3, [r3]
 31878 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31879              		.loc 1 15151 41 discriminator 1 view .LVU8951
 31880 001e 012B     		cmp	r3, #1
 31881 0020 17D1     		bne	.L2229
 31882              	.L2227:
15152:Core/Src/bno055.c ****         {
15153:Core/Src/bno055.c ****             /* Read the value of accel nomotion interrupt*/
15154:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 31883              		.loc 1 15154 13 is_stmt 1 view .LVU8952
 31884              		.loc 1 15154 32 is_stmt 0 view .LVU8953
 31885 0022 0D4B     		ldr	r3, .L2232
 31886 0024 1868     		ldr	r0, [r3]
 31887 0026 0569     		ldr	r5, [r0, #16]
 31888              		.loc 1 15154 24 view .LVU8954
 31889 0028 0123     		movs	r3, #1
 31890 002a 0DF10702 		add	r2, sp, #7
 31891 002e 1021     		movs	r1, #16
 31892 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 31893 0032 A847     		blx	r5
 31894              	.LVL3954:
15155:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15156:Core/Src/bno055.c ****                                                       &data_u8r,
15157:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15158:Core/Src/bno055.c ****             *accel_nomotion_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR);
 31895              		.loc 1 15158 13 is_stmt 1 view .LVU8955
 31896              		.loc 1 15158 34 is_stmt 0 view .LVU8956
 31897 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 31898 0038 DB09     		lsrs	r3, r3, #7
 31899              		.loc 1 15158 32 view .LVU8957
 31900 003a 2370     		strb	r3, [r4]
 31901              	.LVL3955:
 31902              	.L2225:
15159:Core/Src/bno055.c ****         }
15160:Core/Src/bno055.c ****         else
15161:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 893


15162:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15163:Core/Src/bno055.c ****         }
15164:Core/Src/bno055.c ****     }
15165:Core/Src/bno055.c **** 
15166:Core/Src/bno055.c ****     return com_rslt;
15167:Core/Src/bno055.c **** }
 31903              		.loc 1 15167 1 view .LVU8958
 31904 003c 03B0     		add	sp, sp, #12
 31905              	.LCFI887:
 31906              		.cfi_remember_state
 31907              		.cfi_def_cfa_offset 12
 31908              		@ sp needed
 31909 003e 30BD     		pop	{r4, r5, pc}
 31910              	.LVL3956:
 31911              	.L2231:
 31912              	.LCFI888:
 31913              		.cfi_restore_state
15149:Core/Src/bno055.c ****         }
 31914              		.loc 1 15149 13 is_stmt 1 view .LVU8959
15149:Core/Src/bno055.c ****         }
 31915              		.loc 1 15149 23 is_stmt 0 view .LVU8960
 31916 0040 0120     		movs	r0, #1
 31917              	.LVL3957:
15149:Core/Src/bno055.c ****         }
 31918              		.loc 1 15149 23 view .LVU8961
 31919 0042 FFF7FEFF 		bl	bno055_write_page_id
 31920              	.LVL3958:
15151:Core/Src/bno055.c ****         {
 31921              		.loc 1 15151 9 is_stmt 1 view .LVU8962
15151:Core/Src/bno055.c ****         {
 31922              		.loc 1 15151 12 is_stmt 0 view .LVU8963
 31923 0046 0028     		cmp	r0, #0
 31924 0048 EBD0     		beq	.L2227
 31925 004a E5E7     		b	.L2226
 31926              	.LVL3959:
 31927              	.L2228:
15140:Core/Src/bno055.c ****     }
 31928              		.loc 1 15140 16 view .LVU8964
 31929 004c 6FF07E00 		mvn	r0, #126
 31930              	.LVL3960:
15140:Core/Src/bno055.c ****     }
 31931              		.loc 1 15140 16 view .LVU8965
 31932 0050 F4E7     		b	.L2225
 31933              	.LVL3961:
 31934              	.L2229:
15162:Core/Src/bno055.c ****         }
 31935              		.loc 1 15162 22 view .LVU8966
 31936 0052 4FF0FF30 		mov	r0, #-1
 31937 0056 F1E7     		b	.L2225
 31938              	.L2233:
 31939              		.align	2
 31940              	.L2232:
 31941 0058 00000000 		.word	.LANCHOR0
 31942              		.cfi_endproc
 31943              	.LFE223:
 31945              		.section	.text.bno055_set_intr_accel_no_motion,"ax",%progbits
 31946              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 894


 31947              		.global	bno055_set_intr_accel_no_motion
 31948              		.syntax unified
 31949              		.thumb
 31950              		.thumb_func
 31952              	bno055_set_intr_accel_no_motion:
 31953              	.LVL3962:
 31954              	.LFB224:
15168:Core/Src/bno055.c **** 
15169:Core/Src/bno055.c **** /*!
15170:Core/Src/bno055.c ****  *  @brief This API used to write the accel nomotion interrupt
15171:Core/Src/bno055.c ****  *  from page one register from 0x10 bit 6
15172:Core/Src/bno055.c ****  *
15173:Core/Src/bno055.c ****  *  @param accel_nomotion_u8 : The value of accel nomotion interrupt
15174:Core/Src/bno055.c ****  *    accel_nomotion_u8    | result
15175:Core/Src/bno055.c ****  *     --------------------  |------------
15176:Core/Src/bno055.c ****  *              0x01         | BNO055_BIT_ENABLE
15177:Core/Src/bno055.c ****  *              0x00         | BNO055_BIT_DISABLE
15178:Core/Src/bno055.c ****  *
15179:Core/Src/bno055.c ****  *  @return results of bus communication function
15180:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15181:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15182:Core/Src/bno055.c ****  *
15183:Core/Src/bno055.c ****  *  @note While enabling the accel nomotion interrupt
15184:Core/Src/bno055.c ****  *  configure the following settings
15185:Core/Src/bno055.c ****  *
15186:Core/Src/bno055.c ****  *  Axis:
15187:Core/Src/bno055.c ****  *
15188:Core/Src/bno055.c ****  *  bno055_set_accel_any_motion_no_motion_axis_enable()
15189:Core/Src/bno055.c ****  *
15190:Core/Src/bno055.c ****  *  Threshold :
15191:Core/Src/bno055.c ****  *
15192:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_thres()
15193:Core/Src/bno055.c ****  *
15194:Core/Src/bno055.c ****  *  Duration :
15195:Core/Src/bno055.c ****  *
15196:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_durn()
15197:Core/Src/bno055.c ****  *
15198:Core/Src/bno055.c ****  *  Slow/no motion enable:
15199:Core/Src/bno055.c ****  *
15200:Core/Src/bno055.c ****  *  bno055_set_accel_slow_no_motion_enable()
15201:Core/Src/bno055.c ****  *
15202:Core/Src/bno055.c ****  */
15203:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_intr_accel_no_motion(u8 accel_nomotion_u8)
15204:Core/Src/bno055.c **** {
 31955              		.loc 1 15204 1 is_stmt 1 view -0
 31956              		.cfi_startproc
 31957              		@ args = 0, pretend = 0, frame = 8
 31958              		@ frame_needed = 0, uses_anonymous_args = 0
 31959              		.loc 1 15204 1 is_stmt 0 view .LVU8968
 31960 0000 30B5     		push	{r4, r5, lr}
 31961              	.LCFI889:
 31962              		.cfi_def_cfa_offset 12
 31963              		.cfi_offset 4, -12
 31964              		.cfi_offset 5, -8
 31965              		.cfi_offset 14, -4
 31966 0002 83B0     		sub	sp, sp, #12
 31967              	.LCFI890:
ARM GAS  /tmp/ccO72alg.s 			page 895


 31968              		.cfi_def_cfa_offset 24
15205:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 31969              		.loc 1 15205 5 is_stmt 1 view .LVU8969
 31970              	.LVL3963:
15206:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 31971              		.loc 1 15206 5 view .LVU8970
 31972              		.loc 1 15206 8 is_stmt 0 view .LVU8971
 31973 0004 0023     		movs	r3, #0
 31974 0006 8DF80730 		strb	r3, [sp, #7]
15207:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 31975              		.loc 1 15207 5 is_stmt 1 view .LVU8972
 31976              	.LVL3964:
15208:Core/Src/bno055.c **** 
15209:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15210:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 31977              		.loc 1 15210 5 view .LVU8973
 31978              		.loc 1 15210 18 is_stmt 0 view .LVU8974
 31979 000a 1D4B     		ldr	r3, .L2242
 31980 000c 1B68     		ldr	r3, [r3]
 31981              		.loc 1 15210 8 view .LVU8975
 31982 000e 002B     		cmp	r3, #0
 31983 0010 30D0     		beq	.L2238
 31984 0012 0446     		mov	r4, r0
15211:Core/Src/bno055.c ****     {
15212:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15213:Core/Src/bno055.c ****     }
15214:Core/Src/bno055.c ****     else
15215:Core/Src/bno055.c ****     {
15216:Core/Src/bno055.c ****         /*condition check for page,
15217:Core/Src/bno055.c ****          *  accel nomotion interrupt is
15218:Core/Src/bno055.c ****          *  available in the page one*/
15219:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 31985              		.loc 1 15219 9 is_stmt 1 view .LVU8976
 31986              		.loc 1 15219 21 is_stmt 0 view .LVU8977
 31987 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31988              		.loc 1 15219 12 view .LVU8978
 31989 0016 012B     		cmp	r3, #1
 31990 0018 26D1     		bne	.L2241
 31991              	.LVL3965:
 31992              	.L2236:
15220:Core/Src/bno055.c ****         {
15221:Core/Src/bno055.c ****             /* Write page as one */
15222:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15223:Core/Src/bno055.c ****         }
15224:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 31993              		.loc 1 15224 53 discriminator 1 view .LVU8979
 31994 001a 194B     		ldr	r3, .L2242
 31995 001c 1B68     		ldr	r3, [r3]
 31996 001e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 31997              		.loc 1 15224 41 discriminator 1 view .LVU8980
 31998 0020 012B     		cmp	r3, #1
 31999 0022 2AD1     		bne	.L2239
 32000              	.L2237:
15225:Core/Src/bno055.c ****         {
15226:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32001              		.loc 1 15226 13 is_stmt 1 view .LVU8981
 32002              		.loc 1 15226 32 is_stmt 0 view .LVU8982
ARM GAS  /tmp/ccO72alg.s 			page 896


 32003 0024 164B     		ldr	r3, .L2242
 32004 0026 1868     		ldr	r0, [r3]
 32005 0028 0569     		ldr	r5, [r0, #16]
 32006              		.loc 1 15226 24 view .LVU8983
 32007 002a 0123     		movs	r3, #1
 32008 002c 0DF10702 		add	r2, sp, #7
 32009 0030 1021     		movs	r1, #16
 32010 0032 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32011 0034 A847     		blx	r5
 32012              	.LVL3966:
15227:Core/Src/bno055.c ****                                                       BNO055_ACCEL_NO_MOTION_INTR_REG,
15228:Core/Src/bno055.c ****                                                       &data_u8r,
15229:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15230:Core/Src/bno055.c ****             if (com_rslt == BNO055_SUCCESS)
 32013              		.loc 1 15230 13 is_stmt 1 view .LVU8984
 32014              		.loc 1 15230 16 is_stmt 0 view .LVU8985
 32015 0036 0546     		mov	r5, r0
 32016 0038 98B9     		cbnz	r0, .L2235
15231:Core/Src/bno055.c ****             {
15232:Core/Src/bno055.c ****                 /* Write the value of
15233:Core/Src/bno055.c ****                  * accel nomotion interrupt */
15234:Core/Src/bno055.c ****                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_NO_MOTION_INTR, accel_nomotio
 32017              		.loc 1 15234 17 is_stmt 1 view .LVU8986
 32018              		.loc 1 15234 28 is_stmt 0 view .LVU8987
 32019 003a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 32020              	.LVL3967:
 32021              		.loc 1 15234 28 view .LVU8988
 32022 003e 00F07F00 		and	r0, r0, #127
 32023 0042 40EAC414 		orr	r4, r0, r4, lsl #7
 32024              		.loc 1 15234 26 view .LVU8989
 32025 0046 8DF80740 		strb	r4, [sp, #7]
15235:Core/Src/bno055.c ****                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32026              		.loc 1 15235 17 is_stmt 1 view .LVU8990
 32027              		.loc 1 15235 37 is_stmt 0 view .LVU8991
 32028 004a 0D4B     		ldr	r3, .L2242
 32029 004c 1868     		ldr	r0, [r3]
 32030 004e C468     		ldr	r4, [r0, #12]
 32031              		.loc 1 15235 29 view .LVU8992
 32032 0050 0123     		movs	r3, #1
 32033 0052 0DF10702 		add	r2, sp, #7
 32034 0056 1021     		movs	r1, #16
 32035 0058 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32036 005a A047     		blx	r4
 32037              	.LVL3968:
 32038              		.loc 1 15235 26 view .LVU8993
 32039 005c 55FA80F5 		uxtab	r5, r5, r0
 32040 0060 6DB2     		sxtb	r5, r5
 32041              	.LVL3969:
 32042              	.L2235:
15236:Core/Src/bno055.c ****                                                             BNO055_ACCEL_NO_MOTION_INTR_REG,
15237:Core/Src/bno055.c ****                                                             &data_u8r,
15238:Core/Src/bno055.c ****                                                             BNO055_GEN_READ_WRITE_LENGTH);
15239:Core/Src/bno055.c ****             }
15240:Core/Src/bno055.c ****         }
15241:Core/Src/bno055.c ****         else
15242:Core/Src/bno055.c ****         {
15243:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 897


15244:Core/Src/bno055.c ****         }
15245:Core/Src/bno055.c ****     }
15246:Core/Src/bno055.c **** 
15247:Core/Src/bno055.c ****     return com_rslt;
15248:Core/Src/bno055.c **** }
 32043              		.loc 1 15248 1 view .LVU8994
 32044 0062 2846     		mov	r0, r5
 32045 0064 03B0     		add	sp, sp, #12
 32046              	.LCFI891:
 32047              		.cfi_remember_state
 32048              		.cfi_def_cfa_offset 12
 32049              		@ sp needed
 32050 0066 30BD     		pop	{r4, r5, pc}
 32051              	.LVL3970:
 32052              	.L2241:
 32053              	.LCFI892:
 32054              		.cfi_restore_state
15222:Core/Src/bno055.c ****         }
 32055              		.loc 1 15222 13 is_stmt 1 view .LVU8995
15222:Core/Src/bno055.c ****         }
 32056              		.loc 1 15222 23 is_stmt 0 view .LVU8996
 32057 0068 0120     		movs	r0, #1
 32058              	.LVL3971:
15222:Core/Src/bno055.c ****         }
 32059              		.loc 1 15222 23 view .LVU8997
 32060 006a FFF7FEFF 		bl	bno055_write_page_id
 32061              	.LVL3972:
15224:Core/Src/bno055.c ****         {
 32062              		.loc 1 15224 9 is_stmt 1 view .LVU8998
15224:Core/Src/bno055.c ****         {
 32063              		.loc 1 15224 12 is_stmt 0 view .LVU8999
 32064 006e 0028     		cmp	r0, #0
 32065 0070 D8D0     		beq	.L2237
 32066 0072 D2E7     		b	.L2236
 32067              	.LVL3973:
 32068              	.L2238:
15212:Core/Src/bno055.c ****     }
 32069              		.loc 1 15212 16 view .LVU9000
 32070 0074 6FF07E05 		mvn	r5, #126
 32071 0078 F3E7     		b	.L2235
 32072              	.LVL3974:
 32073              	.L2239:
15243:Core/Src/bno055.c ****         }
 32074              		.loc 1 15243 22 view .LVU9001
 32075 007a 4FF0FF35 		mov	r5, #-1
 32076 007e F0E7     		b	.L2235
 32077              	.L2243:
 32078              		.align	2
 32079              	.L2242:
 32080 0080 00000000 		.word	.LANCHOR0
 32081              		.cfi_endproc
 32082              	.LFE224:
 32084              		.section	.text.bno055_get_accel_any_motion_thres,"ax",%progbits
 32085              		.align	1
 32086              		.global	bno055_get_accel_any_motion_thres
 32087              		.syntax unified
 32088              		.thumb
ARM GAS  /tmp/ccO72alg.s 			page 898


 32089              		.thumb_func
 32091              	bno055_get_accel_any_motion_thres:
 32092              	.LVL3975:
 32093              	.LFB225:
15249:Core/Src/bno055.c **** 
15250:Core/Src/bno055.c **** /*!
15251:Core/Src/bno055.c ****  *  @brief This API used to read the accel any motion threshold
15252:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15253:Core/Src/bno055.c ****  *
15254:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15255:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15256:Core/Src/bno055.c ****  *  ------------------------    | -------------
15257:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15258:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15259:Core/Src/bno055.c ****  *
15260:Core/Src/bno055.c ****  *  @return results of bus communication function
15261:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15262:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15263:Core/Src/bno055.c ****  *
15264:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15265:Core/Src/bno055.c ****  *  range values
15266:Core/Src/bno055.c ****  *
15267:Core/Src/bno055.c ****  *  accel_range_u8 |    threshold | LSB
15268:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15269:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15270:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15271:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15272:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15273:Core/Src/bno055.c ****  *
15274:Core/Src/bno055.c ****  */
15275:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_thres(u8 *accel_any_motion_thres_u8)
15276:Core/Src/bno055.c **** {
 32094              		.loc 1 15276 1 is_stmt 1 view -0
 32095              		.cfi_startproc
 32096              		@ args = 0, pretend = 0, frame = 8
 32097              		@ frame_needed = 0, uses_anonymous_args = 0
 32098              		.loc 1 15276 1 is_stmt 0 view .LVU9003
 32099 0000 70B5     		push	{r4, r5, r6, lr}
 32100              	.LCFI893:
 32101              		.cfi_def_cfa_offset 16
 32102              		.cfi_offset 4, -16
 32103              		.cfi_offset 5, -12
 32104              		.cfi_offset 6, -8
 32105              		.cfi_offset 14, -4
 32106 0002 82B0     		sub	sp, sp, #8
 32107              	.LCFI894:
 32108              		.cfi_def_cfa_offset 24
15277:Core/Src/bno055.c ****     /* Variable used to return value of
15278:Core/Src/bno055.c ****      * communication routine*/
15279:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32109              		.loc 1 15279 5 is_stmt 1 view .LVU9004
 32110              	.LVL3976:
15280:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32111              		.loc 1 15280 5 view .LVU9005
 32112              		.loc 1 15280 8 is_stmt 0 view .LVU9006
 32113 0004 0023     		movs	r3, #0
 32114 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccO72alg.s 			page 899


15281:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32115              		.loc 1 15281 5 is_stmt 1 view .LVU9007
 32116              	.LVL3977:
15282:Core/Src/bno055.c **** 
15283:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15284:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32117              		.loc 1 15284 5 view .LVU9008
 32118              		.loc 1 15284 18 is_stmt 0 view .LVU9009
 32119 000a 134B     		ldr	r3, .L2252
 32120 000c 1B68     		ldr	r3, [r3]
 32121              		.loc 1 15284 8 view .LVU9010
 32122 000e E3B1     		cbz	r3, .L2248
 32123 0010 0546     		mov	r5, r0
15285:Core/Src/bno055.c ****     {
15286:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15287:Core/Src/bno055.c ****     }
15288:Core/Src/bno055.c ****     else
15289:Core/Src/bno055.c ****     {
15290:Core/Src/bno055.c ****         /*condition check for page, accel any motion threshold  is
15291:Core/Src/bno055.c ****          * available in the page one*/
15292:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32124              		.loc 1 15292 9 is_stmt 1 view .LVU9011
 32125              		.loc 1 15292 21 is_stmt 0 view .LVU9012
 32126 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32127              		.loc 1 15292 12 view .LVU9013
 32128 0014 012B     		cmp	r3, #1
 32129 0016 12D1     		bne	.L2251
 32130              	.LVL3978:
 32131              	.L2246:
15293:Core/Src/bno055.c ****         {
15294:Core/Src/bno055.c ****             /* Write page as one */
15295:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15296:Core/Src/bno055.c ****         }
15297:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32132              		.loc 1 15297 53 discriminator 1 view .LVU9014
 32133 0018 0F4B     		ldr	r3, .L2252
 32134 001a 1B68     		ldr	r3, [r3]
 32135 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32136              		.loc 1 15297 41 discriminator 1 view .LVU9015
 32137 001e 012B     		cmp	r3, #1
 32138 0020 16D1     		bne	.L2249
 32139              	.L2247:
15298:Core/Src/bno055.c ****         {
15299:Core/Src/bno055.c ****             /* Read the value of accel any motion threshold */
15300:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32140              		.loc 1 15300 13 is_stmt 1 view .LVU9016
 32141              		.loc 1 15300 32 is_stmt 0 view .LVU9017
 32142 0022 0D4B     		ldr	r3, .L2252
 32143 0024 1C68     		ldr	r4, [r3]
 32144 0026 2669     		ldr	r6, [r4, #16]
 32145              		.loc 1 15300 24 view .LVU9018
 32146 0028 0123     		movs	r3, #1
 32147 002a 0DF10702 		add	r2, sp, #7
 32148 002e 1121     		movs	r1, #17
 32149 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 32150 0032 B047     		blx	r6
 32151              	.LVL3979:
ARM GAS  /tmp/ccO72alg.s 			page 900


15301:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_THRES_REG,
15302:Core/Src/bno055.c ****                                                       &data_u8r,
15303:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15304:Core/Src/bno055.c ****             *accel_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_THRE
 32152              		.loc 1 15304 13 is_stmt 1 view .LVU9019
 32153              		.loc 1 15304 40 is_stmt 0 view .LVU9020
 32154 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32155 0038 2B70     		strb	r3, [r5]
 32156              	.LVL3980:
 32157              	.L2245:
15305:Core/Src/bno055.c ****         }
15306:Core/Src/bno055.c ****         else
15307:Core/Src/bno055.c ****         {
15308:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15309:Core/Src/bno055.c ****         }
15310:Core/Src/bno055.c ****     }
15311:Core/Src/bno055.c **** 
15312:Core/Src/bno055.c ****     return com_rslt;
15313:Core/Src/bno055.c **** }
 32158              		.loc 1 15313 1 view .LVU9021
 32159 003a 02B0     		add	sp, sp, #8
 32160              	.LCFI895:
 32161              		.cfi_remember_state
 32162              		.cfi_def_cfa_offset 16
 32163              		@ sp needed
 32164 003c 70BD     		pop	{r4, r5, r6, pc}
 32165              	.LVL3981:
 32166              	.L2251:
 32167              	.LCFI896:
 32168              		.cfi_restore_state
15295:Core/Src/bno055.c ****         }
 32169              		.loc 1 15295 13 is_stmt 1 view .LVU9022
15295:Core/Src/bno055.c ****         }
 32170              		.loc 1 15295 23 is_stmt 0 view .LVU9023
 32171 003e 0120     		movs	r0, #1
 32172              	.LVL3982:
15295:Core/Src/bno055.c ****         }
 32173              		.loc 1 15295 23 view .LVU9024
 32174 0040 FFF7FEFF 		bl	bno055_write_page_id
 32175              	.LVL3983:
15297:Core/Src/bno055.c ****         {
 32176              		.loc 1 15297 9 is_stmt 1 view .LVU9025
15297:Core/Src/bno055.c ****         {
 32177              		.loc 1 15297 12 is_stmt 0 view .LVU9026
 32178 0044 0028     		cmp	r0, #0
 32179 0046 ECD0     		beq	.L2247
 32180 0048 E6E7     		b	.L2246
 32181              	.LVL3984:
 32182              	.L2248:
15286:Core/Src/bno055.c ****     }
 32183              		.loc 1 15286 16 view .LVU9027
 32184 004a 6FF07E00 		mvn	r0, #126
 32185              	.LVL3985:
15286:Core/Src/bno055.c ****     }
 32186              		.loc 1 15286 16 view .LVU9028
 32187 004e F4E7     		b	.L2245
 32188              	.LVL3986:
ARM GAS  /tmp/ccO72alg.s 			page 901


 32189              	.L2249:
15308:Core/Src/bno055.c ****         }
 32190              		.loc 1 15308 22 view .LVU9029
 32191 0050 4FF0FF30 		mov	r0, #-1
 32192 0054 F1E7     		b	.L2245
 32193              	.L2253:
 32194 0056 00BF     		.align	2
 32195              	.L2252:
 32196 0058 00000000 		.word	.LANCHOR0
 32197              		.cfi_endproc
 32198              	.LFE225:
 32200              		.section	.text.bno055_set_accel_any_motion_thres,"ax",%progbits
 32201              		.align	1
 32202              		.global	bno055_set_accel_any_motion_thres
 32203              		.syntax unified
 32204              		.thumb
 32205              		.thumb_func
 32207              	bno055_set_accel_any_motion_thres:
 32208              	.LVL3987:
 32209              	.LFB226:
15314:Core/Src/bno055.c **** 
15315:Core/Src/bno055.c **** /*!
15316:Core/Src/bno055.c ****  *  @brief This API used to write the accel any motion threshold
15317:Core/Src/bno055.c ****  *  from page one register from 0x11 bit 0 to 7
15318:Core/Src/bno055.c ****  *
15319:Core/Src/bno055.c ****  *  @param accel_any_motion_thres_u8 : The value of any motion threshold
15320:Core/Src/bno055.c ****  *  accel_any_motion_thres_u8 | result
15321:Core/Src/bno055.c ****  *  ------------------------    | -------------
15322:Core/Src/bno055.c ****  *              0x01            | BNO055_BIT_ENABLE
15323:Core/Src/bno055.c ****  *              0x00            | BNO055_BIT_DISABLE
15324:Core/Src/bno055.c ****  *
15325:Core/Src/bno055.c ****  *  @return results of bus communication function
15326:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15327:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15328:Core/Src/bno055.c ****  *
15329:Core/Src/bno055.c ****  *  @note Accel anymotion threshold dependent on the
15330:Core/Src/bno055.c ****  *  range values
15331:Core/Src/bno055.c ****  *
15332:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
15333:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
15334:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
15335:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
15336:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
15337:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
15338:Core/Src/bno055.c ****  *
15339:Core/Src/bno055.c ****  */
15340:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_thres(u8 accel_any_motion_thres_u8)
15341:Core/Src/bno055.c **** {
 32210              		.loc 1 15341 1 is_stmt 1 view -0
 32211              		.cfi_startproc
 32212              		@ args = 0, pretend = 0, frame = 8
 32213              		@ frame_needed = 0, uses_anonymous_args = 0
 32214              		.loc 1 15341 1 is_stmt 0 view .LVU9031
 32215 0000 30B5     		push	{r4, r5, lr}
 32216              	.LCFI897:
 32217              		.cfi_def_cfa_offset 12
 32218              		.cfi_offset 4, -12
ARM GAS  /tmp/ccO72alg.s 			page 902


 32219              		.cfi_offset 5, -8
 32220              		.cfi_offset 14, -4
 32221 0002 83B0     		sub	sp, sp, #12
 32222              	.LCFI898:
 32223              		.cfi_def_cfa_offset 24
15342:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32224              		.loc 1 15342 5 is_stmt 1 view .LVU9032
 32225              	.LVL3988:
15343:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32226              		.loc 1 15343 5 view .LVU9033
 32227              		.loc 1 15343 8 is_stmt 0 view .LVU9034
 32228 0004 0023     		movs	r3, #0
 32229 0006 8DF80730 		strb	r3, [sp, #7]
15344:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32230              		.loc 1 15344 5 is_stmt 1 view .LVU9035
 32231              	.LVL3989:
15345:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32232              		.loc 1 15345 5 view .LVU9036
15346:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32233              		.loc 1 15346 5 view .LVU9037
 32234              		.loc 1 15346 8 is_stmt 0 view .LVU9038
 32235 000a 8DF80630 		strb	r3, [sp, #6]
15347:Core/Src/bno055.c **** 
15348:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15349:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32236              		.loc 1 15349 5 is_stmt 1 view .LVU9039
 32237              		.loc 1 15349 18 is_stmt 0 view .LVU9040
 32238 000e 254B     		ldr	r3, .L2266
 32239 0010 1B68     		ldr	r3, [r3]
 32240              		.loc 1 15349 8 view .LVU9041
 32241 0012 002B     		cmp	r3, #0
 32242 0014 42D0     		beq	.L2258
 32243 0016 0546     		mov	r5, r0
15350:Core/Src/bno055.c ****     {
15351:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15352:Core/Src/bno055.c ****     }
15353:Core/Src/bno055.c ****     else
15354:Core/Src/bno055.c ****     {
15355:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15356:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15357:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15358:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32244              		.loc 1 15358 9 is_stmt 1 view .LVU9042
 32245              		.loc 1 15358 19 is_stmt 0 view .LVU9043
 32246 0018 0DF10600 		add	r0, sp, #6
 32247              	.LVL3990:
 32248              		.loc 1 15358 19 view .LVU9044
 32249 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32250              	.LVL3991:
15359:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32251              		.loc 1 15359 9 is_stmt 1 view .LVU9045
 32252              		.loc 1 15359 12 is_stmt 0 view .LVU9046
 32253 0020 0446     		mov	r4, r0
 32254 0022 50BB     		cbnz	r0, .L2259
15360:Core/Src/bno055.c ****         {
15361:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32255              		.loc 1 15361 13 is_stmt 1 view .LVU9047
ARM GAS  /tmp/ccO72alg.s 			page 903


 32256              		.loc 1 15361 32 is_stmt 0 view .LVU9048
 32257 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32258              		.loc 1 15361 16 view .LVU9049
 32259 0028 1BB9     		cbnz	r3, .L2263
 32260              	.LVL3992:
 32261              	.L2257:
15362:Core/Src/bno055.c ****             {
15363:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15364:Core/Src/bno055.c ****             }
15365:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32262              		.loc 1 15365 13 is_stmt 1 view .LVU9050
 32263              		.loc 1 15365 16 is_stmt 0 view .LVU9051
 32264 002a 44B1     		cbz	r4, .L2264
15366:Core/Src/bno055.c ****             {
15367:Core/Src/bno055.c ****                 /* Write page as one */
15368:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15369:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15370:Core/Src/bno055.c ****                 {
15371:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15372:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
15373:Core/Src/bno055.c ****                                                               &data_u8r,
15374:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15375:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15376:Core/Src/bno055.c ****                     {
15377:Core/Src/bno055.c ****                         /* Write the value of
15378:Core/Src/bno055.c ****                          * accel any motion threshold*/
15379:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
15380:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
15381:Core/Src/bno055.c ****                                                        accel_any_motion_thres_u8);
15382:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15383:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
15384:Core/Src/bno055.c ****                                                                     &data_u8r,
15385:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15386:Core/Src/bno055.c ****                     }
15387:Core/Src/bno055.c ****                 }
15388:Core/Src/bno055.c ****                 else
15389:Core/Src/bno055.c ****                 {
15390:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15391:Core/Src/bno055.c ****                 }
15392:Core/Src/bno055.c ****             }
15393:Core/Src/bno055.c ****             else
15394:Core/Src/bno055.c ****             {
15395:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32265              		.loc 1 15395 26 view .LVU9052
 32266 002c 4FF0FF34 		mov	r4, #-1
 32267              	.LVL3993:
 32268              		.loc 1 15395 26 view .LVU9053
 32269 0030 25E0     		b	.L2256
 32270              	.LVL3994:
 32271              	.L2263:
15363:Core/Src/bno055.c ****             }
 32272              		.loc 1 15363 17 is_stmt 1 view .LVU9054
15363:Core/Src/bno055.c ****             }
 32273              		.loc 1 15363 28 is_stmt 0 view .LVU9055
 32274 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 32275              	.LVL3995:
15363:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 904


 32276              		.loc 1 15363 25 view .LVU9056
 32277 0036 54FA80F4 		uxtab	r4, r4, r0
 32278 003a 64B2     		sxtb	r4, r4
 32279              	.LVL3996:
15363:Core/Src/bno055.c ****             }
 32280              		.loc 1 15363 25 view .LVU9057
 32281 003c F5E7     		b	.L2257
 32282              	.L2264:
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32283              		.loc 1 15368 17 is_stmt 1 view .LVU9058
15368:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32284              		.loc 1 15368 30 is_stmt 0 view .LVU9059
 32285 003e 0120     		movs	r0, #1
 32286 0040 FFF7FEFF 		bl	bno055_write_page_id
 32287              	.LVL3997:
15369:Core/Src/bno055.c ****                 {
 32288              		.loc 1 15369 17 is_stmt 1 view .LVU9060
15369:Core/Src/bno055.c ****                 {
 32289              		.loc 1 15369 20 is_stmt 0 view .LVU9061
 32290 0044 08BB     		cbnz	r0, .L2261
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32291              		.loc 1 15371 21 is_stmt 1 view .LVU9062
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32292              		.loc 1 15371 40 is_stmt 0 view .LVU9063
 32293 0046 174B     		ldr	r3, .L2266
 32294 0048 1868     		ldr	r0, [r3]
 32295              	.LVL3998:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32296              		.loc 1 15371 40 view .LVU9064
 32297 004a 0469     		ldr	r4, [r0, #16]
 32298              	.LVL3999:
15371:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_THRES_REG,
 32299              		.loc 1 15371 32 view .LVU9065
 32300 004c 0123     		movs	r3, #1
 32301 004e 0DF10702 		add	r2, sp, #7
 32302 0052 1121     		movs	r1, #17
 32303 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32304 0056 A047     		blx	r4
 32305              	.LVL4000:
15375:Core/Src/bno055.c ****                     {
 32306              		.loc 1 15375 21 is_stmt 1 view .LVU9066
15375:Core/Src/bno055.c ****                     {
 32307              		.loc 1 15375 24 is_stmt 0 view .LVU9067
 32308 0058 0446     		mov	r4, r0
 32309 005a 80B9     		cbnz	r0, .L2256
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 32310              		.loc 1 15379 25 is_stmt 1 view .LVU9068
15379:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_THRES,
 32311              		.loc 1 15379 34 is_stmt 0 view .LVU9069
 32312 005c 8DF80750 		strb	r5, [sp, #7]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32313              		.loc 1 15382 25 is_stmt 1 view .LVU9070
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32314              		.loc 1 15382 45 is_stmt 0 view .LVU9071
 32315 0060 104B     		ldr	r3, .L2266
 32316 0062 1868     		ldr	r0, [r3]
 32317              	.LVL4001:
ARM GAS  /tmp/ccO72alg.s 			page 905


15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32318              		.loc 1 15382 45 view .LVU9072
 32319 0064 C568     		ldr	r5, [r0, #12]
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32320              		.loc 1 15382 37 view .LVU9073
 32321 0066 0123     		movs	r3, #1
 32322 0068 0DF10702 		add	r2, sp, #7
 32323 006c 1121     		movs	r1, #17
 32324 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32325 0070 A847     		blx	r5
 32326              	.LVL4002:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32327              		.loc 1 15382 34 view .LVU9074
 32328 0072 54FA80F4 		uxtab	r4, r4, r0
 32329 0076 64B2     		sxtb	r4, r4
 32330              	.LVL4003:
15382:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_THRES_R
 32331              		.loc 1 15382 34 view .LVU9075
 32332 0078 01E0     		b	.L2256
 32333              	.LVL4004:
 32334              	.L2259:
15396:Core/Src/bno055.c ****             }
15397:Core/Src/bno055.c ****         }
15398:Core/Src/bno055.c ****         else
15399:Core/Src/bno055.c ****         {
15400:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32335              		.loc 1 15400 22 view .LVU9076
 32336 007a 4FF0FF34 		mov	r4, #-1
 32337              	.LVL4005:
 32338              	.L2256:
15401:Core/Src/bno055.c ****         }
15402:Core/Src/bno055.c ****     }
15403:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32339              		.loc 1 15403 5 is_stmt 1 view .LVU9077
 32340              		.loc 1 15403 24 is_stmt 0 view .LVU9078
 32341 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32342              		.loc 1 15403 8 view .LVU9079
 32343 0082 28B9     		cbnz	r0, .L2265
 32344              	.LVL4006:
 32345              	.L2255:
15404:Core/Src/bno055.c ****     {
15405:Core/Src/bno055.c ****         /* set the operation mode of
15406:Core/Src/bno055.c ****          * previous operation mode*/
15407:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15408:Core/Src/bno055.c ****     }
15409:Core/Src/bno055.c **** 
15410:Core/Src/bno055.c ****     return com_rslt;
15411:Core/Src/bno055.c **** }
 32346              		.loc 1 15411 1 view .LVU9080
 32347 0084 2046     		mov	r0, r4
 32348 0086 03B0     		add	sp, sp, #12
 32349              	.LCFI899:
 32350              		.cfi_remember_state
 32351              		.cfi_def_cfa_offset 12
 32352              		@ sp needed
 32353 0088 30BD     		pop	{r4, r5, pc}
 32354              	.LVL4007:
ARM GAS  /tmp/ccO72alg.s 			page 906


 32355              	.L2261:
 32356              	.LCFI900:
 32357              		.cfi_restore_state
15390:Core/Src/bno055.c ****                 }
 32358              		.loc 1 15390 30 view .LVU9081
 32359 008a 4FF0FF34 		mov	r4, #-1
 32360              	.LVL4008:
15390:Core/Src/bno055.c ****                 }
 32361              		.loc 1 15390 30 view .LVU9082
 32362 008e F6E7     		b	.L2256
 32363              	.LVL4009:
 32364              	.L2265:
15407:Core/Src/bno055.c ****     }
 32365              		.loc 1 15407 9 is_stmt 1 view .LVU9083
15407:Core/Src/bno055.c ****     }
 32366              		.loc 1 15407 21 is_stmt 0 view .LVU9084
 32367 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 32368              	.LVL4010:
15407:Core/Src/bno055.c ****     }
 32369              		.loc 1 15407 18 view .LVU9085
 32370 0094 54FA80F4 		uxtab	r4, r4, r0
 32371              	.LVL4011:
15407:Core/Src/bno055.c ****     }
 32372              		.loc 1 15407 18 view .LVU9086
 32373 0098 64B2     		sxtb	r4, r4
 32374              	.LVL4012:
15407:Core/Src/bno055.c ****     }
 32375              		.loc 1 15407 18 view .LVU9087
 32376 009a F3E7     		b	.L2255
 32377              	.LVL4013:
 32378              	.L2258:
15351:Core/Src/bno055.c ****     }
 32379              		.loc 1 15351 16 view .LVU9088
 32380 009c 6FF07E04 		mvn	r4, #126
 32381 00a0 F0E7     		b	.L2255
 32382              	.L2267:
 32383 00a2 00BF     		.align	2
 32384              	.L2266:
 32385 00a4 00000000 		.word	.LANCHOR0
 32386              		.cfi_endproc
 32387              	.LFE226:
 32389              		.section	.text.bno055_get_accel_any_motion_durn,"ax",%progbits
 32390              		.align	1
 32391              		.global	bno055_get_accel_any_motion_durn
 32392              		.syntax unified
 32393              		.thumb
 32394              		.thumb_func
 32396              	bno055_get_accel_any_motion_durn:
 32397              	.LVL4014:
 32398              	.LFB227:
15412:Core/Src/bno055.c **** 
15413:Core/Src/bno055.c **** /*!
15414:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion duration
15415:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15416:Core/Src/bno055.c ****  *
15417:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15418:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
ARM GAS  /tmp/ccO72alg.s 			page 907


15419:Core/Src/bno055.c ****  *  -------------------------  | -------------
15420:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15421:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15422:Core/Src/bno055.c ****  *
15423:Core/Src/bno055.c ****  *  @return results of bus communication function
15424:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15425:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15426:Core/Src/bno055.c ****  *
15427:Core/Src/bno055.c ****  *
15428:Core/Src/bno055.c ****  */
15429:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_durn(u8 *accel_any_motion_durn_u8)
15430:Core/Src/bno055.c **** {
 32399              		.loc 1 15430 1 is_stmt 1 view -0
 32400              		.cfi_startproc
 32401              		@ args = 0, pretend = 0, frame = 8
 32402              		@ frame_needed = 0, uses_anonymous_args = 0
 32403              		.loc 1 15430 1 is_stmt 0 view .LVU9090
 32404 0000 30B5     		push	{r4, r5, lr}
 32405              	.LCFI901:
 32406              		.cfi_def_cfa_offset 12
 32407              		.cfi_offset 4, -12
 32408              		.cfi_offset 5, -8
 32409              		.cfi_offset 14, -4
 32410 0002 83B0     		sub	sp, sp, #12
 32411              	.LCFI902:
 32412              		.cfi_def_cfa_offset 24
15431:Core/Src/bno055.c ****     /* Variable used to return value of
15432:Core/Src/bno055.c ****      * communication routine*/
15433:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32413              		.loc 1 15433 5 is_stmt 1 view .LVU9091
 32414              	.LVL4015:
15434:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32415              		.loc 1 15434 5 view .LVU9092
 32416              		.loc 1 15434 8 is_stmt 0 view .LVU9093
 32417 0004 0023     		movs	r3, #0
 32418 0006 8DF80730 		strb	r3, [sp, #7]
15435:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32419              		.loc 1 15435 5 is_stmt 1 view .LVU9094
 32420              	.LVL4016:
15436:Core/Src/bno055.c **** 
15437:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15438:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32421              		.loc 1 15438 5 view .LVU9095
 32422              		.loc 1 15438 18 is_stmt 0 view .LVU9096
 32423 000a 144B     		ldr	r3, .L2276
 32424 000c 1B68     		ldr	r3, [r3]
 32425              		.loc 1 15438 8 view .LVU9097
 32426 000e F3B1     		cbz	r3, .L2272
 32427 0010 0446     		mov	r4, r0
15439:Core/Src/bno055.c ****     {
15440:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15441:Core/Src/bno055.c ****     }
15442:Core/Src/bno055.c ****     else
15443:Core/Src/bno055.c ****     {
15444:Core/Src/bno055.c ****         /*condition check for page, accel anymotion duration  is
15445:Core/Src/bno055.c ****          * available in the page one*/
15446:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
ARM GAS  /tmp/ccO72alg.s 			page 908


 32428              		.loc 1 15446 9 is_stmt 1 view .LVU9098
 32429              		.loc 1 15446 21 is_stmt 0 view .LVU9099
 32430 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32431              		.loc 1 15446 12 view .LVU9100
 32432 0014 012B     		cmp	r3, #1
 32433 0016 14D1     		bne	.L2275
 32434              	.LVL4017:
 32435              	.L2270:
15447:Core/Src/bno055.c ****         {
15448:Core/Src/bno055.c ****             /* Write page as one */
15449:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15450:Core/Src/bno055.c ****         }
15451:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32436              		.loc 1 15451 53 discriminator 1 view .LVU9101
 32437 0018 104B     		ldr	r3, .L2276
 32438 001a 1B68     		ldr	r3, [r3]
 32439 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32440              		.loc 1 15451 41 discriminator 1 view .LVU9102
 32441 001e 012B     		cmp	r3, #1
 32442 0020 18D1     		bne	.L2273
 32443              	.L2271:
15452:Core/Src/bno055.c ****         {
15453:Core/Src/bno055.c ****             /* Read the value of accel anymotion duration */
15454:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 32444              		.loc 1 15454 13 is_stmt 1 view .LVU9103
 32445              		.loc 1 15454 32 is_stmt 0 view .LVU9104
 32446 0022 0E4B     		ldr	r3, .L2276
 32447 0024 1868     		ldr	r0, [r3]
 32448 0026 0569     		ldr	r5, [r0, #16]
 32449              		.loc 1 15454 24 view .LVU9105
 32450 0028 0123     		movs	r3, #1
 32451 002a 0DF10702 		add	r2, sp, #7
 32452 002e 1221     		movs	r1, #18
 32453 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32454 0032 A847     		blx	r5
 32455              	.LVL4018:
15455:Core/Src/bno055.c ****                                                       BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15456:Core/Src/bno055.c ****                                                       &data_u8r,
15457:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
15458:Core/Src/bno055.c ****             *accel_any_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_DURN_
 32456              		.loc 1 15458 13 is_stmt 1 view .LVU9106
 32457              		.loc 1 15458 41 is_stmt 0 view .LVU9107
 32458 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32459 0038 03F00303 		and	r3, r3, #3
 32460              		.loc 1 15458 39 view .LVU9108
 32461 003c 2370     		strb	r3, [r4]
 32462              	.LVL4019:
 32463              	.L2269:
15459:Core/Src/bno055.c ****         }
15460:Core/Src/bno055.c ****         else
15461:Core/Src/bno055.c ****         {
15462:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15463:Core/Src/bno055.c ****         }
15464:Core/Src/bno055.c ****     }
15465:Core/Src/bno055.c **** 
15466:Core/Src/bno055.c ****     return com_rslt;
15467:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 909


 32464              		.loc 1 15467 1 view .LVU9109
 32465 003e 03B0     		add	sp, sp, #12
 32466              	.LCFI903:
 32467              		.cfi_remember_state
 32468              		.cfi_def_cfa_offset 12
 32469              		@ sp needed
 32470 0040 30BD     		pop	{r4, r5, pc}
 32471              	.LVL4020:
 32472              	.L2275:
 32473              	.LCFI904:
 32474              		.cfi_restore_state
15449:Core/Src/bno055.c ****         }
 32475              		.loc 1 15449 13 is_stmt 1 view .LVU9110
15449:Core/Src/bno055.c ****         }
 32476              		.loc 1 15449 23 is_stmt 0 view .LVU9111
 32477 0042 0120     		movs	r0, #1
 32478              	.LVL4021:
15449:Core/Src/bno055.c ****         }
 32479              		.loc 1 15449 23 view .LVU9112
 32480 0044 FFF7FEFF 		bl	bno055_write_page_id
 32481              	.LVL4022:
15451:Core/Src/bno055.c ****         {
 32482              		.loc 1 15451 9 is_stmt 1 view .LVU9113
15451:Core/Src/bno055.c ****         {
 32483              		.loc 1 15451 12 is_stmt 0 view .LVU9114
 32484 0048 0028     		cmp	r0, #0
 32485 004a EAD0     		beq	.L2271
 32486 004c E4E7     		b	.L2270
 32487              	.LVL4023:
 32488              	.L2272:
15440:Core/Src/bno055.c ****     }
 32489              		.loc 1 15440 16 view .LVU9115
 32490 004e 6FF07E00 		mvn	r0, #126
 32491              	.LVL4024:
15440:Core/Src/bno055.c ****     }
 32492              		.loc 1 15440 16 view .LVU9116
 32493 0052 F4E7     		b	.L2269
 32494              	.LVL4025:
 32495              	.L2273:
15462:Core/Src/bno055.c ****         }
 32496              		.loc 1 15462 22 view .LVU9117
 32497 0054 4FF0FF30 		mov	r0, #-1
 32498 0058 F1E7     		b	.L2269
 32499              	.L2277:
 32500 005a 00BF     		.align	2
 32501              	.L2276:
 32502 005c 00000000 		.word	.LANCHOR0
 32503              		.cfi_endproc
 32504              	.LFE227:
 32506              		.section	.text.bno055_set_accel_any_motion_durn,"ax",%progbits
 32507              		.align	1
 32508              		.global	bno055_set_accel_any_motion_durn
 32509              		.syntax unified
 32510              		.thumb
 32511              		.thumb_func
 32513              	bno055_set_accel_any_motion_durn:
 32514              	.LVL4026:
ARM GAS  /tmp/ccO72alg.s 			page 910


 32515              	.LFB228:
15468:Core/Src/bno055.c **** 
15469:Core/Src/bno055.c **** /*!
15470:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion duration
15471:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 0 to 1
15472:Core/Src/bno055.c ****  *
15473:Core/Src/bno055.c ****  *  @param accel_any_motion_durn_u8 : The value of accel anymotion duration
15474:Core/Src/bno055.c ****  *
15475:Core/Src/bno055.c ****  * accel_any_motion_durn_u8  | result
15476:Core/Src/bno055.c ****  *  -------------------------  | -------------
15477:Core/Src/bno055.c ****  *              0x01           | BNO055_BIT_ENABLE
15478:Core/Src/bno055.c ****  *              0x00           | BNO055_BIT_DISABLE
15479:Core/Src/bno055.c ****  *
15480:Core/Src/bno055.c ****  *  @return results of bus communication function
15481:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15482:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15483:Core/Src/bno055.c ****  *
15484:Core/Src/bno055.c ****  *
15485:Core/Src/bno055.c ****  */
15486:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_durn(u8 accel_any_motion_durn_u8)
15487:Core/Src/bno055.c **** {
 32516              		.loc 1 15487 1 is_stmt 1 view -0
 32517              		.cfi_startproc
 32518              		@ args = 0, pretend = 0, frame = 8
 32519              		@ frame_needed = 0, uses_anonymous_args = 0
 32520              		.loc 1 15487 1 is_stmt 0 view .LVU9119
 32521 0000 30B5     		push	{r4, r5, lr}
 32522              	.LCFI905:
 32523              		.cfi_def_cfa_offset 12
 32524              		.cfi_offset 4, -12
 32525              		.cfi_offset 5, -8
 32526              		.cfi_offset 14, -4
 32527 0002 83B0     		sub	sp, sp, #12
 32528              	.LCFI906:
 32529              		.cfi_def_cfa_offset 24
15488:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32530              		.loc 1 15488 5 is_stmt 1 view .LVU9120
 32531              	.LVL4027:
15489:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32532              		.loc 1 15489 5 view .LVU9121
 32533              		.loc 1 15489 8 is_stmt 0 view .LVU9122
 32534 0004 0023     		movs	r3, #0
 32535 0006 8DF80730 		strb	r3, [sp, #7]
15490:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32536              		.loc 1 15490 5 is_stmt 1 view .LVU9123
 32537              	.LVL4028:
15491:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32538              		.loc 1 15491 5 view .LVU9124
15492:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32539              		.loc 1 15492 5 view .LVU9125
 32540              		.loc 1 15492 8 is_stmt 0 view .LVU9126
 32541 000a 8DF80630 		strb	r3, [sp, #6]
15493:Core/Src/bno055.c **** 
15494:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15495:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32542              		.loc 1 15495 5 is_stmt 1 view .LVU9127
 32543              		.loc 1 15495 18 is_stmt 0 view .LVU9128
ARM GAS  /tmp/ccO72alg.s 			page 911


 32544 000e 294B     		ldr	r3, .L2290
 32545 0010 1B68     		ldr	r3, [r3]
 32546              		.loc 1 15495 8 view .LVU9129
 32547 0012 002B     		cmp	r3, #0
 32548 0014 4AD0     		beq	.L2282
 32549 0016 0546     		mov	r5, r0
15496:Core/Src/bno055.c ****     {
15497:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15498:Core/Src/bno055.c ****     }
15499:Core/Src/bno055.c ****     else
15500:Core/Src/bno055.c ****     {
15501:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15502:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15503:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15504:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32550              		.loc 1 15504 9 is_stmt 1 view .LVU9130
 32551              		.loc 1 15504 19 is_stmt 0 view .LVU9131
 32552 0018 0DF10600 		add	r0, sp, #6
 32553              	.LVL4029:
 32554              		.loc 1 15504 19 view .LVU9132
 32555 001c FFF7FEFF 		bl	bno055_get_operation_mode
 32556              	.LVL4030:
15505:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32557              		.loc 1 15505 9 is_stmt 1 view .LVU9133
 32558              		.loc 1 15505 12 is_stmt 0 view .LVU9134
 32559 0020 0446     		mov	r4, r0
 32560 0022 90BB     		cbnz	r0, .L2283
15506:Core/Src/bno055.c ****         {
15507:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32561              		.loc 1 15507 13 is_stmt 1 view .LVU9135
 32562              		.loc 1 15507 32 is_stmt 0 view .LVU9136
 32563 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32564              		.loc 1 15507 16 view .LVU9137
 32565 0028 1BB9     		cbnz	r3, .L2287
 32566              	.LVL4031:
 32567              	.L2281:
15508:Core/Src/bno055.c ****             {
15509:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15510:Core/Src/bno055.c ****             }
15511:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32568              		.loc 1 15511 13 is_stmt 1 view .LVU9138
 32569              		.loc 1 15511 16 is_stmt 0 view .LVU9139
 32570 002a 44B1     		cbz	r4, .L2288
15512:Core/Src/bno055.c ****             {
15513:Core/Src/bno055.c ****                 /* Write page as one */
15514:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15515:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15516:Core/Src/bno055.c ****                 {
15517:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15518:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
15519:Core/Src/bno055.c ****                                                               &data_u8r,
15520:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15521:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
15522:Core/Src/bno055.c ****                     {
15523:Core/Src/bno055.c ****                         /* Write the value of
15524:Core/Src/bno055.c ****                          * accel anymotion duration*/
15525:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 912


15526:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
15527:Core/Src/bno055.c ****                                                        accel_any_motion_durn_u8);
15528:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15529:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
15530:Core/Src/bno055.c ****                                                                     &data_u8r,
15531:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
15532:Core/Src/bno055.c ****                     }
15533:Core/Src/bno055.c ****                 }
15534:Core/Src/bno055.c ****                 else
15535:Core/Src/bno055.c ****                 {
15536:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15537:Core/Src/bno055.c ****                 }
15538:Core/Src/bno055.c ****             }
15539:Core/Src/bno055.c ****             else
15540:Core/Src/bno055.c ****             {
15541:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32571              		.loc 1 15541 26 view .LVU9140
 32572 002c 4FF0FF34 		mov	r4, #-1
 32573              	.LVL4032:
 32574              		.loc 1 15541 26 view .LVU9141
 32575 0030 2DE0     		b	.L2280
 32576              	.LVL4033:
 32577              	.L2287:
15509:Core/Src/bno055.c ****             }
 32578              		.loc 1 15509 17 is_stmt 1 view .LVU9142
15509:Core/Src/bno055.c ****             }
 32579              		.loc 1 15509 28 is_stmt 0 view .LVU9143
 32580 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 32581              	.LVL4034:
15509:Core/Src/bno055.c ****             }
 32582              		.loc 1 15509 25 view .LVU9144
 32583 0036 54FA80F4 		uxtab	r4, r4, r0
 32584 003a 64B2     		sxtb	r4, r4
 32585              	.LVL4035:
15509:Core/Src/bno055.c ****             }
 32586              		.loc 1 15509 25 view .LVU9145
 32587 003c F5E7     		b	.L2281
 32588              	.L2288:
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32589              		.loc 1 15514 17 is_stmt 1 view .LVU9146
15514:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32590              		.loc 1 15514 30 is_stmt 0 view .LVU9147
 32591 003e 0120     		movs	r0, #1
 32592 0040 FFF7FEFF 		bl	bno055_write_page_id
 32593              	.LVL4036:
15515:Core/Src/bno055.c ****                 {
 32594              		.loc 1 15515 17 is_stmt 1 view .LVU9148
15515:Core/Src/bno055.c ****                 {
 32595              		.loc 1 15515 20 is_stmt 0 view .LVU9149
 32596 0044 48BB     		cbnz	r0, .L2285
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32597              		.loc 1 15517 21 is_stmt 1 view .LVU9150
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32598              		.loc 1 15517 40 is_stmt 0 view .LVU9151
 32599 0046 1B4B     		ldr	r3, .L2290
 32600 0048 1868     		ldr	r0, [r3]
 32601              	.LVL4037:
ARM GAS  /tmp/ccO72alg.s 			page 913


15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32602              		.loc 1 15517 40 view .LVU9152
 32603 004a 0469     		ldr	r4, [r0, #16]
 32604              	.LVL4038:
15517:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_DURN_SET_REG,
 32605              		.loc 1 15517 32 view .LVU9153
 32606 004c 0123     		movs	r3, #1
 32607 004e 0DF10702 		add	r2, sp, #7
 32608 0052 1221     		movs	r1, #18
 32609 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32610 0056 A047     		blx	r4
 32611              	.LVL4039:
15521:Core/Src/bno055.c ****                     {
 32612              		.loc 1 15521 21 is_stmt 1 view .LVU9154
15521:Core/Src/bno055.c ****                     {
 32613              		.loc 1 15521 24 is_stmt 0 view .LVU9155
 32614 0058 0446     		mov	r4, r0
 32615 005a C0B9     		cbnz	r0, .L2280
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32616              		.loc 1 15525 25 is_stmt 1 view .LVU9156
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32617              		.loc 1 15525 36 is_stmt 0 view .LVU9157
 32618 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 32619              	.LVL4040:
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32620              		.loc 1 15525 36 view .LVU9158
 32621 0060 20F00300 		bic	r0, r0, #3
 32622 0064 43B2     		sxtb	r3, r0
 32623 0066 05F00300 		and	r0, r5, #3
 32624 006a 1843     		orrs	r0, r0, r3
15525:Core/Src/bno055.c ****                                                        BNO055_ACCEL_ANY_MOTION_DURN_SET,
 32625              		.loc 1 15525 34 view .LVU9159
 32626 006c 8DF80700 		strb	r0, [sp, #7]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32627              		.loc 1 15528 25 is_stmt 1 view .LVU9160
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32628              		.loc 1 15528 45 is_stmt 0 view .LVU9161
 32629 0070 104B     		ldr	r3, .L2290
 32630 0072 1868     		ldr	r0, [r3]
 32631 0074 C568     		ldr	r5, [r0, #12]
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32632              		.loc 1 15528 37 view .LVU9162
 32633 0076 0123     		movs	r3, #1
 32634 0078 0DF10702 		add	r2, sp, #7
 32635 007c 1221     		movs	r1, #18
 32636 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32637 0080 A847     		blx	r5
 32638              	.LVL4041:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32639              		.loc 1 15528 34 view .LVU9163
 32640 0082 54FA80F4 		uxtab	r4, r4, r0
 32641 0086 64B2     		sxtb	r4, r4
 32642              	.LVL4042:
15528:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_ANY_MOTION_DURN_SE
 32643              		.loc 1 15528 34 view .LVU9164
 32644 0088 01E0     		b	.L2280
 32645              	.LVL4043:
ARM GAS  /tmp/ccO72alg.s 			page 914


 32646              	.L2283:
15542:Core/Src/bno055.c ****             }
15543:Core/Src/bno055.c ****         }
15544:Core/Src/bno055.c ****         else
15545:Core/Src/bno055.c ****         {
15546:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 32647              		.loc 1 15546 22 view .LVU9165
 32648 008a 4FF0FF34 		mov	r4, #-1
 32649              	.LVL4044:
 32650              	.L2280:
15547:Core/Src/bno055.c ****         }
15548:Core/Src/bno055.c ****     }
15549:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32651              		.loc 1 15549 5 is_stmt 1 view .LVU9166
 32652              		.loc 1 15549 24 is_stmt 0 view .LVU9167
 32653 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 32654              		.loc 1 15549 8 view .LVU9168
 32655 0092 28B9     		cbnz	r0, .L2289
 32656              	.LVL4045:
 32657              	.L2279:
15550:Core/Src/bno055.c ****     {
15551:Core/Src/bno055.c ****         /* set the operation mode of
15552:Core/Src/bno055.c ****          * previous operation mode*/
15553:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15554:Core/Src/bno055.c ****     }
15555:Core/Src/bno055.c **** 
15556:Core/Src/bno055.c ****     return com_rslt;
15557:Core/Src/bno055.c **** }
 32658              		.loc 1 15557 1 view .LVU9169
 32659 0094 2046     		mov	r0, r4
 32660 0096 03B0     		add	sp, sp, #12
 32661              	.LCFI907:
 32662              		.cfi_remember_state
 32663              		.cfi_def_cfa_offset 12
 32664              		@ sp needed
 32665 0098 30BD     		pop	{r4, r5, pc}
 32666              	.LVL4046:
 32667              	.L2285:
 32668              	.LCFI908:
 32669              		.cfi_restore_state
15536:Core/Src/bno055.c ****                 }
 32670              		.loc 1 15536 30 view .LVU9170
 32671 009a 4FF0FF34 		mov	r4, #-1
 32672              	.LVL4047:
15536:Core/Src/bno055.c ****                 }
 32673              		.loc 1 15536 30 view .LVU9171
 32674 009e F6E7     		b	.L2280
 32675              	.LVL4048:
 32676              	.L2289:
15553:Core/Src/bno055.c ****     }
 32677              		.loc 1 15553 9 is_stmt 1 view .LVU9172
15553:Core/Src/bno055.c ****     }
 32678              		.loc 1 15553 21 is_stmt 0 view .LVU9173
 32679 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 32680              	.LVL4049:
15553:Core/Src/bno055.c ****     }
 32681              		.loc 1 15553 18 view .LVU9174
ARM GAS  /tmp/ccO72alg.s 			page 915


 32682 00a4 54FA80F4 		uxtab	r4, r4, r0
 32683              	.LVL4050:
15553:Core/Src/bno055.c ****     }
 32684              		.loc 1 15553 18 view .LVU9175
 32685 00a8 64B2     		sxtb	r4, r4
 32686              	.LVL4051:
15553:Core/Src/bno055.c ****     }
 32687              		.loc 1 15553 18 view .LVU9176
 32688 00aa F3E7     		b	.L2279
 32689              	.LVL4052:
 32690              	.L2282:
15497:Core/Src/bno055.c ****     }
 32691              		.loc 1 15497 16 view .LVU9177
 32692 00ac 6FF07E04 		mvn	r4, #126
 32693 00b0 F0E7     		b	.L2279
 32694              	.L2291:
 32695 00b2 00BF     		.align	2
 32696              	.L2290:
 32697 00b4 00000000 		.word	.LANCHOR0
 32698              		.cfi_endproc
 32699              	.LFE228:
 32701              		.section	.text.bno055_get_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 32702              		.align	1
 32703              		.global	bno055_get_accel_any_motion_no_motion_axis_enable
 32704              		.syntax unified
 32705              		.thumb
 32706              		.thumb_func
 32708              	bno055_get_accel_any_motion_no_motion_axis_enable:
 32709              	.LVL4053:
 32710              	.LFB229:
15558:Core/Src/bno055.c **** 
15559:Core/Src/bno055.c **** /*!
15560:Core/Src/bno055.c ****  *  @brief This API used to read the accel anymotion enable
15561:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15562:Core/Src/bno055.c ****  *
15563:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15564:Core/Src/bno055.c ****  *     data_u8 | result
15565:Core/Src/bno055.c ****  *  ------------ | -------------
15566:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15567:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15568:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15569:Core/Src/bno055.c ****  *           channel_u8                        | value
15570:Core/Src/bno055.c ****  *     --------------------------                | ----------
15571:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15572:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15573:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15574:Core/Src/bno055.c ****  *
15575:Core/Src/bno055.c ****  *  @return results of bus communication function
15576:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15577:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15578:Core/Src/bno055.c ****  *
15579:Core/Src/bno055.c ****  *
15580:Core/Src/bno055.c ****  */
15581:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 *da
15582:Core/Src/bno055.c **** {
 32711              		.loc 1 15582 1 is_stmt 1 view -0
 32712              		.cfi_startproc
ARM GAS  /tmp/ccO72alg.s 			page 916


 32713              		@ args = 0, pretend = 0, frame = 8
 32714              		@ frame_needed = 0, uses_anonymous_args = 0
 32715              		.loc 1 15582 1 is_stmt 0 view .LVU9179
 32716 0000 30B5     		push	{r4, r5, lr}
 32717              	.LCFI909:
 32718              		.cfi_def_cfa_offset 12
 32719              		.cfi_offset 4, -12
 32720              		.cfi_offset 5, -8
 32721              		.cfi_offset 14, -4
 32722 0002 83B0     		sub	sp, sp, #12
 32723              	.LCFI910:
 32724              		.cfi_def_cfa_offset 24
15583:Core/Src/bno055.c ****     /* Variable used to return value of
15584:Core/Src/bno055.c ****      * communication routine*/
15585:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32725              		.loc 1 15585 5 is_stmt 1 view .LVU9180
 32726              	.LVL4054:
15586:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32727              		.loc 1 15586 5 view .LVU9181
 32728              		.loc 1 15586 8 is_stmt 0 view .LVU9182
 32729 0004 0023     		movs	r3, #0
 32730 0006 8DF80730 		strb	r3, [sp, #7]
15587:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32731              		.loc 1 15587 5 is_stmt 1 view .LVU9183
 32732              	.LVL4055:
15588:Core/Src/bno055.c **** 
15589:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15590:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32733              		.loc 1 15590 5 view .LVU9184
 32734              		.loc 1 15590 18 is_stmt 0 view .LVU9185
 32735 000a 284B     		ldr	r3, .L2304
 32736 000c 1B68     		ldr	r3, [r3]
 32737              		.loc 1 15590 8 view .LVU9186
 32738 000e 002B     		cmp	r3, #0
 32739 0010 45D0     		beq	.L2298
 32740 0012 0446     		mov	r4, r0
 32741 0014 0D46     		mov	r5, r1
15591:Core/Src/bno055.c ****     {
15592:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15593:Core/Src/bno055.c ****     }
15594:Core/Src/bno055.c ****     else
15595:Core/Src/bno055.c ****     {
15596:Core/Src/bno055.c ****         /*condition check for page, accel anymotion enable is
15597:Core/Src/bno055.c ****          * available in the page one*/
15598:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 32742              		.loc 1 15598 9 is_stmt 1 view .LVU9187
 32743              		.loc 1 15598 21 is_stmt 0 view .LVU9188
 32744 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32745              		.loc 1 15598 12 view .LVU9189
 32746 0018 012B     		cmp	r3, #1
 32747 001a 0DD1     		bne	.L2302
 32748              	.LVL4056:
 32749              	.L2294:
15599:Core/Src/bno055.c ****         {
15600:Core/Src/bno055.c ****             /* Write page as one */
15601:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15602:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 917


15603:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 32750              		.loc 1 15603 53 discriminator 1 view .LVU9190
 32751 001c 234B     		ldr	r3, .L2304
 32752 001e 1B68     		ldr	r3, [r3]
 32753 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 32754              		.loc 1 15603 41 discriminator 1 view .LVU9191
 32755 0022 012B     		cmp	r3, #1
 32756 0024 3ED1     		bne	.L2299
 32757              	.L2295:
15604:Core/Src/bno055.c ****         {
15605:Core/Src/bno055.c ****             switch (channel_u8)
 32758              		.loc 1 15605 13 is_stmt 1 view .LVU9192
 32759 0026 012C     		cmp	r4, #1
 32760 0028 1BD0     		beq	.L2296
 32761 002a 022C     		cmp	r4, #2
 32762 002c 28D0     		beq	.L2297
 32763 002e 4CB1     		cbz	r4, .L2303
 32764 0030 6FF00100 		mvn	r0, #1
 32765              	.LVL4057:
 32766              	.L2293:
15606:Core/Src/bno055.c ****             {
15607:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15608:Core/Src/bno055.c **** 
15609:Core/Src/bno055.c ****                     /* Read the value of accel anymotion x enable*/
15610:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15611:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
15612:Core/Src/bno055.c ****                                                               &data_u8r,
15613:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15614:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_AXIS);
15615:Core/Src/bno055.c ****                     break;
15616:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15617:Core/Src/bno055.c **** 
15618:Core/Src/bno055.c ****                     /* Read the value of accel anymotion y enable*/
15619:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15620:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
15621:Core/Src/bno055.c ****                                                               &data_u8r,
15622:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15623:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_AXIS);
15624:Core/Src/bno055.c ****                     break;
15625:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15626:Core/Src/bno055.c **** 
15627:Core/Src/bno055.c ****                     /* Read the value of accel anymotion z enable*/
15628:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15629:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
15630:Core/Src/bno055.c ****                                                               &data_u8r,
15631:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15632:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_AXIS);
15633:Core/Src/bno055.c ****                     break;
15634:Core/Src/bno055.c ****                 default:
15635:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15636:Core/Src/bno055.c ****                     break;
15637:Core/Src/bno055.c ****             }
15638:Core/Src/bno055.c ****         }
15639:Core/Src/bno055.c ****         else
15640:Core/Src/bno055.c ****         {
15641:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15642:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 918


15643:Core/Src/bno055.c ****     }
15644:Core/Src/bno055.c **** 
15645:Core/Src/bno055.c ****     return com_rslt;
15646:Core/Src/bno055.c **** }
 32767              		.loc 1 15646 1 is_stmt 0 view .LVU9193
 32768 0034 03B0     		add	sp, sp, #12
 32769              	.LCFI911:
 32770              		.cfi_remember_state
 32771              		.cfi_def_cfa_offset 12
 32772              		@ sp needed
 32773 0036 30BD     		pop	{r4, r5, pc}
 32774              	.LVL4058:
 32775              	.L2302:
 32776              	.LCFI912:
 32777              		.cfi_restore_state
15601:Core/Src/bno055.c ****         }
 32778              		.loc 1 15601 13 is_stmt 1 view .LVU9194
15601:Core/Src/bno055.c ****         }
 32779              		.loc 1 15601 23 is_stmt 0 view .LVU9195
 32780 0038 0120     		movs	r0, #1
 32781              	.LVL4059:
15601:Core/Src/bno055.c ****         }
 32782              		.loc 1 15601 23 view .LVU9196
 32783 003a FFF7FEFF 		bl	bno055_write_page_id
 32784              	.LVL4060:
15603:Core/Src/bno055.c ****         {
 32785              		.loc 1 15603 9 is_stmt 1 view .LVU9197
15603:Core/Src/bno055.c ****         {
 32786              		.loc 1 15603 12 is_stmt 0 view .LVU9198
 32787 003e 0028     		cmp	r0, #0
 32788 0040 F1D0     		beq	.L2295
 32789 0042 EBE7     		b	.L2294
 32790              	.LVL4061:
 32791              	.L2303:
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 32792              		.loc 1 15610 21 is_stmt 1 view .LVU9199
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 32793              		.loc 1 15610 40 is_stmt 0 view .LVU9200
 32794 0044 194B     		ldr	r3, .L2304
 32795 0046 1868     		ldr	r0, [r3]
 32796 0048 0469     		ldr	r4, [r0, #16]
15610:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_X_AXIS_REG,
 32797              		.loc 1 15610 32 view .LVU9201
 32798 004a 0123     		movs	r3, #1
 32799 004c 0DF10702 		add	r2, sp, #7
 32800 0050 1221     		movs	r1, #18
 32801 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32802 0054 A047     		blx	r4
 32803              	.LVL4062:
15614:Core/Src/bno055.c ****                     break;
 32804              		.loc 1 15614 21 is_stmt 1 view .LVU9202
15614:Core/Src/bno055.c ****                     break;
 32805              		.loc 1 15614 32 is_stmt 0 view .LVU9203
 32806 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32807 005a C3F38003 		ubfx	r3, r3, #2, #1
15614:Core/Src/bno055.c ****                     break;
 32808              		.loc 1 15614 30 view .LVU9204
ARM GAS  /tmp/ccO72alg.s 			page 919


 32809 005e 2B70     		strb	r3, [r5]
15615:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
 32810              		.loc 1 15615 21 is_stmt 1 view .LVU9205
 32811 0060 E8E7     		b	.L2293
 32812              	.LVL4063:
 32813              	.L2296:
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 32814              		.loc 1 15619 21 view .LVU9206
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 32815              		.loc 1 15619 40 is_stmt 0 view .LVU9207
 32816 0062 124B     		ldr	r3, .L2304
 32817 0064 1868     		ldr	r0, [r3]
 32818 0066 0469     		ldr	r4, [r0, #16]
15619:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Y_AXIS_REG,
 32819              		.loc 1 15619 32 view .LVU9208
 32820 0068 0123     		movs	r3, #1
 32821 006a 0DF10702 		add	r2, sp, #7
 32822 006e 1221     		movs	r1, #18
 32823 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32824 0072 A047     		blx	r4
 32825              	.LVL4064:
15623:Core/Src/bno055.c ****                     break;
 32826              		.loc 1 15623 21 is_stmt 1 view .LVU9209
15623:Core/Src/bno055.c ****                     break;
 32827              		.loc 1 15623 32 is_stmt 0 view .LVU9210
 32828 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32829 0078 C3F3C003 		ubfx	r3, r3, #3, #1
15623:Core/Src/bno055.c ****                     break;
 32830              		.loc 1 15623 30 view .LVU9211
 32831 007c 2B70     		strb	r3, [r5]
15624:Core/Src/bno055.c ****                 case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
 32832              		.loc 1 15624 21 is_stmt 1 view .LVU9212
 32833 007e D9E7     		b	.L2293
 32834              	.LVL4065:
 32835              	.L2297:
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 32836              		.loc 1 15628 21 view .LVU9213
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 32837              		.loc 1 15628 40 is_stmt 0 view .LVU9214
 32838 0080 0A4B     		ldr	r3, .L2304
 32839 0082 1868     		ldr	r0, [r3]
 32840 0084 0469     		ldr	r4, [r0, #16]
15628:Core/Src/bno055.c ****                                                               BNO055_ACCEL_ANY_MOTION_Z_AXIS_REG,
 32841              		.loc 1 15628 32 view .LVU9215
 32842 0086 0123     		movs	r3, #1
 32843 0088 0DF10702 		add	r2, sp, #7
 32844 008c 1221     		movs	r1, #18
 32845 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32846 0090 A047     		blx	r4
 32847              	.LVL4066:
15632:Core/Src/bno055.c ****                     break;
 32848              		.loc 1 15632 21 is_stmt 1 view .LVU9216
15632:Core/Src/bno055.c ****                     break;
 32849              		.loc 1 15632 32 is_stmt 0 view .LVU9217
 32850 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32851 0096 C3F30013 		ubfx	r3, r3, #4, #1
15632:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccO72alg.s 			page 920


 32852              		.loc 1 15632 30 view .LVU9218
 32853 009a 2B70     		strb	r3, [r5]
15633:Core/Src/bno055.c ****                 default:
 32854              		.loc 1 15633 21 is_stmt 1 view .LVU9219
 32855 009c CAE7     		b	.L2293
 32856              	.LVL4067:
 32857              	.L2298:
15592:Core/Src/bno055.c ****     }
 32858              		.loc 1 15592 16 is_stmt 0 view .LVU9220
 32859 009e 6FF07E00 		mvn	r0, #126
 32860              	.LVL4068:
15592:Core/Src/bno055.c ****     }
 32861              		.loc 1 15592 16 view .LVU9221
 32862 00a2 C7E7     		b	.L2293
 32863              	.LVL4069:
 32864              	.L2299:
15641:Core/Src/bno055.c ****         }
 32865              		.loc 1 15641 22 view .LVU9222
 32866 00a4 4FF0FF30 		mov	r0, #-1
 32867 00a8 C4E7     		b	.L2293
 32868              	.L2305:
 32869 00aa 00BF     		.align	2
 32870              	.L2304:
 32871 00ac 00000000 		.word	.LANCHOR0
 32872              		.cfi_endproc
 32873              	.LFE229:
 32875              		.section	.text.bno055_set_accel_any_motion_no_motion_axis_enable,"ax",%progbits
 32876              		.align	1
 32877              		.global	bno055_set_accel_any_motion_no_motion_axis_enable
 32878              		.syntax unified
 32879              		.thumb
 32880              		.thumb_func
 32882              	bno055_set_accel_any_motion_no_motion_axis_enable:
 32883              	.LVL4070:
 32884              	.LFB230:
15647:Core/Src/bno055.c **** 
15648:Core/Src/bno055.c **** /*!
15649:Core/Src/bno055.c ****  *  @brief This API used to write the accel anymotion enable
15650:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 2 to 4
15651:Core/Src/bno055.c ****  *
15652:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel anymotion enable
15653:Core/Src/bno055.c ****  *     data_u8 | result
15654:Core/Src/bno055.c ****  *  ------------ | -------------
15655:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15656:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15657:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel anymotion axis selection
15658:Core/Src/bno055.c ****  *           channel_u8                        | value
15659:Core/Src/bno055.c ****  *     --------------------------                | ----------
15660:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS  |   0
15661:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   1
15662:Core/Src/bno055.c ****  *     BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS  |   2
15663:Core/Src/bno055.c ****  *
15664:Core/Src/bno055.c ****  *  @return results of bus communication function
15665:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15666:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15667:Core/Src/bno055.c ****  *
15668:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 921


15669:Core/Src/bno055.c ****  */
15670:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_any_motion_no_motion_axis_enable(u8 channel_u8, u8 dat
15671:Core/Src/bno055.c **** {
 32885              		.loc 1 15671 1 is_stmt 1 view -0
 32886              		.cfi_startproc
 32887              		@ args = 0, pretend = 0, frame = 8
 32888              		@ frame_needed = 0, uses_anonymous_args = 0
 32889              		.loc 1 15671 1 is_stmt 0 view .LVU9224
 32890 0000 70B5     		push	{r4, r5, r6, lr}
 32891              	.LCFI913:
 32892              		.cfi_def_cfa_offset 16
 32893              		.cfi_offset 4, -16
 32894              		.cfi_offset 5, -12
 32895              		.cfi_offset 6, -8
 32896              		.cfi_offset 14, -4
 32897 0002 82B0     		sub	sp, sp, #8
 32898              	.LCFI914:
 32899              		.cfi_def_cfa_offset 24
15672:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 32900              		.loc 1 15672 5 is_stmt 1 view .LVU9225
 32901              	.LVL4071:
15673:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 32902              		.loc 1 15673 5 view .LVU9226
 32903              		.loc 1 15673 8 is_stmt 0 view .LVU9227
 32904 0004 0023     		movs	r3, #0
 32905 0006 8DF80730 		strb	r3, [sp, #7]
15674:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 32906              		.loc 1 15674 5 is_stmt 1 view .LVU9228
 32907              	.LVL4072:
15675:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 32908              		.loc 1 15675 5 view .LVU9229
15676:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 32909              		.loc 1 15676 5 view .LVU9230
 32910              		.loc 1 15676 8 is_stmt 0 view .LVU9231
 32911 000a 8DF80630 		strb	r3, [sp, #6]
15677:Core/Src/bno055.c **** 
15678:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15679:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 32912              		.loc 1 15679 5 is_stmt 1 view .LVU9232
 32913              		.loc 1 15679 18 is_stmt 0 view .LVU9233
 32914 000e 544B     		ldr	r3, .L2322
 32915 0010 1B68     		ldr	r3, [r3]
 32916              		.loc 1 15679 8 view .LVU9234
 32917 0012 002B     		cmp	r3, #0
 32918 0014 00F0A080 		beq	.L2312
 32919 0018 0446     		mov	r4, r0
 32920 001a 0D46     		mov	r5, r1
15680:Core/Src/bno055.c ****     {
15681:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15682:Core/Src/bno055.c ****     }
15683:Core/Src/bno055.c ****     else
15684:Core/Src/bno055.c ****     {
15685:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15686:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15687:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15688:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 32921              		.loc 1 15688 9 is_stmt 1 view .LVU9235
ARM GAS  /tmp/ccO72alg.s 			page 922


 32922              		.loc 1 15688 19 is_stmt 0 view .LVU9236
 32923 001c 0DF10600 		add	r0, sp, #6
 32924              	.LVL4073:
 32925              		.loc 1 15688 19 view .LVU9237
 32926 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 32927              	.LVL4074:
15689:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 32928              		.loc 1 15689 9 is_stmt 1 view .LVU9238
 32929              		.loc 1 15689 12 is_stmt 0 view .LVU9239
 32930 0024 0646     		mov	r6, r0
 32931 0026 0028     		cmp	r0, #0
 32932 0028 40F08580 		bne	.L2313
15690:Core/Src/bno055.c ****         {
15691:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 32933              		.loc 1 15691 13 is_stmt 1 view .LVU9240
 32934              		.loc 1 15691 32 is_stmt 0 view .LVU9241
 32935 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 32936              		.loc 1 15691 16 view .LVU9242
 32937 0030 1BB9     		cbnz	r3, .L2318
 32938              	.LVL4075:
 32939              	.L2309:
15692:Core/Src/bno055.c ****             {
15693:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15694:Core/Src/bno055.c ****             }
15695:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 32940              		.loc 1 15695 13 is_stmt 1 view .LVU9243
 32941              		.loc 1 15695 16 is_stmt 0 view .LVU9244
 32942 0032 46B1     		cbz	r6, .L2319
15696:Core/Src/bno055.c ****             {
15697:Core/Src/bno055.c ****                 /* Write page as one */
15698:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15699:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15700:Core/Src/bno055.c ****                 {
15701:Core/Src/bno055.c ****                     switch (channel_u8)
15702:Core/Src/bno055.c ****                     {
15703:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_X_AXIS:
15704:Core/Src/bno055.c **** 
15705:Core/Src/bno055.c ****                             /* Write the value of
15706:Core/Src/bno055.c ****                              * accel anymotion x enable*/
15707:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15708:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
15709:Core/Src/bno055.c ****                                                                       &data_u8r,
15710:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15711:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15712:Core/Src/bno055.c ****                             {
15713:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_X_
15714:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15715:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15716:Core/Src/bno055.c ****                                                                             &data_u8r,
15717:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15718:Core/Src/bno055.c ****                             }
15719:Core/Src/bno055.c ****                             break;
15720:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Y_AXIS:
15721:Core/Src/bno055.c **** 
15722:Core/Src/bno055.c ****                             /* Write the value of
15723:Core/Src/bno055.c ****                              * accel anymotion y enable*/
15724:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 923


15725:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
15726:Core/Src/bno055.c ****                                                                       &data_u8r,
15727:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15728:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15729:Core/Src/bno055.c ****                             {
15730:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Y_
15731:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15732:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15733:Core/Src/bno055.c ****                                                                             &data_u8r,
15734:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15735:Core/Src/bno055.c ****                             }
15736:Core/Src/bno055.c ****                             break;
15737:Core/Src/bno055.c ****                         case BNO055_ACCEL_ANY_MOTION_NO_MOTION_Z_AXIS:
15738:Core/Src/bno055.c **** 
15739:Core/Src/bno055.c ****                             /* Write the value of
15740:Core/Src/bno055.c ****                              * accel anymotion z enable*/
15741:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15742:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
15743:Core/Src/bno055.c ****                                                                       &data_u8r,
15744:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15745:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15746:Core/Src/bno055.c ****                             {
15747:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_ANY_MOTION_Z_
15748:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15749:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
15750:Core/Src/bno055.c ****                                                                             &data_u8r,
15751:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15752:Core/Src/bno055.c ****                             }
15753:Core/Src/bno055.c ****                             break;
15754:Core/Src/bno055.c ****                         default:
15755:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15756:Core/Src/bno055.c ****                             break;
15757:Core/Src/bno055.c ****                     }
15758:Core/Src/bno055.c ****                 }
15759:Core/Src/bno055.c ****                 else
15760:Core/Src/bno055.c ****                 {
15761:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15762:Core/Src/bno055.c ****                 }
15763:Core/Src/bno055.c ****             }
15764:Core/Src/bno055.c ****             else
15765:Core/Src/bno055.c ****             {
15766:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 32943              		.loc 1 15766 26 view .LVU9245
 32944 0034 4FF0FF34 		mov	r4, #-1
 32945 0038 7FE0     		b	.L2308
 32946              	.LVL4076:
 32947              	.L2318:
15693:Core/Src/bno055.c ****             }
 32948              		.loc 1 15693 17 is_stmt 1 view .LVU9246
15693:Core/Src/bno055.c ****             }
 32949              		.loc 1 15693 28 is_stmt 0 view .LVU9247
 32950 003a FFF7FEFF 		bl	bno055_set_operation_mode
 32951              	.LVL4077:
15693:Core/Src/bno055.c ****             }
 32952              		.loc 1 15693 25 view .LVU9248
 32953 003e 56FA80F6 		uxtab	r6, r6, r0
 32954 0042 76B2     		sxtb	r6, r6
ARM GAS  /tmp/ccO72alg.s 			page 924


 32955              	.LVL4078:
15693:Core/Src/bno055.c ****             }
 32956              		.loc 1 15693 25 view .LVU9249
 32957 0044 F5E7     		b	.L2309
 32958              	.L2319:
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32959              		.loc 1 15698 17 is_stmt 1 view .LVU9250
15698:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 32960              		.loc 1 15698 30 is_stmt 0 view .LVU9251
 32961 0046 0120     		movs	r0, #1
 32962 0048 FFF7FEFF 		bl	bno055_write_page_id
 32963              	.LVL4079:
15699:Core/Src/bno055.c ****                 {
 32964              		.loc 1 15699 17 is_stmt 1 view .LVU9252
15699:Core/Src/bno055.c ****                 {
 32965              		.loc 1 15699 20 is_stmt 0 view .LVU9253
 32966 004c 0028     		cmp	r0, #0
 32967 004e 7AD1     		bne	.L2315
15701:Core/Src/bno055.c ****                     {
 32968              		.loc 1 15701 21 is_stmt 1 view .LVU9254
 32969 0050 012C     		cmp	r4, #1
 32970 0052 29D0     		beq	.L2310
 32971 0054 022C     		cmp	r4, #2
 32972 0056 4BD0     		beq	.L2311
 32973 0058 14B1     		cbz	r4, .L2320
 32974 005a 6FF00104 		mvn	r4, #1
 32975 005e 6CE0     		b	.L2308
 32976              	.L2320:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32977              		.loc 1 15707 29 view .LVU9255
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32978              		.loc 1 15707 48 is_stmt 0 view .LVU9256
 32979 0060 3F4B     		ldr	r3, .L2322
 32980 0062 1868     		ldr	r0, [r3]
 32981              	.LVL4080:
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32982              		.loc 1 15707 48 view .LVU9257
 32983 0064 0469     		ldr	r4, [r0, #16]
15707:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_X_AXI
 32984              		.loc 1 15707 40 view .LVU9258
 32985 0066 0123     		movs	r3, #1
 32986 0068 0DF10702 		add	r2, sp, #7
 32987 006c 1221     		movs	r1, #18
 32988 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 32989 0070 A047     		blx	r4
 32990              	.LVL4081:
15711:Core/Src/bno055.c ****                             {
 32991              		.loc 1 15711 29 is_stmt 1 view .LVU9259
15711:Core/Src/bno055.c ****                             {
 32992              		.loc 1 15711 32 is_stmt 0 view .LVU9260
 32993 0072 0446     		mov	r4, r0
 32994 0074 0028     		cmp	r0, #0
 32995 0076 60D1     		bne	.L2308
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32996              		.loc 1 15713 33 is_stmt 1 view .LVU9261
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 32997              		.loc 1 15713 44 is_stmt 0 view .LVU9262
ARM GAS  /tmp/ccO72alg.s 			page 925


 32998 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 32999 007c 23F00403 		bic	r3, r3, #4
 33000 0080 5BB2     		sxtb	r3, r3
 33001 0082 AA00     		lsls	r2, r5, #2
 33002 0084 02F00402 		and	r2, r2, #4
 33003 0088 1343     		orrs	r3, r3, r2
15713:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33004              		.loc 1 15713 42 view .LVU9263
 33005 008a 8DF80730 		strb	r3, [sp, #7]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33006              		.loc 1 15714 33 is_stmt 1 view .LVU9264
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33007              		.loc 1 15714 53 is_stmt 0 view .LVU9265
 33008 008e 344B     		ldr	r3, .L2322
 33009 0090 1868     		ldr	r0, [r3]
 33010              	.LVL4082:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33011              		.loc 1 15714 53 view .LVU9266
 33012 0092 C568     		ldr	r5, [r0, #12]
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33013              		.loc 1 15714 45 view .LVU9267
 33014 0094 0123     		movs	r3, #1
 33015 0096 0DF10702 		add	r2, sp, #7
 33016 009a 1221     		movs	r1, #18
 33017 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33018 009e A847     		blx	r5
 33019              	.LVL4083:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33020              		.loc 1 15714 42 view .LVU9268
 33021 00a0 54FA80F4 		uxtab	r4, r4, r0
 33022 00a4 64B2     		sxtb	r4, r4
 33023              	.LVL4084:
15714:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33024              		.loc 1 15714 42 view .LVU9269
 33025 00a6 48E0     		b	.L2308
 33026              	.LVL4085:
 33027              	.L2310:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33028              		.loc 1 15724 29 is_stmt 1 view .LVU9270
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33029              		.loc 1 15724 48 is_stmt 0 view .LVU9271
 33030 00a8 2D4B     		ldr	r3, .L2322
 33031 00aa 1868     		ldr	r0, [r3]
 33032              	.LVL4086:
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33033              		.loc 1 15724 48 view .LVU9272
 33034 00ac 0469     		ldr	r4, [r0, #16]
15724:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Y_AXI
 33035              		.loc 1 15724 40 view .LVU9273
 33036 00ae 0123     		movs	r3, #1
 33037 00b0 0DF10702 		add	r2, sp, #7
 33038 00b4 1221     		movs	r1, #18
 33039 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33040 00b8 A047     		blx	r4
 33041              	.LVL4087:
15728:Core/Src/bno055.c ****                             {
 33042              		.loc 1 15728 29 is_stmt 1 view .LVU9274
ARM GAS  /tmp/ccO72alg.s 			page 926


15728:Core/Src/bno055.c ****                             {
 33043              		.loc 1 15728 32 is_stmt 0 view .LVU9275
 33044 00ba 0446     		mov	r4, r0
 33045 00bc 0028     		cmp	r0, #0
 33046 00be 3CD1     		bne	.L2308
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33047              		.loc 1 15730 33 is_stmt 1 view .LVU9276
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33048              		.loc 1 15730 44 is_stmt 0 view .LVU9277
 33049 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33050 00c4 23F00803 		bic	r3, r3, #8
 33051 00c8 5BB2     		sxtb	r3, r3
 33052 00ca EA00     		lsls	r2, r5, #3
 33053 00cc 02F00802 		and	r2, r2, #8
 33054 00d0 1343     		orrs	r3, r3, r2
15730:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33055              		.loc 1 15730 42 view .LVU9278
 33056 00d2 8DF80730 		strb	r3, [sp, #7]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33057              		.loc 1 15731 33 is_stmt 1 view .LVU9279
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33058              		.loc 1 15731 53 is_stmt 0 view .LVU9280
 33059 00d6 224B     		ldr	r3, .L2322
 33060 00d8 1868     		ldr	r0, [r3]
 33061              	.LVL4088:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33062              		.loc 1 15731 53 view .LVU9281
 33063 00da C568     		ldr	r5, [r0, #12]
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33064              		.loc 1 15731 45 view .LVU9282
 33065 00dc 0123     		movs	r3, #1
 33066 00de 0DF10702 		add	r2, sp, #7
 33067 00e2 1221     		movs	r1, #18
 33068 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33069 00e6 A847     		blx	r5
 33070              	.LVL4089:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33071              		.loc 1 15731 42 view .LVU9283
 33072 00e8 54FA80F4 		uxtab	r4, r4, r0
 33073 00ec 64B2     		sxtb	r4, r4
 33074              	.LVL4090:
15731:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33075              		.loc 1 15731 42 view .LVU9284
 33076 00ee 24E0     		b	.L2308
 33077              	.LVL4091:
 33078              	.L2311:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33079              		.loc 1 15741 29 is_stmt 1 view .LVU9285
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33080              		.loc 1 15741 48 is_stmt 0 view .LVU9286
 33081 00f0 1B4B     		ldr	r3, .L2322
 33082 00f2 1868     		ldr	r0, [r3]
 33083              	.LVL4092:
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
 33084              		.loc 1 15741 48 view .LVU9287
 33085 00f4 0469     		ldr	r4, [r0, #16]
15741:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_ANY_MOTION_Z_AXI
ARM GAS  /tmp/ccO72alg.s 			page 927


 33086              		.loc 1 15741 40 view .LVU9288
 33087 00f6 0123     		movs	r3, #1
 33088 00f8 0DF10702 		add	r2, sp, #7
 33089 00fc 1221     		movs	r1, #18
 33090 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33091 0100 A047     		blx	r4
 33092              	.LVL4093:
15745:Core/Src/bno055.c ****                             {
 33093              		.loc 1 15745 29 is_stmt 1 view .LVU9289
15745:Core/Src/bno055.c ****                             {
 33094              		.loc 1 15745 32 is_stmt 0 view .LVU9290
 33095 0102 0446     		mov	r4, r0
 33096 0104 C8B9     		cbnz	r0, .L2308
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33097              		.loc 1 15747 33 is_stmt 1 view .LVU9291
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33098              		.loc 1 15747 44 is_stmt 0 view .LVU9292
 33099 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33100 010a 23F01003 		bic	r3, r3, #16
 33101 010e 5AB2     		sxtb	r2, r3
 33102 0110 2B01     		lsls	r3, r5, #4
 33103 0112 03F01003 		and	r3, r3, #16
 33104 0116 1343     		orrs	r3, r3, r2
15747:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33105              		.loc 1 15747 42 view .LVU9293
 33106 0118 8DF80730 		strb	r3, [sp, #7]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33107              		.loc 1 15748 33 is_stmt 1 view .LVU9294
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33108              		.loc 1 15748 53 is_stmt 0 view .LVU9295
 33109 011c 104B     		ldr	r3, .L2322
 33110 011e 1868     		ldr	r0, [r3]
 33111              	.LVL4094:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33112              		.loc 1 15748 53 view .LVU9296
 33113 0120 C568     		ldr	r5, [r0, #12]
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33114              		.loc 1 15748 45 view .LVU9297
 33115 0122 0123     		movs	r3, #1
 33116 0124 0DF10702 		add	r2, sp, #7
 33117 0128 1221     		movs	r1, #18
 33118 012a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33119 012c A847     		blx	r5
 33120              	.LVL4095:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33121              		.loc 1 15748 42 view .LVU9298
 33122 012e 54FA80F4 		uxtab	r4, r4, r0
 33123 0132 64B2     		sxtb	r4, r4
 33124              	.LVL4096:
15748:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_ANY_MOTION
 33125              		.loc 1 15748 42 view .LVU9299
 33126 0134 01E0     		b	.L2308
 33127              	.LVL4097:
 33128              	.L2313:
15767:Core/Src/bno055.c ****             }
15768:Core/Src/bno055.c ****         }
15769:Core/Src/bno055.c ****         else
ARM GAS  /tmp/ccO72alg.s 			page 928


15770:Core/Src/bno055.c ****         {
15771:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33129              		.loc 1 15771 22 view .LVU9300
 33130 0136 4FF0FF34 		mov	r4, #-1
 33131              	.LVL4098:
 33132              	.L2308:
15772:Core/Src/bno055.c ****         }
15773:Core/Src/bno055.c ****     }
15774:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33133              		.loc 1 15774 5 is_stmt 1 view .LVU9301
 33134              		.loc 1 15774 24 is_stmt 0 view .LVU9302
 33135 013a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33136              		.loc 1 15774 8 view .LVU9303
 33137 013e 28B9     		cbnz	r0, .L2321
 33138              	.LVL4099:
 33139              	.L2307:
15775:Core/Src/bno055.c ****     {
15776:Core/Src/bno055.c ****         /* set the operation mode of
15777:Core/Src/bno055.c ****          * previous operation mode*/
15778:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
15779:Core/Src/bno055.c ****     }
15780:Core/Src/bno055.c **** 
15781:Core/Src/bno055.c ****     return com_rslt;
15782:Core/Src/bno055.c **** }
 33140              		.loc 1 15782 1 view .LVU9304
 33141 0140 2046     		mov	r0, r4
 33142 0142 02B0     		add	sp, sp, #8
 33143              	.LCFI915:
 33144              		.cfi_remember_state
 33145              		.cfi_def_cfa_offset 16
 33146              		@ sp needed
 33147 0144 70BD     		pop	{r4, r5, r6, pc}
 33148              	.LVL4100:
 33149              	.L2315:
 33150              	.LCFI916:
 33151              		.cfi_restore_state
15761:Core/Src/bno055.c ****                 }
 33152              		.loc 1 15761 30 view .LVU9305
 33153 0146 4FF0FF34 		mov	r4, #-1
 33154 014a F6E7     		b	.L2308
 33155              	.LVL4101:
 33156              	.L2321:
15778:Core/Src/bno055.c ****     }
 33157              		.loc 1 15778 9 is_stmt 1 view .LVU9306
15778:Core/Src/bno055.c ****     }
 33158              		.loc 1 15778 21 is_stmt 0 view .LVU9307
 33159 014c FFF7FEFF 		bl	bno055_set_operation_mode
 33160              	.LVL4102:
15778:Core/Src/bno055.c ****     }
 33161              		.loc 1 15778 18 view .LVU9308
 33162 0150 54FA80F4 		uxtab	r4, r4, r0
 33163              	.LVL4103:
15778:Core/Src/bno055.c ****     }
 33164              		.loc 1 15778 18 view .LVU9309
 33165 0154 64B2     		sxtb	r4, r4
 33166              	.LVL4104:
15778:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 929


 33167              		.loc 1 15778 18 view .LVU9310
 33168 0156 F3E7     		b	.L2307
 33169              	.LVL4105:
 33170              	.L2312:
15681:Core/Src/bno055.c ****     }
 33171              		.loc 1 15681 16 view .LVU9311
 33172 0158 6FF07E04 		mvn	r4, #126
 33173 015c F0E7     		b	.L2307
 33174              	.L2323:
 33175 015e 00BF     		.align	2
 33176              	.L2322:
 33177 0160 00000000 		.word	.LANCHOR0
 33178              		.cfi_endproc
 33179              	.LFE230:
 33181              		.section	.text.bno055_get_accel_high_g_axis_enable,"ax",%progbits
 33182              		.align	1
 33183              		.global	bno055_get_accel_high_g_axis_enable
 33184              		.syntax unified
 33185              		.thumb
 33186              		.thumb_func
 33188              	bno055_get_accel_high_g_axis_enable:
 33189              	.LVL4106:
 33190              	.LFB231:
15783:Core/Src/bno055.c **** 
15784:Core/Src/bno055.c **** /*!
15785:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg enable
15786:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15787:Core/Src/bno055.c ****  *
15788:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15789:Core/Src/bno055.c ****  *      data_u8| result
15790:Core/Src/bno055.c ****  *  ------------ | -------------
15791:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15792:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15793:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15794:Core/Src/bno055.c ****  *               channel_u8     | value
15795:Core/Src/bno055.c ****  *     -------------------------- | ----------
15796:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15797:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15798:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15799:Core/Src/bno055.c ****  *
15800:Core/Src/bno055.c ****  *  @return results of bus communication function
15801:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15802:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15803:Core/Src/bno055.c ****  *
15804:Core/Src/bno055.c ****  *
15805:Core/Src/bno055.c ****  */
15806:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_axis_enable(u8 channel_u8, u8 *data_u8)
15807:Core/Src/bno055.c **** {
 33191              		.loc 1 15807 1 is_stmt 1 view -0
 33192              		.cfi_startproc
 33193              		@ args = 0, pretend = 0, frame = 8
 33194              		@ frame_needed = 0, uses_anonymous_args = 0
 33195              		.loc 1 15807 1 is_stmt 0 view .LVU9313
 33196 0000 30B5     		push	{r4, r5, lr}
 33197              	.LCFI917:
 33198              		.cfi_def_cfa_offset 12
 33199              		.cfi_offset 4, -12
ARM GAS  /tmp/ccO72alg.s 			page 930


 33200              		.cfi_offset 5, -8
 33201              		.cfi_offset 14, -4
 33202 0002 83B0     		sub	sp, sp, #12
 33203              	.LCFI918:
 33204              		.cfi_def_cfa_offset 24
15808:Core/Src/bno055.c ****     /* Variable used to return value of
15809:Core/Src/bno055.c ****      * communication routine*/
15810:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33205              		.loc 1 15810 5 is_stmt 1 view .LVU9314
 33206              	.LVL4107:
15811:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33207              		.loc 1 15811 5 view .LVU9315
 33208              		.loc 1 15811 8 is_stmt 0 view .LVU9316
 33209 0004 0023     		movs	r3, #0
 33210 0006 8DF80730 		strb	r3, [sp, #7]
15812:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33211              		.loc 1 15812 5 is_stmt 1 view .LVU9317
 33212              	.LVL4108:
15813:Core/Src/bno055.c **** 
15814:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15815:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33213              		.loc 1 15815 5 view .LVU9318
 33214              		.loc 1 15815 18 is_stmt 0 view .LVU9319
 33215 000a 274B     		ldr	r3, .L2336
 33216 000c 1B68     		ldr	r3, [r3]
 33217              		.loc 1 15815 8 view .LVU9320
 33218 000e 002B     		cmp	r3, #0
 33219 0010 44D0     		beq	.L2330
 33220 0012 0446     		mov	r4, r0
 33221 0014 0D46     		mov	r5, r1
15816:Core/Src/bno055.c ****     {
15817:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15818:Core/Src/bno055.c ****     }
15819:Core/Src/bno055.c ****     else
15820:Core/Src/bno055.c ****     {
15821:Core/Src/bno055.c ****         /*condition check for page, accel highg enable is
15822:Core/Src/bno055.c ****          * available in the page one*/
15823:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33222              		.loc 1 15823 9 is_stmt 1 view .LVU9321
 33223              		.loc 1 15823 21 is_stmt 0 view .LVU9322
 33224 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33225              		.loc 1 15823 12 view .LVU9323
 33226 0018 012B     		cmp	r3, #1
 33227 001a 0DD1     		bne	.L2334
 33228              	.LVL4109:
 33229              	.L2326:
15824:Core/Src/bno055.c ****         {
15825:Core/Src/bno055.c ****             /* Write page as one */
15826:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15827:Core/Src/bno055.c ****         }
15828:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33230              		.loc 1 15828 53 discriminator 1 view .LVU9324
 33231 001c 224B     		ldr	r3, .L2336
 33232 001e 1B68     		ldr	r3, [r3]
 33233 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33234              		.loc 1 15828 41 discriminator 1 view .LVU9325
 33235 0022 012B     		cmp	r3, #1
ARM GAS  /tmp/ccO72alg.s 			page 931


 33236 0024 3DD1     		bne	.L2331
 33237              	.L2327:
15829:Core/Src/bno055.c ****         {
15830:Core/Src/bno055.c ****             switch (channel_u8)
 33238              		.loc 1 15830 13 is_stmt 1 view .LVU9326
 33239 0026 012C     		cmp	r4, #1
 33240 0028 1BD0     		beq	.L2328
 33241 002a 022C     		cmp	r4, #2
 33242 002c 28D0     		beq	.L2329
 33243 002e 4CB1     		cbz	r4, .L2335
 33244 0030 6FF00100 		mvn	r0, #1
 33245              	.LVL4110:
 33246              	.L2325:
15831:Core/Src/bno055.c ****             {
15832:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_X_AXIS:
15833:Core/Src/bno055.c **** 
15834:Core/Src/bno055.c ****                     /* Read the value of accel x highg enable*/
15835:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15836:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
15837:Core/Src/bno055.c ****                                                               &data_u8r,
15838:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15839:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS);
15840:Core/Src/bno055.c ****                     break;
15841:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
15842:Core/Src/bno055.c **** 
15843:Core/Src/bno055.c ****                     /* Read the value of accel y highg enable*/
15844:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15845:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
15846:Core/Src/bno055.c ****                                                               &data_u8r,
15847:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15848:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS);
15849:Core/Src/bno055.c ****                     break;
15850:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
15851:Core/Src/bno055.c **** 
15852:Core/Src/bno055.c ****                     /* Read the value of accel z highg enable*/
15853:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15854:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
15855:Core/Src/bno055.c ****                                                               &data_u8r,
15856:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
15857:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS);
15858:Core/Src/bno055.c ****                     break;
15859:Core/Src/bno055.c ****                 default:
15860:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
15861:Core/Src/bno055.c ****                     break;
15862:Core/Src/bno055.c ****             }
15863:Core/Src/bno055.c ****         }
15864:Core/Src/bno055.c ****         else
15865:Core/Src/bno055.c ****         {
15866:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
15867:Core/Src/bno055.c ****         }
15868:Core/Src/bno055.c ****     }
15869:Core/Src/bno055.c **** 
15870:Core/Src/bno055.c ****     return com_rslt;
15871:Core/Src/bno055.c **** }
 33247              		.loc 1 15871 1 is_stmt 0 view .LVU9327
 33248 0034 03B0     		add	sp, sp, #12
 33249              	.LCFI919:
ARM GAS  /tmp/ccO72alg.s 			page 932


 33250              		.cfi_remember_state
 33251              		.cfi_def_cfa_offset 12
 33252              		@ sp needed
 33253 0036 30BD     		pop	{r4, r5, pc}
 33254              	.LVL4111:
 33255              	.L2334:
 33256              	.LCFI920:
 33257              		.cfi_restore_state
15826:Core/Src/bno055.c ****         }
 33258              		.loc 1 15826 13 is_stmt 1 view .LVU9328
15826:Core/Src/bno055.c ****         }
 33259              		.loc 1 15826 23 is_stmt 0 view .LVU9329
 33260 0038 0120     		movs	r0, #1
 33261              	.LVL4112:
15826:Core/Src/bno055.c ****         }
 33262              		.loc 1 15826 23 view .LVU9330
 33263 003a FFF7FEFF 		bl	bno055_write_page_id
 33264              	.LVL4113:
15828:Core/Src/bno055.c ****         {
 33265              		.loc 1 15828 9 is_stmt 1 view .LVU9331
15828:Core/Src/bno055.c ****         {
 33266              		.loc 1 15828 12 is_stmt 0 view .LVU9332
 33267 003e 0028     		cmp	r0, #0
 33268 0040 F1D0     		beq	.L2327
 33269 0042 EBE7     		b	.L2326
 33270              	.LVL4114:
 33271              	.L2335:
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33272              		.loc 1 15835 21 is_stmt 1 view .LVU9333
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33273              		.loc 1 15835 40 is_stmt 0 view .LVU9334
 33274 0044 184B     		ldr	r3, .L2336
 33275 0046 1868     		ldr	r0, [r3]
 33276 0048 0469     		ldr	r4, [r0, #16]
15835:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_X_AXIS_REG,
 33277              		.loc 1 15835 32 view .LVU9335
 33278 004a 0123     		movs	r3, #1
 33279 004c 0DF10702 		add	r2, sp, #7
 33280 0050 1221     		movs	r1, #18
 33281 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33282 0054 A047     		blx	r4
 33283              	.LVL4115:
15839:Core/Src/bno055.c ****                     break;
 33284              		.loc 1 15839 21 is_stmt 1 view .LVU9336
15839:Core/Src/bno055.c ****                     break;
 33285              		.loc 1 15839 32 is_stmt 0 view .LVU9337
 33286 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33287 005a C3F34013 		ubfx	r3, r3, #5, #1
15839:Core/Src/bno055.c ****                     break;
 33288              		.loc 1 15839 30 view .LVU9338
 33289 005e 2B70     		strb	r3, [r5]
15840:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Y_AXIS:
 33290              		.loc 1 15840 21 is_stmt 1 view .LVU9339
 33291 0060 E8E7     		b	.L2325
 33292              	.LVL4116:
 33293              	.L2328:
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
ARM GAS  /tmp/ccO72alg.s 			page 933


 33294              		.loc 1 15844 21 view .LVU9340
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33295              		.loc 1 15844 40 is_stmt 0 view .LVU9341
 33296 0062 114B     		ldr	r3, .L2336
 33297 0064 1868     		ldr	r0, [r3]
 33298 0066 0469     		ldr	r4, [r0, #16]
15844:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Y_AXIS_REG,
 33299              		.loc 1 15844 32 view .LVU9342
 33300 0068 0123     		movs	r3, #1
 33301 006a 0DF10702 		add	r2, sp, #7
 33302 006e 1221     		movs	r1, #18
 33303 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33304 0072 A047     		blx	r4
 33305              	.LVL4117:
15848:Core/Src/bno055.c ****                     break;
 33306              		.loc 1 15848 21 is_stmt 1 view .LVU9343
15848:Core/Src/bno055.c ****                     break;
 33307              		.loc 1 15848 32 is_stmt 0 view .LVU9344
 33308 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33309 0078 C3F38013 		ubfx	r3, r3, #6, #1
15848:Core/Src/bno055.c ****                     break;
 33310              		.loc 1 15848 30 view .LVU9345
 33311 007c 2B70     		strb	r3, [r5]
15849:Core/Src/bno055.c ****                 case BNO055_ACCEL_HIGH_G_Z_AXIS:
 33312              		.loc 1 15849 21 is_stmt 1 view .LVU9346
 33313 007e D9E7     		b	.L2325
 33314              	.LVL4118:
 33315              	.L2329:
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33316              		.loc 1 15853 21 view .LVU9347
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33317              		.loc 1 15853 40 is_stmt 0 view .LVU9348
 33318 0080 094B     		ldr	r3, .L2336
 33319 0082 1868     		ldr	r0, [r3]
 33320 0084 0469     		ldr	r4, [r0, #16]
15853:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_Z_AXIS_REG,
 33321              		.loc 1 15853 32 view .LVU9349
 33322 0086 0123     		movs	r3, #1
 33323 0088 0DF10702 		add	r2, sp, #7
 33324 008c 1221     		movs	r1, #18
 33325 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33326 0090 A047     		blx	r4
 33327              	.LVL4119:
15857:Core/Src/bno055.c ****                     break;
 33328              		.loc 1 15857 21 is_stmt 1 view .LVU9350
15857:Core/Src/bno055.c ****                     break;
 33329              		.loc 1 15857 32 is_stmt 0 view .LVU9351
 33330 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33331 0096 DB09     		lsrs	r3, r3, #7
15857:Core/Src/bno055.c ****                     break;
 33332              		.loc 1 15857 30 view .LVU9352
 33333 0098 2B70     		strb	r3, [r5]
15858:Core/Src/bno055.c ****                 default:
 33334              		.loc 1 15858 21 is_stmt 1 view .LVU9353
 33335 009a CBE7     		b	.L2325
 33336              	.LVL4120:
 33337              	.L2330:
ARM GAS  /tmp/ccO72alg.s 			page 934


15817:Core/Src/bno055.c ****     }
 33338              		.loc 1 15817 16 is_stmt 0 view .LVU9354
 33339 009c 6FF07E00 		mvn	r0, #126
 33340              	.LVL4121:
15817:Core/Src/bno055.c ****     }
 33341              		.loc 1 15817 16 view .LVU9355
 33342 00a0 C8E7     		b	.L2325
 33343              	.LVL4122:
 33344              	.L2331:
15866:Core/Src/bno055.c ****         }
 33345              		.loc 1 15866 22 view .LVU9356
 33346 00a2 4FF0FF30 		mov	r0, #-1
 33347 00a6 C5E7     		b	.L2325
 33348              	.L2337:
 33349              		.align	2
 33350              	.L2336:
 33351 00a8 00000000 		.word	.LANCHOR0
 33352              		.cfi_endproc
 33353              	.LFE231:
 33355              		.section	.text.bno055_set_accel_high_g_axis_enable,"ax",%progbits
 33356              		.align	1
 33357              		.global	bno055_set_accel_high_g_axis_enable
 33358              		.syntax unified
 33359              		.thumb
 33360              		.thumb_func
 33362              	bno055_set_accel_high_g_axis_enable:
 33363              	.LVL4123:
 33364              	.LFB232:
15872:Core/Src/bno055.c **** 
15873:Core/Src/bno055.c **** /*!
15874:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg enable
15875:Core/Src/bno055.c ****  *  from page one register from 0x12 bit 5 to 7
15876:Core/Src/bno055.c ****  *
15877:Core/Src/bno055.c ****  *  @param data_u8 : The value of accel highg enable
15878:Core/Src/bno055.c ****  *      data_u8| result
15879:Core/Src/bno055.c ****  *  ------------ | -------------
15880:Core/Src/bno055.c ****  *      0x01     | BNO055_BIT_ENABLE
15881:Core/Src/bno055.c ****  *      0x00     | BNO055_BIT_DISABLE
15882:Core/Src/bno055.c ****  *  @param channel_u8 : The value of accel highg axis selection
15883:Core/Src/bno055.c ****  *               channel_u8     | value
15884:Core/Src/bno055.c ****  *     -------------------------- | ----------
15885:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_X_AXIS |   0
15886:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Y_AXIS |   1
15887:Core/Src/bno055.c ****  *     BNO055_ACCEL_HIGH_G_Z_AXIS |   2
15888:Core/Src/bno055.c ****  *
15889:Core/Src/bno055.c ****  *  @return results of bus communication function
15890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
15891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
15892:Core/Src/bno055.c ****  *
15893:Core/Src/bno055.c ****  *
15894:Core/Src/bno055.c ****  */
15895:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_axis_enable(u8 channel_u8, u8 data_u8)
15896:Core/Src/bno055.c **** {
 33365              		.loc 1 15896 1 is_stmt 1 view -0
 33366              		.cfi_startproc
 33367              		@ args = 0, pretend = 0, frame = 8
 33368              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccO72alg.s 			page 935


 33369              		.loc 1 15896 1 is_stmt 0 view .LVU9358
 33370 0000 70B5     		push	{r4, r5, r6, lr}
 33371              	.LCFI921:
 33372              		.cfi_def_cfa_offset 16
 33373              		.cfi_offset 4, -16
 33374              		.cfi_offset 5, -12
 33375              		.cfi_offset 6, -8
 33376              		.cfi_offset 14, -4
 33377 0002 82B0     		sub	sp, sp, #8
 33378              	.LCFI922:
 33379              		.cfi_def_cfa_offset 24
15897:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33380              		.loc 1 15897 5 is_stmt 1 view .LVU9359
 33381              	.LVL4124:
15898:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33382              		.loc 1 15898 5 view .LVU9360
 33383              		.loc 1 15898 8 is_stmt 0 view .LVU9361
 33384 0004 0023     		movs	r3, #0
 33385 0006 8DF80730 		strb	r3, [sp, #7]
15899:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33386              		.loc 1 15899 5 is_stmt 1 view .LVU9362
 33387              	.LVL4125:
15900:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33388              		.loc 1 15900 5 view .LVU9363
15901:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33389              		.loc 1 15901 5 view .LVU9364
 33390              		.loc 1 15901 8 is_stmt 0 view .LVU9365
 33391 000a 8DF80630 		strb	r3, [sp, #6]
15902:Core/Src/bno055.c **** 
15903:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
15904:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33392              		.loc 1 15904 5 is_stmt 1 view .LVU9366
 33393              		.loc 1 15904 18 is_stmt 0 view .LVU9367
 33394 000e 524B     		ldr	r3, .L2354
 33395 0010 1B68     		ldr	r3, [r3]
 33396              		.loc 1 15904 8 view .LVU9368
 33397 0012 002B     		cmp	r3, #0
 33398 0014 00F09D80 		beq	.L2344
 33399 0018 0446     		mov	r4, r0
 33400 001a 0D46     		mov	r5, r1
15905:Core/Src/bno055.c ****     {
15906:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
15907:Core/Src/bno055.c ****     }
15908:Core/Src/bno055.c ****     else
15909:Core/Src/bno055.c ****     {
15910:Core/Src/bno055.c ****         /* The write operation effective only if the operation
15911:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
15912:Core/Src/bno055.c ****          * current operation mode and set the config mode */
15913:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33401              		.loc 1 15913 9 is_stmt 1 view .LVU9369
 33402              		.loc 1 15913 19 is_stmt 0 view .LVU9370
 33403 001c 0DF10600 		add	r0, sp, #6
 33404              	.LVL4126:
 33405              		.loc 1 15913 19 view .LVU9371
 33406 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 33407              	.LVL4127:
15914:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 936


 33408              		.loc 1 15914 9 is_stmt 1 view .LVU9372
 33409              		.loc 1 15914 12 is_stmt 0 view .LVU9373
 33410 0024 0646     		mov	r6, r0
 33411 0026 0028     		cmp	r0, #0
 33412 0028 40F08280 		bne	.L2345
15915:Core/Src/bno055.c ****         {
15916:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33413              		.loc 1 15916 13 is_stmt 1 view .LVU9374
 33414              		.loc 1 15916 32 is_stmt 0 view .LVU9375
 33415 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33416              		.loc 1 15916 16 view .LVU9376
 33417 0030 1BB9     		cbnz	r3, .L2350
 33418              	.LVL4128:
 33419              	.L2341:
15917:Core/Src/bno055.c ****             {
15918:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
15919:Core/Src/bno055.c ****             }
15920:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33420              		.loc 1 15920 13 is_stmt 1 view .LVU9377
 33421              		.loc 1 15920 16 is_stmt 0 view .LVU9378
 33422 0032 46B1     		cbz	r6, .L2351
15921:Core/Src/bno055.c ****             {
15922:Core/Src/bno055.c ****                 /* Write page as one */
15923:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
15924:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
15925:Core/Src/bno055.c ****                 {
15926:Core/Src/bno055.c ****                     switch (channel_u8)
15927:Core/Src/bno055.c ****                     {
15928:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_X_AXIS:
15929:Core/Src/bno055.c **** 
15930:Core/Src/bno055.c ****                             /* Write the value of
15931:Core/Src/bno055.c ****                              * accel x highg enable*/
15932:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15933:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
15934:Core/Src/bno055.c ****                                                                       &data_u8r,
15935:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15936:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15937:Core/Src/bno055.c ****                             {
15938:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_X_AXIS
15939:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15940:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
15941:Core/Src/bno055.c ****                                                                             &data_u8r,
15942:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15943:Core/Src/bno055.c ****                             }
15944:Core/Src/bno055.c ****                             break;
15945:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Y_AXIS:
15946:Core/Src/bno055.c **** 
15947:Core/Src/bno055.c ****                             /* Write the value of
15948:Core/Src/bno055.c ****                              * accel y highg enable*/
15949:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15950:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
15951:Core/Src/bno055.c ****                                                                       &data_u8r,
15952:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15953:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15954:Core/Src/bno055.c ****                             {
15955:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Y_AXIS
15956:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 937


15957:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
15958:Core/Src/bno055.c ****                                                                             &data_u8r,
15959:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15960:Core/Src/bno055.c ****                             }
15961:Core/Src/bno055.c ****                             break;
15962:Core/Src/bno055.c ****                         case BNO055_ACCEL_HIGH_G_Z_AXIS:
15963:Core/Src/bno055.c **** 
15964:Core/Src/bno055.c ****                             /* Write the value of
15965:Core/Src/bno055.c ****                              * accel z highg enable*/
15966:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
15967:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
15968:Core/Src/bno055.c ****                                                                       &data_u8r,
15969:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
15970:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
15971:Core/Src/bno055.c ****                             {
15972:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_Z_AXIS
15973:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
15974:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
15975:Core/Src/bno055.c ****                                                                             &data_u8r,
15976:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
15977:Core/Src/bno055.c ****                             }
15978:Core/Src/bno055.c ****                             break;
15979:Core/Src/bno055.c ****                         default:
15980:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
15981:Core/Src/bno055.c ****                             break;
15982:Core/Src/bno055.c ****                     }
15983:Core/Src/bno055.c ****                 }
15984:Core/Src/bno055.c ****                 else
15985:Core/Src/bno055.c ****                 {
15986:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
15987:Core/Src/bno055.c ****                 }
15988:Core/Src/bno055.c ****             }
15989:Core/Src/bno055.c ****             else
15990:Core/Src/bno055.c ****             {
15991:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33423              		.loc 1 15991 26 view .LVU9379
 33424 0034 4FF0FF34 		mov	r4, #-1
 33425 0038 7CE0     		b	.L2340
 33426              	.LVL4129:
 33427              	.L2350:
15918:Core/Src/bno055.c ****             }
 33428              		.loc 1 15918 17 is_stmt 1 view .LVU9380
15918:Core/Src/bno055.c ****             }
 33429              		.loc 1 15918 28 is_stmt 0 view .LVU9381
 33430 003a FFF7FEFF 		bl	bno055_set_operation_mode
 33431              	.LVL4130:
15918:Core/Src/bno055.c ****             }
 33432              		.loc 1 15918 25 view .LVU9382
 33433 003e 56FA80F6 		uxtab	r6, r6, r0
 33434 0042 76B2     		sxtb	r6, r6
 33435              	.LVL4131:
15918:Core/Src/bno055.c ****             }
 33436              		.loc 1 15918 25 view .LVU9383
 33437 0044 F5E7     		b	.L2341
 33438              	.L2351:
15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33439              		.loc 1 15923 17 is_stmt 1 view .LVU9384
ARM GAS  /tmp/ccO72alg.s 			page 938


15923:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33440              		.loc 1 15923 30 is_stmt 0 view .LVU9385
 33441 0046 0120     		movs	r0, #1
 33442 0048 FFF7FEFF 		bl	bno055_write_page_id
 33443              	.LVL4132:
15924:Core/Src/bno055.c ****                 {
 33444              		.loc 1 15924 17 is_stmt 1 view .LVU9386
15924:Core/Src/bno055.c ****                 {
 33445              		.loc 1 15924 20 is_stmt 0 view .LVU9387
 33446 004c 0028     		cmp	r0, #0
 33447 004e 77D1     		bne	.L2347
15926:Core/Src/bno055.c ****                     {
 33448              		.loc 1 15926 21 is_stmt 1 view .LVU9388
 33449 0050 012C     		cmp	r4, #1
 33450 0052 29D0     		beq	.L2342
 33451 0054 022C     		cmp	r4, #2
 33452 0056 4BD0     		beq	.L2343
 33453 0058 14B1     		cbz	r4, .L2352
 33454 005a 6FF00104 		mvn	r4, #1
 33455 005e 69E0     		b	.L2340
 33456              	.L2352:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33457              		.loc 1 15932 29 view .LVU9389
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33458              		.loc 1 15932 48 is_stmt 0 view .LVU9390
 33459 0060 3D4B     		ldr	r3, .L2354
 33460 0062 1868     		ldr	r0, [r3]
 33461              	.LVL4133:
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33462              		.loc 1 15932 48 view .LVU9391
 33463 0064 0469     		ldr	r4, [r0, #16]
15932:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_X_AXIS_RE
 33464              		.loc 1 15932 40 view .LVU9392
 33465 0066 0123     		movs	r3, #1
 33466 0068 0DF10702 		add	r2, sp, #7
 33467 006c 1221     		movs	r1, #18
 33468 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33469 0070 A047     		blx	r4
 33470              	.LVL4134:
15936:Core/Src/bno055.c ****                             {
 33471              		.loc 1 15936 29 is_stmt 1 view .LVU9393
15936:Core/Src/bno055.c ****                             {
 33472              		.loc 1 15936 32 is_stmt 0 view .LVU9394
 33473 0072 0446     		mov	r4, r0
 33474 0074 0028     		cmp	r0, #0
 33475 0076 5DD1     		bne	.L2340
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33476              		.loc 1 15938 33 is_stmt 1 view .LVU9395
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33477              		.loc 1 15938 44 is_stmt 0 view .LVU9396
 33478 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33479 007c 23F02003 		bic	r3, r3, #32
 33480 0080 5BB2     		sxtb	r3, r3
 33481 0082 6A01     		lsls	r2, r5, #5
 33482 0084 02F02002 		and	r2, r2, #32
 33483 0088 1343     		orrs	r3, r3, r2
15938:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 939


 33484              		.loc 1 15938 42 view .LVU9397
 33485 008a 8DF80730 		strb	r3, [sp, #7]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33486              		.loc 1 15939 33 is_stmt 1 view .LVU9398
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33487              		.loc 1 15939 53 is_stmt 0 view .LVU9399
 33488 008e 324B     		ldr	r3, .L2354
 33489 0090 1868     		ldr	r0, [r3]
 33490              	.LVL4135:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33491              		.loc 1 15939 53 view .LVU9400
 33492 0092 C568     		ldr	r5, [r0, #12]
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33493              		.loc 1 15939 45 view .LVU9401
 33494 0094 0123     		movs	r3, #1
 33495 0096 0DF10702 		add	r2, sp, #7
 33496 009a 1221     		movs	r1, #18
 33497 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33498 009e A847     		blx	r5
 33499              	.LVL4136:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33500              		.loc 1 15939 42 view .LVU9402
 33501 00a0 54FA80F4 		uxtab	r4, r4, r0
 33502 00a4 64B2     		sxtb	r4, r4
 33503              	.LVL4137:
15939:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_X_A
 33504              		.loc 1 15939 42 view .LVU9403
 33505 00a6 45E0     		b	.L2340
 33506              	.LVL4138:
 33507              	.L2342:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33508              		.loc 1 15949 29 is_stmt 1 view .LVU9404
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33509              		.loc 1 15949 48 is_stmt 0 view .LVU9405
 33510 00a8 2B4B     		ldr	r3, .L2354
 33511 00aa 1868     		ldr	r0, [r3]
 33512              	.LVL4139:
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33513              		.loc 1 15949 48 view .LVU9406
 33514 00ac 0469     		ldr	r4, [r0, #16]
15949:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Y_AXIS_RE
 33515              		.loc 1 15949 40 view .LVU9407
 33516 00ae 0123     		movs	r3, #1
 33517 00b0 0DF10702 		add	r2, sp, #7
 33518 00b4 1221     		movs	r1, #18
 33519 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33520 00b8 A047     		blx	r4
 33521              	.LVL4140:
15953:Core/Src/bno055.c ****                             {
 33522              		.loc 1 15953 29 is_stmt 1 view .LVU9408
15953:Core/Src/bno055.c ****                             {
 33523              		.loc 1 15953 32 is_stmt 0 view .LVU9409
 33524 00ba 0446     		mov	r4, r0
 33525 00bc 0028     		cmp	r0, #0
 33526 00be 39D1     		bne	.L2340
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33527              		.loc 1 15955 33 is_stmt 1 view .LVU9410
ARM GAS  /tmp/ccO72alg.s 			page 940


15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33528              		.loc 1 15955 44 is_stmt 0 view .LVU9411
 33529 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33530 00c4 23F04003 		bic	r3, r3, #64
 33531 00c8 5BB2     		sxtb	r3, r3
 33532 00ca AA01     		lsls	r2, r5, #6
 33533 00cc 02F04002 		and	r2, r2, #64
 33534 00d0 1343     		orrs	r3, r3, r2
15955:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33535              		.loc 1 15955 42 view .LVU9412
 33536 00d2 8DF80730 		strb	r3, [sp, #7]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33537              		.loc 1 15956 33 is_stmt 1 view .LVU9413
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33538              		.loc 1 15956 53 is_stmt 0 view .LVU9414
 33539 00d6 204B     		ldr	r3, .L2354
 33540 00d8 1868     		ldr	r0, [r3]
 33541              	.LVL4141:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33542              		.loc 1 15956 53 view .LVU9415
 33543 00da C568     		ldr	r5, [r0, #12]
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33544              		.loc 1 15956 45 view .LVU9416
 33545 00dc 0123     		movs	r3, #1
 33546 00de 0DF10702 		add	r2, sp, #7
 33547 00e2 1221     		movs	r1, #18
 33548 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33549 00e6 A847     		blx	r5
 33550              	.LVL4142:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33551              		.loc 1 15956 42 view .LVU9417
 33552 00e8 54FA80F4 		uxtab	r4, r4, r0
 33553 00ec 64B2     		sxtb	r4, r4
 33554              	.LVL4143:
15956:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Y_A
 33555              		.loc 1 15956 42 view .LVU9418
 33556 00ee 21E0     		b	.L2340
 33557              	.LVL4144:
 33558              	.L2343:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33559              		.loc 1 15966 29 is_stmt 1 view .LVU9419
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33560              		.loc 1 15966 48 is_stmt 0 view .LVU9420
 33561 00f0 194B     		ldr	r3, .L2354
 33562 00f2 1868     		ldr	r0, [r3]
 33563              	.LVL4145:
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33564              		.loc 1 15966 48 view .LVU9421
 33565 00f4 0469     		ldr	r4, [r0, #16]
15966:Core/Src/bno055.c ****                                                                       BNO055_ACCEL_HIGH_G_Z_AXIS_RE
 33566              		.loc 1 15966 40 view .LVU9422
 33567 00f6 0123     		movs	r3, #1
 33568 00f8 0DF10702 		add	r2, sp, #7
 33569 00fc 1221     		movs	r1, #18
 33570 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33571 0100 A047     		blx	r4
 33572              	.LVL4146:
ARM GAS  /tmp/ccO72alg.s 			page 941


15970:Core/Src/bno055.c ****                             {
 33573              		.loc 1 15970 29 is_stmt 1 view .LVU9423
15970:Core/Src/bno055.c ****                             {
 33574              		.loc 1 15970 32 is_stmt 0 view .LVU9424
 33575 0102 0446     		mov	r4, r0
 33576 0104 B0B9     		cbnz	r0, .L2340
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33577              		.loc 1 15972 33 is_stmt 1 view .LVU9425
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33578              		.loc 1 15972 44 is_stmt 0 view .LVU9426
 33579 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33580 010a 03F07F03 		and	r3, r3, #127
 33581 010e 43EAC515 		orr	r5, r3, r5, lsl #7
15972:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33582              		.loc 1 15972 42 view .LVU9427
 33583 0112 8DF80750 		strb	r5, [sp, #7]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33584              		.loc 1 15973 33 is_stmt 1 view .LVU9428
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33585              		.loc 1 15973 53 is_stmt 0 view .LVU9429
 33586 0116 104B     		ldr	r3, .L2354
 33587 0118 1868     		ldr	r0, [r3]
 33588              	.LVL4147:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33589              		.loc 1 15973 53 view .LVU9430
 33590 011a C568     		ldr	r5, [r0, #12]
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33591              		.loc 1 15973 45 view .LVU9431
 33592 011c 0123     		movs	r3, #1
 33593 011e 0DF10702 		add	r2, sp, #7
 33594 0122 1221     		movs	r1, #18
 33595 0124 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33596 0126 A847     		blx	r5
 33597              	.LVL4148:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33598              		.loc 1 15973 42 view .LVU9432
 33599 0128 54FA80F4 		uxtab	r4, r4, r0
 33600 012c 64B2     		sxtb	r4, r4
 33601              	.LVL4149:
15973:Core/Src/bno055.c ****                                                                             BNO055_ACCEL_HIGH_G_Z_A
 33602              		.loc 1 15973 42 view .LVU9433
 33603 012e 01E0     		b	.L2340
 33604              	.LVL4150:
 33605              	.L2345:
15992:Core/Src/bno055.c ****             }
15993:Core/Src/bno055.c ****         }
15994:Core/Src/bno055.c ****         else
15995:Core/Src/bno055.c ****         {
15996:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33606              		.loc 1 15996 22 view .LVU9434
 33607 0130 4FF0FF34 		mov	r4, #-1
 33608              	.LVL4151:
 33609              	.L2340:
15997:Core/Src/bno055.c ****         }
15998:Core/Src/bno055.c ****     }
15999:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33610              		.loc 1 15999 5 is_stmt 1 view .LVU9435
ARM GAS  /tmp/ccO72alg.s 			page 942


 33611              		.loc 1 15999 24 is_stmt 0 view .LVU9436
 33612 0134 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33613              		.loc 1 15999 8 view .LVU9437
 33614 0138 28B9     		cbnz	r0, .L2353
 33615              	.LVL4152:
 33616              	.L2339:
16000:Core/Src/bno055.c ****     {
16001:Core/Src/bno055.c ****         /* set the operation mode of
16002:Core/Src/bno055.c ****          * previous operation mode*/
16003:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16004:Core/Src/bno055.c ****     }
16005:Core/Src/bno055.c **** 
16006:Core/Src/bno055.c ****     return com_rslt;
16007:Core/Src/bno055.c **** }
 33617              		.loc 1 16007 1 view .LVU9438
 33618 013a 2046     		mov	r0, r4
 33619 013c 02B0     		add	sp, sp, #8
 33620              	.LCFI923:
 33621              		.cfi_remember_state
 33622              		.cfi_def_cfa_offset 16
 33623              		@ sp needed
 33624 013e 70BD     		pop	{r4, r5, r6, pc}
 33625              	.LVL4153:
 33626              	.L2347:
 33627              	.LCFI924:
 33628              		.cfi_restore_state
15986:Core/Src/bno055.c ****                 }
 33629              		.loc 1 15986 30 view .LVU9439
 33630 0140 4FF0FF34 		mov	r4, #-1
 33631 0144 F6E7     		b	.L2340
 33632              	.LVL4154:
 33633              	.L2353:
16003:Core/Src/bno055.c ****     }
 33634              		.loc 1 16003 9 is_stmt 1 view .LVU9440
16003:Core/Src/bno055.c ****     }
 33635              		.loc 1 16003 21 is_stmt 0 view .LVU9441
 33636 0146 FFF7FEFF 		bl	bno055_set_operation_mode
 33637              	.LVL4155:
16003:Core/Src/bno055.c ****     }
 33638              		.loc 1 16003 18 view .LVU9442
 33639 014a 54FA80F4 		uxtab	r4, r4, r0
 33640              	.LVL4156:
16003:Core/Src/bno055.c ****     }
 33641              		.loc 1 16003 18 view .LVU9443
 33642 014e 64B2     		sxtb	r4, r4
 33643              	.LVL4157:
16003:Core/Src/bno055.c ****     }
 33644              		.loc 1 16003 18 view .LVU9444
 33645 0150 F3E7     		b	.L2339
 33646              	.LVL4158:
 33647              	.L2344:
15906:Core/Src/bno055.c ****     }
 33648              		.loc 1 15906 16 view .LVU9445
 33649 0152 6FF07E04 		mvn	r4, #126
 33650 0156 F0E7     		b	.L2339
 33651              	.L2355:
 33652              		.align	2
ARM GAS  /tmp/ccO72alg.s 			page 943


 33653              	.L2354:
 33654 0158 00000000 		.word	.LANCHOR0
 33655              		.cfi_endproc
 33656              	.LFE232:
 33658              		.section	.text.bno055_get_accel_high_g_durn,"ax",%progbits
 33659              		.align	1
 33660              		.global	bno055_get_accel_high_g_durn
 33661              		.syntax unified
 33662              		.thumb
 33663              		.thumb_func
 33665              	bno055_get_accel_high_g_durn:
 33666              	.LVL4159:
 33667              	.LFB233:
16008:Core/Src/bno055.c **** 
16009:Core/Src/bno055.c **** /*!
16010:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg duration
16011:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16012:Core/Src/bno055.c ****  *
16013:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16014:Core/Src/bno055.c ****  *
16015:Core/Src/bno055.c ****  *  @return results of bus communication function
16016:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16017:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16018:Core/Src/bno055.c ****  *
16019:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16020:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16021:Core/Src/bno055.c ****  *
16022:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16023:Core/Src/bno055.c ****  *
16024:Core/Src/bno055.c ****  */
16025:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_durn(u8 *accel_high_g_durn_u8)
16026:Core/Src/bno055.c **** {
 33668              		.loc 1 16026 1 is_stmt 1 view -0
 33669              		.cfi_startproc
 33670              		@ args = 0, pretend = 0, frame = 8
 33671              		@ frame_needed = 0, uses_anonymous_args = 0
 33672              		.loc 1 16026 1 is_stmt 0 view .LVU9447
 33673 0000 70B5     		push	{r4, r5, r6, lr}
 33674              	.LCFI925:
 33675              		.cfi_def_cfa_offset 16
 33676              		.cfi_offset 4, -16
 33677              		.cfi_offset 5, -12
 33678              		.cfi_offset 6, -8
 33679              		.cfi_offset 14, -4
 33680 0002 82B0     		sub	sp, sp, #8
 33681              	.LCFI926:
 33682              		.cfi_def_cfa_offset 24
16027:Core/Src/bno055.c ****     /* Variable used to return value of
16028:Core/Src/bno055.c ****      * communication routine*/
16029:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33683              		.loc 1 16029 5 is_stmt 1 view .LVU9448
 33684              	.LVL4160:
16030:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33685              		.loc 1 16030 5 view .LVU9449
 33686              		.loc 1 16030 8 is_stmt 0 view .LVU9450
 33687 0004 0023     		movs	r3, #0
 33688 0006 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccO72alg.s 			page 944


16031:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33689              		.loc 1 16031 5 is_stmt 1 view .LVU9451
 33690              	.LVL4161:
16032:Core/Src/bno055.c **** 
16033:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16034:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33691              		.loc 1 16034 5 view .LVU9452
 33692              		.loc 1 16034 18 is_stmt 0 view .LVU9453
 33693 000a 134B     		ldr	r3, .L2364
 33694 000c 1B68     		ldr	r3, [r3]
 33695              		.loc 1 16034 8 view .LVU9454
 33696 000e E3B1     		cbz	r3, .L2360
 33697 0010 0546     		mov	r5, r0
16035:Core/Src/bno055.c ****     {
16036:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16037:Core/Src/bno055.c ****     }
16038:Core/Src/bno055.c ****     else
16039:Core/Src/bno055.c ****     {
16040:Core/Src/bno055.c ****         /*condition check for page, accel highg duration is
16041:Core/Src/bno055.c ****          * available in the page one*/
16042:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 33698              		.loc 1 16042 9 is_stmt 1 view .LVU9455
 33699              		.loc 1 16042 21 is_stmt 0 view .LVU9456
 33700 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33701              		.loc 1 16042 12 view .LVU9457
 33702 0014 012B     		cmp	r3, #1
 33703 0016 12D1     		bne	.L2363
 33704              	.LVL4162:
 33705              	.L2358:
16043:Core/Src/bno055.c ****         {
16044:Core/Src/bno055.c ****             /* Write page as one */
16045:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16046:Core/Src/bno055.c ****         }
16047:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 33706              		.loc 1 16047 53 discriminator 1 view .LVU9458
 33707 0018 0F4B     		ldr	r3, .L2364
 33708 001a 1B68     		ldr	r3, [r3]
 33709 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 33710              		.loc 1 16047 41 discriminator 1 view .LVU9459
 33711 001e 012B     		cmp	r3, #1
 33712 0020 16D1     		bne	.L2361
 33713              	.L2359:
16048:Core/Src/bno055.c ****         {
16049:Core/Src/bno055.c ****             /* Read the value of accel highg duration*/
16050:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 33714              		.loc 1 16050 13 is_stmt 1 view .LVU9460
 33715              		.loc 1 16050 32 is_stmt 0 view .LVU9461
 33716 0022 0D4B     		ldr	r3, .L2364
 33717 0024 1C68     		ldr	r4, [r3]
 33718 0026 2669     		ldr	r6, [r4, #16]
 33719              		.loc 1 16050 24 view .LVU9462
 33720 0028 0123     		movs	r3, #1
 33721 002a 0DF10702 		add	r2, sp, #7
 33722 002e 1321     		movs	r1, #19
 33723 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 33724 0032 B047     		blx	r6
 33725              	.LVL4163:
ARM GAS  /tmp/ccO72alg.s 			page 945


16051:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_DURN_REG,
16052:Core/Src/bno055.c ****                                                       &data_u8r,
16053:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16054:Core/Src/bno055.c ****             *accel_high_g_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN);
 33726              		.loc 1 16054 13 is_stmt 1 view .LVU9463
 33727              		.loc 1 16054 35 is_stmt 0 view .LVU9464
 33728 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 33729 0038 2B70     		strb	r3, [r5]
 33730              	.LVL4164:
 33731              	.L2357:
16055:Core/Src/bno055.c ****         }
16056:Core/Src/bno055.c ****         else
16057:Core/Src/bno055.c ****         {
16058:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16059:Core/Src/bno055.c ****         }
16060:Core/Src/bno055.c ****     }
16061:Core/Src/bno055.c **** 
16062:Core/Src/bno055.c ****     return com_rslt;
16063:Core/Src/bno055.c **** }
 33732              		.loc 1 16063 1 view .LVU9465
 33733 003a 02B0     		add	sp, sp, #8
 33734              	.LCFI927:
 33735              		.cfi_remember_state
 33736              		.cfi_def_cfa_offset 16
 33737              		@ sp needed
 33738 003c 70BD     		pop	{r4, r5, r6, pc}
 33739              	.LVL4165:
 33740              	.L2363:
 33741              	.LCFI928:
 33742              		.cfi_restore_state
16045:Core/Src/bno055.c ****         }
 33743              		.loc 1 16045 13 is_stmt 1 view .LVU9466
16045:Core/Src/bno055.c ****         }
 33744              		.loc 1 16045 23 is_stmt 0 view .LVU9467
 33745 003e 0120     		movs	r0, #1
 33746              	.LVL4166:
16045:Core/Src/bno055.c ****         }
 33747              		.loc 1 16045 23 view .LVU9468
 33748 0040 FFF7FEFF 		bl	bno055_write_page_id
 33749              	.LVL4167:
16047:Core/Src/bno055.c ****         {
 33750              		.loc 1 16047 9 is_stmt 1 view .LVU9469
16047:Core/Src/bno055.c ****         {
 33751              		.loc 1 16047 12 is_stmt 0 view .LVU9470
 33752 0044 0028     		cmp	r0, #0
 33753 0046 ECD0     		beq	.L2359
 33754 0048 E6E7     		b	.L2358
 33755              	.LVL4168:
 33756              	.L2360:
16036:Core/Src/bno055.c ****     }
 33757              		.loc 1 16036 16 view .LVU9471
 33758 004a 6FF07E00 		mvn	r0, #126
 33759              	.LVL4169:
16036:Core/Src/bno055.c ****     }
 33760              		.loc 1 16036 16 view .LVU9472
 33761 004e F4E7     		b	.L2357
 33762              	.LVL4170:
ARM GAS  /tmp/ccO72alg.s 			page 946


 33763              	.L2361:
16058:Core/Src/bno055.c ****         }
 33764              		.loc 1 16058 22 view .LVU9473
 33765 0050 4FF0FF30 		mov	r0, #-1
 33766 0054 F1E7     		b	.L2357
 33767              	.L2365:
 33768 0056 00BF     		.align	2
 33769              	.L2364:
 33770 0058 00000000 		.word	.LANCHOR0
 33771              		.cfi_endproc
 33772              	.LFE233:
 33774              		.section	.text.bno055_set_accel_high_g_durn,"ax",%progbits
 33775              		.align	1
 33776              		.global	bno055_set_accel_high_g_durn
 33777              		.syntax unified
 33778              		.thumb
 33779              		.thumb_func
 33781              	bno055_set_accel_high_g_durn:
 33782              	.LVL4171:
 33783              	.LFB234:
16064:Core/Src/bno055.c **** 
16065:Core/Src/bno055.c **** /*!
16066:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg duration
16067:Core/Src/bno055.c ****  *  from page one register from 0x13 bit 0 to 7
16068:Core/Src/bno055.c ****  *
16069:Core/Src/bno055.c ****  *  @param accel_high_g_durn_u8 : The value of accel highg duration
16070:Core/Src/bno055.c ****  *
16071:Core/Src/bno055.c ****  *  @return results of bus communication function
16072:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16073:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16074:Core/Src/bno055.c ****  *
16075:Core/Src/bno055.c ****  *  @note The high-g interrupt trigger delay according
16076:Core/Src/bno055.c ****  *  to [highg duration  + 1] * 2 ms
16077:Core/Src/bno055.c ****  *
16078:Core/Src/bno055.c ****  *  in a range from 2 ms to 512 ms
16079:Core/Src/bno055.c ****  *
16080:Core/Src/bno055.c ****  */
16081:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_durn(u8 accel_high_g_durn_u8)
16082:Core/Src/bno055.c **** {
 33784              		.loc 1 16082 1 is_stmt 1 view -0
 33785              		.cfi_startproc
 33786              		@ args = 0, pretend = 0, frame = 8
 33787              		@ frame_needed = 0, uses_anonymous_args = 0
 33788              		.loc 1 16082 1 is_stmt 0 view .LVU9475
 33789 0000 30B5     		push	{r4, r5, lr}
 33790              	.LCFI929:
 33791              		.cfi_def_cfa_offset 12
 33792              		.cfi_offset 4, -12
 33793              		.cfi_offset 5, -8
 33794              		.cfi_offset 14, -4
 33795 0002 83B0     		sub	sp, sp, #12
 33796              	.LCFI930:
 33797              		.cfi_def_cfa_offset 24
16083:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33798              		.loc 1 16083 5 is_stmt 1 view .LVU9476
 33799              	.LVL4172:
16084:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccO72alg.s 			page 947


 33800              		.loc 1 16084 5 view .LVU9477
 33801              		.loc 1 16084 8 is_stmt 0 view .LVU9478
 33802 0004 0023     		movs	r3, #0
 33803 0006 8DF80730 		strb	r3, [sp, #7]
16085:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33804              		.loc 1 16085 5 is_stmt 1 view .LVU9479
 33805              	.LVL4173:
16086:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 33806              		.loc 1 16086 5 view .LVU9480
 33807              		.loc 1 16086 8 is_stmt 0 view .LVU9481
 33808 000a 8DF80630 		strb	r3, [sp, #6]
16087:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 33809              		.loc 1 16087 5 is_stmt 1 view .LVU9482
 33810              	.LVL4174:
16088:Core/Src/bno055.c **** 
16089:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16090:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33811              		.loc 1 16090 5 view .LVU9483
 33812              		.loc 1 16090 18 is_stmt 0 view .LVU9484
 33813 000e 254B     		ldr	r3, .L2378
 33814 0010 1B68     		ldr	r3, [r3]
 33815              		.loc 1 16090 8 view .LVU9485
 33816 0012 002B     		cmp	r3, #0
 33817 0014 42D0     		beq	.L2370
 33818 0016 0546     		mov	r5, r0
16091:Core/Src/bno055.c ****     {
16092:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16093:Core/Src/bno055.c ****     }
16094:Core/Src/bno055.c ****     else
16095:Core/Src/bno055.c ****     {
16096:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16097:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16098:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16099:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 33819              		.loc 1 16099 9 is_stmt 1 view .LVU9486
 33820              		.loc 1 16099 19 is_stmt 0 view .LVU9487
 33821 0018 0DF10600 		add	r0, sp, #6
 33822              	.LVL4175:
 33823              		.loc 1 16099 19 view .LVU9488
 33824 001c FFF7FEFF 		bl	bno055_get_operation_mode
 33825              	.LVL4176:
16100:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 33826              		.loc 1 16100 9 is_stmt 1 view .LVU9489
 33827              		.loc 1 16100 12 is_stmt 0 view .LVU9490
 33828 0020 0446     		mov	r4, r0
 33829 0022 50BB     		cbnz	r0, .L2371
16101:Core/Src/bno055.c ****         {
16102:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33830              		.loc 1 16102 13 is_stmt 1 view .LVU9491
 33831              		.loc 1 16102 32 is_stmt 0 view .LVU9492
 33832 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 33833              		.loc 1 16102 16 view .LVU9493
 33834 0028 1BB9     		cbnz	r3, .L2375
 33835              	.LVL4177:
 33836              	.L2369:
16103:Core/Src/bno055.c ****             {
16104:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
ARM GAS  /tmp/ccO72alg.s 			page 948


16105:Core/Src/bno055.c ****             }
16106:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 33837              		.loc 1 16106 13 is_stmt 1 view .LVU9494
 33838              		.loc 1 16106 16 is_stmt 0 view .LVU9495
 33839 002a 44B1     		cbz	r4, .L2376
16107:Core/Src/bno055.c ****             {
16108:Core/Src/bno055.c ****                 /* Write page as one */
16109:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16110:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16111:Core/Src/bno055.c ****                 {
16112:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16113:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
16114:Core/Src/bno055.c ****                                                               &data_u8r,
16115:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16116:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16117:Core/Src/bno055.c ****                     {
16118:Core/Src/bno055.c ****                         /* Write the value of
16119:Core/Src/bno055.c ****                          * accel highg duration*/
16120:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_DURN, accel_hi
16121:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16122:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
16123:Core/Src/bno055.c ****                                                                     &data_u8r,
16124:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16125:Core/Src/bno055.c ****                     }
16126:Core/Src/bno055.c ****                 }
16127:Core/Src/bno055.c ****                 else
16128:Core/Src/bno055.c ****                 {
16129:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16130:Core/Src/bno055.c ****                 }
16131:Core/Src/bno055.c ****             }
16132:Core/Src/bno055.c ****             else
16133:Core/Src/bno055.c ****             {
16134:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 33840              		.loc 1 16134 26 view .LVU9496
 33841 002c 4FF0FF34 		mov	r4, #-1
 33842              	.LVL4178:
 33843              		.loc 1 16134 26 view .LVU9497
 33844 0030 25E0     		b	.L2368
 33845              	.LVL4179:
 33846              	.L2375:
16104:Core/Src/bno055.c ****             }
 33847              		.loc 1 16104 17 is_stmt 1 view .LVU9498
16104:Core/Src/bno055.c ****             }
 33848              		.loc 1 16104 28 is_stmt 0 view .LVU9499
 33849 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 33850              	.LVL4180:
16104:Core/Src/bno055.c ****             }
 33851              		.loc 1 16104 25 view .LVU9500
 33852 0036 54FA80F4 		uxtab	r4, r4, r0
 33853 003a 64B2     		sxtb	r4, r4
 33854              	.LVL4181:
16104:Core/Src/bno055.c ****             }
 33855              		.loc 1 16104 25 view .LVU9501
 33856 003c F5E7     		b	.L2369
 33857              	.L2376:
16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33858              		.loc 1 16109 17 is_stmt 1 view .LVU9502
ARM GAS  /tmp/ccO72alg.s 			page 949


16109:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 33859              		.loc 1 16109 30 is_stmt 0 view .LVU9503
 33860 003e 0120     		movs	r0, #1
 33861 0040 FFF7FEFF 		bl	bno055_write_page_id
 33862              	.LVL4182:
16110:Core/Src/bno055.c ****                 {
 33863              		.loc 1 16110 17 is_stmt 1 view .LVU9504
16110:Core/Src/bno055.c ****                 {
 33864              		.loc 1 16110 20 is_stmt 0 view .LVU9505
 33865 0044 08BB     		cbnz	r0, .L2373
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33866              		.loc 1 16112 21 is_stmt 1 view .LVU9506
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33867              		.loc 1 16112 40 is_stmt 0 view .LVU9507
 33868 0046 174B     		ldr	r3, .L2378
 33869 0048 1868     		ldr	r0, [r3]
 33870              	.LVL4183:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33871              		.loc 1 16112 40 view .LVU9508
 33872 004a 0469     		ldr	r4, [r0, #16]
 33873              	.LVL4184:
16112:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_DURN_REG,
 33874              		.loc 1 16112 32 view .LVU9509
 33875 004c 0123     		movs	r3, #1
 33876 004e 0DF10702 		add	r2, sp, #7
 33877 0052 1321     		movs	r1, #19
 33878 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33879 0056 A047     		blx	r4
 33880              	.LVL4185:
16116:Core/Src/bno055.c ****                     {
 33881              		.loc 1 16116 21 is_stmt 1 view .LVU9510
16116:Core/Src/bno055.c ****                     {
 33882              		.loc 1 16116 24 is_stmt 0 view .LVU9511
 33883 0058 0446     		mov	r4, r0
 33884 005a 80B9     		cbnz	r0, .L2368
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33885              		.loc 1 16120 25 is_stmt 1 view .LVU9512
16120:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 33886              		.loc 1 16120 34 is_stmt 0 view .LVU9513
 33887 005c 8DF80750 		strb	r5, [sp, #7]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33888              		.loc 1 16121 25 is_stmt 1 view .LVU9514
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33889              		.loc 1 16121 45 is_stmt 0 view .LVU9515
 33890 0060 104B     		ldr	r3, .L2378
 33891 0062 1868     		ldr	r0, [r3]
 33892              	.LVL4186:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33893              		.loc 1 16121 45 view .LVU9516
 33894 0064 C568     		ldr	r5, [r0, #12]
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33895              		.loc 1 16121 37 view .LVU9517
 33896 0066 0123     		movs	r3, #1
 33897 0068 0DF10702 		add	r2, sp, #7
 33898 006c 1321     		movs	r1, #19
 33899 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 33900 0070 A847     		blx	r5
ARM GAS  /tmp/ccO72alg.s 			page 950


 33901              	.LVL4187:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33902              		.loc 1 16121 34 view .LVU9518
 33903 0072 54FA80F4 		uxtab	r4, r4, r0
 33904 0076 64B2     		sxtb	r4, r4
 33905              	.LVL4188:
16121:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_DURN_REG,
 33906              		.loc 1 16121 34 view .LVU9519
 33907 0078 01E0     		b	.L2368
 33908              	.LVL4189:
 33909              	.L2371:
16135:Core/Src/bno055.c ****             }
16136:Core/Src/bno055.c ****         }
16137:Core/Src/bno055.c ****         else
16138:Core/Src/bno055.c ****         {
16139:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 33910              		.loc 1 16139 22 view .LVU9520
 33911 007a 4FF0FF34 		mov	r4, #-1
 33912              	.LVL4190:
 33913              	.L2368:
16140:Core/Src/bno055.c ****         }
16141:Core/Src/bno055.c ****     }
16142:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 33914              		.loc 1 16142 5 is_stmt 1 view .LVU9521
 33915              		.loc 1 16142 24 is_stmt 0 view .LVU9522
 33916 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 33917              		.loc 1 16142 8 view .LVU9523
 33918 0082 28B9     		cbnz	r0, .L2377
 33919              	.LVL4191:
 33920              	.L2367:
16143:Core/Src/bno055.c ****     {
16144:Core/Src/bno055.c ****         /* set the operation mode of
16145:Core/Src/bno055.c ****          * previous operation mode*/
16146:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16147:Core/Src/bno055.c ****     }
16148:Core/Src/bno055.c **** 
16149:Core/Src/bno055.c ****     return com_rslt;
16150:Core/Src/bno055.c **** }
 33921              		.loc 1 16150 1 view .LVU9524
 33922 0084 2046     		mov	r0, r4
 33923 0086 03B0     		add	sp, sp, #12
 33924              	.LCFI931:
 33925              		.cfi_remember_state
 33926              		.cfi_def_cfa_offset 12
 33927              		@ sp needed
 33928 0088 30BD     		pop	{r4, r5, pc}
 33929              	.LVL4192:
 33930              	.L2373:
 33931              	.LCFI932:
 33932              		.cfi_restore_state
16129:Core/Src/bno055.c ****                 }
 33933              		.loc 1 16129 30 view .LVU9525
 33934 008a 4FF0FF34 		mov	r4, #-1
 33935              	.LVL4193:
16129:Core/Src/bno055.c ****                 }
 33936              		.loc 1 16129 30 view .LVU9526
 33937 008e F6E7     		b	.L2368
ARM GAS  /tmp/ccO72alg.s 			page 951


 33938              	.LVL4194:
 33939              	.L2377:
16146:Core/Src/bno055.c ****     }
 33940              		.loc 1 16146 9 is_stmt 1 view .LVU9527
16146:Core/Src/bno055.c ****     }
 33941              		.loc 1 16146 21 is_stmt 0 view .LVU9528
 33942 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 33943              	.LVL4195:
16146:Core/Src/bno055.c ****     }
 33944              		.loc 1 16146 18 view .LVU9529
 33945 0094 54FA80F4 		uxtab	r4, r4, r0
 33946              	.LVL4196:
16146:Core/Src/bno055.c ****     }
 33947              		.loc 1 16146 18 view .LVU9530
 33948 0098 64B2     		sxtb	r4, r4
 33949              	.LVL4197:
16146:Core/Src/bno055.c ****     }
 33950              		.loc 1 16146 18 view .LVU9531
 33951 009a F3E7     		b	.L2367
 33952              	.LVL4198:
 33953              	.L2370:
16092:Core/Src/bno055.c ****     }
 33954              		.loc 1 16092 16 view .LVU9532
 33955 009c 6FF07E04 		mvn	r4, #126
 33956 00a0 F0E7     		b	.L2367
 33957              	.L2379:
 33958 00a2 00BF     		.align	2
 33959              	.L2378:
 33960 00a4 00000000 		.word	.LANCHOR0
 33961              		.cfi_endproc
 33962              	.LFE234:
 33964              		.section	.text.bno055_get_accel_high_g_thres,"ax",%progbits
 33965              		.align	1
 33966              		.global	bno055_get_accel_high_g_thres
 33967              		.syntax unified
 33968              		.thumb
 33969              		.thumb_func
 33971              	bno055_get_accel_high_g_thres:
 33972              	.LVL4199:
 33973              	.LFB235:
16151:Core/Src/bno055.c **** 
16152:Core/Src/bno055.c **** /*!
16153:Core/Src/bno055.c ****  *  @brief This API used to read the accel highg threshold
16154:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16155:Core/Src/bno055.c ****  *
16156:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16157:Core/Src/bno055.c ****  *
16158:Core/Src/bno055.c ****  *  @return results of bus communication function
16159:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16160:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16161:Core/Src/bno055.c ****  *
16162:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16163:Core/Src/bno055.c ****  *  for accel g range
16164:Core/Src/bno055.c ****  *
16165:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16166:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16167:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
ARM GAS  /tmp/ccO72alg.s 			page 952


16168:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16169:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16170:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16171:Core/Src/bno055.c ****  *
16172:Core/Src/bno055.c ****  */
16173:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_high_g_thres(u8 *accel_high_g_thres_u8)
16174:Core/Src/bno055.c **** {
 33974              		.loc 1 16174 1 is_stmt 1 view -0
 33975              		.cfi_startproc
 33976              		@ args = 0, pretend = 0, frame = 8
 33977              		@ frame_needed = 0, uses_anonymous_args = 0
 33978              		.loc 1 16174 1 is_stmt 0 view .LVU9534
 33979 0000 70B5     		push	{r4, r5, r6, lr}
 33980              	.LCFI933:
 33981              		.cfi_def_cfa_offset 16
 33982              		.cfi_offset 4, -16
 33983              		.cfi_offset 5, -12
 33984              		.cfi_offset 6, -8
 33985              		.cfi_offset 14, -4
 33986 0002 82B0     		sub	sp, sp, #8
 33987              	.LCFI934:
 33988              		.cfi_def_cfa_offset 24
16175:Core/Src/bno055.c ****     /* Variable used to return value of
16176:Core/Src/bno055.c ****      * communication routine*/
16177:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 33989              		.loc 1 16177 5 is_stmt 1 view .LVU9535
 33990              	.LVL4200:
16178:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 33991              		.loc 1 16178 5 view .LVU9536
 33992              		.loc 1 16178 8 is_stmt 0 view .LVU9537
 33993 0004 0023     		movs	r3, #0
 33994 0006 8DF80730 		strb	r3, [sp, #7]
16179:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 33995              		.loc 1 16179 5 is_stmt 1 view .LVU9538
 33996              	.LVL4201:
16180:Core/Src/bno055.c **** 
16181:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16182:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 33997              		.loc 1 16182 5 view .LVU9539
 33998              		.loc 1 16182 18 is_stmt 0 view .LVU9540
 33999 000a 134B     		ldr	r3, .L2388
 34000 000c 1B68     		ldr	r3, [r3]
 34001              		.loc 1 16182 8 view .LVU9541
 34002 000e E3B1     		cbz	r3, .L2384
 34003 0010 0546     		mov	r5, r0
16183:Core/Src/bno055.c ****     {
16184:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16185:Core/Src/bno055.c ****     }
16186:Core/Src/bno055.c ****     else
16187:Core/Src/bno055.c ****     {
16188:Core/Src/bno055.c ****         /*condition check for page, highg threshold is
16189:Core/Src/bno055.c ****          * available in the page one*/
16190:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34004              		.loc 1 16190 9 is_stmt 1 view .LVU9542
 34005              		.loc 1 16190 21 is_stmt 0 view .LVU9543
 34006 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34007              		.loc 1 16190 12 view .LVU9544
ARM GAS  /tmp/ccO72alg.s 			page 953


 34008 0014 012B     		cmp	r3, #1
 34009 0016 12D1     		bne	.L2387
 34010              	.LVL4202:
 34011              	.L2382:
16191:Core/Src/bno055.c ****         {
16192:Core/Src/bno055.c ****             /* Write page as one */
16193:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16194:Core/Src/bno055.c ****         }
16195:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34012              		.loc 1 16195 53 discriminator 1 view .LVU9545
 34013 0018 0F4B     		ldr	r3, .L2388
 34014 001a 1B68     		ldr	r3, [r3]
 34015 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34016              		.loc 1 16195 41 discriminator 1 view .LVU9546
 34017 001e 012B     		cmp	r3, #1
 34018 0020 16D1     		bne	.L2385
 34019              	.L2383:
16196:Core/Src/bno055.c ****         {
16197:Core/Src/bno055.c ****             /* Read the value of highg threshold */
16198:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34020              		.loc 1 16198 13 is_stmt 1 view .LVU9547
 34021              		.loc 1 16198 32 is_stmt 0 view .LVU9548
 34022 0022 0D4B     		ldr	r3, .L2388
 34023 0024 1C68     		ldr	r4, [r3]
 34024 0026 2669     		ldr	r6, [r4, #16]
 34025              		.loc 1 16198 24 view .LVU9549
 34026 0028 0123     		movs	r3, #1
 34027 002a 0DF10702 		add	r2, sp, #7
 34028 002e 1421     		movs	r1, #20
 34029 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 34030 0032 B047     		blx	r6
 34031              	.LVL4203:
16199:Core/Src/bno055.c ****                                                       BNO055_ACCEL_HIGH_G_THRES_REG,
16200:Core/Src/bno055.c ****                                                       &data_u8r,
16201:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16202:Core/Src/bno055.c ****             *accel_high_g_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES);
 34032              		.loc 1 16202 13 is_stmt 1 view .LVU9550
 34033              		.loc 1 16202 36 is_stmt 0 view .LVU9551
 34034 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34035 0038 2B70     		strb	r3, [r5]
 34036              	.LVL4204:
 34037              	.L2381:
16203:Core/Src/bno055.c ****         }
16204:Core/Src/bno055.c ****         else
16205:Core/Src/bno055.c ****         {
16206:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16207:Core/Src/bno055.c ****         }
16208:Core/Src/bno055.c ****     }
16209:Core/Src/bno055.c **** 
16210:Core/Src/bno055.c ****     return com_rslt;
16211:Core/Src/bno055.c **** }
 34038              		.loc 1 16211 1 view .LVU9552
 34039 003a 02B0     		add	sp, sp, #8
 34040              	.LCFI935:
 34041              		.cfi_remember_state
 34042              		.cfi_def_cfa_offset 16
 34043              		@ sp needed
ARM GAS  /tmp/ccO72alg.s 			page 954


 34044 003c 70BD     		pop	{r4, r5, r6, pc}
 34045              	.LVL4205:
 34046              	.L2387:
 34047              	.LCFI936:
 34048              		.cfi_restore_state
16193:Core/Src/bno055.c ****         }
 34049              		.loc 1 16193 13 is_stmt 1 view .LVU9553
16193:Core/Src/bno055.c ****         }
 34050              		.loc 1 16193 23 is_stmt 0 view .LVU9554
 34051 003e 0120     		movs	r0, #1
 34052              	.LVL4206:
16193:Core/Src/bno055.c ****         }
 34053              		.loc 1 16193 23 view .LVU9555
 34054 0040 FFF7FEFF 		bl	bno055_write_page_id
 34055              	.LVL4207:
16195:Core/Src/bno055.c ****         {
 34056              		.loc 1 16195 9 is_stmt 1 view .LVU9556
16195:Core/Src/bno055.c ****         {
 34057              		.loc 1 16195 12 is_stmt 0 view .LVU9557
 34058 0044 0028     		cmp	r0, #0
 34059 0046 ECD0     		beq	.L2383
 34060 0048 E6E7     		b	.L2382
 34061              	.LVL4208:
 34062              	.L2384:
16184:Core/Src/bno055.c ****     }
 34063              		.loc 1 16184 16 view .LVU9558
 34064 004a 6FF07E00 		mvn	r0, #126
 34065              	.LVL4209:
16184:Core/Src/bno055.c ****     }
 34066              		.loc 1 16184 16 view .LVU9559
 34067 004e F4E7     		b	.L2381
 34068              	.LVL4210:
 34069              	.L2385:
16206:Core/Src/bno055.c ****         }
 34070              		.loc 1 16206 22 view .LVU9560
 34071 0050 4FF0FF30 		mov	r0, #-1
 34072 0054 F1E7     		b	.L2381
 34073              	.L2389:
 34074 0056 00BF     		.align	2
 34075              	.L2388:
 34076 0058 00000000 		.word	.LANCHOR0
 34077              		.cfi_endproc
 34078              	.LFE235:
 34080              		.section	.text.bno055_set_accel_high_g_thres,"ax",%progbits
 34081              		.align	1
 34082              		.global	bno055_set_accel_high_g_thres
 34083              		.syntax unified
 34084              		.thumb
 34085              		.thumb_func
 34087              	bno055_set_accel_high_g_thres:
 34088              	.LVL4211:
 34089              	.LFB236:
16212:Core/Src/bno055.c **** 
16213:Core/Src/bno055.c **** /*!
16214:Core/Src/bno055.c ****  *  @brief This API used to write the accel highg threshold
16215:Core/Src/bno055.c ****  *  from page one register from 0x14 bit 0 to 7
16216:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 955


16217:Core/Src/bno055.c ****  *  @param accel_high_g_thres_u8 : The value of accel highg threshold
16218:Core/Src/bno055.c ****  *
16219:Core/Src/bno055.c ****  *  @return results of bus communication function
16220:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16221:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16222:Core/Src/bno055.c ****  *
16223:Core/Src/bno055.c ****  *  @note Accel highg interrupt threshold dependent
16224:Core/Src/bno055.c ****  *  for accel g range
16225:Core/Src/bno055.c ****  *
16226:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16227:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16228:Core/Src/bno055.c ****  *     2g        |    7.81mg     |   1LSB
16229:Core/Src/bno055.c ****  *     4g        |    15.63mg    |   1LSB
16230:Core/Src/bno055.c ****  *     8g        |    31.25mg    |   1LSB
16231:Core/Src/bno055.c ****  *     16g       |    62.5mg     |   1LSB
16232:Core/Src/bno055.c ****  *
16233:Core/Src/bno055.c ****  */
16234:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_high_g_thres(u8 accel_high_g_thres_u8)
16235:Core/Src/bno055.c **** {
 34090              		.loc 1 16235 1 is_stmt 1 view -0
 34091              		.cfi_startproc
 34092              		@ args = 0, pretend = 0, frame = 8
 34093              		@ frame_needed = 0, uses_anonymous_args = 0
 34094              		.loc 1 16235 1 is_stmt 0 view .LVU9562
 34095 0000 30B5     		push	{r4, r5, lr}
 34096              	.LCFI937:
 34097              		.cfi_def_cfa_offset 12
 34098              		.cfi_offset 4, -12
 34099              		.cfi_offset 5, -8
 34100              		.cfi_offset 14, -4
 34101 0002 83B0     		sub	sp, sp, #12
 34102              	.LCFI938:
 34103              		.cfi_def_cfa_offset 24
16236:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34104              		.loc 1 16236 5 is_stmt 1 view .LVU9563
 34105              	.LVL4212:
16237:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34106              		.loc 1 16237 5 view .LVU9564
 34107              		.loc 1 16237 8 is_stmt 0 view .LVU9565
 34108 0004 0023     		movs	r3, #0
 34109 0006 8DF80730 		strb	r3, [sp, #7]
16238:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34110              		.loc 1 16238 5 is_stmt 1 view .LVU9566
 34111              	.LVL4213:
16239:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34112              		.loc 1 16239 5 view .LVU9567
 34113              		.loc 1 16239 8 is_stmt 0 view .LVU9568
 34114 000a 8DF80630 		strb	r3, [sp, #6]
16240:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34115              		.loc 1 16240 5 is_stmt 1 view .LVU9569
 34116              	.LVL4214:
16241:Core/Src/bno055.c **** 
16242:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16243:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34117              		.loc 1 16243 5 view .LVU9570
 34118              		.loc 1 16243 18 is_stmt 0 view .LVU9571
 34119 000e 254B     		ldr	r3, .L2402
ARM GAS  /tmp/ccO72alg.s 			page 956


 34120 0010 1B68     		ldr	r3, [r3]
 34121              		.loc 1 16243 8 view .LVU9572
 34122 0012 002B     		cmp	r3, #0
 34123 0014 42D0     		beq	.L2394
 34124 0016 0546     		mov	r5, r0
16244:Core/Src/bno055.c ****     {
16245:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16246:Core/Src/bno055.c ****     }
16247:Core/Src/bno055.c ****     else
16248:Core/Src/bno055.c ****     {
16249:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16250:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16251:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16252:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34125              		.loc 1 16252 9 is_stmt 1 view .LVU9573
 34126              		.loc 1 16252 19 is_stmt 0 view .LVU9574
 34127 0018 0DF10600 		add	r0, sp, #6
 34128              	.LVL4215:
 34129              		.loc 1 16252 19 view .LVU9575
 34130 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34131              	.LVL4216:
16253:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34132              		.loc 1 16253 9 is_stmt 1 view .LVU9576
 34133              		.loc 1 16253 12 is_stmt 0 view .LVU9577
 34134 0020 0446     		mov	r4, r0
 34135 0022 50BB     		cbnz	r0, .L2395
16254:Core/Src/bno055.c ****         {
16255:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34136              		.loc 1 16255 13 is_stmt 1 view .LVU9578
 34137              		.loc 1 16255 32 is_stmt 0 view .LVU9579
 34138 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34139              		.loc 1 16255 16 view .LVU9580
 34140 0028 1BB9     		cbnz	r3, .L2399
 34141              	.LVL4217:
 34142              	.L2393:
16256:Core/Src/bno055.c ****             {
16257:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16258:Core/Src/bno055.c ****             }
16259:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34143              		.loc 1 16259 13 is_stmt 1 view .LVU9581
 34144              		.loc 1 16259 16 is_stmt 0 view .LVU9582
 34145 002a 44B1     		cbz	r4, .L2400
16260:Core/Src/bno055.c ****             {
16261:Core/Src/bno055.c ****                 /* Write page as one */
16262:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16263:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16264:Core/Src/bno055.c ****                 {
16265:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16266:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
16267:Core/Src/bno055.c ****                                                               &data_u8r,
16268:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16269:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16270:Core/Src/bno055.c ****                     {
16271:Core/Src/bno055.c ****                         /* Write the value of
16272:Core/Src/bno055.c ****                          * accel highg threshold */
16273:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_ACCEL_HIGH_G_THRES, accel_h
16274:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 957


16275:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
16276:Core/Src/bno055.c ****                                                                     &data_u8r,
16277:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16278:Core/Src/bno055.c ****                     }
16279:Core/Src/bno055.c ****                 }
16280:Core/Src/bno055.c ****                 else
16281:Core/Src/bno055.c ****                 {
16282:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16283:Core/Src/bno055.c ****                 }
16284:Core/Src/bno055.c ****             }
16285:Core/Src/bno055.c ****             else
16286:Core/Src/bno055.c ****             {
16287:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34146              		.loc 1 16287 26 view .LVU9583
 34147 002c 4FF0FF34 		mov	r4, #-1
 34148              	.LVL4218:
 34149              		.loc 1 16287 26 view .LVU9584
 34150 0030 25E0     		b	.L2392
 34151              	.LVL4219:
 34152              	.L2399:
16257:Core/Src/bno055.c ****             }
 34153              		.loc 1 16257 17 is_stmt 1 view .LVU9585
16257:Core/Src/bno055.c ****             }
 34154              		.loc 1 16257 28 is_stmt 0 view .LVU9586
 34155 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34156              	.LVL4220:
16257:Core/Src/bno055.c ****             }
 34157              		.loc 1 16257 25 view .LVU9587
 34158 0036 54FA80F4 		uxtab	r4, r4, r0
 34159 003a 64B2     		sxtb	r4, r4
 34160              	.LVL4221:
16257:Core/Src/bno055.c ****             }
 34161              		.loc 1 16257 25 view .LVU9588
 34162 003c F5E7     		b	.L2393
 34163              	.L2400:
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34164              		.loc 1 16262 17 is_stmt 1 view .LVU9589
16262:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34165              		.loc 1 16262 30 is_stmt 0 view .LVU9590
 34166 003e 0120     		movs	r0, #1
 34167 0040 FFF7FEFF 		bl	bno055_write_page_id
 34168              	.LVL4222:
16263:Core/Src/bno055.c ****                 {
 34169              		.loc 1 16263 17 is_stmt 1 view .LVU9591
16263:Core/Src/bno055.c ****                 {
 34170              		.loc 1 16263 20 is_stmt 0 view .LVU9592
 34171 0044 08BB     		cbnz	r0, .L2397
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34172              		.loc 1 16265 21 is_stmt 1 view .LVU9593
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34173              		.loc 1 16265 40 is_stmt 0 view .LVU9594
 34174 0046 174B     		ldr	r3, .L2402
 34175 0048 1868     		ldr	r0, [r3]
 34176              	.LVL4223:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34177              		.loc 1 16265 40 view .LVU9595
 34178 004a 0469     		ldr	r4, [r0, #16]
ARM GAS  /tmp/ccO72alg.s 			page 958


 34179              	.LVL4224:
16265:Core/Src/bno055.c ****                                                               BNO055_ACCEL_HIGH_G_THRES_REG,
 34180              		.loc 1 16265 32 view .LVU9596
 34181 004c 0123     		movs	r3, #1
 34182 004e 0DF10702 		add	r2, sp, #7
 34183 0052 1421     		movs	r1, #20
 34184 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34185 0056 A047     		blx	r4
 34186              	.LVL4225:
16269:Core/Src/bno055.c ****                     {
 34187              		.loc 1 16269 21 is_stmt 1 view .LVU9597
16269:Core/Src/bno055.c ****                     {
 34188              		.loc 1 16269 24 is_stmt 0 view .LVU9598
 34189 0058 0446     		mov	r4, r0
 34190 005a 80B9     		cbnz	r0, .L2392
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34191              		.loc 1 16273 25 is_stmt 1 view .LVU9599
16273:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 34192              		.loc 1 16273 34 is_stmt 0 view .LVU9600
 34193 005c 8DF80750 		strb	r5, [sp, #7]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34194              		.loc 1 16274 25 is_stmt 1 view .LVU9601
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34195              		.loc 1 16274 45 is_stmt 0 view .LVU9602
 34196 0060 104B     		ldr	r3, .L2402
 34197 0062 1868     		ldr	r0, [r3]
 34198              	.LVL4226:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34199              		.loc 1 16274 45 view .LVU9603
 34200 0064 C568     		ldr	r5, [r0, #12]
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34201              		.loc 1 16274 37 view .LVU9604
 34202 0066 0123     		movs	r3, #1
 34203 0068 0DF10702 		add	r2, sp, #7
 34204 006c 1421     		movs	r1, #20
 34205 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34206 0070 A847     		blx	r5
 34207              	.LVL4227:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34208              		.loc 1 16274 34 view .LVU9605
 34209 0072 54FA80F4 		uxtab	r4, r4, r0
 34210 0076 64B2     		sxtb	r4, r4
 34211              	.LVL4228:
16274:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_HIGH_G_THRES_REG,
 34212              		.loc 1 16274 34 view .LVU9606
 34213 0078 01E0     		b	.L2392
 34214              	.LVL4229:
 34215              	.L2395:
16288:Core/Src/bno055.c ****             }
16289:Core/Src/bno055.c ****         }
16290:Core/Src/bno055.c ****         else
16291:Core/Src/bno055.c ****         {
16292:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34216              		.loc 1 16292 22 view .LVU9607
 34217 007a 4FF0FF34 		mov	r4, #-1
 34218              	.LVL4230:
 34219              	.L2392:
ARM GAS  /tmp/ccO72alg.s 			page 959


16293:Core/Src/bno055.c ****         }
16294:Core/Src/bno055.c ****     }
16295:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34220              		.loc 1 16295 5 is_stmt 1 view .LVU9608
 34221              		.loc 1 16295 24 is_stmt 0 view .LVU9609
 34222 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34223              		.loc 1 16295 8 view .LVU9610
 34224 0082 28B9     		cbnz	r0, .L2401
 34225              	.LVL4231:
 34226              	.L2391:
16296:Core/Src/bno055.c ****     {
16297:Core/Src/bno055.c ****         /* set the operation mode of
16298:Core/Src/bno055.c ****          * previous operation mode*/
16299:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16300:Core/Src/bno055.c ****     }
16301:Core/Src/bno055.c **** 
16302:Core/Src/bno055.c ****     return com_rslt;
16303:Core/Src/bno055.c **** }
 34227              		.loc 1 16303 1 view .LVU9611
 34228 0084 2046     		mov	r0, r4
 34229 0086 03B0     		add	sp, sp, #12
 34230              	.LCFI939:
 34231              		.cfi_remember_state
 34232              		.cfi_def_cfa_offset 12
 34233              		@ sp needed
 34234 0088 30BD     		pop	{r4, r5, pc}
 34235              	.LVL4232:
 34236              	.L2397:
 34237              	.LCFI940:
 34238              		.cfi_restore_state
16282:Core/Src/bno055.c ****                 }
 34239              		.loc 1 16282 30 view .LVU9612
 34240 008a 4FF0FF34 		mov	r4, #-1
 34241              	.LVL4233:
16282:Core/Src/bno055.c ****                 }
 34242              		.loc 1 16282 30 view .LVU9613
 34243 008e F6E7     		b	.L2392
 34244              	.LVL4234:
 34245              	.L2401:
16299:Core/Src/bno055.c ****     }
 34246              		.loc 1 16299 9 is_stmt 1 view .LVU9614
16299:Core/Src/bno055.c ****     }
 34247              		.loc 1 16299 21 is_stmt 0 view .LVU9615
 34248 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34249              	.LVL4235:
16299:Core/Src/bno055.c ****     }
 34250              		.loc 1 16299 18 view .LVU9616
 34251 0094 54FA80F4 		uxtab	r4, r4, r0
 34252              	.LVL4236:
16299:Core/Src/bno055.c ****     }
 34253              		.loc 1 16299 18 view .LVU9617
 34254 0098 64B2     		sxtb	r4, r4
 34255              	.LVL4237:
16299:Core/Src/bno055.c ****     }
 34256              		.loc 1 16299 18 view .LVU9618
 34257 009a F3E7     		b	.L2391
 34258              	.LVL4238:
ARM GAS  /tmp/ccO72alg.s 			page 960


 34259              	.L2394:
16245:Core/Src/bno055.c ****     }
 34260              		.loc 1 16245 16 view .LVU9619
 34261 009c 6FF07E04 		mvn	r4, #126
 34262 00a0 F0E7     		b	.L2391
 34263              	.L2403:
 34264 00a2 00BF     		.align	2
 34265              	.L2402:
 34266 00a4 00000000 		.word	.LANCHOR0
 34267              		.cfi_endproc
 34268              	.LFE236:
 34270              		.section	.text.bno055_get_accel_slow_no_motion_thres,"ax",%progbits
 34271              		.align	1
 34272              		.global	bno055_get_accel_slow_no_motion_thres
 34273              		.syntax unified
 34274              		.thumb
 34275              		.thumb_func
 34277              	bno055_get_accel_slow_no_motion_thres:
 34278              	.LVL4239:
 34279              	.LFB237:
16304:Core/Src/bno055.c **** 
16305:Core/Src/bno055.c **** /*!
16306:Core/Src/bno055.c ****  *  @brief This API used to read the accel slownomotion threshold
16307:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16308:Core/Src/bno055.c ****  *
16309:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16310:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16311:Core/Src/bno055.c ****  *
16312:Core/Src/bno055.c ****  *  @return results of bus communication function
16313:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16314:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16315:Core/Src/bno055.c ****  *
16316:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16317:Core/Src/bno055.c ****  *  for accel g range
16318:Core/Src/bno055.c ****  *
16319:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16320:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16321:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16322:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16323:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16324:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16325:Core/Src/bno055.c ****  */
16326:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_thres(u8 *accel_slow_no_motion_thres_u8
16327:Core/Src/bno055.c **** {
 34280              		.loc 1 16327 1 is_stmt 1 view -0
 34281              		.cfi_startproc
 34282              		@ args = 0, pretend = 0, frame = 8
 34283              		@ frame_needed = 0, uses_anonymous_args = 0
 34284              		.loc 1 16327 1 is_stmt 0 view .LVU9621
 34285 0000 70B5     		push	{r4, r5, r6, lr}
 34286              	.LCFI941:
 34287              		.cfi_def_cfa_offset 16
 34288              		.cfi_offset 4, -16
 34289              		.cfi_offset 5, -12
 34290              		.cfi_offset 6, -8
 34291              		.cfi_offset 14, -4
 34292 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccO72alg.s 			page 961


 34293              	.LCFI942:
 34294              		.cfi_def_cfa_offset 24
16328:Core/Src/bno055.c ****     /* Variable used to return value of
16329:Core/Src/bno055.c ****      * communication routine*/
16330:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34295              		.loc 1 16330 5 is_stmt 1 view .LVU9622
 34296              	.LVL4240:
16331:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34297              		.loc 1 16331 5 view .LVU9623
 34298              		.loc 1 16331 8 is_stmt 0 view .LVU9624
 34299 0004 0023     		movs	r3, #0
 34300 0006 8DF80730 		strb	r3, [sp, #7]
16332:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34301              		.loc 1 16332 5 is_stmt 1 view .LVU9625
 34302              	.LVL4241:
16333:Core/Src/bno055.c **** 
16334:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16335:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34303              		.loc 1 16335 5 view .LVU9626
 34304              		.loc 1 16335 18 is_stmt 0 view .LVU9627
 34305 000a 134B     		ldr	r3, .L2412
 34306 000c 1B68     		ldr	r3, [r3]
 34307              		.loc 1 16335 8 view .LVU9628
 34308 000e E3B1     		cbz	r3, .L2408
 34309 0010 0546     		mov	r5, r0
16336:Core/Src/bno055.c ****     {
16337:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16338:Core/Src/bno055.c ****     }
16339:Core/Src/bno055.c ****     else
16340:Core/Src/bno055.c ****     {
16341:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion threshold is
16342:Core/Src/bno055.c ****          * available in the page one*/
16343:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34310              		.loc 1 16343 9 is_stmt 1 view .LVU9629
 34311              		.loc 1 16343 21 is_stmt 0 view .LVU9630
 34312 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34313              		.loc 1 16343 12 view .LVU9631
 34314 0014 012B     		cmp	r3, #1
 34315 0016 12D1     		bne	.L2411
 34316              	.LVL4242:
 34317              	.L2406:
16344:Core/Src/bno055.c ****         {
16345:Core/Src/bno055.c ****             /* Write page as one */
16346:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16347:Core/Src/bno055.c ****         }
16348:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34318              		.loc 1 16348 53 discriminator 1 view .LVU9632
 34319 0018 0F4B     		ldr	r3, .L2412
 34320 001a 1B68     		ldr	r3, [r3]
 34321 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34322              		.loc 1 16348 41 discriminator 1 view .LVU9633
 34323 001e 012B     		cmp	r3, #1
 34324 0020 16D1     		bne	.L2409
 34325              	.L2407:
16349:Core/Src/bno055.c ****         {
16350:Core/Src/bno055.c ****             /* Read the value of slownomotion threshold */
16351:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 962


 34326              		.loc 1 16351 13 is_stmt 1 view .LVU9634
 34327              		.loc 1 16351 32 is_stmt 0 view .LVU9635
 34328 0022 0D4B     		ldr	r3, .L2412
 34329 0024 1C68     		ldr	r4, [r3]
 34330 0026 2669     		ldr	r6, [r4, #16]
 34331              		.loc 1 16351 24 view .LVU9636
 34332 0028 0123     		movs	r3, #1
 34333 002a 0DF10702 		add	r2, sp, #7
 34334 002e 1521     		movs	r1, #21
 34335 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 34336 0032 B047     		blx	r6
 34337              	.LVL4243:
16352:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG,
16353:Core/Src/bno055.c ****                                                       &data_u8r,
16354:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16355:Core/Src/bno055.c ****             *accel_slow_no_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOT
 34338              		.loc 1 16355 13 is_stmt 1 view .LVU9637
 34339              		.loc 1 16355 44 is_stmt 0 view .LVU9638
 34340 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34341 0038 2B70     		strb	r3, [r5]
 34342              	.LVL4244:
 34343              	.L2405:
16356:Core/Src/bno055.c ****         }
16357:Core/Src/bno055.c ****         else
16358:Core/Src/bno055.c ****         {
16359:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16360:Core/Src/bno055.c ****         }
16361:Core/Src/bno055.c ****     }
16362:Core/Src/bno055.c **** 
16363:Core/Src/bno055.c ****     return com_rslt;
16364:Core/Src/bno055.c **** }
 34344              		.loc 1 16364 1 view .LVU9639
 34345 003a 02B0     		add	sp, sp, #8
 34346              	.LCFI943:
 34347              		.cfi_remember_state
 34348              		.cfi_def_cfa_offset 16
 34349              		@ sp needed
 34350 003c 70BD     		pop	{r4, r5, r6, pc}
 34351              	.LVL4245:
 34352              	.L2411:
 34353              	.LCFI944:
 34354              		.cfi_restore_state
16346:Core/Src/bno055.c ****         }
 34355              		.loc 1 16346 13 is_stmt 1 view .LVU9640
16346:Core/Src/bno055.c ****         }
 34356              		.loc 1 16346 23 is_stmt 0 view .LVU9641
 34357 003e 0120     		movs	r0, #1
 34358              	.LVL4246:
16346:Core/Src/bno055.c ****         }
 34359              		.loc 1 16346 23 view .LVU9642
 34360 0040 FFF7FEFF 		bl	bno055_write_page_id
 34361              	.LVL4247:
16348:Core/Src/bno055.c ****         {
 34362              		.loc 1 16348 9 is_stmt 1 view .LVU9643
16348:Core/Src/bno055.c ****         {
 34363              		.loc 1 16348 12 is_stmt 0 view .LVU9644
 34364 0044 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 963


 34365 0046 ECD0     		beq	.L2407
 34366 0048 E6E7     		b	.L2406
 34367              	.LVL4248:
 34368              	.L2408:
16337:Core/Src/bno055.c ****     }
 34369              		.loc 1 16337 16 view .LVU9645
 34370 004a 6FF07E00 		mvn	r0, #126
 34371              	.LVL4249:
16337:Core/Src/bno055.c ****     }
 34372              		.loc 1 16337 16 view .LVU9646
 34373 004e F4E7     		b	.L2405
 34374              	.LVL4250:
 34375              	.L2409:
16359:Core/Src/bno055.c ****         }
 34376              		.loc 1 16359 22 view .LVU9647
 34377 0050 4FF0FF30 		mov	r0, #-1
 34378 0054 F1E7     		b	.L2405
 34379              	.L2413:
 34380 0056 00BF     		.align	2
 34381              	.L2412:
 34382 0058 00000000 		.word	.LANCHOR0
 34383              		.cfi_endproc
 34384              	.LFE237:
 34386              		.section	.text.bno055_set_accel_slow_no_motion_thres,"ax",%progbits
 34387              		.align	1
 34388              		.global	bno055_set_accel_slow_no_motion_thres
 34389              		.syntax unified
 34390              		.thumb
 34391              		.thumb_func
 34393              	bno055_set_accel_slow_no_motion_thres:
 34394              	.LVL4251:
 34395              	.LFB238:
16365:Core/Src/bno055.c **** 
16366:Core/Src/bno055.c **** /*!
16367:Core/Src/bno055.c ****  *  @brief This API used to write the accel slownomotion threshold
16368:Core/Src/bno055.c ****  *  from page one register from 0x15 bit 0 to 7
16369:Core/Src/bno055.c ****  *
16370:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_thres_u8 :
16371:Core/Src/bno055.c ****  *  The value of accel slownomotion threshold
16372:Core/Src/bno055.c ****  *
16373:Core/Src/bno055.c ****  *  @return results of bus communication function
16374:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16375:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16376:Core/Src/bno055.c ****  *
16377:Core/Src/bno055.c ****  *  @note Accel slow no motion interrupt threshold dependent
16378:Core/Src/bno055.c ****  *  for accel g range
16379:Core/Src/bno055.c ****  *
16380:Core/Src/bno055.c ****  *  accel_range_u8   |  threshold    |  LSB
16381:Core/Src/bno055.c ****  * ------------- | ------------- | ---------
16382:Core/Src/bno055.c ****  *     2g        |    3.19mg     |   1LSB
16383:Core/Src/bno055.c ****  *     4g        |    7.81mg     |   1LSB
16384:Core/Src/bno055.c ****  *     8g        |    15.63mg    |   1LSB
16385:Core/Src/bno055.c ****  *     16g       |    31.25mg    |   1LSB
16386:Core/Src/bno055.c ****  */
16387:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_thres(u8 accel_slow_no_motion_thres_u8)
16388:Core/Src/bno055.c **** {
 34396              		.loc 1 16388 1 is_stmt 1 view -0
ARM GAS  /tmp/ccO72alg.s 			page 964


 34397              		.cfi_startproc
 34398              		@ args = 0, pretend = 0, frame = 8
 34399              		@ frame_needed = 0, uses_anonymous_args = 0
 34400              		.loc 1 16388 1 is_stmt 0 view .LVU9649
 34401 0000 30B5     		push	{r4, r5, lr}
 34402              	.LCFI945:
 34403              		.cfi_def_cfa_offset 12
 34404              		.cfi_offset 4, -12
 34405              		.cfi_offset 5, -8
 34406              		.cfi_offset 14, -4
 34407 0002 83B0     		sub	sp, sp, #12
 34408              	.LCFI946:
 34409              		.cfi_def_cfa_offset 24
16389:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34410              		.loc 1 16389 5 is_stmt 1 view .LVU9650
 34411              	.LVL4252:
16390:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34412              		.loc 1 16390 5 view .LVU9651
 34413              		.loc 1 16390 8 is_stmt 0 view .LVU9652
 34414 0004 0023     		movs	r3, #0
 34415 0006 8DF80730 		strb	r3, [sp, #7]
16391:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34416              		.loc 1 16391 5 is_stmt 1 view .LVU9653
 34417              	.LVL4253:
16392:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34418              		.loc 1 16392 5 view .LVU9654
 34419              		.loc 1 16392 8 is_stmt 0 view .LVU9655
 34420 000a 8DF80630 		strb	r3, [sp, #6]
16393:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 34421              		.loc 1 16393 5 is_stmt 1 view .LVU9656
 34422              	.LVL4254:
16394:Core/Src/bno055.c **** 
16395:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16396:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34423              		.loc 1 16396 5 view .LVU9657
 34424              		.loc 1 16396 18 is_stmt 0 view .LVU9658
 34425 000e 254B     		ldr	r3, .L2426
 34426 0010 1B68     		ldr	r3, [r3]
 34427              		.loc 1 16396 8 view .LVU9659
 34428 0012 002B     		cmp	r3, #0
 34429 0014 42D0     		beq	.L2418
 34430 0016 0546     		mov	r5, r0
16397:Core/Src/bno055.c ****     {
16398:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16399:Core/Src/bno055.c ****     }
16400:Core/Src/bno055.c ****     else
16401:Core/Src/bno055.c ****     {
16402:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16403:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16404:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16405:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34431              		.loc 1 16405 9 is_stmt 1 view .LVU9660
 34432              		.loc 1 16405 19 is_stmt 0 view .LVU9661
 34433 0018 0DF10600 		add	r0, sp, #6
 34434              	.LVL4255:
 34435              		.loc 1 16405 19 view .LVU9662
 34436 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccO72alg.s 			page 965


 34437              	.LVL4256:
16406:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34438              		.loc 1 16406 9 is_stmt 1 view .LVU9663
 34439              		.loc 1 16406 12 is_stmt 0 view .LVU9664
 34440 0020 0446     		mov	r4, r0
 34441 0022 50BB     		cbnz	r0, .L2419
16407:Core/Src/bno055.c ****         {
16408:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34442              		.loc 1 16408 13 is_stmt 1 view .LVU9665
 34443              		.loc 1 16408 32 is_stmt 0 view .LVU9666
 34444 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34445              		.loc 1 16408 16 view .LVU9667
 34446 0028 1BB9     		cbnz	r3, .L2423
 34447              	.LVL4257:
 34448              	.L2417:
16409:Core/Src/bno055.c ****             {
16410:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16411:Core/Src/bno055.c ****             }
16412:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34449              		.loc 1 16412 13 is_stmt 1 view .LVU9668
 34450              		.loc 1 16412 16 is_stmt 0 view .LVU9669
 34451 002a 44B1     		cbz	r4, .L2424
16413:Core/Src/bno055.c ****             {
16414:Core/Src/bno055.c ****                 /* Write page as one */
16415:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16416:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16417:Core/Src/bno055.c ****                 {
16418:Core/Src/bno055.c ****                     /* Write the value of
16419:Core/Src/bno055.c ****                      * slownomotion threshold */
16420:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16421:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
16422:Core/Src/bno055.c ****                                                               &data_u8r,
16423:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16424:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16425:Core/Src/bno055.c ****                     {
16426:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16427:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
16428:Core/Src/bno055.c ****                                                        accel_slow_no_motion_thres_u8);
16429:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16430:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
16431:Core/Src/bno055.c ****                                                                     &data_u8r,
16432:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16433:Core/Src/bno055.c ****                     }
16434:Core/Src/bno055.c ****                 }
16435:Core/Src/bno055.c ****                 else
16436:Core/Src/bno055.c ****                 {
16437:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16438:Core/Src/bno055.c ****                 }
16439:Core/Src/bno055.c ****             }
16440:Core/Src/bno055.c ****             else
16441:Core/Src/bno055.c ****             {
16442:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34452              		.loc 1 16442 26 view .LVU9670
 34453 002c 4FF0FF34 		mov	r4, #-1
 34454              	.LVL4258:
 34455              		.loc 1 16442 26 view .LVU9671
 34456 0030 25E0     		b	.L2416
ARM GAS  /tmp/ccO72alg.s 			page 966


 34457              	.LVL4259:
 34458              	.L2423:
16410:Core/Src/bno055.c ****             }
 34459              		.loc 1 16410 17 is_stmt 1 view .LVU9672
16410:Core/Src/bno055.c ****             }
 34460              		.loc 1 16410 28 is_stmt 0 view .LVU9673
 34461 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34462              	.LVL4260:
16410:Core/Src/bno055.c ****             }
 34463              		.loc 1 16410 25 view .LVU9674
 34464 0036 54FA80F4 		uxtab	r4, r4, r0
 34465 003a 64B2     		sxtb	r4, r4
 34466              	.LVL4261:
16410:Core/Src/bno055.c ****             }
 34467              		.loc 1 16410 25 view .LVU9675
 34468 003c F5E7     		b	.L2417
 34469              	.L2424:
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34470              		.loc 1 16415 17 is_stmt 1 view .LVU9676
16415:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34471              		.loc 1 16415 30 is_stmt 0 view .LVU9677
 34472 003e 0120     		movs	r0, #1
 34473 0040 FFF7FEFF 		bl	bno055_write_page_id
 34474              	.LVL4262:
16416:Core/Src/bno055.c ****                 {
 34475              		.loc 1 16416 17 is_stmt 1 view .LVU9678
16416:Core/Src/bno055.c ****                 {
 34476              		.loc 1 16416 20 is_stmt 0 view .LVU9679
 34477 0044 08BB     		cbnz	r0, .L2421
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34478              		.loc 1 16420 21 is_stmt 1 view .LVU9680
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34479              		.loc 1 16420 40 is_stmt 0 view .LVU9681
 34480 0046 174B     		ldr	r3, .L2426
 34481 0048 1868     		ldr	r0, [r3]
 34482              	.LVL4263:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34483              		.loc 1 16420 40 view .LVU9682
 34484 004a 0469     		ldr	r4, [r0, #16]
 34485              	.LVL4264:
16420:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_THRES_REG
 34486              		.loc 1 16420 32 view .LVU9683
 34487 004c 0123     		movs	r3, #1
 34488 004e 0DF10702 		add	r2, sp, #7
 34489 0052 1521     		movs	r1, #21
 34490 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34491 0056 A047     		blx	r4
 34492              	.LVL4265:
16424:Core/Src/bno055.c ****                     {
 34493              		.loc 1 16424 21 is_stmt 1 view .LVU9684
16424:Core/Src/bno055.c ****                     {
 34494              		.loc 1 16424 24 is_stmt 0 view .LVU9685
 34495 0058 0446     		mov	r4, r0
 34496 005a 80B9     		cbnz	r0, .L2416
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
 34497              		.loc 1 16426 25 is_stmt 1 view .LVU9686
16426:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_THRES,
ARM GAS  /tmp/ccO72alg.s 			page 967


 34498              		.loc 1 16426 34 is_stmt 0 view .LVU9687
 34499 005c 8DF80750 		strb	r5, [sp, #7]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34500              		.loc 1 16429 25 is_stmt 1 view .LVU9688
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34501              		.loc 1 16429 45 is_stmt 0 view .LVU9689
 34502 0060 104B     		ldr	r3, .L2426
 34503 0062 1868     		ldr	r0, [r3]
 34504              	.LVL4266:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34505              		.loc 1 16429 45 view .LVU9690
 34506 0064 C568     		ldr	r5, [r0, #12]
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34507              		.loc 1 16429 37 view .LVU9691
 34508 0066 0123     		movs	r3, #1
 34509 0068 0DF10702 		add	r2, sp, #7
 34510 006c 1521     		movs	r1, #21
 34511 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34512 0070 A847     		blx	r5
 34513              	.LVL4267:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34514              		.loc 1 16429 34 view .LVU9692
 34515 0072 54FA80F4 		uxtab	r4, r4, r0
 34516 0076 64B2     		sxtb	r4, r4
 34517              	.LVL4268:
16429:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_THR
 34518              		.loc 1 16429 34 view .LVU9693
 34519 0078 01E0     		b	.L2416
 34520              	.LVL4269:
 34521              	.L2419:
16443:Core/Src/bno055.c ****             }
16444:Core/Src/bno055.c ****         }
16445:Core/Src/bno055.c ****         else
16446:Core/Src/bno055.c ****         {
16447:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34522              		.loc 1 16447 22 view .LVU9694
 34523 007a 4FF0FF34 		mov	r4, #-1
 34524              	.LVL4270:
 34525              	.L2416:
16448:Core/Src/bno055.c ****         }
16449:Core/Src/bno055.c ****     }
16450:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34526              		.loc 1 16450 5 is_stmt 1 view .LVU9695
 34527              		.loc 1 16450 24 is_stmt 0 view .LVU9696
 34528 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34529              		.loc 1 16450 8 view .LVU9697
 34530 0082 28B9     		cbnz	r0, .L2425
 34531              	.LVL4271:
 34532              	.L2415:
16451:Core/Src/bno055.c ****     {
16452:Core/Src/bno055.c ****         /* set the operation mode of
16453:Core/Src/bno055.c ****          * previous operation mode*/
16454:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16455:Core/Src/bno055.c ****     }
16456:Core/Src/bno055.c **** 
16457:Core/Src/bno055.c ****     return com_rslt;
16458:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 968


 34533              		.loc 1 16458 1 view .LVU9698
 34534 0084 2046     		mov	r0, r4
 34535 0086 03B0     		add	sp, sp, #12
 34536              	.LCFI947:
 34537              		.cfi_remember_state
 34538              		.cfi_def_cfa_offset 12
 34539              		@ sp needed
 34540 0088 30BD     		pop	{r4, r5, pc}
 34541              	.LVL4272:
 34542              	.L2421:
 34543              	.LCFI948:
 34544              		.cfi_restore_state
16437:Core/Src/bno055.c ****                 }
 34545              		.loc 1 16437 30 view .LVU9699
 34546 008a 4FF0FF34 		mov	r4, #-1
 34547              	.LVL4273:
16437:Core/Src/bno055.c ****                 }
 34548              		.loc 1 16437 30 view .LVU9700
 34549 008e F6E7     		b	.L2416
 34550              	.LVL4274:
 34551              	.L2425:
16454:Core/Src/bno055.c ****     }
 34552              		.loc 1 16454 9 is_stmt 1 view .LVU9701
16454:Core/Src/bno055.c ****     }
 34553              		.loc 1 16454 21 is_stmt 0 view .LVU9702
 34554 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 34555              	.LVL4275:
16454:Core/Src/bno055.c ****     }
 34556              		.loc 1 16454 18 view .LVU9703
 34557 0094 54FA80F4 		uxtab	r4, r4, r0
 34558              	.LVL4276:
16454:Core/Src/bno055.c ****     }
 34559              		.loc 1 16454 18 view .LVU9704
 34560 0098 64B2     		sxtb	r4, r4
 34561              	.LVL4277:
16454:Core/Src/bno055.c ****     }
 34562              		.loc 1 16454 18 view .LVU9705
 34563 009a F3E7     		b	.L2415
 34564              	.LVL4278:
 34565              	.L2418:
16398:Core/Src/bno055.c ****     }
 34566              		.loc 1 16398 16 view .LVU9706
 34567 009c 6FF07E04 		mvn	r4, #126
 34568 00a0 F0E7     		b	.L2415
 34569              	.L2427:
 34570 00a2 00BF     		.align	2
 34571              	.L2426:
 34572 00a4 00000000 		.word	.LANCHOR0
 34573              		.cfi_endproc
 34574              	.LFE238:
 34576              		.section	.text.bno055_get_accel_slow_no_motion_enable,"ax",%progbits
 34577              		.align	1
 34578              		.global	bno055_get_accel_slow_no_motion_enable
 34579              		.syntax unified
 34580              		.thumb
 34581              		.thumb_func
 34583              	bno055_get_accel_slow_no_motion_enable:
ARM GAS  /tmp/ccO72alg.s 			page 969


 34584              	.LVL4279:
 34585              	.LFB239:
16459:Core/Src/bno055.c **** 
16460:Core/Src/bno055.c **** /*!
16461:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion enable
16462:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16463:Core/Src/bno055.c ****  *
16464:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16465:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16466:Core/Src/bno055.c ****  *     ------------------------      | --------
16467:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16468:Core/Src/bno055.c ****  *              0x00                 | No motion
16469:Core/Src/bno055.c ****  *
16470:Core/Src/bno055.c ****  *  @return results of bus communication function
16471:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16472:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16473:Core/Src/bno055.c ****  *
16474:Core/Src/bno055.c ****  */
16475:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_enable(u8 *accel_slow_no_motion_en_u8)
16476:Core/Src/bno055.c **** {
 34586              		.loc 1 16476 1 is_stmt 1 view -0
 34587              		.cfi_startproc
 34588              		@ args = 0, pretend = 0, frame = 8
 34589              		@ frame_needed = 0, uses_anonymous_args = 0
 34590              		.loc 1 16476 1 is_stmt 0 view .LVU9708
 34591 0000 30B5     		push	{r4, r5, lr}
 34592              	.LCFI949:
 34593              		.cfi_def_cfa_offset 12
 34594              		.cfi_offset 4, -12
 34595              		.cfi_offset 5, -8
 34596              		.cfi_offset 14, -4
 34597 0002 83B0     		sub	sp, sp, #12
 34598              	.LCFI950:
 34599              		.cfi_def_cfa_offset 24
16477:Core/Src/bno055.c ****     /* Variable used to return value of
16478:Core/Src/bno055.c ****      * communication routine*/
16479:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34600              		.loc 1 16479 5 is_stmt 1 view .LVU9709
 34601              	.LVL4280:
16480:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34602              		.loc 1 16480 5 view .LVU9710
 34603              		.loc 1 16480 8 is_stmt 0 view .LVU9711
 34604 0004 0023     		movs	r3, #0
 34605 0006 8DF80730 		strb	r3, [sp, #7]
16481:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34606              		.loc 1 16481 5 is_stmt 1 view .LVU9712
 34607              	.LVL4281:
16482:Core/Src/bno055.c **** 
16483:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16484:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34608              		.loc 1 16484 5 view .LVU9713
 34609              		.loc 1 16484 18 is_stmt 0 view .LVU9714
 34610 000a 144B     		ldr	r3, .L2436
 34611 000c 1B68     		ldr	r3, [r3]
 34612              		.loc 1 16484 8 view .LVU9715
 34613 000e F3B1     		cbz	r3, .L2432
 34614 0010 0446     		mov	r4, r0
ARM GAS  /tmp/ccO72alg.s 			page 970


16485:Core/Src/bno055.c ****     {
16486:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16487:Core/Src/bno055.c ****     }
16488:Core/Src/bno055.c ****     else
16489:Core/Src/bno055.c ****     {
16490:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion enable is
16491:Core/Src/bno055.c ****          * available in the page one*/
16492:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34615              		.loc 1 16492 9 is_stmt 1 view .LVU9716
 34616              		.loc 1 16492 21 is_stmt 0 view .LVU9717
 34617 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34618              		.loc 1 16492 12 view .LVU9718
 34619 0014 012B     		cmp	r3, #1
 34620 0016 14D1     		bne	.L2435
 34621              	.LVL4282:
 34622              	.L2430:
16493:Core/Src/bno055.c ****         {
16494:Core/Src/bno055.c ****             /* Write page as one */
16495:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16496:Core/Src/bno055.c ****         }
16497:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34623              		.loc 1 16497 53 discriminator 1 view .LVU9719
 34624 0018 104B     		ldr	r3, .L2436
 34625 001a 1B68     		ldr	r3, [r3]
 34626 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34627              		.loc 1 16497 41 discriminator 1 view .LVU9720
 34628 001e 012B     		cmp	r3, #1
 34629 0020 18D1     		bne	.L2433
 34630              	.L2431:
16498:Core/Src/bno055.c ****         {
16499:Core/Src/bno055.c ****             /* Read the value of accel slownomotion enable */
16500:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34631              		.loc 1 16500 13 is_stmt 1 view .LVU9721
 34632              		.loc 1 16500 32 is_stmt 0 view .LVU9722
 34633 0022 0E4B     		ldr	r3, .L2436
 34634 0024 1868     		ldr	r0, [r3]
 34635 0026 0569     		ldr	r5, [r0, #16]
 34636              		.loc 1 16500 24 view .LVU9723
 34637 0028 0123     		movs	r3, #1
 34638 002a 0DF10702 		add	r2, sp, #7
 34639 002e 1621     		movs	r1, #22
 34640 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34641 0032 A847     		blx	r5
 34642              	.LVL4283:
16501:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_REG,
16502:Core/Src/bno055.c ****                                                       &data_u8r,
16503:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16504:Core/Src/bno055.c ****             *accel_slow_no_motion_en_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTION
 34643              		.loc 1 16504 13 is_stmt 1 view .LVU9724
 34644              		.loc 1 16504 43 is_stmt 0 view .LVU9725
 34645 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34646 0038 03F00103 		and	r3, r3, #1
 34647              		.loc 1 16504 41 view .LVU9726
 34648 003c 2370     		strb	r3, [r4]
 34649              	.LVL4284:
 34650              	.L2429:
16505:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 971


16506:Core/Src/bno055.c ****         else
16507:Core/Src/bno055.c ****         {
16508:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16509:Core/Src/bno055.c ****         }
16510:Core/Src/bno055.c ****     }
16511:Core/Src/bno055.c **** 
16512:Core/Src/bno055.c ****     return com_rslt;
16513:Core/Src/bno055.c **** }
 34651              		.loc 1 16513 1 view .LVU9727
 34652 003e 03B0     		add	sp, sp, #12
 34653              	.LCFI951:
 34654              		.cfi_remember_state
 34655              		.cfi_def_cfa_offset 12
 34656              		@ sp needed
 34657 0040 30BD     		pop	{r4, r5, pc}
 34658              	.LVL4285:
 34659              	.L2435:
 34660              	.LCFI952:
 34661              		.cfi_restore_state
16495:Core/Src/bno055.c ****         }
 34662              		.loc 1 16495 13 is_stmt 1 view .LVU9728
16495:Core/Src/bno055.c ****         }
 34663              		.loc 1 16495 23 is_stmt 0 view .LVU9729
 34664 0042 0120     		movs	r0, #1
 34665              	.LVL4286:
16495:Core/Src/bno055.c ****         }
 34666              		.loc 1 16495 23 view .LVU9730
 34667 0044 FFF7FEFF 		bl	bno055_write_page_id
 34668              	.LVL4287:
16497:Core/Src/bno055.c ****         {
 34669              		.loc 1 16497 9 is_stmt 1 view .LVU9731
16497:Core/Src/bno055.c ****         {
 34670              		.loc 1 16497 12 is_stmt 0 view .LVU9732
 34671 0048 0028     		cmp	r0, #0
 34672 004a EAD0     		beq	.L2431
 34673 004c E4E7     		b	.L2430
 34674              	.LVL4288:
 34675              	.L2432:
16486:Core/Src/bno055.c ****     }
 34676              		.loc 1 16486 16 view .LVU9733
 34677 004e 6FF07E00 		mvn	r0, #126
 34678              	.LVL4289:
16486:Core/Src/bno055.c ****     }
 34679              		.loc 1 16486 16 view .LVU9734
 34680 0052 F4E7     		b	.L2429
 34681              	.LVL4290:
 34682              	.L2433:
16508:Core/Src/bno055.c ****         }
 34683              		.loc 1 16508 22 view .LVU9735
 34684 0054 4FF0FF30 		mov	r0, #-1
 34685 0058 F1E7     		b	.L2429
 34686              	.L2437:
 34687 005a 00BF     		.align	2
 34688              	.L2436:
 34689 005c 00000000 		.word	.LANCHOR0
 34690              		.cfi_endproc
 34691              	.LFE239:
ARM GAS  /tmp/ccO72alg.s 			page 972


 34693              		.section	.text.bno055_set_accel_slow_no_motion_enable,"ax",%progbits
 34694              		.align	1
 34695              		.global	bno055_set_accel_slow_no_motion_enable
 34696              		.syntax unified
 34697              		.thumb
 34698              		.thumb_func
 34700              	bno055_set_accel_slow_no_motion_enable:
 34701              	.LVL4291:
 34702              	.LFB240:
16514:Core/Src/bno055.c **** 
16515:Core/Src/bno055.c **** /*!
16516:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion enable
16517:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 0
16518:Core/Src/bno055.c ****  *
16519:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_en_u8 : The value of accel slownomotion enable
16520:Core/Src/bno055.c ****  *    accel_slow_no_motion_en_u8   | result
16521:Core/Src/bno055.c ****  *     ------------------------      | --------
16522:Core/Src/bno055.c ****  *              0x01                 | Slow motion
16523:Core/Src/bno055.c ****  *              0x00                 | No motion
16524:Core/Src/bno055.c ****  *
16525:Core/Src/bno055.c ****  *  @return results of bus communication function
16526:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16527:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16528:Core/Src/bno055.c ****  *
16529:Core/Src/bno055.c ****  */
16530:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_enable(u8 accel_slow_no_motion_en_u8)
16531:Core/Src/bno055.c **** {
 34703              		.loc 1 16531 1 is_stmt 1 view -0
 34704              		.cfi_startproc
 34705              		@ args = 0, pretend = 0, frame = 8
 34706              		@ frame_needed = 0, uses_anonymous_args = 0
 34707              		.loc 1 16531 1 is_stmt 0 view .LVU9737
 34708 0000 30B5     		push	{r4, r5, lr}
 34709              	.LCFI953:
 34710              		.cfi_def_cfa_offset 12
 34711              		.cfi_offset 4, -12
 34712              		.cfi_offset 5, -8
 34713              		.cfi_offset 14, -4
 34714 0002 83B0     		sub	sp, sp, #12
 34715              	.LCFI954:
 34716              		.cfi_def_cfa_offset 24
16532:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34717              		.loc 1 16532 5 is_stmt 1 view .LVU9738
 34718              	.LVL4292:
16533:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34719              		.loc 1 16533 5 view .LVU9739
 34720              		.loc 1 16533 8 is_stmt 0 view .LVU9740
 34721 0004 0023     		movs	r3, #0
 34722 0006 8DF80730 		strb	r3, [sp, #7]
16534:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34723              		.loc 1 16534 5 is_stmt 1 view .LVU9741
 34724              	.LVL4293:
16535:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 34725              		.loc 1 16535 5 view .LVU9742
 34726              		.loc 1 16535 8 is_stmt 0 view .LVU9743
 34727 000a 8DF80630 		strb	r3, [sp, #6]
16536:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 973


 34728              		.loc 1 16536 5 is_stmt 1 view .LVU9744
 34729              	.LVL4294:
16537:Core/Src/bno055.c **** 
16538:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16539:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34730              		.loc 1 16539 5 view .LVU9745
 34731              		.loc 1 16539 18 is_stmt 0 view .LVU9746
 34732 000e 294B     		ldr	r3, .L2450
 34733 0010 1B68     		ldr	r3, [r3]
 34734              		.loc 1 16539 8 view .LVU9747
 34735 0012 002B     		cmp	r3, #0
 34736 0014 4AD0     		beq	.L2442
 34737 0016 0546     		mov	r5, r0
16540:Core/Src/bno055.c ****     {
16541:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16542:Core/Src/bno055.c ****     }
16543:Core/Src/bno055.c ****     else
16544:Core/Src/bno055.c ****     {
16545:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16546:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16547:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16548:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 34738              		.loc 1 16548 9 is_stmt 1 view .LVU9748
 34739              		.loc 1 16548 19 is_stmt 0 view .LVU9749
 34740 0018 0DF10600 		add	r0, sp, #6
 34741              	.LVL4295:
 34742              		.loc 1 16548 19 view .LVU9750
 34743 001c FFF7FEFF 		bl	bno055_get_operation_mode
 34744              	.LVL4296:
16549:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 34745              		.loc 1 16549 9 is_stmt 1 view .LVU9751
 34746              		.loc 1 16549 12 is_stmt 0 view .LVU9752
 34747 0020 0446     		mov	r4, r0
 34748 0022 90BB     		cbnz	r0, .L2443
16550:Core/Src/bno055.c ****         {
16551:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34749              		.loc 1 16551 13 is_stmt 1 view .LVU9753
 34750              		.loc 1 16551 32 is_stmt 0 view .LVU9754
 34751 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 34752              		.loc 1 16551 16 view .LVU9755
 34753 0028 1BB9     		cbnz	r3, .L2447
 34754              	.LVL4297:
 34755              	.L2441:
16552:Core/Src/bno055.c ****             {
16553:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16554:Core/Src/bno055.c ****             }
16555:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 34756              		.loc 1 16555 13 is_stmt 1 view .LVU9756
 34757              		.loc 1 16555 16 is_stmt 0 view .LVU9757
 34758 002a 44B1     		cbz	r4, .L2448
16556:Core/Src/bno055.c ****             {
16557:Core/Src/bno055.c ****                 /* Write page as one */
16558:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16559:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16560:Core/Src/bno055.c ****                 {
16561:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16562:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
ARM GAS  /tmp/ccO72alg.s 			page 974


16563:Core/Src/bno055.c ****                                                               &data_u8r,
16564:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16565:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16566:Core/Src/bno055.c ****                     {
16567:Core/Src/bno055.c ****                         /* Read the value of
16568:Core/Src/bno055.c ****                          * accel slownomotion enable */
16569:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16570:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
16571:Core/Src/bno055.c ****                                                        accel_slow_no_motion_en_u8);
16572:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16573:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
16574:Core/Src/bno055.c ****                                                                     &data_u8r,
16575:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16576:Core/Src/bno055.c ****                     }
16577:Core/Src/bno055.c ****                 }
16578:Core/Src/bno055.c ****                 else
16579:Core/Src/bno055.c ****                 {
16580:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16581:Core/Src/bno055.c ****                 }
16582:Core/Src/bno055.c ****             }
16583:Core/Src/bno055.c ****             else
16584:Core/Src/bno055.c ****             {
16585:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 34759              		.loc 1 16585 26 view .LVU9758
 34760 002c 4FF0FF34 		mov	r4, #-1
 34761              	.LVL4298:
 34762              		.loc 1 16585 26 view .LVU9759
 34763 0030 2DE0     		b	.L2440
 34764              	.LVL4299:
 34765              	.L2447:
16553:Core/Src/bno055.c ****             }
 34766              		.loc 1 16553 17 is_stmt 1 view .LVU9760
16553:Core/Src/bno055.c ****             }
 34767              		.loc 1 16553 28 is_stmt 0 view .LVU9761
 34768 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 34769              	.LVL4300:
16553:Core/Src/bno055.c ****             }
 34770              		.loc 1 16553 25 view .LVU9762
 34771 0036 54FA80F4 		uxtab	r4, r4, r0
 34772 003a 64B2     		sxtb	r4, r4
 34773              	.LVL4301:
16553:Core/Src/bno055.c ****             }
 34774              		.loc 1 16553 25 view .LVU9763
 34775 003c F5E7     		b	.L2441
 34776              	.L2448:
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34777              		.loc 1 16558 17 is_stmt 1 view .LVU9764
16558:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 34778              		.loc 1 16558 30 is_stmt 0 view .LVU9765
 34779 003e 0120     		movs	r0, #1
 34780 0040 FFF7FEFF 		bl	bno055_write_page_id
 34781              	.LVL4302:
16559:Core/Src/bno055.c ****                 {
 34782              		.loc 1 16559 17 is_stmt 1 view .LVU9766
16559:Core/Src/bno055.c ****                 {
 34783              		.loc 1 16559 20 is_stmt 0 view .LVU9767
 34784 0044 48BB     		cbnz	r0, .L2445
ARM GAS  /tmp/ccO72alg.s 			page 975


16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34785              		.loc 1 16561 21 is_stmt 1 view .LVU9768
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34786              		.loc 1 16561 40 is_stmt 0 view .LVU9769
 34787 0046 1B4B     		ldr	r3, .L2450
 34788 0048 1868     		ldr	r0, [r3]
 34789              	.LVL4303:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34790              		.loc 1 16561 40 view .LVU9770
 34791 004a 0469     		ldr	r4, [r0, #16]
 34792              	.LVL4304:
16561:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_ENABLE_RE
 34793              		.loc 1 16561 32 view .LVU9771
 34794 004c 0123     		movs	r3, #1
 34795 004e 0DF10702 		add	r2, sp, #7
 34796 0052 1621     		movs	r1, #22
 34797 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34798 0056 A047     		blx	r4
 34799              	.LVL4305:
16565:Core/Src/bno055.c ****                     {
 34800              		.loc 1 16565 21 is_stmt 1 view .LVU9772
16565:Core/Src/bno055.c ****                     {
 34801              		.loc 1 16565 24 is_stmt 0 view .LVU9773
 34802 0058 0446     		mov	r4, r0
 34803 005a C0B9     		cbnz	r0, .L2440
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34804              		.loc 1 16569 25 is_stmt 1 view .LVU9774
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34805              		.loc 1 16569 36 is_stmt 0 view .LVU9775
 34806 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 34807              	.LVL4306:
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34808              		.loc 1 16569 36 view .LVU9776
 34809 0060 20F00100 		bic	r0, r0, #1
 34810 0064 43B2     		sxtb	r3, r0
 34811 0066 05F00100 		and	r0, r5, #1
 34812 006a 1843     		orrs	r0, r0, r3
16569:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_ENABLE,
 34813              		.loc 1 16569 34 view .LVU9777
 34814 006c 8DF80700 		strb	r0, [sp, #7]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34815              		.loc 1 16572 25 is_stmt 1 view .LVU9778
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34816              		.loc 1 16572 45 is_stmt 0 view .LVU9779
 34817 0070 104B     		ldr	r3, .L2450
 34818 0072 1868     		ldr	r0, [r3]
 34819 0074 C568     		ldr	r5, [r0, #12]
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34820              		.loc 1 16572 37 view .LVU9780
 34821 0076 0123     		movs	r3, #1
 34822 0078 0DF10702 		add	r2, sp, #7
 34823 007c 1621     		movs	r1, #22
 34824 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34825 0080 A847     		blx	r5
 34826              	.LVL4307:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34827              		.loc 1 16572 34 view .LVU9781
ARM GAS  /tmp/ccO72alg.s 			page 976


 34828 0082 54FA80F4 		uxtab	r4, r4, r0
 34829 0086 64B2     		sxtb	r4, r4
 34830              	.LVL4308:
16572:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_ENA
 34831              		.loc 1 16572 34 view .LVU9782
 34832 0088 01E0     		b	.L2440
 34833              	.LVL4309:
 34834              	.L2443:
16586:Core/Src/bno055.c ****             }
16587:Core/Src/bno055.c ****         }
16588:Core/Src/bno055.c ****         else
16589:Core/Src/bno055.c ****         {
16590:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 34835              		.loc 1 16590 22 view .LVU9783
 34836 008a 4FF0FF34 		mov	r4, #-1
 34837              	.LVL4310:
 34838              	.L2440:
16591:Core/Src/bno055.c ****         }
16592:Core/Src/bno055.c ****     }
16593:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 34839              		.loc 1 16593 5 is_stmt 1 view .LVU9784
 34840              		.loc 1 16593 24 is_stmt 0 view .LVU9785
 34841 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 34842              		.loc 1 16593 8 view .LVU9786
 34843 0092 28B9     		cbnz	r0, .L2449
 34844              	.LVL4311:
 34845              	.L2439:
16594:Core/Src/bno055.c ****     {
16595:Core/Src/bno055.c ****         /* set the operation mode of
16596:Core/Src/bno055.c ****          * previous operation mode*/
16597:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16598:Core/Src/bno055.c ****     }
16599:Core/Src/bno055.c **** 
16600:Core/Src/bno055.c ****     return com_rslt;
16601:Core/Src/bno055.c **** }
 34846              		.loc 1 16601 1 view .LVU9787
 34847 0094 2046     		mov	r0, r4
 34848 0096 03B0     		add	sp, sp, #12
 34849              	.LCFI955:
 34850              		.cfi_remember_state
 34851              		.cfi_def_cfa_offset 12
 34852              		@ sp needed
 34853 0098 30BD     		pop	{r4, r5, pc}
 34854              	.LVL4312:
 34855              	.L2445:
 34856              	.LCFI956:
 34857              		.cfi_restore_state
16580:Core/Src/bno055.c ****                 }
 34858              		.loc 1 16580 30 view .LVU9788
 34859 009a 4FF0FF34 		mov	r4, #-1
 34860              	.LVL4313:
16580:Core/Src/bno055.c ****                 }
 34861              		.loc 1 16580 30 view .LVU9789
 34862 009e F6E7     		b	.L2440
 34863              	.LVL4314:
 34864              	.L2449:
16597:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 977


 34865              		.loc 1 16597 9 is_stmt 1 view .LVU9790
16597:Core/Src/bno055.c ****     }
 34866              		.loc 1 16597 21 is_stmt 0 view .LVU9791
 34867 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 34868              	.LVL4315:
16597:Core/Src/bno055.c ****     }
 34869              		.loc 1 16597 18 view .LVU9792
 34870 00a4 54FA80F4 		uxtab	r4, r4, r0
 34871              	.LVL4316:
16597:Core/Src/bno055.c ****     }
 34872              		.loc 1 16597 18 view .LVU9793
 34873 00a8 64B2     		sxtb	r4, r4
 34874              	.LVL4317:
16597:Core/Src/bno055.c ****     }
 34875              		.loc 1 16597 18 view .LVU9794
 34876 00aa F3E7     		b	.L2439
 34877              	.LVL4318:
 34878              	.L2442:
16541:Core/Src/bno055.c ****     }
 34879              		.loc 1 16541 16 view .LVU9795
 34880 00ac 6FF07E04 		mvn	r4, #126
 34881 00b0 F0E7     		b	.L2439
 34882              	.L2451:
 34883 00b2 00BF     		.align	2
 34884              	.L2450:
 34885 00b4 00000000 		.word	.LANCHOR0
 34886              		.cfi_endproc
 34887              	.LFE240:
 34889              		.section	.text.bno055_get_accel_slow_no_motion_durn,"ax",%progbits
 34890              		.align	1
 34891              		.global	bno055_get_accel_slow_no_motion_durn
 34892              		.syntax unified
 34893              		.thumb
 34894              		.thumb_func
 34896              	bno055_get_accel_slow_no_motion_durn:
 34897              	.LVL4319:
 34898              	.LFB241:
16602:Core/Src/bno055.c **** 
16603:Core/Src/bno055.c **** /*!
16604:Core/Src/bno055.c ****  *  @brief This API used to read accel slownomotion duration
16605:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16606:Core/Src/bno055.c ****  *
16607:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16608:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16609:Core/Src/bno055.c ****  *
16610:Core/Src/bno055.c ****  *  @return results of bus communication function
16611:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16612:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16613:Core/Src/bno055.c ****  *
16614:Core/Src/bno055.c ****  */
16615:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_accel_slow_no_motion_durn(u8 *accel_slow_no_motion_durn_u8)
16616:Core/Src/bno055.c **** {
 34899              		.loc 1 16616 1 is_stmt 1 view -0
 34900              		.cfi_startproc
 34901              		@ args = 0, pretend = 0, frame = 8
 34902              		@ frame_needed = 0, uses_anonymous_args = 0
 34903              		.loc 1 16616 1 is_stmt 0 view .LVU9797
ARM GAS  /tmp/ccO72alg.s 			page 978


 34904 0000 30B5     		push	{r4, r5, lr}
 34905              	.LCFI957:
 34906              		.cfi_def_cfa_offset 12
 34907              		.cfi_offset 4, -12
 34908              		.cfi_offset 5, -8
 34909              		.cfi_offset 14, -4
 34910 0002 83B0     		sub	sp, sp, #12
 34911              	.LCFI958:
 34912              		.cfi_def_cfa_offset 24
16617:Core/Src/bno055.c ****     /* Variable used to return value of
16618:Core/Src/bno055.c ****      * communication routine*/
16619:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 34913              		.loc 1 16619 5 is_stmt 1 view .LVU9798
 34914              	.LVL4320:
16620:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 34915              		.loc 1 16620 5 view .LVU9799
 34916              		.loc 1 16620 8 is_stmt 0 view .LVU9800
 34917 0004 0023     		movs	r3, #0
 34918 0006 8DF80730 		strb	r3, [sp, #7]
16621:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 34919              		.loc 1 16621 5 is_stmt 1 view .LVU9801
 34920              	.LVL4321:
16622:Core/Src/bno055.c **** 
16623:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16624:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 34921              		.loc 1 16624 5 view .LVU9802
 34922              		.loc 1 16624 18 is_stmt 0 view .LVU9803
 34923 000a 144B     		ldr	r3, .L2460
 34924 000c 1B68     		ldr	r3, [r3]
 34925              		.loc 1 16624 8 view .LVU9804
 34926 000e F3B1     		cbz	r3, .L2456
 34927 0010 0446     		mov	r4, r0
16625:Core/Src/bno055.c ****     {
16626:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16627:Core/Src/bno055.c ****     }
16628:Core/Src/bno055.c ****     else
16629:Core/Src/bno055.c ****     {
16630:Core/Src/bno055.c ****         /*condition check for page, accel slownomotion duration is
16631:Core/Src/bno055.c ****          * available in the page one*/
16632:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 34928              		.loc 1 16632 9 is_stmt 1 view .LVU9805
 34929              		.loc 1 16632 21 is_stmt 0 view .LVU9806
 34930 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 34931              		.loc 1 16632 12 view .LVU9807
 34932 0014 012B     		cmp	r3, #1
 34933 0016 14D1     		bne	.L2459
 34934              	.LVL4322:
 34935              	.L2454:
16633:Core/Src/bno055.c ****         {
16634:Core/Src/bno055.c ****             /* Write page as one */
16635:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16636:Core/Src/bno055.c ****         }
16637:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 34936              		.loc 1 16637 53 discriminator 1 view .LVU9808
 34937 0018 104B     		ldr	r3, .L2460
 34938 001a 1B68     		ldr	r3, [r3]
 34939 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 979


 34940              		.loc 1 16637 41 discriminator 1 view .LVU9809
 34941 001e 012B     		cmp	r3, #1
 34942 0020 18D1     		bne	.L2457
 34943              	.L2455:
16638:Core/Src/bno055.c ****         {
16639:Core/Src/bno055.c ****             /*read value of accel slownomotion duration*/
16640:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 34944              		.loc 1 16640 13 is_stmt 1 view .LVU9810
 34945              		.loc 1 16640 32 is_stmt 0 view .LVU9811
 34946 0022 0E4B     		ldr	r3, .L2460
 34947 0024 1868     		ldr	r0, [r3]
 34948 0026 0569     		ldr	r5, [r0, #16]
 34949              		.loc 1 16640 24 view .LVU9812
 34950 0028 0123     		movs	r3, #1
 34951 002a 0DF10702 		add	r2, sp, #7
 34952 002e 1621     		movs	r1, #22
 34953 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 34954 0032 A847     		blx	r5
 34955              	.LVL4323:
16641:Core/Src/bno055.c ****                                                       BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16642:Core/Src/bno055.c ****                                                       &data_u8r,
16643:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
16644:Core/Src/bno055.c ****             *accel_slow_no_motion_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_ACCEL_SLOW_NO_MOTI
 34956              		.loc 1 16644 13 is_stmt 1 view .LVU9813
 34957              		.loc 1 16644 45 is_stmt 0 view .LVU9814
 34958 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 34959 0038 C3F34503 		ubfx	r3, r3, #1, #6
 34960              		.loc 1 16644 43 view .LVU9815
 34961 003c 2370     		strb	r3, [r4]
 34962              	.LVL4324:
 34963              	.L2453:
16645:Core/Src/bno055.c ****         }
16646:Core/Src/bno055.c ****         else
16647:Core/Src/bno055.c ****         {
16648:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16649:Core/Src/bno055.c ****         }
16650:Core/Src/bno055.c ****     }
16651:Core/Src/bno055.c **** 
16652:Core/Src/bno055.c ****     return com_rslt;
16653:Core/Src/bno055.c **** }
 34964              		.loc 1 16653 1 view .LVU9816
 34965 003e 03B0     		add	sp, sp, #12
 34966              	.LCFI959:
 34967              		.cfi_remember_state
 34968              		.cfi_def_cfa_offset 12
 34969              		@ sp needed
 34970 0040 30BD     		pop	{r4, r5, pc}
 34971              	.LVL4325:
 34972              	.L2459:
 34973              	.LCFI960:
 34974              		.cfi_restore_state
16635:Core/Src/bno055.c ****         }
 34975              		.loc 1 16635 13 is_stmt 1 view .LVU9817
16635:Core/Src/bno055.c ****         }
 34976              		.loc 1 16635 23 is_stmt 0 view .LVU9818
 34977 0042 0120     		movs	r0, #1
 34978              	.LVL4326:
ARM GAS  /tmp/ccO72alg.s 			page 980


16635:Core/Src/bno055.c ****         }
 34979              		.loc 1 16635 23 view .LVU9819
 34980 0044 FFF7FEFF 		bl	bno055_write_page_id
 34981              	.LVL4327:
16637:Core/Src/bno055.c ****         {
 34982              		.loc 1 16637 9 is_stmt 1 view .LVU9820
16637:Core/Src/bno055.c ****         {
 34983              		.loc 1 16637 12 is_stmt 0 view .LVU9821
 34984 0048 0028     		cmp	r0, #0
 34985 004a EAD0     		beq	.L2455
 34986 004c E4E7     		b	.L2454
 34987              	.LVL4328:
 34988              	.L2456:
16626:Core/Src/bno055.c ****     }
 34989              		.loc 1 16626 16 view .LVU9822
 34990 004e 6FF07E00 		mvn	r0, #126
 34991              	.LVL4329:
16626:Core/Src/bno055.c ****     }
 34992              		.loc 1 16626 16 view .LVU9823
 34993 0052 F4E7     		b	.L2453
 34994              	.LVL4330:
 34995              	.L2457:
16648:Core/Src/bno055.c ****         }
 34996              		.loc 1 16648 22 view .LVU9824
 34997 0054 4FF0FF30 		mov	r0, #-1
 34998 0058 F1E7     		b	.L2453
 34999              	.L2461:
 35000 005a 00BF     		.align	2
 35001              	.L2460:
 35002 005c 00000000 		.word	.LANCHOR0
 35003              		.cfi_endproc
 35004              	.LFE241:
 35006              		.section	.text.bno055_set_accel_slow_no_motion_durn,"ax",%progbits
 35007              		.align	1
 35008              		.global	bno055_set_accel_slow_no_motion_durn
 35009              		.syntax unified
 35010              		.thumb
 35011              		.thumb_func
 35013              	bno055_set_accel_slow_no_motion_durn:
 35014              	.LVL4331:
 35015              	.LFB242:
16654:Core/Src/bno055.c **** 
16655:Core/Src/bno055.c **** /*!
16656:Core/Src/bno055.c ****  *  @brief This API used to write accel slownomotion duration
16657:Core/Src/bno055.c ****  *  from page one register from 0x16 bit 1 to 6
16658:Core/Src/bno055.c ****  *
16659:Core/Src/bno055.c ****  *  @param accel_slow_no_motion_durn_u8 :
16660:Core/Src/bno055.c ****  *  The value of accel slownomotion duration
16661:Core/Src/bno055.c ****  *
16662:Core/Src/bno055.c ****  *  @return results of bus communication function
16663:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16664:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16665:Core/Src/bno055.c ****  *
16666:Core/Src/bno055.c ****  */
16667:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_accel_slow_no_motion_durn(u8 accel_slow_no_motion_durn_u8)
16668:Core/Src/bno055.c **** {
 35016              		.loc 1 16668 1 is_stmt 1 view -0
ARM GAS  /tmp/ccO72alg.s 			page 981


 35017              		.cfi_startproc
 35018              		@ args = 0, pretend = 0, frame = 8
 35019              		@ frame_needed = 0, uses_anonymous_args = 0
 35020              		.loc 1 16668 1 is_stmt 0 view .LVU9826
 35021 0000 30B5     		push	{r4, r5, lr}
 35022              	.LCFI961:
 35023              		.cfi_def_cfa_offset 12
 35024              		.cfi_offset 4, -12
 35025              		.cfi_offset 5, -8
 35026              		.cfi_offset 14, -4
 35027 0002 83B0     		sub	sp, sp, #12
 35028              	.LCFI962:
 35029              		.cfi_def_cfa_offset 24
16669:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35030              		.loc 1 16669 5 is_stmt 1 view .LVU9827
 35031              	.LVL4332:
16670:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35032              		.loc 1 16670 5 view .LVU9828
 35033              		.loc 1 16670 8 is_stmt 0 view .LVU9829
 35034 0004 0023     		movs	r3, #0
 35035 0006 8DF80730 		strb	r3, [sp, #7]
16671:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35036              		.loc 1 16671 5 is_stmt 1 view .LVU9830
 35037              	.LVL4333:
16672:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35038              		.loc 1 16672 5 view .LVU9831
 35039              		.loc 1 16672 8 is_stmt 0 view .LVU9832
 35040 000a 8DF80630 		strb	r3, [sp, #6]
16673:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35041              		.loc 1 16673 5 is_stmt 1 view .LVU9833
 35042              	.LVL4334:
16674:Core/Src/bno055.c **** 
16675:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16676:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35043              		.loc 1 16676 5 view .LVU9834
 35044              		.loc 1 16676 18 is_stmt 0 view .LVU9835
 35045 000e 2A4B     		ldr	r3, .L2474
 35046 0010 1B68     		ldr	r3, [r3]
 35047              		.loc 1 16676 8 view .LVU9836
 35048 0012 002B     		cmp	r3, #0
 35049 0014 4CD0     		beq	.L2466
 35050 0016 0546     		mov	r5, r0
16677:Core/Src/bno055.c ****     {
16678:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16679:Core/Src/bno055.c ****     }
16680:Core/Src/bno055.c ****     else
16681:Core/Src/bno055.c ****     {
16682:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16683:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16684:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16685:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35051              		.loc 1 16685 9 is_stmt 1 view .LVU9837
 35052              		.loc 1 16685 19 is_stmt 0 view .LVU9838
 35053 0018 0DF10600 		add	r0, sp, #6
 35054              	.LVL4335:
 35055              		.loc 1 16685 19 view .LVU9839
 35056 001c FFF7FEFF 		bl	bno055_get_operation_mode
ARM GAS  /tmp/ccO72alg.s 			page 982


 35057              	.LVL4336:
16686:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35058              		.loc 1 16686 9 is_stmt 1 view .LVU9840
 35059              		.loc 1 16686 12 is_stmt 0 view .LVU9841
 35060 0020 0446     		mov	r4, r0
 35061 0022 0028     		cmp	r0, #0
 35062 0024 33D1     		bne	.L2467
16687:Core/Src/bno055.c ****         {
16688:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35063              		.loc 1 16688 13 is_stmt 1 view .LVU9842
 35064              		.loc 1 16688 32 is_stmt 0 view .LVU9843
 35065 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35066              		.loc 1 16688 16 view .LVU9844
 35067 002a 1BB9     		cbnz	r3, .L2471
 35068              	.LVL4337:
 35069              	.L2465:
16689:Core/Src/bno055.c ****             {
16690:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16691:Core/Src/bno055.c ****             }
16692:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35070              		.loc 1 16692 13 is_stmt 1 view .LVU9845
 35071              		.loc 1 16692 16 is_stmt 0 view .LVU9846
 35072 002c 44B1     		cbz	r4, .L2472
16693:Core/Src/bno055.c ****             {
16694:Core/Src/bno055.c ****                 /* Write page as one */
16695:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16696:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16697:Core/Src/bno055.c ****                 {
16698:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16699:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
16700:Core/Src/bno055.c ****                                                               &data_u8r,
16701:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16702:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
16703:Core/Src/bno055.c ****                     {
16704:Core/Src/bno055.c ****                         /*Write the value of accel
16705:Core/Src/bno055.c ****                          * slownomotion duration*/
16706:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
16707:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
16708:Core/Src/bno055.c ****                                                        accel_slow_no_motion_durn_u8);
16709:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16710:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
16711:Core/Src/bno055.c ****                                                                     &data_u8r,
16712:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
16713:Core/Src/bno055.c ****                     }
16714:Core/Src/bno055.c ****                 }
16715:Core/Src/bno055.c ****                 else
16716:Core/Src/bno055.c ****                 {
16717:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16718:Core/Src/bno055.c ****                 }
16719:Core/Src/bno055.c ****             }
16720:Core/Src/bno055.c ****             else
16721:Core/Src/bno055.c ****             {
16722:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35073              		.loc 1 16722 26 view .LVU9847
 35074 002e 4FF0FF34 		mov	r4, #-1
 35075              	.LVL4338:
 35076              		.loc 1 16722 26 view .LVU9848
ARM GAS  /tmp/ccO72alg.s 			page 983


 35077 0032 2EE0     		b	.L2464
 35078              	.LVL4339:
 35079              	.L2471:
16690:Core/Src/bno055.c ****             }
 35080              		.loc 1 16690 17 is_stmt 1 view .LVU9849
16690:Core/Src/bno055.c ****             }
 35081              		.loc 1 16690 28 is_stmt 0 view .LVU9850
 35082 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 35083              	.LVL4340:
16690:Core/Src/bno055.c ****             }
 35084              		.loc 1 16690 25 view .LVU9851
 35085 0038 54FA80F4 		uxtab	r4, r4, r0
 35086 003c 64B2     		sxtb	r4, r4
 35087              	.LVL4341:
16690:Core/Src/bno055.c ****             }
 35088              		.loc 1 16690 25 view .LVU9852
 35089 003e F5E7     		b	.L2465
 35090              	.L2472:
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35091              		.loc 1 16695 17 is_stmt 1 view .LVU9853
16695:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35092              		.loc 1 16695 30 is_stmt 0 view .LVU9854
 35093 0040 0120     		movs	r0, #1
 35094 0042 FFF7FEFF 		bl	bno055_write_page_id
 35095              	.LVL4342:
16696:Core/Src/bno055.c ****                 {
 35096              		.loc 1 16696 17 is_stmt 1 view .LVU9855
16696:Core/Src/bno055.c ****                 {
 35097              		.loc 1 16696 20 is_stmt 0 view .LVU9856
 35098 0046 50BB     		cbnz	r0, .L2469
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35099              		.loc 1 16698 21 is_stmt 1 view .LVU9857
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35100              		.loc 1 16698 40 is_stmt 0 view .LVU9858
 35101 0048 1B4B     		ldr	r3, .L2474
 35102 004a 1868     		ldr	r0, [r3]
 35103              	.LVL4343:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35104              		.loc 1 16698 40 view .LVU9859
 35105 004c 0469     		ldr	r4, [r0, #16]
 35106              	.LVL4344:
16698:Core/Src/bno055.c ****                                                               BNO055_ACCEL_SLOW_NO_MOTION_DURN_REG,
 35107              		.loc 1 16698 32 view .LVU9860
 35108 004e 0123     		movs	r3, #1
 35109 0050 0DF10702 		add	r2, sp, #7
 35110 0054 1621     		movs	r1, #22
 35111 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35112 0058 A047     		blx	r4
 35113              	.LVL4345:
16702:Core/Src/bno055.c ****                     {
 35114              		.loc 1 16702 21 is_stmt 1 view .LVU9861
16702:Core/Src/bno055.c ****                     {
 35115              		.loc 1 16702 24 is_stmt 0 view .LVU9862
 35116 005a 0446     		mov	r4, r0
 35117 005c C8B9     		cbnz	r0, .L2464
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35118              		.loc 1 16706 25 is_stmt 1 view .LVU9863
ARM GAS  /tmp/ccO72alg.s 			page 984


16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35119              		.loc 1 16706 36 is_stmt 0 view .LVU9864
 35120 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 35121              	.LVL4346:
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35122              		.loc 1 16706 36 view .LVU9865
 35123 0062 20F07E00 		bic	r0, r0, #126
 35124 0066 43B2     		sxtb	r3, r0
 35125 0068 6800     		lsls	r0, r5, #1
 35126 006a 00F07E00 		and	r0, r0, #126
 35127 006e 1843     		orrs	r0, r0, r3
16706:Core/Src/bno055.c ****                                                        BNO055_ACCEL_SLOW_NO_MOTION_DURN,
 35128              		.loc 1 16706 34 view .LVU9866
 35129 0070 8DF80700 		strb	r0, [sp, #7]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35130              		.loc 1 16709 25 is_stmt 1 view .LVU9867
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35131              		.loc 1 16709 45 is_stmt 0 view .LVU9868
 35132 0074 104B     		ldr	r3, .L2474
 35133 0076 1868     		ldr	r0, [r3]
 35134 0078 C568     		ldr	r5, [r0, #12]
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35135              		.loc 1 16709 37 view .LVU9869
 35136 007a 0123     		movs	r3, #1
 35137 007c 0DF10702 		add	r2, sp, #7
 35138 0080 1621     		movs	r1, #22
 35139 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35140 0084 A847     		blx	r5
 35141              	.LVL4347:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35142              		.loc 1 16709 34 view .LVU9870
 35143 0086 54FA80F4 		uxtab	r4, r4, r0
 35144 008a 64B2     		sxtb	r4, r4
 35145              	.LVL4348:
16709:Core/Src/bno055.c ****                                                                     BNO055_ACCEL_SLOW_NO_MOTION_DUR
 35146              		.loc 1 16709 34 view .LVU9871
 35147 008c 01E0     		b	.L2464
 35148              	.LVL4349:
 35149              	.L2467:
16723:Core/Src/bno055.c ****             }
16724:Core/Src/bno055.c ****         }
16725:Core/Src/bno055.c ****         else
16726:Core/Src/bno055.c ****         {
16727:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35150              		.loc 1 16727 22 view .LVU9872
 35151 008e 4FF0FF34 		mov	r4, #-1
 35152              	.LVL4350:
 35153              	.L2464:
16728:Core/Src/bno055.c ****         }
16729:Core/Src/bno055.c ****     }
16730:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35154              		.loc 1 16730 5 is_stmt 1 view .LVU9873
 35155              		.loc 1 16730 24 is_stmt 0 view .LVU9874
 35156 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35157              		.loc 1 16730 8 view .LVU9875
 35158 0096 28B9     		cbnz	r0, .L2473
 35159              	.LVL4351:
ARM GAS  /tmp/ccO72alg.s 			page 985


 35160              	.L2463:
16731:Core/Src/bno055.c ****     {
16732:Core/Src/bno055.c ****         /* set the operation mode of
16733:Core/Src/bno055.c ****          * previous operation mode*/
16734:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16735:Core/Src/bno055.c ****     }
16736:Core/Src/bno055.c **** 
16737:Core/Src/bno055.c ****     return com_rslt;
16738:Core/Src/bno055.c **** }
 35161              		.loc 1 16738 1 view .LVU9876
 35162 0098 2046     		mov	r0, r4
 35163 009a 03B0     		add	sp, sp, #12
 35164              	.LCFI963:
 35165              		.cfi_remember_state
 35166              		.cfi_def_cfa_offset 12
 35167              		@ sp needed
 35168 009c 30BD     		pop	{r4, r5, pc}
 35169              	.LVL4352:
 35170              	.L2469:
 35171              	.LCFI964:
 35172              		.cfi_restore_state
16717:Core/Src/bno055.c ****                 }
 35173              		.loc 1 16717 30 view .LVU9877
 35174 009e 4FF0FF34 		mov	r4, #-1
 35175              	.LVL4353:
16717:Core/Src/bno055.c ****                 }
 35176              		.loc 1 16717 30 view .LVU9878
 35177 00a2 F6E7     		b	.L2464
 35178              	.LVL4354:
 35179              	.L2473:
16734:Core/Src/bno055.c ****     }
 35180              		.loc 1 16734 9 is_stmt 1 view .LVU9879
16734:Core/Src/bno055.c ****     }
 35181              		.loc 1 16734 21 is_stmt 0 view .LVU9880
 35182 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 35183              	.LVL4355:
16734:Core/Src/bno055.c ****     }
 35184              		.loc 1 16734 18 view .LVU9881
 35185 00a8 54FA80F4 		uxtab	r4, r4, r0
 35186              	.LVL4356:
16734:Core/Src/bno055.c ****     }
 35187              		.loc 1 16734 18 view .LVU9882
 35188 00ac 64B2     		sxtb	r4, r4
 35189              	.LVL4357:
16734:Core/Src/bno055.c ****     }
 35190              		.loc 1 16734 18 view .LVU9883
 35191 00ae F3E7     		b	.L2463
 35192              	.LVL4358:
 35193              	.L2466:
16678:Core/Src/bno055.c ****     }
 35194              		.loc 1 16678 16 view .LVU9884
 35195 00b0 6FF07E04 		mvn	r4, #126
 35196 00b4 F0E7     		b	.L2463
 35197              	.L2475:
 35198 00b6 00BF     		.align	2
 35199              	.L2474:
 35200 00b8 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 986


 35201              		.cfi_endproc
 35202              	.LFE242:
 35204              		.section	.text.bno055_get_gyro_any_motion_axis_enable,"ax",%progbits
 35205              		.align	1
 35206              		.global	bno055_get_gyro_any_motion_axis_enable
 35207              		.syntax unified
 35208              		.thumb
 35209              		.thumb_func
 35211              	bno055_get_gyro_any_motion_axis_enable:
 35212              	.LVL4359:
 35213              	.LFB243:
16739:Core/Src/bno055.c **** 
16740:Core/Src/bno055.c **** /*!
16741:Core/Src/bno055.c ****  *  @brief This API used to read the gyro anymotion enable
16742:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16743:Core/Src/bno055.c ****  *
16744:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16745:Core/Src/bno055.c ****  *      data_u8     | result
16746:Core/Src/bno055.c ****  *  ----------------- |-------------
16747:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16748:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16749:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16750:Core/Src/bno055.c ****  *               channel_u8         | value
16751:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16752:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16753:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16754:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16755:Core/Src/bno055.c ****  *
16756:Core/Src/bno055.c ****  *
16757:Core/Src/bno055.c ****  *  @return results of bus communication function
16758:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16759:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16760:Core/Src/bno055.c ****  *
16761:Core/Src/bno055.c ****  *
16762:Core/Src/bno055.c ****  */
16763:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_axis_enable(u8 channel_u8, u8 *data_u8)
16764:Core/Src/bno055.c **** {
 35214              		.loc 1 16764 1 is_stmt 1 view -0
 35215              		.cfi_startproc
 35216              		@ args = 0, pretend = 0, frame = 8
 35217              		@ frame_needed = 0, uses_anonymous_args = 0
 35218              		.loc 1 16764 1 is_stmt 0 view .LVU9886
 35219 0000 30B5     		push	{r4, r5, lr}
 35220              	.LCFI965:
 35221              		.cfi_def_cfa_offset 12
 35222              		.cfi_offset 4, -12
 35223              		.cfi_offset 5, -8
 35224              		.cfi_offset 14, -4
 35225 0002 83B0     		sub	sp, sp, #12
 35226              	.LCFI966:
 35227              		.cfi_def_cfa_offset 24
16765:Core/Src/bno055.c ****     /* Variable used to return value of
16766:Core/Src/bno055.c ****      * communication routine*/
16767:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35228              		.loc 1 16767 5 is_stmt 1 view .LVU9887
 35229              	.LVL4360:
16768:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
ARM GAS  /tmp/ccO72alg.s 			page 987


 35230              		.loc 1 16768 5 view .LVU9888
 35231              		.loc 1 16768 8 is_stmt 0 view .LVU9889
 35232 0004 0023     		movs	r3, #0
 35233 0006 8DF80730 		strb	r3, [sp, #7]
16769:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35234              		.loc 1 16769 5 is_stmt 1 view .LVU9890
 35235              	.LVL4361:
16770:Core/Src/bno055.c **** 
16771:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16772:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35236              		.loc 1 16772 5 view .LVU9891
 35237              		.loc 1 16772 18 is_stmt 0 view .LVU9892
 35238 000a 284B     		ldr	r3, .L2488
 35239 000c 1B68     		ldr	r3, [r3]
 35240              		.loc 1 16772 8 view .LVU9893
 35241 000e 002B     		cmp	r3, #0
 35242 0010 45D0     		beq	.L2482
 35243 0012 0446     		mov	r4, r0
 35244 0014 0D46     		mov	r5, r1
16773:Core/Src/bno055.c ****     {
16774:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16775:Core/Src/bno055.c ****     }
16776:Core/Src/bno055.c ****     else
16777:Core/Src/bno055.c ****     {
16778:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion axis is
16779:Core/Src/bno055.c ****          * available in the page one*/
16780:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35245              		.loc 1 16780 9 is_stmt 1 view .LVU9894
 35246              		.loc 1 16780 21 is_stmt 0 view .LVU9895
 35247 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35248              		.loc 1 16780 12 view .LVU9896
 35249 0018 012B     		cmp	r3, #1
 35250 001a 0DD1     		bne	.L2486
 35251              	.LVL4362:
 35252              	.L2478:
16781:Core/Src/bno055.c ****         {
16782:Core/Src/bno055.c ****             /* Write page as one */
16783:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16784:Core/Src/bno055.c ****         }
16785:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35253              		.loc 1 16785 53 discriminator 1 view .LVU9897
 35254 001c 234B     		ldr	r3, .L2488
 35255 001e 1B68     		ldr	r3, [r3]
 35256 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35257              		.loc 1 16785 41 discriminator 1 view .LVU9898
 35258 0022 012B     		cmp	r3, #1
 35259 0024 3ED1     		bne	.L2483
 35260              	.L2479:
16786:Core/Src/bno055.c ****         {
16787:Core/Src/bno055.c ****             switch (channel_u8)
 35261              		.loc 1 16787 13 is_stmt 1 view .LVU9899
 35262 0026 012C     		cmp	r4, #1
 35263 0028 1BD0     		beq	.L2480
 35264 002a 022C     		cmp	r4, #2
 35265 002c 28D0     		beq	.L2481
 35266 002e 4CB1     		cbz	r4, .L2487
 35267 0030 6FF00100 		mvn	r0, #1
ARM GAS  /tmp/ccO72alg.s 			page 988


 35268              	.LVL4363:
 35269              	.L2477:
16788:Core/Src/bno055.c ****             {
16789:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_X_AXIS:
16790:Core/Src/bno055.c **** 
16791:Core/Src/bno055.c ****                     /* Read the gyro anymotion x enable*/
16792:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16793:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
16794:Core/Src/bno055.c ****                                                               &data_u8r,
16795:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16796:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_AXIS);
16797:Core/Src/bno055.c ****                     break;
16798:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16799:Core/Src/bno055.c **** 
16800:Core/Src/bno055.c ****                     /* Read the gyro anymotion y enable*/
16801:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16802:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
16803:Core/Src/bno055.c ****                                                               &data_u8r,
16804:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16805:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_AXIS);
16806:Core/Src/bno055.c ****                     break;
16807:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16808:Core/Src/bno055.c **** 
16809:Core/Src/bno055.c ****                     /* Read the gyro anymotion z enable*/
16810:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16811:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
16812:Core/Src/bno055.c ****                                                               &data_u8r,
16813:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
16814:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_AXIS);
16815:Core/Src/bno055.c ****                     break;
16816:Core/Src/bno055.c ****                 default:
16817:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
16818:Core/Src/bno055.c ****                     break;
16819:Core/Src/bno055.c ****             }
16820:Core/Src/bno055.c ****         }
16821:Core/Src/bno055.c ****         else
16822:Core/Src/bno055.c ****         {
16823:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
16824:Core/Src/bno055.c ****         }
16825:Core/Src/bno055.c ****     }
16826:Core/Src/bno055.c **** 
16827:Core/Src/bno055.c ****     return com_rslt;
16828:Core/Src/bno055.c **** }
 35270              		.loc 1 16828 1 is_stmt 0 view .LVU9900
 35271 0034 03B0     		add	sp, sp, #12
 35272              	.LCFI967:
 35273              		.cfi_remember_state
 35274              		.cfi_def_cfa_offset 12
 35275              		@ sp needed
 35276 0036 30BD     		pop	{r4, r5, pc}
 35277              	.LVL4364:
 35278              	.L2486:
 35279              	.LCFI968:
 35280              		.cfi_restore_state
16783:Core/Src/bno055.c ****         }
 35281              		.loc 1 16783 13 is_stmt 1 view .LVU9901
16783:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 989


 35282              		.loc 1 16783 23 is_stmt 0 view .LVU9902
 35283 0038 0120     		movs	r0, #1
 35284              	.LVL4365:
16783:Core/Src/bno055.c ****         }
 35285              		.loc 1 16783 23 view .LVU9903
 35286 003a FFF7FEFF 		bl	bno055_write_page_id
 35287              	.LVL4366:
16785:Core/Src/bno055.c ****         {
 35288              		.loc 1 16785 9 is_stmt 1 view .LVU9904
16785:Core/Src/bno055.c ****         {
 35289              		.loc 1 16785 12 is_stmt 0 view .LVU9905
 35290 003e 0028     		cmp	r0, #0
 35291 0040 F1D0     		beq	.L2479
 35292 0042 EBE7     		b	.L2478
 35293              	.LVL4367:
 35294              	.L2487:
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35295              		.loc 1 16792 21 is_stmt 1 view .LVU9906
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35296              		.loc 1 16792 40 is_stmt 0 view .LVU9907
 35297 0044 194B     		ldr	r3, .L2488
 35298 0046 1868     		ldr	r0, [r3]
 35299 0048 0469     		ldr	r4, [r0, #16]
16792:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_X_AXIS_REG,
 35300              		.loc 1 16792 32 view .LVU9908
 35301 004a 0123     		movs	r3, #1
 35302 004c 0DF10702 		add	r2, sp, #7
 35303 0050 1721     		movs	r1, #23
 35304 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35305 0054 A047     		blx	r4
 35306              	.LVL4368:
16796:Core/Src/bno055.c ****                     break;
 35307              		.loc 1 16796 21 is_stmt 1 view .LVU9909
16796:Core/Src/bno055.c ****                     break;
 35308              		.loc 1 16796 32 is_stmt 0 view .LVU9910
 35309 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35310 005a 03F00103 		and	r3, r3, #1
16796:Core/Src/bno055.c ****                     break;
 35311              		.loc 1 16796 30 view .LVU9911
 35312 005e 2B70     		strb	r3, [r5]
16797:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Y_AXIS:
 35313              		.loc 1 16797 21 is_stmt 1 view .LVU9912
 35314 0060 E8E7     		b	.L2477
 35315              	.LVL4369:
 35316              	.L2480:
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35317              		.loc 1 16801 21 view .LVU9913
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35318              		.loc 1 16801 40 is_stmt 0 view .LVU9914
 35319 0062 124B     		ldr	r3, .L2488
 35320 0064 1868     		ldr	r0, [r3]
 35321 0066 0469     		ldr	r4, [r0, #16]
16801:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Y_AXIS_REG,
 35322              		.loc 1 16801 32 view .LVU9915
 35323 0068 0123     		movs	r3, #1
 35324 006a 0DF10702 		add	r2, sp, #7
 35325 006e 1721     		movs	r1, #23
ARM GAS  /tmp/ccO72alg.s 			page 990


 35326 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35327 0072 A047     		blx	r4
 35328              	.LVL4370:
16805:Core/Src/bno055.c ****                     break;
 35329              		.loc 1 16805 21 is_stmt 1 view .LVU9916
16805:Core/Src/bno055.c ****                     break;
 35330              		.loc 1 16805 32 is_stmt 0 view .LVU9917
 35331 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35332 0078 C3F34003 		ubfx	r3, r3, #1, #1
16805:Core/Src/bno055.c ****                     break;
 35333              		.loc 1 16805 30 view .LVU9918
 35334 007c 2B70     		strb	r3, [r5]
16806:Core/Src/bno055.c ****                 case BNO055_GYRO_ANY_MOTION_Z_AXIS:
 35335              		.loc 1 16806 21 is_stmt 1 view .LVU9919
 35336 007e D9E7     		b	.L2477
 35337              	.LVL4371:
 35338              	.L2481:
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35339              		.loc 1 16810 21 view .LVU9920
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35340              		.loc 1 16810 40 is_stmt 0 view .LVU9921
 35341 0080 0A4B     		ldr	r3, .L2488
 35342 0082 1868     		ldr	r0, [r3]
 35343 0084 0469     		ldr	r4, [r0, #16]
16810:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_Z_AXIS_REG,
 35344              		.loc 1 16810 32 view .LVU9922
 35345 0086 0123     		movs	r3, #1
 35346 0088 0DF10702 		add	r2, sp, #7
 35347 008c 1721     		movs	r1, #23
 35348 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35349 0090 A047     		blx	r4
 35350              	.LVL4372:
16814:Core/Src/bno055.c ****                     break;
 35351              		.loc 1 16814 21 is_stmt 1 view .LVU9923
16814:Core/Src/bno055.c ****                     break;
 35352              		.loc 1 16814 32 is_stmt 0 view .LVU9924
 35353 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35354 0096 C3F38003 		ubfx	r3, r3, #2, #1
16814:Core/Src/bno055.c ****                     break;
 35355              		.loc 1 16814 30 view .LVU9925
 35356 009a 2B70     		strb	r3, [r5]
16815:Core/Src/bno055.c ****                 default:
 35357              		.loc 1 16815 21 is_stmt 1 view .LVU9926
 35358 009c CAE7     		b	.L2477
 35359              	.LVL4373:
 35360              	.L2482:
16774:Core/Src/bno055.c ****     }
 35361              		.loc 1 16774 16 is_stmt 0 view .LVU9927
 35362 009e 6FF07E00 		mvn	r0, #126
 35363              	.LVL4374:
16774:Core/Src/bno055.c ****     }
 35364              		.loc 1 16774 16 view .LVU9928
 35365 00a2 C7E7     		b	.L2477
 35366              	.LVL4375:
 35367              	.L2483:
16823:Core/Src/bno055.c ****         }
 35368              		.loc 1 16823 22 view .LVU9929
ARM GAS  /tmp/ccO72alg.s 			page 991


 35369 00a4 4FF0FF30 		mov	r0, #-1
 35370 00a8 C4E7     		b	.L2477
 35371              	.L2489:
 35372 00aa 00BF     		.align	2
 35373              	.L2488:
 35374 00ac 00000000 		.word	.LANCHOR0
 35375              		.cfi_endproc
 35376              	.LFE243:
 35378              		.section	.text.bno055_set_gyro_any_motion_axis_enable,"ax",%progbits
 35379              		.align	1
 35380              		.global	bno055_set_gyro_any_motion_axis_enable
 35381              		.syntax unified
 35382              		.thumb
 35383              		.thumb_func
 35385              	bno055_set_gyro_any_motion_axis_enable:
 35386              	.LVL4376:
 35387              	.LFB244:
16829:Core/Src/bno055.c **** 
16830:Core/Src/bno055.c **** /*!
16831:Core/Src/bno055.c ****  *  @brief This API used to write the gyro anymotion enable
16832:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 0 to 2
16833:Core/Src/bno055.c ****  *
16834:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro anymotion enable
16835:Core/Src/bno055.c ****  *      data_u8     | result
16836:Core/Src/bno055.c ****  *  ----------------- |-------------
16837:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16838:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16839:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro anymotion axis selection
16840:Core/Src/bno055.c ****  *               channel_u8         | value
16841:Core/Src/bno055.c ****  *     ---------------------------    | ----------
16842:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONX_AXIS   |   0
16843:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONY_AXIS   |   1
16844:Core/Src/bno055.c ****  *     BNO055_GYRO_ANY_MOTIONZ_AXIS   |   2
16845:Core/Src/bno055.c ****  *
16846:Core/Src/bno055.c ****  *  @return results of bus communication function
16847:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16848:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16849:Core/Src/bno055.c ****  *
16850:Core/Src/bno055.c ****  *
16851:Core/Src/bno055.c ****  */
16852:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_axis_enable(u8 channel_u8, u8 data_u8)
16853:Core/Src/bno055.c **** {
 35388              		.loc 1 16853 1 is_stmt 1 view -0
 35389              		.cfi_startproc
 35390              		@ args = 0, pretend = 0, frame = 8
 35391              		@ frame_needed = 0, uses_anonymous_args = 0
 35392              		.loc 1 16853 1 is_stmt 0 view .LVU9931
 35393 0000 70B5     		push	{r4, r5, r6, lr}
 35394              	.LCFI969:
 35395              		.cfi_def_cfa_offset 16
 35396              		.cfi_offset 4, -16
 35397              		.cfi_offset 5, -12
 35398              		.cfi_offset 6, -8
 35399              		.cfi_offset 14, -4
 35400 0002 82B0     		sub	sp, sp, #8
 35401              	.LCFI970:
 35402              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccO72alg.s 			page 992


16854:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35403              		.loc 1 16854 5 is_stmt 1 view .LVU9932
 35404              	.LVL4377:
16855:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35405              		.loc 1 16855 5 view .LVU9933
 35406              		.loc 1 16855 8 is_stmt 0 view .LVU9934
 35407 0004 0023     		movs	r3, #0
 35408 0006 8DF80730 		strb	r3, [sp, #7]
16856:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35409              		.loc 1 16856 5 is_stmt 1 view .LVU9935
 35410              	.LVL4378:
16857:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35411              		.loc 1 16857 5 view .LVU9936
 35412              		.loc 1 16857 8 is_stmt 0 view .LVU9937
 35413 000a 8DF80630 		strb	r3, [sp, #6]
16858:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35414              		.loc 1 16858 5 is_stmt 1 view .LVU9938
 35415              	.LVL4379:
16859:Core/Src/bno055.c **** 
16860:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16861:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35416              		.loc 1 16861 5 view .LVU9939
 35417              		.loc 1 16861 18 is_stmt 0 view .LVU9940
 35418 000e 534B     		ldr	r3, .L2506
 35419 0010 1B68     		ldr	r3, [r3]
 35420              		.loc 1 16861 8 view .LVU9941
 35421 0012 002B     		cmp	r3, #0
 35422 0014 00F09F80 		beq	.L2496
 35423 0018 0446     		mov	r4, r0
 35424 001a 0D46     		mov	r5, r1
16862:Core/Src/bno055.c ****     {
16863:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
16864:Core/Src/bno055.c ****     }
16865:Core/Src/bno055.c ****     else
16866:Core/Src/bno055.c ****     {
16867:Core/Src/bno055.c ****         /* The write operation effective only if the operation
16868:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
16869:Core/Src/bno055.c ****          * current operation mode and set the config mode */
16870:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35425              		.loc 1 16870 9 is_stmt 1 view .LVU9942
 35426              		.loc 1 16870 19 is_stmt 0 view .LVU9943
 35427 001c 0DF10600 		add	r0, sp, #6
 35428              	.LVL4380:
 35429              		.loc 1 16870 19 view .LVU9944
 35430 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 35431              	.LVL4381:
16871:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35432              		.loc 1 16871 9 is_stmt 1 view .LVU9945
 35433              		.loc 1 16871 12 is_stmt 0 view .LVU9946
 35434 0024 0646     		mov	r6, r0
 35435 0026 0028     		cmp	r0, #0
 35436 0028 40F08480 		bne	.L2497
16872:Core/Src/bno055.c ****         {
16873:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35437              		.loc 1 16873 13 is_stmt 1 view .LVU9947
 35438              		.loc 1 16873 32 is_stmt 0 view .LVU9948
 35439 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 993


 35440              		.loc 1 16873 16 view .LVU9949
 35441 0030 1BB9     		cbnz	r3, .L2502
 35442              	.LVL4382:
 35443              	.L2493:
16874:Core/Src/bno055.c ****             {
16875:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
16876:Core/Src/bno055.c ****             }
16877:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35444              		.loc 1 16877 13 is_stmt 1 view .LVU9950
 35445              		.loc 1 16877 16 is_stmt 0 view .LVU9951
 35446 0032 46B1     		cbz	r6, .L2503
16878:Core/Src/bno055.c ****             {
16879:Core/Src/bno055.c ****                 /* Write page as one */
16880:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
16881:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
16882:Core/Src/bno055.c ****                 {
16883:Core/Src/bno055.c ****                     switch (channel_u8)
16884:Core/Src/bno055.c ****                     {
16885:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_X_AXIS:
16886:Core/Src/bno055.c **** 
16887:Core/Src/bno055.c ****                             /* Write the gyro
16888:Core/Src/bno055.c ****                              * anymotion x enable*/
16889:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16890:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
16891:Core/Src/bno055.c ****                                                                       &data_u8r,
16892:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16893:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16894:Core/Src/bno055.c ****                             {
16895:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_X_A
16896:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16897:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16898:Core/Src/bno055.c ****                                                                             &data_u8r,
16899:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16900:Core/Src/bno055.c ****                             }
16901:Core/Src/bno055.c ****                             break;
16902:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Y_AXIS:
16903:Core/Src/bno055.c **** 
16904:Core/Src/bno055.c ****                             /* Write the gyro
16905:Core/Src/bno055.c ****                              * anymotion y enable*/
16906:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
16907:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
16908:Core/Src/bno055.c ****                                                                       &data_u8r,
16909:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16910:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16911:Core/Src/bno055.c ****                             {
16912:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Y_A
16913:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16914:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16915:Core/Src/bno055.c ****                                                                             &data_u8r,
16916:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16917:Core/Src/bno055.c ****                             }
16918:Core/Src/bno055.c ****                             break;
16919:Core/Src/bno055.c ****                         case BNO055_GYRO_ANY_MOTION_Z_AXIS:
16920:Core/Src/bno055.c **** 
16921:Core/Src/bno055.c ****                             /* Write the gyro
16922:Core/Src/bno055.c ****                              * anymotion z enable*/
16923:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 994


16924:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
16925:Core/Src/bno055.c ****                                                                       &data_u8r,
16926:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
16927:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
16928:Core/Src/bno055.c ****                             {
16929:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_Z_A
16930:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
16931:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
16932:Core/Src/bno055.c ****                                                                             &data_u8r,
16933:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
16934:Core/Src/bno055.c ****                             }
16935:Core/Src/bno055.c ****                             break;
16936:Core/Src/bno055.c ****                         default:
16937:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
16938:Core/Src/bno055.c ****                             break;
16939:Core/Src/bno055.c ****                     }
16940:Core/Src/bno055.c ****                 }
16941:Core/Src/bno055.c ****                 else
16942:Core/Src/bno055.c ****                 {
16943:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
16944:Core/Src/bno055.c ****                 }
16945:Core/Src/bno055.c ****             }
16946:Core/Src/bno055.c ****             else
16947:Core/Src/bno055.c ****             {
16948:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35447              		.loc 1 16948 26 view .LVU9952
 35448 0034 4FF0FF34 		mov	r4, #-1
 35449 0038 7EE0     		b	.L2492
 35450              	.LVL4383:
 35451              	.L2502:
16875:Core/Src/bno055.c ****             }
 35452              		.loc 1 16875 17 is_stmt 1 view .LVU9953
16875:Core/Src/bno055.c ****             }
 35453              		.loc 1 16875 28 is_stmt 0 view .LVU9954
 35454 003a FFF7FEFF 		bl	bno055_set_operation_mode
 35455              	.LVL4384:
16875:Core/Src/bno055.c ****             }
 35456              		.loc 1 16875 25 view .LVU9955
 35457 003e 56FA80F6 		uxtab	r6, r6, r0
 35458 0042 76B2     		sxtb	r6, r6
 35459              	.LVL4385:
16875:Core/Src/bno055.c ****             }
 35460              		.loc 1 16875 25 view .LVU9956
 35461 0044 F5E7     		b	.L2493
 35462              	.L2503:
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35463              		.loc 1 16880 17 is_stmt 1 view .LVU9957
16880:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35464              		.loc 1 16880 30 is_stmt 0 view .LVU9958
 35465 0046 0120     		movs	r0, #1
 35466 0048 FFF7FEFF 		bl	bno055_write_page_id
 35467              	.LVL4386:
16881:Core/Src/bno055.c ****                 {
 35468              		.loc 1 16881 17 is_stmt 1 view .LVU9959
16881:Core/Src/bno055.c ****                 {
 35469              		.loc 1 16881 20 is_stmt 0 view .LVU9960
 35470 004c 0028     		cmp	r0, #0
ARM GAS  /tmp/ccO72alg.s 			page 995


 35471 004e 79D1     		bne	.L2499
16883:Core/Src/bno055.c ****                     {
 35472              		.loc 1 16883 21 is_stmt 1 view .LVU9961
 35473 0050 012C     		cmp	r4, #1
 35474 0052 28D0     		beq	.L2494
 35475 0054 022C     		cmp	r4, #2
 35476 0056 4AD0     		beq	.L2495
 35477 0058 14B1     		cbz	r4, .L2504
 35478 005a 6FF00104 		mvn	r4, #1
 35479 005e 6BE0     		b	.L2492
 35480              	.L2504:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35481              		.loc 1 16889 29 view .LVU9962
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35482              		.loc 1 16889 48 is_stmt 0 view .LVU9963
 35483 0060 3E4B     		ldr	r3, .L2506
 35484 0062 1868     		ldr	r0, [r3]
 35485              	.LVL4387:
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35486              		.loc 1 16889 48 view .LVU9964
 35487 0064 0469     		ldr	r4, [r0, #16]
16889:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_X_AXIS
 35488              		.loc 1 16889 40 view .LVU9965
 35489 0066 0123     		movs	r3, #1
 35490 0068 0DF10702 		add	r2, sp, #7
 35491 006c 1721     		movs	r1, #23
 35492 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35493 0070 A047     		blx	r4
 35494              	.LVL4388:
16893:Core/Src/bno055.c ****                             {
 35495              		.loc 1 16893 29 is_stmt 1 view .LVU9966
16893:Core/Src/bno055.c ****                             {
 35496              		.loc 1 16893 32 is_stmt 0 view .LVU9967
 35497 0072 0446     		mov	r4, r0
 35498 0074 0028     		cmp	r0, #0
 35499 0076 5FD1     		bne	.L2492
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35500              		.loc 1 16895 33 is_stmt 1 view .LVU9968
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35501              		.loc 1 16895 44 is_stmt 0 view .LVU9969
 35502 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35503 007c 23F00103 		bic	r3, r3, #1
 35504 0080 5BB2     		sxtb	r3, r3
 35505 0082 05F00105 		and	r5, r5, #1
 35506 0086 2B43     		orrs	r3, r3, r5
16895:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35507              		.loc 1 16895 42 view .LVU9970
 35508 0088 8DF80730 		strb	r3, [sp, #7]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35509              		.loc 1 16896 33 is_stmt 1 view .LVU9971
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35510              		.loc 1 16896 53 is_stmt 0 view .LVU9972
 35511 008c 334B     		ldr	r3, .L2506
 35512 008e 1868     		ldr	r0, [r3]
 35513              	.LVL4389:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35514              		.loc 1 16896 53 view .LVU9973
ARM GAS  /tmp/ccO72alg.s 			page 996


 35515 0090 C568     		ldr	r5, [r0, #12]
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35516              		.loc 1 16896 45 view .LVU9974
 35517 0092 0123     		movs	r3, #1
 35518 0094 0DF10702 		add	r2, sp, #7
 35519 0098 1721     		movs	r1, #23
 35520 009a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35521 009c A847     		blx	r5
 35522              	.LVL4390:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35523              		.loc 1 16896 42 view .LVU9975
 35524 009e 54FA80F4 		uxtab	r4, r4, r0
 35525 00a2 64B2     		sxtb	r4, r4
 35526              	.LVL4391:
16896:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35527              		.loc 1 16896 42 view .LVU9976
 35528 00a4 48E0     		b	.L2492
 35529              	.LVL4392:
 35530              	.L2494:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35531              		.loc 1 16906 29 is_stmt 1 view .LVU9977
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35532              		.loc 1 16906 48 is_stmt 0 view .LVU9978
 35533 00a6 2D4B     		ldr	r3, .L2506
 35534 00a8 1868     		ldr	r0, [r3]
 35535              	.LVL4393:
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35536              		.loc 1 16906 48 view .LVU9979
 35537 00aa 0469     		ldr	r4, [r0, #16]
16906:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Y_AXIS
 35538              		.loc 1 16906 40 view .LVU9980
 35539 00ac 0123     		movs	r3, #1
 35540 00ae 0DF10702 		add	r2, sp, #7
 35541 00b2 1721     		movs	r1, #23
 35542 00b4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35543 00b6 A047     		blx	r4
 35544              	.LVL4394:
16910:Core/Src/bno055.c ****                             {
 35545              		.loc 1 16910 29 is_stmt 1 view .LVU9981
16910:Core/Src/bno055.c ****                             {
 35546              		.loc 1 16910 32 is_stmt 0 view .LVU9982
 35547 00b8 0446     		mov	r4, r0
 35548 00ba 0028     		cmp	r0, #0
 35549 00bc 3CD1     		bne	.L2492
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35550              		.loc 1 16912 33 is_stmt 1 view .LVU9983
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35551              		.loc 1 16912 44 is_stmt 0 view .LVU9984
 35552 00be 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35553 00c2 23F00203 		bic	r3, r3, #2
 35554 00c6 5BB2     		sxtb	r3, r3
 35555 00c8 6A00     		lsls	r2, r5, #1
 35556 00ca 02F00202 		and	r2, r2, #2
 35557 00ce 1343     		orrs	r3, r3, r2
16912:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35558              		.loc 1 16912 42 view .LVU9985
 35559 00d0 8DF80730 		strb	r3, [sp, #7]
ARM GAS  /tmp/ccO72alg.s 			page 997


16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35560              		.loc 1 16913 33 is_stmt 1 view .LVU9986
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35561              		.loc 1 16913 53 is_stmt 0 view .LVU9987
 35562 00d4 214B     		ldr	r3, .L2506
 35563 00d6 1868     		ldr	r0, [r3]
 35564              	.LVL4395:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35565              		.loc 1 16913 53 view .LVU9988
 35566 00d8 C568     		ldr	r5, [r0, #12]
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35567              		.loc 1 16913 45 view .LVU9989
 35568 00da 0123     		movs	r3, #1
 35569 00dc 0DF10702 		add	r2, sp, #7
 35570 00e0 1721     		movs	r1, #23
 35571 00e2 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35572 00e4 A847     		blx	r5
 35573              	.LVL4396:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35574              		.loc 1 16913 42 view .LVU9990
 35575 00e6 54FA80F4 		uxtab	r4, r4, r0
 35576 00ea 64B2     		sxtb	r4, r4
 35577              	.LVL4397:
16913:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35578              		.loc 1 16913 42 view .LVU9991
 35579 00ec 24E0     		b	.L2492
 35580              	.LVL4398:
 35581              	.L2495:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35582              		.loc 1 16923 29 is_stmt 1 view .LVU9992
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35583              		.loc 1 16923 48 is_stmt 0 view .LVU9993
 35584 00ee 1B4B     		ldr	r3, .L2506
 35585 00f0 1868     		ldr	r0, [r3]
 35586              	.LVL4399:
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35587              		.loc 1 16923 48 view .LVU9994
 35588 00f2 0469     		ldr	r4, [r0, #16]
16923:Core/Src/bno055.c ****                                                                       BNO055_GYRO_ANY_MOTION_Z_AXIS
 35589              		.loc 1 16923 40 view .LVU9995
 35590 00f4 0123     		movs	r3, #1
 35591 00f6 0DF10702 		add	r2, sp, #7
 35592 00fa 1721     		movs	r1, #23
 35593 00fc 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35594 00fe A047     		blx	r4
 35595              	.LVL4400:
16927:Core/Src/bno055.c ****                             {
 35596              		.loc 1 16927 29 is_stmt 1 view .LVU9996
16927:Core/Src/bno055.c ****                             {
 35597              		.loc 1 16927 32 is_stmt 0 view .LVU9997
 35598 0100 0446     		mov	r4, r0
 35599 0102 C8B9     		cbnz	r0, .L2492
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35600              		.loc 1 16929 33 is_stmt 1 view .LVU9998
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35601              		.loc 1 16929 44 is_stmt 0 view .LVU9999
 35602 0104 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 998


 35603 0108 23F00403 		bic	r3, r3, #4
 35604 010c 5AB2     		sxtb	r2, r3
 35605 010e AB00     		lsls	r3, r5, #2
 35606 0110 03F00403 		and	r3, r3, #4
 35607 0114 1343     		orrs	r3, r3, r2
16929:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35608              		.loc 1 16929 42 view .LVU10000
 35609 0116 8DF80730 		strb	r3, [sp, #7]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35610              		.loc 1 16930 33 is_stmt 1 view .LVU10001
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35611              		.loc 1 16930 53 is_stmt 0 view .LVU10002
 35612 011a 104B     		ldr	r3, .L2506
 35613 011c 1868     		ldr	r0, [r3]
 35614              	.LVL4401:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35615              		.loc 1 16930 53 view .LVU10003
 35616 011e C568     		ldr	r5, [r0, #12]
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35617              		.loc 1 16930 45 view .LVU10004
 35618 0120 0123     		movs	r3, #1
 35619 0122 0DF10702 		add	r2, sp, #7
 35620 0126 1721     		movs	r1, #23
 35621 0128 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35622 012a A847     		blx	r5
 35623              	.LVL4402:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35624              		.loc 1 16930 42 view .LVU10005
 35625 012c 54FA80F4 		uxtab	r4, r4, r0
 35626 0130 64B2     		sxtb	r4, r4
 35627              	.LVL4403:
16930:Core/Src/bno055.c ****                                                                             BNO055_GYRO_ANY_MOTION_
 35628              		.loc 1 16930 42 view .LVU10006
 35629 0132 01E0     		b	.L2492
 35630              	.LVL4404:
 35631              	.L2497:
16949:Core/Src/bno055.c ****             }
16950:Core/Src/bno055.c ****         }
16951:Core/Src/bno055.c ****         else
16952:Core/Src/bno055.c ****         {
16953:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 35632              		.loc 1 16953 22 view .LVU10007
 35633 0134 4FF0FF34 		mov	r4, #-1
 35634              	.LVL4405:
 35635              	.L2492:
16954:Core/Src/bno055.c ****         }
16955:Core/Src/bno055.c ****     }
16956:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35636              		.loc 1 16956 5 is_stmt 1 view .LVU10008
 35637              		.loc 1 16956 24 is_stmt 0 view .LVU10009
 35638 0138 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 35639              		.loc 1 16956 8 view .LVU10010
 35640 013c 28B9     		cbnz	r0, .L2505
 35641              	.LVL4406:
 35642              	.L2491:
16957:Core/Src/bno055.c ****     {
16958:Core/Src/bno055.c ****         /* set the operation mode of
ARM GAS  /tmp/ccO72alg.s 			page 999


16959:Core/Src/bno055.c ****          * previous operation mode*/
16960:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
16961:Core/Src/bno055.c ****     }
16962:Core/Src/bno055.c **** 
16963:Core/Src/bno055.c ****     return com_rslt;
16964:Core/Src/bno055.c **** }
 35643              		.loc 1 16964 1 view .LVU10011
 35644 013e 2046     		mov	r0, r4
 35645 0140 02B0     		add	sp, sp, #8
 35646              	.LCFI971:
 35647              		.cfi_remember_state
 35648              		.cfi_def_cfa_offset 16
 35649              		@ sp needed
 35650 0142 70BD     		pop	{r4, r5, r6, pc}
 35651              	.LVL4407:
 35652              	.L2499:
 35653              	.LCFI972:
 35654              		.cfi_restore_state
16943:Core/Src/bno055.c ****                 }
 35655              		.loc 1 16943 30 view .LVU10012
 35656 0144 4FF0FF34 		mov	r4, #-1
 35657 0148 F6E7     		b	.L2492
 35658              	.LVL4408:
 35659              	.L2505:
16960:Core/Src/bno055.c ****     }
 35660              		.loc 1 16960 9 is_stmt 1 view .LVU10013
16960:Core/Src/bno055.c ****     }
 35661              		.loc 1 16960 21 is_stmt 0 view .LVU10014
 35662 014a FFF7FEFF 		bl	bno055_set_operation_mode
 35663              	.LVL4409:
16960:Core/Src/bno055.c ****     }
 35664              		.loc 1 16960 18 view .LVU10015
 35665 014e 54FA80F4 		uxtab	r4, r4, r0
 35666              	.LVL4410:
16960:Core/Src/bno055.c ****     }
 35667              		.loc 1 16960 18 view .LVU10016
 35668 0152 64B2     		sxtb	r4, r4
 35669              	.LVL4411:
16960:Core/Src/bno055.c ****     }
 35670              		.loc 1 16960 18 view .LVU10017
 35671 0154 F3E7     		b	.L2491
 35672              	.LVL4412:
 35673              	.L2496:
16863:Core/Src/bno055.c ****     }
 35674              		.loc 1 16863 16 view .LVU10018
 35675 0156 6FF07E04 		mvn	r4, #126
 35676 015a F0E7     		b	.L2491
 35677              	.L2507:
 35678              		.align	2
 35679              	.L2506:
 35680 015c 00000000 		.word	.LANCHOR0
 35681              		.cfi_endproc
 35682              	.LFE244:
 35684              		.section	.text.bno055_get_gyro_highrate_axis_enable,"ax",%progbits
 35685              		.align	1
 35686              		.global	bno055_get_gyro_highrate_axis_enable
 35687              		.syntax unified
ARM GAS  /tmp/ccO72alg.s 			page 1000


 35688              		.thumb
 35689              		.thumb_func
 35691              	bno055_get_gyro_highrate_axis_enable:
 35692              	.LVL4413:
 35693              	.LFB245:
16965:Core/Src/bno055.c **** 
16966:Core/Src/bno055.c **** /*!
16967:Core/Src/bno055.c ****  *  @brief This API used to read the gyro highrate enable
16968:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
16969:Core/Src/bno055.c ****  *
16970:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
16971:Core/Src/bno055.c ****  *      data_u8     | result
16972:Core/Src/bno055.c ****  *  ----------------  |-------------
16973:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
16974:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
16975:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
16976:Core/Src/bno055.c ****  *               channel_u8         | value
16977:Core/Src/bno055.c ****  *     ------------------------       | ----------
16978:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
16979:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
16980:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
16981:Core/Src/bno055.c ****  *
16982:Core/Src/bno055.c ****  *
16983:Core/Src/bno055.c ****  *  @return results of bus communication function
16984:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
16985:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
16986:Core/Src/bno055.c ****  *
16987:Core/Src/bno055.c ****  *
16988:Core/Src/bno055.c ****  */
16989:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_axis_enable(u8 channel_u8, u8 *data_u8)
16990:Core/Src/bno055.c **** {
 35694              		.loc 1 16990 1 is_stmt 1 view -0
 35695              		.cfi_startproc
 35696              		@ args = 0, pretend = 0, frame = 8
 35697              		@ frame_needed = 0, uses_anonymous_args = 0
 35698              		.loc 1 16990 1 is_stmt 0 view .LVU10020
 35699 0000 30B5     		push	{r4, r5, lr}
 35700              	.LCFI973:
 35701              		.cfi_def_cfa_offset 12
 35702              		.cfi_offset 4, -12
 35703              		.cfi_offset 5, -8
 35704              		.cfi_offset 14, -4
 35705 0002 83B0     		sub	sp, sp, #12
 35706              	.LCFI974:
 35707              		.cfi_def_cfa_offset 24
16991:Core/Src/bno055.c ****     /* Variable used to return value of
16992:Core/Src/bno055.c ****      * communication routine*/
16993:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35708              		.loc 1 16993 5 is_stmt 1 view .LVU10021
 35709              	.LVL4414:
16994:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35710              		.loc 1 16994 5 view .LVU10022
 35711              		.loc 1 16994 8 is_stmt 0 view .LVU10023
 35712 0004 0023     		movs	r3, #0
 35713 0006 8DF80730 		strb	r3, [sp, #7]
16995:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35714              		.loc 1 16995 5 is_stmt 1 view .LVU10024
ARM GAS  /tmp/ccO72alg.s 			page 1001


 35715              	.LVL4415:
16996:Core/Src/bno055.c **** 
16997:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
16998:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35716              		.loc 1 16998 5 view .LVU10025
 35717              		.loc 1 16998 18 is_stmt 0 view .LVU10026
 35718 000a 284B     		ldr	r3, .L2520
 35719 000c 1B68     		ldr	r3, [r3]
 35720              		.loc 1 16998 8 view .LVU10027
 35721 000e 002B     		cmp	r3, #0
 35722 0010 45D0     		beq	.L2514
 35723 0012 0446     		mov	r4, r0
 35724 0014 0D46     		mov	r5, r1
16999:Core/Src/bno055.c ****     {
17000:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17001:Core/Src/bno055.c ****     }
17002:Core/Src/bno055.c ****     else
17003:Core/Src/bno055.c ****     {
17004:Core/Src/bno055.c ****         /*condition check for page, gyro highrate enable is
17005:Core/Src/bno055.c ****          * available in the page one*/
17006:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 35725              		.loc 1 17006 9 is_stmt 1 view .LVU10028
 35726              		.loc 1 17006 21 is_stmt 0 view .LVU10029
 35727 0016 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35728              		.loc 1 17006 12 view .LVU10030
 35729 0018 012B     		cmp	r3, #1
 35730 001a 0DD1     		bne	.L2518
 35731              	.LVL4416:
 35732              	.L2510:
17007:Core/Src/bno055.c ****         {
17008:Core/Src/bno055.c ****             /* Write page as one */
17009:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17010:Core/Src/bno055.c ****         }
17011:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 35733              		.loc 1 17011 53 discriminator 1 view .LVU10031
 35734 001c 234B     		ldr	r3, .L2520
 35735 001e 1B68     		ldr	r3, [r3]
 35736 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 35737              		.loc 1 17011 41 discriminator 1 view .LVU10032
 35738 0022 012B     		cmp	r3, #1
 35739 0024 3ED1     		bne	.L2515
 35740              	.L2511:
17012:Core/Src/bno055.c ****         {
17013:Core/Src/bno055.c ****             switch (channel_u8)
 35741              		.loc 1 17013 13 is_stmt 1 view .LVU10033
 35742 0026 012C     		cmp	r4, #1
 35743 0028 1BD0     		beq	.L2512
 35744 002a 022C     		cmp	r4, #2
 35745 002c 28D0     		beq	.L2513
 35746 002e 4CB1     		cbz	r4, .L2519
 35747 0030 6FF00100 		mvn	r0, #1
 35748              	.LVL4417:
 35749              	.L2509:
17014:Core/Src/bno055.c ****             {
17015:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_X_AXIS:
17016:Core/Src/bno055.c **** 
17017:Core/Src/bno055.c ****                     /* Read the gyro highrate x enable */
ARM GAS  /tmp/ccO72alg.s 			page 1002


17018:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17019:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
17020:Core/Src/bno055.c ****                                                               &data_u8r,
17021:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17022:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXIS);
17023:Core/Src/bno055.c ****                     break;
17024:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
17025:Core/Src/bno055.c **** 
17026:Core/Src/bno055.c ****                     /* Read the gyro highrate y enable */
17027:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17028:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
17029:Core/Src/bno055.c ****                                                               &data_u8r,
17030:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17031:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXIS);
17032:Core/Src/bno055.c ****                     break;
17033:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
17034:Core/Src/bno055.c **** 
17035:Core/Src/bno055.c ****                     /* Read the gyro highrate z enable */
17036:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17037:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
17038:Core/Src/bno055.c ****                                                               &data_u8r,
17039:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17040:Core/Src/bno055.c ****                     *data_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXIS);
17041:Core/Src/bno055.c ****                     break;
17042:Core/Src/bno055.c ****                 default:
17043:Core/Src/bno055.c ****                     com_rslt = BNO055_OUT_OF_RANGE;
17044:Core/Src/bno055.c ****                     break;
17045:Core/Src/bno055.c ****             }
17046:Core/Src/bno055.c ****         }
17047:Core/Src/bno055.c ****         else
17048:Core/Src/bno055.c ****         {
17049:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17050:Core/Src/bno055.c ****         }
17051:Core/Src/bno055.c ****     }
17052:Core/Src/bno055.c **** 
17053:Core/Src/bno055.c ****     return com_rslt;
17054:Core/Src/bno055.c **** }
 35750              		.loc 1 17054 1 is_stmt 0 view .LVU10034
 35751 0034 03B0     		add	sp, sp, #12
 35752              	.LCFI975:
 35753              		.cfi_remember_state
 35754              		.cfi_def_cfa_offset 12
 35755              		@ sp needed
 35756 0036 30BD     		pop	{r4, r5, pc}
 35757              	.LVL4418:
 35758              	.L2518:
 35759              	.LCFI976:
 35760              		.cfi_restore_state
17009:Core/Src/bno055.c ****         }
 35761              		.loc 1 17009 13 is_stmt 1 view .LVU10035
17009:Core/Src/bno055.c ****         }
 35762              		.loc 1 17009 23 is_stmt 0 view .LVU10036
 35763 0038 0120     		movs	r0, #1
 35764              	.LVL4419:
17009:Core/Src/bno055.c ****         }
 35765              		.loc 1 17009 23 view .LVU10037
 35766 003a FFF7FEFF 		bl	bno055_write_page_id
ARM GAS  /tmp/ccO72alg.s 			page 1003


 35767              	.LVL4420:
17011:Core/Src/bno055.c ****         {
 35768              		.loc 1 17011 9 is_stmt 1 view .LVU10038
17011:Core/Src/bno055.c ****         {
 35769              		.loc 1 17011 12 is_stmt 0 view .LVU10039
 35770 003e 0028     		cmp	r0, #0
 35771 0040 F1D0     		beq	.L2511
 35772 0042 EBE7     		b	.L2510
 35773              	.LVL4421:
 35774              	.L2519:
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 35775              		.loc 1 17018 21 is_stmt 1 view .LVU10040
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 35776              		.loc 1 17018 40 is_stmt 0 view .LVU10041
 35777 0044 194B     		ldr	r3, .L2520
 35778 0046 1868     		ldr	r0, [r3]
 35779 0048 0469     		ldr	r4, [r0, #16]
17018:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_AXIS_REG,
 35780              		.loc 1 17018 32 view .LVU10042
 35781 004a 0123     		movs	r3, #1
 35782 004c 0DF10702 		add	r2, sp, #7
 35783 0050 1721     		movs	r1, #23
 35784 0052 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35785 0054 A047     		blx	r4
 35786              	.LVL4422:
17022:Core/Src/bno055.c ****                     break;
 35787              		.loc 1 17022 21 is_stmt 1 view .LVU10043
17022:Core/Src/bno055.c ****                     break;
 35788              		.loc 1 17022 32 is_stmt 0 view .LVU10044
 35789 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35790 005a C3F3C003 		ubfx	r3, r3, #3, #1
17022:Core/Src/bno055.c ****                     break;
 35791              		.loc 1 17022 30 view .LVU10045
 35792 005e 2B70     		strb	r3, [r5]
17023:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Y_AXIS:
 35793              		.loc 1 17023 21 is_stmt 1 view .LVU10046
 35794 0060 E8E7     		b	.L2509
 35795              	.LVL4423:
 35796              	.L2512:
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 35797              		.loc 1 17027 21 view .LVU10047
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 35798              		.loc 1 17027 40 is_stmt 0 view .LVU10048
 35799 0062 124B     		ldr	r3, .L2520
 35800 0064 1868     		ldr	r0, [r3]
 35801 0066 0469     		ldr	r4, [r0, #16]
17027:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_AXIS_REG,
 35802              		.loc 1 17027 32 view .LVU10049
 35803 0068 0123     		movs	r3, #1
 35804 006a 0DF10702 		add	r2, sp, #7
 35805 006e 1721     		movs	r1, #23
 35806 0070 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35807 0072 A047     		blx	r4
 35808              	.LVL4424:
17031:Core/Src/bno055.c ****                     break;
 35809              		.loc 1 17031 21 is_stmt 1 view .LVU10050
17031:Core/Src/bno055.c ****                     break;
ARM GAS  /tmp/ccO72alg.s 			page 1004


 35810              		.loc 1 17031 32 is_stmt 0 view .LVU10051
 35811 0074 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35812 0078 C3F30013 		ubfx	r3, r3, #4, #1
17031:Core/Src/bno055.c ****                     break;
 35813              		.loc 1 17031 30 view .LVU10052
 35814 007c 2B70     		strb	r3, [r5]
17032:Core/Src/bno055.c ****                 case BNO055_GYRO_HIGHRATE_Z_AXIS:
 35815              		.loc 1 17032 21 is_stmt 1 view .LVU10053
 35816 007e D9E7     		b	.L2509
 35817              	.LVL4425:
 35818              	.L2513:
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 35819              		.loc 1 17036 21 view .LVU10054
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 35820              		.loc 1 17036 40 is_stmt 0 view .LVU10055
 35821 0080 0A4B     		ldr	r3, .L2520
 35822 0082 1868     		ldr	r0, [r3]
 35823 0084 0469     		ldr	r4, [r0, #16]
17036:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_AXIS_REG,
 35824              		.loc 1 17036 32 view .LVU10056
 35825 0086 0123     		movs	r3, #1
 35826 0088 0DF10702 		add	r2, sp, #7
 35827 008c 1721     		movs	r1, #23
 35828 008e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35829 0090 A047     		blx	r4
 35830              	.LVL4426:
17040:Core/Src/bno055.c ****                     break;
 35831              		.loc 1 17040 21 is_stmt 1 view .LVU10057
17040:Core/Src/bno055.c ****                     break;
 35832              		.loc 1 17040 32 is_stmt 0 view .LVU10058
 35833 0092 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35834 0096 C3F34013 		ubfx	r3, r3, #5, #1
17040:Core/Src/bno055.c ****                     break;
 35835              		.loc 1 17040 30 view .LVU10059
 35836 009a 2B70     		strb	r3, [r5]
17041:Core/Src/bno055.c ****                 default:
 35837              		.loc 1 17041 21 is_stmt 1 view .LVU10060
 35838 009c CAE7     		b	.L2509
 35839              	.LVL4427:
 35840              	.L2514:
17000:Core/Src/bno055.c ****     }
 35841              		.loc 1 17000 16 is_stmt 0 view .LVU10061
 35842 009e 6FF07E00 		mvn	r0, #126
 35843              	.LVL4428:
17000:Core/Src/bno055.c ****     }
 35844              		.loc 1 17000 16 view .LVU10062
 35845 00a2 C7E7     		b	.L2509
 35846              	.LVL4429:
 35847              	.L2515:
17049:Core/Src/bno055.c ****         }
 35848              		.loc 1 17049 22 view .LVU10063
 35849 00a4 4FF0FF30 		mov	r0, #-1
 35850 00a8 C4E7     		b	.L2509
 35851              	.L2521:
 35852 00aa 00BF     		.align	2
 35853              	.L2520:
 35854 00ac 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 1005


 35855              		.cfi_endproc
 35856              	.LFE245:
 35858              		.section	.text.bno055_set_gyro_highrate_axis_enable,"ax",%progbits
 35859              		.align	1
 35860              		.global	bno055_set_gyro_highrate_axis_enable
 35861              		.syntax unified
 35862              		.thumb
 35863              		.thumb_func
 35865              	bno055_set_gyro_highrate_axis_enable:
 35866              	.LVL4430:
 35867              	.LFB246:
17055:Core/Src/bno055.c **** 
17056:Core/Src/bno055.c **** /*!
17057:Core/Src/bno055.c ****  *  @brief This API used to write the gyro highrate enable
17058:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 3 to 5
17059:Core/Src/bno055.c ****  *
17060:Core/Src/bno055.c ****  *  @param data_u8 : The value of gyro highrate enable
17061:Core/Src/bno055.c ****  *      data_u8     | result
17062:Core/Src/bno055.c ****  *  ----------------  |-------------
17063:Core/Src/bno055.c ****  *      0x01          | BNO055_BIT_ENABLE
17064:Core/Src/bno055.c ****  *      0x00          | BNO055_BIT_DISABLE
17065:Core/Src/bno055.c ****  *  @param channel_u8 : The value of gyro highrate axis selection
17066:Core/Src/bno055.c ****  *               channel_u8         | value
17067:Core/Src/bno055.c ****  *     ------------------------       | ----------
17068:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_X_AXIS    |   0
17069:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Y_AXIS    |   1
17070:Core/Src/bno055.c ****  *     BNO055_GYRO_HIGHRATE_Z_AXIS    |   2
17071:Core/Src/bno055.c ****  *
17072:Core/Src/bno055.c ****  *  @return results of bus communication function
17073:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17074:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17075:Core/Src/bno055.c ****  *
17076:Core/Src/bno055.c ****  *
17077:Core/Src/bno055.c ****  */
17078:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_axis_enable(u8 channel_u8, u8 data_u8)
17079:Core/Src/bno055.c **** {
 35868              		.loc 1 17079 1 is_stmt 1 view -0
 35869              		.cfi_startproc
 35870              		@ args = 0, pretend = 0, frame = 8
 35871              		@ frame_needed = 0, uses_anonymous_args = 0
 35872              		.loc 1 17079 1 is_stmt 0 view .LVU10065
 35873 0000 70B5     		push	{r4, r5, r6, lr}
 35874              	.LCFI977:
 35875              		.cfi_def_cfa_offset 16
 35876              		.cfi_offset 4, -16
 35877              		.cfi_offset 5, -12
 35878              		.cfi_offset 6, -8
 35879              		.cfi_offset 14, -4
 35880 0002 82B0     		sub	sp, sp, #8
 35881              	.LCFI978:
 35882              		.cfi_def_cfa_offset 24
17080:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 35883              		.loc 1 17080 5 is_stmt 1 view .LVU10066
 35884              	.LVL4431:
17081:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 35885              		.loc 1 17081 5 view .LVU10067
 35886              		.loc 1 17081 8 is_stmt 0 view .LVU10068
ARM GAS  /tmp/ccO72alg.s 			page 1006


 35887 0004 0023     		movs	r3, #0
 35888 0006 8DF80730 		strb	r3, [sp, #7]
17082:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 35889              		.loc 1 17082 5 is_stmt 1 view .LVU10069
 35890              	.LVL4432:
17083:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 35891              		.loc 1 17083 5 view .LVU10070
 35892              		.loc 1 17083 8 is_stmt 0 view .LVU10071
 35893 000a 8DF80630 		strb	r3, [sp, #6]
17084:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 35894              		.loc 1 17084 5 is_stmt 1 view .LVU10072
 35895              	.LVL4433:
17085:Core/Src/bno055.c **** 
17086:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17087:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 35896              		.loc 1 17087 5 view .LVU10073
 35897              		.loc 1 17087 18 is_stmt 0 view .LVU10074
 35898 000e 544B     		ldr	r3, .L2538
 35899 0010 1B68     		ldr	r3, [r3]
 35900              		.loc 1 17087 8 view .LVU10075
 35901 0012 002B     		cmp	r3, #0
 35902 0014 00F0A080 		beq	.L2528
 35903 0018 0446     		mov	r4, r0
 35904 001a 0D46     		mov	r5, r1
17088:Core/Src/bno055.c ****     {
17089:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17090:Core/Src/bno055.c ****     }
17091:Core/Src/bno055.c ****     else
17092:Core/Src/bno055.c ****     {
17093:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17094:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17095:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17096:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 35905              		.loc 1 17096 9 is_stmt 1 view .LVU10076
 35906              		.loc 1 17096 19 is_stmt 0 view .LVU10077
 35907 001c 0DF10600 		add	r0, sp, #6
 35908              	.LVL4434:
 35909              		.loc 1 17096 19 view .LVU10078
 35910 0020 FFF7FEFF 		bl	bno055_get_operation_mode
 35911              	.LVL4435:
17097:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 35912              		.loc 1 17097 9 is_stmt 1 view .LVU10079
 35913              		.loc 1 17097 12 is_stmt 0 view .LVU10080
 35914 0024 0646     		mov	r6, r0
 35915 0026 0028     		cmp	r0, #0
 35916 0028 40F08580 		bne	.L2529
17098:Core/Src/bno055.c ****         {
17099:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 35917              		.loc 1 17099 13 is_stmt 1 view .LVU10081
 35918              		.loc 1 17099 32 is_stmt 0 view .LVU10082
 35919 002c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 35920              		.loc 1 17099 16 view .LVU10083
 35921 0030 1BB9     		cbnz	r3, .L2534
 35922              	.LVL4436:
 35923              	.L2525:
17100:Core/Src/bno055.c ****             {
17101:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
ARM GAS  /tmp/ccO72alg.s 			page 1007


17102:Core/Src/bno055.c ****             }
17103:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 35924              		.loc 1 17103 13 is_stmt 1 view .LVU10084
 35925              		.loc 1 17103 16 is_stmt 0 view .LVU10085
 35926 0032 46B1     		cbz	r6, .L2535
17104:Core/Src/bno055.c ****             {
17105:Core/Src/bno055.c ****                 /* Write page as one */
17106:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17107:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17108:Core/Src/bno055.c ****                 {
17109:Core/Src/bno055.c ****                     switch (channel_u8)
17110:Core/Src/bno055.c ****                     {
17111:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_X_AXIS:
17112:Core/Src/bno055.c **** 
17113:Core/Src/bno055.c ****                             /* Write the value of
17114:Core/Src/bno055.c ****                              * gyro highrate x enable*/
17115:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17116:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
17117:Core/Src/bno055.c ****                                                                       &data_u8r,
17118:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17119:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17120:Core/Src/bno055.c ****                             {
17121:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_AXI
17122:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17123:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
17124:Core/Src/bno055.c ****                                                                             &data_u8r,
17125:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17126:Core/Src/bno055.c ****                             }
17127:Core/Src/bno055.c ****                             break;
17128:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Y_AXIS:
17129:Core/Src/bno055.c **** 
17130:Core/Src/bno055.c ****                             /* Write the value of
17131:Core/Src/bno055.c ****                              * gyro highrate y enable*/
17132:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17133:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
17134:Core/Src/bno055.c ****                                                                       &data_u8r,
17135:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17136:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17137:Core/Src/bno055.c ****                             {
17138:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_AXI
17139:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17140:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
17141:Core/Src/bno055.c ****                                                                             &data_u8r,
17142:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17143:Core/Src/bno055.c ****                             }
17144:Core/Src/bno055.c ****                             break;
17145:Core/Src/bno055.c ****                         case BNO055_GYRO_HIGHRATE_Z_AXIS:
17146:Core/Src/bno055.c **** 
17147:Core/Src/bno055.c ****                             /* Write the value of
17148:Core/Src/bno055.c ****                              * gyro highrate z enable*/
17149:Core/Src/bno055.c ****                             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17150:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
17151:Core/Src/bno055.c ****                                                                       &data_u8r,
17152:Core/Src/bno055.c ****                                                                       BNO055_GEN_READ_WRITE_LENGTH)
17153:Core/Src/bno055.c ****                             if (com_rslt == BNO055_SUCCESS)
17154:Core/Src/bno055.c ****                             {
17155:Core/Src/bno055.c ****                                 data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_AXI
ARM GAS  /tmp/ccO72alg.s 			page 1008


17156:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17157:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
17158:Core/Src/bno055.c ****                                                                             &data_u8r,
17159:Core/Src/bno055.c ****                                                                             BNO055_GEN_READ_WRITE_L
17160:Core/Src/bno055.c ****                             }
17161:Core/Src/bno055.c ****                             break;
17162:Core/Src/bno055.c ****                         default:
17163:Core/Src/bno055.c ****                             com_rslt = BNO055_OUT_OF_RANGE;
17164:Core/Src/bno055.c ****                             break;
17165:Core/Src/bno055.c ****                     }
17166:Core/Src/bno055.c ****                 }
17167:Core/Src/bno055.c ****                 else
17168:Core/Src/bno055.c ****                 {
17169:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17170:Core/Src/bno055.c ****                 }
17171:Core/Src/bno055.c ****             }
17172:Core/Src/bno055.c ****             else
17173:Core/Src/bno055.c ****             {
17174:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 35927              		.loc 1 17174 26 view .LVU10086
 35928 0034 4FF0FF34 		mov	r4, #-1
 35929 0038 7FE0     		b	.L2524
 35930              	.LVL4437:
 35931              	.L2534:
17101:Core/Src/bno055.c ****             }
 35932              		.loc 1 17101 17 is_stmt 1 view .LVU10087
17101:Core/Src/bno055.c ****             }
 35933              		.loc 1 17101 28 is_stmt 0 view .LVU10088
 35934 003a FFF7FEFF 		bl	bno055_set_operation_mode
 35935              	.LVL4438:
17101:Core/Src/bno055.c ****             }
 35936              		.loc 1 17101 25 view .LVU10089
 35937 003e 56FA80F6 		uxtab	r6, r6, r0
 35938 0042 76B2     		sxtb	r6, r6
 35939              	.LVL4439:
17101:Core/Src/bno055.c ****             }
 35940              		.loc 1 17101 25 view .LVU10090
 35941 0044 F5E7     		b	.L2525
 35942              	.L2535:
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35943              		.loc 1 17106 17 is_stmt 1 view .LVU10091
17106:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 35944              		.loc 1 17106 30 is_stmt 0 view .LVU10092
 35945 0046 0120     		movs	r0, #1
 35946 0048 FFF7FEFF 		bl	bno055_write_page_id
 35947              	.LVL4440:
17107:Core/Src/bno055.c ****                 {
 35948              		.loc 1 17107 17 is_stmt 1 view .LVU10093
17107:Core/Src/bno055.c ****                 {
 35949              		.loc 1 17107 20 is_stmt 0 view .LVU10094
 35950 004c 0028     		cmp	r0, #0
 35951 004e 7AD1     		bne	.L2531
17109:Core/Src/bno055.c ****                     {
 35952              		.loc 1 17109 21 is_stmt 1 view .LVU10095
 35953 0050 012C     		cmp	r4, #1
 35954 0052 29D0     		beq	.L2526
 35955 0054 022C     		cmp	r4, #2
ARM GAS  /tmp/ccO72alg.s 			page 1009


 35956 0056 4BD0     		beq	.L2527
 35957 0058 14B1     		cbz	r4, .L2536
 35958 005a 6FF00104 		mvn	r4, #1
 35959 005e 6CE0     		b	.L2524
 35960              	.L2536:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35961              		.loc 1 17115 29 view .LVU10096
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35962              		.loc 1 17115 48 is_stmt 0 view .LVU10097
 35963 0060 3F4B     		ldr	r3, .L2538
 35964 0062 1868     		ldr	r0, [r3]
 35965              	.LVL4441:
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35966              		.loc 1 17115 48 view .LVU10098
 35967 0064 0469     		ldr	r4, [r0, #16]
17115:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_X_AXIS_R
 35968              		.loc 1 17115 40 view .LVU10099
 35969 0066 0123     		movs	r3, #1
 35970 0068 0DF10702 		add	r2, sp, #7
 35971 006c 1721     		movs	r1, #23
 35972 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 35973 0070 A047     		blx	r4
 35974              	.LVL4442:
17119:Core/Src/bno055.c ****                             {
 35975              		.loc 1 17119 29 is_stmt 1 view .LVU10100
17119:Core/Src/bno055.c ****                             {
 35976              		.loc 1 17119 32 is_stmt 0 view .LVU10101
 35977 0072 0446     		mov	r4, r0
 35978 0074 0028     		cmp	r0, #0
 35979 0076 60D1     		bne	.L2524
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35980              		.loc 1 17121 33 is_stmt 1 view .LVU10102
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35981              		.loc 1 17121 44 is_stmt 0 view .LVU10103
 35982 0078 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 35983 007c 23F00803 		bic	r3, r3, #8
 35984 0080 5BB2     		sxtb	r3, r3
 35985 0082 EA00     		lsls	r2, r5, #3
 35986 0084 02F00802 		and	r2, r2, #8
 35987 0088 1343     		orrs	r3, r3, r2
17121:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 35988              		.loc 1 17121 42 view .LVU10104
 35989 008a 8DF80730 		strb	r3, [sp, #7]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35990              		.loc 1 17122 33 is_stmt 1 view .LVU10105
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35991              		.loc 1 17122 53 is_stmt 0 view .LVU10106
 35992 008e 344B     		ldr	r3, .L2538
 35993 0090 1868     		ldr	r0, [r3]
 35994              	.LVL4443:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35995              		.loc 1 17122 53 view .LVU10107
 35996 0092 C568     		ldr	r5, [r0, #12]
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 35997              		.loc 1 17122 45 view .LVU10108
 35998 0094 0123     		movs	r3, #1
 35999 0096 0DF10702 		add	r2, sp, #7
ARM GAS  /tmp/ccO72alg.s 			page 1010


 36000 009a 1721     		movs	r1, #23
 36001 009c 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36002 009e A847     		blx	r5
 36003              	.LVL4444:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36004              		.loc 1 17122 42 view .LVU10109
 36005 00a0 54FA80F4 		uxtab	r4, r4, r0
 36006 00a4 64B2     		sxtb	r4, r4
 36007              	.LVL4445:
17122:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_X_
 36008              		.loc 1 17122 42 view .LVU10110
 36009 00a6 48E0     		b	.L2524
 36010              	.LVL4446:
 36011              	.L2526:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36012              		.loc 1 17132 29 is_stmt 1 view .LVU10111
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36013              		.loc 1 17132 48 is_stmt 0 view .LVU10112
 36014 00a8 2D4B     		ldr	r3, .L2538
 36015 00aa 1868     		ldr	r0, [r3]
 36016              	.LVL4447:
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36017              		.loc 1 17132 48 view .LVU10113
 36018 00ac 0469     		ldr	r4, [r0, #16]
17132:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Y_AXIS_R
 36019              		.loc 1 17132 40 view .LVU10114
 36020 00ae 0123     		movs	r3, #1
 36021 00b0 0DF10702 		add	r2, sp, #7
 36022 00b4 1721     		movs	r1, #23
 36023 00b6 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36024 00b8 A047     		blx	r4
 36025              	.LVL4448:
17136:Core/Src/bno055.c ****                             {
 36026              		.loc 1 17136 29 is_stmt 1 view .LVU10115
17136:Core/Src/bno055.c ****                             {
 36027              		.loc 1 17136 32 is_stmt 0 view .LVU10116
 36028 00ba 0446     		mov	r4, r0
 36029 00bc 0028     		cmp	r0, #0
 36030 00be 3CD1     		bne	.L2524
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36031              		.loc 1 17138 33 is_stmt 1 view .LVU10117
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36032              		.loc 1 17138 44 is_stmt 0 view .LVU10118
 36033 00c0 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36034 00c4 23F01003 		bic	r3, r3, #16
 36035 00c8 5BB2     		sxtb	r3, r3
 36036 00ca 2A01     		lsls	r2, r5, #4
 36037 00cc 02F01002 		and	r2, r2, #16
 36038 00d0 1343     		orrs	r3, r3, r2
17138:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36039              		.loc 1 17138 42 view .LVU10119
 36040 00d2 8DF80730 		strb	r3, [sp, #7]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36041              		.loc 1 17139 33 is_stmt 1 view .LVU10120
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36042              		.loc 1 17139 53 is_stmt 0 view .LVU10121
 36043 00d6 224B     		ldr	r3, .L2538
ARM GAS  /tmp/ccO72alg.s 			page 1011


 36044 00d8 1868     		ldr	r0, [r3]
 36045              	.LVL4449:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36046              		.loc 1 17139 53 view .LVU10122
 36047 00da C568     		ldr	r5, [r0, #12]
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36048              		.loc 1 17139 45 view .LVU10123
 36049 00dc 0123     		movs	r3, #1
 36050 00de 0DF10702 		add	r2, sp, #7
 36051 00e2 1721     		movs	r1, #23
 36052 00e4 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36053 00e6 A847     		blx	r5
 36054              	.LVL4450:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36055              		.loc 1 17139 42 view .LVU10124
 36056 00e8 54FA80F4 		uxtab	r4, r4, r0
 36057 00ec 64B2     		sxtb	r4, r4
 36058              	.LVL4451:
17139:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Y_
 36059              		.loc 1 17139 42 view .LVU10125
 36060 00ee 24E0     		b	.L2524
 36061              	.LVL4452:
 36062              	.L2527:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36063              		.loc 1 17149 29 is_stmt 1 view .LVU10126
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36064              		.loc 1 17149 48 is_stmt 0 view .LVU10127
 36065 00f0 1B4B     		ldr	r3, .L2538
 36066 00f2 1868     		ldr	r0, [r3]
 36067              	.LVL4453:
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36068              		.loc 1 17149 48 view .LVU10128
 36069 00f4 0469     		ldr	r4, [r0, #16]
17149:Core/Src/bno055.c ****                                                                       BNO055_GYRO_HIGHRATE_Z_AXIS_R
 36070              		.loc 1 17149 40 view .LVU10129
 36071 00f6 0123     		movs	r3, #1
 36072 00f8 0DF10702 		add	r2, sp, #7
 36073 00fc 1721     		movs	r1, #23
 36074 00fe 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36075 0100 A047     		blx	r4
 36076              	.LVL4454:
17153:Core/Src/bno055.c ****                             {
 36077              		.loc 1 17153 29 is_stmt 1 view .LVU10130
17153:Core/Src/bno055.c ****                             {
 36078              		.loc 1 17153 32 is_stmt 0 view .LVU10131
 36079 0102 0446     		mov	r4, r0
 36080 0104 C8B9     		cbnz	r0, .L2524
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36081              		.loc 1 17155 33 is_stmt 1 view .LVU10132
17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36082              		.loc 1 17155 44 is_stmt 0 view .LVU10133
 36083 0106 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36084 010a 23F02003 		bic	r3, r3, #32
 36085 010e 5AB2     		sxtb	r2, r3
 36086 0110 6B01     		lsls	r3, r5, #5
 36087 0112 03F02003 		and	r3, r3, #32
 36088 0116 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccO72alg.s 			page 1012


17155:Core/Src/bno055.c ****                                 com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36089              		.loc 1 17155 42 view .LVU10134
 36090 0118 8DF80730 		strb	r3, [sp, #7]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36091              		.loc 1 17156 33 is_stmt 1 view .LVU10135
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36092              		.loc 1 17156 53 is_stmt 0 view .LVU10136
 36093 011c 104B     		ldr	r3, .L2538
 36094 011e 1868     		ldr	r0, [r3]
 36095              	.LVL4455:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36096              		.loc 1 17156 53 view .LVU10137
 36097 0120 C568     		ldr	r5, [r0, #12]
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36098              		.loc 1 17156 45 view .LVU10138
 36099 0122 0123     		movs	r3, #1
 36100 0124 0DF10702 		add	r2, sp, #7
 36101 0128 1721     		movs	r1, #23
 36102 012a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36103 012c A847     		blx	r5
 36104              	.LVL4456:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36105              		.loc 1 17156 42 view .LVU10139
 36106 012e 54FA80F4 		uxtab	r4, r4, r0
 36107 0132 64B2     		sxtb	r4, r4
 36108              	.LVL4457:
17156:Core/Src/bno055.c ****                                                                             BNO055_GYRO_HIGHRATE_Z_
 36109              		.loc 1 17156 42 view .LVU10140
 36110 0134 01E0     		b	.L2524
 36111              	.LVL4458:
 36112              	.L2529:
17175:Core/Src/bno055.c ****             }
17176:Core/Src/bno055.c ****         }
17177:Core/Src/bno055.c ****         else
17178:Core/Src/bno055.c ****         {
17179:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36113              		.loc 1 17179 22 view .LVU10141
 36114 0136 4FF0FF34 		mov	r4, #-1
 36115              	.LVL4459:
 36116              	.L2524:
17180:Core/Src/bno055.c ****         }
17181:Core/Src/bno055.c ****     }
17182:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36117              		.loc 1 17182 5 is_stmt 1 view .LVU10142
 36118              		.loc 1 17182 24 is_stmt 0 view .LVU10143
 36119 013a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36120              		.loc 1 17182 8 view .LVU10144
 36121 013e 28B9     		cbnz	r0, .L2537
 36122              	.LVL4460:
 36123              	.L2523:
17183:Core/Src/bno055.c ****     {
17184:Core/Src/bno055.c ****         /* set the operation mode of
17185:Core/Src/bno055.c ****          * previous operation mode*/
17186:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17187:Core/Src/bno055.c ****     }
17188:Core/Src/bno055.c **** 
17189:Core/Src/bno055.c ****     return com_rslt;
ARM GAS  /tmp/ccO72alg.s 			page 1013


17190:Core/Src/bno055.c **** }
 36124              		.loc 1 17190 1 view .LVU10145
 36125 0140 2046     		mov	r0, r4
 36126 0142 02B0     		add	sp, sp, #8
 36127              	.LCFI979:
 36128              		.cfi_remember_state
 36129              		.cfi_def_cfa_offset 16
 36130              		@ sp needed
 36131 0144 70BD     		pop	{r4, r5, r6, pc}
 36132              	.LVL4461:
 36133              	.L2531:
 36134              	.LCFI980:
 36135              		.cfi_restore_state
17169:Core/Src/bno055.c ****                 }
 36136              		.loc 1 17169 30 view .LVU10146
 36137 0146 4FF0FF34 		mov	r4, #-1
 36138 014a F6E7     		b	.L2524
 36139              	.LVL4462:
 36140              	.L2537:
17186:Core/Src/bno055.c ****     }
 36141              		.loc 1 17186 9 is_stmt 1 view .LVU10147
17186:Core/Src/bno055.c ****     }
 36142              		.loc 1 17186 21 is_stmt 0 view .LVU10148
 36143 014c FFF7FEFF 		bl	bno055_set_operation_mode
 36144              	.LVL4463:
17186:Core/Src/bno055.c ****     }
 36145              		.loc 1 17186 18 view .LVU10149
 36146 0150 54FA80F4 		uxtab	r4, r4, r0
 36147              	.LVL4464:
17186:Core/Src/bno055.c ****     }
 36148              		.loc 1 17186 18 view .LVU10150
 36149 0154 64B2     		sxtb	r4, r4
 36150              	.LVL4465:
17186:Core/Src/bno055.c ****     }
 36151              		.loc 1 17186 18 view .LVU10151
 36152 0156 F3E7     		b	.L2523
 36153              	.LVL4466:
 36154              	.L2528:
17089:Core/Src/bno055.c ****     }
 36155              		.loc 1 17089 16 view .LVU10152
 36156 0158 6FF07E04 		mvn	r4, #126
 36157 015c F0E7     		b	.L2523
 36158              	.L2539:
 36159 015e 00BF     		.align	2
 36160              	.L2538:
 36161 0160 00000000 		.word	.LANCHOR0
 36162              		.cfi_endproc
 36163              	.LFE246:
 36165              		.section	.text.bno055_get_gyro_any_motion_filter,"ax",%progbits
 36166              		.align	1
 36167              		.global	bno055_get_gyro_any_motion_filter
 36168              		.syntax unified
 36169              		.thumb
 36170              		.thumb_func
 36172              	bno055_get_gyro_any_motion_filter:
 36173              	.LVL4467:
 36174              	.LFB247:
ARM GAS  /tmp/ccO72alg.s 			page 1014


17191:Core/Src/bno055.c **** 
17192:Core/Src/bno055.c **** /*!
17193:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion filter
17194:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17195:Core/Src/bno055.c ****  *
17196:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17197:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17198:Core/Src/bno055.c ****  *  ---------------------------   |------------
17199:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17200:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17201:Core/Src/bno055.c ****  *
17202:Core/Src/bno055.c ****  *  @return results of bus communication function
17203:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17204:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17205:Core/Src/bno055.c ****  *
17206:Core/Src/bno055.c ****  */
17207:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_filter(u8 *gyro_any_motion_filter_u8)
17208:Core/Src/bno055.c **** {
 36175              		.loc 1 17208 1 is_stmt 1 view -0
 36176              		.cfi_startproc
 36177              		@ args = 0, pretend = 0, frame = 8
 36178              		@ frame_needed = 0, uses_anonymous_args = 0
 36179              		.loc 1 17208 1 is_stmt 0 view .LVU10154
 36180 0000 30B5     		push	{r4, r5, lr}
 36181              	.LCFI981:
 36182              		.cfi_def_cfa_offset 12
 36183              		.cfi_offset 4, -12
 36184              		.cfi_offset 5, -8
 36185              		.cfi_offset 14, -4
 36186 0002 83B0     		sub	sp, sp, #12
 36187              	.LCFI982:
 36188              		.cfi_def_cfa_offset 24
17209:Core/Src/bno055.c ****     /* Variable used to return value of
17210:Core/Src/bno055.c ****      * communication routine*/
17211:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36189              		.loc 1 17211 5 is_stmt 1 view .LVU10155
 36190              	.LVL4468:
17212:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36191              		.loc 1 17212 5 view .LVU10156
 36192              		.loc 1 17212 8 is_stmt 0 view .LVU10157
 36193 0004 0023     		movs	r3, #0
 36194 0006 8DF80730 		strb	r3, [sp, #7]
17213:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36195              		.loc 1 17213 5 is_stmt 1 view .LVU10158
 36196              	.LVL4469:
17214:Core/Src/bno055.c **** 
17215:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17216:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36197              		.loc 1 17216 5 view .LVU10159
 36198              		.loc 1 17216 18 is_stmt 0 view .LVU10160
 36199 000a 144B     		ldr	r3, .L2548
 36200 000c 1B68     		ldr	r3, [r3]
 36201              		.loc 1 17216 8 view .LVU10161
 36202 000e F3B1     		cbz	r3, .L2544
 36203 0010 0446     		mov	r4, r0
17217:Core/Src/bno055.c ****     {
17218:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
ARM GAS  /tmp/ccO72alg.s 			page 1015


17219:Core/Src/bno055.c ****     }
17220:Core/Src/bno055.c ****     else
17221:Core/Src/bno055.c ****     {
17222:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion filter is
17223:Core/Src/bno055.c ****          * available in the page one*/
17224:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36204              		.loc 1 17224 9 is_stmt 1 view .LVU10162
 36205              		.loc 1 17224 21 is_stmt 0 view .LVU10163
 36206 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36207              		.loc 1 17224 12 view .LVU10164
 36208 0014 012B     		cmp	r3, #1
 36209 0016 14D1     		bne	.L2547
 36210              	.LVL4470:
 36211              	.L2542:
17225:Core/Src/bno055.c ****         {
17226:Core/Src/bno055.c ****             /* Write page as one */
17227:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17228:Core/Src/bno055.c ****         }
17229:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36212              		.loc 1 17229 53 discriminator 1 view .LVU10165
 36213 0018 104B     		ldr	r3, .L2548
 36214 001a 1B68     		ldr	r3, [r3]
 36215 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36216              		.loc 1 17229 41 discriminator 1 view .LVU10166
 36217 001e 012B     		cmp	r3, #1
 36218 0020 18D1     		bne	.L2545
 36219              	.L2543:
17230:Core/Src/bno055.c ****         {
17231:Core/Src/bno055.c ****             /* Read the value of gyro anymotion filter*/
17232:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36220              		.loc 1 17232 13 is_stmt 1 view .LVU10167
 36221              		.loc 1 17232 32 is_stmt 0 view .LVU10168
 36222 0022 0E4B     		ldr	r3, .L2548
 36223 0024 1868     		ldr	r0, [r3]
 36224 0026 0569     		ldr	r5, [r0, #16]
 36225              		.loc 1 17232 24 view .LVU10169
 36226 0028 0123     		movs	r3, #1
 36227 002a 0DF10702 		add	r2, sp, #7
 36228 002e 1721     		movs	r1, #23
 36229 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36230 0032 A847     		blx	r5
 36231              	.LVL4471:
17233:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_FILTER_REG,
17234:Core/Src/bno055.c ****                                                       &data_u8r,
17235:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17236:Core/Src/bno055.c ****             *gyro_any_motion_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_FILTE
 36232              		.loc 1 17236 13 is_stmt 1 view .LVU10170
 36233              		.loc 1 17236 42 is_stmt 0 view .LVU10171
 36234 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36235 0038 C3F38013 		ubfx	r3, r3, #6, #1
 36236              		.loc 1 17236 40 view .LVU10172
 36237 003c 2370     		strb	r3, [r4]
 36238              	.LVL4472:
 36239              	.L2541:
17237:Core/Src/bno055.c ****         }
17238:Core/Src/bno055.c ****         else
17239:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 1016


17240:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17241:Core/Src/bno055.c ****         }
17242:Core/Src/bno055.c ****     }
17243:Core/Src/bno055.c **** 
17244:Core/Src/bno055.c ****     return com_rslt;
17245:Core/Src/bno055.c **** }
 36240              		.loc 1 17245 1 view .LVU10173
 36241 003e 03B0     		add	sp, sp, #12
 36242              	.LCFI983:
 36243              		.cfi_remember_state
 36244              		.cfi_def_cfa_offset 12
 36245              		@ sp needed
 36246 0040 30BD     		pop	{r4, r5, pc}
 36247              	.LVL4473:
 36248              	.L2547:
 36249              	.LCFI984:
 36250              		.cfi_restore_state
17227:Core/Src/bno055.c ****         }
 36251              		.loc 1 17227 13 is_stmt 1 view .LVU10174
17227:Core/Src/bno055.c ****         }
 36252              		.loc 1 17227 23 is_stmt 0 view .LVU10175
 36253 0042 0120     		movs	r0, #1
 36254              	.LVL4474:
17227:Core/Src/bno055.c ****         }
 36255              		.loc 1 17227 23 view .LVU10176
 36256 0044 FFF7FEFF 		bl	bno055_write_page_id
 36257              	.LVL4475:
17229:Core/Src/bno055.c ****         {
 36258              		.loc 1 17229 9 is_stmt 1 view .LVU10177
17229:Core/Src/bno055.c ****         {
 36259              		.loc 1 17229 12 is_stmt 0 view .LVU10178
 36260 0048 0028     		cmp	r0, #0
 36261 004a EAD0     		beq	.L2543
 36262 004c E4E7     		b	.L2542
 36263              	.LVL4476:
 36264              	.L2544:
17218:Core/Src/bno055.c ****     }
 36265              		.loc 1 17218 16 view .LVU10179
 36266 004e 6FF07E00 		mvn	r0, #126
 36267              	.LVL4477:
17218:Core/Src/bno055.c ****     }
 36268              		.loc 1 17218 16 view .LVU10180
 36269 0052 F4E7     		b	.L2541
 36270              	.LVL4478:
 36271              	.L2545:
17240:Core/Src/bno055.c ****         }
 36272              		.loc 1 17240 22 view .LVU10181
 36273 0054 4FF0FF30 		mov	r0, #-1
 36274 0058 F1E7     		b	.L2541
 36275              	.L2549:
 36276 005a 00BF     		.align	2
 36277              	.L2548:
 36278 005c 00000000 		.word	.LANCHOR0
 36279              		.cfi_endproc
 36280              	.LFE247:
 36282              		.section	.text.bno055_set_gyro_any_motion_filter,"ax",%progbits
 36283              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 1017


 36284              		.global	bno055_set_gyro_any_motion_filter
 36285              		.syntax unified
 36286              		.thumb
 36287              		.thumb_func
 36289              	bno055_set_gyro_any_motion_filter:
 36290              	.LVL4479:
 36291              	.LFB248:
17246:Core/Src/bno055.c **** 
17247:Core/Src/bno055.c **** /*!
17248:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion filter
17249:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 6
17250:Core/Src/bno055.c ****  *
17251:Core/Src/bno055.c ****  *  @param gyro_any_motion_filter_u8 : The value of gyro anymotion filter
17252:Core/Src/bno055.c ****  *   gyro_any_motion_filter_u8  | result
17253:Core/Src/bno055.c ****  *  ---------------------------   |------------
17254:Core/Src/bno055.c ****  *      0x00                      | BNO055_GYRO_FILTERED_CONFIG
17255:Core/Src/bno055.c ****  *      0x01                      | BNO055_GYRO_UNFILTERED_CONFIG
17256:Core/Src/bno055.c ****  *
17257:Core/Src/bno055.c ****  *  @return results of bus communication function
17258:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17259:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17260:Core/Src/bno055.c ****  *
17261:Core/Src/bno055.c ****  */
17262:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_filter(u8 gyro_any_motion_filter_u8)
17263:Core/Src/bno055.c **** {
 36292              		.loc 1 17263 1 is_stmt 1 view -0
 36293              		.cfi_startproc
 36294              		@ args = 0, pretend = 0, frame = 8
 36295              		@ frame_needed = 0, uses_anonymous_args = 0
 36296              		.loc 1 17263 1 is_stmt 0 view .LVU10183
 36297 0000 30B5     		push	{r4, r5, lr}
 36298              	.LCFI985:
 36299              		.cfi_def_cfa_offset 12
 36300              		.cfi_offset 4, -12
 36301              		.cfi_offset 5, -8
 36302              		.cfi_offset 14, -4
 36303 0002 83B0     		sub	sp, sp, #12
 36304              	.LCFI986:
 36305              		.cfi_def_cfa_offset 24
17264:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36306              		.loc 1 17264 5 is_stmt 1 view .LVU10184
 36307              	.LVL4480:
17265:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36308              		.loc 1 17265 5 view .LVU10185
 36309              		.loc 1 17265 8 is_stmt 0 view .LVU10186
 36310 0004 0023     		movs	r3, #0
 36311 0006 8DF80730 		strb	r3, [sp, #7]
17266:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36312              		.loc 1 17266 5 is_stmt 1 view .LVU10187
 36313              	.LVL4481:
17267:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36314              		.loc 1 17267 5 view .LVU10188
 36315              		.loc 1 17267 8 is_stmt 0 view .LVU10189
 36316 000a 8DF80630 		strb	r3, [sp, #6]
17268:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36317              		.loc 1 17268 5 is_stmt 1 view .LVU10190
 36318              	.LVL4482:
ARM GAS  /tmp/ccO72alg.s 			page 1018


17269:Core/Src/bno055.c **** 
17270:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17271:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36319              		.loc 1 17271 5 view .LVU10191
 36320              		.loc 1 17271 18 is_stmt 0 view .LVU10192
 36321 000e 2A4B     		ldr	r3, .L2562
 36322 0010 1B68     		ldr	r3, [r3]
 36323              		.loc 1 17271 8 view .LVU10193
 36324 0012 002B     		cmp	r3, #0
 36325 0014 4CD0     		beq	.L2554
 36326 0016 0546     		mov	r5, r0
17272:Core/Src/bno055.c ****     {
17273:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17274:Core/Src/bno055.c ****     }
17275:Core/Src/bno055.c ****     else
17276:Core/Src/bno055.c ****     {
17277:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17278:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17279:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17280:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36327              		.loc 1 17280 9 is_stmt 1 view .LVU10194
 36328              		.loc 1 17280 19 is_stmt 0 view .LVU10195
 36329 0018 0DF10600 		add	r0, sp, #6
 36330              	.LVL4483:
 36331              		.loc 1 17280 19 view .LVU10196
 36332 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36333              	.LVL4484:
17281:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36334              		.loc 1 17281 9 is_stmt 1 view .LVU10197
 36335              		.loc 1 17281 12 is_stmt 0 view .LVU10198
 36336 0020 0446     		mov	r4, r0
 36337 0022 0028     		cmp	r0, #0
 36338 0024 33D1     		bne	.L2555
17282:Core/Src/bno055.c ****         {
17283:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36339              		.loc 1 17283 13 is_stmt 1 view .LVU10199
 36340              		.loc 1 17283 32 is_stmt 0 view .LVU10200
 36341 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36342              		.loc 1 17283 16 view .LVU10201
 36343 002a 1BB9     		cbnz	r3, .L2559
 36344              	.LVL4485:
 36345              	.L2553:
17284:Core/Src/bno055.c ****             {
17285:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17286:Core/Src/bno055.c ****             }
17287:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36346              		.loc 1 17287 13 is_stmt 1 view .LVU10202
 36347              		.loc 1 17287 16 is_stmt 0 view .LVU10203
 36348 002c 44B1     		cbz	r4, .L2560
17288:Core/Src/bno055.c ****             {
17289:Core/Src/bno055.c ****                 /* Write page as one */
17290:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17291:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17292:Core/Src/bno055.c ****                 {
17293:Core/Src/bno055.c ****                     /* Write the value of
17294:Core/Src/bno055.c ****                      * gyro anymotion filter*/
17295:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 1019


17296:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
17297:Core/Src/bno055.c ****                                                               &data_u8r,
17298:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17299:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17300:Core/Src/bno055.c ****                     {
17301:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
17302:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
17303:Core/Src/bno055.c ****                                                        gyro_any_motion_filter_u8);
17304:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17305:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
17306:Core/Src/bno055.c ****                                                                     &data_u8r,
17307:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17308:Core/Src/bno055.c ****                     }
17309:Core/Src/bno055.c ****                 }
17310:Core/Src/bno055.c ****                 else
17311:Core/Src/bno055.c ****                 {
17312:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17313:Core/Src/bno055.c ****                 }
17314:Core/Src/bno055.c ****             }
17315:Core/Src/bno055.c ****             else
17316:Core/Src/bno055.c ****             {
17317:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36349              		.loc 1 17317 26 view .LVU10204
 36350 002e 4FF0FF34 		mov	r4, #-1
 36351              	.LVL4486:
 36352              		.loc 1 17317 26 view .LVU10205
 36353 0032 2EE0     		b	.L2552
 36354              	.LVL4487:
 36355              	.L2559:
17285:Core/Src/bno055.c ****             }
 36356              		.loc 1 17285 17 is_stmt 1 view .LVU10206
17285:Core/Src/bno055.c ****             }
 36357              		.loc 1 17285 28 is_stmt 0 view .LVU10207
 36358 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 36359              	.LVL4488:
17285:Core/Src/bno055.c ****             }
 36360              		.loc 1 17285 25 view .LVU10208
 36361 0038 54FA80F4 		uxtab	r4, r4, r0
 36362 003c 64B2     		sxtb	r4, r4
 36363              	.LVL4489:
17285:Core/Src/bno055.c ****             }
 36364              		.loc 1 17285 25 view .LVU10209
 36365 003e F5E7     		b	.L2553
 36366              	.L2560:
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36367              		.loc 1 17290 17 is_stmt 1 view .LVU10210
17290:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36368              		.loc 1 17290 30 is_stmt 0 view .LVU10211
 36369 0040 0120     		movs	r0, #1
 36370 0042 FFF7FEFF 		bl	bno055_write_page_id
 36371              	.LVL4490:
17291:Core/Src/bno055.c ****                 {
 36372              		.loc 1 17291 17 is_stmt 1 view .LVU10212
17291:Core/Src/bno055.c ****                 {
 36373              		.loc 1 17291 20 is_stmt 0 view .LVU10213
 36374 0046 50BB     		cbnz	r0, .L2557
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
ARM GAS  /tmp/ccO72alg.s 			page 1020


 36375              		.loc 1 17295 21 is_stmt 1 view .LVU10214
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36376              		.loc 1 17295 40 is_stmt 0 view .LVU10215
 36377 0048 1B4B     		ldr	r3, .L2562
 36378 004a 1868     		ldr	r0, [r3]
 36379              	.LVL4491:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36380              		.loc 1 17295 40 view .LVU10216
 36381 004c 0469     		ldr	r4, [r0, #16]
 36382              	.LVL4492:
17295:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_FILTER_REG,
 36383              		.loc 1 17295 32 view .LVU10217
 36384 004e 0123     		movs	r3, #1
 36385 0050 0DF10702 		add	r2, sp, #7
 36386 0054 1721     		movs	r1, #23
 36387 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36388 0058 A047     		blx	r4
 36389              	.LVL4493:
17299:Core/Src/bno055.c ****                     {
 36390              		.loc 1 17299 21 is_stmt 1 view .LVU10218
17299:Core/Src/bno055.c ****                     {
 36391              		.loc 1 17299 24 is_stmt 0 view .LVU10219
 36392 005a 0446     		mov	r4, r0
 36393 005c C8B9     		cbnz	r0, .L2552
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36394              		.loc 1 17301 25 is_stmt 1 view .LVU10220
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36395              		.loc 1 17301 36 is_stmt 0 view .LVU10221
 36396 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 36397              	.LVL4494:
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36398              		.loc 1 17301 36 view .LVU10222
 36399 0062 20F04000 		bic	r0, r0, #64
 36400 0066 43B2     		sxtb	r3, r0
 36401 0068 A801     		lsls	r0, r5, #6
 36402 006a 00F04000 		and	r0, r0, #64
 36403 006e 1843     		orrs	r0, r0, r3
17301:Core/Src/bno055.c ****                                                        BNO055_GYRO_ANY_MOTION_FILTER,
 36404              		.loc 1 17301 34 view .LVU10223
 36405 0070 8DF80700 		strb	r0, [sp, #7]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36406              		.loc 1 17304 25 is_stmt 1 view .LVU10224
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36407              		.loc 1 17304 45 is_stmt 0 view .LVU10225
 36408 0074 104B     		ldr	r3, .L2562
 36409 0076 1868     		ldr	r0, [r3]
 36410 0078 C568     		ldr	r5, [r0, #12]
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36411              		.loc 1 17304 37 view .LVU10226
 36412 007a 0123     		movs	r3, #1
 36413 007c 0DF10702 		add	r2, sp, #7
 36414 0080 1721     		movs	r1, #23
 36415 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36416 0084 A847     		blx	r5
 36417              	.LVL4495:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36418              		.loc 1 17304 34 view .LVU10227
ARM GAS  /tmp/ccO72alg.s 			page 1021


 36419 0086 54FA80F4 		uxtab	r4, r4, r0
 36420 008a 64B2     		sxtb	r4, r4
 36421              	.LVL4496:
17304:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_FILTER_R
 36422              		.loc 1 17304 34 view .LVU10228
 36423 008c 01E0     		b	.L2552
 36424              	.LVL4497:
 36425              	.L2555:
17318:Core/Src/bno055.c ****             }
17319:Core/Src/bno055.c ****         }
17320:Core/Src/bno055.c ****         else
17321:Core/Src/bno055.c ****         {
17322:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36426              		.loc 1 17322 22 view .LVU10229
 36427 008e 4FF0FF34 		mov	r4, #-1
 36428              	.LVL4498:
 36429              	.L2552:
17323:Core/Src/bno055.c ****         }
17324:Core/Src/bno055.c ****     }
17325:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36430              		.loc 1 17325 5 is_stmt 1 view .LVU10230
 36431              		.loc 1 17325 24 is_stmt 0 view .LVU10231
 36432 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36433              		.loc 1 17325 8 view .LVU10232
 36434 0096 28B9     		cbnz	r0, .L2561
 36435              	.LVL4499:
 36436              	.L2551:
17326:Core/Src/bno055.c ****     {
17327:Core/Src/bno055.c ****         /* set the operation mode of
17328:Core/Src/bno055.c ****          * previous operation mode*/
17329:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17330:Core/Src/bno055.c ****     }
17331:Core/Src/bno055.c **** 
17332:Core/Src/bno055.c ****     return com_rslt;
17333:Core/Src/bno055.c **** }
 36437              		.loc 1 17333 1 view .LVU10233
 36438 0098 2046     		mov	r0, r4
 36439 009a 03B0     		add	sp, sp, #12
 36440              	.LCFI987:
 36441              		.cfi_remember_state
 36442              		.cfi_def_cfa_offset 12
 36443              		@ sp needed
 36444 009c 30BD     		pop	{r4, r5, pc}
 36445              	.LVL4500:
 36446              	.L2557:
 36447              	.LCFI988:
 36448              		.cfi_restore_state
17312:Core/Src/bno055.c ****                 }
 36449              		.loc 1 17312 30 view .LVU10234
 36450 009e 4FF0FF34 		mov	r4, #-1
 36451              	.LVL4501:
17312:Core/Src/bno055.c ****                 }
 36452              		.loc 1 17312 30 view .LVU10235
 36453 00a2 F6E7     		b	.L2552
 36454              	.LVL4502:
 36455              	.L2561:
17329:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 1022


 36456              		.loc 1 17329 9 is_stmt 1 view .LVU10236
17329:Core/Src/bno055.c ****     }
 36457              		.loc 1 17329 21 is_stmt 0 view .LVU10237
 36458 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 36459              	.LVL4503:
17329:Core/Src/bno055.c ****     }
 36460              		.loc 1 17329 18 view .LVU10238
 36461 00a8 54FA80F4 		uxtab	r4, r4, r0
 36462              	.LVL4504:
17329:Core/Src/bno055.c ****     }
 36463              		.loc 1 17329 18 view .LVU10239
 36464 00ac 64B2     		sxtb	r4, r4
 36465              	.LVL4505:
17329:Core/Src/bno055.c ****     }
 36466              		.loc 1 17329 18 view .LVU10240
 36467 00ae F3E7     		b	.L2551
 36468              	.LVL4506:
 36469              	.L2554:
17273:Core/Src/bno055.c ****     }
 36470              		.loc 1 17273 16 view .LVU10241
 36471 00b0 6FF07E04 		mvn	r4, #126
 36472 00b4 F0E7     		b	.L2551
 36473              	.L2563:
 36474 00b6 00BF     		.align	2
 36475              	.L2562:
 36476 00b8 00000000 		.word	.LANCHOR0
 36477              		.cfi_endproc
 36478              	.LFE248:
 36480              		.section	.text.bno055_get_gyro_highrate_filter,"ax",%progbits
 36481              		.align	1
 36482              		.global	bno055_get_gyro_highrate_filter
 36483              		.syntax unified
 36484              		.thumb
 36485              		.thumb_func
 36487              	bno055_get_gyro_highrate_filter:
 36488              	.LVL4507:
 36489              	.LFB249:
17334:Core/Src/bno055.c **** 
17335:Core/Src/bno055.c **** /*!
17336:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate filter
17337:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17338:Core/Src/bno055.c ****  *
17339:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17340:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17341:Core/Src/bno055.c ****  *  --------------------------- |------------
17342:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17343:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17344:Core/Src/bno055.c ****  *
17345:Core/Src/bno055.c ****  *  @return results of bus communication function
17346:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17347:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17348:Core/Src/bno055.c ****  *
17349:Core/Src/bno055.c ****  */
17350:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_filter(u8 *gyro_highrate_filter_u8)
17351:Core/Src/bno055.c **** {
 36490              		.loc 1 17351 1 is_stmt 1 view -0
 36491              		.cfi_startproc
ARM GAS  /tmp/ccO72alg.s 			page 1023


 36492              		@ args = 0, pretend = 0, frame = 8
 36493              		@ frame_needed = 0, uses_anonymous_args = 0
 36494              		.loc 1 17351 1 is_stmt 0 view .LVU10243
 36495 0000 30B5     		push	{r4, r5, lr}
 36496              	.LCFI989:
 36497              		.cfi_def_cfa_offset 12
 36498              		.cfi_offset 4, -12
 36499              		.cfi_offset 5, -8
 36500              		.cfi_offset 14, -4
 36501 0002 83B0     		sub	sp, sp, #12
 36502              	.LCFI990:
 36503              		.cfi_def_cfa_offset 24
17352:Core/Src/bno055.c ****     /* Variable used to return value of
17353:Core/Src/bno055.c ****      * communication routine*/
17354:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36504              		.loc 1 17354 5 is_stmt 1 view .LVU10244
 36505              	.LVL4508:
17355:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36506              		.loc 1 17355 5 view .LVU10245
 36507              		.loc 1 17355 8 is_stmt 0 view .LVU10246
 36508 0004 0023     		movs	r3, #0
 36509 0006 8DF80730 		strb	r3, [sp, #7]
17356:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36510              		.loc 1 17356 5 is_stmt 1 view .LVU10247
 36511              	.LVL4509:
17357:Core/Src/bno055.c **** 
17358:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17359:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36512              		.loc 1 17359 5 view .LVU10248
 36513              		.loc 1 17359 18 is_stmt 0 view .LVU10249
 36514 000a 134B     		ldr	r3, .L2572
 36515 000c 1B68     		ldr	r3, [r3]
 36516              		.loc 1 17359 8 view .LVU10250
 36517 000e EBB1     		cbz	r3, .L2568
 36518 0010 0446     		mov	r4, r0
17360:Core/Src/bno055.c ****     {
17361:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17362:Core/Src/bno055.c ****     }
17363:Core/Src/bno055.c ****     else
17364:Core/Src/bno055.c ****     {
17365:Core/Src/bno055.c ****         /*condition check for page, gyro highrate filter is
17366:Core/Src/bno055.c ****          * available in the page one*/
17367:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36519              		.loc 1 17367 9 is_stmt 1 view .LVU10251
 36520              		.loc 1 17367 21 is_stmt 0 view .LVU10252
 36521 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36522              		.loc 1 17367 12 view .LVU10253
 36523 0014 012B     		cmp	r3, #1
 36524 0016 13D1     		bne	.L2571
 36525              	.LVL4510:
 36526              	.L2566:
17368:Core/Src/bno055.c ****         {
17369:Core/Src/bno055.c ****             /* Write page as one */
17370:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17371:Core/Src/bno055.c ****         }
17372:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36527              		.loc 1 17372 53 discriminator 1 view .LVU10254
ARM GAS  /tmp/ccO72alg.s 			page 1024


 36528 0018 0F4B     		ldr	r3, .L2572
 36529 001a 1B68     		ldr	r3, [r3]
 36530 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36531              		.loc 1 17372 41 discriminator 1 view .LVU10255
 36532 001e 012B     		cmp	r3, #1
 36533 0020 17D1     		bne	.L2569
 36534              	.L2567:
17373:Core/Src/bno055.c ****         {
17374:Core/Src/bno055.c ****             /* Read the value of gyro highrate filter */
17375:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36535              		.loc 1 17375 13 is_stmt 1 view .LVU10256
 36536              		.loc 1 17375 32 is_stmt 0 view .LVU10257
 36537 0022 0D4B     		ldr	r3, .L2572
 36538 0024 1868     		ldr	r0, [r3]
 36539 0026 0569     		ldr	r5, [r0, #16]
 36540              		.loc 1 17375 24 view .LVU10258
 36541 0028 0123     		movs	r3, #1
 36542 002a 0DF10702 		add	r2, sp, #7
 36543 002e 1721     		movs	r1, #23
 36544 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36545 0032 A847     		blx	r5
 36546              	.LVL4511:
17376:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_FILTER_REG,
17377:Core/Src/bno055.c ****                                                       &data_u8r,
17378:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17379:Core/Src/bno055.c ****             *gyro_highrate_filter_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER);
 36547              		.loc 1 17379 13 is_stmt 1 view .LVU10259
 36548              		.loc 1 17379 40 is_stmt 0 view .LVU10260
 36549 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36550 0038 DB09     		lsrs	r3, r3, #7
 36551              		.loc 1 17379 38 view .LVU10261
 36552 003a 2370     		strb	r3, [r4]
 36553              	.LVL4512:
 36554              	.L2565:
17380:Core/Src/bno055.c ****         }
17381:Core/Src/bno055.c ****         else
17382:Core/Src/bno055.c ****         {
17383:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17384:Core/Src/bno055.c ****         }
17385:Core/Src/bno055.c ****     }
17386:Core/Src/bno055.c **** 
17387:Core/Src/bno055.c ****     return com_rslt;
17388:Core/Src/bno055.c **** }
 36555              		.loc 1 17388 1 view .LVU10262
 36556 003c 03B0     		add	sp, sp, #12
 36557              	.LCFI991:
 36558              		.cfi_remember_state
 36559              		.cfi_def_cfa_offset 12
 36560              		@ sp needed
 36561 003e 30BD     		pop	{r4, r5, pc}
 36562              	.LVL4513:
 36563              	.L2571:
 36564              	.LCFI992:
 36565              		.cfi_restore_state
17370:Core/Src/bno055.c ****         }
 36566              		.loc 1 17370 13 is_stmt 1 view .LVU10263
17370:Core/Src/bno055.c ****         }
ARM GAS  /tmp/ccO72alg.s 			page 1025


 36567              		.loc 1 17370 23 is_stmt 0 view .LVU10264
 36568 0040 0120     		movs	r0, #1
 36569              	.LVL4514:
17370:Core/Src/bno055.c ****         }
 36570              		.loc 1 17370 23 view .LVU10265
 36571 0042 FFF7FEFF 		bl	bno055_write_page_id
 36572              	.LVL4515:
17372:Core/Src/bno055.c ****         {
 36573              		.loc 1 17372 9 is_stmt 1 view .LVU10266
17372:Core/Src/bno055.c ****         {
 36574              		.loc 1 17372 12 is_stmt 0 view .LVU10267
 36575 0046 0028     		cmp	r0, #0
 36576 0048 EBD0     		beq	.L2567
 36577 004a E5E7     		b	.L2566
 36578              	.LVL4516:
 36579              	.L2568:
17361:Core/Src/bno055.c ****     }
 36580              		.loc 1 17361 16 view .LVU10268
 36581 004c 6FF07E00 		mvn	r0, #126
 36582              	.LVL4517:
17361:Core/Src/bno055.c ****     }
 36583              		.loc 1 17361 16 view .LVU10269
 36584 0050 F4E7     		b	.L2565
 36585              	.LVL4518:
 36586              	.L2569:
17383:Core/Src/bno055.c ****         }
 36587              		.loc 1 17383 22 view .LVU10270
 36588 0052 4FF0FF30 		mov	r0, #-1
 36589 0056 F1E7     		b	.L2565
 36590              	.L2573:
 36591              		.align	2
 36592              	.L2572:
 36593 0058 00000000 		.word	.LANCHOR0
 36594              		.cfi_endproc
 36595              	.LFE249:
 36597              		.section	.text.bno055_set_gyro_highrate_filter,"ax",%progbits
 36598              		.align	1
 36599              		.global	bno055_set_gyro_highrate_filter
 36600              		.syntax unified
 36601              		.thumb
 36602              		.thumb_func
 36604              	bno055_set_gyro_highrate_filter:
 36605              	.LVL4519:
 36606              	.LFB250:
17389:Core/Src/bno055.c **** 
17390:Core/Src/bno055.c **** /*!
17391:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate filter
17392:Core/Src/bno055.c ****  *  from page one register from 0x17 bit 7
17393:Core/Src/bno055.c ****  *
17394:Core/Src/bno055.c ****  *  @param gyro_highrate_filter_u8 : The value of gyro highrate filter
17395:Core/Src/bno055.c ****  *   gyro_highrate_filter_u8  | result
17396:Core/Src/bno055.c ****  *  --------------------------- |------------
17397:Core/Src/bno055.c ****  *         0x00                 | BNO055_GYRO_FILTERED_CONFIG
17398:Core/Src/bno055.c ****  *         0x01                 | BNO055_GYRO_UNFILTERED_CONFIG
17399:Core/Src/bno055.c ****  *
17400:Core/Src/bno055.c ****  *  @return results of bus communication function
17401:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
ARM GAS  /tmp/ccO72alg.s 			page 1026


17402:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17403:Core/Src/bno055.c ****  *
17404:Core/Src/bno055.c ****  */
17405:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_filter(u8 gyro_highrate_filter_u8)
17406:Core/Src/bno055.c **** {
 36607              		.loc 1 17406 1 is_stmt 1 view -0
 36608              		.cfi_startproc
 36609              		@ args = 0, pretend = 0, frame = 8
 36610              		@ frame_needed = 0, uses_anonymous_args = 0
 36611              		.loc 1 17406 1 is_stmt 0 view .LVU10272
 36612 0000 30B5     		push	{r4, r5, lr}
 36613              	.LCFI993:
 36614              		.cfi_def_cfa_offset 12
 36615              		.cfi_offset 4, -12
 36616              		.cfi_offset 5, -8
 36617              		.cfi_offset 14, -4
 36618 0002 83B0     		sub	sp, sp, #12
 36619              	.LCFI994:
 36620              		.cfi_def_cfa_offset 24
17407:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36621              		.loc 1 17407 5 is_stmt 1 view .LVU10273
 36622              	.LVL4520:
17408:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36623              		.loc 1 17408 5 view .LVU10274
 36624              		.loc 1 17408 8 is_stmt 0 view .LVU10275
 36625 0004 0023     		movs	r3, #0
 36626 0006 8DF80730 		strb	r3, [sp, #7]
17409:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36627              		.loc 1 17409 5 is_stmt 1 view .LVU10276
 36628              	.LVL4521:
17410:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36629              		.loc 1 17410 5 view .LVU10277
17411:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36630              		.loc 1 17411 5 view .LVU10278
 36631              		.loc 1 17411 8 is_stmt 0 view .LVU10279
 36632 000a 8DF80630 		strb	r3, [sp, #6]
17412:Core/Src/bno055.c **** 
17413:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17414:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36633              		.loc 1 17414 5 is_stmt 1 view .LVU10280
 36634              		.loc 1 17414 18 is_stmt 0 view .LVU10281
 36635 000e 284B     		ldr	r3, .L2586
 36636 0010 1B68     		ldr	r3, [r3]
 36637              		.loc 1 17414 8 view .LVU10282
 36638 0012 002B     		cmp	r3, #0
 36639 0014 48D0     		beq	.L2578
 36640 0016 0546     		mov	r5, r0
17415:Core/Src/bno055.c ****     {
17416:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17417:Core/Src/bno055.c ****     }
17418:Core/Src/bno055.c ****     else
17419:Core/Src/bno055.c ****     {
17420:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17421:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17422:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17423:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36641              		.loc 1 17423 9 is_stmt 1 view .LVU10283
ARM GAS  /tmp/ccO72alg.s 			page 1027


 36642              		.loc 1 17423 19 is_stmt 0 view .LVU10284
 36643 0018 0DF10600 		add	r0, sp, #6
 36644              	.LVL4522:
 36645              		.loc 1 17423 19 view .LVU10285
 36646 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36647              	.LVL4523:
17424:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36648              		.loc 1 17424 9 is_stmt 1 view .LVU10286
 36649              		.loc 1 17424 12 is_stmt 0 view .LVU10287
 36650 0020 0446     		mov	r4, r0
 36651 0022 80BB     		cbnz	r0, .L2579
17425:Core/Src/bno055.c ****         {
17426:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36652              		.loc 1 17426 13 is_stmt 1 view .LVU10288
 36653              		.loc 1 17426 32 is_stmt 0 view .LVU10289
 36654 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36655              		.loc 1 17426 16 view .LVU10290
 36656 0028 1BB9     		cbnz	r3, .L2583
 36657              	.LVL4524:
 36658              	.L2577:
17427:Core/Src/bno055.c ****             {
17428:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17429:Core/Src/bno055.c ****             }
17430:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36659              		.loc 1 17430 13 is_stmt 1 view .LVU10291
 36660              		.loc 1 17430 16 is_stmt 0 view .LVU10292
 36661 002a 44B1     		cbz	r4, .L2584
17431:Core/Src/bno055.c ****             {
17432:Core/Src/bno055.c ****                 /* Write page as one */
17433:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17434:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17435:Core/Src/bno055.c ****                 {
17436:Core/Src/bno055.c ****                     /* Write the value of
17437:Core/Src/bno055.c ****                      * gyro highrate filter*/
17438:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17439:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
17440:Core/Src/bno055.c ****                                                               &data_u8r,
17441:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17442:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17443:Core/Src/bno055.c ****                     {
17444:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_FILTER, gyro_
17445:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17446:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
17447:Core/Src/bno055.c ****                                                                     &data_u8r,
17448:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17449:Core/Src/bno055.c ****                     }
17450:Core/Src/bno055.c ****                 }
17451:Core/Src/bno055.c ****                 else
17452:Core/Src/bno055.c ****                 {
17453:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17454:Core/Src/bno055.c ****                 }
17455:Core/Src/bno055.c ****             }
17456:Core/Src/bno055.c ****             else
17457:Core/Src/bno055.c ****             {
17458:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36662              		.loc 1 17458 26 view .LVU10293
 36663 002c 4FF0FF34 		mov	r4, #-1
ARM GAS  /tmp/ccO72alg.s 			page 1028


 36664              	.LVL4525:
 36665              		.loc 1 17458 26 view .LVU10294
 36666 0030 2BE0     		b	.L2576
 36667              	.LVL4526:
 36668              	.L2583:
17428:Core/Src/bno055.c ****             }
 36669              		.loc 1 17428 17 is_stmt 1 view .LVU10295
17428:Core/Src/bno055.c ****             }
 36670              		.loc 1 17428 28 is_stmt 0 view .LVU10296
 36671 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36672              	.LVL4527:
17428:Core/Src/bno055.c ****             }
 36673              		.loc 1 17428 25 view .LVU10297
 36674 0036 54FA80F4 		uxtab	r4, r4, r0
 36675 003a 64B2     		sxtb	r4, r4
 36676              	.LVL4528:
17428:Core/Src/bno055.c ****             }
 36677              		.loc 1 17428 25 view .LVU10298
 36678 003c F5E7     		b	.L2577
 36679              	.L2584:
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36680              		.loc 1 17433 17 is_stmt 1 view .LVU10299
17433:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36681              		.loc 1 17433 30 is_stmt 0 view .LVU10300
 36682 003e 0120     		movs	r0, #1
 36683 0040 FFF7FEFF 		bl	bno055_write_page_id
 36684              	.LVL4529:
17434:Core/Src/bno055.c ****                 {
 36685              		.loc 1 17434 17 is_stmt 1 view .LVU10301
17434:Core/Src/bno055.c ****                 {
 36686              		.loc 1 17434 20 is_stmt 0 view .LVU10302
 36687 0044 38BB     		cbnz	r0, .L2581
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36688              		.loc 1 17438 21 is_stmt 1 view .LVU10303
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36689              		.loc 1 17438 40 is_stmt 0 view .LVU10304
 36690 0046 1A4B     		ldr	r3, .L2586
 36691 0048 1868     		ldr	r0, [r3]
 36692              	.LVL4530:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36693              		.loc 1 17438 40 view .LVU10305
 36694 004a 0469     		ldr	r4, [r0, #16]
 36695              	.LVL4531:
17438:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_FILTER_REG,
 36696              		.loc 1 17438 32 view .LVU10306
 36697 004c 0123     		movs	r3, #1
 36698 004e 0DF10702 		add	r2, sp, #7
 36699 0052 1721     		movs	r1, #23
 36700 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36701 0056 A047     		blx	r4
 36702              	.LVL4532:
17442:Core/Src/bno055.c ****                     {
 36703              		.loc 1 17442 21 is_stmt 1 view .LVU10307
17442:Core/Src/bno055.c ****                     {
 36704              		.loc 1 17442 24 is_stmt 0 view .LVU10308
 36705 0058 0446     		mov	r4, r0
 36706 005a B0B9     		cbnz	r0, .L2576
ARM GAS  /tmp/ccO72alg.s 			page 1029


17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36707              		.loc 1 17444 25 is_stmt 1 view .LVU10309
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36708              		.loc 1 17444 36 is_stmt 0 view .LVU10310
 36709 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 36710              	.LVL4533:
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36711              		.loc 1 17444 36 view .LVU10311
 36712 0060 00F07F00 		and	r0, r0, #127
 36713 0064 40EAC510 		orr	r0, r0, r5, lsl #7
17444:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 36714              		.loc 1 17444 34 view .LVU10312
 36715 0068 8DF80700 		strb	r0, [sp, #7]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36716              		.loc 1 17445 25 is_stmt 1 view .LVU10313
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36717              		.loc 1 17445 45 is_stmt 0 view .LVU10314
 36718 006c 104B     		ldr	r3, .L2586
 36719 006e 1868     		ldr	r0, [r3]
 36720 0070 C568     		ldr	r5, [r0, #12]
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36721              		.loc 1 17445 37 view .LVU10315
 36722 0072 0123     		movs	r3, #1
 36723 0074 0DF10702 		add	r2, sp, #7
 36724 0078 1721     		movs	r1, #23
 36725 007a 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36726 007c A847     		blx	r5
 36727              	.LVL4534:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36728              		.loc 1 17445 34 view .LVU10316
 36729 007e 54FA80F4 		uxtab	r4, r4, r0
 36730 0082 64B2     		sxtb	r4, r4
 36731              	.LVL4535:
17445:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_FILTER_REG
 36732              		.loc 1 17445 34 view .LVU10317
 36733 0084 01E0     		b	.L2576
 36734              	.LVL4536:
 36735              	.L2579:
17459:Core/Src/bno055.c ****             }
17460:Core/Src/bno055.c ****         }
17461:Core/Src/bno055.c ****         else
17462:Core/Src/bno055.c ****         {
17463:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 36736              		.loc 1 17463 22 view .LVU10318
 36737 0086 4FF0FF34 		mov	r4, #-1
 36738              	.LVL4537:
 36739              	.L2576:
17464:Core/Src/bno055.c ****         }
17465:Core/Src/bno055.c ****     }
17466:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36740              		.loc 1 17466 5 is_stmt 1 view .LVU10319
 36741              		.loc 1 17466 24 is_stmt 0 view .LVU10320
 36742 008a 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 36743              		.loc 1 17466 8 view .LVU10321
 36744 008e 28B9     		cbnz	r0, .L2585
 36745              	.LVL4538:
 36746              	.L2575:
ARM GAS  /tmp/ccO72alg.s 			page 1030


17467:Core/Src/bno055.c ****     {
17468:Core/Src/bno055.c ****         /* set the operation mode of
17469:Core/Src/bno055.c ****          * previous operation mode*/
17470:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17471:Core/Src/bno055.c ****     }
17472:Core/Src/bno055.c **** 
17473:Core/Src/bno055.c ****     return com_rslt;
17474:Core/Src/bno055.c **** }
 36747              		.loc 1 17474 1 view .LVU10322
 36748 0090 2046     		mov	r0, r4
 36749 0092 03B0     		add	sp, sp, #12
 36750              	.LCFI995:
 36751              		.cfi_remember_state
 36752              		.cfi_def_cfa_offset 12
 36753              		@ sp needed
 36754 0094 30BD     		pop	{r4, r5, pc}
 36755              	.LVL4539:
 36756              	.L2581:
 36757              	.LCFI996:
 36758              		.cfi_restore_state
17453:Core/Src/bno055.c ****                 }
 36759              		.loc 1 17453 30 view .LVU10323
 36760 0096 4FF0FF34 		mov	r4, #-1
 36761              	.LVL4540:
17453:Core/Src/bno055.c ****                 }
 36762              		.loc 1 17453 30 view .LVU10324
 36763 009a F6E7     		b	.L2576
 36764              	.LVL4541:
 36765              	.L2585:
17470:Core/Src/bno055.c ****     }
 36766              		.loc 1 17470 9 is_stmt 1 view .LVU10325
17470:Core/Src/bno055.c ****     }
 36767              		.loc 1 17470 21 is_stmt 0 view .LVU10326
 36768 009c FFF7FEFF 		bl	bno055_set_operation_mode
 36769              	.LVL4542:
17470:Core/Src/bno055.c ****     }
 36770              		.loc 1 17470 18 view .LVU10327
 36771 00a0 54FA80F4 		uxtab	r4, r4, r0
 36772              	.LVL4543:
17470:Core/Src/bno055.c ****     }
 36773              		.loc 1 17470 18 view .LVU10328
 36774 00a4 64B2     		sxtb	r4, r4
 36775              	.LVL4544:
17470:Core/Src/bno055.c ****     }
 36776              		.loc 1 17470 18 view .LVU10329
 36777 00a6 F3E7     		b	.L2575
 36778              	.LVL4545:
 36779              	.L2578:
17416:Core/Src/bno055.c ****     }
 36780              		.loc 1 17416 16 view .LVU10330
 36781 00a8 6FF07E04 		mvn	r4, #126
 36782 00ac F0E7     		b	.L2575
 36783              	.L2587:
 36784 00ae 00BF     		.align	2
 36785              	.L2586:
 36786 00b0 00000000 		.word	.LANCHOR0
 36787              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 1031


 36788              	.LFE250:
 36790              		.section	.text.bno055_get_gyro_highrate_x_thres,"ax",%progbits
 36791              		.align	1
 36792              		.global	bno055_get_gyro_highrate_x_thres
 36793              		.syntax unified
 36794              		.thumb
 36795              		.thumb_func
 36797              	bno055_get_gyro_highrate_x_thres:
 36798              	.LVL4546:
 36799              	.LFB251:
17475:Core/Src/bno055.c **** 
17476:Core/Src/bno055.c **** /*!
17477:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x threshold
17478:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17479:Core/Src/bno055.c ****  *
17480:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17481:Core/Src/bno055.c ****  *
17482:Core/Src/bno055.c ****  *  @return results of bus communication function
17483:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17484:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17485:Core/Src/bno055.c ****  *
17486:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17487:Core/Src/bno055.c ****  *  selection of gyro range
17488:Core/Src/bno055.c ****  *
17489:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17490:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17491:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17492:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17493:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17494:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17495:Core/Src/bno055.c ****  *
17496:Core/Src/bno055.c ****  */
17497:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_thres(u8 *gyro_highrate_x_thres_u8)
17498:Core/Src/bno055.c **** {
 36800              		.loc 1 17498 1 is_stmt 1 view -0
 36801              		.cfi_startproc
 36802              		@ args = 0, pretend = 0, frame = 8
 36803              		@ frame_needed = 0, uses_anonymous_args = 0
 36804              		.loc 1 17498 1 is_stmt 0 view .LVU10332
 36805 0000 30B5     		push	{r4, r5, lr}
 36806              	.LCFI997:
 36807              		.cfi_def_cfa_offset 12
 36808              		.cfi_offset 4, -12
 36809              		.cfi_offset 5, -8
 36810              		.cfi_offset 14, -4
 36811 0002 83B0     		sub	sp, sp, #12
 36812              	.LCFI998:
 36813              		.cfi_def_cfa_offset 24
17499:Core/Src/bno055.c ****     /* Variable used to return value of
17500:Core/Src/bno055.c ****      * communication routine*/
17501:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36814              		.loc 1 17501 5 is_stmt 1 view .LVU10333
 36815              	.LVL4547:
17502:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36816              		.loc 1 17502 5 view .LVU10334
 36817              		.loc 1 17502 8 is_stmt 0 view .LVU10335
 36818 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 1032


 36819 0006 8DF80730 		strb	r3, [sp, #7]
17503:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36820              		.loc 1 17503 5 is_stmt 1 view .LVU10336
 36821              	.LVL4548:
17504:Core/Src/bno055.c **** 
17505:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17506:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36822              		.loc 1 17506 5 view .LVU10337
 36823              		.loc 1 17506 18 is_stmt 0 view .LVU10338
 36824 000a 144B     		ldr	r3, .L2596
 36825 000c 1B68     		ldr	r3, [r3]
 36826              		.loc 1 17506 8 view .LVU10339
 36827 000e F3B1     		cbz	r3, .L2592
 36828 0010 0446     		mov	r4, r0
17507:Core/Src/bno055.c ****     {
17508:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17509:Core/Src/bno055.c ****     }
17510:Core/Src/bno055.c ****     else
17511:Core/Src/bno055.c ****     {
17512:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x threshold is
17513:Core/Src/bno055.c ****          * available in the page one*/
17514:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 36829              		.loc 1 17514 9 is_stmt 1 view .LVU10340
 36830              		.loc 1 17514 21 is_stmt 0 view .LVU10341
 36831 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36832              		.loc 1 17514 12 view .LVU10342
 36833 0014 012B     		cmp	r3, #1
 36834 0016 14D1     		bne	.L2595
 36835              	.LVL4549:
 36836              	.L2590:
17515:Core/Src/bno055.c ****         {
17516:Core/Src/bno055.c ****             /* Write page as one */
17517:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17518:Core/Src/bno055.c ****         }
17519:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 36837              		.loc 1 17519 53 discriminator 1 view .LVU10343
 36838 0018 104B     		ldr	r3, .L2596
 36839 001a 1B68     		ldr	r3, [r3]
 36840 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 36841              		.loc 1 17519 41 discriminator 1 view .LVU10344
 36842 001e 012B     		cmp	r3, #1
 36843 0020 18D1     		bne	.L2593
 36844              	.L2591:
17520:Core/Src/bno055.c ****         {
17521:Core/Src/bno055.c ****             /* Read the value of gyro highrate threshold*/
17522:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 36845              		.loc 1 17522 13 is_stmt 1 view .LVU10345
 36846              		.loc 1 17522 32 is_stmt 0 view .LVU10346
 36847 0022 0E4B     		ldr	r3, .L2596
 36848 0024 1868     		ldr	r0, [r3]
 36849 0026 0569     		ldr	r5, [r0, #16]
 36850              		.loc 1 17522 24 view .LVU10347
 36851 0028 0123     		movs	r3, #1
 36852 002a 0DF10702 		add	r2, sp, #7
 36853 002e 1821     		movs	r1, #24
 36854 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 36855 0032 A847     		blx	r5
ARM GAS  /tmp/ccO72alg.s 			page 1033


 36856              	.LVL4550:
17523:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_THRES_REG,
17524:Core/Src/bno055.c ****                                                       &data_u8r,
17525:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17526:Core/Src/bno055.c ****             *gyro_highrate_x_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES)
 36857              		.loc 1 17526 13 is_stmt 1 view .LVU10348
 36858              		.loc 1 17526 41 is_stmt 0 view .LVU10349
 36859 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 36860 0038 03F01F03 		and	r3, r3, #31
 36861              		.loc 1 17526 39 view .LVU10350
 36862 003c 2370     		strb	r3, [r4]
 36863              	.LVL4551:
 36864              	.L2589:
17527:Core/Src/bno055.c ****         }
17528:Core/Src/bno055.c ****         else
17529:Core/Src/bno055.c ****         {
17530:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17531:Core/Src/bno055.c ****         }
17532:Core/Src/bno055.c ****     }
17533:Core/Src/bno055.c **** 
17534:Core/Src/bno055.c ****     return com_rslt;
17535:Core/Src/bno055.c **** }
 36865              		.loc 1 17535 1 view .LVU10351
 36866 003e 03B0     		add	sp, sp, #12
 36867              	.LCFI999:
 36868              		.cfi_remember_state
 36869              		.cfi_def_cfa_offset 12
 36870              		@ sp needed
 36871 0040 30BD     		pop	{r4, r5, pc}
 36872              	.LVL4552:
 36873              	.L2595:
 36874              	.LCFI1000:
 36875              		.cfi_restore_state
17517:Core/Src/bno055.c ****         }
 36876              		.loc 1 17517 13 is_stmt 1 view .LVU10352
17517:Core/Src/bno055.c ****         }
 36877              		.loc 1 17517 23 is_stmt 0 view .LVU10353
 36878 0042 0120     		movs	r0, #1
 36879              	.LVL4553:
17517:Core/Src/bno055.c ****         }
 36880              		.loc 1 17517 23 view .LVU10354
 36881 0044 FFF7FEFF 		bl	bno055_write_page_id
 36882              	.LVL4554:
17519:Core/Src/bno055.c ****         {
 36883              		.loc 1 17519 9 is_stmt 1 view .LVU10355
17519:Core/Src/bno055.c ****         {
 36884              		.loc 1 17519 12 is_stmt 0 view .LVU10356
 36885 0048 0028     		cmp	r0, #0
 36886 004a EAD0     		beq	.L2591
 36887 004c E4E7     		b	.L2590
 36888              	.LVL4555:
 36889              	.L2592:
17508:Core/Src/bno055.c ****     }
 36890              		.loc 1 17508 16 view .LVU10357
 36891 004e 6FF07E00 		mvn	r0, #126
 36892              	.LVL4556:
17508:Core/Src/bno055.c ****     }
ARM GAS  /tmp/ccO72alg.s 			page 1034


 36893              		.loc 1 17508 16 view .LVU10358
 36894 0052 F4E7     		b	.L2589
 36895              	.LVL4557:
 36896              	.L2593:
17530:Core/Src/bno055.c ****         }
 36897              		.loc 1 17530 22 view .LVU10359
 36898 0054 4FF0FF30 		mov	r0, #-1
 36899 0058 F1E7     		b	.L2589
 36900              	.L2597:
 36901 005a 00BF     		.align	2
 36902              	.L2596:
 36903 005c 00000000 		.word	.LANCHOR0
 36904              		.cfi_endproc
 36905              	.LFE251:
 36907              		.section	.text.bno055_set_gyro_highrate_x_thres,"ax",%progbits
 36908              		.align	1
 36909              		.global	bno055_set_gyro_highrate_x_thres
 36910              		.syntax unified
 36911              		.thumb
 36912              		.thumb_func
 36914              	bno055_set_gyro_highrate_x_thres:
 36915              	.LVL4558:
 36916              	.LFB252:
17536:Core/Src/bno055.c **** 
17537:Core/Src/bno055.c **** /*!
17538:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x threshold
17539:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 0 to 4
17540:Core/Src/bno055.c ****  *
17541:Core/Src/bno055.c ****  *  @param gyro_highrate_x_thres_u8 : The value of gyro x highrate threshold
17542:Core/Src/bno055.c ****  *
17543:Core/Src/bno055.c ****  *  @return results of bus communication function
17544:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17545:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17546:Core/Src/bno055.c ****  *
17547:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17548:Core/Src/bno055.c ****  *  selection of gyro range
17549:Core/Src/bno055.c ****  *
17550:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17551:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17552:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17553:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17554:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17555:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17556:Core/Src/bno055.c ****  *
17557:Core/Src/bno055.c ****  */
17558:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_thres(u8 gyro_highrate_x_thres_u8)
17559:Core/Src/bno055.c **** {
 36917              		.loc 1 17559 1 is_stmt 1 view -0
 36918              		.cfi_startproc
 36919              		@ args = 0, pretend = 0, frame = 8
 36920              		@ frame_needed = 0, uses_anonymous_args = 0
 36921              		.loc 1 17559 1 is_stmt 0 view .LVU10361
 36922 0000 30B5     		push	{r4, r5, lr}
 36923              	.LCFI1001:
 36924              		.cfi_def_cfa_offset 12
 36925              		.cfi_offset 4, -12
 36926              		.cfi_offset 5, -8
ARM GAS  /tmp/ccO72alg.s 			page 1035


 36927              		.cfi_offset 14, -4
 36928 0002 83B0     		sub	sp, sp, #12
 36929              	.LCFI1002:
 36930              		.cfi_def_cfa_offset 24
17560:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 36931              		.loc 1 17560 5 is_stmt 1 view .LVU10362
 36932              	.LVL4559:
17561:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 36933              		.loc 1 17561 5 view .LVU10363
 36934              		.loc 1 17561 8 is_stmt 0 view .LVU10364
 36935 0004 0023     		movs	r3, #0
 36936 0006 8DF80730 		strb	r3, [sp, #7]
17562:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 36937              		.loc 1 17562 5 is_stmt 1 view .LVU10365
 36938              	.LVL4560:
17563:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 36939              		.loc 1 17563 5 view .LVU10366
 36940              		.loc 1 17563 8 is_stmt 0 view .LVU10367
 36941 000a 8DF80630 		strb	r3, [sp, #6]
17564:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 36942              		.loc 1 17564 5 is_stmt 1 view .LVU10368
 36943              	.LVL4561:
17565:Core/Src/bno055.c **** 
17566:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17567:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 36944              		.loc 1 17567 5 view .LVU10369
 36945              		.loc 1 17567 18 is_stmt 0 view .LVU10370
 36946 000e 294B     		ldr	r3, .L2610
 36947 0010 1B68     		ldr	r3, [r3]
 36948              		.loc 1 17567 8 view .LVU10371
 36949 0012 002B     		cmp	r3, #0
 36950 0014 4AD0     		beq	.L2602
 36951 0016 0546     		mov	r5, r0
17568:Core/Src/bno055.c ****     {
17569:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17570:Core/Src/bno055.c ****     }
17571:Core/Src/bno055.c ****     else
17572:Core/Src/bno055.c ****     {
17573:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17574:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17575:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17576:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 36952              		.loc 1 17576 9 is_stmt 1 view .LVU10372
 36953              		.loc 1 17576 19 is_stmt 0 view .LVU10373
 36954 0018 0DF10600 		add	r0, sp, #6
 36955              	.LVL4562:
 36956              		.loc 1 17576 19 view .LVU10374
 36957 001c FFF7FEFF 		bl	bno055_get_operation_mode
 36958              	.LVL4563:
17577:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 36959              		.loc 1 17577 9 is_stmt 1 view .LVU10375
 36960              		.loc 1 17577 12 is_stmt 0 view .LVU10376
 36961 0020 0446     		mov	r4, r0
 36962 0022 90BB     		cbnz	r0, .L2603
17578:Core/Src/bno055.c ****         {
17579:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 36963              		.loc 1 17579 13 is_stmt 1 view .LVU10377
ARM GAS  /tmp/ccO72alg.s 			page 1036


 36964              		.loc 1 17579 32 is_stmt 0 view .LVU10378
 36965 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 36966              		.loc 1 17579 16 view .LVU10379
 36967 0028 1BB9     		cbnz	r3, .L2607
 36968              	.LVL4564:
 36969              	.L2601:
17580:Core/Src/bno055.c ****             {
17581:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17582:Core/Src/bno055.c ****             }
17583:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 36970              		.loc 1 17583 13 is_stmt 1 view .LVU10380
 36971              		.loc 1 17583 16 is_stmt 0 view .LVU10381
 36972 002a 44B1     		cbz	r4, .L2608
17584:Core/Src/bno055.c ****             {
17585:Core/Src/bno055.c ****                 /* Write page as one */
17586:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17587:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17588:Core/Src/bno055.c ****                 {
17589:Core/Src/bno055.c ****                     /* Write the value of
17590:Core/Src/bno055.c ****                      * gyro highrate x threshold*/
17591:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17592:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
17593:Core/Src/bno055.c ****                                                               &data_u8r,
17594:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17595:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17596:Core/Src/bno055.c ****                     {
17597:Core/Src/bno055.c ****                         data_u8r =
17598:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
17599:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17600:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
17601:Core/Src/bno055.c ****                                                                     &data_u8r,
17602:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17603:Core/Src/bno055.c ****                     }
17604:Core/Src/bno055.c ****                 }
17605:Core/Src/bno055.c ****                 else
17606:Core/Src/bno055.c ****                 {
17607:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17608:Core/Src/bno055.c ****                 }
17609:Core/Src/bno055.c ****             }
17610:Core/Src/bno055.c ****             else
17611:Core/Src/bno055.c ****             {
17612:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 36973              		.loc 1 17612 26 view .LVU10382
 36974 002c 4FF0FF34 		mov	r4, #-1
 36975              	.LVL4565:
 36976              		.loc 1 17612 26 view .LVU10383
 36977 0030 2DE0     		b	.L2600
 36978              	.LVL4566:
 36979              	.L2607:
17581:Core/Src/bno055.c ****             }
 36980              		.loc 1 17581 17 is_stmt 1 view .LVU10384
17581:Core/Src/bno055.c ****             }
 36981              		.loc 1 17581 28 is_stmt 0 view .LVU10385
 36982 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 36983              	.LVL4567:
17581:Core/Src/bno055.c ****             }
 36984              		.loc 1 17581 25 view .LVU10386
ARM GAS  /tmp/ccO72alg.s 			page 1037


 36985 0036 54FA80F4 		uxtab	r4, r4, r0
 36986 003a 64B2     		sxtb	r4, r4
 36987              	.LVL4568:
17581:Core/Src/bno055.c ****             }
 36988              		.loc 1 17581 25 view .LVU10387
 36989 003c F5E7     		b	.L2601
 36990              	.L2608:
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36991              		.loc 1 17586 17 is_stmt 1 view .LVU10388
17586:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 36992              		.loc 1 17586 30 is_stmt 0 view .LVU10389
 36993 003e 0120     		movs	r0, #1
 36994 0040 FFF7FEFF 		bl	bno055_write_page_id
 36995              	.LVL4569:
17587:Core/Src/bno055.c ****                 {
 36996              		.loc 1 17587 17 is_stmt 1 view .LVU10390
17587:Core/Src/bno055.c ****                 {
 36997              		.loc 1 17587 20 is_stmt 0 view .LVU10391
 36998 0044 48BB     		cbnz	r0, .L2605
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 36999              		.loc 1 17591 21 is_stmt 1 view .LVU10392
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37000              		.loc 1 17591 40 is_stmt 0 view .LVU10393
 37001 0046 1B4B     		ldr	r3, .L2610
 37002 0048 1868     		ldr	r0, [r3]
 37003              	.LVL4570:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37004              		.loc 1 17591 40 view .LVU10394
 37005 004a 0469     		ldr	r4, [r0, #16]
 37006              	.LVL4571:
17591:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_THRES_REG,
 37007              		.loc 1 17591 32 view .LVU10395
 37008 004c 0123     		movs	r3, #1
 37009 004e 0DF10702 		add	r2, sp, #7
 37010 0052 1821     		movs	r1, #24
 37011 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37012 0056 A047     		blx	r4
 37013              	.LVL4572:
17595:Core/Src/bno055.c ****                     {
 37014              		.loc 1 17595 21 is_stmt 1 view .LVU10396
17595:Core/Src/bno055.c ****                     {
 37015              		.loc 1 17595 24 is_stmt 0 view .LVU10397
 37016 0058 0446     		mov	r4, r0
 37017 005a C0B9     		cbnz	r0, .L2600
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
 37018              		.loc 1 17597 25 is_stmt 1 view .LVU10398
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37019              		.loc 1 17598 29 is_stmt 0 view .LVU10399
 37020 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 37021              	.LVL4573:
17598:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37022              		.loc 1 17598 29 view .LVU10400
 37023 0060 20F01F00 		bic	r0, r0, #31
 37024 0064 43B2     		sxtb	r3, r0
 37025 0066 05F01F00 		and	r0, r5, #31
 37026 006a 1843     		orrs	r0, r0, r3
17597:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_THRES, gyro_highra
ARM GAS  /tmp/ccO72alg.s 			page 1038


 37027              		.loc 1 17597 34 view .LVU10401
 37028 006c 8DF80700 		strb	r0, [sp, #7]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37029              		.loc 1 17599 25 is_stmt 1 view .LVU10402
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37030              		.loc 1 17599 45 is_stmt 0 view .LVU10403
 37031 0070 104B     		ldr	r3, .L2610
 37032 0072 1868     		ldr	r0, [r3]
 37033 0074 C568     		ldr	r5, [r0, #12]
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37034              		.loc 1 17599 37 view .LVU10404
 37035 0076 0123     		movs	r3, #1
 37036 0078 0DF10702 		add	r2, sp, #7
 37037 007c 1821     		movs	r1, #24
 37038 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37039 0080 A847     		blx	r5
 37040              	.LVL4574:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37041              		.loc 1 17599 34 view .LVU10405
 37042 0082 54FA80F4 		uxtab	r4, r4, r0
 37043 0086 64B2     		sxtb	r4, r4
 37044              	.LVL4575:
17599:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_THRES_RE
 37045              		.loc 1 17599 34 view .LVU10406
 37046 0088 01E0     		b	.L2600
 37047              	.LVL4576:
 37048              	.L2603:
17613:Core/Src/bno055.c ****             }
17614:Core/Src/bno055.c ****         }
17615:Core/Src/bno055.c ****         else
17616:Core/Src/bno055.c ****         {
17617:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37049              		.loc 1 17617 22 view .LVU10407
 37050 008a 4FF0FF34 		mov	r4, #-1
 37051              	.LVL4577:
 37052              	.L2600:
17618:Core/Src/bno055.c ****         }
17619:Core/Src/bno055.c ****     }
17620:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37053              		.loc 1 17620 5 is_stmt 1 view .LVU10408
 37054              		.loc 1 17620 24 is_stmt 0 view .LVU10409
 37055 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37056              		.loc 1 17620 8 view .LVU10410
 37057 0092 28B9     		cbnz	r0, .L2609
 37058              	.LVL4578:
 37059              	.L2599:
17621:Core/Src/bno055.c ****     {
17622:Core/Src/bno055.c ****         /* set the operation mode of
17623:Core/Src/bno055.c ****          * previous operation mode*/
17624:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17625:Core/Src/bno055.c ****     }
17626:Core/Src/bno055.c **** 
17627:Core/Src/bno055.c ****     return com_rslt;
17628:Core/Src/bno055.c **** }
 37060              		.loc 1 17628 1 view .LVU10411
 37061 0094 2046     		mov	r0, r4
 37062 0096 03B0     		add	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 1039


 37063              	.LCFI1003:
 37064              		.cfi_remember_state
 37065              		.cfi_def_cfa_offset 12
 37066              		@ sp needed
 37067 0098 30BD     		pop	{r4, r5, pc}
 37068              	.LVL4579:
 37069              	.L2605:
 37070              	.LCFI1004:
 37071              		.cfi_restore_state
17607:Core/Src/bno055.c ****                 }
 37072              		.loc 1 17607 30 view .LVU10412
 37073 009a 4FF0FF34 		mov	r4, #-1
 37074              	.LVL4580:
17607:Core/Src/bno055.c ****                 }
 37075              		.loc 1 17607 30 view .LVU10413
 37076 009e F6E7     		b	.L2600
 37077              	.LVL4581:
 37078              	.L2609:
17624:Core/Src/bno055.c ****     }
 37079              		.loc 1 17624 9 is_stmt 1 view .LVU10414
17624:Core/Src/bno055.c ****     }
 37080              		.loc 1 17624 21 is_stmt 0 view .LVU10415
 37081 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 37082              	.LVL4582:
17624:Core/Src/bno055.c ****     }
 37083              		.loc 1 17624 18 view .LVU10416
 37084 00a4 54FA80F4 		uxtab	r4, r4, r0
 37085              	.LVL4583:
17624:Core/Src/bno055.c ****     }
 37086              		.loc 1 17624 18 view .LVU10417
 37087 00a8 64B2     		sxtb	r4, r4
 37088              	.LVL4584:
17624:Core/Src/bno055.c ****     }
 37089              		.loc 1 17624 18 view .LVU10418
 37090 00aa F3E7     		b	.L2599
 37091              	.LVL4585:
 37092              	.L2602:
17569:Core/Src/bno055.c ****     }
 37093              		.loc 1 17569 16 view .LVU10419
 37094 00ac 6FF07E04 		mvn	r4, #126
 37095 00b0 F0E7     		b	.L2599
 37096              	.L2611:
 37097 00b2 00BF     		.align	2
 37098              	.L2610:
 37099 00b4 00000000 		.word	.LANCHOR0
 37100              		.cfi_endproc
 37101              	.LFE252:
 37103              		.section	.text.bno055_get_gyro_highrate_x_hyst,"ax",%progbits
 37104              		.align	1
 37105              		.global	bno055_get_gyro_highrate_x_hyst
 37106              		.syntax unified
 37107              		.thumb
 37108              		.thumb_func
 37110              	bno055_get_gyro_highrate_x_hyst:
 37111              	.LVL4586:
 37112              	.LFB253:
17629:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 1040


17630:Core/Src/bno055.c **** /*!
17631:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x hysteresis
17632:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17633:Core/Src/bno055.c ****  *
17634:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17635:Core/Src/bno055.c ****  *
17636:Core/Src/bno055.c ****  *  @return results of bus communication function
17637:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17638:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17639:Core/Src/bno055.c ****  *
17640:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17641:Core/Src/bno055.c ****  *
17642:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17643:Core/Src/bno055.c ****  *
17644:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17645:Core/Src/bno055.c ****  *
17646:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17647:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17648:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17649:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17650:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17651:Core/Src/bno055.c ****  *
17652:Core/Src/bno055.c ****  */
17653:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_hyst(u8 *gyro_highrate_x_hyst_u8)
17654:Core/Src/bno055.c **** {
 37113              		.loc 1 17654 1 is_stmt 1 view -0
 37114              		.cfi_startproc
 37115              		@ args = 0, pretend = 0, frame = 8
 37116              		@ frame_needed = 0, uses_anonymous_args = 0
 37117              		.loc 1 17654 1 is_stmt 0 view .LVU10421
 37118 0000 30B5     		push	{r4, r5, lr}
 37119              	.LCFI1005:
 37120              		.cfi_def_cfa_offset 12
 37121              		.cfi_offset 4, -12
 37122              		.cfi_offset 5, -8
 37123              		.cfi_offset 14, -4
 37124 0002 83B0     		sub	sp, sp, #12
 37125              	.LCFI1006:
 37126              		.cfi_def_cfa_offset 24
17655:Core/Src/bno055.c ****     /* Variable used to return value of
17656:Core/Src/bno055.c ****      * communication routine*/
17657:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37127              		.loc 1 17657 5 is_stmt 1 view .LVU10422
 37128              	.LVL4587:
17658:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37129              		.loc 1 17658 5 view .LVU10423
 37130              		.loc 1 17658 8 is_stmt 0 view .LVU10424
 37131 0004 0023     		movs	r3, #0
 37132 0006 8DF80730 		strb	r3, [sp, #7]
17659:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37133              		.loc 1 17659 5 is_stmt 1 view .LVU10425
 37134              	.LVL4588:
17660:Core/Src/bno055.c **** 
17661:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17662:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37135              		.loc 1 17662 5 view .LVU10426
 37136              		.loc 1 17662 18 is_stmt 0 view .LVU10427
ARM GAS  /tmp/ccO72alg.s 			page 1041


 37137 000a 144B     		ldr	r3, .L2620
 37138 000c 1B68     		ldr	r3, [r3]
 37139              		.loc 1 17662 8 view .LVU10428
 37140 000e F3B1     		cbz	r3, .L2616
 37141 0010 0446     		mov	r4, r0
17663:Core/Src/bno055.c ****     {
17664:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17665:Core/Src/bno055.c ****     }
17666:Core/Src/bno055.c ****     else
17667:Core/Src/bno055.c ****     {
17668:Core/Src/bno055.c ****         /*condition check for page,gyro highrate x hysteresis is
17669:Core/Src/bno055.c ****          * available in the page one*/
17670:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37142              		.loc 1 17670 9 is_stmt 1 view .LVU10429
 37143              		.loc 1 17670 21 is_stmt 0 view .LVU10430
 37144 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37145              		.loc 1 17670 12 view .LVU10431
 37146 0014 012B     		cmp	r3, #1
 37147 0016 14D1     		bne	.L2619
 37148              	.LVL4589:
 37149              	.L2614:
17671:Core/Src/bno055.c ****         {
17672:Core/Src/bno055.c ****             /* Write page as one */
17673:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17674:Core/Src/bno055.c ****         }
17675:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37150              		.loc 1 17675 53 discriminator 1 view .LVU10432
 37151 0018 104B     		ldr	r3, .L2620
 37152 001a 1B68     		ldr	r3, [r3]
 37153 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37154              		.loc 1 17675 41 discriminator 1 view .LVU10433
 37155 001e 012B     		cmp	r3, #1
 37156 0020 18D1     		bne	.L2617
 37157              	.L2615:
17676:Core/Src/bno055.c ****         {
17677:Core/Src/bno055.c ****             /* Read the value of gyro highrate x hysteresis*/
17678:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37158              		.loc 1 17678 13 is_stmt 1 view .LVU10434
 37159              		.loc 1 17678 32 is_stmt 0 view .LVU10435
 37160 0022 0E4B     		ldr	r3, .L2620
 37161 0024 1868     		ldr	r0, [r3]
 37162 0026 0569     		ldr	r5, [r0, #16]
 37163              		.loc 1 17678 24 view .LVU10436
 37164 0028 0123     		movs	r3, #1
 37165 002a 0DF10702 		add	r2, sp, #7
 37166 002e 1821     		movs	r1, #24
 37167 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37168 0032 A847     		blx	r5
 37169              	.LVL4590:
17679:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_HYST_REG,
17680:Core/Src/bno055.c ****                                                       &data_u8r,
17681:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17682:Core/Src/bno055.c ****             *gyro_highrate_x_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST);
 37170              		.loc 1 17682 13 is_stmt 1 view .LVU10437
 37171              		.loc 1 17682 40 is_stmt 0 view .LVU10438
 37172 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37173 0038 C3F34113 		ubfx	r3, r3, #5, #2
ARM GAS  /tmp/ccO72alg.s 			page 1042


 37174              		.loc 1 17682 38 view .LVU10439
 37175 003c 2370     		strb	r3, [r4]
 37176              	.LVL4591:
 37177              	.L2613:
17683:Core/Src/bno055.c ****         }
17684:Core/Src/bno055.c ****         else
17685:Core/Src/bno055.c ****         {
17686:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17687:Core/Src/bno055.c ****         }
17688:Core/Src/bno055.c ****     }
17689:Core/Src/bno055.c **** 
17690:Core/Src/bno055.c ****     return com_rslt;
17691:Core/Src/bno055.c **** }
 37178              		.loc 1 17691 1 view .LVU10440
 37179 003e 03B0     		add	sp, sp, #12
 37180              	.LCFI1007:
 37181              		.cfi_remember_state
 37182              		.cfi_def_cfa_offset 12
 37183              		@ sp needed
 37184 0040 30BD     		pop	{r4, r5, pc}
 37185              	.LVL4592:
 37186              	.L2619:
 37187              	.LCFI1008:
 37188              		.cfi_restore_state
17673:Core/Src/bno055.c ****         }
 37189              		.loc 1 17673 13 is_stmt 1 view .LVU10441
17673:Core/Src/bno055.c ****         }
 37190              		.loc 1 17673 23 is_stmt 0 view .LVU10442
 37191 0042 0120     		movs	r0, #1
 37192              	.LVL4593:
17673:Core/Src/bno055.c ****         }
 37193              		.loc 1 17673 23 view .LVU10443
 37194 0044 FFF7FEFF 		bl	bno055_write_page_id
 37195              	.LVL4594:
17675:Core/Src/bno055.c ****         {
 37196              		.loc 1 17675 9 is_stmt 1 view .LVU10444
17675:Core/Src/bno055.c ****         {
 37197              		.loc 1 17675 12 is_stmt 0 view .LVU10445
 37198 0048 0028     		cmp	r0, #0
 37199 004a EAD0     		beq	.L2615
 37200 004c E4E7     		b	.L2614
 37201              	.LVL4595:
 37202              	.L2616:
17664:Core/Src/bno055.c ****     }
 37203              		.loc 1 17664 16 view .LVU10446
 37204 004e 6FF07E00 		mvn	r0, #126
 37205              	.LVL4596:
17664:Core/Src/bno055.c ****     }
 37206              		.loc 1 17664 16 view .LVU10447
 37207 0052 F4E7     		b	.L2613
 37208              	.LVL4597:
 37209              	.L2617:
17686:Core/Src/bno055.c ****         }
 37210              		.loc 1 17686 22 view .LVU10448
 37211 0054 4FF0FF30 		mov	r0, #-1
 37212 0058 F1E7     		b	.L2613
 37213              	.L2621:
ARM GAS  /tmp/ccO72alg.s 			page 1043


 37214 005a 00BF     		.align	2
 37215              	.L2620:
 37216 005c 00000000 		.word	.LANCHOR0
 37217              		.cfi_endproc
 37218              	.LFE253:
 37220              		.section	.text.bno055_set_gyro_highrate_x_hyst,"ax",%progbits
 37221              		.align	1
 37222              		.global	bno055_set_gyro_highrate_x_hyst
 37223              		.syntax unified
 37224              		.thumb
 37225              		.thumb_func
 37227              	bno055_set_gyro_highrate_x_hyst:
 37228              	.LVL4598:
 37229              	.LFB254:
17692:Core/Src/bno055.c **** 
17693:Core/Src/bno055.c **** /*!
17694:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x hysteresis
17695:Core/Src/bno055.c ****  *  from page one register from 0x18 bit 5 to 6
17696:Core/Src/bno055.c ****  *
17697:Core/Src/bno055.c ****  *  @param gyro_highrate_x_hyst_u8 : The value of gyro highrate x hysteresis
17698:Core/Src/bno055.c ****  *
17699:Core/Src/bno055.c ****  *  @return results of bus communication function
17700:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17701:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17702:Core/Src/bno055.c ****  *
17703:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
17704:Core/Src/bno055.c ****  *
17705:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_x_hyst_u8) *4 LSB
17706:Core/Src/bno055.c ****  *
17707:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
17708:Core/Src/bno055.c ****  *
17709:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
17710:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17711:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
17712:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
17713:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
17714:Core/Src/bno055.c ****  *
17715:Core/Src/bno055.c ****  */
17716:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_hyst(u8 gyro_highrate_x_hyst_u8)
17717:Core/Src/bno055.c **** {
 37230              		.loc 1 17717 1 is_stmt 1 view -0
 37231              		.cfi_startproc
 37232              		@ args = 0, pretend = 0, frame = 8
 37233              		@ frame_needed = 0, uses_anonymous_args = 0
 37234              		.loc 1 17717 1 is_stmt 0 view .LVU10450
 37235 0000 30B5     		push	{r4, r5, lr}
 37236              	.LCFI1009:
 37237              		.cfi_def_cfa_offset 12
 37238              		.cfi_offset 4, -12
 37239              		.cfi_offset 5, -8
 37240              		.cfi_offset 14, -4
 37241 0002 83B0     		sub	sp, sp, #12
 37242              	.LCFI1010:
 37243              		.cfi_def_cfa_offset 24
17718:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37244              		.loc 1 17718 5 is_stmt 1 view .LVU10451
 37245              	.LVL4599:
ARM GAS  /tmp/ccO72alg.s 			page 1044


17719:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37246              		.loc 1 17719 5 view .LVU10452
 37247              		.loc 1 17719 8 is_stmt 0 view .LVU10453
 37248 0004 0023     		movs	r3, #0
 37249 0006 8DF80730 		strb	r3, [sp, #7]
17720:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37250              		.loc 1 17720 5 is_stmt 1 view .LVU10454
 37251              	.LVL4600:
17721:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37252              		.loc 1 17721 5 view .LVU10455
 37253              		.loc 1 17721 8 is_stmt 0 view .LVU10456
 37254 000a 8DF80630 		strb	r3, [sp, #6]
17722:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37255              		.loc 1 17722 5 is_stmt 1 view .LVU10457
 37256              	.LVL4601:
17723:Core/Src/bno055.c **** 
17724:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17725:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37257              		.loc 1 17725 5 view .LVU10458
 37258              		.loc 1 17725 18 is_stmt 0 view .LVU10459
 37259 000e 2A4B     		ldr	r3, .L2634
 37260 0010 1B68     		ldr	r3, [r3]
 37261              		.loc 1 17725 8 view .LVU10460
 37262 0012 002B     		cmp	r3, #0
 37263 0014 4CD0     		beq	.L2626
 37264 0016 0546     		mov	r5, r0
17726:Core/Src/bno055.c ****     {
17727:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17728:Core/Src/bno055.c ****     }
17729:Core/Src/bno055.c ****     else
17730:Core/Src/bno055.c ****     {
17731:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17732:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17733:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17734:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37265              		.loc 1 17734 9 is_stmt 1 view .LVU10461
 37266              		.loc 1 17734 19 is_stmt 0 view .LVU10462
 37267 0018 0DF10600 		add	r0, sp, #6
 37268              	.LVL4602:
 37269              		.loc 1 17734 19 view .LVU10463
 37270 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37271              	.LVL4603:
17735:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37272              		.loc 1 17735 9 is_stmt 1 view .LVU10464
 37273              		.loc 1 17735 12 is_stmt 0 view .LVU10465
 37274 0020 0446     		mov	r4, r0
 37275 0022 0028     		cmp	r0, #0
 37276 0024 33D1     		bne	.L2627
17736:Core/Src/bno055.c ****         {
17737:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37277              		.loc 1 17737 13 is_stmt 1 view .LVU10466
 37278              		.loc 1 17737 32 is_stmt 0 view .LVU10467
 37279 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37280              		.loc 1 17737 16 view .LVU10468
 37281 002a 1BB9     		cbnz	r3, .L2631
 37282              	.LVL4604:
 37283              	.L2625:
ARM GAS  /tmp/ccO72alg.s 			page 1045


17738:Core/Src/bno055.c ****             {
17739:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17740:Core/Src/bno055.c ****             }
17741:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37284              		.loc 1 17741 13 is_stmt 1 view .LVU10469
 37285              		.loc 1 17741 16 is_stmt 0 view .LVU10470
 37286 002c 44B1     		cbz	r4, .L2632
17742:Core/Src/bno055.c ****             {
17743:Core/Src/bno055.c ****                 /* Write page as one */
17744:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17745:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17746:Core/Src/bno055.c ****                 {
17747:Core/Src/bno055.c ****                     /*Write the value of
17748:Core/Src/bno055.c ****                      * gyro highrate x hysteresis*/
17749:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17750:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
17751:Core/Src/bno055.c ****                                                               &data_u8r,
17752:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17753:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17754:Core/Src/bno055.c ****                     {
17755:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_HYST, gyro_
17756:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17757:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
17758:Core/Src/bno055.c ****                                                                     &data_u8r,
17759:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
17760:Core/Src/bno055.c ****                     }
17761:Core/Src/bno055.c ****                 }
17762:Core/Src/bno055.c ****                 else
17763:Core/Src/bno055.c ****                 {
17764:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17765:Core/Src/bno055.c ****                 }
17766:Core/Src/bno055.c ****             }
17767:Core/Src/bno055.c ****             else
17768:Core/Src/bno055.c ****             {
17769:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37287              		.loc 1 17769 26 view .LVU10471
 37288 002e 4FF0FF34 		mov	r4, #-1
 37289              	.LVL4605:
 37290              		.loc 1 17769 26 view .LVU10472
 37291 0032 2EE0     		b	.L2624
 37292              	.LVL4606:
 37293              	.L2631:
17739:Core/Src/bno055.c ****             }
 37294              		.loc 1 17739 17 is_stmt 1 view .LVU10473
17739:Core/Src/bno055.c ****             }
 37295              		.loc 1 17739 28 is_stmt 0 view .LVU10474
 37296 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 37297              	.LVL4607:
17739:Core/Src/bno055.c ****             }
 37298              		.loc 1 17739 25 view .LVU10475
 37299 0038 54FA80F4 		uxtab	r4, r4, r0
 37300 003c 64B2     		sxtb	r4, r4
 37301              	.LVL4608:
17739:Core/Src/bno055.c ****             }
 37302              		.loc 1 17739 25 view .LVU10476
 37303 003e F5E7     		b	.L2625
 37304              	.L2632:
ARM GAS  /tmp/ccO72alg.s 			page 1046


17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37305              		.loc 1 17744 17 is_stmt 1 view .LVU10477
17744:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37306              		.loc 1 17744 30 is_stmt 0 view .LVU10478
 37307 0040 0120     		movs	r0, #1
 37308 0042 FFF7FEFF 		bl	bno055_write_page_id
 37309              	.LVL4609:
17745:Core/Src/bno055.c ****                 {
 37310              		.loc 1 17745 17 is_stmt 1 view .LVU10479
17745:Core/Src/bno055.c ****                 {
 37311              		.loc 1 17745 20 is_stmt 0 view .LVU10480
 37312 0046 50BB     		cbnz	r0, .L2629
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37313              		.loc 1 17749 21 is_stmt 1 view .LVU10481
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37314              		.loc 1 17749 40 is_stmt 0 view .LVU10482
 37315 0048 1B4B     		ldr	r3, .L2634
 37316 004a 1868     		ldr	r0, [r3]
 37317              	.LVL4610:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37318              		.loc 1 17749 40 view .LVU10483
 37319 004c 0469     		ldr	r4, [r0, #16]
 37320              	.LVL4611:
17749:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_HYST_REG,
 37321              		.loc 1 17749 32 view .LVU10484
 37322 004e 0123     		movs	r3, #1
 37323 0050 0DF10702 		add	r2, sp, #7
 37324 0054 1821     		movs	r1, #24
 37325 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37326 0058 A047     		blx	r4
 37327              	.LVL4612:
17753:Core/Src/bno055.c ****                     {
 37328              		.loc 1 17753 21 is_stmt 1 view .LVU10485
17753:Core/Src/bno055.c ****                     {
 37329              		.loc 1 17753 24 is_stmt 0 view .LVU10486
 37330 005a 0446     		mov	r4, r0
 37331 005c C8B9     		cbnz	r0, .L2624
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37332              		.loc 1 17755 25 is_stmt 1 view .LVU10487
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37333              		.loc 1 17755 36 is_stmt 0 view .LVU10488
 37334 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 37335              	.LVL4613:
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37336              		.loc 1 17755 36 view .LVU10489
 37337 0062 20F06000 		bic	r0, r0, #96
 37338 0066 43B2     		sxtb	r3, r0
 37339 0068 6801     		lsls	r0, r5, #5
 37340 006a 00F06000 		and	r0, r0, #96
 37341 006e 1843     		orrs	r0, r0, r3
17755:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37342              		.loc 1 17755 34 view .LVU10490
 37343 0070 8DF80700 		strb	r0, [sp, #7]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37344              		.loc 1 17756 25 is_stmt 1 view .LVU10491
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37345              		.loc 1 17756 45 is_stmt 0 view .LVU10492
ARM GAS  /tmp/ccO72alg.s 			page 1047


 37346 0074 104B     		ldr	r3, .L2634
 37347 0076 1868     		ldr	r0, [r3]
 37348 0078 C568     		ldr	r5, [r0, #12]
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37349              		.loc 1 17756 37 view .LVU10493
 37350 007a 0123     		movs	r3, #1
 37351 007c 0DF10702 		add	r2, sp, #7
 37352 0080 1821     		movs	r1, #24
 37353 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37354 0084 A847     		blx	r5
 37355              	.LVL4614:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37356              		.loc 1 17756 34 view .LVU10494
 37357 0086 54FA80F4 		uxtab	r4, r4, r0
 37358 008a 64B2     		sxtb	r4, r4
 37359              	.LVL4615:
17756:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_HYST_REG
 37360              		.loc 1 17756 34 view .LVU10495
 37361 008c 01E0     		b	.L2624
 37362              	.LVL4616:
 37363              	.L2627:
17770:Core/Src/bno055.c ****             }
17771:Core/Src/bno055.c ****         }
17772:Core/Src/bno055.c ****         else
17773:Core/Src/bno055.c ****         {
17774:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37364              		.loc 1 17774 22 view .LVU10496
 37365 008e 4FF0FF34 		mov	r4, #-1
 37366              	.LVL4617:
 37367              	.L2624:
17775:Core/Src/bno055.c ****         }
17776:Core/Src/bno055.c ****     }
17777:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37368              		.loc 1 17777 5 is_stmt 1 view .LVU10497
 37369              		.loc 1 17777 24 is_stmt 0 view .LVU10498
 37370 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37371              		.loc 1 17777 8 view .LVU10499
 37372 0096 28B9     		cbnz	r0, .L2633
 37373              	.LVL4618:
 37374              	.L2623:
17778:Core/Src/bno055.c ****     {
17779:Core/Src/bno055.c ****         /* set the operation mode of
17780:Core/Src/bno055.c ****          * previous operation mode*/
17781:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17782:Core/Src/bno055.c ****     }
17783:Core/Src/bno055.c **** 
17784:Core/Src/bno055.c ****     return com_rslt;
17785:Core/Src/bno055.c **** }
 37375              		.loc 1 17785 1 view .LVU10500
 37376 0098 2046     		mov	r0, r4
 37377 009a 03B0     		add	sp, sp, #12
 37378              	.LCFI1011:
 37379              		.cfi_remember_state
 37380              		.cfi_def_cfa_offset 12
 37381              		@ sp needed
 37382 009c 30BD     		pop	{r4, r5, pc}
 37383              	.LVL4619:
ARM GAS  /tmp/ccO72alg.s 			page 1048


 37384              	.L2629:
 37385              	.LCFI1012:
 37386              		.cfi_restore_state
17764:Core/Src/bno055.c ****                 }
 37387              		.loc 1 17764 30 view .LVU10501
 37388 009e 4FF0FF34 		mov	r4, #-1
 37389              	.LVL4620:
17764:Core/Src/bno055.c ****                 }
 37390              		.loc 1 17764 30 view .LVU10502
 37391 00a2 F6E7     		b	.L2624
 37392              	.LVL4621:
 37393              	.L2633:
17781:Core/Src/bno055.c ****     }
 37394              		.loc 1 17781 9 is_stmt 1 view .LVU10503
17781:Core/Src/bno055.c ****     }
 37395              		.loc 1 17781 21 is_stmt 0 view .LVU10504
 37396 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 37397              	.LVL4622:
17781:Core/Src/bno055.c ****     }
 37398              		.loc 1 17781 18 view .LVU10505
 37399 00a8 54FA80F4 		uxtab	r4, r4, r0
 37400              	.LVL4623:
17781:Core/Src/bno055.c ****     }
 37401              		.loc 1 17781 18 view .LVU10506
 37402 00ac 64B2     		sxtb	r4, r4
 37403              	.LVL4624:
17781:Core/Src/bno055.c ****     }
 37404              		.loc 1 17781 18 view .LVU10507
 37405 00ae F3E7     		b	.L2623
 37406              	.LVL4625:
 37407              	.L2626:
17727:Core/Src/bno055.c ****     }
 37408              		.loc 1 17727 16 view .LVU10508
 37409 00b0 6FF07E04 		mvn	r4, #126
 37410 00b4 F0E7     		b	.L2623
 37411              	.L2635:
 37412 00b6 00BF     		.align	2
 37413              	.L2634:
 37414 00b8 00000000 		.word	.LANCHOR0
 37415              		.cfi_endproc
 37416              	.LFE254:
 37418              		.section	.text.bno055_get_gyro_highrate_x_durn,"ax",%progbits
 37419              		.align	1
 37420              		.global	bno055_get_gyro_highrate_x_durn
 37421              		.syntax unified
 37422              		.thumb
 37423              		.thumb_func
 37425              	bno055_get_gyro_highrate_x_durn:
 37426              	.LVL4626:
 37427              	.LFB255:
17786:Core/Src/bno055.c **** 
17787:Core/Src/bno055.c **** /*!
17788:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate x duration
17789:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17790:Core/Src/bno055.c ****  *
17791:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17792:Core/Src/bno055.c ****  *
ARM GAS  /tmp/ccO72alg.s 			page 1049


17793:Core/Src/bno055.c ****  *  @return results of bus communication function
17794:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17795:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17796:Core/Src/bno055.c ****  *
17797:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17798:Core/Src/bno055.c ****  *
17799:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17800:Core/Src/bno055.c ****  *
17801:Core/Src/bno055.c ****  */
17802:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_x_durn(u8 *gyro_highrate_x_durn_u8)
17803:Core/Src/bno055.c **** {
 37428              		.loc 1 17803 1 is_stmt 1 view -0
 37429              		.cfi_startproc
 37430              		@ args = 0, pretend = 0, frame = 8
 37431              		@ frame_needed = 0, uses_anonymous_args = 0
 37432              		.loc 1 17803 1 is_stmt 0 view .LVU10510
 37433 0000 70B5     		push	{r4, r5, r6, lr}
 37434              	.LCFI1013:
 37435              		.cfi_def_cfa_offset 16
 37436              		.cfi_offset 4, -16
 37437              		.cfi_offset 5, -12
 37438              		.cfi_offset 6, -8
 37439              		.cfi_offset 14, -4
 37440 0002 82B0     		sub	sp, sp, #8
 37441              	.LCFI1014:
 37442              		.cfi_def_cfa_offset 24
17804:Core/Src/bno055.c ****     /* Variable used to return value of
17805:Core/Src/bno055.c ****      * communication routine*/
17806:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37443              		.loc 1 17806 5 is_stmt 1 view .LVU10511
 37444              	.LVL4627:
17807:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37445              		.loc 1 17807 5 view .LVU10512
 37446              		.loc 1 17807 8 is_stmt 0 view .LVU10513
 37447 0004 0023     		movs	r3, #0
 37448 0006 8DF80730 		strb	r3, [sp, #7]
17808:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37449              		.loc 1 17808 5 is_stmt 1 view .LVU10514
 37450              	.LVL4628:
17809:Core/Src/bno055.c **** 
17810:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17811:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37451              		.loc 1 17811 5 view .LVU10515
 37452              		.loc 1 17811 18 is_stmt 0 view .LVU10516
 37453 000a 134B     		ldr	r3, .L2644
 37454 000c 1B68     		ldr	r3, [r3]
 37455              		.loc 1 17811 8 view .LVU10517
 37456 000e E3B1     		cbz	r3, .L2640
 37457 0010 0546     		mov	r5, r0
17812:Core/Src/bno055.c ****     {
17813:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17814:Core/Src/bno055.c ****     }
17815:Core/Src/bno055.c ****     else
17816:Core/Src/bno055.c ****     {
17817:Core/Src/bno055.c ****         /*condition check for page, gyro highrate x duration is
17818:Core/Src/bno055.c ****          * available in the page one*/
17819:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
ARM GAS  /tmp/ccO72alg.s 			page 1050


 37458              		.loc 1 17819 9 is_stmt 1 view .LVU10518
 37459              		.loc 1 17819 21 is_stmt 0 view .LVU10519
 37460 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37461              		.loc 1 17819 12 view .LVU10520
 37462 0014 012B     		cmp	r3, #1
 37463 0016 12D1     		bne	.L2643
 37464              	.LVL4629:
 37465              	.L2638:
17820:Core/Src/bno055.c ****         {
17821:Core/Src/bno055.c ****             /* Write page as one */
17822:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17823:Core/Src/bno055.c ****         }
17824:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37466              		.loc 1 17824 53 discriminator 1 view .LVU10521
 37467 0018 0F4B     		ldr	r3, .L2644
 37468 001a 1B68     		ldr	r3, [r3]
 37469 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37470              		.loc 1 17824 41 discriminator 1 view .LVU10522
 37471 001e 012B     		cmp	r3, #1
 37472 0020 16D1     		bne	.L2641
 37473              	.L2639:
17825:Core/Src/bno055.c ****         {
17826:Core/Src/bno055.c ****             /* Read the value of gyro highrate x duration*/
17827:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37474              		.loc 1 17827 13 is_stmt 1 view .LVU10523
 37475              		.loc 1 17827 32 is_stmt 0 view .LVU10524
 37476 0022 0D4B     		ldr	r3, .L2644
 37477 0024 1C68     		ldr	r4, [r3]
 37478 0026 2669     		ldr	r6, [r4, #16]
 37479              		.loc 1 17827 24 view .LVU10525
 37480 0028 0123     		movs	r3, #1
 37481 002a 0DF10702 		add	r2, sp, #7
 37482 002e 1921     		movs	r1, #25
 37483 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 37484 0032 B047     		blx	r6
 37485              	.LVL4630:
17828:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_X_DURN_REG,
17829:Core/Src/bno055.c ****                                                       &data_u8r,
17830:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17831:Core/Src/bno055.c ****             *gyro_highrate_x_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN);
 37486              		.loc 1 17831 13 is_stmt 1 view .LVU10526
 37487              		.loc 1 17831 38 is_stmt 0 view .LVU10527
 37488 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37489 0038 2B70     		strb	r3, [r5]
 37490              	.LVL4631:
 37491              	.L2637:
17832:Core/Src/bno055.c ****         }
17833:Core/Src/bno055.c ****         else
17834:Core/Src/bno055.c ****         {
17835:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17836:Core/Src/bno055.c ****         }
17837:Core/Src/bno055.c ****     }
17838:Core/Src/bno055.c **** 
17839:Core/Src/bno055.c ****     return com_rslt;
17840:Core/Src/bno055.c **** }
 37492              		.loc 1 17840 1 view .LVU10528
 37493 003a 02B0     		add	sp, sp, #8
ARM GAS  /tmp/ccO72alg.s 			page 1051


 37494              	.LCFI1015:
 37495              		.cfi_remember_state
 37496              		.cfi_def_cfa_offset 16
 37497              		@ sp needed
 37498 003c 70BD     		pop	{r4, r5, r6, pc}
 37499              	.LVL4632:
 37500              	.L2643:
 37501              	.LCFI1016:
 37502              		.cfi_restore_state
17822:Core/Src/bno055.c ****         }
 37503              		.loc 1 17822 13 is_stmt 1 view .LVU10529
17822:Core/Src/bno055.c ****         }
 37504              		.loc 1 17822 23 is_stmt 0 view .LVU10530
 37505 003e 0120     		movs	r0, #1
 37506              	.LVL4633:
17822:Core/Src/bno055.c ****         }
 37507              		.loc 1 17822 23 view .LVU10531
 37508 0040 FFF7FEFF 		bl	bno055_write_page_id
 37509              	.LVL4634:
17824:Core/Src/bno055.c ****         {
 37510              		.loc 1 17824 9 is_stmt 1 view .LVU10532
17824:Core/Src/bno055.c ****         {
 37511              		.loc 1 17824 12 is_stmt 0 view .LVU10533
 37512 0044 0028     		cmp	r0, #0
 37513 0046 ECD0     		beq	.L2639
 37514 0048 E6E7     		b	.L2638
 37515              	.LVL4635:
 37516              	.L2640:
17813:Core/Src/bno055.c ****     }
 37517              		.loc 1 17813 16 view .LVU10534
 37518 004a 6FF07E00 		mvn	r0, #126
 37519              	.LVL4636:
17813:Core/Src/bno055.c ****     }
 37520              		.loc 1 17813 16 view .LVU10535
 37521 004e F4E7     		b	.L2637
 37522              	.LVL4637:
 37523              	.L2641:
17835:Core/Src/bno055.c ****         }
 37524              		.loc 1 17835 22 view .LVU10536
 37525 0050 4FF0FF30 		mov	r0, #-1
 37526 0054 F1E7     		b	.L2637
 37527              	.L2645:
 37528 0056 00BF     		.align	2
 37529              	.L2644:
 37530 0058 00000000 		.word	.LANCHOR0
 37531              		.cfi_endproc
 37532              	.LFE255:
 37534              		.section	.text.bno055_set_gyro_highrate_x_durn,"ax",%progbits
 37535              		.align	1
 37536              		.global	bno055_set_gyro_highrate_x_durn
 37537              		.syntax unified
 37538              		.thumb
 37539              		.thumb_func
 37541              	bno055_set_gyro_highrate_x_durn:
 37542              	.LVL4638:
 37543              	.LFB256:
17841:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 1052


17842:Core/Src/bno055.c **** /*!
17843:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate x duration
17844:Core/Src/bno055.c ****  *  from page one register from 0x19 bit 0 to 7
17845:Core/Src/bno055.c ****  *
17846:Core/Src/bno055.c ****  *  @param gyro_highrate_x_durn_u8 : The value of gyro highrate x duration
17847:Core/Src/bno055.c ****  *
17848:Core/Src/bno055.c ****  *  @return results of bus communication function
17849:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17850:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17851:Core/Src/bno055.c ****  *
17852:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
17853:Core/Src/bno055.c ****  *
17854:Core/Src/bno055.c ****  *  (1 + gyro_highrate_x_durn_u8)*2.5ms
17855:Core/Src/bno055.c ****  */
17856:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_x_durn(u8 gyro_highrate_x_durn_u8)
17857:Core/Src/bno055.c **** {
 37544              		.loc 1 17857 1 is_stmt 1 view -0
 37545              		.cfi_startproc
 37546              		@ args = 0, pretend = 0, frame = 8
 37547              		@ frame_needed = 0, uses_anonymous_args = 0
 37548              		.loc 1 17857 1 is_stmt 0 view .LVU10538
 37549 0000 30B5     		push	{r4, r5, lr}
 37550              	.LCFI1017:
 37551              		.cfi_def_cfa_offset 12
 37552              		.cfi_offset 4, -12
 37553              		.cfi_offset 5, -8
 37554              		.cfi_offset 14, -4
 37555 0002 83B0     		sub	sp, sp, #12
 37556              	.LCFI1018:
 37557              		.cfi_def_cfa_offset 24
17858:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37558              		.loc 1 17858 5 is_stmt 1 view .LVU10539
 37559              	.LVL4639:
17859:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37560              		.loc 1 17859 5 view .LVU10540
 37561              		.loc 1 17859 8 is_stmt 0 view .LVU10541
 37562 0004 0023     		movs	r3, #0
 37563 0006 8DF80730 		strb	r3, [sp, #7]
17860:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37564              		.loc 1 17860 5 is_stmt 1 view .LVU10542
 37565              	.LVL4640:
17861:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37566              		.loc 1 17861 5 view .LVU10543
 37567              		.loc 1 17861 8 is_stmt 0 view .LVU10544
 37568 000a 8DF80630 		strb	r3, [sp, #6]
17862:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37569              		.loc 1 17862 5 is_stmt 1 view .LVU10545
 37570              	.LVL4641:
17863:Core/Src/bno055.c **** 
17864:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17865:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37571              		.loc 1 17865 5 view .LVU10546
 37572              		.loc 1 17865 18 is_stmt 0 view .LVU10547
 37573 000e 254B     		ldr	r3, .L2658
 37574 0010 1B68     		ldr	r3, [r3]
 37575              		.loc 1 17865 8 view .LVU10548
 37576 0012 002B     		cmp	r3, #0
ARM GAS  /tmp/ccO72alg.s 			page 1053


 37577 0014 42D0     		beq	.L2650
 37578 0016 0546     		mov	r5, r0
17866:Core/Src/bno055.c ****     {
17867:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17868:Core/Src/bno055.c ****     }
17869:Core/Src/bno055.c ****     else
17870:Core/Src/bno055.c ****     {
17871:Core/Src/bno055.c ****         /* The write operation effective only if the operation
17872:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
17873:Core/Src/bno055.c ****          * current operation mode and set the config mode */
17874:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37579              		.loc 1 17874 9 is_stmt 1 view .LVU10549
 37580              		.loc 1 17874 19 is_stmt 0 view .LVU10550
 37581 0018 0DF10600 		add	r0, sp, #6
 37582              	.LVL4642:
 37583              		.loc 1 17874 19 view .LVU10551
 37584 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37585              	.LVL4643:
17875:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 37586              		.loc 1 17875 9 is_stmt 1 view .LVU10552
 37587              		.loc 1 17875 12 is_stmt 0 view .LVU10553
 37588 0020 0446     		mov	r4, r0
 37589 0022 50BB     		cbnz	r0, .L2651
17876:Core/Src/bno055.c ****         {
17877:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37590              		.loc 1 17877 13 is_stmt 1 view .LVU10554
 37591              		.loc 1 17877 32 is_stmt 0 view .LVU10555
 37592 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37593              		.loc 1 17877 16 view .LVU10556
 37594 0028 1BB9     		cbnz	r3, .L2655
 37595              	.LVL4644:
 37596              	.L2649:
17878:Core/Src/bno055.c ****             {
17879:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
17880:Core/Src/bno055.c ****             }
17881:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37597              		.loc 1 17881 13 is_stmt 1 view .LVU10557
 37598              		.loc 1 17881 16 is_stmt 0 view .LVU10558
 37599 002a 44B1     		cbz	r4, .L2656
17882:Core/Src/bno055.c ****             {
17883:Core/Src/bno055.c ****                 /* Write page as one */
17884:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17885:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
17886:Core/Src/bno055.c ****                 {
17887:Core/Src/bno055.c ****                     /* Write the value
17888:Core/Src/bno055.c ****                      * of gyro highrate x duration*/
17889:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
17890:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
17891:Core/Src/bno055.c ****                                                               &data_u8r,
17892:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
17893:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
17894:Core/Src/bno055.c ****                     {
17895:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_X_DURN, gyro_
17896:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
17897:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
17898:Core/Src/bno055.c ****                                                                     &data_u8r,
17899:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 1054


17900:Core/Src/bno055.c ****                     }
17901:Core/Src/bno055.c ****                 }
17902:Core/Src/bno055.c ****                 else
17903:Core/Src/bno055.c ****                 {
17904:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
17905:Core/Src/bno055.c ****                 }
17906:Core/Src/bno055.c ****             }
17907:Core/Src/bno055.c ****             else
17908:Core/Src/bno055.c ****             {
17909:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37600              		.loc 1 17909 26 view .LVU10559
 37601 002c 4FF0FF34 		mov	r4, #-1
 37602              	.LVL4645:
 37603              		.loc 1 17909 26 view .LVU10560
 37604 0030 25E0     		b	.L2648
 37605              	.LVL4646:
 37606              	.L2655:
17879:Core/Src/bno055.c ****             }
 37607              		.loc 1 17879 17 is_stmt 1 view .LVU10561
17879:Core/Src/bno055.c ****             }
 37608              		.loc 1 17879 28 is_stmt 0 view .LVU10562
 37609 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37610              	.LVL4647:
17879:Core/Src/bno055.c ****             }
 37611              		.loc 1 17879 25 view .LVU10563
 37612 0036 54FA80F4 		uxtab	r4, r4, r0
 37613 003a 64B2     		sxtb	r4, r4
 37614              	.LVL4648:
17879:Core/Src/bno055.c ****             }
 37615              		.loc 1 17879 25 view .LVU10564
 37616 003c F5E7     		b	.L2649
 37617              	.L2656:
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37618              		.loc 1 17884 17 is_stmt 1 view .LVU10565
17884:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37619              		.loc 1 17884 30 is_stmt 0 view .LVU10566
 37620 003e 0120     		movs	r0, #1
 37621 0040 FFF7FEFF 		bl	bno055_write_page_id
 37622              	.LVL4649:
17885:Core/Src/bno055.c ****                 {
 37623              		.loc 1 17885 17 is_stmt 1 view .LVU10567
17885:Core/Src/bno055.c ****                 {
 37624              		.loc 1 17885 20 is_stmt 0 view .LVU10568
 37625 0044 08BB     		cbnz	r0, .L2653
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37626              		.loc 1 17889 21 is_stmt 1 view .LVU10569
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37627              		.loc 1 17889 40 is_stmt 0 view .LVU10570
 37628 0046 174B     		ldr	r3, .L2658
 37629 0048 1868     		ldr	r0, [r3]
 37630              	.LVL4650:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37631              		.loc 1 17889 40 view .LVU10571
 37632 004a 0469     		ldr	r4, [r0, #16]
 37633              	.LVL4651:
17889:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_X_DURN_REG,
 37634              		.loc 1 17889 32 view .LVU10572
ARM GAS  /tmp/ccO72alg.s 			page 1055


 37635 004c 0123     		movs	r3, #1
 37636 004e 0DF10702 		add	r2, sp, #7
 37637 0052 1921     		movs	r1, #25
 37638 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37639 0056 A047     		blx	r4
 37640              	.LVL4652:
17893:Core/Src/bno055.c ****                     {
 37641              		.loc 1 17893 21 is_stmt 1 view .LVU10573
17893:Core/Src/bno055.c ****                     {
 37642              		.loc 1 17893 24 is_stmt 0 view .LVU10574
 37643 0058 0446     		mov	r4, r0
 37644 005a 80B9     		cbnz	r0, .L2648
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37645              		.loc 1 17895 25 is_stmt 1 view .LVU10575
17895:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37646              		.loc 1 17895 34 is_stmt 0 view .LVU10576
 37647 005c 8DF80750 		strb	r5, [sp, #7]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37648              		.loc 1 17896 25 is_stmt 1 view .LVU10577
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37649              		.loc 1 17896 45 is_stmt 0 view .LVU10578
 37650 0060 104B     		ldr	r3, .L2658
 37651 0062 1868     		ldr	r0, [r3]
 37652              	.LVL4653:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37653              		.loc 1 17896 45 view .LVU10579
 37654 0064 C568     		ldr	r5, [r0, #12]
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37655              		.loc 1 17896 37 view .LVU10580
 37656 0066 0123     		movs	r3, #1
 37657 0068 0DF10702 		add	r2, sp, #7
 37658 006c 1921     		movs	r1, #25
 37659 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37660 0070 A847     		blx	r5
 37661              	.LVL4654:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37662              		.loc 1 17896 34 view .LVU10581
 37663 0072 54FA80F4 		uxtab	r4, r4, r0
 37664 0076 64B2     		sxtb	r4, r4
 37665              	.LVL4655:
17896:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_X_DURN_REG
 37666              		.loc 1 17896 34 view .LVU10582
 37667 0078 01E0     		b	.L2648
 37668              	.LVL4656:
 37669              	.L2651:
17910:Core/Src/bno055.c ****             }
17911:Core/Src/bno055.c ****         }
17912:Core/Src/bno055.c ****         else
17913:Core/Src/bno055.c ****         {
17914:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37670              		.loc 1 17914 22 view .LVU10583
 37671 007a 4FF0FF34 		mov	r4, #-1
 37672              	.LVL4657:
 37673              	.L2648:
17915:Core/Src/bno055.c ****         }
17916:Core/Src/bno055.c ****     }
17917:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
ARM GAS  /tmp/ccO72alg.s 			page 1056


 37674              		.loc 1 17917 5 is_stmt 1 view .LVU10584
 37675              		.loc 1 17917 24 is_stmt 0 view .LVU10585
 37676 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37677              		.loc 1 17917 8 view .LVU10586
 37678 0082 28B9     		cbnz	r0, .L2657
 37679              	.LVL4658:
 37680              	.L2647:
17918:Core/Src/bno055.c ****     {
17919:Core/Src/bno055.c ****         /* set the operation mode of
17920:Core/Src/bno055.c ****          * previous operation mode*/
17921:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
17922:Core/Src/bno055.c ****     }
17923:Core/Src/bno055.c **** 
17924:Core/Src/bno055.c ****     return com_rslt;
17925:Core/Src/bno055.c **** }
 37681              		.loc 1 17925 1 view .LVU10587
 37682 0084 2046     		mov	r0, r4
 37683 0086 03B0     		add	sp, sp, #12
 37684              	.LCFI1019:
 37685              		.cfi_remember_state
 37686              		.cfi_def_cfa_offset 12
 37687              		@ sp needed
 37688 0088 30BD     		pop	{r4, r5, pc}
 37689              	.LVL4659:
 37690              	.L2653:
 37691              	.LCFI1020:
 37692              		.cfi_restore_state
17904:Core/Src/bno055.c ****                 }
 37693              		.loc 1 17904 30 view .LVU10588
 37694 008a 4FF0FF34 		mov	r4, #-1
 37695              	.LVL4660:
17904:Core/Src/bno055.c ****                 }
 37696              		.loc 1 17904 30 view .LVU10589
 37697 008e F6E7     		b	.L2648
 37698              	.LVL4661:
 37699              	.L2657:
17921:Core/Src/bno055.c ****     }
 37700              		.loc 1 17921 9 is_stmt 1 view .LVU10590
17921:Core/Src/bno055.c ****     }
 37701              		.loc 1 17921 21 is_stmt 0 view .LVU10591
 37702 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 37703              	.LVL4662:
17921:Core/Src/bno055.c ****     }
 37704              		.loc 1 17921 18 view .LVU10592
 37705 0094 54FA80F4 		uxtab	r4, r4, r0
 37706              	.LVL4663:
17921:Core/Src/bno055.c ****     }
 37707              		.loc 1 17921 18 view .LVU10593
 37708 0098 64B2     		sxtb	r4, r4
 37709              	.LVL4664:
17921:Core/Src/bno055.c ****     }
 37710              		.loc 1 17921 18 view .LVU10594
 37711 009a F3E7     		b	.L2647
 37712              	.LVL4665:
 37713              	.L2650:
17867:Core/Src/bno055.c ****     }
 37714              		.loc 1 17867 16 view .LVU10595
ARM GAS  /tmp/ccO72alg.s 			page 1057


 37715 009c 6FF07E04 		mvn	r4, #126
 37716 00a0 F0E7     		b	.L2647
 37717              	.L2659:
 37718 00a2 00BF     		.align	2
 37719              	.L2658:
 37720 00a4 00000000 		.word	.LANCHOR0
 37721              		.cfi_endproc
 37722              	.LFE256:
 37724              		.section	.text.bno055_get_gyro_highrate_y_thres,"ax",%progbits
 37725              		.align	1
 37726              		.global	bno055_get_gyro_highrate_y_thres
 37727              		.syntax unified
 37728              		.thumb
 37729              		.thumb_func
 37731              	bno055_get_gyro_highrate_y_thres:
 37732              	.LVL4666:
 37733              	.LFB257:
17926:Core/Src/bno055.c **** 
17927:Core/Src/bno055.c **** /*!
17928:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y threshold
17929:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17930:Core/Src/bno055.c ****  *
17931:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17932:Core/Src/bno055.c ****  *
17933:Core/Src/bno055.c ****  *  @return results of bus communication function
17934:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17935:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17936:Core/Src/bno055.c ****  *
17937:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17938:Core/Src/bno055.c ****  *  selection of gyro range
17939:Core/Src/bno055.c ****  *
17940:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
17941:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
17942:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
17943:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
17944:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
17945:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
17946:Core/Src/bno055.c ****  *
17947:Core/Src/bno055.c ****  */
17948:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_thres(u8 *gyro_highrate_y_thres_u8)
17949:Core/Src/bno055.c **** {
 37734              		.loc 1 17949 1 is_stmt 1 view -0
 37735              		.cfi_startproc
 37736              		@ args = 0, pretend = 0, frame = 8
 37737              		@ frame_needed = 0, uses_anonymous_args = 0
 37738              		.loc 1 17949 1 is_stmt 0 view .LVU10597
 37739 0000 30B5     		push	{r4, r5, lr}
 37740              	.LCFI1021:
 37741              		.cfi_def_cfa_offset 12
 37742              		.cfi_offset 4, -12
 37743              		.cfi_offset 5, -8
 37744              		.cfi_offset 14, -4
 37745 0002 83B0     		sub	sp, sp, #12
 37746              	.LCFI1022:
 37747              		.cfi_def_cfa_offset 24
17950:Core/Src/bno055.c ****     /* Variable used to return value of
17951:Core/Src/bno055.c ****      * communication routine*/
ARM GAS  /tmp/ccO72alg.s 			page 1058


17952:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37748              		.loc 1 17952 5 is_stmt 1 view .LVU10598
 37749              	.LVL4667:
17953:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37750              		.loc 1 17953 5 view .LVU10599
 37751              		.loc 1 17953 8 is_stmt 0 view .LVU10600
 37752 0004 0023     		movs	r3, #0
 37753 0006 8DF80730 		strb	r3, [sp, #7]
17954:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37754              		.loc 1 17954 5 is_stmt 1 view .LVU10601
 37755              	.LVL4668:
17955:Core/Src/bno055.c **** 
17956:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
17957:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37756              		.loc 1 17957 5 view .LVU10602
 37757              		.loc 1 17957 18 is_stmt 0 view .LVU10603
 37758 000a 144B     		ldr	r3, .L2668
 37759 000c 1B68     		ldr	r3, [r3]
 37760              		.loc 1 17957 8 view .LVU10604
 37761 000e F3B1     		cbz	r3, .L2664
 37762 0010 0446     		mov	r4, r0
17958:Core/Src/bno055.c ****     {
17959:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
17960:Core/Src/bno055.c ****     }
17961:Core/Src/bno055.c ****     else
17962:Core/Src/bno055.c ****     {
17963:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y threshold is
17964:Core/Src/bno055.c ****          * available in the page one*/
17965:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 37763              		.loc 1 17965 9 is_stmt 1 view .LVU10605
 37764              		.loc 1 17965 21 is_stmt 0 view .LVU10606
 37765 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37766              		.loc 1 17965 12 view .LVU10607
 37767 0014 012B     		cmp	r3, #1
 37768 0016 14D1     		bne	.L2667
 37769              	.LVL4669:
 37770              	.L2662:
17966:Core/Src/bno055.c ****         {
17967:Core/Src/bno055.c ****             /* Write page as one */
17968:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
17969:Core/Src/bno055.c ****         }
17970:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 37771              		.loc 1 17970 53 discriminator 1 view .LVU10608
 37772 0018 104B     		ldr	r3, .L2668
 37773 001a 1B68     		ldr	r3, [r3]
 37774 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 37775              		.loc 1 17970 41 discriminator 1 view .LVU10609
 37776 001e 012B     		cmp	r3, #1
 37777 0020 18D1     		bne	.L2665
 37778              	.L2663:
17971:Core/Src/bno055.c ****         {
17972:Core/Src/bno055.c ****             /* Read the value of gyro highrate y threshold*/
17973:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 37779              		.loc 1 17973 13 is_stmt 1 view .LVU10610
 37780              		.loc 1 17973 32 is_stmt 0 view .LVU10611
 37781 0022 0E4B     		ldr	r3, .L2668
 37782 0024 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 1059


 37783 0026 0569     		ldr	r5, [r0, #16]
 37784              		.loc 1 17973 24 view .LVU10612
 37785 0028 0123     		movs	r3, #1
 37786 002a 0DF10702 		add	r2, sp, #7
 37787 002e 1A21     		movs	r1, #26
 37788 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37789 0032 A847     		blx	r5
 37790              	.LVL4670:
17974:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_THRES_REG,
17975:Core/Src/bno055.c ****                                                       &data_u8r,
17976:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
17977:Core/Src/bno055.c ****             *gyro_highrate_y_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES)
 37791              		.loc 1 17977 13 is_stmt 1 view .LVU10613
 37792              		.loc 1 17977 41 is_stmt 0 view .LVU10614
 37793 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 37794 0038 03F01F03 		and	r3, r3, #31
 37795              		.loc 1 17977 39 view .LVU10615
 37796 003c 2370     		strb	r3, [r4]
 37797              	.LVL4671:
 37798              	.L2661:
17978:Core/Src/bno055.c ****         }
17979:Core/Src/bno055.c ****         else
17980:Core/Src/bno055.c ****         {
17981:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
17982:Core/Src/bno055.c ****         }
17983:Core/Src/bno055.c ****     }
17984:Core/Src/bno055.c **** 
17985:Core/Src/bno055.c ****     return com_rslt;
17986:Core/Src/bno055.c **** }
 37799              		.loc 1 17986 1 view .LVU10616
 37800 003e 03B0     		add	sp, sp, #12
 37801              	.LCFI1023:
 37802              		.cfi_remember_state
 37803              		.cfi_def_cfa_offset 12
 37804              		@ sp needed
 37805 0040 30BD     		pop	{r4, r5, pc}
 37806              	.LVL4672:
 37807              	.L2667:
 37808              	.LCFI1024:
 37809              		.cfi_restore_state
17968:Core/Src/bno055.c ****         }
 37810              		.loc 1 17968 13 is_stmt 1 view .LVU10617
17968:Core/Src/bno055.c ****         }
 37811              		.loc 1 17968 23 is_stmt 0 view .LVU10618
 37812 0042 0120     		movs	r0, #1
 37813              	.LVL4673:
17968:Core/Src/bno055.c ****         }
 37814              		.loc 1 17968 23 view .LVU10619
 37815 0044 FFF7FEFF 		bl	bno055_write_page_id
 37816              	.LVL4674:
17970:Core/Src/bno055.c ****         {
 37817              		.loc 1 17970 9 is_stmt 1 view .LVU10620
17970:Core/Src/bno055.c ****         {
 37818              		.loc 1 17970 12 is_stmt 0 view .LVU10621
 37819 0048 0028     		cmp	r0, #0
 37820 004a EAD0     		beq	.L2663
 37821 004c E4E7     		b	.L2662
ARM GAS  /tmp/ccO72alg.s 			page 1060


 37822              	.LVL4675:
 37823              	.L2664:
17959:Core/Src/bno055.c ****     }
 37824              		.loc 1 17959 16 view .LVU10622
 37825 004e 6FF07E00 		mvn	r0, #126
 37826              	.LVL4676:
17959:Core/Src/bno055.c ****     }
 37827              		.loc 1 17959 16 view .LVU10623
 37828 0052 F4E7     		b	.L2661
 37829              	.LVL4677:
 37830              	.L2665:
17981:Core/Src/bno055.c ****         }
 37831              		.loc 1 17981 22 view .LVU10624
 37832 0054 4FF0FF30 		mov	r0, #-1
 37833 0058 F1E7     		b	.L2661
 37834              	.L2669:
 37835 005a 00BF     		.align	2
 37836              	.L2668:
 37837 005c 00000000 		.word	.LANCHOR0
 37838              		.cfi_endproc
 37839              	.LFE257:
 37841              		.section	.text.bno055_set_gyro_highrate_y_thres,"ax",%progbits
 37842              		.align	1
 37843              		.global	bno055_set_gyro_highrate_y_thres
 37844              		.syntax unified
 37845              		.thumb
 37846              		.thumb_func
 37848              	bno055_set_gyro_highrate_y_thres:
 37849              	.LVL4678:
 37850              	.LFB258:
17987:Core/Src/bno055.c **** 
17988:Core/Src/bno055.c **** /*!
17989:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y threshold
17990:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 0 to 4
17991:Core/Src/bno055.c ****  *
17992:Core/Src/bno055.c ****  *  @param gyro_highrate_y_thres_u8 : The value of gyro highrate y threshold
17993:Core/Src/bno055.c ****  *
17994:Core/Src/bno055.c ****  *  @return results of bus communication function
17995:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
17996:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
17997:Core/Src/bno055.c ****  *
17998:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
17999:Core/Src/bno055.c ****  *  selection of gyro range
18000:Core/Src/bno055.c ****  *
18001:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18002:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18003:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18004:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18005:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18006:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18007:Core/Src/bno055.c ****  *
18008:Core/Src/bno055.c ****  */
18009:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_thres(u8 gyro_highrate_y_thres_u8)
18010:Core/Src/bno055.c **** {
 37851              		.loc 1 18010 1 is_stmt 1 view -0
 37852              		.cfi_startproc
 37853              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccO72alg.s 			page 1061


 37854              		@ frame_needed = 0, uses_anonymous_args = 0
 37855              		.loc 1 18010 1 is_stmt 0 view .LVU10626
 37856 0000 30B5     		push	{r4, r5, lr}
 37857              	.LCFI1025:
 37858              		.cfi_def_cfa_offset 12
 37859              		.cfi_offset 4, -12
 37860              		.cfi_offset 5, -8
 37861              		.cfi_offset 14, -4
 37862 0002 83B0     		sub	sp, sp, #12
 37863              	.LCFI1026:
 37864              		.cfi_def_cfa_offset 24
18011:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 37865              		.loc 1 18011 5 is_stmt 1 view .LVU10627
 37866              	.LVL4679:
18012:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 37867              		.loc 1 18012 5 view .LVU10628
 37868              		.loc 1 18012 8 is_stmt 0 view .LVU10629
 37869 0004 0023     		movs	r3, #0
 37870 0006 8DF80730 		strb	r3, [sp, #7]
18013:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 37871              		.loc 1 18013 5 is_stmt 1 view .LVU10630
 37872              	.LVL4680:
18014:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 37873              		.loc 1 18014 5 view .LVU10631
 37874              		.loc 1 18014 8 is_stmt 0 view .LVU10632
 37875 000a 8DF80630 		strb	r3, [sp, #6]
18015:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 37876              		.loc 1 18015 5 is_stmt 1 view .LVU10633
 37877              	.LVL4681:
18016:Core/Src/bno055.c **** 
18017:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18018:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 37878              		.loc 1 18018 5 view .LVU10634
 37879              		.loc 1 18018 18 is_stmt 0 view .LVU10635
 37880 000e 294B     		ldr	r3, .L2682
 37881 0010 1B68     		ldr	r3, [r3]
 37882              		.loc 1 18018 8 view .LVU10636
 37883 0012 002B     		cmp	r3, #0
 37884 0014 4AD0     		beq	.L2674
 37885 0016 0546     		mov	r5, r0
18019:Core/Src/bno055.c ****     {
18020:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18021:Core/Src/bno055.c ****     }
18022:Core/Src/bno055.c ****     else
18023:Core/Src/bno055.c ****     {
18024:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18025:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18026:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18027:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 37886              		.loc 1 18027 9 is_stmt 1 view .LVU10637
 37887              		.loc 1 18027 19 is_stmt 0 view .LVU10638
 37888 0018 0DF10600 		add	r0, sp, #6
 37889              	.LVL4682:
 37890              		.loc 1 18027 19 view .LVU10639
 37891 001c FFF7FEFF 		bl	bno055_get_operation_mode
 37892              	.LVL4683:
18028:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
ARM GAS  /tmp/ccO72alg.s 			page 1062


 37893              		.loc 1 18028 9 is_stmt 1 view .LVU10640
 37894              		.loc 1 18028 12 is_stmt 0 view .LVU10641
 37895 0020 0446     		mov	r4, r0
 37896 0022 90BB     		cbnz	r0, .L2675
18029:Core/Src/bno055.c ****         {
18030:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37897              		.loc 1 18030 13 is_stmt 1 view .LVU10642
 37898              		.loc 1 18030 32 is_stmt 0 view .LVU10643
 37899 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 37900              		.loc 1 18030 16 view .LVU10644
 37901 0028 1BB9     		cbnz	r3, .L2679
 37902              	.LVL4684:
 37903              	.L2673:
18031:Core/Src/bno055.c ****             {
18032:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18033:Core/Src/bno055.c ****             }
18034:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 37904              		.loc 1 18034 13 is_stmt 1 view .LVU10645
 37905              		.loc 1 18034 16 is_stmt 0 view .LVU10646
 37906 002a 44B1     		cbz	r4, .L2680
18035:Core/Src/bno055.c ****             {
18036:Core/Src/bno055.c ****                 /* Write page as one */
18037:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18038:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18039:Core/Src/bno055.c ****                 {
18040:Core/Src/bno055.c ****                     /* Write the value
18041:Core/Src/bno055.c ****                      * of gyro highrate y threshold*/
18042:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18043:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
18044:Core/Src/bno055.c ****                                                               &data_u8r,
18045:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18046:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18047:Core/Src/bno055.c ****                     {
18048:Core/Src/bno055.c ****                         data_u8r =
18049:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
18050:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18051:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
18052:Core/Src/bno055.c ****                                                                     &data_u8r,
18053:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18054:Core/Src/bno055.c ****                     }
18055:Core/Src/bno055.c ****                 }
18056:Core/Src/bno055.c ****                 else
18057:Core/Src/bno055.c ****                 {
18058:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18059:Core/Src/bno055.c ****                 }
18060:Core/Src/bno055.c ****             }
18061:Core/Src/bno055.c ****             else
18062:Core/Src/bno055.c ****             {
18063:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 37907              		.loc 1 18063 26 view .LVU10647
 37908 002c 4FF0FF34 		mov	r4, #-1
 37909              	.LVL4685:
 37910              		.loc 1 18063 26 view .LVU10648
 37911 0030 2DE0     		b	.L2672
 37912              	.LVL4686:
 37913              	.L2679:
18032:Core/Src/bno055.c ****             }
ARM GAS  /tmp/ccO72alg.s 			page 1063


 37914              		.loc 1 18032 17 is_stmt 1 view .LVU10649
18032:Core/Src/bno055.c ****             }
 37915              		.loc 1 18032 28 is_stmt 0 view .LVU10650
 37916 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 37917              	.LVL4687:
18032:Core/Src/bno055.c ****             }
 37918              		.loc 1 18032 25 view .LVU10651
 37919 0036 54FA80F4 		uxtab	r4, r4, r0
 37920 003a 64B2     		sxtb	r4, r4
 37921              	.LVL4688:
18032:Core/Src/bno055.c ****             }
 37922              		.loc 1 18032 25 view .LVU10652
 37923 003c F5E7     		b	.L2673
 37924              	.L2680:
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37925              		.loc 1 18037 17 is_stmt 1 view .LVU10653
18037:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 37926              		.loc 1 18037 30 is_stmt 0 view .LVU10654
 37927 003e 0120     		movs	r0, #1
 37928 0040 FFF7FEFF 		bl	bno055_write_page_id
 37929              	.LVL4689:
18038:Core/Src/bno055.c ****                 {
 37930              		.loc 1 18038 17 is_stmt 1 view .LVU10655
18038:Core/Src/bno055.c ****                 {
 37931              		.loc 1 18038 20 is_stmt 0 view .LVU10656
 37932 0044 48BB     		cbnz	r0, .L2677
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37933              		.loc 1 18042 21 is_stmt 1 view .LVU10657
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37934              		.loc 1 18042 40 is_stmt 0 view .LVU10658
 37935 0046 1B4B     		ldr	r3, .L2682
 37936 0048 1868     		ldr	r0, [r3]
 37937              	.LVL4690:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37938              		.loc 1 18042 40 view .LVU10659
 37939 004a 0469     		ldr	r4, [r0, #16]
 37940              	.LVL4691:
18042:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_THRES_REG,
 37941              		.loc 1 18042 32 view .LVU10660
 37942 004c 0123     		movs	r3, #1
 37943 004e 0DF10702 		add	r2, sp, #7
 37944 0052 1A21     		movs	r1, #26
 37945 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37946 0056 A047     		blx	r4
 37947              	.LVL4692:
18046:Core/Src/bno055.c ****                     {
 37948              		.loc 1 18046 21 is_stmt 1 view .LVU10661
18046:Core/Src/bno055.c ****                     {
 37949              		.loc 1 18046 24 is_stmt 0 view .LVU10662
 37950 0058 0446     		mov	r4, r0
 37951 005a C0B9     		cbnz	r0, .L2672
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 37952              		.loc 1 18048 25 is_stmt 1 view .LVU10663
18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37953              		.loc 1 18049 29 is_stmt 0 view .LVU10664
 37954 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 37955              	.LVL4693:
ARM GAS  /tmp/ccO72alg.s 			page 1064


18049:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 37956              		.loc 1 18049 29 view .LVU10665
 37957 0060 20F01F00 		bic	r0, r0, #31
 37958 0064 43B2     		sxtb	r3, r0
 37959 0066 05F01F00 		and	r0, r5, #31
 37960 006a 1843     		orrs	r0, r0, r3
18048:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_THRES, gyro_highra
 37961              		.loc 1 18048 34 view .LVU10666
 37962 006c 8DF80700 		strb	r0, [sp, #7]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37963              		.loc 1 18050 25 is_stmt 1 view .LVU10667
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37964              		.loc 1 18050 45 is_stmt 0 view .LVU10668
 37965 0070 104B     		ldr	r3, .L2682
 37966 0072 1868     		ldr	r0, [r3]
 37967 0074 C568     		ldr	r5, [r0, #12]
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37968              		.loc 1 18050 37 view .LVU10669
 37969 0076 0123     		movs	r3, #1
 37970 0078 0DF10702 		add	r2, sp, #7
 37971 007c 1A21     		movs	r1, #26
 37972 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 37973 0080 A847     		blx	r5
 37974              	.LVL4694:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37975              		.loc 1 18050 34 view .LVU10670
 37976 0082 54FA80F4 		uxtab	r4, r4, r0
 37977 0086 64B2     		sxtb	r4, r4
 37978              	.LVL4695:
18050:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_THRES_RE
 37979              		.loc 1 18050 34 view .LVU10671
 37980 0088 01E0     		b	.L2672
 37981              	.LVL4696:
 37982              	.L2675:
18064:Core/Src/bno055.c ****             }
18065:Core/Src/bno055.c ****         }
18066:Core/Src/bno055.c ****         else
18067:Core/Src/bno055.c ****         {
18068:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 37983              		.loc 1 18068 22 view .LVU10672
 37984 008a 4FF0FF34 		mov	r4, #-1
 37985              	.LVL4697:
 37986              	.L2672:
18069:Core/Src/bno055.c ****         }
18070:Core/Src/bno055.c ****     }
18071:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 37987              		.loc 1 18071 5 is_stmt 1 view .LVU10673
 37988              		.loc 1 18071 24 is_stmt 0 view .LVU10674
 37989 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 37990              		.loc 1 18071 8 view .LVU10675
 37991 0092 28B9     		cbnz	r0, .L2681
 37992              	.LVL4698:
 37993              	.L2671:
18072:Core/Src/bno055.c ****     {
18073:Core/Src/bno055.c ****         /* set the operation mode of
18074:Core/Src/bno055.c ****          * previous operation mode*/
18075:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
ARM GAS  /tmp/ccO72alg.s 			page 1065


18076:Core/Src/bno055.c ****     }
18077:Core/Src/bno055.c **** 
18078:Core/Src/bno055.c ****     return com_rslt;
18079:Core/Src/bno055.c **** }
 37994              		.loc 1 18079 1 view .LVU10676
 37995 0094 2046     		mov	r0, r4
 37996 0096 03B0     		add	sp, sp, #12
 37997              	.LCFI1027:
 37998              		.cfi_remember_state
 37999              		.cfi_def_cfa_offset 12
 38000              		@ sp needed
 38001 0098 30BD     		pop	{r4, r5, pc}
 38002              	.LVL4699:
 38003              	.L2677:
 38004              	.LCFI1028:
 38005              		.cfi_restore_state
18058:Core/Src/bno055.c ****                 }
 38006              		.loc 1 18058 30 view .LVU10677
 38007 009a 4FF0FF34 		mov	r4, #-1
 38008              	.LVL4700:
18058:Core/Src/bno055.c ****                 }
 38009              		.loc 1 18058 30 view .LVU10678
 38010 009e F6E7     		b	.L2672
 38011              	.LVL4701:
 38012              	.L2681:
18075:Core/Src/bno055.c ****     }
 38013              		.loc 1 18075 9 is_stmt 1 view .LVU10679
18075:Core/Src/bno055.c ****     }
 38014              		.loc 1 18075 21 is_stmt 0 view .LVU10680
 38015 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 38016              	.LVL4702:
18075:Core/Src/bno055.c ****     }
 38017              		.loc 1 18075 18 view .LVU10681
 38018 00a4 54FA80F4 		uxtab	r4, r4, r0
 38019              	.LVL4703:
18075:Core/Src/bno055.c ****     }
 38020              		.loc 1 18075 18 view .LVU10682
 38021 00a8 64B2     		sxtb	r4, r4
 38022              	.LVL4704:
18075:Core/Src/bno055.c ****     }
 38023              		.loc 1 18075 18 view .LVU10683
 38024 00aa F3E7     		b	.L2671
 38025              	.LVL4705:
 38026              	.L2674:
18020:Core/Src/bno055.c ****     }
 38027              		.loc 1 18020 16 view .LVU10684
 38028 00ac 6FF07E04 		mvn	r4, #126
 38029 00b0 F0E7     		b	.L2671
 38030              	.L2683:
 38031 00b2 00BF     		.align	2
 38032              	.L2682:
 38033 00b4 00000000 		.word	.LANCHOR0
 38034              		.cfi_endproc
 38035              	.LFE258:
 38037              		.section	.text.bno055_get_gyro_highrate_y_hyst,"ax",%progbits
 38038              		.align	1
 38039              		.global	bno055_get_gyro_highrate_y_hyst
ARM GAS  /tmp/ccO72alg.s 			page 1066


 38040              		.syntax unified
 38041              		.thumb
 38042              		.thumb_func
 38044              	bno055_get_gyro_highrate_y_hyst:
 38045              	.LVL4706:
 38046              	.LFB259:
18080:Core/Src/bno055.c **** 
18081:Core/Src/bno055.c **** /*!
18082:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y hysteresis
18083:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18084:Core/Src/bno055.c ****  *
18085:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18086:Core/Src/bno055.c ****  *
18087:Core/Src/bno055.c ****  *  @return results of bus communication function
18088:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18089:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18090:Core/Src/bno055.c ****  *
18091:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18092:Core/Src/bno055.c ****  *
18093:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18094:Core/Src/bno055.c ****  *
18095:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18096:Core/Src/bno055.c ****  *
18097:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18098:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18099:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18100:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18101:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18102:Core/Src/bno055.c ****  */
18103:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_hyst(u8 *gyro_highrate_y_hyst_u8)
18104:Core/Src/bno055.c **** {
 38047              		.loc 1 18104 1 is_stmt 1 view -0
 38048              		.cfi_startproc
 38049              		@ args = 0, pretend = 0, frame = 8
 38050              		@ frame_needed = 0, uses_anonymous_args = 0
 38051              		.loc 1 18104 1 is_stmt 0 view .LVU10686
 38052 0000 30B5     		push	{r4, r5, lr}
 38053              	.LCFI1029:
 38054              		.cfi_def_cfa_offset 12
 38055              		.cfi_offset 4, -12
 38056              		.cfi_offset 5, -8
 38057              		.cfi_offset 14, -4
 38058 0002 83B0     		sub	sp, sp, #12
 38059              	.LCFI1030:
 38060              		.cfi_def_cfa_offset 24
18105:Core/Src/bno055.c ****     /* Variable used to return value of
18106:Core/Src/bno055.c ****      * communication routine*/
18107:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38061              		.loc 1 18107 5 is_stmt 1 view .LVU10687
 38062              	.LVL4707:
18108:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38063              		.loc 1 18108 5 view .LVU10688
 38064              		.loc 1 18108 8 is_stmt 0 view .LVU10689
 38065 0004 0023     		movs	r3, #0
 38066 0006 8DF80730 		strb	r3, [sp, #7]
18109:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38067              		.loc 1 18109 5 is_stmt 1 view .LVU10690
ARM GAS  /tmp/ccO72alg.s 			page 1067


 38068              	.LVL4708:
18110:Core/Src/bno055.c **** 
18111:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18112:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38069              		.loc 1 18112 5 view .LVU10691
 38070              		.loc 1 18112 18 is_stmt 0 view .LVU10692
 38071 000a 144B     		ldr	r3, .L2692
 38072 000c 1B68     		ldr	r3, [r3]
 38073              		.loc 1 18112 8 view .LVU10693
 38074 000e F3B1     		cbz	r3, .L2688
 38075 0010 0446     		mov	r4, r0
18113:Core/Src/bno055.c ****     {
18114:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18115:Core/Src/bno055.c ****     }
18116:Core/Src/bno055.c ****     else
18117:Core/Src/bno055.c ****     {
18118:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y hysteresis is
18119:Core/Src/bno055.c ****          * available in the page one*/
18120:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38076              		.loc 1 18120 9 is_stmt 1 view .LVU10694
 38077              		.loc 1 18120 21 is_stmt 0 view .LVU10695
 38078 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38079              		.loc 1 18120 12 view .LVU10696
 38080 0014 012B     		cmp	r3, #1
 38081 0016 14D1     		bne	.L2691
 38082              	.LVL4709:
 38083              	.L2686:
18121:Core/Src/bno055.c ****         {
18122:Core/Src/bno055.c ****             /* Write page as one */
18123:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18124:Core/Src/bno055.c ****         }
18125:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38084              		.loc 1 18125 53 discriminator 1 view .LVU10697
 38085 0018 104B     		ldr	r3, .L2692
 38086 001a 1B68     		ldr	r3, [r3]
 38087 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38088              		.loc 1 18125 41 discriminator 1 view .LVU10698
 38089 001e 012B     		cmp	r3, #1
 38090 0020 18D1     		bne	.L2689
 38091              	.L2687:
18126:Core/Src/bno055.c ****         {
18127:Core/Src/bno055.c ****             /* Read the value of gyro highrate y hysteresis*/
18128:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38092              		.loc 1 18128 13 is_stmt 1 view .LVU10699
 38093              		.loc 1 18128 32 is_stmt 0 view .LVU10700
 38094 0022 0E4B     		ldr	r3, .L2692
 38095 0024 1868     		ldr	r0, [r3]
 38096 0026 0569     		ldr	r5, [r0, #16]
 38097              		.loc 1 18128 24 view .LVU10701
 38098 0028 0123     		movs	r3, #1
 38099 002a 0DF10702 		add	r2, sp, #7
 38100 002e 1A21     		movs	r1, #26
 38101 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38102 0032 A847     		blx	r5
 38103              	.LVL4710:
18129:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18130:Core/Src/bno055.c ****                                                       &data_u8r,
ARM GAS  /tmp/ccO72alg.s 			page 1068


18131:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18132:Core/Src/bno055.c ****             *gyro_highrate_y_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST);
 38104              		.loc 1 18132 13 is_stmt 1 view .LVU10702
 38105              		.loc 1 18132 40 is_stmt 0 view .LVU10703
 38106 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38107 0038 C3F34113 		ubfx	r3, r3, #5, #2
 38108              		.loc 1 18132 38 view .LVU10704
 38109 003c 2370     		strb	r3, [r4]
 38110              	.LVL4711:
 38111              	.L2685:
18133:Core/Src/bno055.c ****         }
18134:Core/Src/bno055.c ****         else
18135:Core/Src/bno055.c ****         {
18136:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18137:Core/Src/bno055.c ****         }
18138:Core/Src/bno055.c ****     }
18139:Core/Src/bno055.c **** 
18140:Core/Src/bno055.c ****     return com_rslt;
18141:Core/Src/bno055.c **** }
 38112              		.loc 1 18141 1 view .LVU10705
 38113 003e 03B0     		add	sp, sp, #12
 38114              	.LCFI1031:
 38115              		.cfi_remember_state
 38116              		.cfi_def_cfa_offset 12
 38117              		@ sp needed
 38118 0040 30BD     		pop	{r4, r5, pc}
 38119              	.LVL4712:
 38120              	.L2691:
 38121              	.LCFI1032:
 38122              		.cfi_restore_state
18123:Core/Src/bno055.c ****         }
 38123              		.loc 1 18123 13 is_stmt 1 view .LVU10706
18123:Core/Src/bno055.c ****         }
 38124              		.loc 1 18123 23 is_stmt 0 view .LVU10707
 38125 0042 0120     		movs	r0, #1
 38126              	.LVL4713:
18123:Core/Src/bno055.c ****         }
 38127              		.loc 1 18123 23 view .LVU10708
 38128 0044 FFF7FEFF 		bl	bno055_write_page_id
 38129              	.LVL4714:
18125:Core/Src/bno055.c ****         {
 38130              		.loc 1 18125 9 is_stmt 1 view .LVU10709
18125:Core/Src/bno055.c ****         {
 38131              		.loc 1 18125 12 is_stmt 0 view .LVU10710
 38132 0048 0028     		cmp	r0, #0
 38133 004a EAD0     		beq	.L2687
 38134 004c E4E7     		b	.L2686
 38135              	.LVL4715:
 38136              	.L2688:
18114:Core/Src/bno055.c ****     }
 38137              		.loc 1 18114 16 view .LVU10711
 38138 004e 6FF07E00 		mvn	r0, #126
 38139              	.LVL4716:
18114:Core/Src/bno055.c ****     }
 38140              		.loc 1 18114 16 view .LVU10712
 38141 0052 F4E7     		b	.L2685
 38142              	.LVL4717:
ARM GAS  /tmp/ccO72alg.s 			page 1069


 38143              	.L2689:
18136:Core/Src/bno055.c ****         }
 38144              		.loc 1 18136 22 view .LVU10713
 38145 0054 4FF0FF30 		mov	r0, #-1
 38146 0058 F1E7     		b	.L2685
 38147              	.L2693:
 38148 005a 00BF     		.align	2
 38149              	.L2692:
 38150 005c 00000000 		.word	.LANCHOR0
 38151              		.cfi_endproc
 38152              	.LFE259:
 38154              		.section	.text.bno055_set_gyro_highrate_y_hyst,"ax",%progbits
 38155              		.align	1
 38156              		.global	bno055_set_gyro_highrate_y_hyst
 38157              		.syntax unified
 38158              		.thumb
 38159              		.thumb_func
 38161              	bno055_set_gyro_highrate_y_hyst:
 38162              	.LVL4718:
 38163              	.LFB260:
18142:Core/Src/bno055.c **** 
18143:Core/Src/bno055.c **** /*!
18144:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y hysteresis
18145:Core/Src/bno055.c ****  *  from page one register from 0x1A bit 5 to 6
18146:Core/Src/bno055.c ****  *
18147:Core/Src/bno055.c ****  *  @param gyro_highrate_y_hyst_u8 : The value of gyro highrate y hysteresis
18148:Core/Src/bno055.c ****  *
18149:Core/Src/bno055.c ****  *  @return results of bus communication function
18150:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18151:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18152:Core/Src/bno055.c ****  *
18153:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18154:Core/Src/bno055.c ****  *
18155:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_y_hyst_u8) *4 LSB
18156:Core/Src/bno055.c ****  *
18157:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18158:Core/Src/bno055.c ****  *
18159:Core/Src/bno055.c ****  *  gyro_range_u8     | hysteresis      |     LSB
18160:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18161:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18162:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18163:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18164:Core/Src/bno055.c ****  */
18165:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_hyst(u8 gyro_highrate_y_hyst_u8)
18166:Core/Src/bno055.c **** {
 38164              		.loc 1 18166 1 is_stmt 1 view -0
 38165              		.cfi_startproc
 38166              		@ args = 0, pretend = 0, frame = 8
 38167              		@ frame_needed = 0, uses_anonymous_args = 0
 38168              		.loc 1 18166 1 is_stmt 0 view .LVU10715
 38169 0000 30B5     		push	{r4, r5, lr}
 38170              	.LCFI1033:
 38171              		.cfi_def_cfa_offset 12
 38172              		.cfi_offset 4, -12
 38173              		.cfi_offset 5, -8
 38174              		.cfi_offset 14, -4
 38175 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 1070


 38176              	.LCFI1034:
 38177              		.cfi_def_cfa_offset 24
18167:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38178              		.loc 1 18167 5 is_stmt 1 view .LVU10716
 38179              	.LVL4719:
18168:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38180              		.loc 1 18168 5 view .LVU10717
 38181              		.loc 1 18168 8 is_stmt 0 view .LVU10718
 38182 0004 0023     		movs	r3, #0
 38183 0006 8DF80730 		strb	r3, [sp, #7]
18169:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38184              		.loc 1 18169 5 is_stmt 1 view .LVU10719
 38185              	.LVL4720:
18170:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38186              		.loc 1 18170 5 view .LVU10720
 38187              		.loc 1 18170 8 is_stmt 0 view .LVU10721
 38188 000a 8DF80630 		strb	r3, [sp, #6]
18171:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38189              		.loc 1 18171 5 is_stmt 1 view .LVU10722
 38190              	.LVL4721:
18172:Core/Src/bno055.c **** 
18173:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18174:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38191              		.loc 1 18174 5 view .LVU10723
 38192              		.loc 1 18174 18 is_stmt 0 view .LVU10724
 38193 000e 2A4B     		ldr	r3, .L2706
 38194 0010 1B68     		ldr	r3, [r3]
 38195              		.loc 1 18174 8 view .LVU10725
 38196 0012 002B     		cmp	r3, #0
 38197 0014 4CD0     		beq	.L2698
 38198 0016 0546     		mov	r5, r0
18175:Core/Src/bno055.c ****     {
18176:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18177:Core/Src/bno055.c ****     }
18178:Core/Src/bno055.c ****     else
18179:Core/Src/bno055.c ****     {
18180:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18181:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18182:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18183:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38199              		.loc 1 18183 9 is_stmt 1 view .LVU10726
 38200              		.loc 1 18183 19 is_stmt 0 view .LVU10727
 38201 0018 0DF10600 		add	r0, sp, #6
 38202              	.LVL4722:
 38203              		.loc 1 18183 19 view .LVU10728
 38204 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38205              	.LVL4723:
18184:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38206              		.loc 1 18184 9 is_stmt 1 view .LVU10729
 38207              		.loc 1 18184 12 is_stmt 0 view .LVU10730
 38208 0020 0446     		mov	r4, r0
 38209 0022 0028     		cmp	r0, #0
 38210 0024 33D1     		bne	.L2699
18185:Core/Src/bno055.c ****         {
18186:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38211              		.loc 1 18186 13 is_stmt 1 view .LVU10731
 38212              		.loc 1 18186 32 is_stmt 0 view .LVU10732
ARM GAS  /tmp/ccO72alg.s 			page 1071


 38213 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38214              		.loc 1 18186 16 view .LVU10733
 38215 002a 1BB9     		cbnz	r3, .L2703
 38216              	.LVL4724:
 38217              	.L2697:
18187:Core/Src/bno055.c ****             {
18188:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18189:Core/Src/bno055.c ****             }
18190:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38218              		.loc 1 18190 13 is_stmt 1 view .LVU10734
 38219              		.loc 1 18190 16 is_stmt 0 view .LVU10735
 38220 002c 44B1     		cbz	r4, .L2704
18191:Core/Src/bno055.c ****             {
18192:Core/Src/bno055.c ****                 /* Write page as one */
18193:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18194:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18195:Core/Src/bno055.c ****                 {
18196:Core/Src/bno055.c ****                     /* Write the value of
18197:Core/Src/bno055.c ****                      * gyro highrate y hysteresis*/
18198:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18199:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
18200:Core/Src/bno055.c ****                                                               &data_u8r,
18201:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18202:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18203:Core/Src/bno055.c ****                     {
18204:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_HYST, gyro_
18205:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18206:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
18207:Core/Src/bno055.c ****                                                                     &data_u8r,
18208:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18209:Core/Src/bno055.c ****                     }
18210:Core/Src/bno055.c ****                 }
18211:Core/Src/bno055.c ****                 else
18212:Core/Src/bno055.c ****                 {
18213:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18214:Core/Src/bno055.c ****                 }
18215:Core/Src/bno055.c ****             }
18216:Core/Src/bno055.c ****             else
18217:Core/Src/bno055.c ****             {
18218:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38221              		.loc 1 18218 26 view .LVU10736
 38222 002e 4FF0FF34 		mov	r4, #-1
 38223              	.LVL4725:
 38224              		.loc 1 18218 26 view .LVU10737
 38225 0032 2EE0     		b	.L2696
 38226              	.LVL4726:
 38227              	.L2703:
18188:Core/Src/bno055.c ****             }
 38228              		.loc 1 18188 17 is_stmt 1 view .LVU10738
18188:Core/Src/bno055.c ****             }
 38229              		.loc 1 18188 28 is_stmt 0 view .LVU10739
 38230 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 38231              	.LVL4727:
18188:Core/Src/bno055.c ****             }
 38232              		.loc 1 18188 25 view .LVU10740
 38233 0038 54FA80F4 		uxtab	r4, r4, r0
 38234 003c 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccO72alg.s 			page 1072


 38235              	.LVL4728:
18188:Core/Src/bno055.c ****             }
 38236              		.loc 1 18188 25 view .LVU10741
 38237 003e F5E7     		b	.L2697
 38238              	.L2704:
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38239              		.loc 1 18193 17 is_stmt 1 view .LVU10742
18193:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38240              		.loc 1 18193 30 is_stmt 0 view .LVU10743
 38241 0040 0120     		movs	r0, #1
 38242 0042 FFF7FEFF 		bl	bno055_write_page_id
 38243              	.LVL4729:
18194:Core/Src/bno055.c ****                 {
 38244              		.loc 1 18194 17 is_stmt 1 view .LVU10744
18194:Core/Src/bno055.c ****                 {
 38245              		.loc 1 18194 20 is_stmt 0 view .LVU10745
 38246 0046 50BB     		cbnz	r0, .L2701
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38247              		.loc 1 18198 21 is_stmt 1 view .LVU10746
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38248              		.loc 1 18198 40 is_stmt 0 view .LVU10747
 38249 0048 1B4B     		ldr	r3, .L2706
 38250 004a 1868     		ldr	r0, [r3]
 38251              	.LVL4730:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38252              		.loc 1 18198 40 view .LVU10748
 38253 004c 0469     		ldr	r4, [r0, #16]
 38254              	.LVL4731:
18198:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_HYST_REG,
 38255              		.loc 1 18198 32 view .LVU10749
 38256 004e 0123     		movs	r3, #1
 38257 0050 0DF10702 		add	r2, sp, #7
 38258 0054 1A21     		movs	r1, #26
 38259 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38260 0058 A047     		blx	r4
 38261              	.LVL4732:
18202:Core/Src/bno055.c ****                     {
 38262              		.loc 1 18202 21 is_stmt 1 view .LVU10750
18202:Core/Src/bno055.c ****                     {
 38263              		.loc 1 18202 24 is_stmt 0 view .LVU10751
 38264 005a 0446     		mov	r4, r0
 38265 005c C8B9     		cbnz	r0, .L2696
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38266              		.loc 1 18204 25 is_stmt 1 view .LVU10752
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38267              		.loc 1 18204 36 is_stmt 0 view .LVU10753
 38268 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 38269              	.LVL4733:
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38270              		.loc 1 18204 36 view .LVU10754
 38271 0062 20F06000 		bic	r0, r0, #96
 38272 0066 43B2     		sxtb	r3, r0
 38273 0068 6801     		lsls	r0, r5, #5
 38274 006a 00F06000 		and	r0, r0, #96
 38275 006e 1843     		orrs	r0, r0, r3
18204:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38276              		.loc 1 18204 34 view .LVU10755
ARM GAS  /tmp/ccO72alg.s 			page 1073


 38277 0070 8DF80700 		strb	r0, [sp, #7]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38278              		.loc 1 18205 25 is_stmt 1 view .LVU10756
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38279              		.loc 1 18205 45 is_stmt 0 view .LVU10757
 38280 0074 104B     		ldr	r3, .L2706
 38281 0076 1868     		ldr	r0, [r3]
 38282 0078 C568     		ldr	r5, [r0, #12]
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38283              		.loc 1 18205 37 view .LVU10758
 38284 007a 0123     		movs	r3, #1
 38285 007c 0DF10702 		add	r2, sp, #7
 38286 0080 1A21     		movs	r1, #26
 38287 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38288 0084 A847     		blx	r5
 38289              	.LVL4734:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38290              		.loc 1 18205 34 view .LVU10759
 38291 0086 54FA80F4 		uxtab	r4, r4, r0
 38292 008a 64B2     		sxtb	r4, r4
 38293              	.LVL4735:
18205:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_HYST_REG
 38294              		.loc 1 18205 34 view .LVU10760
 38295 008c 01E0     		b	.L2696
 38296              	.LVL4736:
 38297              	.L2699:
18219:Core/Src/bno055.c ****             }
18220:Core/Src/bno055.c ****         }
18221:Core/Src/bno055.c ****         else
18222:Core/Src/bno055.c ****         {
18223:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38298              		.loc 1 18223 22 view .LVU10761
 38299 008e 4FF0FF34 		mov	r4, #-1
 38300              	.LVL4737:
 38301              	.L2696:
18224:Core/Src/bno055.c ****         }
18225:Core/Src/bno055.c ****     }
18226:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38302              		.loc 1 18226 5 is_stmt 1 view .LVU10762
 38303              		.loc 1 18226 24 is_stmt 0 view .LVU10763
 38304 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38305              		.loc 1 18226 8 view .LVU10764
 38306 0096 28B9     		cbnz	r0, .L2705
 38307              	.LVL4738:
 38308              	.L2695:
18227:Core/Src/bno055.c ****     {
18228:Core/Src/bno055.c ****         /* set the operation mode of
18229:Core/Src/bno055.c ****          * previous operation mode*/
18230:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18231:Core/Src/bno055.c ****     }
18232:Core/Src/bno055.c **** 
18233:Core/Src/bno055.c ****     return com_rslt;
18234:Core/Src/bno055.c **** }
 38309              		.loc 1 18234 1 view .LVU10765
 38310 0098 2046     		mov	r0, r4
 38311 009a 03B0     		add	sp, sp, #12
 38312              	.LCFI1035:
ARM GAS  /tmp/ccO72alg.s 			page 1074


 38313              		.cfi_remember_state
 38314              		.cfi_def_cfa_offset 12
 38315              		@ sp needed
 38316 009c 30BD     		pop	{r4, r5, pc}
 38317              	.LVL4739:
 38318              	.L2701:
 38319              	.LCFI1036:
 38320              		.cfi_restore_state
18213:Core/Src/bno055.c ****                 }
 38321              		.loc 1 18213 30 view .LVU10766
 38322 009e 4FF0FF34 		mov	r4, #-1
 38323              	.LVL4740:
18213:Core/Src/bno055.c ****                 }
 38324              		.loc 1 18213 30 view .LVU10767
 38325 00a2 F6E7     		b	.L2696
 38326              	.LVL4741:
 38327              	.L2705:
18230:Core/Src/bno055.c ****     }
 38328              		.loc 1 18230 9 is_stmt 1 view .LVU10768
18230:Core/Src/bno055.c ****     }
 38329              		.loc 1 18230 21 is_stmt 0 view .LVU10769
 38330 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 38331              	.LVL4742:
18230:Core/Src/bno055.c ****     }
 38332              		.loc 1 18230 18 view .LVU10770
 38333 00a8 54FA80F4 		uxtab	r4, r4, r0
 38334              	.LVL4743:
18230:Core/Src/bno055.c ****     }
 38335              		.loc 1 18230 18 view .LVU10771
 38336 00ac 64B2     		sxtb	r4, r4
 38337              	.LVL4744:
18230:Core/Src/bno055.c ****     }
 38338              		.loc 1 18230 18 view .LVU10772
 38339 00ae F3E7     		b	.L2695
 38340              	.LVL4745:
 38341              	.L2698:
18176:Core/Src/bno055.c ****     }
 38342              		.loc 1 18176 16 view .LVU10773
 38343 00b0 6FF07E04 		mvn	r4, #126
 38344 00b4 F0E7     		b	.L2695
 38345              	.L2707:
 38346 00b6 00BF     		.align	2
 38347              	.L2706:
 38348 00b8 00000000 		.word	.LANCHOR0
 38349              		.cfi_endproc
 38350              	.LFE260:
 38352              		.section	.text.bno055_get_gyro_highrate_y_durn,"ax",%progbits
 38353              		.align	1
 38354              		.global	bno055_get_gyro_highrate_y_durn
 38355              		.syntax unified
 38356              		.thumb
 38357              		.thumb_func
 38359              	bno055_get_gyro_highrate_y_durn:
 38360              	.LVL4746:
 38361              	.LFB261:
18235:Core/Src/bno055.c **** 
18236:Core/Src/bno055.c **** /*!
ARM GAS  /tmp/ccO72alg.s 			page 1075


18237:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate y duration
18238:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18239:Core/Src/bno055.c ****  *
18240:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18241:Core/Src/bno055.c ****  *
18242:Core/Src/bno055.c ****  *  @return results of bus communication function
18243:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18244:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18245:Core/Src/bno055.c ****  *
18246:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18247:Core/Src/bno055.c ****  *
18248:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18249:Core/Src/bno055.c ****  */
18250:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_y_durn(u8 *gyro_highrate_y_durn_u8)
18251:Core/Src/bno055.c **** {
 38362              		.loc 1 18251 1 is_stmt 1 view -0
 38363              		.cfi_startproc
 38364              		@ args = 0, pretend = 0, frame = 8
 38365              		@ frame_needed = 0, uses_anonymous_args = 0
 38366              		.loc 1 18251 1 is_stmt 0 view .LVU10775
 38367 0000 70B5     		push	{r4, r5, r6, lr}
 38368              	.LCFI1037:
 38369              		.cfi_def_cfa_offset 16
 38370              		.cfi_offset 4, -16
 38371              		.cfi_offset 5, -12
 38372              		.cfi_offset 6, -8
 38373              		.cfi_offset 14, -4
 38374 0002 82B0     		sub	sp, sp, #8
 38375              	.LCFI1038:
 38376              		.cfi_def_cfa_offset 24
18252:Core/Src/bno055.c ****     /* Variable used to return value of
18253:Core/Src/bno055.c ****      * communication routine*/
18254:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38377              		.loc 1 18254 5 is_stmt 1 view .LVU10776
 38378              	.LVL4747:
18255:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38379              		.loc 1 18255 5 view .LVU10777
 38380              		.loc 1 18255 8 is_stmt 0 view .LVU10778
 38381 0004 0023     		movs	r3, #0
 38382 0006 8DF80730 		strb	r3, [sp, #7]
18256:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38383              		.loc 1 18256 5 is_stmt 1 view .LVU10779
 38384              	.LVL4748:
18257:Core/Src/bno055.c **** 
18258:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18259:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38385              		.loc 1 18259 5 view .LVU10780
 38386              		.loc 1 18259 18 is_stmt 0 view .LVU10781
 38387 000a 134B     		ldr	r3, .L2716
 38388 000c 1B68     		ldr	r3, [r3]
 38389              		.loc 1 18259 8 view .LVU10782
 38390 000e E3B1     		cbz	r3, .L2712
 38391 0010 0546     		mov	r5, r0
18260:Core/Src/bno055.c ****     {
18261:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18262:Core/Src/bno055.c ****     }
18263:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccO72alg.s 			page 1076


18264:Core/Src/bno055.c ****     {
18265:Core/Src/bno055.c ****         /*condition check for page, gyro highrate y duration is
18266:Core/Src/bno055.c ****          * available in the page one*/
18267:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38392              		.loc 1 18267 9 is_stmt 1 view .LVU10783
 38393              		.loc 1 18267 21 is_stmt 0 view .LVU10784
 38394 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38395              		.loc 1 18267 12 view .LVU10785
 38396 0014 012B     		cmp	r3, #1
 38397 0016 12D1     		bne	.L2715
 38398              	.LVL4749:
 38399              	.L2710:
18268:Core/Src/bno055.c ****         {
18269:Core/Src/bno055.c ****             /* Write page as one */
18270:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18271:Core/Src/bno055.c ****         }
18272:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38400              		.loc 1 18272 53 discriminator 1 view .LVU10786
 38401 0018 0F4B     		ldr	r3, .L2716
 38402 001a 1B68     		ldr	r3, [r3]
 38403 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38404              		.loc 1 18272 41 discriminator 1 view .LVU10787
 38405 001e 012B     		cmp	r3, #1
 38406 0020 16D1     		bne	.L2713
 38407              	.L2711:
18273:Core/Src/bno055.c ****         {
18274:Core/Src/bno055.c ****             /* Read the value of gyro highrate y duration*/
18275:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 38408              		.loc 1 18275 13 is_stmt 1 view .LVU10788
 38409              		.loc 1 18275 32 is_stmt 0 view .LVU10789
 38410 0022 0D4B     		ldr	r3, .L2716
 38411 0024 1C68     		ldr	r4, [r3]
 38412 0026 2669     		ldr	r6, [r4, #16]
 38413              		.loc 1 18275 24 view .LVU10790
 38414 0028 0123     		movs	r3, #1
 38415 002a 0DF10702 		add	r2, sp, #7
 38416 002e 1B21     		movs	r1, #27
 38417 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 38418 0032 B047     		blx	r6
 38419              	.LVL4750:
18276:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18277:Core/Src/bno055.c ****                                                       &data_u8r,
18278:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18279:Core/Src/bno055.c ****             *gyro_highrate_y_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN);
 38420              		.loc 1 18279 13 is_stmt 1 view .LVU10791
 38421              		.loc 1 18279 38 is_stmt 0 view .LVU10792
 38422 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38423 0038 2B70     		strb	r3, [r5]
 38424              	.LVL4751:
 38425              	.L2709:
18280:Core/Src/bno055.c ****         }
18281:Core/Src/bno055.c ****         else
18282:Core/Src/bno055.c ****         {
18283:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18284:Core/Src/bno055.c ****         }
18285:Core/Src/bno055.c ****     }
18286:Core/Src/bno055.c **** 
ARM GAS  /tmp/ccO72alg.s 			page 1077


18287:Core/Src/bno055.c ****     return com_rslt;
18288:Core/Src/bno055.c **** }
 38426              		.loc 1 18288 1 view .LVU10793
 38427 003a 02B0     		add	sp, sp, #8
 38428              	.LCFI1039:
 38429              		.cfi_remember_state
 38430              		.cfi_def_cfa_offset 16
 38431              		@ sp needed
 38432 003c 70BD     		pop	{r4, r5, r6, pc}
 38433              	.LVL4752:
 38434              	.L2715:
 38435              	.LCFI1040:
 38436              		.cfi_restore_state
18270:Core/Src/bno055.c ****         }
 38437              		.loc 1 18270 13 is_stmt 1 view .LVU10794
18270:Core/Src/bno055.c ****         }
 38438              		.loc 1 18270 23 is_stmt 0 view .LVU10795
 38439 003e 0120     		movs	r0, #1
 38440              	.LVL4753:
18270:Core/Src/bno055.c ****         }
 38441              		.loc 1 18270 23 view .LVU10796
 38442 0040 FFF7FEFF 		bl	bno055_write_page_id
 38443              	.LVL4754:
18272:Core/Src/bno055.c ****         {
 38444              		.loc 1 18272 9 is_stmt 1 view .LVU10797
18272:Core/Src/bno055.c ****         {
 38445              		.loc 1 18272 12 is_stmt 0 view .LVU10798
 38446 0044 0028     		cmp	r0, #0
 38447 0046 ECD0     		beq	.L2711
 38448 0048 E6E7     		b	.L2710
 38449              	.LVL4755:
 38450              	.L2712:
18261:Core/Src/bno055.c ****     }
 38451              		.loc 1 18261 16 view .LVU10799
 38452 004a 6FF07E00 		mvn	r0, #126
 38453              	.LVL4756:
18261:Core/Src/bno055.c ****     }
 38454              		.loc 1 18261 16 view .LVU10800
 38455 004e F4E7     		b	.L2709
 38456              	.LVL4757:
 38457              	.L2713:
18283:Core/Src/bno055.c ****         }
 38458              		.loc 1 18283 22 view .LVU10801
 38459 0050 4FF0FF30 		mov	r0, #-1
 38460 0054 F1E7     		b	.L2709
 38461              	.L2717:
 38462 0056 00BF     		.align	2
 38463              	.L2716:
 38464 0058 00000000 		.word	.LANCHOR0
 38465              		.cfi_endproc
 38466              	.LFE261:
 38468              		.section	.text.bno055_set_gyro_highrate_y_durn,"ax",%progbits
 38469              		.align	1
 38470              		.global	bno055_set_gyro_highrate_y_durn
 38471              		.syntax unified
 38472              		.thumb
 38473              		.thumb_func
ARM GAS  /tmp/ccO72alg.s 			page 1078


 38475              	bno055_set_gyro_highrate_y_durn:
 38476              	.LVL4758:
 38477              	.LFB262:
18289:Core/Src/bno055.c **** 
18290:Core/Src/bno055.c **** /*!
18291:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate y duration
18292:Core/Src/bno055.c ****  *  from page one register from 0x1B bit 0 to 7
18293:Core/Src/bno055.c ****  *
18294:Core/Src/bno055.c ****  *  @param gyro_highrate_y_durn_u8 : The value of gyro highrate y duration
18295:Core/Src/bno055.c ****  *
18296:Core/Src/bno055.c ****  *  @return results of bus communication function
18297:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18298:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18299:Core/Src/bno055.c ****  *
18300:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18301:Core/Src/bno055.c ****  *
18302:Core/Src/bno055.c ****  *  (1 + gyro_highrate_y_durn_u8)*2.5ms
18303:Core/Src/bno055.c ****  */
18304:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_y_durn(u8 gyro_highrate_y_durn_u8)
18305:Core/Src/bno055.c **** {
 38478              		.loc 1 18305 1 is_stmt 1 view -0
 38479              		.cfi_startproc
 38480              		@ args = 0, pretend = 0, frame = 8
 38481              		@ frame_needed = 0, uses_anonymous_args = 0
 38482              		.loc 1 18305 1 is_stmt 0 view .LVU10803
 38483 0000 30B5     		push	{r4, r5, lr}
 38484              	.LCFI1041:
 38485              		.cfi_def_cfa_offset 12
 38486              		.cfi_offset 4, -12
 38487              		.cfi_offset 5, -8
 38488              		.cfi_offset 14, -4
 38489 0002 83B0     		sub	sp, sp, #12
 38490              	.LCFI1042:
 38491              		.cfi_def_cfa_offset 24
18306:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38492              		.loc 1 18306 5 is_stmt 1 view .LVU10804
 38493              	.LVL4759:
18307:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38494              		.loc 1 18307 5 view .LVU10805
 38495              		.loc 1 18307 8 is_stmt 0 view .LVU10806
 38496 0004 0023     		movs	r3, #0
 38497 0006 8DF80730 		strb	r3, [sp, #7]
18308:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38498              		.loc 1 18308 5 is_stmt 1 view .LVU10807
 38499              	.LVL4760:
18309:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38500              		.loc 1 18309 5 view .LVU10808
 38501              		.loc 1 18309 8 is_stmt 0 view .LVU10809
 38502 000a 8DF80630 		strb	r3, [sp, #6]
18310:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38503              		.loc 1 18310 5 is_stmt 1 view .LVU10810
 38504              	.LVL4761:
18311:Core/Src/bno055.c **** 
18312:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18313:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38505              		.loc 1 18313 5 view .LVU10811
 38506              		.loc 1 18313 18 is_stmt 0 view .LVU10812
ARM GAS  /tmp/ccO72alg.s 			page 1079


 38507 000e 254B     		ldr	r3, .L2730
 38508 0010 1B68     		ldr	r3, [r3]
 38509              		.loc 1 18313 8 view .LVU10813
 38510 0012 002B     		cmp	r3, #0
 38511 0014 42D0     		beq	.L2722
 38512 0016 0546     		mov	r5, r0
18314:Core/Src/bno055.c ****     {
18315:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18316:Core/Src/bno055.c ****     }
18317:Core/Src/bno055.c ****     else
18318:Core/Src/bno055.c ****     {
18319:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18320:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18321:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18322:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38513              		.loc 1 18322 9 is_stmt 1 view .LVU10814
 38514              		.loc 1 18322 19 is_stmt 0 view .LVU10815
 38515 0018 0DF10600 		add	r0, sp, #6
 38516              	.LVL4762:
 38517              		.loc 1 18322 19 view .LVU10816
 38518 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38519              	.LVL4763:
18323:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38520              		.loc 1 18323 9 is_stmt 1 view .LVU10817
 38521              		.loc 1 18323 12 is_stmt 0 view .LVU10818
 38522 0020 0446     		mov	r4, r0
 38523 0022 50BB     		cbnz	r0, .L2723
18324:Core/Src/bno055.c ****         {
18325:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38524              		.loc 1 18325 13 is_stmt 1 view .LVU10819
 38525              		.loc 1 18325 32 is_stmt 0 view .LVU10820
 38526 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38527              		.loc 1 18325 16 view .LVU10821
 38528 0028 1BB9     		cbnz	r3, .L2727
 38529              	.LVL4764:
 38530              	.L2721:
18326:Core/Src/bno055.c ****             {
18327:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18328:Core/Src/bno055.c ****             }
18329:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38531              		.loc 1 18329 13 is_stmt 1 view .LVU10822
 38532              		.loc 1 18329 16 is_stmt 0 view .LVU10823
 38533 002a 44B1     		cbz	r4, .L2728
18330:Core/Src/bno055.c ****             {
18331:Core/Src/bno055.c ****                 /* Write page as one */
18332:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18333:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18334:Core/Src/bno055.c ****                 {
18335:Core/Src/bno055.c ****                     /* Write the value
18336:Core/Src/bno055.c ****                      * of gyro highrate y duration*/
18337:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18338:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
18339:Core/Src/bno055.c ****                                                               &data_u8r,
18340:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18341:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18342:Core/Src/bno055.c ****                     {
18343:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Y_DURN, gyro_
ARM GAS  /tmp/ccO72alg.s 			page 1080


18344:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18345:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
18346:Core/Src/bno055.c ****                                                                     &data_u8r,
18347:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18348:Core/Src/bno055.c ****                     }
18349:Core/Src/bno055.c ****                 }
18350:Core/Src/bno055.c ****                 else
18351:Core/Src/bno055.c ****                 {
18352:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18353:Core/Src/bno055.c ****                 }
18354:Core/Src/bno055.c ****             }
18355:Core/Src/bno055.c ****             else
18356:Core/Src/bno055.c ****             {
18357:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38534              		.loc 1 18357 26 view .LVU10824
 38535 002c 4FF0FF34 		mov	r4, #-1
 38536              	.LVL4765:
 38537              		.loc 1 18357 26 view .LVU10825
 38538 0030 25E0     		b	.L2720
 38539              	.LVL4766:
 38540              	.L2727:
18327:Core/Src/bno055.c ****             }
 38541              		.loc 1 18327 17 is_stmt 1 view .LVU10826
18327:Core/Src/bno055.c ****             }
 38542              		.loc 1 18327 28 is_stmt 0 view .LVU10827
 38543 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38544              	.LVL4767:
18327:Core/Src/bno055.c ****             }
 38545              		.loc 1 18327 25 view .LVU10828
 38546 0036 54FA80F4 		uxtab	r4, r4, r0
 38547 003a 64B2     		sxtb	r4, r4
 38548              	.LVL4768:
18327:Core/Src/bno055.c ****             }
 38549              		.loc 1 18327 25 view .LVU10829
 38550 003c F5E7     		b	.L2721
 38551              	.L2728:
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38552              		.loc 1 18332 17 is_stmt 1 view .LVU10830
18332:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38553              		.loc 1 18332 30 is_stmt 0 view .LVU10831
 38554 003e 0120     		movs	r0, #1
 38555 0040 FFF7FEFF 		bl	bno055_write_page_id
 38556              	.LVL4769:
18333:Core/Src/bno055.c ****                 {
 38557              		.loc 1 18333 17 is_stmt 1 view .LVU10832
18333:Core/Src/bno055.c ****                 {
 38558              		.loc 1 18333 20 is_stmt 0 view .LVU10833
 38559 0044 08BB     		cbnz	r0, .L2725
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38560              		.loc 1 18337 21 is_stmt 1 view .LVU10834
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38561              		.loc 1 18337 40 is_stmt 0 view .LVU10835
 38562 0046 174B     		ldr	r3, .L2730
 38563 0048 1868     		ldr	r0, [r3]
 38564              	.LVL4770:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38565              		.loc 1 18337 40 view .LVU10836
ARM GAS  /tmp/ccO72alg.s 			page 1081


 38566 004a 0469     		ldr	r4, [r0, #16]
 38567              	.LVL4771:
18337:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Y_DURN_REG,
 38568              		.loc 1 18337 32 view .LVU10837
 38569 004c 0123     		movs	r3, #1
 38570 004e 0DF10702 		add	r2, sp, #7
 38571 0052 1B21     		movs	r1, #27
 38572 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38573 0056 A047     		blx	r4
 38574              	.LVL4772:
18341:Core/Src/bno055.c ****                     {
 38575              		.loc 1 18341 21 is_stmt 1 view .LVU10838
18341:Core/Src/bno055.c ****                     {
 38576              		.loc 1 18341 24 is_stmt 0 view .LVU10839
 38577 0058 0446     		mov	r4, r0
 38578 005a 80B9     		cbnz	r0, .L2720
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38579              		.loc 1 18343 25 is_stmt 1 view .LVU10840
18343:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38580              		.loc 1 18343 34 is_stmt 0 view .LVU10841
 38581 005c 8DF80750 		strb	r5, [sp, #7]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38582              		.loc 1 18344 25 is_stmt 1 view .LVU10842
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38583              		.loc 1 18344 45 is_stmt 0 view .LVU10843
 38584 0060 104B     		ldr	r3, .L2730
 38585 0062 1868     		ldr	r0, [r3]
 38586              	.LVL4773:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38587              		.loc 1 18344 45 view .LVU10844
 38588 0064 C568     		ldr	r5, [r0, #12]
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38589              		.loc 1 18344 37 view .LVU10845
 38590 0066 0123     		movs	r3, #1
 38591 0068 0DF10702 		add	r2, sp, #7
 38592 006c 1B21     		movs	r1, #27
 38593 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38594 0070 A847     		blx	r5
 38595              	.LVL4774:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38596              		.loc 1 18344 34 view .LVU10846
 38597 0072 54FA80F4 		uxtab	r4, r4, r0
 38598 0076 64B2     		sxtb	r4, r4
 38599              	.LVL4775:
18344:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Y_DURN_REG
 38600              		.loc 1 18344 34 view .LVU10847
 38601 0078 01E0     		b	.L2720
 38602              	.LVL4776:
 38603              	.L2723:
18358:Core/Src/bno055.c ****             }
18359:Core/Src/bno055.c ****         }
18360:Core/Src/bno055.c ****         else
18361:Core/Src/bno055.c ****         {
18362:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38604              		.loc 1 18362 22 view .LVU10848
 38605 007a 4FF0FF34 		mov	r4, #-1
 38606              	.LVL4777:
ARM GAS  /tmp/ccO72alg.s 			page 1082


 38607              	.L2720:
18363:Core/Src/bno055.c ****         }
18364:Core/Src/bno055.c ****     }
18365:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38608              		.loc 1 18365 5 is_stmt 1 view .LVU10849
 38609              		.loc 1 18365 24 is_stmt 0 view .LVU10850
 38610 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38611              		.loc 1 18365 8 view .LVU10851
 38612 0082 28B9     		cbnz	r0, .L2729
 38613              	.LVL4778:
 38614              	.L2719:
18366:Core/Src/bno055.c ****     {
18367:Core/Src/bno055.c ****         /* set the operation mode of
18368:Core/Src/bno055.c ****          * previous operation mode*/
18369:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18370:Core/Src/bno055.c ****     }
18371:Core/Src/bno055.c **** 
18372:Core/Src/bno055.c ****     return com_rslt;
18373:Core/Src/bno055.c **** }
 38615              		.loc 1 18373 1 view .LVU10852
 38616 0084 2046     		mov	r0, r4
 38617 0086 03B0     		add	sp, sp, #12
 38618              	.LCFI1043:
 38619              		.cfi_remember_state
 38620              		.cfi_def_cfa_offset 12
 38621              		@ sp needed
 38622 0088 30BD     		pop	{r4, r5, pc}
 38623              	.LVL4779:
 38624              	.L2725:
 38625              	.LCFI1044:
 38626              		.cfi_restore_state
18352:Core/Src/bno055.c ****                 }
 38627              		.loc 1 18352 30 view .LVU10853
 38628 008a 4FF0FF34 		mov	r4, #-1
 38629              	.LVL4780:
18352:Core/Src/bno055.c ****                 }
 38630              		.loc 1 18352 30 view .LVU10854
 38631 008e F6E7     		b	.L2720
 38632              	.LVL4781:
 38633              	.L2729:
18369:Core/Src/bno055.c ****     }
 38634              		.loc 1 18369 9 is_stmt 1 view .LVU10855
18369:Core/Src/bno055.c ****     }
 38635              		.loc 1 18369 21 is_stmt 0 view .LVU10856
 38636 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 38637              	.LVL4782:
18369:Core/Src/bno055.c ****     }
 38638              		.loc 1 18369 18 view .LVU10857
 38639 0094 54FA80F4 		uxtab	r4, r4, r0
 38640              	.LVL4783:
18369:Core/Src/bno055.c ****     }
 38641              		.loc 1 18369 18 view .LVU10858
 38642 0098 64B2     		sxtb	r4, r4
 38643              	.LVL4784:
18369:Core/Src/bno055.c ****     }
 38644              		.loc 1 18369 18 view .LVU10859
 38645 009a F3E7     		b	.L2719
ARM GAS  /tmp/ccO72alg.s 			page 1083


 38646              	.LVL4785:
 38647              	.L2722:
18315:Core/Src/bno055.c ****     }
 38648              		.loc 1 18315 16 view .LVU10860
 38649 009c 6FF07E04 		mvn	r4, #126
 38650 00a0 F0E7     		b	.L2719
 38651              	.L2731:
 38652 00a2 00BF     		.align	2
 38653              	.L2730:
 38654 00a4 00000000 		.word	.LANCHOR0
 38655              		.cfi_endproc
 38656              	.LFE262:
 38658              		.section	.text.bno055_get_gyro_highrate_z_thres,"ax",%progbits
 38659              		.align	1
 38660              		.global	bno055_get_gyro_highrate_z_thres
 38661              		.syntax unified
 38662              		.thumb
 38663              		.thumb_func
 38665              	bno055_get_gyro_highrate_z_thres:
 38666              	.LVL4786:
 38667              	.LFB263:
18374:Core/Src/bno055.c **** 
18375:Core/Src/bno055.c **** /*!
18376:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z threshold
18377:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18378:Core/Src/bno055.c ****  *
18379:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18380:Core/Src/bno055.c ****  *
18381:Core/Src/bno055.c ****  *  @return results of bus communication function
18382:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18383:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18384:Core/Src/bno055.c ****  *
18385:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18386:Core/Src/bno055.c ****  *  selection of gyro range
18387:Core/Src/bno055.c ****  *
18388:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18389:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18390:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18391:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18392:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18393:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18394:Core/Src/bno055.c ****  *
18395:Core/Src/bno055.c ****  */
18396:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_thres(u8 *gyro_highrate_z_thres_u8)
18397:Core/Src/bno055.c **** {
 38668              		.loc 1 18397 1 is_stmt 1 view -0
 38669              		.cfi_startproc
 38670              		@ args = 0, pretend = 0, frame = 8
 38671              		@ frame_needed = 0, uses_anonymous_args = 0
 38672              		.loc 1 18397 1 is_stmt 0 view .LVU10862
 38673 0000 30B5     		push	{r4, r5, lr}
 38674              	.LCFI1045:
 38675              		.cfi_def_cfa_offset 12
 38676              		.cfi_offset 4, -12
 38677              		.cfi_offset 5, -8
 38678              		.cfi_offset 14, -4
 38679 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccO72alg.s 			page 1084


 38680              	.LCFI1046:
 38681              		.cfi_def_cfa_offset 24
18398:Core/Src/bno055.c ****     /* Variable used to return value of
18399:Core/Src/bno055.c ****      * communication routine*/
18400:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38682              		.loc 1 18400 5 is_stmt 1 view .LVU10863
 38683              	.LVL4787:
18401:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38684              		.loc 1 18401 5 view .LVU10864
 38685              		.loc 1 18401 8 is_stmt 0 view .LVU10865
 38686 0004 0023     		movs	r3, #0
 38687 0006 8DF80730 		strb	r3, [sp, #7]
18402:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38688              		.loc 1 18402 5 is_stmt 1 view .LVU10866
 38689              	.LVL4788:
18403:Core/Src/bno055.c **** 
18404:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18405:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38690              		.loc 1 18405 5 view .LVU10867
 38691              		.loc 1 18405 18 is_stmt 0 view .LVU10868
 38692 000a 144B     		ldr	r3, .L2740
 38693 000c 1B68     		ldr	r3, [r3]
 38694              		.loc 1 18405 8 view .LVU10869
 38695 000e F3B1     		cbz	r3, .L2736
 38696 0010 0446     		mov	r4, r0
18406:Core/Src/bno055.c ****     {
18407:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18408:Core/Src/bno055.c ****     }
18409:Core/Src/bno055.c ****     else
18410:Core/Src/bno055.c ****     {
18411:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z threshold is
18412:Core/Src/bno055.c ****          * available in the page one*/
18413:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 38697              		.loc 1 18413 9 is_stmt 1 view .LVU10870
 38698              		.loc 1 18413 21 is_stmt 0 view .LVU10871
 38699 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38700              		.loc 1 18413 12 view .LVU10872
 38701 0014 012B     		cmp	r3, #1
 38702 0016 14D1     		bne	.L2739
 38703              	.LVL4789:
 38704              	.L2734:
18414:Core/Src/bno055.c ****         {
18415:Core/Src/bno055.c ****             /* Write page as one */
18416:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18417:Core/Src/bno055.c ****         }
18418:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 38705              		.loc 1 18418 53 discriminator 1 view .LVU10873
 38706 0018 104B     		ldr	r3, .L2740
 38707 001a 1B68     		ldr	r3, [r3]
 38708 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 38709              		.loc 1 18418 41 discriminator 1 view .LVU10874
 38710 001e 012B     		cmp	r3, #1
 38711 0020 18D1     		bne	.L2737
 38712              	.L2735:
18419:Core/Src/bno055.c ****         {
18420:Core/Src/bno055.c ****             /* Read the value of gyro highrate z threshold*/
18421:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
ARM GAS  /tmp/ccO72alg.s 			page 1085


 38713              		.loc 1 18421 13 is_stmt 1 view .LVU10875
 38714              		.loc 1 18421 32 is_stmt 0 view .LVU10876
 38715 0022 0E4B     		ldr	r3, .L2740
 38716 0024 1868     		ldr	r0, [r3]
 38717 0026 0569     		ldr	r5, [r0, #16]
 38718              		.loc 1 18421 24 view .LVU10877
 38719 0028 0123     		movs	r3, #1
 38720 002a 0DF10702 		add	r2, sp, #7
 38721 002e 1C21     		movs	r1, #28
 38722 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38723 0032 A847     		blx	r5
 38724              	.LVL4790:
18422:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18423:Core/Src/bno055.c ****                                                       &data_u8r,
18424:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18425:Core/Src/bno055.c ****             *gyro_highrate_z_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES)
 38725              		.loc 1 18425 13 is_stmt 1 view .LVU10878
 38726              		.loc 1 18425 41 is_stmt 0 view .LVU10879
 38727 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 38728 0038 03F01F03 		and	r3, r3, #31
 38729              		.loc 1 18425 39 view .LVU10880
 38730 003c 2370     		strb	r3, [r4]
 38731              	.LVL4791:
 38732              	.L2733:
18426:Core/Src/bno055.c ****         }
18427:Core/Src/bno055.c ****         else
18428:Core/Src/bno055.c ****         {
18429:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18430:Core/Src/bno055.c ****         }
18431:Core/Src/bno055.c ****     }
18432:Core/Src/bno055.c **** 
18433:Core/Src/bno055.c ****     return com_rslt;
18434:Core/Src/bno055.c **** }
 38733              		.loc 1 18434 1 view .LVU10881
 38734 003e 03B0     		add	sp, sp, #12
 38735              	.LCFI1047:
 38736              		.cfi_remember_state
 38737              		.cfi_def_cfa_offset 12
 38738              		@ sp needed
 38739 0040 30BD     		pop	{r4, r5, pc}
 38740              	.LVL4792:
 38741              	.L2739:
 38742              	.LCFI1048:
 38743              		.cfi_restore_state
18416:Core/Src/bno055.c ****         }
 38744              		.loc 1 18416 13 is_stmt 1 view .LVU10882
18416:Core/Src/bno055.c ****         }
 38745              		.loc 1 18416 23 is_stmt 0 view .LVU10883
 38746 0042 0120     		movs	r0, #1
 38747              	.LVL4793:
18416:Core/Src/bno055.c ****         }
 38748              		.loc 1 18416 23 view .LVU10884
 38749 0044 FFF7FEFF 		bl	bno055_write_page_id
 38750              	.LVL4794:
18418:Core/Src/bno055.c ****         {
 38751              		.loc 1 18418 9 is_stmt 1 view .LVU10885
18418:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 1086


 38752              		.loc 1 18418 12 is_stmt 0 view .LVU10886
 38753 0048 0028     		cmp	r0, #0
 38754 004a EAD0     		beq	.L2735
 38755 004c E4E7     		b	.L2734
 38756              	.LVL4795:
 38757              	.L2736:
18407:Core/Src/bno055.c ****     }
 38758              		.loc 1 18407 16 view .LVU10887
 38759 004e 6FF07E00 		mvn	r0, #126
 38760              	.LVL4796:
18407:Core/Src/bno055.c ****     }
 38761              		.loc 1 18407 16 view .LVU10888
 38762 0052 F4E7     		b	.L2733
 38763              	.LVL4797:
 38764              	.L2737:
18429:Core/Src/bno055.c ****         }
 38765              		.loc 1 18429 22 view .LVU10889
 38766 0054 4FF0FF30 		mov	r0, #-1
 38767 0058 F1E7     		b	.L2733
 38768              	.L2741:
 38769 005a 00BF     		.align	2
 38770              	.L2740:
 38771 005c 00000000 		.word	.LANCHOR0
 38772              		.cfi_endproc
 38773              	.LFE263:
 38775              		.section	.text.bno055_set_gyro_highrate_z_thres,"ax",%progbits
 38776              		.align	1
 38777              		.global	bno055_set_gyro_highrate_z_thres
 38778              		.syntax unified
 38779              		.thumb
 38780              		.thumb_func
 38782              	bno055_set_gyro_highrate_z_thres:
 38783              	.LVL4798:
 38784              	.LFB264:
18435:Core/Src/bno055.c **** 
18436:Core/Src/bno055.c **** /*!
18437:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z threshold
18438:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 0 to 4
18439:Core/Src/bno055.c ****  *
18440:Core/Src/bno055.c ****  *  @param gyro_highrate_z_thres_u8 : The value of gyro highrate z threshold
18441:Core/Src/bno055.c ****  *
18442:Core/Src/bno055.c ****  *  @return results of bus communication function
18443:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18444:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18445:Core/Src/bno055.c ****  *
18446:Core/Src/bno055.c ****  *  @note Gyro highrate threshold dependent on the
18447:Core/Src/bno055.c ****  *  selection of gyro range
18448:Core/Src/bno055.c ****  *
18449:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold       |     LSB
18450:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18451:Core/Src/bno055.c ****  *     2000           |    62.5dps      |   1LSB
18452:Core/Src/bno055.c ****  *     1000           |    31.25dps     |   1LSB
18453:Core/Src/bno055.c ****  *     500            |    15.625dps    |   1LSB
18454:Core/Src/bno055.c ****  *     125            |    7.8125dps    |   1LSB
18455:Core/Src/bno055.c ****  *
18456:Core/Src/bno055.c ****  */
18457:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_thres(u8 gyro_highrate_z_thres_u8)
ARM GAS  /tmp/ccO72alg.s 			page 1087


18458:Core/Src/bno055.c **** {
 38785              		.loc 1 18458 1 is_stmt 1 view -0
 38786              		.cfi_startproc
 38787              		@ args = 0, pretend = 0, frame = 8
 38788              		@ frame_needed = 0, uses_anonymous_args = 0
 38789              		.loc 1 18458 1 is_stmt 0 view .LVU10891
 38790 0000 30B5     		push	{r4, r5, lr}
 38791              	.LCFI1049:
 38792              		.cfi_def_cfa_offset 12
 38793              		.cfi_offset 4, -12
 38794              		.cfi_offset 5, -8
 38795              		.cfi_offset 14, -4
 38796 0002 83B0     		sub	sp, sp, #12
 38797              	.LCFI1050:
 38798              		.cfi_def_cfa_offset 24
18459:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38799              		.loc 1 18459 5 is_stmt 1 view .LVU10892
 38800              	.LVL4799:
18460:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38801              		.loc 1 18460 5 view .LVU10893
 38802              		.loc 1 18460 8 is_stmt 0 view .LVU10894
 38803 0004 0023     		movs	r3, #0
 38804 0006 8DF80730 		strb	r3, [sp, #7]
18461:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 38805              		.loc 1 18461 5 is_stmt 1 view .LVU10895
 38806              	.LVL4800:
18462:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 38807              		.loc 1 18462 5 view .LVU10896
 38808              		.loc 1 18462 8 is_stmt 0 view .LVU10897
 38809 000a 8DF80630 		strb	r3, [sp, #6]
18463:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 38810              		.loc 1 18463 5 is_stmt 1 view .LVU10898
 38811              	.LVL4801:
18464:Core/Src/bno055.c **** 
18465:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18466:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 38812              		.loc 1 18466 5 view .LVU10899
 38813              		.loc 1 18466 18 is_stmt 0 view .LVU10900
 38814 000e 294B     		ldr	r3, .L2754
 38815 0010 1B68     		ldr	r3, [r3]
 38816              		.loc 1 18466 8 view .LVU10901
 38817 0012 002B     		cmp	r3, #0
 38818 0014 4AD0     		beq	.L2746
 38819 0016 0546     		mov	r5, r0
18467:Core/Src/bno055.c ****     {
18468:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18469:Core/Src/bno055.c ****     }
18470:Core/Src/bno055.c ****     else
18471:Core/Src/bno055.c ****     {
18472:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18473:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18474:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18475:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 38820              		.loc 1 18475 9 is_stmt 1 view .LVU10902
 38821              		.loc 1 18475 19 is_stmt 0 view .LVU10903
 38822 0018 0DF10600 		add	r0, sp, #6
 38823              	.LVL4802:
ARM GAS  /tmp/ccO72alg.s 			page 1088


 38824              		.loc 1 18475 19 view .LVU10904
 38825 001c FFF7FEFF 		bl	bno055_get_operation_mode
 38826              	.LVL4803:
18476:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 38827              		.loc 1 18476 9 is_stmt 1 view .LVU10905
 38828              		.loc 1 18476 12 is_stmt 0 view .LVU10906
 38829 0020 0446     		mov	r4, r0
 38830 0022 90BB     		cbnz	r0, .L2747
18477:Core/Src/bno055.c ****         {
18478:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38831              		.loc 1 18478 13 is_stmt 1 view .LVU10907
 38832              		.loc 1 18478 32 is_stmt 0 view .LVU10908
 38833 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 38834              		.loc 1 18478 16 view .LVU10909
 38835 0028 1BB9     		cbnz	r3, .L2751
 38836              	.LVL4804:
 38837              	.L2745:
18479:Core/Src/bno055.c ****             {
18480:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18481:Core/Src/bno055.c ****             }
18482:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 38838              		.loc 1 18482 13 is_stmt 1 view .LVU10910
 38839              		.loc 1 18482 16 is_stmt 0 view .LVU10911
 38840 002a 44B1     		cbz	r4, .L2752
18483:Core/Src/bno055.c ****             {
18484:Core/Src/bno055.c ****                 /* Write page as one */
18485:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18486:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18487:Core/Src/bno055.c ****                 {
18488:Core/Src/bno055.c ****                     /* Write the value
18489:Core/Src/bno055.c ****                      * of gyro highrate z threshold*/
18490:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18491:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
18492:Core/Src/bno055.c ****                                                               &data_u8r,
18493:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18494:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18495:Core/Src/bno055.c ****                     {
18496:Core/Src/bno055.c ****                         data_u8r =
18497:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
18498:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18499:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
18500:Core/Src/bno055.c ****                                                                     &data_u8r,
18501:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18502:Core/Src/bno055.c ****                     }
18503:Core/Src/bno055.c ****                 }
18504:Core/Src/bno055.c ****                 else
18505:Core/Src/bno055.c ****                 {
18506:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18507:Core/Src/bno055.c ****                 }
18508:Core/Src/bno055.c ****             }
18509:Core/Src/bno055.c ****             else
18510:Core/Src/bno055.c ****             {
18511:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 38841              		.loc 1 18511 26 view .LVU10912
 38842 002c 4FF0FF34 		mov	r4, #-1
 38843              	.LVL4805:
 38844              		.loc 1 18511 26 view .LVU10913
ARM GAS  /tmp/ccO72alg.s 			page 1089


 38845 0030 2DE0     		b	.L2744
 38846              	.LVL4806:
 38847              	.L2751:
18480:Core/Src/bno055.c ****             }
 38848              		.loc 1 18480 17 is_stmt 1 view .LVU10914
18480:Core/Src/bno055.c ****             }
 38849              		.loc 1 18480 28 is_stmt 0 view .LVU10915
 38850 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 38851              	.LVL4807:
18480:Core/Src/bno055.c ****             }
 38852              		.loc 1 18480 25 view .LVU10916
 38853 0036 54FA80F4 		uxtab	r4, r4, r0
 38854 003a 64B2     		sxtb	r4, r4
 38855              	.LVL4808:
18480:Core/Src/bno055.c ****             }
 38856              		.loc 1 18480 25 view .LVU10917
 38857 003c F5E7     		b	.L2745
 38858              	.L2752:
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38859              		.loc 1 18485 17 is_stmt 1 view .LVU10918
18485:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 38860              		.loc 1 18485 30 is_stmt 0 view .LVU10919
 38861 003e 0120     		movs	r0, #1
 38862 0040 FFF7FEFF 		bl	bno055_write_page_id
 38863              	.LVL4809:
18486:Core/Src/bno055.c ****                 {
 38864              		.loc 1 18486 17 is_stmt 1 view .LVU10920
18486:Core/Src/bno055.c ****                 {
 38865              		.loc 1 18486 20 is_stmt 0 view .LVU10921
 38866 0044 48BB     		cbnz	r0, .L2749
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38867              		.loc 1 18490 21 is_stmt 1 view .LVU10922
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38868              		.loc 1 18490 40 is_stmt 0 view .LVU10923
 38869 0046 1B4B     		ldr	r3, .L2754
 38870 0048 1868     		ldr	r0, [r3]
 38871              	.LVL4810:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38872              		.loc 1 18490 40 view .LVU10924
 38873 004a 0469     		ldr	r4, [r0, #16]
 38874              	.LVL4811:
18490:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_THRES_REG,
 38875              		.loc 1 18490 32 view .LVU10925
 38876 004c 0123     		movs	r3, #1
 38877 004e 0DF10702 		add	r2, sp, #7
 38878 0052 1C21     		movs	r1, #28
 38879 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38880 0056 A047     		blx	r4
 38881              	.LVL4812:
18494:Core/Src/bno055.c ****                     {
 38882              		.loc 1 18494 21 is_stmt 1 view .LVU10926
18494:Core/Src/bno055.c ****                     {
 38883              		.loc 1 18494 24 is_stmt 0 view .LVU10927
 38884 0058 0446     		mov	r4, r0
 38885 005a C0B9     		cbnz	r0, .L2744
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 38886              		.loc 1 18496 25 is_stmt 1 view .LVU10928
ARM GAS  /tmp/ccO72alg.s 			page 1090


18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38887              		.loc 1 18497 29 is_stmt 0 view .LVU10929
 38888 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 38889              	.LVL4813:
18497:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 38890              		.loc 1 18497 29 view .LVU10930
 38891 0060 20F01F00 		bic	r0, r0, #31
 38892 0064 43B2     		sxtb	r3, r0
 38893 0066 05F01F00 		and	r0, r5, #31
 38894 006a 1843     		orrs	r0, r0, r3
18496:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_THRES, gyro_highra
 38895              		.loc 1 18496 34 view .LVU10931
 38896 006c 8DF80700 		strb	r0, [sp, #7]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38897              		.loc 1 18498 25 is_stmt 1 view .LVU10932
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38898              		.loc 1 18498 45 is_stmt 0 view .LVU10933
 38899 0070 104B     		ldr	r3, .L2754
 38900 0072 1868     		ldr	r0, [r3]
 38901 0074 C568     		ldr	r5, [r0, #12]
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38902              		.loc 1 18498 37 view .LVU10934
 38903 0076 0123     		movs	r3, #1
 38904 0078 0DF10702 		add	r2, sp, #7
 38905 007c 1C21     		movs	r1, #28
 38906 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 38907 0080 A847     		blx	r5
 38908              	.LVL4814:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38909              		.loc 1 18498 34 view .LVU10935
 38910 0082 54FA80F4 		uxtab	r4, r4, r0
 38911 0086 64B2     		sxtb	r4, r4
 38912              	.LVL4815:
18498:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_THRES_RE
 38913              		.loc 1 18498 34 view .LVU10936
 38914 0088 01E0     		b	.L2744
 38915              	.LVL4816:
 38916              	.L2747:
18512:Core/Src/bno055.c ****             }
18513:Core/Src/bno055.c ****         }
18514:Core/Src/bno055.c ****         else
18515:Core/Src/bno055.c ****         {
18516:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 38917              		.loc 1 18516 22 view .LVU10937
 38918 008a 4FF0FF34 		mov	r4, #-1
 38919              	.LVL4817:
 38920              	.L2744:
18517:Core/Src/bno055.c ****         }
18518:Core/Src/bno055.c ****     }
18519:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 38921              		.loc 1 18519 5 is_stmt 1 view .LVU10938
 38922              		.loc 1 18519 24 is_stmt 0 view .LVU10939
 38923 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 38924              		.loc 1 18519 8 view .LVU10940
 38925 0092 28B9     		cbnz	r0, .L2753
 38926              	.LVL4818:
 38927              	.L2743:
ARM GAS  /tmp/ccO72alg.s 			page 1091


18520:Core/Src/bno055.c ****     {
18521:Core/Src/bno055.c ****         /* set the operation mode of
18522:Core/Src/bno055.c ****          * previous operation mode*/
18523:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18524:Core/Src/bno055.c ****     }
18525:Core/Src/bno055.c **** 
18526:Core/Src/bno055.c ****     return com_rslt;
18527:Core/Src/bno055.c **** }
 38928              		.loc 1 18527 1 view .LVU10941
 38929 0094 2046     		mov	r0, r4
 38930 0096 03B0     		add	sp, sp, #12
 38931              	.LCFI1051:
 38932              		.cfi_remember_state
 38933              		.cfi_def_cfa_offset 12
 38934              		@ sp needed
 38935 0098 30BD     		pop	{r4, r5, pc}
 38936              	.LVL4819:
 38937              	.L2749:
 38938              	.LCFI1052:
 38939              		.cfi_restore_state
18506:Core/Src/bno055.c ****                 }
 38940              		.loc 1 18506 30 view .LVU10942
 38941 009a 4FF0FF34 		mov	r4, #-1
 38942              	.LVL4820:
18506:Core/Src/bno055.c ****                 }
 38943              		.loc 1 18506 30 view .LVU10943
 38944 009e F6E7     		b	.L2744
 38945              	.LVL4821:
 38946              	.L2753:
18523:Core/Src/bno055.c ****     }
 38947              		.loc 1 18523 9 is_stmt 1 view .LVU10944
18523:Core/Src/bno055.c ****     }
 38948              		.loc 1 18523 21 is_stmt 0 view .LVU10945
 38949 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 38950              	.LVL4822:
18523:Core/Src/bno055.c ****     }
 38951              		.loc 1 18523 18 view .LVU10946
 38952 00a4 54FA80F4 		uxtab	r4, r4, r0
 38953              	.LVL4823:
18523:Core/Src/bno055.c ****     }
 38954              		.loc 1 18523 18 view .LVU10947
 38955 00a8 64B2     		sxtb	r4, r4
 38956              	.LVL4824:
18523:Core/Src/bno055.c ****     }
 38957              		.loc 1 18523 18 view .LVU10948
 38958 00aa F3E7     		b	.L2743
 38959              	.LVL4825:
 38960              	.L2746:
18468:Core/Src/bno055.c ****     }
 38961              		.loc 1 18468 16 view .LVU10949
 38962 00ac 6FF07E04 		mvn	r4, #126
 38963 00b0 F0E7     		b	.L2743
 38964              	.L2755:
 38965 00b2 00BF     		.align	2
 38966              	.L2754:
 38967 00b4 00000000 		.word	.LANCHOR0
 38968              		.cfi_endproc
ARM GAS  /tmp/ccO72alg.s 			page 1092


 38969              	.LFE264:
 38971              		.section	.text.bno055_get_gyro_highrate_z_hyst,"ax",%progbits
 38972              		.align	1
 38973              		.global	bno055_get_gyro_highrate_z_hyst
 38974              		.syntax unified
 38975              		.thumb
 38976              		.thumb_func
 38978              	bno055_get_gyro_highrate_z_hyst:
 38979              	.LVL4826:
 38980              	.LFB265:
18528:Core/Src/bno055.c **** 
18529:Core/Src/bno055.c **** /*!
18530:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z hysteresis
18531:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18532:Core/Src/bno055.c ****  *
18533:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18534:Core/Src/bno055.c ****  *
18535:Core/Src/bno055.c ****  *  @return results of bus communication function
18536:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18537:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18538:Core/Src/bno055.c ****  *
18539:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18540:Core/Src/bno055.c ****  *
18541:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18542:Core/Src/bno055.c ****  *
18543:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18544:Core/Src/bno055.c ****  *
18545:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18546:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18547:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18548:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18549:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18550:Core/Src/bno055.c ****  */
18551:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_hyst(u8 *gyro_highrate_z_hyst_u8)
18552:Core/Src/bno055.c **** {
 38981              		.loc 1 18552 1 is_stmt 1 view -0
 38982              		.cfi_startproc
 38983              		@ args = 0, pretend = 0, frame = 8
 38984              		@ frame_needed = 0, uses_anonymous_args = 0
 38985              		.loc 1 18552 1 is_stmt 0 view .LVU10951
 38986 0000 30B5     		push	{r4, r5, lr}
 38987              	.LCFI1053:
 38988              		.cfi_def_cfa_offset 12
 38989              		.cfi_offset 4, -12
 38990              		.cfi_offset 5, -8
 38991              		.cfi_offset 14, -4
 38992 0002 83B0     		sub	sp, sp, #12
 38993              	.LCFI1054:
 38994              		.cfi_def_cfa_offset 24
18553:Core/Src/bno055.c ****     /* Variable used to return value of
18554:Core/Src/bno055.c ****      * communication routine*/
18555:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 38995              		.loc 1 18555 5 is_stmt 1 view .LVU10952
 38996              	.LVL4827:
18556:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 38997              		.loc 1 18556 5 view .LVU10953
 38998              		.loc 1 18556 8 is_stmt 0 view .LVU10954
ARM GAS  /tmp/ccO72alg.s 			page 1093


 38999 0004 0023     		movs	r3, #0
 39000 0006 8DF80730 		strb	r3, [sp, #7]
18557:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39001              		.loc 1 18557 5 is_stmt 1 view .LVU10955
 39002              	.LVL4828:
18558:Core/Src/bno055.c **** 
18559:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18560:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39003              		.loc 1 18560 5 view .LVU10956
 39004              		.loc 1 18560 18 is_stmt 0 view .LVU10957
 39005 000a 144B     		ldr	r3, .L2764
 39006 000c 1B68     		ldr	r3, [r3]
 39007              		.loc 1 18560 8 view .LVU10958
 39008 000e F3B1     		cbz	r3, .L2760
 39009 0010 0446     		mov	r4, r0
18561:Core/Src/bno055.c ****     {
18562:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18563:Core/Src/bno055.c ****     }
18564:Core/Src/bno055.c ****     else
18565:Core/Src/bno055.c ****     {
18566:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z hysteresis is
18567:Core/Src/bno055.c ****          * available in the page one*/
18568:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39010              		.loc 1 18568 9 is_stmt 1 view .LVU10959
 39011              		.loc 1 18568 21 is_stmt 0 view .LVU10960
 39012 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39013              		.loc 1 18568 12 view .LVU10961
 39014 0014 012B     		cmp	r3, #1
 39015 0016 14D1     		bne	.L2763
 39016              	.LVL4829:
 39017              	.L2758:
18569:Core/Src/bno055.c ****         {
18570:Core/Src/bno055.c ****             /* Write page as one */
18571:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18572:Core/Src/bno055.c ****         }
18573:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39018              		.loc 1 18573 53 discriminator 1 view .LVU10962
 39019 0018 104B     		ldr	r3, .L2764
 39020 001a 1B68     		ldr	r3, [r3]
 39021 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39022              		.loc 1 18573 41 discriminator 1 view .LVU10963
 39023 001e 012B     		cmp	r3, #1
 39024 0020 18D1     		bne	.L2761
 39025              	.L2759:
18574:Core/Src/bno055.c ****         {
18575:Core/Src/bno055.c ****             /* Read the value of gyro highrate z hysteresis*/
18576:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39026              		.loc 1 18576 13 is_stmt 1 view .LVU10964
 39027              		.loc 1 18576 32 is_stmt 0 view .LVU10965
 39028 0022 0E4B     		ldr	r3, .L2764
 39029 0024 1868     		ldr	r0, [r3]
 39030 0026 0569     		ldr	r5, [r0, #16]
 39031              		.loc 1 18576 24 view .LVU10966
 39032 0028 0123     		movs	r3, #1
 39033 002a 0DF10702 		add	r2, sp, #7
 39034 002e 1C21     		movs	r1, #28
 39035 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
ARM GAS  /tmp/ccO72alg.s 			page 1094


 39036 0032 A847     		blx	r5
 39037              	.LVL4830:
18577:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18578:Core/Src/bno055.c ****                                                       &data_u8r,
18579:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18580:Core/Src/bno055.c ****             *gyro_highrate_z_hyst_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST);
 39038              		.loc 1 18580 13 is_stmt 1 view .LVU10967
 39039              		.loc 1 18580 40 is_stmt 0 view .LVU10968
 39040 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39041 0038 C3F34113 		ubfx	r3, r3, #5, #2
 39042              		.loc 1 18580 38 view .LVU10969
 39043 003c 2370     		strb	r3, [r4]
 39044              	.LVL4831:
 39045              	.L2757:
18581:Core/Src/bno055.c ****         }
18582:Core/Src/bno055.c ****         else
18583:Core/Src/bno055.c ****         {
18584:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18585:Core/Src/bno055.c ****         }
18586:Core/Src/bno055.c ****     }
18587:Core/Src/bno055.c **** 
18588:Core/Src/bno055.c ****     return com_rslt;
18589:Core/Src/bno055.c **** }
 39046              		.loc 1 18589 1 view .LVU10970
 39047 003e 03B0     		add	sp, sp, #12
 39048              	.LCFI1055:
 39049              		.cfi_remember_state
 39050              		.cfi_def_cfa_offset 12
 39051              		@ sp needed
 39052 0040 30BD     		pop	{r4, r5, pc}
 39053              	.LVL4832:
 39054              	.L2763:
 39055              	.LCFI1056:
 39056              		.cfi_restore_state
18571:Core/Src/bno055.c ****         }
 39057              		.loc 1 18571 13 is_stmt 1 view .LVU10971
18571:Core/Src/bno055.c ****         }
 39058              		.loc 1 18571 23 is_stmt 0 view .LVU10972
 39059 0042 0120     		movs	r0, #1
 39060              	.LVL4833:
18571:Core/Src/bno055.c ****         }
 39061              		.loc 1 18571 23 view .LVU10973
 39062 0044 FFF7FEFF 		bl	bno055_write_page_id
 39063              	.LVL4834:
18573:Core/Src/bno055.c ****         {
 39064              		.loc 1 18573 9 is_stmt 1 view .LVU10974
18573:Core/Src/bno055.c ****         {
 39065              		.loc 1 18573 12 is_stmt 0 view .LVU10975
 39066 0048 0028     		cmp	r0, #0
 39067 004a EAD0     		beq	.L2759
 39068 004c E4E7     		b	.L2758
 39069              	.LVL4835:
 39070              	.L2760:
18562:Core/Src/bno055.c ****     }
 39071              		.loc 1 18562 16 view .LVU10976
 39072 004e 6FF07E00 		mvn	r0, #126
 39073              	.LVL4836:
ARM GAS  /tmp/ccO72alg.s 			page 1095


18562:Core/Src/bno055.c ****     }
 39074              		.loc 1 18562 16 view .LVU10977
 39075 0052 F4E7     		b	.L2757
 39076              	.LVL4837:
 39077              	.L2761:
18584:Core/Src/bno055.c ****         }
 39078              		.loc 1 18584 22 view .LVU10978
 39079 0054 4FF0FF30 		mov	r0, #-1
 39080 0058 F1E7     		b	.L2757
 39081              	.L2765:
 39082 005a 00BF     		.align	2
 39083              	.L2764:
 39084 005c 00000000 		.word	.LANCHOR0
 39085              		.cfi_endproc
 39086              	.LFE265:
 39088              		.section	.text.bno055_set_gyro_highrate_z_hyst,"ax",%progbits
 39089              		.align	1
 39090              		.global	bno055_set_gyro_highrate_z_hyst
 39091              		.syntax unified
 39092              		.thumb
 39093              		.thumb_func
 39095              	bno055_set_gyro_highrate_z_hyst:
 39096              	.LVL4838:
 39097              	.LFB266:
18590:Core/Src/bno055.c **** 
18591:Core/Src/bno055.c **** /*!
18592:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z hysteresis
18593:Core/Src/bno055.c ****  *  from page one register from 0x1C bit 5 to 6
18594:Core/Src/bno055.c ****  *
18595:Core/Src/bno055.c ****  *  @param gyro_highrate_z_hyst_u8 : The value of gyro highrate z hysteresis
18596:Core/Src/bno055.c ****  *
18597:Core/Src/bno055.c ****  *  @return results of bus communication function
18598:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18599:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18600:Core/Src/bno055.c ****  *
18601:Core/Src/bno055.c ****  *  @note Gyro high rate hysteresis calculated by
18602:Core/Src/bno055.c ****  *
18603:Core/Src/bno055.c ****  *  using this (255 + 256 * gyro_highrate_z_hyst_u8) *4 LSB
18604:Core/Src/bno055.c ****  *
18605:Core/Src/bno055.c ****  *  The high rate value scales with the range setting
18606:Core/Src/bno055.c ****  *
18607:Core/Src/bno055.c ****  *  gyro_range_u8     |  hysteresis     |     LSB
18608:Core/Src/bno055.c ****  * -----------------  | -------------   | ---------
18609:Core/Src/bno055.c ****  *     2000           |    62.26dps     |   1LSB
18610:Core/Src/bno055.c ****  *     1000           |    31.13dps     |   1LSB
18611:Core/Src/bno055.c ****  *     500            |    15.56dps     |   1LSB
18612:Core/Src/bno055.c ****  */
18613:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_hyst(u8 gyro_highrate_z_hyst_u8)
18614:Core/Src/bno055.c **** {
 39098              		.loc 1 18614 1 is_stmt 1 view -0
 39099              		.cfi_startproc
 39100              		@ args = 0, pretend = 0, frame = 8
 39101              		@ frame_needed = 0, uses_anonymous_args = 0
 39102              		.loc 1 18614 1 is_stmt 0 view .LVU10980
 39103 0000 30B5     		push	{r4, r5, lr}
 39104              	.LCFI1057:
 39105              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccO72alg.s 			page 1096


 39106              		.cfi_offset 4, -12
 39107              		.cfi_offset 5, -8
 39108              		.cfi_offset 14, -4
 39109 0002 83B0     		sub	sp, sp, #12
 39110              	.LCFI1058:
 39111              		.cfi_def_cfa_offset 24
18615:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39112              		.loc 1 18615 5 is_stmt 1 view .LVU10981
 39113              	.LVL4839:
18616:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39114              		.loc 1 18616 5 view .LVU10982
 39115              		.loc 1 18616 8 is_stmt 0 view .LVU10983
 39116 0004 0023     		movs	r3, #0
 39117 0006 8DF80730 		strb	r3, [sp, #7]
18617:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39118              		.loc 1 18617 5 is_stmt 1 view .LVU10984
 39119              	.LVL4840:
18618:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39120              		.loc 1 18618 5 view .LVU10985
 39121              		.loc 1 18618 8 is_stmt 0 view .LVU10986
 39122 000a 8DF80630 		strb	r3, [sp, #6]
18619:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39123              		.loc 1 18619 5 is_stmt 1 view .LVU10987
 39124              	.LVL4841:
18620:Core/Src/bno055.c **** 
18621:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18622:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39125              		.loc 1 18622 5 view .LVU10988
 39126              		.loc 1 18622 18 is_stmt 0 view .LVU10989
 39127 000e 2A4B     		ldr	r3, .L2778
 39128 0010 1B68     		ldr	r3, [r3]
 39129              		.loc 1 18622 8 view .LVU10990
 39130 0012 002B     		cmp	r3, #0
 39131 0014 4CD0     		beq	.L2770
 39132 0016 0546     		mov	r5, r0
18623:Core/Src/bno055.c ****     {
18624:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18625:Core/Src/bno055.c ****     }
18626:Core/Src/bno055.c ****     else
18627:Core/Src/bno055.c ****     {
18628:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18629:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18630:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18631:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39133              		.loc 1 18631 9 is_stmt 1 view .LVU10991
 39134              		.loc 1 18631 19 is_stmt 0 view .LVU10992
 39135 0018 0DF10600 		add	r0, sp, #6
 39136              	.LVL4842:
 39137              		.loc 1 18631 19 view .LVU10993
 39138 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39139              	.LVL4843:
18632:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39140              		.loc 1 18632 9 is_stmt 1 view .LVU10994
 39141              		.loc 1 18632 12 is_stmt 0 view .LVU10995
 39142 0020 0446     		mov	r4, r0
 39143 0022 0028     		cmp	r0, #0
 39144 0024 33D1     		bne	.L2771
ARM GAS  /tmp/ccO72alg.s 			page 1097


18633:Core/Src/bno055.c ****         {
18634:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39145              		.loc 1 18634 13 is_stmt 1 view .LVU10996
 39146              		.loc 1 18634 32 is_stmt 0 view .LVU10997
 39147 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39148              		.loc 1 18634 16 view .LVU10998
 39149 002a 1BB9     		cbnz	r3, .L2775
 39150              	.LVL4844:
 39151              	.L2769:
18635:Core/Src/bno055.c ****             {
18636:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18637:Core/Src/bno055.c ****             }
18638:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39152              		.loc 1 18638 13 is_stmt 1 view .LVU10999
 39153              		.loc 1 18638 16 is_stmt 0 view .LVU11000
 39154 002c 44B1     		cbz	r4, .L2776
18639:Core/Src/bno055.c ****             {
18640:Core/Src/bno055.c ****                 /* Write page as one */
18641:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18642:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18643:Core/Src/bno055.c ****                 {
18644:Core/Src/bno055.c ****                     /* Write the value
18645:Core/Src/bno055.c ****                      * of gyro highrate z hysteresis*/
18646:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18647:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
18648:Core/Src/bno055.c ****                                                               &data_u8r,
18649:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18650:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18651:Core/Src/bno055.c ****                     {
18652:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_HYST, gyro_
18653:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18654:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
18655:Core/Src/bno055.c ****                                                                     &data_u8r,
18656:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18657:Core/Src/bno055.c ****                     }
18658:Core/Src/bno055.c ****                 }
18659:Core/Src/bno055.c ****                 else
18660:Core/Src/bno055.c ****                 {
18661:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18662:Core/Src/bno055.c ****                 }
18663:Core/Src/bno055.c ****             }
18664:Core/Src/bno055.c ****             else
18665:Core/Src/bno055.c ****             {
18666:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39155              		.loc 1 18666 26 view .LVU11001
 39156 002e 4FF0FF34 		mov	r4, #-1
 39157              	.LVL4845:
 39158              		.loc 1 18666 26 view .LVU11002
 39159 0032 2EE0     		b	.L2768
 39160              	.LVL4846:
 39161              	.L2775:
18636:Core/Src/bno055.c ****             }
 39162              		.loc 1 18636 17 is_stmt 1 view .LVU11003
18636:Core/Src/bno055.c ****             }
 39163              		.loc 1 18636 28 is_stmt 0 view .LVU11004
 39164 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 39165              	.LVL4847:
ARM GAS  /tmp/ccO72alg.s 			page 1098


18636:Core/Src/bno055.c ****             }
 39166              		.loc 1 18636 25 view .LVU11005
 39167 0038 54FA80F4 		uxtab	r4, r4, r0
 39168 003c 64B2     		sxtb	r4, r4
 39169              	.LVL4848:
18636:Core/Src/bno055.c ****             }
 39170              		.loc 1 18636 25 view .LVU11006
 39171 003e F5E7     		b	.L2769
 39172              	.L2776:
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39173              		.loc 1 18641 17 is_stmt 1 view .LVU11007
18641:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39174              		.loc 1 18641 30 is_stmt 0 view .LVU11008
 39175 0040 0120     		movs	r0, #1
 39176 0042 FFF7FEFF 		bl	bno055_write_page_id
 39177              	.LVL4849:
18642:Core/Src/bno055.c ****                 {
 39178              		.loc 1 18642 17 is_stmt 1 view .LVU11009
18642:Core/Src/bno055.c ****                 {
 39179              		.loc 1 18642 20 is_stmt 0 view .LVU11010
 39180 0046 50BB     		cbnz	r0, .L2773
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39181              		.loc 1 18646 21 is_stmt 1 view .LVU11011
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39182              		.loc 1 18646 40 is_stmt 0 view .LVU11012
 39183 0048 1B4B     		ldr	r3, .L2778
 39184 004a 1868     		ldr	r0, [r3]
 39185              	.LVL4850:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39186              		.loc 1 18646 40 view .LVU11013
 39187 004c 0469     		ldr	r4, [r0, #16]
 39188              	.LVL4851:
18646:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_HYST_REG,
 39189              		.loc 1 18646 32 view .LVU11014
 39190 004e 0123     		movs	r3, #1
 39191 0050 0DF10702 		add	r2, sp, #7
 39192 0054 1C21     		movs	r1, #28
 39193 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39194 0058 A047     		blx	r4
 39195              	.LVL4852:
18650:Core/Src/bno055.c ****                     {
 39196              		.loc 1 18650 21 is_stmt 1 view .LVU11015
18650:Core/Src/bno055.c ****                     {
 39197              		.loc 1 18650 24 is_stmt 0 view .LVU11016
 39198 005a 0446     		mov	r4, r0
 39199 005c C8B9     		cbnz	r0, .L2768
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39200              		.loc 1 18652 25 is_stmt 1 view .LVU11017
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39201              		.loc 1 18652 36 is_stmt 0 view .LVU11018
 39202 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 39203              	.LVL4853:
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39204              		.loc 1 18652 36 view .LVU11019
 39205 0062 20F06000 		bic	r0, r0, #96
 39206 0066 43B2     		sxtb	r3, r0
 39207 0068 6801     		lsls	r0, r5, #5
ARM GAS  /tmp/ccO72alg.s 			page 1099


 39208 006a 00F06000 		and	r0, r0, #96
 39209 006e 1843     		orrs	r0, r0, r3
18652:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39210              		.loc 1 18652 34 view .LVU11020
 39211 0070 8DF80700 		strb	r0, [sp, #7]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39212              		.loc 1 18653 25 is_stmt 1 view .LVU11021
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39213              		.loc 1 18653 45 is_stmt 0 view .LVU11022
 39214 0074 104B     		ldr	r3, .L2778
 39215 0076 1868     		ldr	r0, [r3]
 39216 0078 C568     		ldr	r5, [r0, #12]
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39217              		.loc 1 18653 37 view .LVU11023
 39218 007a 0123     		movs	r3, #1
 39219 007c 0DF10702 		add	r2, sp, #7
 39220 0080 1C21     		movs	r1, #28
 39221 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39222 0084 A847     		blx	r5
 39223              	.LVL4854:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39224              		.loc 1 18653 34 view .LVU11024
 39225 0086 54FA80F4 		uxtab	r4, r4, r0
 39226 008a 64B2     		sxtb	r4, r4
 39227              	.LVL4855:
18653:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_HYST_REG
 39228              		.loc 1 18653 34 view .LVU11025
 39229 008c 01E0     		b	.L2768
 39230              	.LVL4856:
 39231              	.L2771:
18667:Core/Src/bno055.c ****             }
18668:Core/Src/bno055.c ****         }
18669:Core/Src/bno055.c ****         else
18670:Core/Src/bno055.c ****         {
18671:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39232              		.loc 1 18671 22 view .LVU11026
 39233 008e 4FF0FF34 		mov	r4, #-1
 39234              	.LVL4857:
 39235              	.L2768:
18672:Core/Src/bno055.c ****         }
18673:Core/Src/bno055.c ****     }
18674:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39236              		.loc 1 18674 5 is_stmt 1 view .LVU11027
 39237              		.loc 1 18674 24 is_stmt 0 view .LVU11028
 39238 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39239              		.loc 1 18674 8 view .LVU11029
 39240 0096 28B9     		cbnz	r0, .L2777
 39241              	.LVL4858:
 39242              	.L2767:
18675:Core/Src/bno055.c ****     {
18676:Core/Src/bno055.c ****         /* set the operation mode of
18677:Core/Src/bno055.c ****          * previous operation mode*/
18678:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18679:Core/Src/bno055.c ****     }
18680:Core/Src/bno055.c **** 
18681:Core/Src/bno055.c ****     return com_rslt;
18682:Core/Src/bno055.c **** }
ARM GAS  /tmp/ccO72alg.s 			page 1100


 39243              		.loc 1 18682 1 view .LVU11030
 39244 0098 2046     		mov	r0, r4
 39245 009a 03B0     		add	sp, sp, #12
 39246              	.LCFI1059:
 39247              		.cfi_remember_state
 39248              		.cfi_def_cfa_offset 12
 39249              		@ sp needed
 39250 009c 30BD     		pop	{r4, r5, pc}
 39251              	.LVL4859:
 39252              	.L2773:
 39253              	.LCFI1060:
 39254              		.cfi_restore_state
18661:Core/Src/bno055.c ****                 }
 39255              		.loc 1 18661 30 view .LVU11031
 39256 009e 4FF0FF34 		mov	r4, #-1
 39257              	.LVL4860:
18661:Core/Src/bno055.c ****                 }
 39258              		.loc 1 18661 30 view .LVU11032
 39259 00a2 F6E7     		b	.L2768
 39260              	.LVL4861:
 39261              	.L2777:
18678:Core/Src/bno055.c ****     }
 39262              		.loc 1 18678 9 is_stmt 1 view .LVU11033
18678:Core/Src/bno055.c ****     }
 39263              		.loc 1 18678 21 is_stmt 0 view .LVU11034
 39264 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 39265              	.LVL4862:
18678:Core/Src/bno055.c ****     }
 39266              		.loc 1 18678 18 view .LVU11035
 39267 00a8 54FA80F4 		uxtab	r4, r4, r0
 39268              	.LVL4863:
18678:Core/Src/bno055.c ****     }
 39269              		.loc 1 18678 18 view .LVU11036
 39270 00ac 64B2     		sxtb	r4, r4
 39271              	.LVL4864:
18678:Core/Src/bno055.c ****     }
 39272              		.loc 1 18678 18 view .LVU11037
 39273 00ae F3E7     		b	.L2767
 39274              	.LVL4865:
 39275              	.L2770:
18624:Core/Src/bno055.c ****     }
 39276              		.loc 1 18624 16 view .LVU11038
 39277 00b0 6FF07E04 		mvn	r4, #126
 39278 00b4 F0E7     		b	.L2767
 39279              	.L2779:
 39280 00b6 00BF     		.align	2
 39281              	.L2778:
 39282 00b8 00000000 		.word	.LANCHOR0
 39283              		.cfi_endproc
 39284              	.LFE266:
 39286              		.section	.text.bno055_get_gyro_highrate_z_durn,"ax",%progbits
 39287              		.align	1
 39288              		.global	bno055_get_gyro_highrate_z_durn
 39289              		.syntax unified
 39290              		.thumb
 39291              		.thumb_func
 39293              	bno055_get_gyro_highrate_z_durn:
ARM GAS  /tmp/ccO72alg.s 			page 1101


 39294              	.LVL4866:
 39295              	.LFB267:
18683:Core/Src/bno055.c **** 
18684:Core/Src/bno055.c **** /*!
18685:Core/Src/bno055.c ****  *  @brief This API used to read gyro highrate z duration
18686:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18687:Core/Src/bno055.c ****  *
18688:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18689:Core/Src/bno055.c ****  *
18690:Core/Src/bno055.c ****  *  @return results of bus communication function
18691:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18692:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18693:Core/Src/bno055.c ****  *
18694:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18695:Core/Src/bno055.c ****  *
18696:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18697:Core/Src/bno055.c ****  */
18698:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_highrate_z_durn(u8 *gyro_highrate_z_durn_u8)
18699:Core/Src/bno055.c **** {
 39296              		.loc 1 18699 1 is_stmt 1 view -0
 39297              		.cfi_startproc
 39298              		@ args = 0, pretend = 0, frame = 8
 39299              		@ frame_needed = 0, uses_anonymous_args = 0
 39300              		.loc 1 18699 1 is_stmt 0 view .LVU11040
 39301 0000 70B5     		push	{r4, r5, r6, lr}
 39302              	.LCFI1061:
 39303              		.cfi_def_cfa_offset 16
 39304              		.cfi_offset 4, -16
 39305              		.cfi_offset 5, -12
 39306              		.cfi_offset 6, -8
 39307              		.cfi_offset 14, -4
 39308 0002 82B0     		sub	sp, sp, #8
 39309              	.LCFI1062:
 39310              		.cfi_def_cfa_offset 24
18700:Core/Src/bno055.c ****     /* Variable used to return value of
18701:Core/Src/bno055.c ****      * communication routine*/
18702:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39311              		.loc 1 18702 5 is_stmt 1 view .LVU11041
 39312              	.LVL4867:
18703:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39313              		.loc 1 18703 5 view .LVU11042
 39314              		.loc 1 18703 8 is_stmt 0 view .LVU11043
 39315 0004 0023     		movs	r3, #0
 39316 0006 8DF80730 		strb	r3, [sp, #7]
18704:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39317              		.loc 1 18704 5 is_stmt 1 view .LVU11044
 39318              	.LVL4868:
18705:Core/Src/bno055.c **** 
18706:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18707:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39319              		.loc 1 18707 5 view .LVU11045
 39320              		.loc 1 18707 18 is_stmt 0 view .LVU11046
 39321 000a 134B     		ldr	r3, .L2788
 39322 000c 1B68     		ldr	r3, [r3]
 39323              		.loc 1 18707 8 view .LVU11047
 39324 000e E3B1     		cbz	r3, .L2784
 39325 0010 0546     		mov	r5, r0
ARM GAS  /tmp/ccO72alg.s 			page 1102


18708:Core/Src/bno055.c ****     {
18709:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18710:Core/Src/bno055.c ****     }
18711:Core/Src/bno055.c ****     else
18712:Core/Src/bno055.c ****     {
18713:Core/Src/bno055.c ****         /*condition check for page, gyro highrate z duration is
18714:Core/Src/bno055.c ****          * available in the page one*/
18715:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39326              		.loc 1 18715 9 is_stmt 1 view .LVU11048
 39327              		.loc 1 18715 21 is_stmt 0 view .LVU11049
 39328 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39329              		.loc 1 18715 12 view .LVU11050
 39330 0014 012B     		cmp	r3, #1
 39331 0016 12D1     		bne	.L2787
 39332              	.LVL4869:
 39333              	.L2782:
18716:Core/Src/bno055.c ****         {
18717:Core/Src/bno055.c ****             /* Write page as one */
18718:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18719:Core/Src/bno055.c ****         }
18720:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39334              		.loc 1 18720 53 discriminator 1 view .LVU11051
 39335 0018 0F4B     		ldr	r3, .L2788
 39336 001a 1B68     		ldr	r3, [r3]
 39337 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39338              		.loc 1 18720 41 discriminator 1 view .LVU11052
 39339 001e 012B     		cmp	r3, #1
 39340 0020 16D1     		bne	.L2785
 39341              	.L2783:
18721:Core/Src/bno055.c ****         {
18722:Core/Src/bno055.c ****             /* Read the value of gyro highrate z duration*/
18723:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39342              		.loc 1 18723 13 is_stmt 1 view .LVU11053
 39343              		.loc 1 18723 32 is_stmt 0 view .LVU11054
 39344 0022 0D4B     		ldr	r3, .L2788
 39345 0024 1C68     		ldr	r4, [r3]
 39346 0026 2669     		ldr	r6, [r4, #16]
 39347              		.loc 1 18723 24 view .LVU11055
 39348 0028 0123     		movs	r3, #1
 39349 002a 0DF10702 		add	r2, sp, #7
 39350 002e 1D21     		movs	r1, #29
 39351 0030 607A     		ldrb	r0, [r4, #9]	@ zero_extendqisi2
 39352 0032 B047     		blx	r6
 39353              	.LVL4870:
18724:Core/Src/bno055.c ****                                                       BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18725:Core/Src/bno055.c ****                                                       &data_u8r,
18726:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18727:Core/Src/bno055.c ****             *gyro_highrate_z_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN);
 39354              		.loc 1 18727 13 is_stmt 1 view .LVU11056
 39355              		.loc 1 18727 38 is_stmt 0 view .LVU11057
 39356 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39357 0038 2B70     		strb	r3, [r5]
 39358              	.LVL4871:
 39359              	.L2781:
18728:Core/Src/bno055.c ****         }
18729:Core/Src/bno055.c ****         else
18730:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 1103


18731:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18732:Core/Src/bno055.c ****         }
18733:Core/Src/bno055.c ****     }
18734:Core/Src/bno055.c **** 
18735:Core/Src/bno055.c ****     return com_rslt;
18736:Core/Src/bno055.c **** }
 39360              		.loc 1 18736 1 view .LVU11058
 39361 003a 02B0     		add	sp, sp, #8
 39362              	.LCFI1063:
 39363              		.cfi_remember_state
 39364              		.cfi_def_cfa_offset 16
 39365              		@ sp needed
 39366 003c 70BD     		pop	{r4, r5, r6, pc}
 39367              	.LVL4872:
 39368              	.L2787:
 39369              	.LCFI1064:
 39370              		.cfi_restore_state
18718:Core/Src/bno055.c ****         }
 39371              		.loc 1 18718 13 is_stmt 1 view .LVU11059
18718:Core/Src/bno055.c ****         }
 39372              		.loc 1 18718 23 is_stmt 0 view .LVU11060
 39373 003e 0120     		movs	r0, #1
 39374              	.LVL4873:
18718:Core/Src/bno055.c ****         }
 39375              		.loc 1 18718 23 view .LVU11061
 39376 0040 FFF7FEFF 		bl	bno055_write_page_id
 39377              	.LVL4874:
18720:Core/Src/bno055.c ****         {
 39378              		.loc 1 18720 9 is_stmt 1 view .LVU11062
18720:Core/Src/bno055.c ****         {
 39379              		.loc 1 18720 12 is_stmt 0 view .LVU11063
 39380 0044 0028     		cmp	r0, #0
 39381 0046 ECD0     		beq	.L2783
 39382 0048 E6E7     		b	.L2782
 39383              	.LVL4875:
 39384              	.L2784:
18709:Core/Src/bno055.c ****     }
 39385              		.loc 1 18709 16 view .LVU11064
 39386 004a 6FF07E00 		mvn	r0, #126
 39387              	.LVL4876:
18709:Core/Src/bno055.c ****     }
 39388              		.loc 1 18709 16 view .LVU11065
 39389 004e F4E7     		b	.L2781
 39390              	.LVL4877:
 39391              	.L2785:
18731:Core/Src/bno055.c ****         }
 39392              		.loc 1 18731 22 view .LVU11066
 39393 0050 4FF0FF30 		mov	r0, #-1
 39394 0054 F1E7     		b	.L2781
 39395              	.L2789:
 39396 0056 00BF     		.align	2
 39397              	.L2788:
 39398 0058 00000000 		.word	.LANCHOR0
 39399              		.cfi_endproc
 39400              	.LFE267:
 39402              		.section	.text.bno055_set_gyro_highrate_z_durn,"ax",%progbits
 39403              		.align	1
ARM GAS  /tmp/ccO72alg.s 			page 1104


 39404              		.global	bno055_set_gyro_highrate_z_durn
 39405              		.syntax unified
 39406              		.thumb
 39407              		.thumb_func
 39409              	bno055_set_gyro_highrate_z_durn:
 39410              	.LVL4878:
 39411              	.LFB268:
18737:Core/Src/bno055.c **** 
18738:Core/Src/bno055.c **** /*!
18739:Core/Src/bno055.c ****  *  @brief This API used to write gyro highrate z duration
18740:Core/Src/bno055.c ****  *  from page one register from 0x1D bit 0 to 7
18741:Core/Src/bno055.c ****  *
18742:Core/Src/bno055.c ****  *  @param gyro_highrate_z_durn_u8 : The value of gyro highrate z duration
18743:Core/Src/bno055.c ****  *
18744:Core/Src/bno055.c ****  *  @return results of bus communication function
18745:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18746:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18747:Core/Src/bno055.c ****  *
18748:Core/Src/bno055.c ****  *  @note Gyro highrate duration calculate by using the formula
18749:Core/Src/bno055.c ****  *
18750:Core/Src/bno055.c ****  *  (1 + gyro_highrate_z_durn_u8)*2.5ms
18751:Core/Src/bno055.c ****  */
18752:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_highrate_z_durn(u8 gyro_highrate_z_durn_u8)
18753:Core/Src/bno055.c **** {
 39412              		.loc 1 18753 1 is_stmt 1 view -0
 39413              		.cfi_startproc
 39414              		@ args = 0, pretend = 0, frame = 8
 39415              		@ frame_needed = 0, uses_anonymous_args = 0
 39416              		.loc 1 18753 1 is_stmt 0 view .LVU11068
 39417 0000 30B5     		push	{r4, r5, lr}
 39418              	.LCFI1065:
 39419              		.cfi_def_cfa_offset 12
 39420              		.cfi_offset 4, -12
 39421              		.cfi_offset 5, -8
 39422              		.cfi_offset 14, -4
 39423 0002 83B0     		sub	sp, sp, #12
 39424              	.LCFI1066:
 39425              		.cfi_def_cfa_offset 24
18754:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39426              		.loc 1 18754 5 is_stmt 1 view .LVU11069
 39427              	.LVL4879:
18755:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39428              		.loc 1 18755 5 view .LVU11070
 39429              		.loc 1 18755 8 is_stmt 0 view .LVU11071
 39430 0004 0023     		movs	r3, #0
 39431 0006 8DF80730 		strb	r3, [sp, #7]
18756:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39432              		.loc 1 18756 5 is_stmt 1 view .LVU11072
 39433              	.LVL4880:
18757:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39434              		.loc 1 18757 5 view .LVU11073
18758:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39435              		.loc 1 18758 5 view .LVU11074
 39436              		.loc 1 18758 8 is_stmt 0 view .LVU11075
 39437 000a 8DF80630 		strb	r3, [sp, #6]
18759:Core/Src/bno055.c **** 
18760:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
ARM GAS  /tmp/ccO72alg.s 			page 1105


18761:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39438              		.loc 1 18761 5 is_stmt 1 view .LVU11076
 39439              		.loc 1 18761 18 is_stmt 0 view .LVU11077
 39440 000e 254B     		ldr	r3, .L2802
 39441 0010 1B68     		ldr	r3, [r3]
 39442              		.loc 1 18761 8 view .LVU11078
 39443 0012 002B     		cmp	r3, #0
 39444 0014 42D0     		beq	.L2794
 39445 0016 0546     		mov	r5, r0
18762:Core/Src/bno055.c ****     {
18763:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18764:Core/Src/bno055.c ****     }
18765:Core/Src/bno055.c ****     else
18766:Core/Src/bno055.c ****     {
18767:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18768:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18769:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18770:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39446              		.loc 1 18770 9 is_stmt 1 view .LVU11079
 39447              		.loc 1 18770 19 is_stmt 0 view .LVU11080
 39448 0018 0DF10600 		add	r0, sp, #6
 39449              	.LVL4881:
 39450              		.loc 1 18770 19 view .LVU11081
 39451 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39452              	.LVL4882:
18771:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39453              		.loc 1 18771 9 is_stmt 1 view .LVU11082
 39454              		.loc 1 18771 12 is_stmt 0 view .LVU11083
 39455 0020 0446     		mov	r4, r0
 39456 0022 50BB     		cbnz	r0, .L2795
18772:Core/Src/bno055.c ****         {
18773:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39457              		.loc 1 18773 13 is_stmt 1 view .LVU11084
 39458              		.loc 1 18773 32 is_stmt 0 view .LVU11085
 39459 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39460              		.loc 1 18773 16 view .LVU11086
 39461 0028 1BB9     		cbnz	r3, .L2799
 39462              	.LVL4883:
 39463              	.L2793:
18774:Core/Src/bno055.c ****             {
18775:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18776:Core/Src/bno055.c ****             }
18777:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39464              		.loc 1 18777 13 is_stmt 1 view .LVU11087
 39465              		.loc 1 18777 16 is_stmt 0 view .LVU11088
 39466 002a 44B1     		cbz	r4, .L2800
18778:Core/Src/bno055.c ****             {
18779:Core/Src/bno055.c ****                 /* Write page as one */
18780:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18781:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18782:Core/Src/bno055.c ****                 {
18783:Core/Src/bno055.c ****                     /* Write the value of
18784:Core/Src/bno055.c ****                      * gyro highrate z duration*/
18785:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18786:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
18787:Core/Src/bno055.c ****                                                               &data_u8r,
18788:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
ARM GAS  /tmp/ccO72alg.s 			page 1106


18789:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18790:Core/Src/bno055.c ****                     {
18791:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_HIGHRATE_Z_DURN, gyro_
18792:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18793:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
18794:Core/Src/bno055.c ****                                                                     &data_u8r,
18795:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18796:Core/Src/bno055.c ****                     }
18797:Core/Src/bno055.c ****                 }
18798:Core/Src/bno055.c ****                 else
18799:Core/Src/bno055.c ****                 {
18800:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18801:Core/Src/bno055.c ****                 }
18802:Core/Src/bno055.c ****             }
18803:Core/Src/bno055.c ****             else
18804:Core/Src/bno055.c ****             {
18805:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39467              		.loc 1 18805 26 view .LVU11089
 39468 002c 4FF0FF34 		mov	r4, #-1
 39469              	.LVL4884:
 39470              		.loc 1 18805 26 view .LVU11090
 39471 0030 25E0     		b	.L2792
 39472              	.LVL4885:
 39473              	.L2799:
18775:Core/Src/bno055.c ****             }
 39474              		.loc 1 18775 17 is_stmt 1 view .LVU11091
18775:Core/Src/bno055.c ****             }
 39475              		.loc 1 18775 28 is_stmt 0 view .LVU11092
 39476 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39477              	.LVL4886:
18775:Core/Src/bno055.c ****             }
 39478              		.loc 1 18775 25 view .LVU11093
 39479 0036 54FA80F4 		uxtab	r4, r4, r0
 39480 003a 64B2     		sxtb	r4, r4
 39481              	.LVL4887:
18775:Core/Src/bno055.c ****             }
 39482              		.loc 1 18775 25 view .LVU11094
 39483 003c F5E7     		b	.L2793
 39484              	.L2800:
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39485              		.loc 1 18780 17 is_stmt 1 view .LVU11095
18780:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39486              		.loc 1 18780 30 is_stmt 0 view .LVU11096
 39487 003e 0120     		movs	r0, #1
 39488 0040 FFF7FEFF 		bl	bno055_write_page_id
 39489              	.LVL4888:
18781:Core/Src/bno055.c ****                 {
 39490              		.loc 1 18781 17 is_stmt 1 view .LVU11097
18781:Core/Src/bno055.c ****                 {
 39491              		.loc 1 18781 20 is_stmt 0 view .LVU11098
 39492 0044 08BB     		cbnz	r0, .L2797
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39493              		.loc 1 18785 21 is_stmt 1 view .LVU11099
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39494              		.loc 1 18785 40 is_stmt 0 view .LVU11100
 39495 0046 174B     		ldr	r3, .L2802
 39496 0048 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccO72alg.s 			page 1107


 39497              	.LVL4889:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39498              		.loc 1 18785 40 view .LVU11101
 39499 004a 0469     		ldr	r4, [r0, #16]
 39500              	.LVL4890:
18785:Core/Src/bno055.c ****                                                               BNO055_GYRO_HIGHRATE_Z_DURN_REG,
 39501              		.loc 1 18785 32 view .LVU11102
 39502 004c 0123     		movs	r3, #1
 39503 004e 0DF10702 		add	r2, sp, #7
 39504 0052 1D21     		movs	r1, #29
 39505 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39506 0056 A047     		blx	r4
 39507              	.LVL4891:
18789:Core/Src/bno055.c ****                     {
 39508              		.loc 1 18789 21 is_stmt 1 view .LVU11103
18789:Core/Src/bno055.c ****                     {
 39509              		.loc 1 18789 24 is_stmt 0 view .LVU11104
 39510 0058 0446     		mov	r4, r0
 39511 005a 80B9     		cbnz	r0, .L2792
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39512              		.loc 1 18791 25 is_stmt 1 view .LVU11105
18791:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39513              		.loc 1 18791 34 is_stmt 0 view .LVU11106
 39514 005c 8DF80750 		strb	r5, [sp, #7]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39515              		.loc 1 18792 25 is_stmt 1 view .LVU11107
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39516              		.loc 1 18792 45 is_stmt 0 view .LVU11108
 39517 0060 104B     		ldr	r3, .L2802
 39518 0062 1868     		ldr	r0, [r3]
 39519              	.LVL4892:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39520              		.loc 1 18792 45 view .LVU11109
 39521 0064 C568     		ldr	r5, [r0, #12]
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39522              		.loc 1 18792 37 view .LVU11110
 39523 0066 0123     		movs	r3, #1
 39524 0068 0DF10702 		add	r2, sp, #7
 39525 006c 1D21     		movs	r1, #29
 39526 006e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39527 0070 A847     		blx	r5
 39528              	.LVL4893:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39529              		.loc 1 18792 34 view .LVU11111
 39530 0072 54FA80F4 		uxtab	r4, r4, r0
 39531 0076 64B2     		sxtb	r4, r4
 39532              	.LVL4894:
18792:Core/Src/bno055.c ****                                                                     BNO055_GYRO_HIGHRATE_Z_DURN_REG
 39533              		.loc 1 18792 34 view .LVU11112
 39534 0078 01E0     		b	.L2792
 39535              	.LVL4895:
 39536              	.L2795:
18806:Core/Src/bno055.c ****             }
18807:Core/Src/bno055.c ****         }
18808:Core/Src/bno055.c ****         else
18809:Core/Src/bno055.c ****         {
18810:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 1108


 39537              		.loc 1 18810 22 view .LVU11113
 39538 007a 4FF0FF34 		mov	r4, #-1
 39539              	.LVL4896:
 39540              	.L2792:
18811:Core/Src/bno055.c ****         }
18812:Core/Src/bno055.c ****     }
18813:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39541              		.loc 1 18813 5 is_stmt 1 view .LVU11114
 39542              		.loc 1 18813 24 is_stmt 0 view .LVU11115
 39543 007e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39544              		.loc 1 18813 8 view .LVU11116
 39545 0082 28B9     		cbnz	r0, .L2801
 39546              	.LVL4897:
 39547              	.L2791:
18814:Core/Src/bno055.c ****     {
18815:Core/Src/bno055.c ****         /* set the operation mode of
18816:Core/Src/bno055.c ****          * previous operation mode*/
18817:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18818:Core/Src/bno055.c ****     }
18819:Core/Src/bno055.c **** 
18820:Core/Src/bno055.c ****     return com_rslt;
18821:Core/Src/bno055.c **** }
 39548              		.loc 1 18821 1 view .LVU11117
 39549 0084 2046     		mov	r0, r4
 39550 0086 03B0     		add	sp, sp, #12
 39551              	.LCFI1067:
 39552              		.cfi_remember_state
 39553              		.cfi_def_cfa_offset 12
 39554              		@ sp needed
 39555 0088 30BD     		pop	{r4, r5, pc}
 39556              	.LVL4898:
 39557              	.L2797:
 39558              	.LCFI1068:
 39559              		.cfi_restore_state
18800:Core/Src/bno055.c ****                 }
 39560              		.loc 1 18800 30 view .LVU11118
 39561 008a 4FF0FF34 		mov	r4, #-1
 39562              	.LVL4899:
18800:Core/Src/bno055.c ****                 }
 39563              		.loc 1 18800 30 view .LVU11119
 39564 008e F6E7     		b	.L2792
 39565              	.LVL4900:
 39566              	.L2801:
18817:Core/Src/bno055.c ****     }
 39567              		.loc 1 18817 9 is_stmt 1 view .LVU11120
18817:Core/Src/bno055.c ****     }
 39568              		.loc 1 18817 21 is_stmt 0 view .LVU11121
 39569 0090 FFF7FEFF 		bl	bno055_set_operation_mode
 39570              	.LVL4901:
18817:Core/Src/bno055.c ****     }
 39571              		.loc 1 18817 18 view .LVU11122
 39572 0094 54FA80F4 		uxtab	r4, r4, r0
 39573              	.LVL4902:
18817:Core/Src/bno055.c ****     }
 39574              		.loc 1 18817 18 view .LVU11123
 39575 0098 64B2     		sxtb	r4, r4
 39576              	.LVL4903:
ARM GAS  /tmp/ccO72alg.s 			page 1109


18817:Core/Src/bno055.c ****     }
 39577              		.loc 1 18817 18 view .LVU11124
 39578 009a F3E7     		b	.L2791
 39579              	.LVL4904:
 39580              	.L2794:
18763:Core/Src/bno055.c ****     }
 39581              		.loc 1 18763 16 view .LVU11125
 39582 009c 6FF07E04 		mvn	r4, #126
 39583 00a0 F0E7     		b	.L2791
 39584              	.L2803:
 39585 00a2 00BF     		.align	2
 39586              	.L2802:
 39587 00a4 00000000 		.word	.LANCHOR0
 39588              		.cfi_endproc
 39589              	.LFE268:
 39591              		.section	.text.bno055_get_gyro_any_motion_thres,"ax",%progbits
 39592              		.align	1
 39593              		.global	bno055_get_gyro_any_motion_thres
 39594              		.syntax unified
 39595              		.thumb
 39596              		.thumb_func
 39598              	bno055_get_gyro_any_motion_thres:
 39599              	.LVL4905:
 39600              	.LFB269:
18822:Core/Src/bno055.c **** 
18823:Core/Src/bno055.c **** /*!
18824:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion threshold
18825:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18826:Core/Src/bno055.c ****  *
18827:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18828:Core/Src/bno055.c ****  *
18829:Core/Src/bno055.c ****  *  @return results of bus communication function
18830:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18831:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18832:Core/Src/bno055.c ****  *
18833:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18834:Core/Src/bno055.c ****  *  on the selection of gyro range
18835:Core/Src/bno055.c ****  *
18836:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18837:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18838:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18839:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18840:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18841:Core/Src/bno055.c ****  *
18842:Core/Src/bno055.c ****  */
18843:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_thres(u8 *gyro_any_motion_thres_u8)
18844:Core/Src/bno055.c **** {
 39601              		.loc 1 18844 1 is_stmt 1 view -0
 39602              		.cfi_startproc
 39603              		@ args = 0, pretend = 0, frame = 8
 39604              		@ frame_needed = 0, uses_anonymous_args = 0
 39605              		.loc 1 18844 1 is_stmt 0 view .LVU11127
 39606 0000 30B5     		push	{r4, r5, lr}
 39607              	.LCFI1069:
 39608              		.cfi_def_cfa_offset 12
 39609              		.cfi_offset 4, -12
 39610              		.cfi_offset 5, -8
ARM GAS  /tmp/ccO72alg.s 			page 1110


 39611              		.cfi_offset 14, -4
 39612 0002 83B0     		sub	sp, sp, #12
 39613              	.LCFI1070:
 39614              		.cfi_def_cfa_offset 24
18845:Core/Src/bno055.c ****     /* Variable used to return value of
18846:Core/Src/bno055.c ****      * communication routine*/
18847:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39615              		.loc 1 18847 5 is_stmt 1 view .LVU11128
 39616              	.LVL4906:
18848:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39617              		.loc 1 18848 5 view .LVU11129
 39618              		.loc 1 18848 8 is_stmt 0 view .LVU11130
 39619 0004 0023     		movs	r3, #0
 39620 0006 8DF80730 		strb	r3, [sp, #7]
18849:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39621              		.loc 1 18849 5 is_stmt 1 view .LVU11131
 39622              	.LVL4907:
18850:Core/Src/bno055.c **** 
18851:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18852:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39623              		.loc 1 18852 5 view .LVU11132
 39624              		.loc 1 18852 18 is_stmt 0 view .LVU11133
 39625 000a 144B     		ldr	r3, .L2812
 39626 000c 1B68     		ldr	r3, [r3]
 39627              		.loc 1 18852 8 view .LVU11134
 39628 000e F3B1     		cbz	r3, .L2808
 39629 0010 0446     		mov	r4, r0
18853:Core/Src/bno055.c ****     {
18854:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18855:Core/Src/bno055.c ****     }
18856:Core/Src/bno055.c ****     else
18857:Core/Src/bno055.c ****     {
18858:Core/Src/bno055.c ****         /*condition check for page,gyro anymotion threshold is
18859:Core/Src/bno055.c ****          * available in the page one*/
18860:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39630              		.loc 1 18860 9 is_stmt 1 view .LVU11135
 39631              		.loc 1 18860 21 is_stmt 0 view .LVU11136
 39632 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39633              		.loc 1 18860 12 view .LVU11137
 39634 0014 012B     		cmp	r3, #1
 39635 0016 14D1     		bne	.L2811
 39636              	.LVL4908:
 39637              	.L2806:
18861:Core/Src/bno055.c ****         {
18862:Core/Src/bno055.c ****             /* Write page as one */
18863:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18864:Core/Src/bno055.c ****         }
18865:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39638              		.loc 1 18865 53 discriminator 1 view .LVU11138
 39639 0018 104B     		ldr	r3, .L2812
 39640 001a 1B68     		ldr	r3, [r3]
 39641 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39642              		.loc 1 18865 41 discriminator 1 view .LVU11139
 39643 001e 012B     		cmp	r3, #1
 39644 0020 18D1     		bne	.L2809
 39645              	.L2807:
18866:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 1111


18867:Core/Src/bno055.c ****             /* Read the value of gyro anymotion threshold*/
18868:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39646              		.loc 1 18868 13 is_stmt 1 view .LVU11140
 39647              		.loc 1 18868 32 is_stmt 0 view .LVU11141
 39648 0022 0E4B     		ldr	r3, .L2812
 39649 0024 1868     		ldr	r0, [r3]
 39650 0026 0569     		ldr	r5, [r0, #16]
 39651              		.loc 1 18868 24 view .LVU11142
 39652 0028 0123     		movs	r3, #1
 39653 002a 0DF10702 		add	r2, sp, #7
 39654 002e 1E21     		movs	r1, #30
 39655 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39656 0032 A847     		blx	r5
 39657              	.LVL4909:
18869:Core/Src/bno055.c ****                                                       BNO055_GYRO_ANY_MOTION_THRES_REG,
18870:Core/Src/bno055.c ****                                                       &data_u8r,
18871:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
18872:Core/Src/bno055.c ****             *gyro_any_motion_thres_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES)
 39658              		.loc 1 18872 13 is_stmt 1 view .LVU11143
 39659              		.loc 1 18872 41 is_stmt 0 view .LVU11144
 39660 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39661 0038 03F07F03 		and	r3, r3, #127
 39662              		.loc 1 18872 39 view .LVU11145
 39663 003c 2370     		strb	r3, [r4]
 39664              	.LVL4910:
 39665              	.L2805:
18873:Core/Src/bno055.c ****         }
18874:Core/Src/bno055.c ****         else
18875:Core/Src/bno055.c ****         {
18876:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
18877:Core/Src/bno055.c ****         }
18878:Core/Src/bno055.c ****     }
18879:Core/Src/bno055.c **** 
18880:Core/Src/bno055.c ****     return com_rslt;
18881:Core/Src/bno055.c **** }
 39666              		.loc 1 18881 1 view .LVU11146
 39667 003e 03B0     		add	sp, sp, #12
 39668              	.LCFI1071:
 39669              		.cfi_remember_state
 39670              		.cfi_def_cfa_offset 12
 39671              		@ sp needed
 39672 0040 30BD     		pop	{r4, r5, pc}
 39673              	.LVL4911:
 39674              	.L2811:
 39675              	.LCFI1072:
 39676              		.cfi_restore_state
18863:Core/Src/bno055.c ****         }
 39677              		.loc 1 18863 13 is_stmt 1 view .LVU11147
18863:Core/Src/bno055.c ****         }
 39678              		.loc 1 18863 23 is_stmt 0 view .LVU11148
 39679 0042 0120     		movs	r0, #1
 39680              	.LVL4912:
18863:Core/Src/bno055.c ****         }
 39681              		.loc 1 18863 23 view .LVU11149
 39682 0044 FFF7FEFF 		bl	bno055_write_page_id
 39683              	.LVL4913:
18865:Core/Src/bno055.c ****         {
ARM GAS  /tmp/ccO72alg.s 			page 1112


 39684              		.loc 1 18865 9 is_stmt 1 view .LVU11150
18865:Core/Src/bno055.c ****         {
 39685              		.loc 1 18865 12 is_stmt 0 view .LVU11151
 39686 0048 0028     		cmp	r0, #0
 39687 004a EAD0     		beq	.L2807
 39688 004c E4E7     		b	.L2806
 39689              	.LVL4914:
 39690              	.L2808:
18854:Core/Src/bno055.c ****     }
 39691              		.loc 1 18854 16 view .LVU11152
 39692 004e 6FF07E00 		mvn	r0, #126
 39693              	.LVL4915:
18854:Core/Src/bno055.c ****     }
 39694              		.loc 1 18854 16 view .LVU11153
 39695 0052 F4E7     		b	.L2805
 39696              	.LVL4916:
 39697              	.L2809:
18876:Core/Src/bno055.c ****         }
 39698              		.loc 1 18876 22 view .LVU11154
 39699 0054 4FF0FF30 		mov	r0, #-1
 39700 0058 F1E7     		b	.L2805
 39701              	.L2813:
 39702 005a 00BF     		.align	2
 39703              	.L2812:
 39704 005c 00000000 		.word	.LANCHOR0
 39705              		.cfi_endproc
 39706              	.LFE269:
 39708              		.section	.text.bno055_set_gyro_any_motion_thres,"ax",%progbits
 39709              		.align	1
 39710              		.global	bno055_set_gyro_any_motion_thres
 39711              		.syntax unified
 39712              		.thumb
 39713              		.thumb_func
 39715              	bno055_set_gyro_any_motion_thres:
 39716              	.LVL4917:
 39717              	.LFB270:
18882:Core/Src/bno055.c **** 
18883:Core/Src/bno055.c **** /*!
18884:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion threshold
18885:Core/Src/bno055.c ****  *  from page one register from 0x1E bit 0 to 6
18886:Core/Src/bno055.c ****  *
18887:Core/Src/bno055.c ****  *  @param gyro_any_motion_thres_u8 : The value of gyro anymotion threshold
18888:Core/Src/bno055.c ****  *
18889:Core/Src/bno055.c ****  *  @return results of bus communication function
18890:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18891:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18892:Core/Src/bno055.c ****  *
18893:Core/Src/bno055.c ****  *  @note Gyro anymotion interrupt threshold dependent
18894:Core/Src/bno055.c ****  *  on the selection of gyro range
18895:Core/Src/bno055.c ****  *
18896:Core/Src/bno055.c ****  *  gyro_range_u8     | threshold     |    LSB
18897:Core/Src/bno055.c ****  * -----------------  | ------------- | ---------
18898:Core/Src/bno055.c ****  *     2000           |    1dps       |   1LSB
18899:Core/Src/bno055.c ****  *     1000           |    0.5dps     |   1LSB
18900:Core/Src/bno055.c ****  *     500            |    0.25dps    |   1LSB
18901:Core/Src/bno055.c ****  *
18902:Core/Src/bno055.c ****  */
ARM GAS  /tmp/ccO72alg.s 			page 1113


18903:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_thres(u8 gyro_any_motion_thres_u8)
18904:Core/Src/bno055.c **** {
 39718              		.loc 1 18904 1 is_stmt 1 view -0
 39719              		.cfi_startproc
 39720              		@ args = 0, pretend = 0, frame = 8
 39721              		@ frame_needed = 0, uses_anonymous_args = 0
 39722              		.loc 1 18904 1 is_stmt 0 view .LVU11156
 39723 0000 30B5     		push	{r4, r5, lr}
 39724              	.LCFI1073:
 39725              		.cfi_def_cfa_offset 12
 39726              		.cfi_offset 4, -12
 39727              		.cfi_offset 5, -8
 39728              		.cfi_offset 14, -4
 39729 0002 83B0     		sub	sp, sp, #12
 39730              	.LCFI1074:
 39731              		.cfi_def_cfa_offset 24
18905:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39732              		.loc 1 18905 5 is_stmt 1 view .LVU11157
 39733              	.LVL4918:
18906:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39734              		.loc 1 18906 5 view .LVU11158
 39735              		.loc 1 18906 8 is_stmt 0 view .LVU11159
 39736 0004 0023     		movs	r3, #0
 39737 0006 8DF80730 		strb	r3, [sp, #7]
18907:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 39738              		.loc 1 18907 5 is_stmt 1 view .LVU11160
 39739              	.LVL4919:
18908:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 39740              		.loc 1 18908 5 view .LVU11161
 39741              		.loc 1 18908 8 is_stmt 0 view .LVU11162
 39742 000a 8DF80630 		strb	r3, [sp, #6]
18909:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 39743              		.loc 1 18909 5 is_stmt 1 view .LVU11163
 39744              	.LVL4920:
18910:Core/Src/bno055.c **** 
18911:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
18912:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39745              		.loc 1 18912 5 view .LVU11164
 39746              		.loc 1 18912 18 is_stmt 0 view .LVU11165
 39747 000e 294B     		ldr	r3, .L2826
 39748 0010 1B68     		ldr	r3, [r3]
 39749              		.loc 1 18912 8 view .LVU11166
 39750 0012 002B     		cmp	r3, #0
 39751 0014 4AD0     		beq	.L2818
 39752 0016 0546     		mov	r5, r0
18913:Core/Src/bno055.c ****     {
18914:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
18915:Core/Src/bno055.c ****     }
18916:Core/Src/bno055.c ****     else
18917:Core/Src/bno055.c ****     {
18918:Core/Src/bno055.c ****         /* The write operation effective only if the operation
18919:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
18920:Core/Src/bno055.c ****          * current operation mode and set the config mode */
18921:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 39753              		.loc 1 18921 9 is_stmt 1 view .LVU11167
 39754              		.loc 1 18921 19 is_stmt 0 view .LVU11168
 39755 0018 0DF10600 		add	r0, sp, #6
ARM GAS  /tmp/ccO72alg.s 			page 1114


 39756              	.LVL4921:
 39757              		.loc 1 18921 19 view .LVU11169
 39758 001c FFF7FEFF 		bl	bno055_get_operation_mode
 39759              	.LVL4922:
18922:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 39760              		.loc 1 18922 9 is_stmt 1 view .LVU11170
 39761              		.loc 1 18922 12 is_stmt 0 view .LVU11171
 39762 0020 0446     		mov	r4, r0
 39763 0022 90BB     		cbnz	r0, .L2819
18923:Core/Src/bno055.c ****         {
18924:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39764              		.loc 1 18924 13 is_stmt 1 view .LVU11172
 39765              		.loc 1 18924 32 is_stmt 0 view .LVU11173
 39766 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 39767              		.loc 1 18924 16 view .LVU11174
 39768 0028 1BB9     		cbnz	r3, .L2823
 39769              	.LVL4923:
 39770              	.L2817:
18925:Core/Src/bno055.c ****             {
18926:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
18927:Core/Src/bno055.c ****             }
18928:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 39771              		.loc 1 18928 13 is_stmt 1 view .LVU11175
 39772              		.loc 1 18928 16 is_stmt 0 view .LVU11176
 39773 002a 44B1     		cbz	r4, .L2824
18929:Core/Src/bno055.c ****             {
18930:Core/Src/bno055.c ****                 /* Write page as one */
18931:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
18932:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
18933:Core/Src/bno055.c ****                 {
18934:Core/Src/bno055.c ****                     /* Write the value
18935:Core/Src/bno055.c ****                      * of gyro anymotion threshold*/
18936:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
18937:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
18938:Core/Src/bno055.c ****                                                               &data_u8r,
18939:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
18940:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
18941:Core/Src/bno055.c ****                     {
18942:Core/Src/bno055.c ****                         data_u8r =
18943:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
18944:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
18945:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
18946:Core/Src/bno055.c ****                                                                     &data_u8r,
18947:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
18948:Core/Src/bno055.c ****                     }
18949:Core/Src/bno055.c ****                 }
18950:Core/Src/bno055.c ****                 else
18951:Core/Src/bno055.c ****                 {
18952:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
18953:Core/Src/bno055.c ****                 }
18954:Core/Src/bno055.c ****             }
18955:Core/Src/bno055.c ****             else
18956:Core/Src/bno055.c ****             {
18957:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 39774              		.loc 1 18957 26 view .LVU11177
 39775 002c 4FF0FF34 		mov	r4, #-1
 39776              	.LVL4924:
ARM GAS  /tmp/ccO72alg.s 			page 1115


 39777              		.loc 1 18957 26 view .LVU11178
 39778 0030 2DE0     		b	.L2816
 39779              	.LVL4925:
 39780              	.L2823:
18926:Core/Src/bno055.c ****             }
 39781              		.loc 1 18926 17 is_stmt 1 view .LVU11179
18926:Core/Src/bno055.c ****             }
 39782              		.loc 1 18926 28 is_stmt 0 view .LVU11180
 39783 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 39784              	.LVL4926:
18926:Core/Src/bno055.c ****             }
 39785              		.loc 1 18926 25 view .LVU11181
 39786 0036 54FA80F4 		uxtab	r4, r4, r0
 39787 003a 64B2     		sxtb	r4, r4
 39788              	.LVL4927:
18926:Core/Src/bno055.c ****             }
 39789              		.loc 1 18926 25 view .LVU11182
 39790 003c F5E7     		b	.L2817
 39791              	.L2824:
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39792              		.loc 1 18931 17 is_stmt 1 view .LVU11183
18931:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 39793              		.loc 1 18931 30 is_stmt 0 view .LVU11184
 39794 003e 0120     		movs	r0, #1
 39795 0040 FFF7FEFF 		bl	bno055_write_page_id
 39796              	.LVL4928:
18932:Core/Src/bno055.c ****                 {
 39797              		.loc 1 18932 17 is_stmt 1 view .LVU11185
18932:Core/Src/bno055.c ****                 {
 39798              		.loc 1 18932 20 is_stmt 0 view .LVU11186
 39799 0044 48BB     		cbnz	r0, .L2821
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39800              		.loc 1 18936 21 is_stmt 1 view .LVU11187
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39801              		.loc 1 18936 40 is_stmt 0 view .LVU11188
 39802 0046 1B4B     		ldr	r3, .L2826
 39803 0048 1868     		ldr	r0, [r3]
 39804              	.LVL4929:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39805              		.loc 1 18936 40 view .LVU11189
 39806 004a 0469     		ldr	r4, [r0, #16]
 39807              	.LVL4930:
18936:Core/Src/bno055.c ****                                                               BNO055_GYRO_ANY_MOTION_THRES_REG,
 39808              		.loc 1 18936 32 view .LVU11190
 39809 004c 0123     		movs	r3, #1
 39810 004e 0DF10702 		add	r2, sp, #7
 39811 0052 1E21     		movs	r1, #30
 39812 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39813 0056 A047     		blx	r4
 39814              	.LVL4931:
18940:Core/Src/bno055.c ****                     {
 39815              		.loc 1 18940 21 is_stmt 1 view .LVU11191
18940:Core/Src/bno055.c ****                     {
 39816              		.loc 1 18940 24 is_stmt 0 view .LVU11192
 39817 0058 0446     		mov	r4, r0
 39818 005a C0B9     		cbnz	r0, .L2816
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
ARM GAS  /tmp/ccO72alg.s 			page 1116


 39819              		.loc 1 18942 25 is_stmt 1 view .LVU11193
18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39820              		.loc 1 18943 29 is_stmt 0 view .LVU11194
 39821 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 39822              	.LVL4932:
18943:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 39823              		.loc 1 18943 29 view .LVU11195
 39824 0060 20F07F00 		bic	r0, r0, #127
 39825 0064 43B2     		sxtb	r3, r0
 39826 0066 05F07F00 		and	r0, r5, #127
 39827 006a 1843     		orrs	r0, r0, r3
18942:Core/Src/bno055.c ****                             BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_ANY_MOTION_THRES, gyro_any_mo
 39828              		.loc 1 18942 34 view .LVU11196
 39829 006c 8DF80700 		strb	r0, [sp, #7]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39830              		.loc 1 18944 25 is_stmt 1 view .LVU11197
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39831              		.loc 1 18944 45 is_stmt 0 view .LVU11198
 39832 0070 104B     		ldr	r3, .L2826
 39833 0072 1868     		ldr	r0, [r3]
 39834 0074 C568     		ldr	r5, [r0, #12]
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39835              		.loc 1 18944 37 view .LVU11199
 39836 0076 0123     		movs	r3, #1
 39837 0078 0DF10702 		add	r2, sp, #7
 39838 007c 1E21     		movs	r1, #30
 39839 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39840 0080 A847     		blx	r5
 39841              	.LVL4933:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39842              		.loc 1 18944 34 view .LVU11200
 39843 0082 54FA80F4 		uxtab	r4, r4, r0
 39844 0086 64B2     		sxtb	r4, r4
 39845              	.LVL4934:
18944:Core/Src/bno055.c ****                                                                     BNO055_GYRO_ANY_MOTION_THRES_RE
 39846              		.loc 1 18944 34 view .LVU11201
 39847 0088 01E0     		b	.L2816
 39848              	.LVL4935:
 39849              	.L2819:
18958:Core/Src/bno055.c ****             }
18959:Core/Src/bno055.c ****         }
18960:Core/Src/bno055.c ****         else
18961:Core/Src/bno055.c ****         {
18962:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 39850              		.loc 1 18962 22 view .LVU11202
 39851 008a 4FF0FF34 		mov	r4, #-1
 39852              	.LVL4936:
 39853              	.L2816:
18963:Core/Src/bno055.c ****         }
18964:Core/Src/bno055.c ****     }
18965:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 39854              		.loc 1 18965 5 is_stmt 1 view .LVU11203
 39855              		.loc 1 18965 24 is_stmt 0 view .LVU11204
 39856 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 39857              		.loc 1 18965 8 view .LVU11205
 39858 0092 28B9     		cbnz	r0, .L2825
 39859              	.LVL4937:
ARM GAS  /tmp/ccO72alg.s 			page 1117


 39860              	.L2815:
18966:Core/Src/bno055.c ****     {
18967:Core/Src/bno055.c ****         /* set the operation mode of
18968:Core/Src/bno055.c ****          * previous operation mode*/
18969:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
18970:Core/Src/bno055.c ****     }
18971:Core/Src/bno055.c **** 
18972:Core/Src/bno055.c ****     return com_rslt;
18973:Core/Src/bno055.c **** }
 39861              		.loc 1 18973 1 view .LVU11206
 39862 0094 2046     		mov	r0, r4
 39863 0096 03B0     		add	sp, sp, #12
 39864              	.LCFI1075:
 39865              		.cfi_remember_state
 39866              		.cfi_def_cfa_offset 12
 39867              		@ sp needed
 39868 0098 30BD     		pop	{r4, r5, pc}
 39869              	.LVL4938:
 39870              	.L2821:
 39871              	.LCFI1076:
 39872              		.cfi_restore_state
18952:Core/Src/bno055.c ****                 }
 39873              		.loc 1 18952 30 view .LVU11207
 39874 009a 4FF0FF34 		mov	r4, #-1
 39875              	.LVL4939:
18952:Core/Src/bno055.c ****                 }
 39876              		.loc 1 18952 30 view .LVU11208
 39877 009e F6E7     		b	.L2816
 39878              	.LVL4940:
 39879              	.L2825:
18969:Core/Src/bno055.c ****     }
 39880              		.loc 1 18969 9 is_stmt 1 view .LVU11209
18969:Core/Src/bno055.c ****     }
 39881              		.loc 1 18969 21 is_stmt 0 view .LVU11210
 39882 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 39883              	.LVL4941:
18969:Core/Src/bno055.c ****     }
 39884              		.loc 1 18969 18 view .LVU11211
 39885 00a4 54FA80F4 		uxtab	r4, r4, r0
 39886              	.LVL4942:
18969:Core/Src/bno055.c ****     }
 39887              		.loc 1 18969 18 view .LVU11212
 39888 00a8 64B2     		sxtb	r4, r4
 39889              	.LVL4943:
18969:Core/Src/bno055.c ****     }
 39890              		.loc 1 18969 18 view .LVU11213
 39891 00aa F3E7     		b	.L2815
 39892              	.LVL4944:
 39893              	.L2818:
18914:Core/Src/bno055.c ****     }
 39894              		.loc 1 18914 16 view .LVU11214
 39895 00ac 6FF07E04 		mvn	r4, #126
 39896 00b0 F0E7     		b	.L2815
 39897              	.L2827:
 39898 00b2 00BF     		.align	2
 39899              	.L2826:
 39900 00b4 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccO72alg.s 			page 1118


 39901              		.cfi_endproc
 39902              	.LFE270:
 39904              		.section	.text.bno055_get_gyro_any_motion_slope_samples,"ax",%progbits
 39905              		.align	1
 39906              		.global	bno055_get_gyro_any_motion_slope_samples
 39907              		.syntax unified
 39908              		.thumb
 39909              		.thumb_func
 39911              	bno055_get_gyro_any_motion_slope_samples:
 39912              	.LVL4945:
 39913              	.LFB271:
18974:Core/Src/bno055.c **** 
18975:Core/Src/bno055.c **** /*!
18976:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion slope samples
18977:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
18978:Core/Src/bno055.c ****  *
18979:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
18980:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
18981:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
18982:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
18983:Core/Src/bno055.c ****  *            0                          |    8 samples
18984:Core/Src/bno055.c ****  *            1                          |    16 samples
18985:Core/Src/bno055.c ****  *            2                          |    32 samples
18986:Core/Src/bno055.c ****  *            3                          |    64 samples
18987:Core/Src/bno055.c ****  *
18988:Core/Src/bno055.c ****  *  @return results of bus communication function
18989:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
18990:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
18991:Core/Src/bno055.c ****  *
18992:Core/Src/bno055.c ****  */
18993:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_slope_samples(u8 *gyro_any_motion_slope_samp
18994:Core/Src/bno055.c **** {
 39914              		.loc 1 18994 1 is_stmt 1 view -0
 39915              		.cfi_startproc
 39916              		@ args = 0, pretend = 0, frame = 8
 39917              		@ frame_needed = 0, uses_anonymous_args = 0
 39918              		.loc 1 18994 1 is_stmt 0 view .LVU11216
 39919 0000 30B5     		push	{r4, r5, lr}
 39920              	.LCFI1077:
 39921              		.cfi_def_cfa_offset 12
 39922              		.cfi_offset 4, -12
 39923              		.cfi_offset 5, -8
 39924              		.cfi_offset 14, -4
 39925 0002 83B0     		sub	sp, sp, #12
 39926              	.LCFI1078:
 39927              		.cfi_def_cfa_offset 24
18995:Core/Src/bno055.c ****     /* Variable used to return value of
18996:Core/Src/bno055.c ****      * communication routine*/
18997:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 39928              		.loc 1 18997 5 is_stmt 1 view .LVU11217
 39929              	.LVL4946:
18998:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 39930              		.loc 1 18998 5 view .LVU11218
 39931              		.loc 1 18998 8 is_stmt 0 view .LVU11219
 39932 0004 0023     		movs	r3, #0
 39933 0006 8DF80730 		strb	r3, [sp, #7]
18999:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 1119


 39934              		.loc 1 18999 5 is_stmt 1 view .LVU11220
 39935              	.LVL4947:
19000:Core/Src/bno055.c **** 
19001:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19002:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 39936              		.loc 1 19002 5 view .LVU11221
 39937              		.loc 1 19002 18 is_stmt 0 view .LVU11222
 39938 000a 144B     		ldr	r3, .L2836
 39939 000c 1B68     		ldr	r3, [r3]
 39940              		.loc 1 19002 8 view .LVU11223
 39941 000e F3B1     		cbz	r3, .L2832
 39942 0010 0446     		mov	r4, r0
19003:Core/Src/bno055.c ****     {
19004:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19005:Core/Src/bno055.c ****     }
19006:Core/Src/bno055.c ****     else
19007:Core/Src/bno055.c ****     {
19008:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion slope samples is
19009:Core/Src/bno055.c ****          * available in the page one*/
19010:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 39943              		.loc 1 19010 9 is_stmt 1 view .LVU11224
 39944              		.loc 1 19010 21 is_stmt 0 view .LVU11225
 39945 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39946              		.loc 1 19010 12 view .LVU11226
 39947 0014 012B     		cmp	r3, #1
 39948 0016 14D1     		bne	.L2835
 39949              	.LVL4948:
 39950              	.L2830:
19011:Core/Src/bno055.c ****         {
19012:Core/Src/bno055.c ****             /* Write page as one */
19013:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19014:Core/Src/bno055.c ****         }
19015:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 39951              		.loc 1 19015 53 discriminator 1 view .LVU11227
 39952 0018 104B     		ldr	r3, .L2836
 39953 001a 1B68     		ldr	r3, [r3]
 39954 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 39955              		.loc 1 19015 41 discriminator 1 view .LVU11228
 39956 001e 012B     		cmp	r3, #1
 39957 0020 18D1     		bne	.L2833
 39958              	.L2831:
19016:Core/Src/bno055.c ****         {
19017:Core/Src/bno055.c ****             /*Read the value of gyro anymotion slope samples*/
19018:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 39959              		.loc 1 19018 13 is_stmt 1 view .LVU11229
 39960              		.loc 1 19018 32 is_stmt 0 view .LVU11230
 39961 0022 0E4B     		ldr	r3, .L2836
 39962 0024 1868     		ldr	r0, [r3]
 39963 0026 0569     		ldr	r5, [r0, #16]
 39964              		.loc 1 19018 24 view .LVU11231
 39965 0028 0123     		movs	r3, #1
 39966 002a 0DF10702 		add	r2, sp, #7
 39967 002e 1F21     		movs	r1, #31
 39968 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 39969 0032 A847     		blx	r5
 39970              	.LVL4949:
19019:Core/Src/bno055.c ****                                                       BNO055_GYRO_SLOPE_SAMPLES_REG,
ARM GAS  /tmp/ccO72alg.s 			page 1120


19020:Core/Src/bno055.c ****                                                       &data_u8r,
19021:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19022:Core/Src/bno055.c ****             *gyro_any_motion_slope_samples_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_SLOPE_SAM
 39971              		.loc 1 19022 13 is_stmt 1 view .LVU11232
 39972              		.loc 1 19022 49 is_stmt 0 view .LVU11233
 39973 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 39974 0038 03F00303 		and	r3, r3, #3
 39975              		.loc 1 19022 47 view .LVU11234
 39976 003c 2370     		strb	r3, [r4]
 39977              	.LVL4950:
 39978              	.L2829:
19023:Core/Src/bno055.c ****         }
19024:Core/Src/bno055.c ****         else
19025:Core/Src/bno055.c ****         {
19026:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19027:Core/Src/bno055.c ****         }
19028:Core/Src/bno055.c ****     }
19029:Core/Src/bno055.c **** 
19030:Core/Src/bno055.c ****     return com_rslt;
19031:Core/Src/bno055.c **** }
 39979              		.loc 1 19031 1 view .LVU11235
 39980 003e 03B0     		add	sp, sp, #12
 39981              	.LCFI1079:
 39982              		.cfi_remember_state
 39983              		.cfi_def_cfa_offset 12
 39984              		@ sp needed
 39985 0040 30BD     		pop	{r4, r5, pc}
 39986              	.LVL4951:
 39987              	.L2835:
 39988              	.LCFI1080:
 39989              		.cfi_restore_state
19013:Core/Src/bno055.c ****         }
 39990              		.loc 1 19013 13 is_stmt 1 view .LVU11236
19013:Core/Src/bno055.c ****         }
 39991              		.loc 1 19013 23 is_stmt 0 view .LVU11237
 39992 0042 0120     		movs	r0, #1
 39993              	.LVL4952:
19013:Core/Src/bno055.c ****         }
 39994              		.loc 1 19013 23 view .LVU11238
 39995 0044 FFF7FEFF 		bl	bno055_write_page_id
 39996              	.LVL4953:
19015:Core/Src/bno055.c ****         {
 39997              		.loc 1 19015 9 is_stmt 1 view .LVU11239
19015:Core/Src/bno055.c ****         {
 39998              		.loc 1 19015 12 is_stmt 0 view .LVU11240
 39999 0048 0028     		cmp	r0, #0
 40000 004a EAD0     		beq	.L2831
 40001 004c E4E7     		b	.L2830
 40002              	.LVL4954:
 40003              	.L2832:
19004:Core/Src/bno055.c ****     }
 40004              		.loc 1 19004 16 view .LVU11241
 40005 004e 6FF07E00 		mvn	r0, #126
 40006              	.LVL4955:
19004:Core/Src/bno055.c ****     }
 40007              		.loc 1 19004 16 view .LVU11242
 40008 0052 F4E7     		b	.L2829
ARM GAS  /tmp/ccO72alg.s 			page 1121


 40009              	.LVL4956:
 40010              	.L2833:
19026:Core/Src/bno055.c ****         }
 40011              		.loc 1 19026 22 view .LVU11243
 40012 0054 4FF0FF30 		mov	r0, #-1
 40013 0058 F1E7     		b	.L2829
 40014              	.L2837:
 40015 005a 00BF     		.align	2
 40016              	.L2836:
 40017 005c 00000000 		.word	.LANCHOR0
 40018              		.cfi_endproc
 40019              	.LFE271:
 40021              		.section	.text.bno055_set_gyro_any_motion_slope_samples,"ax",%progbits
 40022              		.align	1
 40023              		.global	bno055_set_gyro_any_motion_slope_samples
 40024              		.syntax unified
 40025              		.thumb
 40026              		.thumb_func
 40028              	bno055_set_gyro_any_motion_slope_samples:
 40029              	.LVL4957:
 40030              	.LFB272:
19032:Core/Src/bno055.c **** 
19033:Core/Src/bno055.c **** /*!
19034:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion slope samples
19035:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 0 to 1
19036:Core/Src/bno055.c ****  *
19037:Core/Src/bno055.c ****  *  @param gyro_any_motion_slope_samples_u8 :
19038:Core/Src/bno055.c ****  *  The value of gyro anymotion slope samples
19039:Core/Src/bno055.c ****  *  gyro_any_motion_slope_samples_u8   |   result
19040:Core/Src/bno055.c ****  *  ----------------------------------   | -----------
19041:Core/Src/bno055.c ****  *            0                          |    8 samples
19042:Core/Src/bno055.c ****  *            1                          |    16 samples
19043:Core/Src/bno055.c ****  *            2                          |    32 samples
19044:Core/Src/bno055.c ****  *            3                          |    64 samples
19045:Core/Src/bno055.c ****  *
19046:Core/Src/bno055.c ****  *  @return results of bus communication function
19047:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19048:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19049:Core/Src/bno055.c ****  *
19050:Core/Src/bno055.c ****  */
19051:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_slope_samples(u8 gyro_any_motion_slope_sampl
19052:Core/Src/bno055.c **** {
 40031              		.loc 1 19052 1 is_stmt 1 view -0
 40032              		.cfi_startproc
 40033              		@ args = 0, pretend = 0, frame = 8
 40034              		@ frame_needed = 0, uses_anonymous_args = 0
 40035              		.loc 1 19052 1 is_stmt 0 view .LVU11245
 40036 0000 30B5     		push	{r4, r5, lr}
 40037              	.LCFI1081:
 40038              		.cfi_def_cfa_offset 12
 40039              		.cfi_offset 4, -12
 40040              		.cfi_offset 5, -8
 40041              		.cfi_offset 14, -4
 40042 0002 83B0     		sub	sp, sp, #12
 40043              	.LCFI1082:
 40044              		.cfi_def_cfa_offset 24
19053:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 1122


 40045              		.loc 1 19053 5 is_stmt 1 view .LVU11246
 40046              	.LVL4958:
19054:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40047              		.loc 1 19054 5 view .LVU11247
 40048              		.loc 1 19054 8 is_stmt 0 view .LVU11248
 40049 0004 0023     		movs	r3, #0
 40050 0006 8DF80730 		strb	r3, [sp, #7]
19055:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40051              		.loc 1 19055 5 is_stmt 1 view .LVU11249
 40052              	.LVL4959:
19056:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 40053              		.loc 1 19056 5 view .LVU11250
19057:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 40054              		.loc 1 19057 5 view .LVU11251
 40055              		.loc 1 19057 8 is_stmt 0 view .LVU11252
 40056 000a 8DF80630 		strb	r3, [sp, #6]
19058:Core/Src/bno055.c **** 
19059:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19060:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40057              		.loc 1 19060 5 is_stmt 1 view .LVU11253
 40058              		.loc 1 19060 18 is_stmt 0 view .LVU11254
 40059 000e 294B     		ldr	r3, .L2850
 40060 0010 1B68     		ldr	r3, [r3]
 40061              		.loc 1 19060 8 view .LVU11255
 40062 0012 002B     		cmp	r3, #0
 40063 0014 4AD0     		beq	.L2842
 40064 0016 0546     		mov	r5, r0
19061:Core/Src/bno055.c ****     {
19062:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19063:Core/Src/bno055.c ****     }
19064:Core/Src/bno055.c ****     else
19065:Core/Src/bno055.c ****     {
19066:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19067:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19068:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19069:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 40065              		.loc 1 19069 9 is_stmt 1 view .LVU11256
 40066              		.loc 1 19069 19 is_stmt 0 view .LVU11257
 40067 0018 0DF10600 		add	r0, sp, #6
 40068              	.LVL4960:
 40069              		.loc 1 19069 19 view .LVU11258
 40070 001c FFF7FEFF 		bl	bno055_get_operation_mode
 40071              	.LVL4961:
19070:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 40072              		.loc 1 19070 9 is_stmt 1 view .LVU11259
 40073              		.loc 1 19070 12 is_stmt 0 view .LVU11260
 40074 0020 0446     		mov	r4, r0
 40075 0022 90BB     		cbnz	r0, .L2843
19071:Core/Src/bno055.c ****         {
19072:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40076              		.loc 1 19072 13 is_stmt 1 view .LVU11261
 40077              		.loc 1 19072 32 is_stmt 0 view .LVU11262
 40078 0024 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 40079              		.loc 1 19072 16 view .LVU11263
 40080 0028 1BB9     		cbnz	r3, .L2847
 40081              	.LVL4962:
 40082              	.L2841:
ARM GAS  /tmp/ccO72alg.s 			page 1123


19073:Core/Src/bno055.c ****             {
19074:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19075:Core/Src/bno055.c ****             }
19076:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 40083              		.loc 1 19076 13 is_stmt 1 view .LVU11264
 40084              		.loc 1 19076 16 is_stmt 0 view .LVU11265
 40085 002a 44B1     		cbz	r4, .L2848
19077:Core/Src/bno055.c ****             {
19078:Core/Src/bno055.c ****                 /* Write page as one */
19079:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19080:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19081:Core/Src/bno055.c ****                 {
19082:Core/Src/bno055.c ****                     /* Write the value of
19083:Core/Src/bno055.c ****                      * gyro anymotion slope samples*/
19084:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19085:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
19086:Core/Src/bno055.c ****                                                               &data_u8r,
19087:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19088:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19089:Core/Src/bno055.c ****                     {
19090:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r,
19091:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
19092:Core/Src/bno055.c ****                                                        gyro_any_motion_slope_samples_u8);
19093:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19094:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
19095:Core/Src/bno055.c ****                                                                     &data_u8r,
19096:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19097:Core/Src/bno055.c ****                     }
19098:Core/Src/bno055.c ****                 }
19099:Core/Src/bno055.c ****                 else
19100:Core/Src/bno055.c ****                 {
19101:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
19102:Core/Src/bno055.c ****                 }
19103:Core/Src/bno055.c ****             }
19104:Core/Src/bno055.c ****             else
19105:Core/Src/bno055.c ****             {
19106:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 40086              		.loc 1 19106 26 view .LVU11266
 40087 002c 4FF0FF34 		mov	r4, #-1
 40088              	.LVL4963:
 40089              		.loc 1 19106 26 view .LVU11267
 40090 0030 2DE0     		b	.L2840
 40091              	.LVL4964:
 40092              	.L2847:
19074:Core/Src/bno055.c ****             }
 40093              		.loc 1 19074 17 is_stmt 1 view .LVU11268
19074:Core/Src/bno055.c ****             }
 40094              		.loc 1 19074 28 is_stmt 0 view .LVU11269
 40095 0032 FFF7FEFF 		bl	bno055_set_operation_mode
 40096              	.LVL4965:
19074:Core/Src/bno055.c ****             }
 40097              		.loc 1 19074 25 view .LVU11270
 40098 0036 54FA80F4 		uxtab	r4, r4, r0
 40099 003a 64B2     		sxtb	r4, r4
 40100              	.LVL4966:
19074:Core/Src/bno055.c ****             }
 40101              		.loc 1 19074 25 view .LVU11271
ARM GAS  /tmp/ccO72alg.s 			page 1124


 40102 003c F5E7     		b	.L2841
 40103              	.L2848:
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40104              		.loc 1 19079 17 is_stmt 1 view .LVU11272
19079:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40105              		.loc 1 19079 30 is_stmt 0 view .LVU11273
 40106 003e 0120     		movs	r0, #1
 40107 0040 FFF7FEFF 		bl	bno055_write_page_id
 40108              	.LVL4967:
19080:Core/Src/bno055.c ****                 {
 40109              		.loc 1 19080 17 is_stmt 1 view .LVU11274
19080:Core/Src/bno055.c ****                 {
 40110              		.loc 1 19080 20 is_stmt 0 view .LVU11275
 40111 0044 48BB     		cbnz	r0, .L2845
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40112              		.loc 1 19084 21 is_stmt 1 view .LVU11276
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40113              		.loc 1 19084 40 is_stmt 0 view .LVU11277
 40114 0046 1B4B     		ldr	r3, .L2850
 40115 0048 1868     		ldr	r0, [r3]
 40116              	.LVL4968:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40117              		.loc 1 19084 40 view .LVU11278
 40118 004a 0469     		ldr	r4, [r0, #16]
 40119              	.LVL4969:
19084:Core/Src/bno055.c ****                                                               BNO055_GYRO_SLOPE_SAMPLES_REG,
 40120              		.loc 1 19084 32 view .LVU11279
 40121 004c 0123     		movs	r3, #1
 40122 004e 0DF10702 		add	r2, sp, #7
 40123 0052 1F21     		movs	r1, #31
 40124 0054 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40125 0056 A047     		blx	r4
 40126              	.LVL4970:
19088:Core/Src/bno055.c ****                     {
 40127              		.loc 1 19088 21 is_stmt 1 view .LVU11280
19088:Core/Src/bno055.c ****                     {
 40128              		.loc 1 19088 24 is_stmt 0 view .LVU11281
 40129 0058 0446     		mov	r4, r0
 40130 005a C0B9     		cbnz	r0, .L2840
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40131              		.loc 1 19090 25 is_stmt 1 view .LVU11282
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40132              		.loc 1 19090 36 is_stmt 0 view .LVU11283
 40133 005c 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 40134              	.LVL4971:
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40135              		.loc 1 19090 36 view .LVU11284
 40136 0060 20F00300 		bic	r0, r0, #3
 40137 0064 43B2     		sxtb	r3, r0
 40138 0066 05F00300 		and	r0, r5, #3
 40139 006a 1843     		orrs	r0, r0, r3
19090:Core/Src/bno055.c ****                                                        BNO055_GYRO_SLOPE_SAMPLES,
 40140              		.loc 1 19090 34 view .LVU11285
 40141 006c 8DF80700 		strb	r0, [sp, #7]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40142              		.loc 1 19093 25 is_stmt 1 view .LVU11286
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
ARM GAS  /tmp/ccO72alg.s 			page 1125


 40143              		.loc 1 19093 45 is_stmt 0 view .LVU11287
 40144 0070 104B     		ldr	r3, .L2850
 40145 0072 1868     		ldr	r0, [r3]
 40146 0074 C568     		ldr	r5, [r0, #12]
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40147              		.loc 1 19093 37 view .LVU11288
 40148 0076 0123     		movs	r3, #1
 40149 0078 0DF10702 		add	r2, sp, #7
 40150 007c 1F21     		movs	r1, #31
 40151 007e 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40152 0080 A847     		blx	r5
 40153              	.LVL4972:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40154              		.loc 1 19093 34 view .LVU11289
 40155 0082 54FA80F4 		uxtab	r4, r4, r0
 40156 0086 64B2     		sxtb	r4, r4
 40157              	.LVL4973:
19093:Core/Src/bno055.c ****                                                                     BNO055_GYRO_SLOPE_SAMPLES_REG,
 40158              		.loc 1 19093 34 view .LVU11290
 40159 0088 01E0     		b	.L2840
 40160              	.LVL4974:
 40161              	.L2843:
19107:Core/Src/bno055.c ****             }
19108:Core/Src/bno055.c ****         }
19109:Core/Src/bno055.c ****         else
19110:Core/Src/bno055.c ****         {
19111:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40162              		.loc 1 19111 22 view .LVU11291
 40163 008a 4FF0FF34 		mov	r4, #-1
 40164              	.LVL4975:
 40165              	.L2840:
19112:Core/Src/bno055.c ****         }
19113:Core/Src/bno055.c ****     }
19114:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40166              		.loc 1 19114 5 is_stmt 1 view .LVU11292
 40167              		.loc 1 19114 24 is_stmt 0 view .LVU11293
 40168 008e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40169              		.loc 1 19114 8 view .LVU11294
 40170 0092 28B9     		cbnz	r0, .L2849
 40171              	.LVL4976:
 40172              	.L2839:
19115:Core/Src/bno055.c ****     {
19116:Core/Src/bno055.c ****         /* set the operation mode of
19117:Core/Src/bno055.c ****          * previous operation mode*/
19118:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19119:Core/Src/bno055.c ****     }
19120:Core/Src/bno055.c **** 
19121:Core/Src/bno055.c ****     return com_rslt;
19122:Core/Src/bno055.c **** }
 40173              		.loc 1 19122 1 view .LVU11295
 40174 0094 2046     		mov	r0, r4
 40175 0096 03B0     		add	sp, sp, #12
 40176              	.LCFI1083:
 40177              		.cfi_remember_state
 40178              		.cfi_def_cfa_offset 12
 40179              		@ sp needed
 40180 0098 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccO72alg.s 			page 1126


 40181              	.LVL4977:
 40182              	.L2845:
 40183              	.LCFI1084:
 40184              		.cfi_restore_state
19101:Core/Src/bno055.c ****                 }
 40185              		.loc 1 19101 30 view .LVU11296
 40186 009a 4FF0FF34 		mov	r4, #-1
 40187              	.LVL4978:
19101:Core/Src/bno055.c ****                 }
 40188              		.loc 1 19101 30 view .LVU11297
 40189 009e F6E7     		b	.L2840
 40190              	.LVL4979:
 40191              	.L2849:
19118:Core/Src/bno055.c ****     }
 40192              		.loc 1 19118 9 is_stmt 1 view .LVU11298
19118:Core/Src/bno055.c ****     }
 40193              		.loc 1 19118 21 is_stmt 0 view .LVU11299
 40194 00a0 FFF7FEFF 		bl	bno055_set_operation_mode
 40195              	.LVL4980:
19118:Core/Src/bno055.c ****     }
 40196              		.loc 1 19118 18 view .LVU11300
 40197 00a4 54FA80F4 		uxtab	r4, r4, r0
 40198              	.LVL4981:
19118:Core/Src/bno055.c ****     }
 40199              		.loc 1 19118 18 view .LVU11301
 40200 00a8 64B2     		sxtb	r4, r4
 40201              	.LVL4982:
19118:Core/Src/bno055.c ****     }
 40202              		.loc 1 19118 18 view .LVU11302
 40203 00aa F3E7     		b	.L2839
 40204              	.LVL4983:
 40205              	.L2842:
19062:Core/Src/bno055.c ****     }
 40206              		.loc 1 19062 16 view .LVU11303
 40207 00ac 6FF07E04 		mvn	r4, #126
 40208 00b0 F0E7     		b	.L2839
 40209              	.L2851:
 40210 00b2 00BF     		.align	2
 40211              	.L2850:
 40212 00b4 00000000 		.word	.LANCHOR0
 40213              		.cfi_endproc
 40214              	.LFE272:
 40216              		.section	.text.bno055_get_gyro_any_motion_awake_durn,"ax",%progbits
 40217              		.align	1
 40218              		.global	bno055_get_gyro_any_motion_awake_durn
 40219              		.syntax unified
 40220              		.thumb
 40221              		.thumb_func
 40223              	bno055_get_gyro_any_motion_awake_durn:
 40224              	.LVL4984:
 40225              	.LFB273:
19123:Core/Src/bno055.c **** 
19124:Core/Src/bno055.c **** /*!
19125:Core/Src/bno055.c ****  *  @brief This API used to read gyro anymotion awake duration
19126:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19127:Core/Src/bno055.c ****  *
19128:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
ARM GAS  /tmp/ccO72alg.s 			page 1127


19129:Core/Src/bno055.c ****  *
19130:Core/Src/bno055.c ****  *  @return results of bus communication function
19131:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19132:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19133:Core/Src/bno055.c ****  *
19134:Core/Src/bno055.c ****  */
19135:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_get_gyro_any_motion_awake_durn(u8 *gyro_awake_durn_u8)
19136:Core/Src/bno055.c **** {
 40226              		.loc 1 19136 1 is_stmt 1 view -0
 40227              		.cfi_startproc
 40228              		@ args = 0, pretend = 0, frame = 8
 40229              		@ frame_needed = 0, uses_anonymous_args = 0
 40230              		.loc 1 19136 1 is_stmt 0 view .LVU11305
 40231 0000 30B5     		push	{r4, r5, lr}
 40232              	.LCFI1085:
 40233              		.cfi_def_cfa_offset 12
 40234              		.cfi_offset 4, -12
 40235              		.cfi_offset 5, -8
 40236              		.cfi_offset 14, -4
 40237 0002 83B0     		sub	sp, sp, #12
 40238              	.LCFI1086:
 40239              		.cfi_def_cfa_offset 24
19137:Core/Src/bno055.c ****     /* Variable used to return value of
19138:Core/Src/bno055.c ****      * communication routine*/
19139:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40240              		.loc 1 19139 5 is_stmt 1 view .LVU11306
 40241              	.LVL4985:
19140:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40242              		.loc 1 19140 5 view .LVU11307
 40243              		.loc 1 19140 8 is_stmt 0 view .LVU11308
 40244 0004 0023     		movs	r3, #0
 40245 0006 8DF80730 		strb	r3, [sp, #7]
19141:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40246              		.loc 1 19141 5 is_stmt 1 view .LVU11309
 40247              	.LVL4986:
19142:Core/Src/bno055.c **** 
19143:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19144:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40248              		.loc 1 19144 5 view .LVU11310
 40249              		.loc 1 19144 18 is_stmt 0 view .LVU11311
 40250 000a 144B     		ldr	r3, .L2860
 40251 000c 1B68     		ldr	r3, [r3]
 40252              		.loc 1 19144 8 view .LVU11312
 40253 000e F3B1     		cbz	r3, .L2856
 40254 0010 0446     		mov	r4, r0
19145:Core/Src/bno055.c ****     {
19146:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19147:Core/Src/bno055.c ****     }
19148:Core/Src/bno055.c ****     else
19149:Core/Src/bno055.c ****     {
19150:Core/Src/bno055.c ****         /*condition check for page, gyro anymotion awake duration is
19151:Core/Src/bno055.c ****          * available in the page one*/
19152:Core/Src/bno055.c ****         if (p_bno055->page_id != BNO055_PAGE_ONE)
 40255              		.loc 1 19152 9 is_stmt 1 view .LVU11313
 40256              		.loc 1 19152 21 is_stmt 0 view .LVU11314
 40257 0012 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40258              		.loc 1 19152 12 view .LVU11315
ARM GAS  /tmp/ccO72alg.s 			page 1128


 40259 0014 012B     		cmp	r3, #1
 40260 0016 14D1     		bne	.L2859
 40261              	.LVL4987:
 40262              	.L2854:
19153:Core/Src/bno055.c ****         {
19154:Core/Src/bno055.c ****             /* Write page as one */
19155:Core/Src/bno055.c ****             stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19156:Core/Src/bno055.c ****         }
19157:Core/Src/bno055.c ****         if ((stat_s8 == BNO055_SUCCESS) || (p_bno055->page_id == BNO055_PAGE_ONE))
 40263              		.loc 1 19157 53 discriminator 1 view .LVU11316
 40264 0018 104B     		ldr	r3, .L2860
 40265 001a 1B68     		ldr	r3, [r3]
 40266 001c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 40267              		.loc 1 19157 41 discriminator 1 view .LVU11317
 40268 001e 012B     		cmp	r3, #1
 40269 0020 18D1     		bne	.L2857
 40270              	.L2855:
19158:Core/Src/bno055.c ****         {
19159:Core/Src/bno055.c ****             /* Read the value of gyro anymotion awake duration*/
19160:Core/Src/bno055.c ****             com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
 40271              		.loc 1 19160 13 is_stmt 1 view .LVU11318
 40272              		.loc 1 19160 32 is_stmt 0 view .LVU11319
 40273 0022 0E4B     		ldr	r3, .L2860
 40274 0024 1868     		ldr	r0, [r3]
 40275 0026 0569     		ldr	r5, [r0, #16]
 40276              		.loc 1 19160 24 view .LVU11320
 40277 0028 0123     		movs	r3, #1
 40278 002a 0DF10702 		add	r2, sp, #7
 40279 002e 1F21     		movs	r1, #31
 40280 0030 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40281 0032 A847     		blx	r5
 40282              	.LVL4988:
19161:Core/Src/bno055.c ****                                                       BNO055_GYRO_AWAKE_DURN_REG,
19162:Core/Src/bno055.c ****                                                       &data_u8r,
19163:Core/Src/bno055.c ****                                                       BNO055_GEN_READ_WRITE_LENGTH);
19164:Core/Src/bno055.c ****             *gyro_awake_durn_u8 = BNO055_GET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN);
 40283              		.loc 1 19164 13 is_stmt 1 view .LVU11321
 40284              		.loc 1 19164 35 is_stmt 0 view .LVU11322
 40285 0034 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 40286 0038 C3F38103 		ubfx	r3, r3, #2, #2
 40287              		.loc 1 19164 33 view .LVU11323
 40288 003c 2370     		strb	r3, [r4]
 40289              	.LVL4989:
 40290              	.L2853:
19165:Core/Src/bno055.c ****         }
19166:Core/Src/bno055.c ****         else
19167:Core/Src/bno055.c ****         {
19168:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
19169:Core/Src/bno055.c ****         }
19170:Core/Src/bno055.c ****     }
19171:Core/Src/bno055.c **** 
19172:Core/Src/bno055.c ****     return com_rslt;
19173:Core/Src/bno055.c **** }
 40291              		.loc 1 19173 1 view .LVU11324
 40292 003e 03B0     		add	sp, sp, #12
 40293              	.LCFI1087:
 40294              		.cfi_remember_state
ARM GAS  /tmp/ccO72alg.s 			page 1129


 40295              		.cfi_def_cfa_offset 12
 40296              		@ sp needed
 40297 0040 30BD     		pop	{r4, r5, pc}
 40298              	.LVL4990:
 40299              	.L2859:
 40300              	.LCFI1088:
 40301              		.cfi_restore_state
19155:Core/Src/bno055.c ****         }
 40302              		.loc 1 19155 13 is_stmt 1 view .LVU11325
19155:Core/Src/bno055.c ****         }
 40303              		.loc 1 19155 23 is_stmt 0 view .LVU11326
 40304 0042 0120     		movs	r0, #1
 40305              	.LVL4991:
19155:Core/Src/bno055.c ****         }
 40306              		.loc 1 19155 23 view .LVU11327
 40307 0044 FFF7FEFF 		bl	bno055_write_page_id
 40308              	.LVL4992:
19157:Core/Src/bno055.c ****         {
 40309              		.loc 1 19157 9 is_stmt 1 view .LVU11328
19157:Core/Src/bno055.c ****         {
 40310              		.loc 1 19157 12 is_stmt 0 view .LVU11329
 40311 0048 0028     		cmp	r0, #0
 40312 004a EAD0     		beq	.L2855
 40313 004c E4E7     		b	.L2854
 40314              	.LVL4993:
 40315              	.L2856:
19146:Core/Src/bno055.c ****     }
 40316              		.loc 1 19146 16 view .LVU11330
 40317 004e 6FF07E00 		mvn	r0, #126
 40318              	.LVL4994:
19146:Core/Src/bno055.c ****     }
 40319              		.loc 1 19146 16 view .LVU11331
 40320 0052 F4E7     		b	.L2853
 40321              	.LVL4995:
 40322              	.L2857:
19168:Core/Src/bno055.c ****         }
 40323              		.loc 1 19168 22 view .LVU11332
 40324 0054 4FF0FF30 		mov	r0, #-1
 40325 0058 F1E7     		b	.L2853
 40326              	.L2861:
 40327 005a 00BF     		.align	2
 40328              	.L2860:
 40329 005c 00000000 		.word	.LANCHOR0
 40330              		.cfi_endproc
 40331              	.LFE273:
 40333              		.section	.text.bno055_set_gyro_any_motion_awake_durn,"ax",%progbits
 40334              		.align	1
 40335              		.global	bno055_set_gyro_any_motion_awake_durn
 40336              		.syntax unified
 40337              		.thumb
 40338              		.thumb_func
 40340              	bno055_set_gyro_any_motion_awake_durn:
 40341              	.LVL4996:
 40342              	.LFB274:
19174:Core/Src/bno055.c **** 
19175:Core/Src/bno055.c **** /*!
19176:Core/Src/bno055.c ****  *  @brief This API used to write gyro anymotion awake duration
ARM GAS  /tmp/ccO72alg.s 			page 1130


19177:Core/Src/bno055.c ****  *  from page one register from 0x1F bit 2 to 3
19178:Core/Src/bno055.c ****  *
19179:Core/Src/bno055.c ****  *  @param gyro_awake_durn_u8 : The value of gyro anymotion awake duration
19180:Core/Src/bno055.c ****  *
19181:Core/Src/bno055.c ****  *  @return results of bus communication function
19182:Core/Src/bno055.c ****  *  @retval 0 -> BNO055_SUCCESS
19183:Core/Src/bno055.c ****  *  @retval 1 -> BNO055_ERROR
19184:Core/Src/bno055.c ****  *
19185:Core/Src/bno055.c ****  */
19186:Core/Src/bno055.c **** BNO055_RETURN_FUNCTION_TYPE bno055_set_gyro_any_motion_awake_durn(u8 gyro_awake_durn_u8)
19187:Core/Src/bno055.c **** {
 40343              		.loc 1 19187 1 is_stmt 1 view -0
 40344              		.cfi_startproc
 40345              		@ args = 0, pretend = 0, frame = 8
 40346              		@ frame_needed = 0, uses_anonymous_args = 0
 40347              		.loc 1 19187 1 is_stmt 0 view .LVU11334
 40348 0000 30B5     		push	{r4, r5, lr}
 40349              	.LCFI1089:
 40350              		.cfi_def_cfa_offset 12
 40351              		.cfi_offset 4, -12
 40352              		.cfi_offset 5, -8
 40353              		.cfi_offset 14, -4
 40354 0002 83B0     		sub	sp, sp, #12
 40355              	.LCFI1090:
 40356              		.cfi_def_cfa_offset 24
19188:Core/Src/bno055.c ****     BNO055_RETURN_FUNCTION_TYPE com_rslt = BNO055_ERROR;
 40357              		.loc 1 19188 5 is_stmt 1 view .LVU11335
 40358              	.LVL4997:
19189:Core/Src/bno055.c ****     u8 data_u8r = BNO055_INIT_VALUE;
 40359              		.loc 1 19189 5 view .LVU11336
 40360              		.loc 1 19189 8 is_stmt 0 view .LVU11337
 40361 0004 0023     		movs	r3, #0
 40362 0006 8DF80730 		strb	r3, [sp, #7]
19190:Core/Src/bno055.c ****     s8 stat_s8 = BNO055_ERROR;
 40363              		.loc 1 19190 5 is_stmt 1 view .LVU11338
 40364              	.LVL4998:
19191:Core/Src/bno055.c ****     s8 pg_stat_s8 = BNO055_ERROR;
 40365              		.loc 1 19191 5 view .LVU11339
19192:Core/Src/bno055.c ****     u8 prev_opmode_u8 = BNO055_OPERATION_MODE_CONFIG;
 40366              		.loc 1 19192 5 view .LVU11340
 40367              		.loc 1 19192 8 is_stmt 0 view .LVU11341
 40368 000a 8DF80630 		strb	r3, [sp, #6]
19193:Core/Src/bno055.c **** 
19194:Core/Src/bno055.c ****     /* Check the struct p_bno055 is empty */
19195:Core/Src/bno055.c ****     if (p_bno055 == NULL)
 40369              		.loc 1 19195 5 is_stmt 1 view .LVU11342
 40370              		.loc 1 19195 18 is_stmt 0 view .LVU11343
 40371 000e 2A4B     		ldr	r3, .L2874
 40372 0010 1B68     		ldr	r3, [r3]
 40373              		.loc 1 19195 8 view .LVU11344
 40374 0012 002B     		cmp	r3, #0
 40375 0014 4CD0     		beq	.L2866
 40376 0016 0546     		mov	r5, r0
19196:Core/Src/bno055.c ****     {
19197:Core/Src/bno055.c ****         return BNO055_E_NULL_PTR;
19198:Core/Src/bno055.c ****     }
19199:Core/Src/bno055.c ****     else
ARM GAS  /tmp/ccO72alg.s 			page 1131


19200:Core/Src/bno055.c ****     {
19201:Core/Src/bno055.c ****         /* The write operation effective only if the operation
19202:Core/Src/bno055.c ****          * mode is in config mode, this part of code is checking the
19203:Core/Src/bno055.c ****          * current operation mode and set the config mode */
19204:Core/Src/bno055.c ****         stat_s8 = bno055_get_operation_mode(&prev_opmode_u8);
 40377              		.loc 1 19204 9 is_stmt 1 view .LVU11345
 40378              		.loc 1 19204 19 is_stmt 0 view .LVU11346
 40379 0018 0DF10600 		add	r0, sp, #6
 40380              	.LVL4999:
 40381              		.loc 1 19204 19 view .LVU11347
 40382 001c FFF7FEFF 		bl	bno055_get_operation_mode
 40383              	.LVL5000:
19205:Core/Src/bno055.c ****         if (stat_s8 == BNO055_SUCCESS)
 40384              		.loc 1 19205 9 is_stmt 1 view .LVU11348
 40385              		.loc 1 19205 12 is_stmt 0 view .LVU11349
 40386 0020 0446     		mov	r4, r0
 40387 0022 0028     		cmp	r0, #0
 40388 0024 33D1     		bne	.L2867
19206:Core/Src/bno055.c ****         {
19207:Core/Src/bno055.c ****             if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40389              		.loc 1 19207 13 is_stmt 1 view .LVU11350
 40390              		.loc 1 19207 32 is_stmt 0 view .LVU11351
 40391 0026 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 40392              		.loc 1 19207 16 view .LVU11352
 40393 002a 1BB9     		cbnz	r3, .L2871
 40394              	.LVL5001:
 40395              	.L2865:
19208:Core/Src/bno055.c ****             {
19209:Core/Src/bno055.c ****                 stat_s8 += bno055_set_operation_mode(BNO055_OPERATION_MODE_CONFIG);
19210:Core/Src/bno055.c ****             }
19211:Core/Src/bno055.c ****             if (stat_s8 == BNO055_SUCCESS)
 40396              		.loc 1 19211 13 is_stmt 1 view .LVU11353
 40397              		.loc 1 19211 16 is_stmt 0 view .LVU11354
 40398 002c 44B1     		cbz	r4, .L2872
19212:Core/Src/bno055.c ****             {
19213:Core/Src/bno055.c ****                 /* Write page as one */
19214:Core/Src/bno055.c ****                 pg_stat_s8 = bno055_write_page_id(BNO055_PAGE_ONE);
19215:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
19216:Core/Src/bno055.c ****                 {
19217:Core/Src/bno055.c ****                     /* Write the value of gyro
19218:Core/Src/bno055.c ****                      *  anymotion awake duration*/
19219:Core/Src/bno055.c ****                     com_rslt = p_bno055->BNO055_BUS_READ_FUNC(p_bno055->dev_addr,
19220:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
19221:Core/Src/bno055.c ****                                                               &data_u8r,
19222:Core/Src/bno055.c ****                                                               BNO055_GEN_READ_WRITE_LENGTH);
19223:Core/Src/bno055.c ****                     if (com_rslt == BNO055_SUCCESS)
19224:Core/Src/bno055.c ****                     {
19225:Core/Src/bno055.c ****                         data_u8r = BNO055_SET_BITSLICE(data_u8r, BNO055_GYRO_AWAKE_DURN, gyro_awake
19226:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
19227:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
19228:Core/Src/bno055.c ****                                                                     &data_u8r,
19229:Core/Src/bno055.c ****                                                                     BNO055_GEN_READ_WRITE_LENGTH);
19230:Core/Src/bno055.c ****                     }
19231:Core/Src/bno055.c ****                 }
19232:Core/Src/bno055.c ****                 else
19233:Core/Src/bno055.c ****                 {
19234:Core/Src/bno055.c ****                     com_rslt = BNO055_ERROR;
ARM GAS  /tmp/ccO72alg.s 			page 1132


19235:Core/Src/bno055.c ****                 }
19236:Core/Src/bno055.c ****             }
19237:Core/Src/bno055.c ****             else
19238:Core/Src/bno055.c ****             {
19239:Core/Src/bno055.c ****                 com_rslt = BNO055_ERROR;
 40399              		.loc 1 19239 26 view .LVU11355
 40400 002e 4FF0FF34 		mov	r4, #-1
 40401              	.LVL5002:
 40402              		.loc 1 19239 26 view .LVU11356
 40403 0032 2EE0     		b	.L2864
 40404              	.LVL5003:
 40405              	.L2871:
19209:Core/Src/bno055.c ****             }
 40406              		.loc 1 19209 17 is_stmt 1 view .LVU11357
19209:Core/Src/bno055.c ****             }
 40407              		.loc 1 19209 28 is_stmt 0 view .LVU11358
 40408 0034 FFF7FEFF 		bl	bno055_set_operation_mode
 40409              	.LVL5004:
19209:Core/Src/bno055.c ****             }
 40410              		.loc 1 19209 25 view .LVU11359
 40411 0038 54FA80F4 		uxtab	r4, r4, r0
 40412 003c 64B2     		sxtb	r4, r4
 40413              	.LVL5005:
19209:Core/Src/bno055.c ****             }
 40414              		.loc 1 19209 25 view .LVU11360
 40415 003e F5E7     		b	.L2865
 40416              	.L2872:
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40417              		.loc 1 19214 17 is_stmt 1 view .LVU11361
19214:Core/Src/bno055.c ****                 if (pg_stat_s8 == BNO055_SUCCESS)
 40418              		.loc 1 19214 30 is_stmt 0 view .LVU11362
 40419 0040 0120     		movs	r0, #1
 40420 0042 FFF7FEFF 		bl	bno055_write_page_id
 40421              	.LVL5006:
19215:Core/Src/bno055.c ****                 {
 40422              		.loc 1 19215 17 is_stmt 1 view .LVU11363
19215:Core/Src/bno055.c ****                 {
 40423              		.loc 1 19215 20 is_stmt 0 view .LVU11364
 40424 0046 50BB     		cbnz	r0, .L2869
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40425              		.loc 1 19219 21 is_stmt 1 view .LVU11365
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40426              		.loc 1 19219 40 is_stmt 0 view .LVU11366
 40427 0048 1B4B     		ldr	r3, .L2874
 40428 004a 1868     		ldr	r0, [r3]
 40429              	.LVL5007:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40430              		.loc 1 19219 40 view .LVU11367
 40431 004c 0469     		ldr	r4, [r0, #16]
 40432              	.LVL5008:
19219:Core/Src/bno055.c ****                                                               BNO055_GYRO_AWAKE_DURN_REG,
 40433              		.loc 1 19219 32 view .LVU11368
 40434 004e 0123     		movs	r3, #1
 40435 0050 0DF10702 		add	r2, sp, #7
 40436 0054 1F21     		movs	r1, #31
 40437 0056 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40438 0058 A047     		blx	r4
ARM GAS  /tmp/ccO72alg.s 			page 1133


 40439              	.LVL5009:
19223:Core/Src/bno055.c ****                     {
 40440              		.loc 1 19223 21 is_stmt 1 view .LVU11369
19223:Core/Src/bno055.c ****                     {
 40441              		.loc 1 19223 24 is_stmt 0 view .LVU11370
 40442 005a 0446     		mov	r4, r0
 40443 005c C8B9     		cbnz	r0, .L2864
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40444              		.loc 1 19225 25 is_stmt 1 view .LVU11371
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40445              		.loc 1 19225 36 is_stmt 0 view .LVU11372
 40446 005e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 40447              	.LVL5010:
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40448              		.loc 1 19225 36 view .LVU11373
 40449 0062 20F00C00 		bic	r0, r0, #12
 40450 0066 43B2     		sxtb	r3, r0
 40451 0068 A800     		lsls	r0, r5, #2
 40452 006a 00F00C00 		and	r0, r0, #12
 40453 006e 1843     		orrs	r0, r0, r3
19225:Core/Src/bno055.c ****                         com_rslt += p_bno055->BNO055_BUS_WRITE_FUNC(p_bno055->dev_addr,
 40454              		.loc 1 19225 34 view .LVU11374
 40455 0070 8DF80700 		strb	r0, [sp, #7]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40456              		.loc 1 19226 25 is_stmt 1 view .LVU11375
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40457              		.loc 1 19226 45 is_stmt 0 view .LVU11376
 40458 0074 104B     		ldr	r3, .L2874
 40459 0076 1868     		ldr	r0, [r3]
 40460 0078 C568     		ldr	r5, [r0, #12]
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40461              		.loc 1 19226 37 view .LVU11377
 40462 007a 0123     		movs	r3, #1
 40463 007c 0DF10702 		add	r2, sp, #7
 40464 0080 1F21     		movs	r1, #31
 40465 0082 407A     		ldrb	r0, [r0, #9]	@ zero_extendqisi2
 40466 0084 A847     		blx	r5
 40467              	.LVL5011:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40468              		.loc 1 19226 34 view .LVU11378
 40469 0086 54FA80F4 		uxtab	r4, r4, r0
 40470 008a 64B2     		sxtb	r4, r4
 40471              	.LVL5012:
19226:Core/Src/bno055.c ****                                                                     BNO055_GYRO_AWAKE_DURN_REG,
 40472              		.loc 1 19226 34 view .LVU11379
 40473 008c 01E0     		b	.L2864
 40474              	.LVL5013:
 40475              	.L2867:
19240:Core/Src/bno055.c ****             }
19241:Core/Src/bno055.c ****         }
19242:Core/Src/bno055.c ****         else
19243:Core/Src/bno055.c ****         {
19244:Core/Src/bno055.c ****             com_rslt = BNO055_ERROR;
 40476              		.loc 1 19244 22 view .LVU11380
 40477 008e 4FF0FF34 		mov	r4, #-1
 40478              	.LVL5014:
 40479              	.L2864:
ARM GAS  /tmp/ccO72alg.s 			page 1134


19245:Core/Src/bno055.c ****         }
19246:Core/Src/bno055.c ****     }
19247:Core/Src/bno055.c ****     if (prev_opmode_u8 != BNO055_OPERATION_MODE_CONFIG)
 40480              		.loc 1 19247 5 is_stmt 1 view .LVU11381
 40481              		.loc 1 19247 24 is_stmt 0 view .LVU11382
 40482 0092 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 40483              		.loc 1 19247 8 view .LVU11383
 40484 0096 28B9     		cbnz	r0, .L2873
 40485              	.LVL5015:
 40486              	.L2863:
19248:Core/Src/bno055.c ****     {
19249:Core/Src/bno055.c ****         /* set the operation mode
19250:Core/Src/bno055.c ****          * of previous operation mode*/
19251:Core/Src/bno055.c ****         com_rslt += bno055_set_operation_mode(prev_opmode_u8);
19252:Core/Src/bno055.c ****     }
19253:Core/Src/bno055.c **** 
19254:Core/Src/bno055.c ****     return com_rslt;
19255:Core/Src/bno055.c **** }
 40487              		.loc 1 19255 1 view .LVU11384
 40488 0098 2046     		mov	r0, r4
 40489 009a 03B0     		add	sp, sp, #12
 40490              	.LCFI1091:
 40491              		.cfi_remember_state
 40492              		.cfi_def_cfa_offset 12
 40493              		@ sp needed
 40494 009c 30BD     		pop	{r4, r5, pc}
 40495              	.LVL5016:
 40496              	.L2869:
 40497              	.LCFI1092:
 40498              		.cfi_restore_state
19234:Core/Src/bno055.c ****                 }
 40499              		.loc 1 19234 30 view .LVU11385
 40500 009e 4FF0FF34 		mov	r4, #-1
 40501              	.LVL5017:
19234:Core/Src/bno055.c ****                 }
 40502              		.loc 1 19234 30 view .LVU11386
 40503 00a2 F6E7     		b	.L2864
 40504              	.LVL5018:
 40505              	.L2873:
19251:Core/Src/bno055.c ****     }
 40506              		.loc 1 19251 9 is_stmt 1 view .LVU11387
19251:Core/Src/bno055.c ****     }
 40507              		.loc 1 19251 21 is_stmt 0 view .LVU11388
 40508 00a4 FFF7FEFF 		bl	bno055_set_operation_mode
 40509              	.LVL5019:
19251:Core/Src/bno055.c ****     }
 40510              		.loc 1 19251 18 view .LVU11389
 40511 00a8 54FA80F4 		uxtab	r4, r4, r0
 40512              	.LVL5020:
19251:Core/Src/bno055.c ****     }
 40513              		.loc 1 19251 18 view .LVU11390
 40514 00ac 64B2     		sxtb	r4, r4
 40515              	.LVL5021:
19251:Core/Src/bno055.c ****     }
 40516              		.loc 1 19251 18 view .LVU11391
 40517 00ae F3E7     		b	.L2863
 40518              	.LVL5022:
ARM GAS  /tmp/ccO72alg.s 			page 1135


 40519              	.L2866:
19197:Core/Src/bno055.c ****     }
 40520              		.loc 1 19197 16 view .LVU11392
 40521 00b0 6FF07E04 		mvn	r4, #126
 40522 00b4 F0E7     		b	.L2863
 40523              	.L2875:
 40524 00b6 00BF     		.align	2
 40525              	.L2874:
 40526 00b8 00000000 		.word	.LANCHOR0
 40527              		.cfi_endproc
 40528              	.LFE274:
 40530              		.section	.rodata
 40531              		.align	2
 40532              		.set	.LANCHOR1,. + 0
 40533              	.LC0:
 40534 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 40534      0000
 40535 0006 0000     		.space	2
 40536              	.LC1:
 40537 0008 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 40537      00000000 
 40538              	.LC2:
 40539 0010 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 40539      00000000 
 40539      00000000 
 40539      00
 40540 001d 00000000 		.ascii	"\000\000\000\000\000"
 40540      00
 40541              		.section	.bss.p_bno055,"aw",%nobits
 40542              		.align	2
 40543              		.set	.LANCHOR0,. + 0
 40546              	p_bno055:
 40547 0000 00000000 		.space	4
 40548              		.text
 40549              	.Letext0:
 40550              		.file 2 "Core/Inc/bno055.h"
ARM GAS  /tmp/ccO72alg.s 			page 1136


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bno055.c
     /tmp/ccO72alg.s:20     .text.bno055_init:0000000000000000 $t
     /tmp/ccO72alg.s:26     .text.bno055_init:0000000000000000 bno055_init
     /tmp/ccO72alg.s:247    .text.bno055_init:00000000000000f8 $d
     /tmp/ccO72alg.s:252    .text.bno055_write_register:0000000000000000 $t
     /tmp/ccO72alg.s:258    .text.bno055_write_register:0000000000000000 bno055_write_register
     /tmp/ccO72alg.s:311    .text.bno055_write_register:000000000000001c $d
     /tmp/ccO72alg.s:316    .text.bno055_read_register:0000000000000000 $t
     /tmp/ccO72alg.s:322    .text.bno055_read_register:0000000000000000 bno055_read_register
     /tmp/ccO72alg.s:375    .text.bno055_read_register:000000000000001c $d
     /tmp/ccO72alg.s:380    .text.bno055_read_page_id:0000000000000000 $t
     /tmp/ccO72alg.s:386    .text.bno055_read_page_id:0000000000000000 bno055_read_page_id
     /tmp/ccO72alg.s:472    .text.bno055_read_page_id:0000000000000040 $d
     /tmp/ccO72alg.s:477    .text.bno055_write_page_id:0000000000000000 $t
     /tmp/ccO72alg.s:483    .text.bno055_write_page_id:0000000000000000 bno055_write_page_id
     /tmp/ccO72alg.s:585    .text.bno055_write_page_id:0000000000000058 $d
     /tmp/ccO72alg.s:590    .text.bno055_read_chip_id:0000000000000000 $t
     /tmp/ccO72alg.s:596    .text.bno055_read_chip_id:0000000000000000 bno055_read_chip_id
     /tmp/ccO72alg.s:699    .text.bno055_read_chip_id:0000000000000054 $d
     /tmp/ccO72alg.s:704    .text.bno055_read_sw_rev_id:0000000000000000 $t
     /tmp/ccO72alg.s:710    .text.bno055_read_sw_rev_id:0000000000000000 bno055_read_sw_rev_id
     /tmp/ccO72alg.s:818    .text.bno055_read_sw_rev_id:0000000000000058 $d
     /tmp/ccO72alg.s:823    .text.bno055_read_accel_rev_id:0000000000000000 $t
     /tmp/ccO72alg.s:829    .text.bno055_read_accel_rev_id:0000000000000000 bno055_read_accel_rev_id
     /tmp/ccO72alg.s:932    .text.bno055_read_accel_rev_id:0000000000000054 $d
     /tmp/ccO72alg.s:937    .text.bno055_read_mag_rev_id:0000000000000000 $t
     /tmp/ccO72alg.s:943    .text.bno055_read_mag_rev_id:0000000000000000 bno055_read_mag_rev_id
     /tmp/ccO72alg.s:1046   .text.bno055_read_mag_rev_id:0000000000000054 $d
     /tmp/ccO72alg.s:1051   .text.bno055_read_gyro_rev_id:0000000000000000 $t
     /tmp/ccO72alg.s:1057   .text.bno055_read_gyro_rev_id:0000000000000000 bno055_read_gyro_rev_id
     /tmp/ccO72alg.s:1160   .text.bno055_read_gyro_rev_id:0000000000000054 $d
     /tmp/ccO72alg.s:1165   .text.bno055_read_bl_rev_id:0000000000000000 $t
     /tmp/ccO72alg.s:1171   .text.bno055_read_bl_rev_id:0000000000000000 bno055_read_bl_rev_id
     /tmp/ccO72alg.s:1274   .text.bno055_read_bl_rev_id:0000000000000054 $d
     /tmp/ccO72alg.s:1279   .text.bno055_read_accel_x:0000000000000000 $t
     /tmp/ccO72alg.s:1285   .text.bno055_read_accel_x:0000000000000000 bno055_read_accel_x
     /tmp/ccO72alg.s:1394   .text.bno055_read_accel_x:0000000000000058 $d
     /tmp/ccO72alg.s:1399   .text.bno055_read_accel_y:0000000000000000 $t
     /tmp/ccO72alg.s:1405   .text.bno055_read_accel_y:0000000000000000 bno055_read_accel_y
     /tmp/ccO72alg.s:1514   .text.bno055_read_accel_y:0000000000000058 $d
     /tmp/ccO72alg.s:1519   .text.bno055_read_accel_z:0000000000000000 $t
     /tmp/ccO72alg.s:1525   .text.bno055_read_accel_z:0000000000000000 bno055_read_accel_z
     /tmp/ccO72alg.s:1634   .text.bno055_read_accel_z:0000000000000058 $d
     /tmp/ccO72alg.s:1639   .text.bno055_read_accel_xyz:0000000000000000 $t
     /tmp/ccO72alg.s:1645   .text.bno055_read_accel_xyz:0000000000000000 bno055_read_accel_xyz
     /tmp/ccO72alg.s:1776   .text.bno055_read_accel_xyz:000000000000007c $d
     /tmp/ccO72alg.s:1782   .text.bno055_read_mag_x:0000000000000000 $t
     /tmp/ccO72alg.s:1788   .text.bno055_read_mag_x:0000000000000000 bno055_read_mag_x
     /tmp/ccO72alg.s:1897   .text.bno055_read_mag_x:0000000000000058 $d
     /tmp/ccO72alg.s:1902   .text.bno055_read_mag_y:0000000000000000 $t
     /tmp/ccO72alg.s:1908   .text.bno055_read_mag_y:0000000000000000 bno055_read_mag_y
     /tmp/ccO72alg.s:2017   .text.bno055_read_mag_y:0000000000000058 $d
     /tmp/ccO72alg.s:2022   .text.bno055_read_mag_z:0000000000000000 $t
     /tmp/ccO72alg.s:2028   .text.bno055_read_mag_z:0000000000000000 bno055_read_mag_z
     /tmp/ccO72alg.s:2137   .text.bno055_read_mag_z:0000000000000058 $d
     /tmp/ccO72alg.s:2142   .text.bno055_read_mag_xyz:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1137


     /tmp/ccO72alg.s:2148   .text.bno055_read_mag_xyz:0000000000000000 bno055_read_mag_xyz
     /tmp/ccO72alg.s:2279   .text.bno055_read_mag_xyz:000000000000007c $d
     /tmp/ccO72alg.s:2285   .text.bno055_read_gyro_x:0000000000000000 $t
     /tmp/ccO72alg.s:2291   .text.bno055_read_gyro_x:0000000000000000 bno055_read_gyro_x
     /tmp/ccO72alg.s:2400   .text.bno055_read_gyro_x:0000000000000058 $d
     /tmp/ccO72alg.s:2405   .text.bno055_read_gyro_y:0000000000000000 $t
     /tmp/ccO72alg.s:2411   .text.bno055_read_gyro_y:0000000000000000 bno055_read_gyro_y
     /tmp/ccO72alg.s:2520   .text.bno055_read_gyro_y:0000000000000058 $d
     /tmp/ccO72alg.s:2525   .text.bno055_read_gyro_z:0000000000000000 $t
     /tmp/ccO72alg.s:2531   .text.bno055_read_gyro_z:0000000000000000 bno055_read_gyro_z
     /tmp/ccO72alg.s:2640   .text.bno055_read_gyro_z:0000000000000058 $d
     /tmp/ccO72alg.s:2645   .text.bno055_read_gyro_xyz:0000000000000000 $t
     /tmp/ccO72alg.s:2651   .text.bno055_read_gyro_xyz:0000000000000000 bno055_read_gyro_xyz
     /tmp/ccO72alg.s:2782   .text.bno055_read_gyro_xyz:000000000000007c $d
     /tmp/ccO72alg.s:2788   .text.bno055_read_euler_h:0000000000000000 $t
     /tmp/ccO72alg.s:2794   .text.bno055_read_euler_h:0000000000000000 bno055_read_euler_h
     /tmp/ccO72alg.s:2903   .text.bno055_read_euler_h:0000000000000058 $d
     /tmp/ccO72alg.s:2908   .text.bno055_read_euler_r:0000000000000000 $t
     /tmp/ccO72alg.s:2914   .text.bno055_read_euler_r:0000000000000000 bno055_read_euler_r
     /tmp/ccO72alg.s:3023   .text.bno055_read_euler_r:0000000000000058 $d
     /tmp/ccO72alg.s:3028   .text.bno055_read_euler_p:0000000000000000 $t
     /tmp/ccO72alg.s:3034   .text.bno055_read_euler_p:0000000000000000 bno055_read_euler_p
     /tmp/ccO72alg.s:3143   .text.bno055_read_euler_p:0000000000000058 $d
     /tmp/ccO72alg.s:3148   .text.bno055_read_euler_hrp:0000000000000000 $t
     /tmp/ccO72alg.s:3154   .text.bno055_read_euler_hrp:0000000000000000 bno055_read_euler_hrp
     /tmp/ccO72alg.s:3285   .text.bno055_read_euler_hrp:000000000000007c $d
     /tmp/ccO72alg.s:3291   .text.bno055_read_quaternion_w:0000000000000000 $t
     /tmp/ccO72alg.s:3297   .text.bno055_read_quaternion_w:0000000000000000 bno055_read_quaternion_w
     /tmp/ccO72alg.s:3406   .text.bno055_read_quaternion_w:0000000000000058 $d
     /tmp/ccO72alg.s:3411   .text.bno055_read_quaternion_x:0000000000000000 $t
     /tmp/ccO72alg.s:3417   .text.bno055_read_quaternion_x:0000000000000000 bno055_read_quaternion_x
     /tmp/ccO72alg.s:3526   .text.bno055_read_quaternion_x:0000000000000058 $d
     /tmp/ccO72alg.s:3531   .text.bno055_read_quaternion_y:0000000000000000 $t
     /tmp/ccO72alg.s:3537   .text.bno055_read_quaternion_y:0000000000000000 bno055_read_quaternion_y
     /tmp/ccO72alg.s:3646   .text.bno055_read_quaternion_y:0000000000000058 $d
     /tmp/ccO72alg.s:3651   .text.bno055_read_quaternion_z:0000000000000000 $t
     /tmp/ccO72alg.s:3657   .text.bno055_read_quaternion_z:0000000000000000 bno055_read_quaternion_z
     /tmp/ccO72alg.s:3766   .text.bno055_read_quaternion_z:0000000000000058 $d
     /tmp/ccO72alg.s:3771   .text.bno055_read_quaternion_wxyz:0000000000000000 $t
     /tmp/ccO72alg.s:3777   .text.bno055_read_quaternion_wxyz:0000000000000000 bno055_read_quaternion_wxyz
     /tmp/ccO72alg.s:3920   .text.bno055_read_quaternion_wxyz:000000000000008c $d
     /tmp/ccO72alg.s:3926   .text.bno055_read_linear_accel_x:0000000000000000 $t
     /tmp/ccO72alg.s:3932   .text.bno055_read_linear_accel_x:0000000000000000 bno055_read_linear_accel_x
     /tmp/ccO72alg.s:4041   .text.bno055_read_linear_accel_x:0000000000000058 $d
     /tmp/ccO72alg.s:4046   .text.bno055_read_linear_accel_y:0000000000000000 $t
     /tmp/ccO72alg.s:4052   .text.bno055_read_linear_accel_y:0000000000000000 bno055_read_linear_accel_y
     /tmp/ccO72alg.s:4161   .text.bno055_read_linear_accel_y:0000000000000058 $d
     /tmp/ccO72alg.s:4166   .text.bno055_read_linear_accel_z:0000000000000000 $t
     /tmp/ccO72alg.s:4172   .text.bno055_read_linear_accel_z:0000000000000000 bno055_read_linear_accel_z
     /tmp/ccO72alg.s:4281   .text.bno055_read_linear_accel_z:0000000000000058 $d
     /tmp/ccO72alg.s:4286   .text.bno055_read_linear_accel_xyz:0000000000000000 $t
     /tmp/ccO72alg.s:4292   .text.bno055_read_linear_accel_xyz:0000000000000000 bno055_read_linear_accel_xyz
     /tmp/ccO72alg.s:4423   .text.bno055_read_linear_accel_xyz:000000000000007c $d
     /tmp/ccO72alg.s:4429   .text.bno055_read_gravity_x:0000000000000000 $t
     /tmp/ccO72alg.s:4435   .text.bno055_read_gravity_x:0000000000000000 bno055_read_gravity_x
     /tmp/ccO72alg.s:4544   .text.bno055_read_gravity_x:0000000000000058 $d
     /tmp/ccO72alg.s:4549   .text.bno055_read_gravity_y:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1138


     /tmp/ccO72alg.s:4555   .text.bno055_read_gravity_y:0000000000000000 bno055_read_gravity_y
     /tmp/ccO72alg.s:4664   .text.bno055_read_gravity_y:0000000000000058 $d
     /tmp/ccO72alg.s:4669   .text.bno055_read_gravity_z:0000000000000000 $t
     /tmp/ccO72alg.s:4675   .text.bno055_read_gravity_z:0000000000000000 bno055_read_gravity_z
     /tmp/ccO72alg.s:4784   .text.bno055_read_gravity_z:0000000000000058 $d
     /tmp/ccO72alg.s:4789   .text.bno055_read_gravity_xyz:0000000000000000 $t
     /tmp/ccO72alg.s:4795   .text.bno055_read_gravity_xyz:0000000000000000 bno055_read_gravity_xyz
     /tmp/ccO72alg.s:4926   .text.bno055_read_gravity_xyz:000000000000007c $d
     /tmp/ccO72alg.s:4932   .text.bno055_read_temp_data:0000000000000000 $t
     /tmp/ccO72alg.s:4938   .text.bno055_read_temp_data:0000000000000000 bno055_read_temp_data
     /tmp/ccO72alg.s:5041   .text.bno055_read_temp_data:0000000000000054 $d
     /tmp/ccO72alg.s:5049   .text.bno055_convert_float_mag_x_uT:0000000000000000 $t
     /tmp/ccO72alg.s:5055   .text.bno055_convert_float_mag_x_uT:0000000000000000 bno055_convert_float_mag_x_uT
     /tmp/ccO72alg.s:5130   .text.bno055_convert_float_mag_x_uT:000000000000003c $d
     /tmp/ccO72alg.s:5135   .text.bno055_convert_float_mag_y_uT:0000000000000000 $t
     /tmp/ccO72alg.s:5141   .text.bno055_convert_float_mag_y_uT:0000000000000000 bno055_convert_float_mag_y_uT
     /tmp/ccO72alg.s:5216   .text.bno055_convert_float_mag_y_uT:000000000000003c $d
     /tmp/ccO72alg.s:5221   .text.bno055_convert_float_mag_z_uT:0000000000000000 $t
     /tmp/ccO72alg.s:5227   .text.bno055_convert_float_mag_z_uT:0000000000000000 bno055_convert_float_mag_z_uT
     /tmp/ccO72alg.s:5302   .text.bno055_convert_float_mag_z_uT:000000000000003c $d
     /tmp/ccO72alg.s:5307   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 $t
     /tmp/ccO72alg.s:5313   .text.bno055_convert_float_mag_xyz_uT:0000000000000000 bno055_convert_float_mag_xyz_uT
     /tmp/ccO72alg.s:5415   .text.bno055_convert_float_mag_xyz_uT:000000000000006c $d
     /tmp/ccO72alg.s:5421   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5427   .text.bno055_convert_float_linear_accel_x_msq:0000000000000000 bno055_convert_float_linear_accel_x_msq
     /tmp/ccO72alg.s:5502   .text.bno055_convert_float_linear_accel_x_msq:000000000000003c $d
     /tmp/ccO72alg.s:5507   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5513   .text.bno055_convert_float_linear_accel_y_msq:0000000000000000 bno055_convert_float_linear_accel_y_msq
     /tmp/ccO72alg.s:5588   .text.bno055_convert_float_linear_accel_y_msq:000000000000003c $d
     /tmp/ccO72alg.s:5593   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5599   .text.bno055_convert_float_linear_accel_z_msq:0000000000000000 bno055_convert_float_linear_accel_z_msq
     /tmp/ccO72alg.s:5674   .text.bno055_convert_float_linear_accel_z_msq:000000000000003c $d
     /tmp/ccO72alg.s:5679   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5685   .text.bno055_convert_float_linear_accel_xyz_msq:0000000000000000 bno055_convert_float_linear_accel_xyz_msq
     /tmp/ccO72alg.s:5787   .text.bno055_convert_float_linear_accel_xyz_msq:000000000000006c $d
     /tmp/ccO72alg.s:5792   .text.bno055_convert_gravity_float_x_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5798   .text.bno055_convert_gravity_float_x_msq:0000000000000000 bno055_convert_gravity_float_x_msq
     /tmp/ccO72alg.s:5873   .text.bno055_convert_gravity_float_x_msq:000000000000003c $d
     /tmp/ccO72alg.s:5878   .text.bno055_convert_gravity_float_y_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5884   .text.bno055_convert_gravity_float_y_msq:0000000000000000 bno055_convert_gravity_float_y_msq
     /tmp/ccO72alg.s:5959   .text.bno055_convert_gravity_float_y_msq:000000000000003c $d
     /tmp/ccO72alg.s:5964   .text.bno055_convert_gravity_float_z_msq:0000000000000000 $t
     /tmp/ccO72alg.s:5970   .text.bno055_convert_gravity_float_z_msq:0000000000000000 bno055_convert_gravity_float_z_msq
     /tmp/ccO72alg.s:6045   .text.bno055_convert_gravity_float_z_msq:000000000000003c $d
     /tmp/ccO72alg.s:6050   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6056   .text.bno055_convert_float_gravity_xyz_msq:0000000000000000 bno055_convert_float_gravity_xyz_msq
     /tmp/ccO72alg.s:6158   .text.bno055_convert_float_gravity_xyz_msq:000000000000006c $d
     /tmp/ccO72alg.s:6163   .text.bno055_convert_double_mag_x_uT:0000000000000000 $t
     /tmp/ccO72alg.s:6169   .text.bno055_convert_double_mag_x_uT:0000000000000000 bno055_convert_double_mag_x_uT
     /tmp/ccO72alg.s:6242   .text.bno055_convert_double_mag_x_uT:0000000000000038 $d
     /tmp/ccO72alg.s:6247   .text.bno055_convert_double_mag_y_uT:0000000000000000 $t
     /tmp/ccO72alg.s:6253   .text.bno055_convert_double_mag_y_uT:0000000000000000 bno055_convert_double_mag_y_uT
     /tmp/ccO72alg.s:6326   .text.bno055_convert_double_mag_y_uT:0000000000000038 $d
     /tmp/ccO72alg.s:6331   .text.bno055_convert_double_mag_z_uT:0000000000000000 $t
     /tmp/ccO72alg.s:6337   .text.bno055_convert_double_mag_z_uT:0000000000000000 bno055_convert_double_mag_z_uT
     /tmp/ccO72alg.s:6410   .text.bno055_convert_double_mag_z_uT:0000000000000038 $d
     /tmp/ccO72alg.s:6415   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1139


     /tmp/ccO72alg.s:6421   .text.bno055_convert_double_mag_xyz_uT:0000000000000000 bno055_convert_double_mag_xyz_uT
     /tmp/ccO72alg.s:6514   .text.bno055_convert_double_mag_xyz_uT:0000000000000068 $d
     /tmp/ccO72alg.s:6519   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6525   .text.bno055_convert_double_linear_accel_x_msq:0000000000000000 bno055_convert_double_linear_accel_x_msq
     /tmp/ccO72alg.s:6598   .text.bno055_convert_double_linear_accel_x_msq:0000000000000038 $d
     /tmp/ccO72alg.s:6603   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6609   .text.bno055_convert_double_linear_accel_y_msq:0000000000000000 bno055_convert_double_linear_accel_y_msq
     /tmp/ccO72alg.s:6682   .text.bno055_convert_double_linear_accel_y_msq:0000000000000038 $d
     /tmp/ccO72alg.s:6687   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6693   .text.bno055_convert_double_linear_accel_z_msq:0000000000000000 bno055_convert_double_linear_accel_z_msq
     /tmp/ccO72alg.s:6766   .text.bno055_convert_double_linear_accel_z_msq:0000000000000038 $d
     /tmp/ccO72alg.s:6771   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6777   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000000 bno055_convert_double_linear_accel_xyz_msq
     /tmp/ccO72alg.s:6870   .text.bno055_convert_double_linear_accel_xyz_msq:0000000000000068 $d
     /tmp/ccO72alg.s:6875   .text.bno055_convert_gravity_double_x_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6881   .text.bno055_convert_gravity_double_x_msq:0000000000000000 bno055_convert_gravity_double_x_msq
     /tmp/ccO72alg.s:6954   .text.bno055_convert_gravity_double_x_msq:0000000000000038 $d
     /tmp/ccO72alg.s:6959   .text.bno055_convert_gravity_double_y_msq:0000000000000000 $t
     /tmp/ccO72alg.s:6965   .text.bno055_convert_gravity_double_y_msq:0000000000000000 bno055_convert_gravity_double_y_msq
     /tmp/ccO72alg.s:7042   .text.bno055_convert_gravity_double_y_msq:0000000000000038 $d
     /tmp/ccO72alg.s:7047   .text.bno055_convert_gravity_double_z_msq:0000000000000000 $t
     /tmp/ccO72alg.s:7053   .text.bno055_convert_gravity_double_z_msq:0000000000000000 bno055_convert_gravity_double_z_msq
     /tmp/ccO72alg.s:7130   .text.bno055_convert_gravity_double_z_msq:0000000000000038 $d
     /tmp/ccO72alg.s:7135   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 $t
     /tmp/ccO72alg.s:7141   .text.bno055_convert_double_gravity_xyz_msq:0000000000000000 bno055_convert_double_gravity_xyz_msq
     /tmp/ccO72alg.s:7238   .text.bno055_convert_double_gravity_xyz_msq:0000000000000068 $d
     /tmp/ccO72alg.s:7243   .text.bno055_get_mag_calib_stat:0000000000000000 $t
     /tmp/ccO72alg.s:7249   .text.bno055_get_mag_calib_stat:0000000000000000 bno055_get_mag_calib_stat
     /tmp/ccO72alg.s:7353   .text.bno055_get_mag_calib_stat:0000000000000058 $d
     /tmp/ccO72alg.s:7358   .text.bno055_get_accel_calib_stat:0000000000000000 $t
     /tmp/ccO72alg.s:7364   .text.bno055_get_accel_calib_stat:0000000000000000 bno055_get_accel_calib_stat
     /tmp/ccO72alg.s:7468   .text.bno055_get_accel_calib_stat:0000000000000058 $d
     /tmp/ccO72alg.s:7473   .text.bno055_get_gyro_calib_stat:0000000000000000 $t
     /tmp/ccO72alg.s:7479   .text.bno055_get_gyro_calib_stat:0000000000000000 bno055_get_gyro_calib_stat
     /tmp/ccO72alg.s:7583   .text.bno055_get_gyro_calib_stat:0000000000000058 $d
     /tmp/ccO72alg.s:7588   .text.bno055_get_sys_calib_stat:0000000000000000 $t
     /tmp/ccO72alg.s:7594   .text.bno055_get_sys_calib_stat:0000000000000000 bno055_get_sys_calib_stat
     /tmp/ccO72alg.s:7698   .text.bno055_get_sys_calib_stat:0000000000000054 $d
     /tmp/ccO72alg.s:7703   .text.bno055_get_selftest_accel:0000000000000000 $t
     /tmp/ccO72alg.s:7709   .text.bno055_get_selftest_accel:0000000000000000 bno055_get_selftest_accel
     /tmp/ccO72alg.s:7813   .text.bno055_get_selftest_accel:0000000000000058 $d
     /tmp/ccO72alg.s:7818   .text.bno055_get_selftest_mag:0000000000000000 $t
     /tmp/ccO72alg.s:7824   .text.bno055_get_selftest_mag:0000000000000000 bno055_get_selftest_mag
     /tmp/ccO72alg.s:7928   .text.bno055_get_selftest_mag:0000000000000058 $d
     /tmp/ccO72alg.s:7933   .text.bno055_get_selftest_gyro:0000000000000000 $t
     /tmp/ccO72alg.s:7939   .text.bno055_get_selftest_gyro:0000000000000000 bno055_get_selftest_gyro
     /tmp/ccO72alg.s:8043   .text.bno055_get_selftest_gyro:0000000000000058 $d
     /tmp/ccO72alg.s:8048   .text.bno055_get_selftest_mcu:0000000000000000 $t
     /tmp/ccO72alg.s:8054   .text.bno055_get_selftest_mcu:0000000000000000 bno055_get_selftest_mcu
     /tmp/ccO72alg.s:8158   .text.bno055_get_selftest_mcu:0000000000000058 $d
     /tmp/ccO72alg.s:8163   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:8169   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000000 bno055_get_intr_stat_gyro_any_motion
     /tmp/ccO72alg.s:8273   .text.bno055_get_intr_stat_gyro_any_motion:0000000000000058 $d
     /tmp/ccO72alg.s:8278   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 $t
     /tmp/ccO72alg.s:8284   .text.bno055_get_intr_stat_gyro_highrate:0000000000000000 bno055_get_intr_stat_gyro_highrate
     /tmp/ccO72alg.s:8388   .text.bno055_get_intr_stat_gyro_highrate:0000000000000058 $d
     /tmp/ccO72alg.s:8393   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1140


     /tmp/ccO72alg.s:8399   .text.bno055_get_intr_stat_accel_high_g:0000000000000000 bno055_get_intr_stat_accel_high_g
     /tmp/ccO72alg.s:8503   .text.bno055_get_intr_stat_accel_high_g:0000000000000058 $d
     /tmp/ccO72alg.s:8508   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:8514   .text.bno055_get_intr_stat_accel_any_motion:0000000000000000 bno055_get_intr_stat_accel_any_motion
     /tmp/ccO72alg.s:8618   .text.bno055_get_intr_stat_accel_any_motion:0000000000000058 $d
     /tmp/ccO72alg.s:8623   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 $t
     /tmp/ccO72alg.s:8629   .text.bno055_get_intr_stat_accel_no_motion:0000000000000000 bno055_get_intr_stat_accel_no_motion
     /tmp/ccO72alg.s:8733   .text.bno055_get_intr_stat_accel_no_motion:0000000000000054 $d
     /tmp/ccO72alg.s:8738   .text.bno055_get_stat_main_clk:0000000000000000 $t
     /tmp/ccO72alg.s:8744   .text.bno055_get_stat_main_clk:0000000000000000 bno055_get_stat_main_clk
     /tmp/ccO72alg.s:8848   .text.bno055_get_stat_main_clk:0000000000000058 $d
     /tmp/ccO72alg.s:8853   .text.bno055_get_sys_stat_code:0000000000000000 $t
     /tmp/ccO72alg.s:8859   .text.bno055_get_sys_stat_code:0000000000000000 bno055_get_sys_stat_code
     /tmp/ccO72alg.s:8962   .text.bno055_get_sys_stat_code:0000000000000054 $d
     /tmp/ccO72alg.s:8967   .text.bno055_get_sys_error_code:0000000000000000 $t
     /tmp/ccO72alg.s:8973   .text.bno055_get_sys_error_code:0000000000000000 bno055_get_sys_error_code
     /tmp/ccO72alg.s:9076   .text.bno055_get_sys_error_code:0000000000000054 $d
     /tmp/ccO72alg.s:9081   .text.bno055_get_accel_unit:0000000000000000 $t
     /tmp/ccO72alg.s:9087   .text.bno055_get_accel_unit:0000000000000000 bno055_get_accel_unit
     /tmp/ccO72alg.s:9191   .text.bno055_get_accel_unit:0000000000000058 $d
     /tmp/ccO72alg.s:9196   .text.bno055_get_gyro_unit:0000000000000000 $t
     /tmp/ccO72alg.s:9202   .text.bno055_get_gyro_unit:0000000000000000 bno055_get_gyro_unit
     /tmp/ccO72alg.s:9306   .text.bno055_get_gyro_unit:0000000000000058 $d
     /tmp/ccO72alg.s:9311   .text.bno055_get_euler_unit:0000000000000000 $t
     /tmp/ccO72alg.s:9317   .text.bno055_get_euler_unit:0000000000000000 bno055_get_euler_unit
     /tmp/ccO72alg.s:9421   .text.bno055_get_euler_unit:0000000000000058 $d
     /tmp/ccO72alg.s:9426   .text.bno055_get_tilt_unit:0000000000000000 $t
     /tmp/ccO72alg.s:9432   .text.bno055_get_tilt_unit:0000000000000000 bno055_get_tilt_unit
     /tmp/ccO72alg.s:9536   .text.bno055_get_tilt_unit:0000000000000058 $d
     /tmp/ccO72alg.s:9541   .text.bno055_get_temp_unit:0000000000000000 $t
     /tmp/ccO72alg.s:9547   .text.bno055_get_temp_unit:0000000000000000 bno055_get_temp_unit
     /tmp/ccO72alg.s:9651   .text.bno055_get_temp_unit:0000000000000058 $d
     /tmp/ccO72alg.s:9656   .text.bno055_get_data_output_format:0000000000000000 $t
     /tmp/ccO72alg.s:9662   .text.bno055_get_data_output_format:0000000000000000 bno055_get_data_output_format
     /tmp/ccO72alg.s:9766   .text.bno055_get_data_output_format:0000000000000054 $d
     /tmp/ccO72alg.s:9771   .text.bno055_get_operation_mode:0000000000000000 $t
     /tmp/ccO72alg.s:9777   .text.bno055_get_operation_mode:0000000000000000 bno055_get_operation_mode
     /tmp/ccO72alg.s:9881   .text.bno055_get_operation_mode:0000000000000058 $d
     /tmp/ccO72alg.s:9886   .text.bno055_set_operation_mode:0000000000000000 $t
     /tmp/ccO72alg.s:9892   .text.bno055_set_operation_mode:0000000000000000 bno055_set_operation_mode
     /tmp/ccO72alg.s:10133  .text.bno055_set_operation_mode:000000000000011c $d
     /tmp/ccO72alg.s:10138  .text.bno055_set_accel_unit:0000000000000000 $t
     /tmp/ccO72alg.s:10144  .text.bno055_set_accel_unit:0000000000000000 bno055_set_accel_unit
     /tmp/ccO72alg.s:10311  .text.bno055_set_accel_unit:00000000000000a4 $d
     /tmp/ccO72alg.s:10316  .text.bno055_convert_float_accel_x_msq:0000000000000000 $t
     /tmp/ccO72alg.s:10322  .text.bno055_convert_float_accel_x_msq:0000000000000000 bno055_convert_float_accel_x_msq
     /tmp/ccO72alg.s:10451  .text.bno055_convert_float_accel_x_msq:0000000000000074 $d
     /tmp/ccO72alg.s:10457  .text.bno055_convert_float_accel_x_mg:0000000000000000 $t
     /tmp/ccO72alg.s:10463  .text.bno055_convert_float_accel_x_mg:0000000000000000 bno055_convert_float_accel_x_mg
     /tmp/ccO72alg.s:10581  .text.bno055_convert_float_accel_y_msq:0000000000000000 $t
     /tmp/ccO72alg.s:10587  .text.bno055_convert_float_accel_y_msq:0000000000000000 bno055_convert_float_accel_y_msq
     /tmp/ccO72alg.s:10716  .text.bno055_convert_float_accel_y_msq:0000000000000074 $d
     /tmp/ccO72alg.s:10722  .text.bno055_convert_float_accel_y_mg:0000000000000000 $t
     /tmp/ccO72alg.s:10728  .text.bno055_convert_float_accel_y_mg:0000000000000000 bno055_convert_float_accel_y_mg
     /tmp/ccO72alg.s:10846  .text.bno055_convert_float_accel_z_msq:0000000000000000 $t
     /tmp/ccO72alg.s:10852  .text.bno055_convert_float_accel_z_msq:0000000000000000 bno055_convert_float_accel_z_msq
     /tmp/ccO72alg.s:10981  .text.bno055_convert_float_accel_z_msq:0000000000000074 $d
ARM GAS  /tmp/ccO72alg.s 			page 1141


     /tmp/ccO72alg.s:10987  .text.bno055_convert_float_accel_z_mg:0000000000000000 $t
     /tmp/ccO72alg.s:10993  .text.bno055_convert_float_accel_z_mg:0000000000000000 bno055_convert_float_accel_z_mg
     /tmp/ccO72alg.s:11111  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 $t
     /tmp/ccO72alg.s:11117  .text.bno055_convert_float_accel_xyz_msq:0000000000000000 bno055_convert_float_accel_xyz_msq
     /tmp/ccO72alg.s:11264  .text.bno055_convert_float_accel_xyz_msq:000000000000009c $d
     /tmp/ccO72alg.s:11269  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 $t
     /tmp/ccO72alg.s:11275  .text.bno055_convert_float_accel_xyz_mg:0000000000000000 bno055_convert_float_accel_xyz_mg
     /tmp/ccO72alg.s:11412  .text.bno055_convert_double_accel_x_msq:0000000000000000 $t
     /tmp/ccO72alg.s:11418  .text.bno055_convert_double_accel_x_msq:0000000000000000 bno055_convert_double_accel_x_msq
     /tmp/ccO72alg.s:11536  .text.bno055_convert_double_accel_x_msq:0000000000000068 $d
     /tmp/ccO72alg.s:11541  .text.bno055_convert_double_accel_x_mg:0000000000000000 $t
     /tmp/ccO72alg.s:11547  .text.bno055_convert_double_accel_x_mg:0000000000000000 bno055_convert_double_accel_x_mg
     /tmp/ccO72alg.s:11662  .text.bno055_convert_double_accel_y_msq:0000000000000000 $t
     /tmp/ccO72alg.s:11668  .text.bno055_convert_double_accel_y_msq:0000000000000000 bno055_convert_double_accel_y_msq
     /tmp/ccO72alg.s:11786  .text.bno055_convert_double_accel_y_msq:0000000000000068 $d
     /tmp/ccO72alg.s:11791  .text.bno055_convert_double_accel_y_mg:0000000000000000 $t
     /tmp/ccO72alg.s:11797  .text.bno055_convert_double_accel_y_mg:0000000000000000 bno055_convert_double_accel_y_mg
     /tmp/ccO72alg.s:11912  .text.bno055_convert_double_accel_z_msq:0000000000000000 $t
     /tmp/ccO72alg.s:11918  .text.bno055_convert_double_accel_z_msq:0000000000000000 bno055_convert_double_accel_z_msq
     /tmp/ccO72alg.s:12036  .text.bno055_convert_double_accel_z_msq:0000000000000068 $d
     /tmp/ccO72alg.s:12041  .text.bno055_convert_double_accel_z_mg:0000000000000000 $t
     /tmp/ccO72alg.s:12047  .text.bno055_convert_double_accel_z_mg:0000000000000000 bno055_convert_double_accel_z_mg
     /tmp/ccO72alg.s:12162  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 $t
     /tmp/ccO72alg.s:12168  .text.bno055_convert_double_accel_xyz_msq:0000000000000000 bno055_convert_double_accel_xyz_msq
     /tmp/ccO72alg.s:12306  .text.bno055_convert_double_accel_xyz_msq:0000000000000094 $d
     /tmp/ccO72alg.s:12311  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 $t
     /tmp/ccO72alg.s:12317  .text.bno055_convert_double_accel_xyz_mg:0000000000000000 bno055_convert_double_accel_xyz_mg
     /tmp/ccO72alg.s:12445  .text.bno055_set_gyro_unit:0000000000000000 $t
     /tmp/ccO72alg.s:12451  .text.bno055_set_gyro_unit:0000000000000000 bno055_set_gyro_unit
     /tmp/ccO72alg.s:12619  .text.bno055_set_gyro_unit:00000000000000a8 $d
     /tmp/ccO72alg.s:12624  .text.bno055_convert_float_gyro_x_dps:0000000000000000 $t
     /tmp/ccO72alg.s:12630  .text.bno055_convert_float_gyro_x_dps:0000000000000000 bno055_convert_float_gyro_x_dps
     /tmp/ccO72alg.s:12750  .text.bno055_convert_float_gyro_x_dps:0000000000000068 $d
     /tmp/ccO72alg.s:12755  .text.bno055_convert_float_gyro_x_rps:0000000000000000 $t
     /tmp/ccO72alg.s:12761  .text.bno055_convert_float_gyro_x_rps:0000000000000000 bno055_convert_float_gyro_x_rps
     /tmp/ccO72alg.s:12882  .text.bno055_convert_float_gyro_x_rps:000000000000006c $d
     /tmp/ccO72alg.s:12887  .text.bno055_convert_float_gyro_y_dps:0000000000000000 $t
     /tmp/ccO72alg.s:12893  .text.bno055_convert_float_gyro_y_dps:0000000000000000 bno055_convert_float_gyro_y_dps
     /tmp/ccO72alg.s:13013  .text.bno055_convert_float_gyro_y_dps:0000000000000068 $d
     /tmp/ccO72alg.s:13018  .text.bno055_convert_float_gyro_y_rps:0000000000000000 $t
     /tmp/ccO72alg.s:13024  .text.bno055_convert_float_gyro_y_rps:0000000000000000 bno055_convert_float_gyro_y_rps
     /tmp/ccO72alg.s:13145  .text.bno055_convert_float_gyro_y_rps:000000000000006c $d
     /tmp/ccO72alg.s:13150  .text.bno055_convert_float_gyro_z_dps:0000000000000000 $t
     /tmp/ccO72alg.s:13156  .text.bno055_convert_float_gyro_z_dps:0000000000000000 bno055_convert_float_gyro_z_dps
     /tmp/ccO72alg.s:13276  .text.bno055_convert_float_gyro_z_dps:0000000000000068 $d
     /tmp/ccO72alg.s:13281  .text.bno055_convert_float_gyro_z_rps:0000000000000000 $t
     /tmp/ccO72alg.s:13287  .text.bno055_convert_float_gyro_z_rps:0000000000000000 bno055_convert_float_gyro_z_rps
     /tmp/ccO72alg.s:13408  .text.bno055_convert_float_gyro_z_rps:000000000000006c $d
     /tmp/ccO72alg.s:13413  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 $t
     /tmp/ccO72alg.s:13419  .text.bno055_convert_float_gyro_xyz_dps:0000000000000000 bno055_convert_float_gyro_xyz_dps
     /tmp/ccO72alg.s:13566  .text.bno055_convert_float_gyro_xyz_dps:000000000000009c $d
     /tmp/ccO72alg.s:13571  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 $t
     /tmp/ccO72alg.s:13577  .text.bno055_convert_float_gyro_xyz_rps:0000000000000000 bno055_convert_float_gyro_xyz_rps
     /tmp/ccO72alg.s:13725  .text.bno055_convert_float_gyro_xyz_rps:000000000000009c $d
     /tmp/ccO72alg.s:13730  .text.bno055_convert_double_gyro_x_dps:0000000000000000 $t
     /tmp/ccO72alg.s:13736  .text.bno055_convert_double_gyro_x_dps:0000000000000000 bno055_convert_double_gyro_x_dps
     /tmp/ccO72alg.s:13854  .text.bno055_convert_double_gyro_x_dps:0000000000000068 $d
ARM GAS  /tmp/ccO72alg.s 			page 1142


     /tmp/ccO72alg.s:13859  .text.bno055_convert_double_gyro_x_rps:0000000000000000 $t
     /tmp/ccO72alg.s:13865  .text.bno055_convert_double_gyro_x_rps:0000000000000000 bno055_convert_double_gyro_x_rps
     /tmp/ccO72alg.s:13984  .text.bno055_convert_double_gyro_x_rps:0000000000000068 $d
     /tmp/ccO72alg.s:13989  .text.bno055_convert_double_gyro_y_dps:0000000000000000 $t
     /tmp/ccO72alg.s:13995  .text.bno055_convert_double_gyro_y_dps:0000000000000000 bno055_convert_double_gyro_y_dps
     /tmp/ccO72alg.s:14113  .text.bno055_convert_double_gyro_y_dps:0000000000000068 $d
     /tmp/ccO72alg.s:14118  .text.bno055_convert_double_gyro_y_rps:0000000000000000 $t
     /tmp/ccO72alg.s:14124  .text.bno055_convert_double_gyro_y_rps:0000000000000000 bno055_convert_double_gyro_y_rps
     /tmp/ccO72alg.s:14243  .text.bno055_convert_double_gyro_y_rps:0000000000000068 $d
     /tmp/ccO72alg.s:14248  .text.bno055_convert_double_gyro_z_dps:0000000000000000 $t
     /tmp/ccO72alg.s:14254  .text.bno055_convert_double_gyro_z_dps:0000000000000000 bno055_convert_double_gyro_z_dps
     /tmp/ccO72alg.s:14372  .text.bno055_convert_double_gyro_z_dps:0000000000000068 $d
     /tmp/ccO72alg.s:14377  .text.bno055_convert_double_gyro_z_rps:0000000000000000 $t
     /tmp/ccO72alg.s:14383  .text.bno055_convert_double_gyro_z_rps:0000000000000000 bno055_convert_double_gyro_z_rps
     /tmp/ccO72alg.s:14502  .text.bno055_convert_double_gyro_z_rps:0000000000000068 $d
     /tmp/ccO72alg.s:14507  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 $t
     /tmp/ccO72alg.s:14513  .text.bno055_convert_double_gyro_xyz_dps:0000000000000000 bno055_convert_double_gyro_xyz_dps
     /tmp/ccO72alg.s:14651  .text.bno055_convert_double_gyro_xyz_dps:0000000000000094 $d
     /tmp/ccO72alg.s:14656  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 $t
     /tmp/ccO72alg.s:14662  .text.bno055_convert_double_gyro_xyz_rps:0000000000000000 bno055_convert_double_gyro_xyz_rps
     /tmp/ccO72alg.s:14801  .text.bno055_convert_double_gyro_xyz_rps:0000000000000098 $d
     /tmp/ccO72alg.s:14806  .text.bno055_set_euler_unit:0000000000000000 $t
     /tmp/ccO72alg.s:14812  .text.bno055_set_euler_unit:0000000000000000 bno055_set_euler_unit
     /tmp/ccO72alg.s:14980  .text.bno055_set_euler_unit:00000000000000a8 $d
     /tmp/ccO72alg.s:14985  .text.bno055_convert_float_euler_h_deg:0000000000000000 $t
     /tmp/ccO72alg.s:14991  .text.bno055_convert_float_euler_h_deg:0000000000000000 bno055_convert_float_euler_h_deg
     /tmp/ccO72alg.s:15111  .text.bno055_convert_float_euler_h_deg:0000000000000068 $d
     /tmp/ccO72alg.s:15116  .text.bno055_convert_float_euler_h_rad:0000000000000000 $t
     /tmp/ccO72alg.s:15122  .text.bno055_convert_float_euler_h_rad:0000000000000000 bno055_convert_float_euler_h_rad
     /tmp/ccO72alg.s:15243  .text.bno055_convert_float_euler_h_rad:000000000000006c $d
     /tmp/ccO72alg.s:15248  .text.bno055_convert_float_euler_r_deg:0000000000000000 $t
     /tmp/ccO72alg.s:15254  .text.bno055_convert_float_euler_r_deg:0000000000000000 bno055_convert_float_euler_r_deg
     /tmp/ccO72alg.s:15374  .text.bno055_convert_float_euler_r_deg:0000000000000068 $d
     /tmp/ccO72alg.s:15379  .text.bno055_convert_float_euler_r_rad:0000000000000000 $t
     /tmp/ccO72alg.s:15385  .text.bno055_convert_float_euler_r_rad:0000000000000000 bno055_convert_float_euler_r_rad
     /tmp/ccO72alg.s:15506  .text.bno055_convert_float_euler_r_rad:000000000000006c $d
     /tmp/ccO72alg.s:15511  .text.bno055_convert_float_euler_p_deg:0000000000000000 $t
     /tmp/ccO72alg.s:15517  .text.bno055_convert_float_euler_p_deg:0000000000000000 bno055_convert_float_euler_p_deg
     /tmp/ccO72alg.s:15637  .text.bno055_convert_float_euler_p_deg:0000000000000068 $d
     /tmp/ccO72alg.s:15642  .text.bno055_convert_float_euler_p_rad:0000000000000000 $t
     /tmp/ccO72alg.s:15648  .text.bno055_convert_float_euler_p_rad:0000000000000000 bno055_convert_float_euler_p_rad
     /tmp/ccO72alg.s:15769  .text.bno055_convert_float_euler_p_rad:000000000000006c $d
     /tmp/ccO72alg.s:15774  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 $t
     /tmp/ccO72alg.s:15780  .text.bno055_convert_float_euler_hpr_deg:0000000000000000 bno055_convert_float_euler_hpr_deg
     /tmp/ccO72alg.s:15927  .text.bno055_convert_float_euler_hpr_deg:000000000000009c $d
     /tmp/ccO72alg.s:15932  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 $t
     /tmp/ccO72alg.s:15938  .text.bno055_convert_float_euler_hpr_rad:0000000000000000 bno055_convert_float_euler_hpr_rad
     /tmp/ccO72alg.s:16086  .text.bno055_convert_float_euler_hpr_rad:000000000000009c $d
     /tmp/ccO72alg.s:16091  .text.bno055_convert_double_euler_h_deg:0000000000000000 $t
     /tmp/ccO72alg.s:16097  .text.bno055_convert_double_euler_h_deg:0000000000000000 bno055_convert_double_euler_h_deg
     /tmp/ccO72alg.s:16215  .text.bno055_convert_double_euler_h_deg:0000000000000068 $d
     /tmp/ccO72alg.s:16220  .text.bno055_convert_double_euler_h_rad:0000000000000000 $t
     /tmp/ccO72alg.s:16226  .text.bno055_convert_double_euler_h_rad:0000000000000000 bno055_convert_double_euler_h_rad
     /tmp/ccO72alg.s:16345  .text.bno055_convert_double_euler_h_rad:0000000000000068 $d
     /tmp/ccO72alg.s:16350  .text.bno055_convert_double_euler_r_deg:0000000000000000 $t
     /tmp/ccO72alg.s:16356  .text.bno055_convert_double_euler_r_deg:0000000000000000 bno055_convert_double_euler_r_deg
     /tmp/ccO72alg.s:16474  .text.bno055_convert_double_euler_r_deg:0000000000000068 $d
ARM GAS  /tmp/ccO72alg.s 			page 1143


     /tmp/ccO72alg.s:16479  .text.bno055_convert_double_euler_r_rad:0000000000000000 $t
     /tmp/ccO72alg.s:16485  .text.bno055_convert_double_euler_r_rad:0000000000000000 bno055_convert_double_euler_r_rad
     /tmp/ccO72alg.s:16604  .text.bno055_convert_double_euler_r_rad:0000000000000068 $d
     /tmp/ccO72alg.s:16609  .text.bno055_convert_double_euler_p_deg:0000000000000000 $t
     /tmp/ccO72alg.s:16615  .text.bno055_convert_double_euler_p_deg:0000000000000000 bno055_convert_double_euler_p_deg
     /tmp/ccO72alg.s:16733  .text.bno055_convert_double_euler_p_deg:0000000000000068 $d
     /tmp/ccO72alg.s:16738  .text.bno055_convert_double_euler_p_rad:0000000000000000 $t
     /tmp/ccO72alg.s:16744  .text.bno055_convert_double_euler_p_rad:0000000000000000 bno055_convert_double_euler_p_rad
     /tmp/ccO72alg.s:16863  .text.bno055_convert_double_euler_p_rad:0000000000000068 $d
     /tmp/ccO72alg.s:16868  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 $t
     /tmp/ccO72alg.s:16874  .text.bno055_convert_double_euler_hpr_deg:0000000000000000 bno055_convert_double_euler_hpr_deg
     /tmp/ccO72alg.s:17012  .text.bno055_convert_double_euler_hpr_deg:0000000000000094 $d
     /tmp/ccO72alg.s:17017  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 $t
     /tmp/ccO72alg.s:17023  .text.bno055_convert_double_euler_hpr_rad:0000000000000000 bno055_convert_double_euler_hpr_rad
     /tmp/ccO72alg.s:17150  .text.bno055_convert_double_euler_hpr_rad:000000000000008c $d
     /tmp/ccO72alg.s:17155  .text.bno055_set_tilt_unit:0000000000000000 $t
     /tmp/ccO72alg.s:17161  .text.bno055_set_tilt_unit:0000000000000000 bno055_set_tilt_unit
     /tmp/ccO72alg.s:17329  .text.bno055_set_tilt_unit:00000000000000a8 $d
     /tmp/ccO72alg.s:17334  .text.bno055_set_temp_unit:0000000000000000 $t
     /tmp/ccO72alg.s:17340  .text.bno055_set_temp_unit:0000000000000000 bno055_set_temp_unit
     /tmp/ccO72alg.s:17508  .text.bno055_set_temp_unit:00000000000000a8 $d
     /tmp/ccO72alg.s:17514  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 $t
     /tmp/ccO72alg.s:17520  .text.bno055_convert_float_temp_fahrenheit:0000000000000000 bno055_convert_float_temp_fahrenheit
     /tmp/ccO72alg.s:17642  .text.bno055_convert_float_temp_celsius:0000000000000000 $t
     /tmp/ccO72alg.s:17648  .text.bno055_convert_float_temp_celsius:0000000000000000 bno055_convert_float_temp_celsius
     /tmp/ccO72alg.s:17765  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 $t
     /tmp/ccO72alg.s:17771  .text.bno055_convert_double_temp_fahrenheit:0000000000000000 bno055_convert_double_temp_fahrenheit
     /tmp/ccO72alg.s:17898  .text.bno055_convert_double_temp_celsius:0000000000000000 $t
     /tmp/ccO72alg.s:17904  .text.bno055_convert_double_temp_celsius:0000000000000000 bno055_convert_double_temp_celsius
     /tmp/ccO72alg.s:18025  .text.bno055_set_data_output_format:0000000000000000 $t
     /tmp/ccO72alg.s:18031  .text.bno055_set_data_output_format:0000000000000000 bno055_set_data_output_format
     /tmp/ccO72alg.s:18196  .text.bno055_set_data_output_format:00000000000000a0 $d
     /tmp/ccO72alg.s:18201  .text.bno055_get_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:18207  .text.bno055_get_power_mode:0000000000000000 bno055_get_power_mode
     /tmp/ccO72alg.s:18311  .text.bno055_get_power_mode:0000000000000058 $d
     /tmp/ccO72alg.s:18316  .text.bno055_set_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:18322  .text.bno055_set_power_mode:0000000000000000 bno055_set_power_mode
     /tmp/ccO72alg.s:18489  .text.bno055_set_power_mode:00000000000000a4 $d
     /tmp/ccO72alg.s:18494  .text.bno055_get_intr_rst:0000000000000000 $t
     /tmp/ccO72alg.s:18500  .text.bno055_get_intr_rst:0000000000000000 bno055_get_intr_rst
     /tmp/ccO72alg.s:18604  .text.bno055_get_intr_rst:0000000000000058 $d
     /tmp/ccO72alg.s:18609  .text.bno055_set_intr_rst:0000000000000000 $t
     /tmp/ccO72alg.s:18615  .text.bno055_set_intr_rst:0000000000000000 bno055_set_intr_rst
     /tmp/ccO72alg.s:18744  .text.bno055_set_intr_rst:0000000000000084 $d
     /tmp/ccO72alg.s:18749  .text.bno055_get_clk_src:0000000000000000 $t
     /tmp/ccO72alg.s:18755  .text.bno055_get_clk_src:0000000000000000 bno055_get_clk_src
     /tmp/ccO72alg.s:18859  .text.bno055_get_clk_src:0000000000000054 $d
     /tmp/ccO72alg.s:18864  .text.bno055_set_clk_src:0000000000000000 $t
     /tmp/ccO72alg.s:18870  .text.bno055_set_clk_src:0000000000000000 bno055_set_clk_src
     /tmp/ccO72alg.s:18996  .text.bno055_set_clk_src:000000000000007c $d
     /tmp/ccO72alg.s:19001  .text.bno055_get_sys_rst:0000000000000000 $t
     /tmp/ccO72alg.s:19007  .text.bno055_get_sys_rst:0000000000000000 bno055_get_sys_rst
     /tmp/ccO72alg.s:19111  .text.bno055_get_sys_rst:0000000000000058 $d
     /tmp/ccO72alg.s:19116  .text.bno055_set_sys_rst:0000000000000000 $t
     /tmp/ccO72alg.s:19122  .text.bno055_set_sys_rst:0000000000000000 bno055_set_sys_rst
     /tmp/ccO72alg.s:19246  .text.bno055_set_sys_rst:0000000000000078 $d
     /tmp/ccO72alg.s:19251  .text.bno055_get_selftest:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1144


     /tmp/ccO72alg.s:19257  .text.bno055_get_selftest:0000000000000000 bno055_get_selftest
     /tmp/ccO72alg.s:19361  .text.bno055_get_selftest:0000000000000058 $d
     /tmp/ccO72alg.s:19366  .text.bno055_set_selftest:0000000000000000 $t
     /tmp/ccO72alg.s:19372  .text.bno055_set_selftest:0000000000000000 bno055_set_selftest
     /tmp/ccO72alg.s:19539  .text.bno055_set_selftest:00000000000000a4 $d
     /tmp/ccO72alg.s:19544  .text.bno055_get_temp_source:0000000000000000 $t
     /tmp/ccO72alg.s:19550  .text.bno055_get_temp_source:0000000000000000 bno055_get_temp_source
     /tmp/ccO72alg.s:19654  .text.bno055_get_temp_source:0000000000000058 $d
     /tmp/ccO72alg.s:19659  .text.bno055_set_temp_source:0000000000000000 $t
     /tmp/ccO72alg.s:19665  .text.bno055_set_temp_source:0000000000000000 bno055_set_temp_source
     /tmp/ccO72alg.s:19832  .text.bno055_set_temp_source:00000000000000a4 $d
     /tmp/ccO72alg.s:19837  .text.bno055_get_axis_remap_value:0000000000000000 $t
     /tmp/ccO72alg.s:19843  .text.bno055_get_axis_remap_value:0000000000000000 bno055_get_axis_remap_value
     /tmp/ccO72alg.s:19947  .text.bno055_get_axis_remap_value:0000000000000058 $d
     /tmp/ccO72alg.s:19952  .text.bno055_set_axis_remap_value:0000000000000000 $t
     /tmp/ccO72alg.s:19958  .text.bno055_set_axis_remap_value:0000000000000000 bno055_set_axis_remap_value
     /tmp/ccO72alg.s:20023  .text.bno055_set_axis_remap_value:000000000000003a $d
     /tmp/ccO72alg.s:20214  .text.bno055_set_axis_remap_value:0000000000000118 $d
     /tmp/ccO72alg.s:20219  .text.bno055_get_remap_x_sign:0000000000000000 $t
     /tmp/ccO72alg.s:20225  .text.bno055_get_remap_x_sign:0000000000000000 bno055_get_remap_x_sign
     /tmp/ccO72alg.s:20329  .text.bno055_get_remap_x_sign:0000000000000058 $d
     /tmp/ccO72alg.s:20334  .text.bno055_set_remap_x_sign:0000000000000000 $t
     /tmp/ccO72alg.s:20340  .text.bno055_set_remap_x_sign:0000000000000000 bno055_set_remap_x_sign
     /tmp/ccO72alg.s:20508  .text.bno055_set_remap_x_sign:00000000000000a8 $d
     /tmp/ccO72alg.s:20513  .text.bno055_get_remap_y_sign:0000000000000000 $t
     /tmp/ccO72alg.s:20519  .text.bno055_get_remap_y_sign:0000000000000000 bno055_get_remap_y_sign
     /tmp/ccO72alg.s:20623  .text.bno055_get_remap_y_sign:0000000000000058 $d
     /tmp/ccO72alg.s:20628  .text.bno055_set_remap_y_sign:0000000000000000 $t
     /tmp/ccO72alg.s:20634  .text.bno055_set_remap_y_sign:0000000000000000 bno055_set_remap_y_sign
     /tmp/ccO72alg.s:20802  .text.bno055_set_remap_y_sign:00000000000000a8 $d
     /tmp/ccO72alg.s:20807  .text.bno055_get_remap_z_sign:0000000000000000 $t
     /tmp/ccO72alg.s:20813  .text.bno055_get_remap_z_sign:0000000000000000 bno055_get_remap_z_sign
     /tmp/ccO72alg.s:20917  .text.bno055_get_remap_z_sign:0000000000000058 $d
     /tmp/ccO72alg.s:20922  .text.bno055_set_remap_z_sign:0000000000000000 $t
     /tmp/ccO72alg.s:20928  .text.bno055_set_remap_z_sign:0000000000000000 bno055_set_remap_z_sign
     /tmp/ccO72alg.s:21095  .text.bno055_set_remap_z_sign:00000000000000a4 $d
     /tmp/ccO72alg.s:21100  .text.bno055_read_sic_matrix:0000000000000000 $t
     /tmp/ccO72alg.s:21106  .text.bno055_read_sic_matrix:0000000000000000 bno055_read_sic_matrix
     /tmp/ccO72alg.s:21319  .text.bno055_read_sic_matrix:00000000000000e4 $d
     /tmp/ccO72alg.s:21325  .text.bno055_write_sic_matrix:0000000000000000 $t
     /tmp/ccO72alg.s:21331  .text.bno055_write_sic_matrix:0000000000000000 bno055_write_sic_matrix
     /tmp/ccO72alg.s:21925  .text.bno055_write_sic_matrix:00000000000002ac $d
     /tmp/ccO72alg.s:21929  .text.bno055_write_sic_matrix:00000000000002b0 $t
     /tmp/ccO72alg.s:22378  .text.bno055_write_sic_matrix:00000000000004ac $d
     /tmp/ccO72alg.s:22383  .text.bno055_read_accel_offset:0000000000000000 $t
     /tmp/ccO72alg.s:22389  .text.bno055_read_accel_offset:0000000000000000 bno055_read_accel_offset
     /tmp/ccO72alg.s:22575  .text.bno055_read_accel_offset:00000000000000b8 $d
     /tmp/ccO72alg.s:22581  .text.bno055_write_accel_offset:0000000000000000 $t
     /tmp/ccO72alg.s:22587  .text.bno055_write_accel_offset:0000000000000000 bno055_write_accel_offset
     /tmp/ccO72alg.s:23114  .text.bno055_write_accel_offset:0000000000000240 $d
     /tmp/ccO72alg.s:23119  .text.bno055_read_mag_offset:0000000000000000 $t
     /tmp/ccO72alg.s:23125  .text.bno055_read_mag_offset:0000000000000000 bno055_read_mag_offset
     /tmp/ccO72alg.s:23311  .text.bno055_read_mag_offset:00000000000000b8 $d
     /tmp/ccO72alg.s:23317  .text.bno055_write_mag_offset:0000000000000000 $t
     /tmp/ccO72alg.s:23323  .text.bno055_write_mag_offset:0000000000000000 bno055_write_mag_offset
     /tmp/ccO72alg.s:23854  .text.bno055_write_mag_offset:000000000000024c $d
     /tmp/ccO72alg.s:23859  .text.bno055_read_gyro_offset:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1145


     /tmp/ccO72alg.s:23865  .text.bno055_read_gyro_offset:0000000000000000 bno055_read_gyro_offset
     /tmp/ccO72alg.s:24006  .text.bno055_read_gyro_offset:0000000000000084 $d
     /tmp/ccO72alg.s:24012  .text.bno055_write_gyro_offset:0000000000000000 $t
     /tmp/ccO72alg.s:24018  .text.bno055_write_gyro_offset:0000000000000000 bno055_write_gyro_offset
     /tmp/ccO72alg.s:24447  .text.bno055_write_gyro_offset:00000000000001d4 $d
     /tmp/ccO72alg.s:24452  .text.bno055_get_accel_range:0000000000000000 $t
     /tmp/ccO72alg.s:24458  .text.bno055_get_accel_range:0000000000000000 bno055_get_accel_range
     /tmp/ccO72alg.s:24564  .text.bno055_get_accel_range:000000000000005c $d
     /tmp/ccO72alg.s:24569  .text.bno055_set_accel_range:0000000000000000 $t
     /tmp/ccO72alg.s:24575  .text.bno055_set_accel_range:0000000000000000 bno055_set_accel_range
     /tmp/ccO72alg.s:24772  .text.bno055_set_accel_range:00000000000000c0 $d
     /tmp/ccO72alg.s:24777  .text.bno055_get_accel_bw:0000000000000000 $t
     /tmp/ccO72alg.s:24783  .text.bno055_get_accel_bw:0000000000000000 bno055_get_accel_bw
     /tmp/ccO72alg.s:24889  .text.bno055_get_accel_bw:000000000000005c $d
     /tmp/ccO72alg.s:24894  .text.bno055_set_accel_bw:0000000000000000 $t
     /tmp/ccO72alg.s:24900  .text.bno055_set_accel_bw:0000000000000000 bno055_set_accel_bw
     /tmp/ccO72alg.s:25098  .text.bno055_set_accel_bw:00000000000000c0 $d
     /tmp/ccO72alg.s:25103  .text.bno055_get_accel_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:25109  .text.bno055_get_accel_power_mode:0000000000000000 bno055_get_accel_power_mode
     /tmp/ccO72alg.s:25215  .text.bno055_get_accel_power_mode:0000000000000058 $d
     /tmp/ccO72alg.s:25220  .text.bno055_set_accel_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:25226  .text.bno055_set_accel_power_mode:0000000000000000 bno055_set_accel_power_mode
     /tmp/ccO72alg.s:25420  .text.bno055_set_accel_power_mode:00000000000000b8 $d
     /tmp/ccO72alg.s:25425  .text.bno055_get_mag_data_output_rate:0000000000000000 $t
     /tmp/ccO72alg.s:25431  .text.bno055_get_mag_data_output_rate:0000000000000000 bno055_get_mag_data_output_rate
     /tmp/ccO72alg.s:25537  .text.bno055_get_mag_data_output_rate:000000000000005c $d
     /tmp/ccO72alg.s:25542  .text.bno055_set_mag_data_output_rate:0000000000000000 $t
     /tmp/ccO72alg.s:25548  .text.bno055_set_mag_data_output_rate:0000000000000000 bno055_set_mag_data_output_rate
     /tmp/ccO72alg.s:25744  .text.bno055_set_mag_data_output_rate:00000000000000c0 $d
     /tmp/ccO72alg.s:25749  .text.bno055_get_mag_operation_mode:0000000000000000 $t
     /tmp/ccO72alg.s:25755  .text.bno055_get_mag_operation_mode:0000000000000000 bno055_get_mag_operation_mode
     /tmp/ccO72alg.s:25861  .text.bno055_get_mag_operation_mode:000000000000005c $d
     /tmp/ccO72alg.s:25866  .text.bno055_set_mag_operation_mode:0000000000000000 $t
     /tmp/ccO72alg.s:25872  .text.bno055_set_mag_operation_mode:0000000000000000 bno055_set_mag_operation_mode
     /tmp/ccO72alg.s:26069  .text.bno055_set_mag_operation_mode:00000000000000c0 $d
     /tmp/ccO72alg.s:26074  .text.bno055_get_mag_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:26080  .text.bno055_get_mag_power_mode:0000000000000000 bno055_get_mag_power_mode
     /tmp/ccO72alg.s:26186  .text.bno055_get_mag_power_mode:000000000000005c $d
     /tmp/ccO72alg.s:26191  .text.bno055_set_mag_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:26197  .text.bno055_set_mag_power_mode:0000000000000000 bno055_set_mag_power_mode
     /tmp/ccO72alg.s:26394  .text.bno055_set_mag_power_mode:00000000000000c0 $d
     /tmp/ccO72alg.s:26399  .text.bno055_get_gyro_range:0000000000000000 $t
     /tmp/ccO72alg.s:26405  .text.bno055_get_gyro_range:0000000000000000 bno055_get_gyro_range
     /tmp/ccO72alg.s:26511  .text.bno055_get_gyro_range:000000000000005c $d
     /tmp/ccO72alg.s:26516  .text.bno055_set_gyro_range:0000000000000000 $t
     /tmp/ccO72alg.s:26522  .text.bno055_set_gyro_range:0000000000000000 bno055_set_gyro_range
     /tmp/ccO72alg.s:26718  .text.bno055_set_gyro_range:00000000000000c0 $d
     /tmp/ccO72alg.s:26723  .text.bno055_get_gyro_bw:0000000000000000 $t
     /tmp/ccO72alg.s:26729  .text.bno055_get_gyro_bw:0000000000000000 bno055_get_gyro_bw
     /tmp/ccO72alg.s:26835  .text.bno055_get_gyro_bw:000000000000005c $d
     /tmp/ccO72alg.s:26840  .text.bno055_get_gyro_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:26846  .text.bno055_get_gyro_power_mode:0000000000000000 bno055_get_gyro_power_mode
     /tmp/ccO72alg.s:26952  .text.bno055_get_gyro_power_mode:000000000000005c $d
     /tmp/ccO72alg.s:26957  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 $t
     /tmp/ccO72alg.s:26963  .text.bno055_get_accel_sleep_tmr_mode:0000000000000000 bno055_get_accel_sleep_tmr_mode
     /tmp/ccO72alg.s:27069  .text.bno055_get_accel_sleep_tmr_mode:000000000000005c $d
     /tmp/ccO72alg.s:27074  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1146


     /tmp/ccO72alg.s:27080  .text.bno055_set_accel_sleep_tmr_mode:0000000000000000 bno055_set_accel_sleep_tmr_mode
     /tmp/ccO72alg.s:27277  .text.bno055_set_accel_sleep_tmr_mode:00000000000000c0 $d
     /tmp/ccO72alg.s:27282  .text.bno055_get_accel_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:27288  .text.bno055_get_accel_sleep_durn:0000000000000000 bno055_get_accel_sleep_durn
     /tmp/ccO72alg.s:27394  .text.bno055_get_accel_sleep_durn:000000000000005c $d
     /tmp/ccO72alg.s:27399  .text.bno055_set_accel_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:27405  .text.bno055_set_accel_sleep_durn:0000000000000000 bno055_set_accel_sleep_durn
     /tmp/ccO72alg.s:27603  .text.bno055_set_accel_sleep_durn:00000000000000c0 $d
     /tmp/ccO72alg.s:27608  .text.bno055_get_gyro_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:27614  .text.bno055_get_gyro_sleep_durn:0000000000000000 bno055_get_gyro_sleep_durn
     /tmp/ccO72alg.s:27720  .text.bno055_get_gyro_sleep_durn:000000000000005c $d
     /tmp/ccO72alg.s:27725  .text.bno055_set_gyro_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:27731  .text.bno055_set_gyro_sleep_durn:0000000000000000 bno055_set_gyro_sleep_durn
     /tmp/ccO72alg.s:27927  .text.bno055_set_gyro_sleep_durn:00000000000000c0 $d
     /tmp/ccO72alg.s:27932  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:27938  .text.bno055_get_gyro_auto_sleep_durn:0000000000000000 bno055_get_gyro_auto_sleep_durn
     /tmp/ccO72alg.s:28044  .text.bno055_get_gyro_auto_sleep_durn:000000000000005c $d
     /tmp/ccO72alg.s:28049  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:28055  .text.bno055_gyro_set_auto_sleep_durn:0000000000000000 bno055_gyro_set_auto_sleep_durn
     /tmp/ccO72alg.s:28171  .text.bno055_gyro_set_auto_sleep_durn:000000000000006e $d
     /tmp/ccO72alg.s:28179  .text.bno055_gyro_set_auto_sleep_durn:0000000000000076 $t
     /tmp/ccO72alg.s:28350  .text.bno055_gyro_set_auto_sleep_durn:0000000000000120 $d
     /tmp/ccO72alg.s:28355  .text.bno055_set_gyro_bw:0000000000000000 $t
     /tmp/ccO72alg.s:28361  .text.bno055_set_gyro_bw:0000000000000000 bno055_set_gyro_bw
     /tmp/ccO72alg.s:28607  .text.bno055_set_gyro_bw:00000000000000f8 $d
     /tmp/ccO72alg.s:28612  .text.bno055_set_gyro_power_mode:0000000000000000 $t
     /tmp/ccO72alg.s:28618  .text.bno055_set_gyro_power_mode:0000000000000000 bno055_set_gyro_power_mode
     /tmp/ccO72alg.s:28721  .text.bno055_set_gyro_power_mode:000000000000005e $d
     /tmp/ccO72alg.s:28870  .text.bno055_set_gyro_power_mode:0000000000000100 $d
     /tmp/ccO72alg.s:28875  .text.bno055_get_mag_sleep_mode:0000000000000000 $t
     /tmp/ccO72alg.s:28881  .text.bno055_get_mag_sleep_mode:0000000000000000 bno055_get_mag_sleep_mode
     /tmp/ccO72alg.s:28987  .text.bno055_get_mag_sleep_mode:000000000000005c $d
     /tmp/ccO72alg.s:28992  .text.bno055_set_mag_sleep_mode:0000000000000000 $t
     /tmp/ccO72alg.s:28998  .text.bno055_set_mag_sleep_mode:0000000000000000 bno055_set_mag_sleep_mode
     /tmp/ccO72alg.s:29182  .text.bno055_set_mag_sleep_mode:00000000000000b4 $d
     /tmp/ccO72alg.s:29187  .text.bno055_get_mag_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:29193  .text.bno055_get_mag_sleep_durn:0000000000000000 bno055_get_mag_sleep_durn
     /tmp/ccO72alg.s:29299  .text.bno055_get_mag_sleep_durn:000000000000005c $d
     /tmp/ccO72alg.s:29304  .text.bno055_set_mag_sleep_durn:0000000000000000 $t
     /tmp/ccO72alg.s:29310  .text.bno055_set_mag_sleep_durn:0000000000000000 bno055_set_mag_sleep_durn
     /tmp/ccO72alg.s:29496  .text.bno055_set_mag_sleep_durn:00000000000000b8 $d
     /tmp/ccO72alg.s:29501  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:29507  .text.bno055_get_intr_mask_gyro_any_motion:0000000000000000 bno055_get_intr_mask_gyro_any_motion
     /tmp/ccO72alg.s:29613  .text.bno055_get_intr_mask_gyro_any_motion:000000000000005c $d
     /tmp/ccO72alg.s:29618  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:29624  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000000 bno055_set_intr_mask_gyro_any_motion
     /tmp/ccO72alg.s:29755  .text.bno055_set_intr_mask_gyro_any_motion:0000000000000088 $d
     /tmp/ccO72alg.s:29760  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/ccO72alg.s:29766  .text.bno055_get_intr_mask_gyro_highrate:0000000000000000 bno055_get_intr_mask_gyro_highrate
     /tmp/ccO72alg.s:29872  .text.bno055_get_intr_mask_gyro_highrate:000000000000005c $d
     /tmp/ccO72alg.s:29877  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 $t
     /tmp/ccO72alg.s:29883  .text.bno055_set_intr_mask_gyro_highrate:0000000000000000 bno055_set_intr_mask_gyro_highrate
     /tmp/ccO72alg.s:30014  .text.bno055_set_intr_mask_gyro_highrate:0000000000000088 $d
     /tmp/ccO72alg.s:30019  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 $t
     /tmp/ccO72alg.s:30025  .text.bno055_get_intr_mask_accel_high_g:0000000000000000 bno055_get_intr_mask_accel_high_g
     /tmp/ccO72alg.s:30131  .text.bno055_get_intr_mask_accel_high_g:000000000000005c $d
     /tmp/ccO72alg.s:30136  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1147


     /tmp/ccO72alg.s:30142  .text.bno055_set_intr_mask_accel_high_g:0000000000000000 bno055_set_intr_mask_accel_high_g
     /tmp/ccO72alg.s:30273  .text.bno055_set_intr_mask_accel_high_g:0000000000000088 $d
     /tmp/ccO72alg.s:30278  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:30284  .text.bno055_get_intr_mask_accel_any_motion:0000000000000000 bno055_get_intr_mask_accel_any_motion
     /tmp/ccO72alg.s:30390  .text.bno055_get_intr_mask_accel_any_motion:000000000000005c $d
     /tmp/ccO72alg.s:30395  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:30401  .text.bno055_set_intr_mask_accel_any_motion:0000000000000000 bno055_set_intr_mask_accel_any_motion
     /tmp/ccO72alg.s:30532  .text.bno055_set_intr_mask_accel_any_motion:0000000000000088 $d
     /tmp/ccO72alg.s:30537  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/ccO72alg.s:30543  .text.bno055_get_intr_mask_accel_no_motion:0000000000000000 bno055_get_intr_mask_accel_no_motion
     /tmp/ccO72alg.s:30649  .text.bno055_get_intr_mask_accel_no_motion:0000000000000058 $d
     /tmp/ccO72alg.s:30654  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 $t
     /tmp/ccO72alg.s:30660  .text.bno055_set_intr_mask_accel_no_motion:0000000000000000 bno055_set_intr_mask_accel_no_motion
     /tmp/ccO72alg.s:30788  .text.bno055_set_intr_mask_accel_no_motion:0000000000000080 $d
     /tmp/ccO72alg.s:30793  .text.bno055_get_intr_gyro_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:30799  .text.bno055_get_intr_gyro_any_motion:0000000000000000 bno055_get_intr_gyro_any_motion
     /tmp/ccO72alg.s:30905  .text.bno055_get_intr_gyro_any_motion:000000000000005c $d
     /tmp/ccO72alg.s:30910  .text.bno055_set_intr_gyro_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:30916  .text.bno055_set_intr_gyro_any_motion:0000000000000000 bno055_set_intr_gyro_any_motion
     /tmp/ccO72alg.s:31047  .text.bno055_set_intr_gyro_any_motion:0000000000000088 $d
     /tmp/ccO72alg.s:31052  .text.bno055_get_intr_gyro_highrate:0000000000000000 $t
     /tmp/ccO72alg.s:31058  .text.bno055_get_intr_gyro_highrate:0000000000000000 bno055_get_intr_gyro_highrate
     /tmp/ccO72alg.s:31164  .text.bno055_get_intr_gyro_highrate:000000000000005c $d
     /tmp/ccO72alg.s:31169  .text.bno055_set_intr_gyro_highrate:0000000000000000 $t
     /tmp/ccO72alg.s:31175  .text.bno055_set_intr_gyro_highrate:0000000000000000 bno055_set_intr_gyro_highrate
     /tmp/ccO72alg.s:31306  .text.bno055_set_intr_gyro_highrate:0000000000000088 $d
     /tmp/ccO72alg.s:31311  .text.bno055_get_intr_accel_high_g:0000000000000000 $t
     /tmp/ccO72alg.s:31317  .text.bno055_get_intr_accel_high_g:0000000000000000 bno055_get_intr_accel_high_g
     /tmp/ccO72alg.s:31423  .text.bno055_get_intr_accel_high_g:000000000000005c $d
     /tmp/ccO72alg.s:31428  .text.bno055_set_intr_accel_high_g:0000000000000000 $t
     /tmp/ccO72alg.s:31434  .text.bno055_set_intr_accel_high_g:0000000000000000 bno055_set_intr_accel_high_g
     /tmp/ccO72alg.s:31565  .text.bno055_set_intr_accel_high_g:0000000000000088 $d
     /tmp/ccO72alg.s:31570  .text.bno055_get_intr_accel_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:31576  .text.bno055_get_intr_accel_any_motion:0000000000000000 bno055_get_intr_accel_any_motion
     /tmp/ccO72alg.s:31682  .text.bno055_get_intr_accel_any_motion:000000000000005c $d
     /tmp/ccO72alg.s:31687  .text.bno055_set_intr_accel_any_motion:0000000000000000 $t
     /tmp/ccO72alg.s:31693  .text.bno055_set_intr_accel_any_motion:0000000000000000 bno055_set_intr_accel_any_motion
     /tmp/ccO72alg.s:31824  .text.bno055_set_intr_accel_any_motion:0000000000000088 $d
     /tmp/ccO72alg.s:31829  .text.bno055_get_intr_accel_no_motion:0000000000000000 $t
     /tmp/ccO72alg.s:31835  .text.bno055_get_intr_accel_no_motion:0000000000000000 bno055_get_intr_accel_no_motion
     /tmp/ccO72alg.s:31941  .text.bno055_get_intr_accel_no_motion:0000000000000058 $d
     /tmp/ccO72alg.s:31946  .text.bno055_set_intr_accel_no_motion:0000000000000000 $t
     /tmp/ccO72alg.s:31952  .text.bno055_set_intr_accel_no_motion:0000000000000000 bno055_set_intr_accel_no_motion
     /tmp/ccO72alg.s:32080  .text.bno055_set_intr_accel_no_motion:0000000000000080 $d
     /tmp/ccO72alg.s:32085  .text.bno055_get_accel_any_motion_thres:0000000000000000 $t
     /tmp/ccO72alg.s:32091  .text.bno055_get_accel_any_motion_thres:0000000000000000 bno055_get_accel_any_motion_thres
     /tmp/ccO72alg.s:32196  .text.bno055_get_accel_any_motion_thres:0000000000000058 $d
     /tmp/ccO72alg.s:32201  .text.bno055_set_accel_any_motion_thres:0000000000000000 $t
     /tmp/ccO72alg.s:32207  .text.bno055_set_accel_any_motion_thres:0000000000000000 bno055_set_accel_any_motion_thres
     /tmp/ccO72alg.s:32385  .text.bno055_set_accel_any_motion_thres:00000000000000a4 $d
     /tmp/ccO72alg.s:32390  .text.bno055_get_accel_any_motion_durn:0000000000000000 $t
     /tmp/ccO72alg.s:32396  .text.bno055_get_accel_any_motion_durn:0000000000000000 bno055_get_accel_any_motion_durn
     /tmp/ccO72alg.s:32502  .text.bno055_get_accel_any_motion_durn:000000000000005c $d
     /tmp/ccO72alg.s:32507  .text.bno055_set_accel_any_motion_durn:0000000000000000 $t
     /tmp/ccO72alg.s:32513  .text.bno055_set_accel_any_motion_durn:0000000000000000 bno055_set_accel_any_motion_durn
     /tmp/ccO72alg.s:32697  .text.bno055_set_accel_any_motion_durn:00000000000000b4 $d
     /tmp/ccO72alg.s:32702  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1148


     /tmp/ccO72alg.s:32708  .text.bno055_get_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_get_accel_any_motion_no_motion_axis_enable
     /tmp/ccO72alg.s:32871  .text.bno055_get_accel_any_motion_no_motion_axis_enable:00000000000000ac $d
     /tmp/ccO72alg.s:32876  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:32882  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000000 bno055_set_accel_any_motion_no_motion_axis_enable
     /tmp/ccO72alg.s:33177  .text.bno055_set_accel_any_motion_no_motion_axis_enable:0000000000000160 $d
     /tmp/ccO72alg.s:33182  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:33188  .text.bno055_get_accel_high_g_axis_enable:0000000000000000 bno055_get_accel_high_g_axis_enable
     /tmp/ccO72alg.s:33351  .text.bno055_get_accel_high_g_axis_enable:00000000000000a8 $d
     /tmp/ccO72alg.s:33356  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:33362  .text.bno055_set_accel_high_g_axis_enable:0000000000000000 bno055_set_accel_high_g_axis_enable
     /tmp/ccO72alg.s:33654  .text.bno055_set_accel_high_g_axis_enable:0000000000000158 $d
     /tmp/ccO72alg.s:33659  .text.bno055_get_accel_high_g_durn:0000000000000000 $t
     /tmp/ccO72alg.s:33665  .text.bno055_get_accel_high_g_durn:0000000000000000 bno055_get_accel_high_g_durn
     /tmp/ccO72alg.s:33770  .text.bno055_get_accel_high_g_durn:0000000000000058 $d
     /tmp/ccO72alg.s:33775  .text.bno055_set_accel_high_g_durn:0000000000000000 $t
     /tmp/ccO72alg.s:33781  .text.bno055_set_accel_high_g_durn:0000000000000000 bno055_set_accel_high_g_durn
     /tmp/ccO72alg.s:33960  .text.bno055_set_accel_high_g_durn:00000000000000a4 $d
     /tmp/ccO72alg.s:33965  .text.bno055_get_accel_high_g_thres:0000000000000000 $t
     /tmp/ccO72alg.s:33971  .text.bno055_get_accel_high_g_thres:0000000000000000 bno055_get_accel_high_g_thres
     /tmp/ccO72alg.s:34076  .text.bno055_get_accel_high_g_thres:0000000000000058 $d
     /tmp/ccO72alg.s:34081  .text.bno055_set_accel_high_g_thres:0000000000000000 $t
     /tmp/ccO72alg.s:34087  .text.bno055_set_accel_high_g_thres:0000000000000000 bno055_set_accel_high_g_thres
     /tmp/ccO72alg.s:34266  .text.bno055_set_accel_high_g_thres:00000000000000a4 $d
     /tmp/ccO72alg.s:34271  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/ccO72alg.s:34277  .text.bno055_get_accel_slow_no_motion_thres:0000000000000000 bno055_get_accel_slow_no_motion_thres
     /tmp/ccO72alg.s:34382  .text.bno055_get_accel_slow_no_motion_thres:0000000000000058 $d
     /tmp/ccO72alg.s:34387  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 $t
     /tmp/ccO72alg.s:34393  .text.bno055_set_accel_slow_no_motion_thres:0000000000000000 bno055_set_accel_slow_no_motion_thres
     /tmp/ccO72alg.s:34572  .text.bno055_set_accel_slow_no_motion_thres:00000000000000a4 $d
     /tmp/ccO72alg.s:34577  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/ccO72alg.s:34583  .text.bno055_get_accel_slow_no_motion_enable:0000000000000000 bno055_get_accel_slow_no_motion_enable
     /tmp/ccO72alg.s:34689  .text.bno055_get_accel_slow_no_motion_enable:000000000000005c $d
     /tmp/ccO72alg.s:34694  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 $t
     /tmp/ccO72alg.s:34700  .text.bno055_set_accel_slow_no_motion_enable:0000000000000000 bno055_set_accel_slow_no_motion_enable
     /tmp/ccO72alg.s:34885  .text.bno055_set_accel_slow_no_motion_enable:00000000000000b4 $d
     /tmp/ccO72alg.s:34890  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/ccO72alg.s:34896  .text.bno055_get_accel_slow_no_motion_durn:0000000000000000 bno055_get_accel_slow_no_motion_durn
     /tmp/ccO72alg.s:35002  .text.bno055_get_accel_slow_no_motion_durn:000000000000005c $d
     /tmp/ccO72alg.s:35007  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 $t
     /tmp/ccO72alg.s:35013  .text.bno055_set_accel_slow_no_motion_durn:0000000000000000 bno055_set_accel_slow_no_motion_durn
     /tmp/ccO72alg.s:35200  .text.bno055_set_accel_slow_no_motion_durn:00000000000000b8 $d
     /tmp/ccO72alg.s:35205  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:35211  .text.bno055_get_gyro_any_motion_axis_enable:0000000000000000 bno055_get_gyro_any_motion_axis_enable
     /tmp/ccO72alg.s:35374  .text.bno055_get_gyro_any_motion_axis_enable:00000000000000ac $d
     /tmp/ccO72alg.s:35379  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:35385  .text.bno055_set_gyro_any_motion_axis_enable:0000000000000000 bno055_set_gyro_any_motion_axis_enable
     /tmp/ccO72alg.s:35680  .text.bno055_set_gyro_any_motion_axis_enable:000000000000015c $d
     /tmp/ccO72alg.s:35685  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:35691  .text.bno055_get_gyro_highrate_axis_enable:0000000000000000 bno055_get_gyro_highrate_axis_enable
     /tmp/ccO72alg.s:35854  .text.bno055_get_gyro_highrate_axis_enable:00000000000000ac $d
     /tmp/ccO72alg.s:35859  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 $t
     /tmp/ccO72alg.s:35865  .text.bno055_set_gyro_highrate_axis_enable:0000000000000000 bno055_set_gyro_highrate_axis_enable
     /tmp/ccO72alg.s:36161  .text.bno055_set_gyro_highrate_axis_enable:0000000000000160 $d
     /tmp/ccO72alg.s:36166  .text.bno055_get_gyro_any_motion_filter:0000000000000000 $t
     /tmp/ccO72alg.s:36172  .text.bno055_get_gyro_any_motion_filter:0000000000000000 bno055_get_gyro_any_motion_filter
     /tmp/ccO72alg.s:36278  .text.bno055_get_gyro_any_motion_filter:000000000000005c $d
     /tmp/ccO72alg.s:36283  .text.bno055_set_gyro_any_motion_filter:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1149


     /tmp/ccO72alg.s:36289  .text.bno055_set_gyro_any_motion_filter:0000000000000000 bno055_set_gyro_any_motion_filter
     /tmp/ccO72alg.s:36476  .text.bno055_set_gyro_any_motion_filter:00000000000000b8 $d
     /tmp/ccO72alg.s:36481  .text.bno055_get_gyro_highrate_filter:0000000000000000 $t
     /tmp/ccO72alg.s:36487  .text.bno055_get_gyro_highrate_filter:0000000000000000 bno055_get_gyro_highrate_filter
     /tmp/ccO72alg.s:36593  .text.bno055_get_gyro_highrate_filter:0000000000000058 $d
     /tmp/ccO72alg.s:36598  .text.bno055_set_gyro_highrate_filter:0000000000000000 $t
     /tmp/ccO72alg.s:36604  .text.bno055_set_gyro_highrate_filter:0000000000000000 bno055_set_gyro_highrate_filter
     /tmp/ccO72alg.s:36786  .text.bno055_set_gyro_highrate_filter:00000000000000b0 $d
     /tmp/ccO72alg.s:36791  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/ccO72alg.s:36797  .text.bno055_get_gyro_highrate_x_thres:0000000000000000 bno055_get_gyro_highrate_x_thres
     /tmp/ccO72alg.s:36903  .text.bno055_get_gyro_highrate_x_thres:000000000000005c $d
     /tmp/ccO72alg.s:36908  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 $t
     /tmp/ccO72alg.s:36914  .text.bno055_set_gyro_highrate_x_thres:0000000000000000 bno055_set_gyro_highrate_x_thres
     /tmp/ccO72alg.s:37099  .text.bno055_set_gyro_highrate_x_thres:00000000000000b4 $d
     /tmp/ccO72alg.s:37104  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/ccO72alg.s:37110  .text.bno055_get_gyro_highrate_x_hyst:0000000000000000 bno055_get_gyro_highrate_x_hyst
     /tmp/ccO72alg.s:37216  .text.bno055_get_gyro_highrate_x_hyst:000000000000005c $d
     /tmp/ccO72alg.s:37221  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 $t
     /tmp/ccO72alg.s:37227  .text.bno055_set_gyro_highrate_x_hyst:0000000000000000 bno055_set_gyro_highrate_x_hyst
     /tmp/ccO72alg.s:37414  .text.bno055_set_gyro_highrate_x_hyst:00000000000000b8 $d
     /tmp/ccO72alg.s:37419  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/ccO72alg.s:37425  .text.bno055_get_gyro_highrate_x_durn:0000000000000000 bno055_get_gyro_highrate_x_durn
     /tmp/ccO72alg.s:37530  .text.bno055_get_gyro_highrate_x_durn:0000000000000058 $d
     /tmp/ccO72alg.s:37535  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 $t
     /tmp/ccO72alg.s:37541  .text.bno055_set_gyro_highrate_x_durn:0000000000000000 bno055_set_gyro_highrate_x_durn
     /tmp/ccO72alg.s:37720  .text.bno055_set_gyro_highrate_x_durn:00000000000000a4 $d
     /tmp/ccO72alg.s:37725  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/ccO72alg.s:37731  .text.bno055_get_gyro_highrate_y_thres:0000000000000000 bno055_get_gyro_highrate_y_thres
     /tmp/ccO72alg.s:37837  .text.bno055_get_gyro_highrate_y_thres:000000000000005c $d
     /tmp/ccO72alg.s:37842  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 $t
     /tmp/ccO72alg.s:37848  .text.bno055_set_gyro_highrate_y_thres:0000000000000000 bno055_set_gyro_highrate_y_thres
     /tmp/ccO72alg.s:38033  .text.bno055_set_gyro_highrate_y_thres:00000000000000b4 $d
     /tmp/ccO72alg.s:38038  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/ccO72alg.s:38044  .text.bno055_get_gyro_highrate_y_hyst:0000000000000000 bno055_get_gyro_highrate_y_hyst
     /tmp/ccO72alg.s:38150  .text.bno055_get_gyro_highrate_y_hyst:000000000000005c $d
     /tmp/ccO72alg.s:38155  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 $t
     /tmp/ccO72alg.s:38161  .text.bno055_set_gyro_highrate_y_hyst:0000000000000000 bno055_set_gyro_highrate_y_hyst
     /tmp/ccO72alg.s:38348  .text.bno055_set_gyro_highrate_y_hyst:00000000000000b8 $d
     /tmp/ccO72alg.s:38353  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/ccO72alg.s:38359  .text.bno055_get_gyro_highrate_y_durn:0000000000000000 bno055_get_gyro_highrate_y_durn
     /tmp/ccO72alg.s:38464  .text.bno055_get_gyro_highrate_y_durn:0000000000000058 $d
     /tmp/ccO72alg.s:38469  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 $t
     /tmp/ccO72alg.s:38475  .text.bno055_set_gyro_highrate_y_durn:0000000000000000 bno055_set_gyro_highrate_y_durn
     /tmp/ccO72alg.s:38654  .text.bno055_set_gyro_highrate_y_durn:00000000000000a4 $d
     /tmp/ccO72alg.s:38659  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/ccO72alg.s:38665  .text.bno055_get_gyro_highrate_z_thres:0000000000000000 bno055_get_gyro_highrate_z_thres
     /tmp/ccO72alg.s:38771  .text.bno055_get_gyro_highrate_z_thres:000000000000005c $d
     /tmp/ccO72alg.s:38776  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 $t
     /tmp/ccO72alg.s:38782  .text.bno055_set_gyro_highrate_z_thres:0000000000000000 bno055_set_gyro_highrate_z_thres
     /tmp/ccO72alg.s:38967  .text.bno055_set_gyro_highrate_z_thres:00000000000000b4 $d
     /tmp/ccO72alg.s:38972  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/ccO72alg.s:38978  .text.bno055_get_gyro_highrate_z_hyst:0000000000000000 bno055_get_gyro_highrate_z_hyst
     /tmp/ccO72alg.s:39084  .text.bno055_get_gyro_highrate_z_hyst:000000000000005c $d
     /tmp/ccO72alg.s:39089  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 $t
     /tmp/ccO72alg.s:39095  .text.bno055_set_gyro_highrate_z_hyst:0000000000000000 bno055_set_gyro_highrate_z_hyst
     /tmp/ccO72alg.s:39282  .text.bno055_set_gyro_highrate_z_hyst:00000000000000b8 $d
     /tmp/ccO72alg.s:39287  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 $t
ARM GAS  /tmp/ccO72alg.s 			page 1150


     /tmp/ccO72alg.s:39293  .text.bno055_get_gyro_highrate_z_durn:0000000000000000 bno055_get_gyro_highrate_z_durn
     /tmp/ccO72alg.s:39398  .text.bno055_get_gyro_highrate_z_durn:0000000000000058 $d
     /tmp/ccO72alg.s:39403  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 $t
     /tmp/ccO72alg.s:39409  .text.bno055_set_gyro_highrate_z_durn:0000000000000000 bno055_set_gyro_highrate_z_durn
     /tmp/ccO72alg.s:39587  .text.bno055_set_gyro_highrate_z_durn:00000000000000a4 $d
     /tmp/ccO72alg.s:39592  .text.bno055_get_gyro_any_motion_thres:0000000000000000 $t
     /tmp/ccO72alg.s:39598  .text.bno055_get_gyro_any_motion_thres:0000000000000000 bno055_get_gyro_any_motion_thres
     /tmp/ccO72alg.s:39704  .text.bno055_get_gyro_any_motion_thres:000000000000005c $d
     /tmp/ccO72alg.s:39709  .text.bno055_set_gyro_any_motion_thres:0000000000000000 $t
     /tmp/ccO72alg.s:39715  .text.bno055_set_gyro_any_motion_thres:0000000000000000 bno055_set_gyro_any_motion_thres
     /tmp/ccO72alg.s:39900  .text.bno055_set_gyro_any_motion_thres:00000000000000b4 $d
     /tmp/ccO72alg.s:39905  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/ccO72alg.s:39911  .text.bno055_get_gyro_any_motion_slope_samples:0000000000000000 bno055_get_gyro_any_motion_slope_samples
     /tmp/ccO72alg.s:40017  .text.bno055_get_gyro_any_motion_slope_samples:000000000000005c $d
     /tmp/ccO72alg.s:40022  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 $t
     /tmp/ccO72alg.s:40028  .text.bno055_set_gyro_any_motion_slope_samples:0000000000000000 bno055_set_gyro_any_motion_slope_samples
     /tmp/ccO72alg.s:40212  .text.bno055_set_gyro_any_motion_slope_samples:00000000000000b4 $d
     /tmp/ccO72alg.s:40217  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/ccO72alg.s:40223  .text.bno055_get_gyro_any_motion_awake_durn:0000000000000000 bno055_get_gyro_any_motion_awake_durn
     /tmp/ccO72alg.s:40329  .text.bno055_get_gyro_any_motion_awake_durn:000000000000005c $d
     /tmp/ccO72alg.s:40334  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 $t
     /tmp/ccO72alg.s:40340  .text.bno055_set_gyro_any_motion_awake_durn:0000000000000000 bno055_set_gyro_any_motion_awake_durn
     /tmp/ccO72alg.s:40526  .text.bno055_set_gyro_any_motion_awake_durn:00000000000000b8 $d
     /tmp/ccO72alg.s:40531  .rodata:0000000000000000 $d
     /tmp/ccO72alg.s:40542  .bss.p_bno055:0000000000000000 $d
     /tmp/ccO72alg.s:40546  .bss.p_bno055:0000000000000000 p_bno055
     /tmp/ccO72alg.s:20055  .text.bno055_set_axis_remap_value:0000000000000059 $d
     /tmp/ccO72alg.s:20055  .text.bno055_set_axis_remap_value:000000000000005a $t
     /tmp/ccO72alg.s:28722  .text.bno055_set_gyro_power_mode:000000000000005f $d
     /tmp/ccO72alg.s:28722  .text.bno055_set_gyro_power_mode:0000000000000060 $t

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
__aeabi_dadd
